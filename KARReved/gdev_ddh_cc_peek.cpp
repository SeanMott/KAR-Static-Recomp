//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_DBQueryData.hpp"
#include "fn_DBRead.hpp"
#include "fn_CircleBufferWriteBytes.hpp"



void gdev_ddh_cc_peek(PPC::Runtime::GCContext* context)
{
/*803C2F4C 003BFD4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x510, context->r1));
/*803C2F50 003BFD50*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C2F54 003BFD54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x514, context->r1));
/*803C2F58 003BFD58*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50c, context->r1));
/*803C2F5C 003BFD5C*/ PPC::Runtime::ASM::bl(fn_DBQueryData);
/* 803C2F60 003BFD60  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803C2F64 003BFD64*/ PPC::Runtime::ASM::bgt(.L_803C2F70);
/*803C2F68 003BFD68*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C2F6C 003BFD6C*/ PPC::Runtime::ASM::b(.L_803C2FA8);
RUNTIME_PPC_JUMP_LABEL(.L_803C2F70, 0x803C2F70) //this is a jump label
/*803C2F70 003BFD70*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*803C2F74 003BFD74*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803C2F78 003BFD78*/ PPC::Runtime::ASM::bl(fn_DBRead);
/*803C2F7C 003BFD7C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803C2F80 003BFD80*/ PPC::Runtime::ASM::bne(.L_803C2F9C);
/*803C2F84 003BFD84*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056CB20 @ Get_MemoryOffset_HighBit);
/*803C2F88 003BFD88*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*803C2F8C 003BFD8C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8056CB20 @ Get_MemoryOffset_LowBit);
/*803C2F90 003BFD90*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803C2F94 003BFD94*/ PPC::Runtime::ASM::bl(fn_CircleBufferWriteBytes);
/*803C2F98 003BFD98*/ PPC::Runtime::ASM::b(.L_803C2FA4);
RUNTIME_PPC_JUMP_LABEL(.L_803C2F9C, 0x803C2F9C) //this is a jump label
/*803C2F9C 003BFD9C*/ PPC::Runtime::ASM::li(context->r3, -0x2719);
/*803C2FA0 003BFDA0*/ PPC::Runtime::ASM::b(.L_803C2FA8);
RUNTIME_PPC_JUMP_LABEL(.L_803C2FA4, 0x803C2FA4) //this is a jump label
/*803C2FA4 003BFDA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_803C2FA8, 0x803C2FA8) //this is a jump label
/*803C2FA8 003BFDA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x514, context->r1));
/*803C2FAC 003BFDAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50c, context->r1));
/*803C2FB0 003BFDB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C2FB4 003BFDB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x510);
/*803C2FB8 003BFDB8*/ PPC::Runtime::ASM::blr();
}