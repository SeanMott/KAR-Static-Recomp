//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000BE74(PPC::Runtime::GCContext* context)
{
/*8000BE74 00008C74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000BE78 00008C78*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000BE7C 00008C7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BE80 00008C80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BE84 00008C84*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8000BE88 00008C88*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BE8C 00008C8C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000BE90 00008C90*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BE94 00008C94*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8000BE98 00008C98*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x9);
/*8000BE9C 00008C9C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0xd22);
/*8000BEA0 00008CA0*/ PPC::Runtime::ASM::stbx(context->r31, context->r3, context->r0);
/*8000BEA4 00008CA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BEA8 00008CA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BEAC 00008CAC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BEB0 00008CB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000BEB4 00008CB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000BEB8 00008CB8*/ PPC::Runtime::ASM::blr();
}