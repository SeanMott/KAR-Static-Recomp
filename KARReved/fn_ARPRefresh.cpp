//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_OSCancelAlarm.hpp"
#include "fn_DiscardPendingPackets.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_ARPRefresh(PPC::Runtime::GCContext* context)
{
/*8046CAC4 004698C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046CAC8 004698C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046CACC 004698CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8046CAD0 004698D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8046CAD4 004698D4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8046CAD8 004698D8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8046CADC 004698DC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8046CAE0 004698E0*/ PPC::Runtime::ASM::b(.L_8046CB74);
RUNTIME_PPC_JUMP_LABEL(.L_8046CAE4, 0x8046CAE4) //this is a jump label
/*8046CAE4 004698E4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8046CAE8 004698E8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*8046CAEC 004698EC*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8046CAF0 004698F0*/ PPC::Runtime::ASM::bne(.L_8046CB04);
/*8046CAF4 004698F4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046CAF8 004698F8*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DE600 @ Get_MemoryOffset_SDA21);
/*8046CAFC 004698FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8046CB00 00469900*/ PPC::Runtime::ASM::b(.L_8046CB0C);
RUNTIME_PPC_JUMP_LABEL(.L_8046CB04, 0x8046CB04) //this is a jump label
/*8046CB04 00469904*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046CB08 00469908*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8046CB0C, 0x8046CB0C) //this is a jump label
/*8046CB0C 0046990C*/ PPC::Runtime::ASM::stw(context->r4, STRUCT_BYTE4_COUNT_1805DE600 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046CB10 00469910*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*8046CB14 00469914*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*8046CB18 00469918*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8046CB1C 0046991C*/ PPC::Runtime::ASM::beq(.L_8046CB2C);
/*8046CB20 00469920*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r3));
/*8046CB24 00469924*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 8046CB28 00469928  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_8046CB2C, 0x8046CB2C) //this is a jump label
/*8046CB2C 0046992C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x8);
/*8046CB30 00469930*/ PPC::Runtime::ASM::bl(fn_OSCancelAlarm);
/*8046CB34 00469934*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046CB38 00469938*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*8046CB3C 0046993C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE608 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046CB40 00469940*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8046CB44 00469944*/ PPC::Runtime::ASM::bne(.L_8046CB54);
/*8046CB48 00469948*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DE608 @ Get_MemoryOffset_SDA21);
/*8046CB4C 0046994C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8046CB50 00469950*/ PPC::Runtime::ASM::b(.L_8046CB58);
RUNTIME_PPC_JUMP_LABEL(.L_8046CB54, 0x8046CB54) //this is a jump label
/*8046CB54 00469954*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8046CB58, 0x8046CB58) //this is a jump label
/*8046CB58 00469958*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8046CB5C 0046995C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046CB60 00469960*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8046CB64 00469964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8046CB68 00469968*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8046CB6C 0046996C*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE608 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046CB70 00469970*/ PPC::Runtime::ASM::bl(fn_DiscardPendingPackets);
RUNTIME_PPC_JUMP_LABEL(.L_8046CB74, 0x8046CB74) //this is a jump label
/*8046CB74 00469974*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE600 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046CB78 00469978*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8046CB7C 0046997C*/ PPC::Runtime::ASM::bne(.L_8046CAE4);
/*8046CB80 00469980*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8046CB84 00469984*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8046CB88 00469988*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8046CB8C 0046998C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8046CB90 00469990*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8046CB94 00469994*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8046CB98 00469998*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046CB9C 0046999C*/ PPC::Runtime::ASM::blr();
}