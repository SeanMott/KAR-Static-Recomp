//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5B94.hpp"



void fn_800B92DC(PPC::Runtime::GCContext* context)
{
/*800B92DC 000B60DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800B92E0 000B60E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B92E4 000B60E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800B92E8 000B60E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800B92EC 000B60EC*/ PPC::Runtime::ASM::blt(.L_800B92F8);
/*800B92F0 000B60F0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800B92F4 000B60F4*/ PPC::Runtime::ASM::blt(.L_800B9300);
RUNTIME_PPC_JUMP_LABEL(.L_800B92F8, 0x800B92F8) //this is a jump label
/*800B92F8 000B60F8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B92FC 000B60FC*/ PPC::Runtime::ASM::b(.L_800B9314);
RUNTIME_PPC_JUMP_LABEL(.L_800B9300, 0x800B9300) //this is a jump label
/*800B9300 000B6100*/ PPC::Runtime::ASM::lis(context->r6, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B9304 000B6104*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800B9308 000B6108*/ PPC::Runtime::ASM::addi(context->r3, context->r6, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B930C 000B610C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800B9310 000B6110*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B9314, 0x800B9314) //this is a jump label
/*800B9314 000B6114*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9318 000B6118*/ PPC::Runtime::ASM::beq(.L_800B9324);
/*800B931C 000B611C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800B9320 000B6120*/ PPC::Runtime::ASM::b(.L_800B9328);
RUNTIME_PPC_JUMP_LABEL(.L_800B9324, 0x800B9324) //this is a jump label
/*800B9324 000B6124*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9328, 0x800B9328) //this is a jump label
/*800B9328 000B6128*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B932C 000B612C*/ PPC::Runtime::ASM::beq(.L_800B9338);
/*800B9330 000B6130*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800B9334 000B6134*/ PPC::Runtime::ASM::b(.L_800B933C);
RUNTIME_PPC_JUMP_LABEL(.L_800B9338, 0x800B9338) //this is a jump label
/*800B9338 000B6138*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B933C, 0x800B933C) //this is a jump label
/*800B933C 000B613C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9340 000B6140*/ PPC::Runtime::ASM::beq(.L_800B9360);
/*800B9344 000B6144*/ PPC::Runtime::ASM::li(context->r0, 0x1e);
/*800B9348 000B6148*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800B934C 000B614C*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*800B9350 000B6150*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800B9354 000B6154*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800B9358 000B6158*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B935C 000B615C*/ PPC::Runtime::ASM::bl(fn_800B5B94);
RUNTIME_PPC_JUMP_LABEL(.L_800B9360, 0x800B9360) //this is a jump label
/*800B9360 000B6160*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800B9364 000B6164*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B9368 000B6168*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800B936C 000B616C*/ PPC::Runtime::ASM::blr();
}