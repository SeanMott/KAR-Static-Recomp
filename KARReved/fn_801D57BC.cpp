//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D5FB4.hpp"
#include "fn_801D5F90.hpp"
#include "fn_801D5CE4.hpp"



void fn_801D57BC(PPC::Runtime::GCContext* context)
{
/*801D57BC 001D25BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D57C0 001D25C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D57C4 001D25C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D57C8 001D25C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D57CC 001D25CC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801D57D0 001D25D0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*801D57D4 001D25D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r4));
/* 801D57D8 001D25D8  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801D57DC 001D25DC*/ PPC::Runtime::ASM::beq(.L_801D5800);
/*801D57E0 001D25E0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD858 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D57E4 001D25E4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x88);
/*801D57E8 001D25E8*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*801D57EC 001D25EC*/ PPC::Runtime::ASM::bne(.L_801D57F8);
/*801D57F0 001D25F0*/ PPC::Runtime::ASM::bl(fn_801D5FB4);
/*801D57F4 001D25F4*/ PPC::Runtime::ASM::b(.L_801D5804);
RUNTIME_PPC_JUMP_LABEL(.L_801D57F8, 0x801D57F8) //this is a jump label
/*801D57F8 001D25F8*/ PPC::Runtime::ASM::bl(fn_801D5F90);
/*801D57FC 001D25FC*/ PPC::Runtime::ASM::b(.L_801D5804);
RUNTIME_PPC_JUMP_LABEL(.L_801D5800, 0x801D5800) //this is a jump label
/*801D5800 001D2600*/ PPC::Runtime::ASM::bl(fn_801D5CE4);
RUNTIME_PPC_JUMP_LABEL(.L_801D5804, 0x801D5804) //this is a jump label
/*801D5804 001D2604*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801D5808 001D2608*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*801D580C 001D260C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801D5810 001D2610*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D5814 001D2614*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5818 001D2618*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D581C 001D261C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D5820 001D2620*/ PPC::Runtime::ASM::blr();
}