//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138C1C.hpp"



void fn_80174688(PPC::Runtime::GCContext* context)
{
/*80174688 00171488*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8017468C 0017148C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80174690 00171490*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80174694 00171494*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80174698 00171498*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8017469C 0017149C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801746A0 001714A0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801746A4 001714A4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801746A8 001714A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcd0, context->r3));
/*801746AC 001714AC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801746B0 001714B0*/ PPC::Runtime::ASM::beq(.L_801746D8);
/*801746B4 001714B4*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*801746B8 001714B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801746BC 001714BC*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x78);
/*801746C0 001714C0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0C40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801746C4 001714C4*/ PPC::Runtime::ASM::extsb(context->r4, context->r31);
/*801746C8 001714C8*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801746CC 001714CC*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r3));
/*801746D0 001714D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*801746D4 001714D4*/ PPC::Runtime::ASM::bl(fn_80138C1C);
RUNTIME_PPC_JUMP_LABEL(.L_801746D8, 0x801746D8) //this is a jump label
/*801746D8 001714D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801746DC 001714DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801746E0 001714E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801746E4 001714E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801746E8 001714E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801746EC 001714EC*/ PPC::Runtime::ASM::blr();
}