//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801F9868(PPC::Runtime::GCContext* context)
{
/*801F9868 001F6668*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F986C 001F666C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F9870 001F6670*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2160 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9874 001F6674*/ PPC::Runtime::ASM::li(context->r4, 0x1b);
/*801F9878 001F6678*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F987C 001F667C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801F9880 001F6680*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2164 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9884 001F6684*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801F9888 001F6688*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F988C 001F668C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F9890 001F6690*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801F9894 001F6694*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F9898 001F6698*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F989C 001F669C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*801F98A0 001F66A0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F98A4 001F66A4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F98A8 001F66A8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801F98AC 001F66AC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F98B0 001F66B0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801F98B4 001F66B4*/ PPC::Runtime::ASM::extrwi(context->r0, context->r3, 2, 26);
/*801F98B8 001F66B8*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801F98BC 001F66BC*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 4, 26, 27);
/*801F98C0 001F66C0*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801F98C4 001F66C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F98C8 001F66C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F98CC 001F66CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F98D0 001F66D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F98D4 001F66D4*/ PPC::Runtime::ASM::blr();
}