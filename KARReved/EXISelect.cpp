//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "__EXIProbe.hpp"
#include "OSRestoreInterrupts.hpp"
#include "__OSMaskInterrupts.hpp"
#include "__OSMaskInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void EXISelect(PPC::Runtime::GCContext* context)
{
/*803EABC0 003E79C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EABC4 003E79C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EABC8 003E79C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803EABCC 003E79CC*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EABD0 003E79D0*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*803EABD4 003E79D4*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*803EABD8 003E79D8*/ PPC::Runtime::ASM::addi(context->r29, context->r5, 0x0);
/*803EABDC 003E79DC*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EABE0 003E79E0*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EABE4 003E79E4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EABE8 003E79E8*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*803EABEC 003E79EC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EABF0 003E79F0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803EABF4 003E79F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EABF8 003E79F8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 29, 29);
/*803EABFC 003E79FC*/ PPC::Runtime::ASM::bne(.L_803EAC44);
/*803EAC00 003E7A00*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x2);
/*803EAC04 003E7A04*/ PPC::Runtime::ASM::beq(.L_803EAC54);
/*803EAC08 003E7A08*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*803EAC0C 003E7A0C*/ PPC::Runtime::ASM::bne(.L_803EAC2C);
/*803EAC10 003E7A10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAC14 003E7A14*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*803EAC18 003E7A18*/ PPC::Runtime::ASM::bne(.L_803EAC2C);
/*803EAC1C 003E7A1C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803EAC20 003E7A20*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EAC24 003E7A24*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EAC28 003E7A28*/ PPC::Runtime::ASM::beq(.L_803EAC44);
RUNTIME_PPC_JUMP_LABEL(.L_803EAC2C, 0x803EAC2C) //this is a jump label
/*803EAC2C 003E7A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAC30 003E7A30*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 27);
/*803EAC34 003E7A34*/ PPC::Runtime::ASM::beq(.L_803EAC44);
/*803EAC38 003E7A38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803EAC3C 003E7A3C*/ PPC::Runtime::ASM::cmplw(context->r0, context->r28);
/*803EAC40 003E7A40*/ PPC::Runtime::ASM::beq(.L_803EAC54);
RUNTIME_PPC_JUMP_LABEL(.L_803EAC44, 0x803EAC44) //this is a jump label
/*803EAC44 003E7A44*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EAC48 003E7A48*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAC4C 003E7A4C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EAC50 003E7A50*/ PPC::Runtime::ASM::b(.L_803EACD8);
RUNTIME_PPC_JUMP_LABEL(.L_803EAC54, 0x803EAC54) //this is a jump label
/*803EAC54 003E7A54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAC58 003E7A58*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x4);
/*803EAC5C 003E7A5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAC60 003E7A60*/ PPC::Runtime::ASM::mulli(context->r0, context->r27, 0x14);
/*803EAC64 003E7A64*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803EAC68 003E7A68*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x6800);
/*803EAC6C 003E7A6C*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*803EAC70 003E7A70*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803EAC74 003E7A74*/ PPC::Runtime::ASM::andi.(context->r5, context->r5, 0x405);
/*803EAC78 003E7A78*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803EAC7C 003E7A7C*/ PPC::Runtime::ASM::slw(context->r0, context->r0, context->r28);
/*803EAC80 003E7A80*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 7);
/*803EAC84 003E7A84*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 4);
/*803EAC88 003E7A88*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803EAC8C 003E7A8C*/ PPC::Runtime::ASM::or(context->r5, context->r5, context->r0);
/*803EAC90 003E7A90*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803EAC94 003E7A94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAC98 003E7A98*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*803EAC9C 003E7A9C*/ PPC::Runtime::ASM::beq(.L_803EACCC);
/*803EACA0 003E7AA0*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x1);
/*803EACA4 003E7AA4*/ PPC::Runtime::ASM::beq(.L_803EACC4);
/*803EACA8 003E7AA8*/ PPC::Runtime::ASM::bge(.L_803EACCC);
/*803EACAC 003E7AAC*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*803EACB0 003E7AB0*/ PPC::Runtime::ASM::bge(.L_803EACB8);
/*803EACB4 003E7AB4*/ PPC::Runtime::ASM::b(.L_803EACCC);
RUNTIME_PPC_JUMP_LABEL(.L_803EACB8, 0x803EACB8) //this is a jump label
/*803EACB8 003E7AB8*/ PPC::Runtime::ASM::lis(context->r3, 0x10);
/*803EACBC 003E7ABC*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
/*803EACC0 003E7AC0*/ PPC::Runtime::ASM::b(.L_803EACCC);
RUNTIME_PPC_JUMP_LABEL(.L_803EACC4, 0x803EACC4) //this is a jump label
/*803EACC4 003E7AC4*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*803EACC8 003E7AC8*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
RUNTIME_PPC_JUMP_LABEL(.L_803EACCC, 0x803EACCC) //this is a jump label
/*803EACCC 003E7ACC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EACD0 003E7AD0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EACD4 003E7AD4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EACD8, 0x803EACD8) //this is a jump label
/*803EACD8 003E7AD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803EACDC 003E7ADC*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EACE0 003E7AE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803EACE4 003E7AE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EACE8 003E7AE8*/ PPC::Runtime::ASM::blr();
}