//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"
#include "fn_80117A68.hpp"



void fn_80123AB8(PPC::Runtime::GCContext* context)
{
/*80123AB8 001208B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80123ABC 001208BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80123AC0 001208C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80123AC4 001208C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80123AC8 001208C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80123ACC 001208CC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80123AD0 001208D0*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80123AD4 001208D4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80123AD8 001208D8*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80123ADC 001208DC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80123AE0 001208E0*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_80123AE4, 0x80123AE4) //this is a jump label
/*80123AE4 001208E4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80123AE8 001208E8*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r29);
/*80123AEC 001208EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5a4, context->r30));
/*80123AF0 001208F0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80123AF4 001208F4*/ PPC::Runtime::ASM::beq(.L_80123B08);
/*80123AF8 001208F8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80123AFC 001208FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5a4, context->r30));
/*80123B00 00120900*/ PPC::Runtime::ASM::extsb(context->r3, context->r28);
/*80123B04 00120904*/ PPC::Runtime::ASM::bl(fn_80117A68);
RUNTIME_PPC_JUMP_LABEL(.L_80123B08, 0x80123B08) //this is a jump label
/*80123B08 00120908*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80123B0C 0012090C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*80123B10 00120910*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*80123B14 00120914*/ PPC::Runtime::ASM::blt(.L_80123AE4);
/*80123B18 00120918*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80123B1C 0012091C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80123B20 00120920*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80123B24 00120924*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80123B28 00120928*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80123B2C 0012092C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80123B30 00120930*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80123B34 00120934*/ PPC::Runtime::ASM::blr();
}