//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"



void fn_GXTokenInterruptHandler(PPC::Runtime::GCContext* context)
{
/*803CC044 003C8E44*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CC048 003C8E48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CC04C 003C8E4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x2e0, context->r1));
/*803CC050 003C8E50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r1));
/*803CC054 003C8E54*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r1));
/*803CC058 003C8E58*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*803CC05C 003C8E5C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDE50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC060 003C8E60*/ PPC::Runtime::ASM::lwz(context->r3, __peReg @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC064 003C8E64*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803CC068 003C8E68*/ PPC::Runtime::ASM::lhz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r3));
/*803CC06C 003C8E6C*/ PPC::Runtime::ASM::beq(.L_803CC0A0);
/*803CC070 003C8E70*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803CC074 003C8E74*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803CC078 003C8E78*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803CC07C 003C8E7C*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803CC080 003C8E80*/ PPC::Runtime::ASM::lwz(context->r12, STRUCT_BYTE4_COUNT_1805DDE50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC084 003C8E84*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803CC088 003C8E88*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 803CC08C 003C8E8C  4E 80 00 21 */ blrl
/*803CC090 003C8E90*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803CC094 003C8E94*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803CC098 003C8E98*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803CC09C 003C8E9C*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
RUNTIME_PPC_JUMP_LABEL(.L_803CC0A0, 0x803CC0A0) //this is a jump label
/*803CC0A0 003C8EA0*/ PPC::Runtime::ASM::lwz(context->r3, __peReg @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC0A4 003C8EA4*/ PPC::Runtime::ASM::lhzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r3));
/*803CC0A8 003C8EA8*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 30, 28);
/*803CC0AC 003C8EAC*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x4);
/*803CC0B0 003C8EB0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803CC0B4 003C8EB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r1));
/*803CC0B8 003C8EB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r1));
/*803CC0BC 003C8EBC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r1));
/*803CC0C0 003C8EC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x2e0);
/*803CC0C4 003C8EC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CC0C8 003C8EC8*/ PPC::Runtime::ASM::blr();
}