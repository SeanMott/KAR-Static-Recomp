//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80058920.hpp"
#include "fn_80058920.hpp"



void fn_80059628(PPC::Runtime::GCContext* context)
{
/*80059628 00056428*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005962C 0005642C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80059630 00056430*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80059634 00056434*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80059638 00056438  7C 9F 23 79 */ mr. context->r31 , context->r4
/*8005963C 0005643C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80059640 00056440*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80059644 00056444*/ PPC::Runtime::ASM::bne(.L_8005965C);
/*80059648 00056448*/ PPC::Runtime::ASM::lis(context->r3, String_ "lbarchive." Get_MemoryOffset_HighBit);
/*8005964C 0005644C*/ PPC::Runtime::ASM::li(context->r4, 0x111);
/*80059650 00056450*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "lbarchive." Get_MemoryOffset_LowBit);
/*80059654 00056454*/ PPC::Runtime::ASM::li(context->r5, SoemStructBlobHandle_543 @ Get_MemoryOffset_SDA21);
/*80059658 00056458*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005965C, 0x8005965C) //this is a jump label
/*8005965C 0005645C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/* 80059660 00056460  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*80059664 00056464*/ PPC::Runtime::ASM::bne(.L_80059680);
/*80059668 00056468*/ PPC::Runtime::ASM::lis(context->r3, String_ "lbarchive." Get_MemoryOffset_HighBit);
/*8005966C 0005646C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_204 @ Get_MemoryOffset_HighBit);
/*80059670 00056470*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "lbarchive." Get_MemoryOffset_LowBit);
/*80059674 00056474*/ PPC::Runtime::ASM::li(context->r4, 0x112);
/*80059678 00056478*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_204 @ Get_MemoryOffset_LowBit);
/*8005967C 0005647C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80059680, 0x80059680) //this is a jump label
/*80059680 00056480*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*80059684 00056484*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80059688 00056488*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x20);
/*8005968C 0005648C*/ PPC::Runtime::ASM::bl(fn_80058920);
/*80059690 00056490*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80059694 00056494*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80059698 00056498*/ PPC::Runtime::ASM::bl(fn_80058920);
/*8005969C 0005649C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800596A0 000564A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800596A4 000564A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800596A8 000564A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800596AC 000564AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800596B0 000564B0*/ PPC::Runtime::ASM::blr();
}