//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005C6DC.hpp"



void fn_8005D548(PPC::Runtime::GCContext* context)
{
/*8005D548 0005A348*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005D54C 0005A34C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005D550 0005A350*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D554 0005A354*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D558 0005A358*/ PPC::Runtime::ASM::bl(fn_8005C6DC);
/*8005D55C 0005A35C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005D560 0005A360*/ PPC::Runtime::ASM::bne(.L_8005D56C);
/*8005D564 0005A364*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8005D568 0005A368*/ PPC::Runtime::ASM::b(.L_8005D5B0);
RUNTIME_PPC_JUMP_LABEL(.L_8005D56C, 0x8005D56C) //this is a jump label
/*8005D56C 0005A36C*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005D570 0005A370*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*8005D574 0005A374*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005D578 0005A378*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x22);
/*8005D57C 0005A37C*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r3);
/*8005D580 0005A380*/ PPC::Runtime::ASM::li(context->r4, 0x3e7);
/*8005D584 0005A384*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43, context->r5));
/*8005D588 0005A388*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D58C 0005A38C*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a1, context->r5));
/*8005D590 0005A390*/ PPC::Runtime::ASM::bl(fn_80444984);
/*8005D594 0005A394*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8005D598 0005A398*/ PPC::Runtime::ASM::bne(.L_8005D5B0);
/*8005D59C 0005A39C*/ PPC::Runtime::ASM::lis(context->r3, String_lbaudio.c @ Get_MemoryOffset_HighBit);
/*8005D5A0 0005A3A0*/ PPC::Runtime::ASM::li(context->r4, 0x709);
/*8005D5A4 0005A3A4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_lbaudio.c @ Get_MemoryOffset_LowBit);
/*8005D5A8 0005A3A8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*8005D5AC 0005A3AC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005D5B0, 0x8005D5B0) //this is a jump label
/*8005D5B0 0005A3B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D5B4 0005A3B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D5B8 0005A3B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D5BC 0005A3BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005D5C0 0005A3C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005D5C4 0005A3C4*/ PPC::Runtime::ASM::blr();
}