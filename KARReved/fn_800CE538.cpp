//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E8FD0.hpp"
#include "fn_800E9DA0.hpp"
#include "fn_800DE034.hpp"
#include "fn_800E635C.hpp"
#include "fn_800EEA5C.hpp"
#include "fn_800E51DC.hpp"
#include "fn_800DE748.hpp"
#include "fn_800DE1A8.hpp"
#include "fn_800F439C.hpp"
#include "fn_800D7060.hpp"
#include "fn_800D8C28.hpp"
#include "fn_800D5F1C.hpp"
#include "fn_800DC144.hpp"
#include "fn_800EEFB0.hpp"



void fn_800CE538(PPC::Runtime::GCContext* context)
{
/*800CE538 000CB338*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800CE53C 000CB33C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CE540 000CB340*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CE544 000CB344*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CE548 000CB348*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800CE54C 000CB34C*/ PPC::Runtime::ASM::bl(fn_800E8FD0);
/*800CE550 000CB350*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE554 000CB354*/ PPC::Runtime::ASM::bl(fn_800E9DA0);
/*800CE558 000CB358*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE55C 000CB35C*/ PPC::Runtime::ASM::bl(fn_800DE034);
/*800CE560 000CB360*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE564 000CB364*/ PPC::Runtime::ASM::bl(fn_800E635C);
/*800CE568 000CB368*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE56C 000CB36C*/ PPC::Runtime::ASM::bl(fn_800EEA5C);
/*800CE570 000CB370*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE574 000CB374*/ PPC::Runtime::ASM::bl(fn_800E51DC);
/*800CE578 000CB378*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE57C 000CB37C*/ PPC::Runtime::ASM::bl(fn_800DE748);
/*800CE580 000CB380*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE584 000CB384*/ PPC::Runtime::ASM::bl(fn_800DE1A8);
/*800CE588 000CB388*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE58C 000CB38C*/ PPC::Runtime::ASM::bl(fn_800F439C);
/*800CE590 000CB390*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE594 000CB394*/ PPC::Runtime::ASM::bl(fn_800D7060);
/*800CE598 000CB398*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE59C 000CB39C*/ PPC::Runtime::ASM::bl(fn_800D8C28);
/*800CE5A0 000CB3A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE5A4 000CB3A4*/ PPC::Runtime::ASM::bl(fn_800D5F1C);
/*800CE5A8 000CB3A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE5AC 000CB3AC*/ PPC::Runtime::ASM::bl(fn_800DC144);
/*800CE5B0 000CB3B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE5B4 000CB3B4*/ PPC::Runtime::ASM::bl(fn_800EEFB0);
/*800CE5B8 000CB3B8*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557558 @ Get_MemoryOffset_HighBit);
/*800CE5BC 000CB3BC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800CE5C0 000CB3C0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80557558 @ Get_MemoryOffset_LowBit);
/*800CE5C4 000CB3C4*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*800CE5C8 000CB3C8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800CE5CC 000CB3CC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CE5D0 000CB3D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CE5D4 000CB3D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CE5D8 000CB3D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CE5DC 000CB3DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800CE5E0 000CB3E0*/ PPC::Runtime::ASM::blr();
}