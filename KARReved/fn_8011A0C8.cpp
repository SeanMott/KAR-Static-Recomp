//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8011A0C8(PPC::Runtime::GCContext* context)
{
/*8011A0C8 00116EC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8011A0CC 00116ECC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011A0D0 00116ED0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011A0D4 00116ED4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011A0D8 00116ED8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011A0DC 00116EDC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011A0E0 00116EE0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011A0E4 00116EE4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8011A0E8 00116EE8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8011A0EC, 0x8011A0EC) //this is a jump label
/*8011A0EC 00116EEC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011A0F0 00116EF0*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8011A0F4 00116EF4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8011A0F8 00116EF8*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8011A0FC 00116EFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r30));
/*8011A100 00116F00*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011A104 00116F04*/ PPC::Runtime::ASM::beq(.L_8011A110);
/*8011A108 00116F08*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8011A10C 00116F0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8011A110, 0x8011A110) //this is a jump label
/*8011A110 00116F10*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8011A114 00116F14*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8011A118 00116F18*/ PPC::Runtime::ASM::blt(.L_8011A0EC);
/*8011A11C 00116F1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011A120 00116F20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011A124 00116F24*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011A128 00116F28*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011A12C 00116F2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011A130 00116F30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8011A134 00116F34*/ PPC::Runtime::ASM::blr();
}