//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802AC240.hpp"
#include "fn_802851B0.hpp"



void fn_802AC1C0(PPC::Runtime::GCContext* context)
{
/*802AC1C0 002A8FC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AC1C4 002A8FC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AC1C8 002A8FC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AC1CC 002A8FCC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AC1D0 002A8FD0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802AC1D4 002A8FD4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802AC1D8 002A8FD8  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802AC1DC 002A8FDC*/ PPC::Runtime::ASM::beq(.L_802AC224);
/*802AC1E0 002A8FE0*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C07DC @ Get_MemoryOffset_HighBit);
/*802AC1E4 002A8FE4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*802AC1E8 002A8FE8*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C07DC @ Get_MemoryOffset_LowBit);
/*802AC1EC 002A8FEC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC1F0 002A8FF0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802AC1F4 002A8FF4*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802AC1F8 002A8FF8*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802AC1FC 002A8FFC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802AC200 002A9000*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802AC204 002A9004*/ PPC::Runtime::ASM::bl(fn_802AC240);
/*802AC208 002A9008*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC20C 002A900C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AC210 002A9010*/ PPC::Runtime::ASM::bl(fn_802851B0);
/*802AC214 002A9014*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802AC218 002A9018*/ PPC::Runtime::ASM::ble(.L_802AC224);
/*802AC21C 002A901C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC220 002A9020*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802AC224, 0x802AC224) //this is a jump label
/*802AC224 002A9024*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AC228 002A9028*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC22C 002A902C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AC230 002A9030*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802AC234 002A9034*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AC238 002A9038*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AC23C 002A903C*/ PPC::Runtime::ASM::blr();
}