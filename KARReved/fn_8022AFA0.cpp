//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022B518.hpp"
#include "fn_80221E30.hpp"
#include "fn_80222144.hpp"
#include "fn_8022B118.hpp"



void fn_8022AFA0(PPC::Runtime::GCContext* context)
{
/*8022AFA0 00227DA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8022AFA4 00227DA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022AFA8 00227DA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022AFAC 00227DAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8022AFB0 00227DB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022AFB4 00227DB4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b6, context->r3));
/* 8022AFB8 00227DB8  54 00 F7 FF */ extrwi. context->r0 , context->r0 , 1 , 29
/*8022AFBC 00227DBC*/ PPC::Runtime::ASM::bne(.L_8022B02C);
/*8022AFC0 00227DC0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*8022AFC4 00227DC4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8022AFC8 00227DC8*/ PPC::Runtime::ASM::bl(fn_8022B518);
/*8022AFCC 00227DCC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022AFD0 00227DD0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022AFD4 00227DD4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*8022AFD8 00227DD8*/ PPC::Runtime::ASM::bl(fn_80221E30);
/*8022AFDC 00227DDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b5, context->r31));
/* 8022AFE0 00227DE0  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8022AFE4 00227DE4*/ PPC::Runtime::ASM::beq(.L_8022B02C);
/*8022AFE8 00227DE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022AFEC 00227DEC*/ PPC::Runtime::ASM::bl(fn_80222144);
/*8022AFF0 00227DF0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8022AFF4 00227DF4*/ PPC::Runtime::ASM::beq(.L_8022B02C);
/*8022AFF8 00227DF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022AFFC 00227DFC*/ PPC::Runtime::ASM::bl(fn_8022B118);
/*8022B000 00227E00*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8022B004 00227E04*/ PPC::Runtime::ASM::bne(.L_8022B01C);
/*8022B008 00227E08*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b6, context->r31));
/*8022B00C 00227E0C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8022B010 00227E10*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 2, 29, 29);
/*8022B014 00227E14*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b6, context->r31));
/*8022B018 00227E18*/ PPC::Runtime::ASM::b(.L_8022B02C);
RUNTIME_PPC_JUMP_LABEL(.L_8022B01C, 0x8022B01C) //this is a jump label
/*8022B01C 00227E1C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1dc, context->r31));
/*8022B020 00227E20*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2A14 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8022B024 00227E24*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*8022B028 00227E28*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1dc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8022B02C, 0x8022B02C) //this is a jump label
/*8022B02C 00227E2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022B030 00227E30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8022B034 00227E34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022B038 00227E38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8022B03C 00227E3C*/ PPC::Runtime::ASM::blr();
}