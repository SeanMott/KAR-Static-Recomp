//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801D7E5C(PPC::Runtime::GCContext* context)
{
/*801D7E5C 001D4C5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801D7E60 001D4C60*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D7E64 001D4C64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801D7E68 001D4C68*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801D7E6C 001D4C6C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801D7E70 001D4C70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D7E74 001D4C74*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801D7E78 001D4C78*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801D7E7C 001D4C7C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r3));
/*801D7E80 001D4C80*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801D7E84 001D4C84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801D7E88 001D4C88*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801D7E8C 001D4C8C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7E90 001D4C90*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r31));
/*801D7E94 001D4C94*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801D7E98 001D4C98*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801D7E9C 001D4C9C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7EA0 001D4CA0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r31));
/*801D7EA4 001D4CA4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801D7EA8 001D4CA8*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801D7EAC 001D4CAC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D7EB0 001D4CB0*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801D7EB4 001D4CB4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f31);
/*801D7EB8 001D4CB8*/ PPC::Runtime::ASM::bge(.L_801D7EE4);
/*801D7EBC 001D4CBC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
/*801D7EC0 001D4CC0*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801D7EC4 001D4CC4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801D7EC8 001D4CC8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r31));
/*801D7ECC 001D4CCC*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801D7ED0 001D4CD0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801D7ED4 001D4CD4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r31));
/*801D7ED8 001D4CD8*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801D7EDC 001D4CDC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801D7EE0 001D4CE0*/ PPC::Runtime::ASM::b(.L_801D7F28);
RUNTIME_PPC_JUMP_LABEL(.L_801D7EE4, 0x801D7EE4) //this is a jump label
/*801D7EE4 001D4CE4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1BA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D7EE8 001D4CE8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801D7EEC 001D4CEC*/ PPC::Runtime::ASM::ble(.L_801D7F28);
/*801D7EF0 001D4CF0*/ PPC::Runtime::ASM::fneg(context->f3, context->f31);
/*801D7EF4 001D4CF4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7EF8 001D4CF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801D7EFC 001D4CFC*/ PPC::Runtime::ASM::fdivs(context->f3, context->f3, context->f1);
/*801D7F00 001D4D00*/ PPC::Runtime::ASM::fmadds(context->f0, context->f2, context->f3, context->f0);
/*801D7F04 001D4D04*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801D7F08 001D4D08*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7F0C 001D4D0C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801D7F10 001D4D10*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f3, context->f0);
/*801D7F14 001D4D14*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801D7F18 001D4D18*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D7F1C 001D4D1C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801D7F20 001D4D20*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f3, context->f0);
/*801D7F24 001D4D24*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801D7F28, 0x801D7F28) //this is a jump label
/*801D7F28 001D4D28*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801D7F2C 001D4D2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801D7F30 001D4D30*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801D7F34 001D4D34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D7F38 001D4D38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D7F3C 001D4D3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801D7F40 001D4D40*/ PPC::Runtime::ASM::blr();
}