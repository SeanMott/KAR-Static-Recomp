//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSRegisterVersion.hpp"
#include "fn___ARQInterruptServiceRoutine.hpp"
#include "fn___ARQInterruptServiceRoutine.hpp"
#include "fn_AIRegisterDMACallback2.hpp"



void fn_ARQInit(PPC::Runtime::GCContext* context)
{
/*803E1C5C 003DEA5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E1C60 003DEA60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E1C64 003DEA64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803E1C68 003DEA68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803E1C6C 003DEA6C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE044 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1C70 003DEA70*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*803E1C74 003DEA74*/ PPC::Runtime::ASM::beq(.L_803E1CB8);
/*803E1C78 003DEA78*/ PPC::Runtime::ASM::lwz(context->r3, StructWithStructs_20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1C7C 003DEA7C*/ PPC::Runtime::ASM::bl(OSRegisterVersion);
/*803E1C80 003DEA80*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803E1C84 003DEA84*/ PPC::Runtime::ASM::li(context->r0, 0x1000);
/*803E1C88 003DEA88*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE028 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1C8C 003DEA8C*/ PPC::Runtime::ASM::lis(context->r3, fn___ARQInterruptServiceRoutine @ Get_MemoryOffset_HighBit);
/*803E1C90 003DEA90*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE020 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1C94 003DEA94*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn___ARQInterruptServiceRoutine @ Get_MemoryOffset_LowBit);
/*803E1C98 003DEA98*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE040 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1C9C 003DEA9C*/ PPC::Runtime::ASM::bl(fn_AIRegisterDMACallback2);
/*803E1CA0 003DEAA0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803E1CA4 003DEAA4*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE030 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1CA8 003DEAA8*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE034 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1CAC 003DEAAC*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE038 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1CB0 003DEAB0*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE03C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E1CB4 003DEAB4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE044 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803E1CB8, 0x803E1CB8) //this is a jump label
/*803E1CB8 003DEAB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E1CBC 003DEABC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803E1CC0 003DEAC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803E1CC4 003DEAC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E1CC8 003DEAC8*/ PPC::Runtime::ASM::blr();
}