//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGet_Dist.hpp"



void fn_800766C8(PPC::Runtime::GCContext* context)
{
/*800766C8 000734C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800766CC 000734CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800766D0 000734D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800766D4 000734D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800766D8 000734D8*/ PPC::Runtime::ASM::li(context->r31, STRUCT_BYTE4_COUNT_1805DD5D8 @ Get_MemoryOffset_SDA21);
/*800766DC 000734DC*/ PPC::Runtime::ASM::bl(fn_gmGet_Dist);
/*800766E0 000734E0*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r3, 24);
/*800766E4 000734E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800766E8 000734E8*/ PPC::Runtime::ASM::beq(.L_80076708);
/*800766EC 000734EC*/ PPC::Runtime::ASM::bge(.L_80076714);
/*800766F0 000734F0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800766F4 000734F4*/ PPC::Runtime::ASM::bge(.L_800766FC);
/*800766F8 000734F8*/ PPC::Runtime::ASM::b(.L_80076714);
RUNTIME_PPC_JUMP_LABEL(.L_800766FC, 0x800766FC) //this is a jump label
/*800766FC 000734FC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80076700 00073500*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80076704 00073504*/ PPC::Runtime::ASM::b(.L_8007671C);
RUNTIME_PPC_JUMP_LABEL(.L_80076708, 0x80076708) //this is a jump label
/*80076708 00073508*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8007670C 0007350C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80076710 00073510*/ PPC::Runtime::ASM::b(.L_8007671C);
RUNTIME_PPC_JUMP_LABEL(.L_80076714, 0x80076714) //this is a jump label
/*80076714 00073514*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80076718 00073518*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8007671C, 0x8007671C) //this is a jump label
/*8007671C 0007351C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80076720 00073520*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80076724 00073524*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80076728 00073528*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8007672C 0007352C*/ PPC::Runtime::ASM::blr();
}