//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80095C94(PPC::Runtime::GCContext* context)
{
/*80095C94 00092A94*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553C00 @ Get_MemoryOffset_HighBit);
/*80095C98 00092A98*/ PPC::Runtime::ASM::addi(context->r8, context->r4, lbl_80553C00 @ Get_MemoryOffset_LowBit);
/*80095C9C 00092A9C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66, context->r8));
/*80095CA0 00092AA0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80095CA4 00092AA4*/ PPC::Runtime::ASM::bne(.L_80095CDC);
/*80095CA8 00092AA8*/ PPC::Runtime::ASM::li(context->r7, 0xa);
/*80095CAC 00092AAC*/ PPC::Runtime::ASM::li(context->r6, 0xb);
/*80095CB0 00092AB0*/ PPC::Runtime::ASM::li(context->r5, 0x9);
/*80095CB4 00092AB4*/ PPC::Runtime::ASM::li(context->r4, 0xd);
/*80095CB8 00092AB8*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*80095CBC 00092ABC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r8));
/*80095CC0 00092AC0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80095CC4 00092AC4*/ PPC::Runtime::ASM::sth(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r8));
/*80095CC8 00092AC8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r8));
/*80095CCC 00092ACC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r8));
/*80095CD0 00092AD0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r8));
/*80095CD4 00092AD4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66, context->r8));
/*80095CD8 00092AD8*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_80095CDC, 0x80095CDC) //this is a jump label
/*80095CDC 00092ADC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80095CE0 00092AE0*/ PPC::Runtime::ASM::blr();
}