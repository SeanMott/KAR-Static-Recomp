//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_getTrialFlag.hpp"



void fn_enableKirbyToExitVehicle(PPC::Runtime::GCContext* context)
{
/*801918D0 0018E6D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801918D4 0018E6D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801918D8 0018E6D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801918DC 0018E6DC*/ PPC::Runtime::ASM::bl(fn_getTrialFlag);
/*801918E0 0018E6E0*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*801918E4 0018E6E4*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*801918E8 0018E6E8*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*801918EC 0018E6EC*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*801918F0 0018E6F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801918F4 0018E6F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801918F8 0018E6F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801918FC 0018E6FC*/ PPC::Runtime::ASM::blr();
}