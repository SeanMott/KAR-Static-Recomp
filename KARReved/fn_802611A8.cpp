//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_802611A8(PPC::Runtime::GCContext* context)
{
/*802611A8 0025DFA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802611AC 0025DFAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802611B0 0025DFB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802611B4 0025DFB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802611B8 0025DFB8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802611BC 0025DFBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802611C0 0025DFC0*/ PPC::Runtime::ASM::bl(fn_80250340);
/*802611C4 0025DFC4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F98 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802611C8 0025DFC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802611CC 0025DFCC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F9C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802611D0 0025DFD0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*802611D4 0025DFD4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802611D8 0025DFD8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802611DC 0025DFDC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802611E0 0025DFE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802611E4 0025DFE4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802611E8 0025DFE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802611EC 0025DFEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802611F0 0025DFF0*/ PPC::Runtime::ASM::blr();
}