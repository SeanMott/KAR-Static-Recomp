//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245F70.hpp"
#include "fn_802460D4.hpp"
#include "fn_8024625C.hpp"



void fn_80204CC8(PPC::Runtime::GCContext* context)
{
/*80204CC8 00201AC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80204CCC 00201ACC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80204CD0 00201AD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80204CD4 00201AD4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80204CD8 00201AD8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80204CDC 00201ADC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r3));
/* 80204CE0 00201AE0  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80204CE4 00201AE4*/ PPC::Runtime::ASM::beq(.L_80204D1C);
/*80204CE8 00201AE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r31));
/*80204CEC 00201AEC*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x2f8);
/*80204CF0 00201AF0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2318 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80204CF4 00201AF4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x334);
/*80204CF8 00201AF8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E231C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80204CFC 00201AFC*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0x340);
/*80204D00 00201B00*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80204D04 00201B04*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*80204D08 00201B08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r31));
/*80204D0C 00201B0C*/ PPC::Runtime::ASM::bl(fn_802460D4);
/*80204D10 00201B10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r31));
/*80204D14 00201B14*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x2f8);
/*80204D18 00201B18*/ PPC::Runtime::ASM::bl(fn_8024625C);
RUNTIME_PPC_JUMP_LABEL(.L_80204D1C, 0x80204D1C) //this is a jump label
/*80204D1C 00201B1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80204D20 00201B20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80204D24 00201B24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80204D28 00201B28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80204D2C 00201B2C*/ PPC::Runtime::ASM::blr();
}