//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_emLoadCommon.hpp"
#include "fn_802007E0.hpp"
#include "fn_80206CB4.hpp"



void fn_801FB488(PPC::Runtime::GCContext* context)
{
/*801FB488 001F8288*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FB48C 001F828C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FB490 001F8290*/ PPC::Runtime::ASM::lis(context->r3, lbl_8055A130 @ Get_MemoryOffset_HighBit);
/*801FB494 001F8294*/ PPC::Runtime::ASM::li(context->r4, 0xbc0);
/*801FB498 001F8298*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FB49C 001F829C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*801FB4A0 001F82A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FB4A4 001F82A4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_8055A130 @ Get_MemoryOffset_LowBit);
/*801FB4A8 001F82A8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*801FB4AC 001F82AC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801FB4B0 001F82B0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*801FB4B4 001F82B4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*801FB4B8 001F82B8*/ PPC::Runtime::ASM::li(context->r4, 0x80);
/*801FB4BC 001F82BC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*801FB4C0 001F82C0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*801FB4C4 001F82C4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x58);
/*801FB4C8 001F82C8*/ PPC::Runtime::ASM::li(context->r4, 0x100);
/*801FB4CC 001F82CC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*801FB4D0 001F82D0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*801FB4D4 001F82D4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x84);
/*801FB4D8 001F82D8*/ PPC::Runtime::ASM::li(context->r4, 0xf0);
/*801FB4DC 001F82DC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*801FB4E0 001F82E0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*801FB4E4 001F82E4*/ PPC::Runtime::ASM::bl(fn_emLoadCommon);
/*801FB4E8 001F82E8*/ PPC::Runtime::ASM::bl(fn_802007E0);
/*801FB4EC 001F82EC*/ PPC::Runtime::ASM::lis(context->r3, StructOfStructStuff_1 @ Get_MemoryOffset_HighBit);
/*801FB4F0 001F82F0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801FB4F4 001F82F4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, StructOfStructStuff_1 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_801FB4F8, 0x801FB4F8) //this is a jump label
/*801FB4F8 001F82F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801FB4FC 001F82FC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801FB500 001F8300*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801FB504 001F8304*/ PPC::Runtime::ASM::beq(.L_801FB510);
/*801FB508 001F8308*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801FB50C 001F830C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801FB510, 0x801FB510) //this is a jump label
/*801FB510 001F8310*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*801FB514 001F8314*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*801FB518 001F8318*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x4f);
/*801FB51C 001F831C*/ PPC::Runtime::ASM::blt(.L_801FB4F8);
/*801FB520 001F8320*/ PPC::Runtime::ASM::bl(fn_80206CB4);
/*801FB524 001F8324*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FB528 001F8328*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FB52C 001F832C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801FB530 001F8330*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FB534 001F8334*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FB538 001F8338*/ PPC::Runtime::ASM::blr();
}