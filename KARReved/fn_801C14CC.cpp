//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801C0C28.hpp"
#include "fn_801BE018.hpp"



void fn_801C14CC(PPC::Runtime::GCContext* context)
{
/*801C14CC 001BE2CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C14D0 001BE2D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C14D4 001BE2D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C14D8 001BE2D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C14DC 001BE2DC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C14E0 001BE2E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r3));
/*801C14E4 001BE2E4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801C14E8 001BE2E8*/ PPC::Runtime::ASM::beq(.L_801C1500);
/*801C14EC 001BE2EC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r31));
/*801C14F0 001BE2F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801C14F4 001BE2F4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801C14F8 001BE2F8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r31));
/*801C14FC 001BE2FC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C1500, 0x801C1500) //this is a jump label
/*801C1500 001BE300*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C1504 001BE304*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801C1508 001BE308*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C150C 001BE30C*/ PPC::Runtime::ASM::beq(.L_801C152C);
/*801C1510 001BE310*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C1514 001BE314*/ PPC::Runtime::ASM::bl(fn_801C0C28);
/*801C1518 001BE318*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C151C 001BE31C*/ PPC::Runtime::ASM::bl(fn_801BE018);
/*801C1520 001BE320*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C1524 001BE324*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*801C1528 001BE328*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C152C, 0x801C152C) //this is a jump label
/*801C152C 001BE32C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C1530 001BE330*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C1534 001BE334*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C1538 001BE338*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C153C 001BE33C*/ PPC::Runtime::ASM::blr();
}