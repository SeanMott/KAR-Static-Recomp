//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A71D8(PPC::Runtime::GCContext* context)
{
/*802A71D8 002A3FD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A71DC 002A3FDC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A71E0 002A3FE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A71E4 002A3FE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A71E8 002A3FE8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A71EC 002A3FEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A71F0 002A3FF0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A71F4 002A3FF4*/ PPC::Runtime::ASM::beq(.L_802A72B4);
/*802A71F8 002A3FF8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C2B40 @ Get_MemoryOffset_HighBit);
/*802A71FC 002A3FFC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A7200 002A4000*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C2B40 @ Get_MemoryOffset_LowBit);
/*802A7204 002A4004*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7208 002A4008*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A720C 002A400C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A7210 002A4010*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A7214 002A4014*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A7218 002A4018*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A721C 002A401C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7220 002A4020*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A7224 002A4024*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7228 002A4028*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A722C 002A402C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A7230 002A4030*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7234 002A4034*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7238 002A4038*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A723C 002A403C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7240 002A4040*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7244 002A4044*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A7248 002A4048*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A724C 002A404C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7250 002A4050*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A7254 002A4054*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7258 002A4058*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A725C 002A405C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A7260 002A4060*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7264 002A4064*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7268 002A4068*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A726C 002A406C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7270 002A4070*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7274 002A4074*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A7278 002A4078*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A727C 002A407C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7280 002A4080*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A7284 002A4084*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7288 002A4088*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A728C 002A408C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A7290 002A4090*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7294 002A4094*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7298 002A4098*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A729C 002A409C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A72A0 002A40A0*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A72A4 002A40A4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A72A8 002A40A8*/ PPC::Runtime::ASM::ble(.L_802A72B4);
/*802A72AC 002A40AC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A72B0 002A40B0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A72B4, 0x802A72B4) //this is a jump label
/*802A72B4 002A40B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A72B8 002A40B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A72BC 002A40BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A72C0 002A40C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A72C4 002A40C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A72C8 002A40C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A72CC 002A40CC*/ PPC::Runtime::ASM::blr();
}