//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80155624.hpp"
#include "fn_801557E8.hpp"
#include "fn_80155B68.hpp"
#include "fn_80155D3C.hpp"
#include "fn_80156528.hpp"
#include "fn_801562C8.hpp"
#include "fn_80156CC8.hpp"
#include "fn_8015702C.hpp"
#include "fn_8015693C.hpp"
#include "fn_80158914.hpp"
#include "fn_80157790.hpp"
#include "fn_80157B2C.hpp"
#include "fn_80158078.hpp"
#include "fn_80158D48.hpp"
#include "fn_80158588.hpp"



void fn_801347A8(PPC::Runtime::GCContext* context)
{
/*801347A8 001315A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801347AC 001315AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801347B0 001315B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801347B4 001315B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801347B8 001315B8*/ PPC::Runtime::ASM::bl(fn_80155624);
/*801347BC 001315BC*/ PPC::Runtime::ASM::bl(fn_801557E8);
/*801347C0 001315C0*/ PPC::Runtime::ASM::bl(fn_80155B68);
/*801347C4 001315C4*/ PPC::Runtime::ASM::bl(fn_80155D3C);
/*801347C8 001315C8*/ PPC::Runtime::ASM::bl(fn_80156528);
/*801347CC 001315CC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801347D0, 0x801347D0) //this is a jump label
/*801347D0 001315D0*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*801347D4 001315D4*/ PPC::Runtime::ASM::bl(fn_801562C8);
/*801347D8 001315D8*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*801347DC 001315DC*/ PPC::Runtime::ASM::bl(fn_80156CC8);
/*801347E0 001315E0*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*801347E4 001315E4*/ PPC::Runtime::ASM::bl(fn_8015702C);
/*801347E8 001315E8*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*801347EC 001315EC*/ PPC::Runtime::ASM::bl(fn_8015693C);
/*801347F0 001315F0*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*801347F4 001315F4*/ PPC::Runtime::ASM::bl(fn_80158914);
/*801347F8 001315F8*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*801347FC 001315FC*/ PPC::Runtime::ASM::bl(fn_80157790);
/*80134800 00131600*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*80134804 00131604*/ PPC::Runtime::ASM::bl(fn_80157B2C);
/*80134808 00131608*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*8013480C 0013160C*/ PPC::Runtime::ASM::bl(fn_80158078);
/*80134810 00131610*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*80134814 00131614*/ PPC::Runtime::ASM::bl(fn_80158D48);
/*80134818 00131618*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*8013481C 0013161C*/ PPC::Runtime::ASM::bl(fn_80158588);
/*80134820 00131620*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80134824 00131624*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4);
/*80134828 00131628*/ PPC::Runtime::ASM::blt(.L_801347D0);
/*8013482C 0013162C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80134830 00131630*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80134834 00131634*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80134838 00131638*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8013483C 0013163C*/ PPC::Runtime::ASM::blr();
}