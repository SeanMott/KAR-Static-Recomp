//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"
#include "fn_801C9DB8.hpp"
#include "fn_801DD17C.hpp"
#include "fn_801DD17C.hpp"



void fn_801E1908(PPC::Runtime::GCContext* context)
{
/*801E1908 001DE708*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801E190C 001DE70C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E1910 001DE710*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801E1914 001DE714*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801E1918 001DE718*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801E191C 001DE71C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801E1920 001DE720*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801E1924 001DE724*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801E1928 001DE728*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801E192C 001DE72C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1CE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E1930 001DE730*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E1934 001DE734*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*801E1938 001DE738*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801E193C 001DE73C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801E1940 001DE740*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801E1944 001DE744*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f31);
/*801E1948 001DE748*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801E194C 001DE74C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E1950 001DE750*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801E1954 001DE754*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E1958 001DE758*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r31));
/*801E195C 001DE75C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc31, context->r31));
/*801E1960 001DE760*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*801E1964 001DE764*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc31, context->r31));
/*801E1968 001DE768*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801E196C 001DE76C*/ PPC::Runtime::ASM::extrwi(context->r0, context->r4, 2, 24);
/*801E1970 001DE770*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801E1974 001DE774*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 6, 24, 25);
/*801E1978 001DE778*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801E197C 001DE77C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3a, context->r31));
/*801E1980 001DE780*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*801E1984 001DE784*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3a, context->r31));
/*801E1988 001DE788*/ PPC::Runtime::ASM::bl(fn_801C9DB8);
/*801E198C 001DE78C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x3);
/*801E1990 001DE790*/ PPC::Runtime::ASM::beq(.L_801E19EC);
/*801E1994 001DE794*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801E1998 001DE798*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E199C 001DE79C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*801E19A0 001DE7A0*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DD844 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E19A4 001DE7A4*/ PPC::Runtime::ASM::slwi(context->r4, context->r4, 2);
/*801E19A8 001DE7A8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x94);
/*801E19AC 001DE7AC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1CE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E19B0 001DE7B0*/ PPC::Runtime::ASM::lwzx(context->r4, context->r5, context->r4);
/*801E19B4 001DE7B4*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*801E19B8 001DE7B8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*801E19BC 001DE7BC*/ PPC::Runtime::ASM::bl(fn_801DD17C);
/*801E19C0 001DE7C0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801E19C4 001DE7C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E19C8 001DE7C8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*801E19CC 001DE7CC*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DD844 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E19D0 001DE7D0*/ PPC::Runtime::ASM::slwi(context->r4, context->r4, 2);
/*801E19D4 001DE7D4*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x94);
/*801E19D8 001DE7D8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1CE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E19DC 001DE7DC*/ PPC::Runtime::ASM::lwzx(context->r4, context->r5, context->r4);
/*801E19E0 001DE7E0*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*801E19E4 001DE7E4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*801E19E8 001DE7E8*/ PPC::Runtime::ASM::bl(fn_801DD17C);
RUNTIME_PPC_JUMP_LABEL(.L_801E19EC, 0x801E19EC) //this is a jump label
/*801E19EC 001DE7EC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801E19F0 001DE7F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801E19F4 001DE7F4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801E19F8 001DE7F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801E19FC 001DE7FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801E1A00 001DE800*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E1A04 001DE804*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801E1A08 001DE808*/ PPC::Runtime::ASM::blr();
}