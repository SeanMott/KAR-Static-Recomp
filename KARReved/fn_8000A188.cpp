//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A188(PPC::Runtime::GCContext* context)
{
/*8000A188 00006F88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A18C 00006F8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A190 00006F90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A194 00006F94*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A198 00006F98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A19C 00006F9C*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 27);
/*8000A1A0 00006FA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A1A4 00006FA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A1A8 00006FA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A1AC 00006FAC*/ PPC::Runtime::ASM::blr();
}