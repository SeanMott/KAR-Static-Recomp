//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800AF3C8(PPC::Runtime::GCContext* context)
{
/*800AF3C8 000AC1C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AF3CC 000AC1CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AF3D0 000AC1D0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*800AF3D4 000AC1D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF3D8 000AC1D8*/ PPC::Runtime::ASM::bne(.L_800AF3F0);
/*800AF3DC 000AC1DC*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AF3E0 000AC1E0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AF3E4 000AC1E4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AF3E8 000AC1E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800AF3EC 000AC1EC*/ PPC::Runtime::ASM::b(.L_800AF42C);
RUNTIME_PPC_JUMP_LABEL(.L_800AF3F0, 0x800AF3F0) //this is a jump label
/*800AF3F0 000AC1F0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AF3F4 000AC1F4*/ PPC::Runtime::ASM::bne(.L_800AF42C);
/*800AF3F8 000AC1F8*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AF3FC 000AC1FC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AF400 000AC200*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800AF404 000AC204*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800AF408 000AC208*/ PPC::Runtime::ASM::bne(.L_800AF418);
/*800AF40C 000AC20C*/ PPC::Runtime::ASM::li(context->r0, 0x4b0);
/*800AF410 000AC210*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800AF414 000AC214*/ PPC::Runtime::ASM::b(.L_800AF420);
RUNTIME_PPC_JUMP_LABEL(.L_800AF418, 0x800AF418) //this is a jump label
/*800AF418 000AC218*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AF41C 000AC21C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800AF420, 0x800AF420) //this is a jump label
/*800AF420 000AC220*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800AF424 000AC224*/ PPC::Runtime::ASM::extsh(context->r3, context->r0);
/*800AF428 000AC228*/ PPC::Runtime::ASM::bl(fn_80445990);
RUNTIME_PPC_JUMP_LABEL(.L_800AF42C, 0x800AF42C) //this is a jump label
/*800AF42C 000AC22C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF430 000AC230*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AF434 000AC234*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AF438 000AC238*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AF43C 000AC23C*/ PPC::Runtime::ASM::blr();
}