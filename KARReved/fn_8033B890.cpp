//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80320310.hpp"
#include "fn_80321268.hpp"
#include "fn_8033E604.hpp"



void fn_8033B890(PPC::Runtime::GCContext* context)
{
/*8033B890 00338690*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*8033B894 00338694*/ PPC::Runtime::ASM::mflr(context->r0);
/*8033B898 00338698*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8033B89C 0033869C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8033B8A0 003386A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8033B8A4 003386A4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8033B8A8 003386A8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8033B8AC 003386AC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x4);
/*8033B8B0 003386B0*/ PPC::Runtime::ASM::bl(fn_80320310);
/*8033B8B4 003386B4*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x18);
/*8033B8B8 003386B8*/ PPC::Runtime::ASM::bl(fn_80321268);
/*8033B8BC 003386BC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E68D4 @ Get_MemoryOffset_HighBit);
/*8033B8C0 003386C0*/ PPC::Runtime::ASM::lwzu(context->r5, lbl_804E68D4 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*8033B8C4 003386C4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8033B8C8 003386C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8033B8CC 003386CC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8033B8D0 003386D0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8033B8D4 003386D4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8033B8D8 003386D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r29));
/*8033B8DC 003386DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r29));
/*8033B8E0 003386E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8033B8E4 003386E4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8033B8E8 003386E8*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*8033B8EC 003386EC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8033B8F0 003386F0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8033B8F4 003386F4*/ PPC::Runtime::ASM::b(.L_8033B90C);
RUNTIME_PPC_JUMP_LABEL(.L_8033B8F8, 0x8033B8F8) //this is a jump label
/*8033B8F8 003386F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8033B8FC 003386FC*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x20);
/*8033B900 00338700*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*8033B904 00338704*/ PPC::Runtime::ASM::nop();
/*8033B908 00338708*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8033B90C, 0x8033B90C) //this is a jump label
/*8033B90C 0033870C*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*8033B910 00338710*/ PPC::Runtime::ASM::bne(.L_8033B8F8);
/*8033B914 00338714*/ PPC::Runtime::ASM::addi(context->r7, context->r29, 0x6c);
/*8033B918 00338718*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8033B91C 0033871C*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8033B920 00338720*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x60);
/*8033B924 00338724*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*8033B928 00338728*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x10);
/*8033B92C 0033872C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r29));
/*8033B930 00338730*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8033B934 00338734*/ PPC::Runtime::ASM::bl(fn_8033E604);
/*8033B938 00338738*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8033B93C 0033873C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8033B940 00338740*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8033B944 00338744*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8033B948 00338748*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8033B94C 0033874C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*8033B950 00338750*/ PPC::Runtime::ASM::blr();
}