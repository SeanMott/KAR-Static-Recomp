//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A1680.hpp"
#include "fn_800A1680.hpp"
#include "fn_800E92CC.hpp"
#include "fn_8007D988.hpp"
#include "fn_800E918C.hpp"



void fn_800A8BEC(PPC::Runtime::GCContext* context)
{
/*800A8BEC 000A59EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800A8BF0 000A59F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A8BF4 000A59F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A8BF8 000A59F8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x50);
/*800A8BFC 000A59FC*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800A8C00 000A5A00*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800A8C04 000A5A04*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_25 @ Get_MemoryOffset_HighBit);
/*800A8C08 000A5A08*/ PPC::Runtime::ASM::addi(context->r31, context->r28, 0x454);
/*800A8C0C 000A5A0C*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800A8C10 000A5A10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800A8C14 000A5A14*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800A8C18 000A5A18*/ PPC::Runtime::ASM::addi(context->r27, context->r3, StructWithFuncPtrs_25 @ Get_MemoryOffset_LowBit);
/*800A8C1C 000A5A1C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A8C20 000A5A20*/ PPC::Runtime::ASM::bne(.L_800A8C34);
/*800A8C24 000A5A24*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x10);
/*800A8C28 000A5A28*/ PPC::Runtime::ASM::addi(context->r5, context->r27, 0x1c);
/*800A8C2C 000A5A2C*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800A8C30 000A5A30*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8C34, 0x800A8C34) //this is a jump label
/*800A8C34 000A5A34*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800A8C38 000A5A38*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800A8C3C 000A5A3C*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800A8C40 000A5A40*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800A8C44 000A5A44*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800A8C48 000A5A48  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800A8C4C 000A5A4C*/ PPC::Runtime::ASM::beq(.L_800A8C7C);
/*800A8C50 000A5A50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800A8C54 000A5A54*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800A8C58 000A5A58*/ PPC::Runtime::ASM::beq(.L_800A8C64);
/*800A8C5C 000A5A5C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800A8C60 000A5A60*/ PPC::Runtime::ASM::b(.L_800A8C68);
RUNTIME_PPC_JUMP_LABEL(.L_800A8C64, 0x800A8C64) //this is a jump label
/*800A8C64 000A5A64*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800A8C68, 0x800A8C68) //this is a jump label
/*800A8C68 000A5A68*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800A8C6C 000A5A6C*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800A8C70 000A5A70*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800A8C74 000A5A74*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800A8C78 000A5A78*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800A8C7C, 0x800A8C7C) //this is a jump label
/*800A8C7C 000A5A7C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A8C80 000A5A80*/ PPC::Runtime::ASM::bne(.L_800A8CA4);
/*800A8C84 000A5A84*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800A8C88 000A5A88*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x2c);
/*800A8C8C 000A5A8C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A8C90 000A5A90*/ PPC::Runtime::ASM::bl(OSReport);
/*800A8C94 000A5A94*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x10);
/*800A8C98 000A5A98*/ PPC::Runtime::ASM::addi(context->r5, context->r27, 0x3c);
/*800A8C9C 000A5A9C*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800A8CA0 000A5AA0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8CA4, 0x800A8CA4) //this is a jump label
/*800A8CA4 000A5AA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800A8CA8 000A5AA8*/ PPC::Runtime::ASM::slwi(context->r4, context->r29, 2);
/*800A8CAC 000A5AAC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800A8CB0 000A5AB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800A8CB4 000A5AB4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800A8CB8 000A5AB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800A8CBC 000A5ABC*/ PPC::Runtime::ASM::lwzx(context->r27, context->r5, context->r4);
/*800A8CC0 000A5AC0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A8CC4 000A5AC4*/ PPC::Runtime::ASM::beq(.L_800A8CF0);
/*800A8CC8 000A5AC8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800A8CCC 000A5ACC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800A8CD0 000A5AD0*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*800A8CD4 000A5AD4*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A8CD8 000A5AD8*/ PPC::Runtime::ASM::bl(fn_800A1680);
/*800A8CDC 000A5ADC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*800A8CE0 000A5AE0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800A8CE4 000A5AE4*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*800A8CE8 000A5AE8*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A8CEC 000A5AEC*/ PPC::Runtime::ASM::bl(fn_800A1680);
RUNTIME_PPC_JUMP_LABEL(.L_800A8CF0, 0x800A8CF0) //this is a jump label
/*800A8CF0 000A5AF0*/ PPC::Runtime::ASM::li(context->r27, lbl_805D5B90 @ Get_MemoryOffset_SDA21);
/*800A8CF4 000A5AF4*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800A8CF8 000A5AF8*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*800A8CFC 000A5AFC*/ PPC::Runtime::ASM::b(.L_800A8D68);
RUNTIME_PPC_JUMP_LABEL(.L_800A8D00, 0x800A8D00) //this is a jump label
/*800A8D00 000A5B00*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800A8D04 000A5B04*/ PPC::Runtime::ASM::bne(.L_800A8D64);
/*800A8D08 000A5B08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A8D0C 000A5B0C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800A8D10 000A5B10*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800A8D14 000A5B14*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800A8D18 000A5B18*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x14);
/*800A8D1C 000A5B1C*/ PPC::Runtime::ASM::bl(fn_800E92CC);
/*800A8D20 000A5B20*/ PPC::Runtime::ASM::lwz(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A8D24 000A5B24*/ PPC::Runtime::ASM::mr(context->r6, context->r27);
/*800A8D28 000A5B28*/ PPC::Runtime::ASM::lwz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A8D2C 000A5B2C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*800A8D30 000A5B30*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A8D34 000A5B34*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x2c);
/*800A8D38 000A5B38*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A8D3C 000A5B3C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5B90 @ Get_MemoryOffset_SDA21);
/*800A8D40 000A5B40*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A8D44 000A5B44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A8D48 000A5B48*/ PPC::Runtime::ASM::stw(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800A8D4C 000A5B4C*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800A8D50 000A5B50*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A8D54 000A5B54*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800A8D58 000A5B58*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A8D5C 000A5B5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800A8D60 000A5B60*/ PPC::Runtime::ASM::bl(fn_8007D988);
RUNTIME_PPC_JUMP_LABEL(.L_800A8D64, 0x800A8D64) //this is a jump label
/*800A8D64 000A5B64*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A8D68, 0x800A8D68) //this is a jump label
/*800A8D68 000A5B68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A8D6C 000A5B6C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800A8D70 000A5B70*/ PPC::Runtime::ASM::bl(fn_800E918C);
/*800A8D74 000A5B74*/ PPC::Runtime::ASM::cmpw(context->r28, context->r3);
/*800A8D78 000A5B78*/ PPC::Runtime::ASM::blt(.L_800A8D00);
/*800A8D7C 000A5B7C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x50);
/*800A8D80 000A5B80*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800A8D84 000A5B84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A8D88 000A5B88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A8D8C 000A5B8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800A8D90 000A5B90*/ PPC::Runtime::ASM::blr();
}