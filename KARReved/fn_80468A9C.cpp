//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_80465F54.hpp"
#include "fn_80465F54.hpp"
#include "EXILock.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"
#include "EXISelect.hpp"
#include "EXIImm.hpp"
#include "EXISync.hpp"
#include "fn_EXIImmEx.hpp"
#include "EXIDeselect.hpp"
#include "EXIUnlock.hpp"



void fn_80468A9C(PPC::Runtime::GCContext* context)
{
/*80468A9C 0046589C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80468AA0 004658A0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80468AA4 004658A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80468AA8 004658A8*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*80468AAC 004658AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80468AB0 004658B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80468AB4 004658B4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*80468AB8 004658B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80468ABC 004658BC*/ PPC::Runtime::ASM::bl(memset);
/*80468AC0 004658C0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80468AC4 004658C4*/ PPC::Runtime::ASM::lis(context->r4, fn_80465F54 @ Get_MemoryOffset_HighBit);
/*80468AC8 004658C8*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*80468ACC 004658CC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, fn_80465F54 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_80468AD0, 0x80468AD0) //this is a jump label
/*80468AD0 004658D0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x0);
/*80468AD4 004658D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468AD8 004658D8*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*80468ADC 004658DC*/ PPC::Runtime::ASM::bl(EXILock);
/*80468AE0 004658E0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*80468AE4 004658E4*/ PPC::Runtime::ASM::bne(.L_80468AF4);
/*80468AE8 004658E8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80468AEC 004658EC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80468AF0 004658F0*/ PPC::Runtime::ASM::b(.L_80468B08);
RUNTIME_PPC_JUMP_LABEL(.L_80468AF4, 0x80468AF4) //this is a jump label
/*80468AF4 004658F4*/ PPC::Runtime::ASM::li(context->r3, SkipAddress_11 @ Get_MemoryOffset_SDA21);
/*80468AF8 004658F8*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
/*80468AFC 004658FC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80468B00 00465900*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80468B04 00465904*/ PPC::Runtime::ASM::b(.L_80468AD0);
RUNTIME_PPC_JUMP_LABEL(.L_80468B08, 0x80468B08) //this is a jump label
/*80468B08 00465908*/ PPC::Runtime::ASM::lis(context->r3, 0xc000);
/*80468B0C 0046590C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x2600);
/*80468B10 00465910*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80468B14 00465914*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468B18 00465918*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*80468B1C 0046591C*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*80468B20 00465920*/ PPC::Runtime::ASM::bl(EXISelect);
/*80468B24 00465924*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80468B28 00465928*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468B2C 0046592C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80468B30 00465930*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*80468B34 00465934*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80468B38 00465938*/ PPC::Runtime::ASM::bl(EXIImm);
/*80468B3C 0046593C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468B40 00465940*/ PPC::Runtime::ASM::bl(EXISync);
/*80468B44 00465944*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*80468B48 00465948*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468B4C 0046594C*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*80468B50 00465950*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*80468B54 00465954*/ PPC::Runtime::ASM::bl(fn_EXIImmEx);
/*80468B58 00465958*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468B5C 0046595C*/ PPC::Runtime::ASM::bl(EXIDeselect);
/*80468B60 00465960*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80468B64 00465964*/ PPC::Runtime::ASM::bl(EXIUnlock);
/*80468B68 00465968*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80468B6C 0046596C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80468B70 00465970*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80468B74 00465974*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80468B78 00465978*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80468B7C 0046597C*/ PPC::Runtime::ASM::blr();
}