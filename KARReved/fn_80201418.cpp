//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FF864.hpp"
#include "fn_801FF864.hpp"



void fn_80201418(PPC::Runtime::GCContext* context)
{
/*80201418 001FE218*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020141C 001FE21C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80201420 001FE220*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201424 001FE224*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80201428 001FE228*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8020142C 001FE22C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80201430 001FE230*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/* 80201434 001FE234  54 00 FF FF */ extrwi. context->r0 , context->r0 , 1 , 30
/*80201438 001FE238*/ PPC::Runtime::ASM::beq(.L_80201454);
/*8020143C 001FE23C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80201440 001FE240*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*80201444 001FE244*/ PPC::Runtime::ASM::extrwi(context->r3, context->r3, 12, 7);
/*80201448 001FE248*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 19);
/*8020144C 001FE24C*/ PPC::Runtime::ASM::bl(fn_801FF864);
/*80201450 001FE250*/ PPC::Runtime::ASM::b(.L_80201468);
RUNTIME_PPC_JUMP_LABEL(.L_80201454, 0x80201454) //this is a jump label
/*80201454 001FE254*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80201458 001FE258*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*8020145C 001FE25C*/ PPC::Runtime::ASM::extrwi(context->r3, context->r3, 12, 7);
/*80201460 001FE260*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 19);
/*80201464 001FE264*/ PPC::Runtime::ASM::bl(fn_801FF864);
RUNTIME_PPC_JUMP_LABEL(.L_80201468, 0x80201468) //this is a jump label
/*80201468 001FE268*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8020146C 001FE26C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*80201470 001FE270*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80201474 001FE274*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80201478 001FE278*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020147C 001FE27C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80201480 001FE280*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80201484 001FE284*/ PPC::Runtime::ASM::blr();
}