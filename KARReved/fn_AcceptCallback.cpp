//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSWakeupThread.hpp"
#include "fn_cbForCancelSync3.hpp"
#include "fn_80476C44.hpp"
#include "fn_80475BD8.hpp"
#include "fn_TCPSetTimeout.hpp"
#include "fn_AcceptCallback.hpp"
#include "fn_AcceptCallback.hpp"
#include "fn_TCPAcceptAsync.hpp"



void fn_AcceptCallback(PPC::Runtime::GCContext* context)
{
/*8047C3EC 004791EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8047C3F0 004791F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8047C3F4 004791F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*8047C3F8 004791F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047C3FC 004791FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8047C400 00479200*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8047C404 00479204*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a8, context->r3));
/*8047C408 00479208*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8047C40C 0047920C*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*8047C410 00479210*/ PPC::Runtime::ASM::beq(.L_8047C534);
/*8047C414 00479214*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*8047C418 00479218*/ PPC::Runtime::ASM::blt(.L_8047C490);
/*8047C41C 0047921C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r30));
/*8047C420 00479220*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r30));
/*8047C424 00479224*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8047C428 00479228*/ PPC::Runtime::ASM::bne(.L_8047C434);
/*8047C42C 0047922C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*8047C430 00479230*/ PPC::Runtime::ASM::b(.L_8047C438);
RUNTIME_PPC_JUMP_LABEL(.L_8047C434, 0x8047C434) //this is a jump label
/*8047C434 00479234*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8047C438, 0x8047C438) //this is a jump label
/*8047C438 00479238*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8047C43C 0047923C*/ PPC::Runtime::ASM::bne(.L_8047C448);
/*8047C440 00479240*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2ac, context->r31));
/*8047C444 00479244*/ PPC::Runtime::ASM::b(.L_8047C44C);
RUNTIME_PPC_JUMP_LABEL(.L_8047C448, 0x8047C448) //this is a jump label
/*8047C448 00479248*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8047C44C, 0x8047C44C) //this is a jump label
/*8047C44C 0047924C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b8, context->r31));
/*8047C450 00479250*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8047C454 00479254*/ PPC::Runtime::ASM::bne(.L_8047C460);
/*8047C458 00479258*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b4, context->r31));
/*8047C45C 0047925C*/ PPC::Runtime::ASM::b(.L_8047C464);
RUNTIME_PPC_JUMP_LABEL(.L_8047C460, 0x8047C460) //this is a jump label
/*8047C460 00479260*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8047C464, 0x8047C464) //this is a jump label
/*8047C464 00479264*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r30));
/*8047C468 00479268*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8047C46C 0047926C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x20);
/*8047C470 00479270*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r30));
/*8047C474 00479274*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b8, context->r31));
/*8047C478 00479278*/ PPC::Runtime::ASM::bl(fn_OSWakeupThread);
/*8047C47C 0047927C*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047C480 00479280*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8047C484 00479284*/ PPC::Runtime::ASM::ble(.L_8047C534);
/*8047C488 00479288*/ PPC::Runtime::ASM::bl(fn_cbForCancelSync3);
/*8047C48C 0047928C*/ PPC::Runtime::ASM::b(.L_8047C534);
RUNTIME_PPC_JUMP_LABEL(.L_8047C490, 0x8047C490) //this is a jump label
/*8047C490 00479290*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r30));
/*8047C494 00479294*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r30));
/*8047C498 00479298*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8047C49C 0047929C*/ PPC::Runtime::ASM::bne(.L_8047C4A8);
/*8047C4A0 004792A0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*8047C4A4 004792A4*/ PPC::Runtime::ASM::b(.L_8047C4AC);
RUNTIME_PPC_JUMP_LABEL(.L_8047C4A8, 0x8047C4A8) //this is a jump label
/*8047C4A8 004792A8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8047C4AC, 0x8047C4AC) //this is a jump label
/*8047C4AC 004792AC*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8047C4B0 004792B0*/ PPC::Runtime::ASM::bne(.L_8047C4BC);
/*8047C4B4 004792B4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2ac, context->r31));
/*8047C4B8 004792B8*/ PPC::Runtime::ASM::b(.L_8047C4C0);
RUNTIME_PPC_JUMP_LABEL(.L_8047C4BC, 0x8047C4BC) //this is a jump label
/*8047C4BC 004792BC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8047C4C0, 0x8047C4C0) //this is a jump label
/*8047C4C0 004792C0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8047C4C4 004792C4*/ PPC::Runtime::ASM::bl(fn_80476C44);
/*8047C4C8 004792C8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r30));
/*8047C4CC 004792CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8047C4D0 004792D0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r30));
/*8047C4D4 004792D4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a0, context->r30));
/*8047C4D8 004792D8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a4, context->r30));
/*8047C4DC 004792DC*/ PPC::Runtime::ASM::bl(fn_80475BD8);
/*8047C4E0 004792E0*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DE6A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8047C4E4 004792E4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8047C4E8 004792E8*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DE6A4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8047C4EC 004792EC*/ PPC::Runtime::ASM::bl(fn_TCPSetTimeout);
/*8047C4F0 004792F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a8, context->r30));
/*8047C4F4 004792F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*8047C4F8 004792F8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8047C4FC 004792FC*/ PPC::Runtime::ASM::bne(.L_8047C508);
/*8047C500 00479300*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2ac, context->r31));
/*8047C504 00479304*/ PPC::Runtime::ASM::b(.L_8047C50C);
RUNTIME_PPC_JUMP_LABEL(.L_8047C508, 0x8047C508) //this is a jump label
/*8047C508 00479308*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8047C50C, 0x8047C50C) //this is a jump label
/*8047C50C 0047930C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r30));
/*8047C510 00479310*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8047C514 00479314*/ PPC::Runtime::ASM::lis(context->r3, fn_AcceptCallback @ Get_MemoryOffset_HighBit);
/*8047C518 00479318*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2bc, context->r30));
/*8047C51C 0047931C*/ PPC::Runtime::ASM::addi(context->r5, context->r3, fn_AcceptCallback @ Get_MemoryOffset_LowBit);
/*8047C520 00479320*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*8047C524 00479324*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*8047C528 00479328*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*8047C52C 0047932C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8047C530 00479330*/ PPC::Runtime::ASM::bl(fn_TCPAcceptAsync);
RUNTIME_PPC_JUMP_LABEL(.L_8047C534, 0x8047C534) //this is a jump label
/*8047C534 00479334*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8047C538 00479338*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047C53C 0047933C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8047C540 00479340*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*8047C544 00479344*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8047C548 00479348*/ PPC::Runtime::ASM::blr();
}