//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80059818.hpp"
#include "fn_80073FA4.hpp"
#include "fn_LoadDatsForCityTrial.hpp"
#include "fn_80059818.hpp"
#include "fn_80059520.hpp"
#include "fn_8013A1EC.hpp"
#include "fn_8013AEEC.hpp"
#include "fn_80162AE0.hpp"
#include "fn_80162DE4.hpp"
#include "fn_80163294.hpp"
#include "fn_80163468.hpp"
#include "fn_80163978.hpp"
#include "fn_80163D44.hpp"
#include "fn_80163FB4.hpp"
#include "fn_80164234.hpp"
#include "fn_8016180C.hpp"



void fn_80135E44(PPC::Runtime::GCContext* context)
{
/*80135E44 00132C44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80135E48 00132C48*/ PPC::Runtime::ASM::mflr(context->r0);
/*80135E4C 00132C4C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80135E50 00132C50*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1133 @ Get_MemoryOffset_HighBit);
/*80135E54 00132C54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80135E58 00132C58*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80135E5C 00132C5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80135E60 00132C60*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_1133 @ Get_MemoryOffset_LowBit);
/*80135E64 00132C64*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*80135E68 00132C68*/ PPC::Runtime::ASM::stb(context->r0, lbl_80558788 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80135E6C 00132C6C*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD7E0 @ Get_MemoryOffset_SDA21);
/*80135E70 00132C70*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80135E74 00132C74*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80135E78 00132C78*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80135E7C 00132C7C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80135E80 00132C80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r3));
/*80135E84 00132C84*/ PPC::Runtime::ASM::bl(fn_80073FA4);
/*80135E88 00132C88*/ PPC::Runtime::ASM::bl(fn_LoadDatsForCityTrial);
/*80135E8C 00132C8C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xc8);
/*80135E90 00132C90*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD7B0 @ Get_MemoryOffset_SDA21);
/*80135E94 00132C94*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80135E98 00132C98*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD7B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80135E9C 00132C9C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80135EA0 00132CA0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x2d0);
/*80135EA4 00132CA4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80135EA8 00132CA8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80135EAC 00132CAC*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80135EB0 00132CB0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80135EB4 00132CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80135EB8 00132CB8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80135EBC 00132CBC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80135EC0 00132CC0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559A90 @ Get_MemoryOffset_HighBit);
/*80135EC4 00132CC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94c, context->r4));
/*80135EC8 00132CC8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80559A90 @ Get_MemoryOffset_LowBit);
/*80135ECC 00132CCC*/ PPC::Runtime::ASM::li(context->r4, 0x1f0);
/*80135ED0 00132CD0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*80135ED4 00132CD4*/ PPC::Runtime::ASM::bl(fn_8013A1EC);
/*80135ED8 00132CD8*/ PPC::Runtime::ASM::bl(fn_8013AEEC);
/*80135EDC 00132CDC*/ PPC::Runtime::ASM::bl(fn_80162AE0);
/*80135EE0 00132CE0*/ PPC::Runtime::ASM::bl(fn_80162DE4);
/*80135EE4 00132CE4*/ PPC::Runtime::ASM::bl(fn_80163294);
/*80135EE8 00132CE8*/ PPC::Runtime::ASM::bl(fn_80163468);
/*80135EEC 00132CEC*/ PPC::Runtime::ASM::bl(fn_80163978);
/*80135EF0 00132CF0*/ PPC::Runtime::ASM::bl(fn_80163D44);
/*80135EF4 00132CF4*/ PPC::Runtime::ASM::bl(fn_80163FB4);
/*80135EF8 00132CF8*/ PPC::Runtime::ASM::bl(fn_80164234);
/*80135EFC 00132CFC*/ PPC::Runtime::ASM::bl(fn_8016180C);
/*80135F00 00132D00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80135F04 00132D04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80135F08 00132D08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80135F0C 00132D0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80135F10 00132D10*/ PPC::Runtime::ASM::blr();
}