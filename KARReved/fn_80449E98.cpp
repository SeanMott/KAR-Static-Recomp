//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn___assert.hpp"
#include "fn_8044B2C0.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_80449E98(PPC::Runtime::GCContext* context)
{
/*80449E98 00446C98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80449E9C 00446C9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80449EA0 00446CA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80449EA4 00446CA4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80449EA8 00446CA8*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*80449EAC 00446CAC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80449EB0 00446CB0*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80449EB4 00446CB4*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*80449EB8 00446CB8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80449EBC 00446CBC*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r27, 26);
/*80449EC0 00446CC0*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_HighBit);
/*80449EC4 00446CC4*/ PPC::Runtime::ASM::mulli(context->r5, context->r0, 0x98);
/*80449EC8 00446CC8*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*80449ECC 00446CCC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_LowBit);
/*80449ED0 00446CD0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80449ED4 00446CD4*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r5);
/*80449ED8 00446CD8*/ PPC::Runtime::ASM::ble(.L_80449EEC);
/*80449EDC 00446CDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80449EE0 00446CE0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r27);
/*80449EE4 00446CE4*/ PPC::Runtime::ASM::bne(.L_80449EEC);
/*80449EE8 00446CE8*/ PPC::Runtime::ASM::b(.L_80449EF0);
RUNTIME_PPC_JUMP_LABEL(.L_80449EEC, 0x80449EEC) //this is a jump label
/*80449EEC 00446CEC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80449EF0, 0x80449EF0) //this is a jump label
/*80449EF0 00446CF0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80449EF4 00446CF4*/ PPC::Runtime::ASM::beq(.L_80449F40);
/*80449EF8 00446CF8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*80449EFC 00446CFC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80449F00 00446D00*/ PPC::Runtime::ASM::blt(.L_80449F10);
/*80449F04 00446D04*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*80449F08 00446D08*/ PPC::Runtime::ASM::bge(.L_80449F10);
/*80449F0C 00446D0C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80449F10, 0x80449F10) //this is a jump label
/*80449F10 00446D10*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80449F14 00446D14*/ PPC::Runtime::ASM::bne(.L_80449F2C);
/*80449F18 00446D18*/ PPC::Runtime::ASM::lis(context->r4, String_ "flag_GreaterThenEqual_0_And_flag_LessThen_USERPAN_NU" Get_MemoryOffset_HighBit);
/*80449F1C 00446D1C*/ PPC::Runtime::ASM::li(context->r3, String_ "synth." Get_MemoryOffset_SDA21);
/*80449F20 00446D20*/ PPC::Runtime::ASM::addi(context->r5, context->r4, String_ "flag_GreaterThenEqual_0_And_flag_LessThen_USERPAN_NU" Get_MemoryOffset_LowBit);
/*80449F24 00446D24*/ PPC::Runtime::ASM::li(context->r4, 0x824);
/*80449F28 00446D28*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80449F2C, 0x80449F2C) //this is a jump label
/*80449F2C 00446D2C*/ PPC::Runtime::ASM::add(context->r4, context->r31, context->r29);
/*80449F30 00446D30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80449F34 00446D34*/ PPC::Runtime::ASM::stb(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66, context->r4));
/*80449F38 00446D38*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80449F3C 00446D3C*/ PPC::Runtime::ASM::bl(fn_8044B2C0);
RUNTIME_PPC_JUMP_LABEL(.L_80449F40, 0x80449F40) //this is a jump label
/*80449F40 00446D40*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80449F44 00446D44*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80449F48 00446D48*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80449F4C 00446D4C*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80449F50 00446D50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80449F54 00446D54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80449F58 00446D58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80449F5C 00446D5C*/ PPC::Runtime::ASM::blr();
}