//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005F6A8.hpp"



void fn_800AF078(PPC::Runtime::GCContext* context)
{
/*800AF078 000ABE78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AF07C 000ABE7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AF080 000ABE80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*800AF084 000ABE84*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800AF088 000ABE88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF08C 000ABE8C*/ PPC::Runtime::ASM::bne(.L_800AF0A8);
/*800AF090 000ABE90*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AF094 000ABE94*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AF098 000ABE98*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AF09C 000ABE9C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800AF0A0 000ABEA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800AF0A4 000ABEA4*/ PPC::Runtime::ASM::b(.L_800AF0BC);
RUNTIME_PPC_JUMP_LABEL(.L_800AF0A8, 0x800AF0A8) //this is a jump label
/*800AF0A8 000ABEA8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*800AF0AC 000ABEAC*/ PPC::Runtime::ASM::beq(.L_800AF0B8);
/*800AF0B0 000ABEB0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3);
/*800AF0B4 000ABEB4*/ PPC::Runtime::ASM::bne(.L_800AF0BC);
RUNTIME_PPC_JUMP_LABEL(.L_800AF0B8, 0x800AF0B8) //this is a jump label
/*800AF0B8 000ABEB8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800AF0BC, 0x800AF0BC) //this is a jump label
/*800AF0BC 000ABEBC*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800AF0C0 000ABEC0*/ PPC::Runtime::ASM::beq(.L_800AF0E0);
/*800AF0C4 000ABEC4*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AF0C8 000ABEC8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AF0CC 000ABECC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*800AF0D0 000ABED0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*800AF0D4 000ABED4*/ PPC::Runtime::ASM::beq(.L_800AF0E0);
/*800AF0D8 000ABED8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800AF0DC 000ABEDC*/ PPC::Runtime::ASM::bl(fn_8005F6A8);
RUNTIME_PPC_JUMP_LABEL(.L_800AF0E0, 0x800AF0E0) //this is a jump label
/*800AF0E0 000ABEE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF0E4 000ABEE4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AF0E8 000ABEE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AF0EC 000ABEEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AF0F0 000ABEF0*/ PPC::Runtime::ASM::blr();
}