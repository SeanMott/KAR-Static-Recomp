//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "EXISelect.hpp"
#include "EXIImm.hpp"
#include "EXISync.hpp"
#include "EXIImm.hpp"
#include "EXISync.hpp"
#include "EXIDeselect.hpp"



void fn___CARDReadStatus(PPC::Runtime::GCContext* context)
{
/*803E223C 003DF03C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E2240 003DF040*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803E2244 003DF044*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E2248 003DF048*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803E224C 003DF04C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E2250 003DF050*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E2254 003DF054*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803E2258 003DF058*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E225C 003DF05C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E2260 003DF060*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803E2264 003DF064*/ PPC::Runtime::ASM::bl(EXISelect);
/*803E2268 003DF068*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E226C 003DF06C*/ PPC::Runtime::ASM::bne(.L_803E2278);
/*803E2270 003DF070*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E2274 003DF074*/ PPC::Runtime::ASM::b(.L_803E2310);
RUNTIME_PPC_JUMP_LABEL(.L_803E2278, 0x803E2278) //this is a jump label
/*803E2278 003DF078*/ PPC::Runtime::ASM::lis(context->r0, 0x8300);
/*803E227C 003DF07C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E2280 003DF080*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E2284 003DF084*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*803E2288 003DF088*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803E228C 003DF08C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803E2290 003DF090*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803E2294 003DF094*/ PPC::Runtime::ASM::bl(EXIImm);
/*803E2298 003DF098*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E229C 003DF09C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E22A0 003DF0A0*/ PPC::Runtime::ASM::srwi(context->r31, context->r0, 5);
/*803E22A4 003DF0A4*/ PPC::Runtime::ASM::bl(EXISync);
/*803E22A8 003DF0A8*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E22AC 003DF0AC*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E22B0 003DF0B0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E22B4 003DF0B4*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803E22B8 003DF0B8*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803E22BC 003DF0BC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803E22C0 003DF0C0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803E22C4 003DF0C4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803E22C8 003DF0C8*/ PPC::Runtime::ASM::bl(EXIImm);
/*803E22CC 003DF0CC*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E22D0 003DF0D0*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E22D4 003DF0D4*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E22D8 003DF0D8*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803E22DC 003DF0DC*/ PPC::Runtime::ASM::bl(EXISync);
/*803E22E0 003DF0E0*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E22E4 003DF0E4*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E22E8 003DF0E8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E22EC 003DF0EC*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803E22F0 003DF0F0*/ PPC::Runtime::ASM::bl(EXIDeselect);
/*803E22F4 003DF0F4*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E22F8 003DF0F8*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E22FC 003DF0FC*/ PPC::Runtime::ASM::or.(context->r31, context->r31, context->r0);
/*803E2300 003DF100*/ PPC::Runtime::ASM::beq(.L_803E230C);
/*803E2304 003DF104*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E2308 003DF108*/ PPC::Runtime::ASM::b(.L_803E2310);
RUNTIME_PPC_JUMP_LABEL(.L_803E230C, 0x803E230C) //this is a jump label
/*803E230C 003DF10C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803E2310, 0x803E2310) //this is a jump label
/*803E2310 003DF110*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803E2314 003DF114*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E2318 003DF118*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E231C 003DF11C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E2320 003DF120*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803E2324 003DF124*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E2328 003DF128*/ PPC::Runtime::ASM::blr();
}