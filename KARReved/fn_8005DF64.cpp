//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D864.hpp"



void fn_8005DF64(PPC::Runtime::GCContext* context)
{
/*8005DF64 0005AD64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005DF68 0005AD68*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005DF6C 0005AD6C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8005DF70 0005AD70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8005DF74 0005AD74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DF78 0005AD78*/ PPC::Runtime::ASM::bl(fn_8005D864);
/*8005DF7C 0005AD7C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005DF80 0005AD80*/ PPC::Runtime::ASM::beq(.L_8005DFE8);
/*8005DF84 0005AD84*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xb8);
/*8005DF88 0005AD88*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005DF8C 0005AD8C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8005DF90 0005AD90*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005DF94 0005AD94*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r6);
/*8005DF98 0005AD98*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8005DF9C 0005AD9C*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x33c);
/*8005DFA0 0005ADA0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFA4 0005ADA4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*8005DFA8 0005ADA8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFAC 0005ADAC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFB0 0005ADB0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 3, 28, 28);
/*8005DFB4 0005ADB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFB8 0005ADB8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFBC 0005ADBC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 2, 29, 29);
/*8005DFC0 0005ADC0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFC4 0005ADC4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFC8 0005ADC8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 1, 30, 30);
/*8005DFCC 0005ADCC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFD0 0005ADD0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFD4 0005ADD4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 4, 27, 27);
/*8005DFD8 0005ADD8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DFDC 0005ADDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
/*8005DFE0 0005ADE0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*8005DFE4 0005ADE4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8005DFE8, 0x8005DFE8) //this is a jump label
/*8005DFE8 0005ADE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DFEC 0005ADEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005DFF0 0005ADF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005DFF4 0005ADF4*/ PPC::Runtime::ASM::blr();
}