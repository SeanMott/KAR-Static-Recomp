//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025A184(PPC::Runtime::GCContext* context)
{
/*8025A184 00256F84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025A188 00256F88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025A18C 00256F8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A190 00256F90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A194 00256F94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025A198 00256F98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025A19C 00256F9C*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025A1A0 00256FA0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A1A4 00256FA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A1A8 00256FA8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A1AC 00256FAC*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025A1B0 00256FB0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025A1B4 00256FB4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025A1B8 00256FB8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025A1BC 00256FBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A1C0 00256FC0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A1C4 00256FC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025A1C8 00256FC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025A1CC 00256FCC*/ PPC::Runtime::ASM::blr();
}