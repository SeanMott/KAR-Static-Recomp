//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8037AFD0.hpp"
#include "fn_8037B028.hpp"
#include "fn_8037AFD0.hpp"
#include "fn_8037B028.hpp"
#include "fn_8037AFD0.hpp"
#include "fn_8037B028.hpp"
#include "fn_8037B33C.hpp"



void fn_8032ED28(PPC::Runtime::GCContext* context)
{
/*8032ED28 0032BB28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8032ED2C 0032BB2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8032ED30 0032BB30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/* 8032ED34 0032BB34  54 80 06 3F */ clrlwi. context->r0 , context->r4 , 24
/*8032ED38 0032BB38*/ PPC::Runtime::ASM::lis(context->r4, lbl_804E3808 @ Get_MemoryOffset_HighBit);
/*8032ED3C 0032BB3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8032ED40 0032BB40*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_804E3808 @ Get_MemoryOffset_LowBit);
/*8032ED44 0032BB44*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8032ED48 0032BB48*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8032ED4C 0032BB4C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8032ED50 0032BB50*/ PPC::Runtime::ASM::beq(.L_8032EE48);
/*8032ED54 0032BB54*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8032ED58 0032BB58*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032ED5C 0032BB5C*/ PPC::Runtime::ASM::li(context->r5, lbl_805DA908 @ Get_MemoryOffset_SDA21);
/*8032ED60 0032BB60*/ PPC::Runtime::ASM::li(context->r6, lbl_805DA900 @ Get_MemoryOffset_SDA21);
/*8032ED64 0032BB64*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8032ED68 0032BB68*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*8032ED6C 0032BB6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8032ED70 0032BB70*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xf7c);
/*8032ED74 0032BB74*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*8032ED78 0032BB78*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8032ED7C 0032BB7C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x134);
/*8032ED80 0032BB80*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032ED84 0032BB84*/ PPC::Runtime::ASM::bl(fn_8037AFD0);
/*8032ED88 0032BB88*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*8032ED8C 0032BB8C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x134);
/*8032ED90 0032BB90*/ PPC::Runtime::ASM::li(context->r4, 0x27a7);
/*8032ED94 0032BB94*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8032ED98 0032BB98*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8032ED9C 0032BB9C*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8032EDA0 0032BBA0*/ PPC::Runtime::ASM::bl(fn_8037B028);
/*8032EDA4 0032BBA4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8032EDA8 0032BBA8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032EDAC 0032BBAC*/ PPC::Runtime::ASM::li(context->r5, lbl_805DA908 @ Get_MemoryOffset_SDA21);
/*8032EDB0 0032BBB0*/ PPC::Runtime::ASM::li(context->r6, lbl_805DA900 @ Get_MemoryOffset_SDA21);
/*8032EDB4 0032BBB4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8032EDB8 0032BBB8*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*8032EDBC 0032BBBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8032EDC0 0032BBC0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xf90);
/*8032EDC4 0032BBC4*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*8032EDC8 0032BBC8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8032EDCC 0032BBCC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x180);
/*8032EDD0 0032BBD0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032EDD4 0032BBD4*/ PPC::Runtime::ASM::bl(fn_8037AFD0);
/*8032EDD8 0032BBD8*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*8032EDDC 0032BBDC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x180);
/*8032EDE0 0032BBE0*/ PPC::Runtime::ASM::li(context->r4, 0x27a7);
/*8032EDE4 0032BBE4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8032EDE8 0032BBE8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8032EDEC 0032BBEC*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8032EDF0 0032BBF0*/ PPC::Runtime::ASM::bl(fn_8037B028);
/*8032EDF4 0032BBF4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8032EDF8 0032BBF8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032EDFC 0032BBFC*/ PPC::Runtime::ASM::li(context->r5, lbl_805DA908 @ Get_MemoryOffset_SDA21);
/*8032EE00 0032BC00*/ PPC::Runtime::ASM::li(context->r6, lbl_805DA900 @ Get_MemoryOffset_SDA21);
/*8032EE04 0032BC04*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8032EE08 0032BC08*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*8032EE0C 0032BC0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8032EE10 0032BC10*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xfa4);
/*8032EE14 0032BC14*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*8032EE18 0032BC18*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8032EE1C 0032BC1C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x1cc);
/*8032EE20 0032BC20*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032EE24 0032BC24*/ PPC::Runtime::ASM::bl(fn_8037AFD0);
/*8032EE28 0032BC28*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*8032EE2C 0032BC2C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x1cc);
/*8032EE30 0032BC30*/ PPC::Runtime::ASM::li(context->r4, 0x27a7);
/*8032EE34 0032BC34*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8032EE38 0032BC38*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8032EE3C 0032BC3C*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8032EE40 0032BC40*/ PPC::Runtime::ASM::bl(fn_8037B028);
/*8032EE44 0032BC44*/ PPC::Runtime::ASM::b(.L_8032EE6C);
RUNTIME_PPC_JUMP_LABEL(.L_8032EE48, 0x8032EE48) //this is a jump label
/*8032EE48 0032BC48*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8032EE4C 0032BC4C*/ PPC::Runtime::ASM::mr(context->r30, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_8032EE50, 0x8032EE50) //this is a jump label
/*8032EE50 0032BC50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x134);
/*8032EE54 0032BC54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8032EE58 0032BC58*/ PPC::Runtime::ASM::bl(fn_8037B33C);
/*8032EE5C 0032BC5C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*8032EE60 0032BC60*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4c);
/*8032EE64 0032BC64*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x3);
/*8032EE68 0032BC68*/ PPC::Runtime::ASM::blt(.L_8032EE50);
RUNTIME_PPC_JUMP_LABEL(.L_8032EE6C, 0x8032EE6C) //this is a jump label
/*8032EE6C 0032BC6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8032EE70 0032BC70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8032EE74 0032BC74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8032EE78 0032BC78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8032EE7C 0032BC7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8032EE80 0032BC80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8032EE84 0032BC84*/ PPC::Runtime::ASM::blr();
}