//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800A95AC(PPC::Runtime::GCContext* context)
{
/*800A95AC 000A63AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800A95B0 000A63B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A95B4 000A63B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A95B8 000A63B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800A95BC 000A63BC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r3));
/*800A95C0 000A63C0*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800A95C4 000A63C4*/ PPC::Runtime::ASM::beq(.L_800A95D0);
/*800A95C8 000A63C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800A95CC 000A63CC*/ PPC::Runtime::ASM::b(.L_800A95D4);
RUNTIME_PPC_JUMP_LABEL(.L_800A95D0, 0x800A95D0) //this is a jump label
/*800A95D0 000A63D0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800A95D4, 0x800A95D4) //this is a jump label
/*800A95D4 000A63D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A95D8 000A63D8*/ PPC::Runtime::ASM::beq(.L_800A9608);
/*800A95DC 000A63DC*/ PPC::Runtime::ASM::lis(context->r6, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A95E0 000A63E0*/ PPC::Runtime::ASM::lis(context->r5, StructWithFuncPtrs_25 @ Get_MemoryOffset_HighBit);
/*800A95E4 000A63E4*/ PPC::Runtime::ASM::addi(context->r7, context->r6, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A95E8 000A63E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r7));
/*800A95EC 000A63EC*/ PPC::Runtime::ASM::addi(context->r6, context->r5, StructWithFuncPtrs_25 @ Get_MemoryOffset_LowBit);
/*800A95F0 000A63F0*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*800A95F4 000A63F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f38, context->r7));
/*800A95F8 000A63F8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800A95FC 000A63FC*/ PPC::Runtime::ASM::lwzx(context->r12, context->r6, context->r0);
/*800A9600 000A6400*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800A9604 000A6404*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800A9608, 0x800A9608) //this is a jump label
/*800A9608 000A6408*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A960C 000A640C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A9610 000A6410*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800A9614 000A6414*/ PPC::Runtime::ASM::blr();
}