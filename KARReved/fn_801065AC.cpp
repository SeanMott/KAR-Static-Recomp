//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7AB8.hpp"
#include "fn_800EA084.hpp"
#include "fn_killWhispy.hpp"



void fn_801065AC(PPC::Runtime::GCContext* context)
{
/*801065AC 001033AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801065B0 001033B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801065B4 001033B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801065B8 001033B8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*801065BC 001033BC*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*801065C0 001033C0*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*801065C4 001033C4*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*801065C8 001033C8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801065CC 001033CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*801065D0 001033D0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801065D4 001033D4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801065D8 001033D8*/ PPC::Runtime::ASM::b(.L_80106634);
RUNTIME_PPC_JUMP_LABEL(.L_801065DC, 0x801065DC) //this is a jump label
/*801065DC 001033DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*801065E0 001033E0*/ PPC::Runtime::ASM::bl(fn_800F7AB8);
/*801065E4 001033E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801065E8 001033E8*/ PPC::Runtime::ASM::bne(.L_8010662C);
/*801065EC 001033EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r27));
/*801065F0 001033F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*801065F4 001033F4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801065F8 001033F8*/ PPC::Runtime::ASM::ble(.L_80106608);
/*801065FC 001033FC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*80106600 00103400*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80106604 00103404*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_80106608, 0x80106608) //this is a jump label
/*80106608 00103408*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFA38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010660C 0010340C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80106610 00103410*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80106614 00103414*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*80106618 00103418*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*8010661C 0010341C*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*80106620 00103420*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80106624 00103424*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80106628 00103428*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_8010662C, 0x8010662C) //this is a jump label
/*8010662C 0010342C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80106630 00103430*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80106634, 0x80106634) //this is a jump label
/*80106634 00103434*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80106638 00103438*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*8010663C 0010343C*/ PPC::Runtime::ASM::blt(.L_801065DC);
/*80106640 00103440*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80106644 00103444*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80106648 00103448*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010664C 0010344C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80106650 00103450*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80106654 00103454*/ PPC::Runtime::ASM::blr();
}