//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80064CAC(PPC::Runtime::GCContext* context)
{
/*80064CAC 00061AAC*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80064CB0 00061AB0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*80064CB4 00061AB4*/ PPC::Runtime::ASM::lfs(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80064CB8 00061AB8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f5, context->f0);
/*80064CBC 00061ABC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80064CC0 00061AC0*/ PPC::Runtime::ASM::lfs(context->f8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80064CC4 00061AC4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r6));
/*80064CC8 00061AC8*/ PPC::Runtime::ASM::fmadds(context->f1, context->f7, context->f1, context->f0);
/*80064CCC 00061ACC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEA50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80064CD0 00061AD0*/ PPC::Runtime::ASM::fmadds(context->f6, context->f8, context->f2, context->f1);
/*80064CD4 00061AD4*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f6);
/*80064CD8 00061AD8*/ PPC::Runtime::ASM::bne(.L_80064CE8);
/*80064CDC 00061ADC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*80064CE0 00061AE0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80064CE4 00061AE4*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_80064CE8, 0x80064CE8) //this is a jump label
/*80064CE8 00061AE8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80064CEC 00061AEC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80064CF0 00061AF0*/ PPC::Runtime::ASM::fmuls(context->f3, context->f5, context->f1);
/*80064CF4 00061AF4*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80064CF8 00061AF8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f5, context->f0);
/*80064CFC 00061AFC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80064D00 00061B00*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80064D04 00061B04*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80064D08 00061B08*/ PPC::Runtime::ASM::fmadds(context->f0, context->f7, context->f1, context->f0);
/*80064D0C 00061B0C*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80064D10 00061B10*/ PPC::Runtime::ASM::fmadds(context->f1, context->f7, context->f4, context->f3);
/*80064D14 00061B14*/ PPC::Runtime::ASM::fmadds(context->f0, context->f8, context->f2, context->f0);
/*80064D18 00061B18*/ PPC::Runtime::ASM::fmadds(context->f1, context->f8, context->f5, context->f1);
/*80064D1C 00061B1C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*80064D20 00061B20*/ PPC::Runtime::ASM::fdivs(context->f0, context->f0, context->f6);
/*80064D24 00061B24*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*80064D28 00061B28*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*80064D2C 00061B2C*/ PPC::Runtime::ASM::blr();
}