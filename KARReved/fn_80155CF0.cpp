//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80131214.hpp"
#include "fn_80059520.hpp"



void fn_80155CF0(PPC::Runtime::GCContext* context)
{
/*80155CF0 00152AF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80155CF4 00152AF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80155CF8 00152AF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155CFC 00152AFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80155D00 00152B00*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80155D04 00152B04*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80155D08 00152B08*/ PPC::Runtime::ASM::bl(fn_80131214);
/*80155D0C 00152B0C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1235 @ Get_MemoryOffset_HighBit);
/*80155D10 00152B10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80155D14 00152B14*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1235 @ Get_MemoryOffset_LowBit);
/*80155D18 00152B18*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80155D1C 00152B1C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x684);
/*80155D20 00152B20*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80155D24 00152B24*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80155D28 00152B28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155D2C 00152B2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80155D30 00152B30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80155D34 00152B34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80155D38 00152B38*/ PPC::Runtime::ASM::blr();
}