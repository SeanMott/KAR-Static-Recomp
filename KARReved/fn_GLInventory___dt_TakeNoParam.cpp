//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8038BDE0.hpp"
#include "fn_8038CB78.hpp"



void fn_GLInventory___dt_TakeNoParam(PPC::Runtime::GCContext* context)
{
/*8038BD64 00388B64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8038BD68 00388B68*/ PPC::Runtime::ASM::mflr(context->r0);
/*8038BD6C 00388B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038BD70 00388B70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038BD74 00388B74*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8038BD78 00388B78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8038BD7C 00388B7C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8038BD80 00388B80*/ PPC::Runtime::ASM::beq(.L_8038BD98);
/*8038BD84 00388B84*/ PPC::Runtime::ASM::bl(fn_8038BDE0);
/*8038BD88 00388B88*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8038BD8C 00388B8C*/ PPC::Runtime::ASM::ble(.L_8038BD98);
/*8038BD90 00388B90*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8038BD94 00388B94*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8038BD98, 0x8038BD98) //this is a jump label
/*8038BD98 00388B98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038BD9C 00388B9C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8038BDA0 00388BA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038BDA4 00388BA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8038BDA8 00388BA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8038BDAC 00388BAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8038BDB0 00388BB0*/ PPC::Runtime::ASM::blr();
}