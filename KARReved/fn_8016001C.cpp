//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138934.hpp"
#include "fn_8015FFAC.hpp"
#include "fn_8015FFAC.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"



void fn_8016001C(PPC::Runtime::GCContext* context)
{
/*8016001C 0015CE1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80160020 0015CE20*/ PPC::Runtime::ASM::mflr(context->r0);
/*80160024 0015CE24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80160028 0015CE28*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016002C 0015CE2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80160030 0015CE30*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80160034 0015CE34*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80160038 0015CE38*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8016003C 0015CE3C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80160040 0015CE40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20c, context->r3));
/*80160044 0015CE44*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80160048 0015CE48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8016004C 0015CE4C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80160050 0015CE50*/ PPC::Runtime::ASM::bl(fn_80138934);
/*80160054 0015CE54*/ PPC::Runtime::ASM::lis(context->r4, fn_8015FFAC @ Get_MemoryOffset_HighBit);
/*80160058 0015CE58*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8016005C 0015CE5C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80160060 0015CE60*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80160064 0015CE64*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8015FFAC @ Get_MemoryOffset_LowBit);
/*80160068 0015CE68*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*8016006C 0015CE6C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20c, context->r31));
/*80160070 0015CE70*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80160074 0015CE74*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0928 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80160078 0015CE78*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8016007C 0015CE7C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E092C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80160080 0015CE80*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*80160084 0015CE84*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80160088 0015CE88*/ PPC::Runtime::ASM::li(context->r4, 0xad);
/*8016008C 0015CE8C*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*80160090 0015CE90*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x210, context->r31));
/*80160094 0015CE94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80160098 0015CE98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016009C 0015CE9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801600A0 0015CEA0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801600A4 0015CEA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801600A8 0015CEA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801600AC 0015CEAC*/ PPC::Runtime::ASM::blr();
}