//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801832C4.hpp"
#include "fn_80183844.hpp"
#include "fn_8018433C.hpp"
#include "fn_80184828.hpp"
#include "fn_80184C0C.hpp"
#include "fn_80184E90.hpp"
#include "fn_801850A8.hpp"
#include "fn_80185358.hpp"
#include "fn_80185654.hpp"
#include "fn_8017C90C.hpp"
#include "fn_8017C990.hpp"
#include "fn_8017CA38.hpp"
#include "fn_8017C9C8.hpp"
#include "fn_8017CA00.hpp"
#include "fn_80183294.hpp"
#include "fn_801842EC.hpp"
#include "fn_8018405C.hpp"
#include "fn_801840F4.hpp"
#include "fn_8017C90C.hpp"
#include "fn_8017C90C.hpp"
#include "fn_801840F4.hpp"
#include "fn_8017C90C.hpp"
#include "fn_8017C90C.hpp"
#include "fn_8017C90C.hpp"
#include "fn_801840F4.hpp"
#include "fn_8017C90C.hpp"
#include "fn_8017C90C.hpp"
#include "fn_8017C90C.hpp"
#include "fn_801840F4.hpp"
#include "fn_8017C90C.hpp"
#include "fn_801841F8.hpp"
#include "fn_80184254.hpp"



void fn_FuncWithAJumpTable_22(PPC::Runtime::GCContext* context)
{
/*80050EA8 0004DCA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80050EAC 0004DCAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80050EB0 0004DCB0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80537430 @ Get_MemoryOffset_HighBit);
/*80050EB4 0004DCB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80050EB8 0004DCB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80050EBC 0004DCBC*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80537430 @ Get_MemoryOffset_LowBit);
/*80050EC0 0004DCC0*/ PPC::Runtime::ASM::bl(fn_801832C4);
/*80050EC4 0004DCC4*/ PPC::Runtime::ASM::bl(fn_80183844);
/*80050EC8 0004DCC8*/ PPC::Runtime::ASM::bl(fn_8018433C);
/*80050ECC 0004DCCC*/ PPC::Runtime::ASM::bl(fn_80184828);
/*80050ED0 0004DCD0*/ PPC::Runtime::ASM::bl(fn_80184C0C);
/*80050ED4 0004DCD4*/ PPC::Runtime::ASM::bl(fn_80184E90);
/*80050ED8 0004DCD8*/ PPC::Runtime::ASM::bl(fn_801850A8);
/*80050EDC 0004DCDC*/ PPC::Runtime::ASM::bl(fn_80185358);
/*80050EE0 0004DCE0*/ PPC::Runtime::ASM::bl(fn_80185654);
/*80050EE4 0004DCE4*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*80050EE8 0004DCE8*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050EEC 0004DCEC*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*80050EF0 0004DCF0*/ PPC::Runtime::ASM::bl(fn_8017C990);
/*80050EF4 0004DCF4*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*80050EF8 0004DCF8*/ PPC::Runtime::ASM::bl(fn_8017CA38);
/*80050EFC 0004DCFC*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*80050F00 0004DD00*/ PPC::Runtime::ASM::bl(fn_8017C9C8);
/*80050F04 0004DD04*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*80050F08 0004DD08*/ PPC::Runtime::ASM::bl(fn_8017CA00);
/*80050F0C 0004DD0C*/ PPC::Runtime::ASM::bl(fn_80183294);
/*80050F10 0004DD10*/ PPC::Runtime::ASM::bl(fn_801842EC);
/*80050F14 0004DD14*/ PPC::Runtime::ASM::bl(fn_8018405C);
/*80050F18 0004DD18*/ PPC::Runtime::ASM::lis(context->r3, lbl_80537430 @ Get_MemoryOffset_HighBit);
/*80050F1C 0004DD1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80537430 @ Get_MemoryOffset_LowBit);
/*80050F20 0004DD20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80050F24 0004DD24*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x9);
/*80050F28 0004DD28*/ PPC::Runtime::ASM::bgt(.L_80050FC0);
/*80050F2C 0004DD2C*/ PPC::Runtime::ASM::lis(context->r3, FuncWithAJumpTable_22_JumpTable_80497BE0 @ Get_MemoryOffset_HighBit);
/*80050F30 0004DD30*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80050F34 0004DD34*/ PPC::Runtime::ASM::addi(context->r3, context->r3, FuncWithAJumpTable_22_JumpTable_80497BE0 @ Get_MemoryOffset_LowBit);
/*80050F38 0004DD38*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80050F3C 0004DD3C*/ PPC::Runtime::ASM::mtctr(context->r0);
/*80050F40 0004DD40*/ PPC::Runtime::ASM::bctr();
/*80050F44 0004DD44*/ PPC::Runtime::ASM::bl(fn_801840F4);
/*80050F48 0004DD48*/ PPC::Runtime::ASM::li(context->r3, 0x1e);
/*80050F4C 0004DD4C*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050F50 0004DD50*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050F54 0004DD54*/ PPC::Runtime::ASM::li(context->r3, 0x1f);
/*80050F58 0004DD58*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050F5C 0004DD5C*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050F60 0004DD60*/ PPC::Runtime::ASM::bl(fn_801840F4);
/*80050F64 0004DD64*/ PPC::Runtime::ASM::li(context->r3, 0x20);
/*80050F68 0004DD68*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050F6C 0004DD6C*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050F70 0004DD70*/ PPC::Runtime::ASM::li(context->r3, 0x21);
/*80050F74 0004DD74*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050F78 0004DD78*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050F7C 0004DD7C*/ PPC::Runtime::ASM::li(context->r3, 0x22);
/*80050F80 0004DD80*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050F84 0004DD84*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050F88 0004DD88*/ PPC::Runtime::ASM::bl(fn_801840F4);
/*80050F8C 0004DD8C*/ PPC::Runtime::ASM::li(context->r3, 0x23);
/*80050F90 0004DD90*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050F94 0004DD94*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050F98 0004DD98*/ PPC::Runtime::ASM::li(context->r3, 0x24);
/*80050F9C 0004DD9C*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050FA0 0004DDA0*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050FA4 0004DDA4*/ PPC::Runtime::ASM::li(context->r3, 0x25);
/*80050FA8 0004DDA8*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050FAC 0004DDAC*/ PPC::Runtime::ASM::b(.L_80050FD4);
/*80050FB0 0004DDB0*/ PPC::Runtime::ASM::bl(fn_801840F4);
/*80050FB4 0004DDB4*/ PPC::Runtime::ASM::li(context->r3, 0x26);
/*80050FB8 0004DDB8*/ PPC::Runtime::ASM::bl(fn_8017C90C);
/*80050FBC 0004DDBC*/ PPC::Runtime::ASM::b(.L_80050FD4);
RUNTIME_PPC_JUMP_LABEL(.L_80050FC0, 0x80050FC0) //this is a jump label
/*80050FC0 0004DDC0*/ PPC::Runtime::ASM::lis(context->r3, String_ "gmlanmenu." Get_MemoryOffset_HighBit);
/*80050FC4 0004DDC4*/ PPC::Runtime::ASM::li(context->r4, 0x703);
/*80050FC8 0004DDC8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "gmlanmenu." Get_MemoryOffset_LowBit);
/*80050FCC 0004DDCC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51E0 @ Get_MemoryOffset_SDA21);
/*80050FD0 0004DDD0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80050FD4, 0x80050FD4) //this is a jump label
/*80050FD4 0004DDD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80050FD8 0004DDD8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80050FDC 0004DDDC*/ PPC::Runtime::ASM::beq(.L_80050FF8);
/*80050FE0 0004DDE0*/ PPC::Runtime::ASM::bge(.L_80051000);
/*80050FE4 0004DDE4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80050FE8 0004DDE8*/ PPC::Runtime::ASM::bge(.L_80050FF0);
/*80050FEC 0004DDEC*/ PPC::Runtime::ASM::b(.L_80051000);
RUNTIME_PPC_JUMP_LABEL(.L_80050FF0, 0x80050FF0) //this is a jump label
/*80050FF0 0004DDF0*/ PPC::Runtime::ASM::bl(fn_801841F8);
/*80050FF4 0004DDF4*/ PPC::Runtime::ASM::b(.L_80051014);
RUNTIME_PPC_JUMP_LABEL(.L_80050FF8, 0x80050FF8) //this is a jump label
/*80050FF8 0004DDF8*/ PPC::Runtime::ASM::bl(fn_80184254);
/*80050FFC 0004DDFC*/ PPC::Runtime::ASM::b(.L_80051014);
RUNTIME_PPC_JUMP_LABEL(.L_80051000, 0x80051000) //this is a jump label
/*80051000 0004DE00*/ PPC::Runtime::ASM::lis(context->r3, String_ "gmlanmenu." Get_MemoryOffset_HighBit);
/*80051004 0004DE04*/ PPC::Runtime::ASM::li(context->r4, 0x70e);
/*80051008 0004DE08*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "gmlanmenu." Get_MemoryOffset_LowBit);
/*8005100C 0004DE0C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51E0 @ Get_MemoryOffset_SDA21);
/*80051010 0004DE10*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80051014, 0x80051014) //this is a jump label
/*80051014 0004DE14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80051018 0004DE18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005101C 0004DE1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80051020 0004DE20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80051024 0004DE24*/ PPC::Runtime::ASM::blr();
}