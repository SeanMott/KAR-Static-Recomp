//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80286188.hpp"
#include "fn_80286188.hpp"
#include "fn_80286188.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80285F98.hpp"
#include "fn_80285960.hpp"
#include "fn_80285960.hpp"
#include "fn_80285960.hpp"
#include "fn_80285F98.hpp"
#include "fn_80285F98.hpp"
#include "fn_80285F98.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_80284FF0(PPC::Runtime::GCContext* context)
{
/*80284FF0 00281DF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80284FF4 00281DF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80284FF8 00281DF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80284FFC 00281DFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80285000 00281E00*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80285004 00281E04*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80285008 00281E08  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028500C 00281E0C*/ PPC::Runtime::ASM::beq(.L_80285114);
/*80285010 00281E10*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BC0D0 @ Get_MemoryOffset_HighBit);
/*80285014 00281E14*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1248);
/*80285018 00281E18*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804BC0D0 @ Get_MemoryOffset_LowBit);
/*8028501C 00281E1C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285020 00281E20*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80285024 00281E24*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*80285028 00281E28*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*8028502C 00281E2C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80285030 00281E30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*80285034 00281E34*/ PPC::Runtime::ASM::bl(fn_80286188);
/*80285038 00281E38*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1188);
/*8028503C 00281E3C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285040 00281E40*/ PPC::Runtime::ASM::bl(fn_80286188);
/*80285044 00281E44*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10c8);
/*80285048 00281E48*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*8028504C 00281E4C*/ PPC::Runtime::ASM::bl(fn_80286188);
/*80285050 00281E50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xf34);
/*80285054 00281E54*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285058 00281E58*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*8028505C 00281E5C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xda0);
/*80285060 00281E60*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285064 00281E64*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*80285068 00281E68*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xc0c);
/*8028506C 00281E6C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285070 00281E70*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*80285074 00281E74*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xa78);
/*80285078 00281E78*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*8028507C 00281E7C*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*80285080 00281E80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8e4);
/*80285084 00281E84*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285088 00281E88*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*8028508C 00281E8C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x750);
/*80285090 00281E90*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285094 00281E94*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*80285098 00281E98*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6b8);
/*8028509C 00281E9C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850A0 00281EA0*/ PPC::Runtime::ASM::bl(fn_80285F98);
/*802850A4 00281EA4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5f8);
/*802850A8 00281EA8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850AC 00281EAC*/ PPC::Runtime::ASM::bl(fn_80285960);
/*802850B0 00281EB0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x538);
/*802850B4 00281EB4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850B8 00281EB8*/ PPC::Runtime::ASM::bl(fn_80285960);
/*802850BC 00281EBC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x478);
/*802850C0 00281EC0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850C4 00281EC4*/ PPC::Runtime::ASM::bl(fn_80285960);
/*802850C8 00281EC8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3e0);
/*802850CC 00281ECC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850D0 00281ED0*/ PPC::Runtime::ASM::bl(fn_80285F98);
/*802850D4 00281ED4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x348);
/*802850D8 00281ED8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850DC 00281EDC*/ PPC::Runtime::ASM::bl(fn_80285F98);
/*802850E0 00281EE0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802850E4 00281EE4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850E8 00281EE8*/ PPC::Runtime::ASM::bl(fn_80285F98);
/*802850EC 00281EEC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802850F0 00281EF0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802850F4 00281EF4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802850F8 00281EF8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802850FC 00281EFC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80285100 00281F00*/ PPC::Runtime::ASM::bl(fn_80285130);
/*80285104 00281F04*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80285108 00281F08*/ PPC::Runtime::ASM::ble(.L_80285114);
/*8028510C 00281F0C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80285110 00281F10*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80285114, 0x80285114) //this is a jump label
/*80285114 00281F14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80285118 00281F18*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028511C 00281F1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80285120 00281F20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80285124 00281F24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80285128 00281F28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028512C 00281F2C*/ PPC::Runtime::ASM::blr();
}