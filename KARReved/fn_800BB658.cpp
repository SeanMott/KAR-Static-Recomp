//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800BB658(PPC::Runtime::GCContext* context)
{
/*800BB658 000B8458*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800BB65C 000B845C*/ PPC::Runtime::ASM::blt(.L_800BB668);
/*800BB660 000B8460*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800BB664 000B8464*/ PPC::Runtime::ASM::blt(.L_800BB670);
RUNTIME_PPC_JUMP_LABEL(.L_800BB668, 0x800BB668) //this is a jump label
/*800BB668 000B8468*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BB66C 000B846C*/ PPC::Runtime::ASM::b(.L_800BB684);
RUNTIME_PPC_JUMP_LABEL(.L_800BB670, 0x800BB670) //this is a jump label
/*800BB670 000B8470*/ PPC::Runtime::ASM::lis(context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BB674 000B8474*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800BB678 000B8478*/ PPC::Runtime::ASM::addi(context->r3, context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BB67C 000B847C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800BB680 000B8480*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800BB684, 0x800BB684) //this is a jump label
/*800BB684 000B8484*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BB688 000B8488*/ PPC::Runtime::ASM::beq(.L_800BB694);
/*800BB68C 000B848C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BB690 000B8490*/ PPC::Runtime::ASM::b(.L_800BB698);
RUNTIME_PPC_JUMP_LABEL(.L_800BB694, 0x800BB694) //this is a jump label
/*800BB694 000B8494*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BB698, 0x800BB698) //this is a jump label
/*800BB698 000B8498*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BB69C 000B849C*/ PPC::Runtime::ASM::beq(.L_800BB6A8);
/*800BB6A0 000B84A0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800BB6A4 000B84A4*/ PPC::Runtime::ASM::b(.L_800BB6AC);
RUNTIME_PPC_JUMP_LABEL(.L_800BB6A8, 0x800BB6A8) //this is a jump label
/*800BB6A8 000B84A8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BB6AC, 0x800BB6AC) //this is a jump label
/*800BB6AC 000B84AC*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*800BB6B0 000B84B0*/ PPC::Runtime::ASM::beq(.L_800BB6D4);
/*800BB6B4 000B84B4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16c, context->r6));
/*800BB6B8 000B84B8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800BB6BC 000B84BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x170, context->r6));
/*800BB6C0 000B84C0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800BB6C4 000B84C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800BB6C8 000B84C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x174, context->r6));
/*800BB6CC 000B84CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800BB6D0 000B84D0*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800BB6D4, 0x800BB6D4) //this is a jump label
/*800BB6D4 000B84D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BB6D8 000B84D8*/ PPC::Runtime::ASM::blr();
}