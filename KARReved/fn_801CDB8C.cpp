//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CDB6C.hpp"



void fn_801CDB8C(PPC::Runtime::GCContext* context)
{
/*801CDB8C 001CA98C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CDB90 001CA990*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CDB94 001CA994*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CDB98 001CA998*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CDB9C 001CA99C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801CDBA0 001CA9A0*/ PPC::Runtime::ASM::bl(fn_801CDB6C);
/*801CDBA4 001CA9A4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801CDBA8 001CA9A8*/ PPC::Runtime::ASM::beq(.L_801CDBBC);
/*801CDBAC 001CA9AC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r31));
/*801CDBB0 001CA9B0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CDBB4 001CA9B4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*801CDBB8 001CA9B8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801CDBBC, 0x801CDBBC) //this is a jump label
/*801CDBBC 001CA9BC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r31));
/*801CDBC0 001CA9C0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801CDBC4 001CA9C4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801CDBC8 001CA9C8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x36c, context->r31));
/*801CDBCC 001CA9CC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r31));
/*801CDBD0 001CA9D0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f8, context->r31));
/*801CDBD4 001CA9D4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801CDBD8 001CA9D8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x370, context->r31));
/*801CDBDC 001CA9DC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801CDBE0 001CA9E0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3fc, context->r31));
/*801CDBE4 001CA9E4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801CDBE8 001CA9E8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x374, context->r31));
/*801CDBEC 001CA9EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CDBF0 001CA9F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CDBF4 001CA9F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CDBF8 001CA9F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CDBFC 001CA9FC*/ PPC::Runtime::ASM::blr();
}