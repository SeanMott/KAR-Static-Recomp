//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025D940(PPC::Runtime::GCContext* context)
{
/*8025D940 0025A740*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025D944 0025A744*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025D948 0025A748*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D94C 0025A74C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D950 0025A750*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D954 0025A754*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025D958 0025A758*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025D95C 0025A75C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D960 0025A760*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025D964 0025A764*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D968 0025A768*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D96C 0025A76C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025D970 0025A770*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D974 0025A774*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D978 0025A778*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025D97C 0025A77C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D980 0025A780*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025D984 0025A784*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D988 0025A788*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D98C 0025A78C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025D990 0025A790*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D994 0025A794*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025D998 0025A798*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025D99C 0025A79C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EF4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D9A0 0025A7A0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025D9A4 0025A7A4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D9A8 0025A7A8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EF0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D9AC 0025A7AC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025D9B0 0025A7B0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025D9B4 0025A7B4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025D9B8 0025A7B8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025D9BC 0025A7BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D9C0 0025A7C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D9C4 0025A7C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D9C8 0025A7C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025D9CC 0025A7CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025D9D0 0025A7D0*/ PPC::Runtime::ASM::blr();
}