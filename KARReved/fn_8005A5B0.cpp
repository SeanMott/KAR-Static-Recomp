//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005B924.hpp"
#include "fn_8005BA38.hpp"
#include "fn_8005C298.hpp"
#include "fn_80059CFC.hpp"
#include "fn_80059CFC.hpp"



void fn_8005A5B0(PPC::Runtime::GCContext* context)
{
/*8005A5B0 000573B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005A5B4 000573B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005A5B8 000573B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005A5BC 000573BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005A5C0 000573C0*/ PPC::Runtime::ASM::bl(fn_8005B924);
/*8005A5C4 000573C4*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*8005A5C8 000573C8*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8005A5CC 000573CC*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*8005A5D0 000573D0*/ PPC::Runtime::ASM::li(context->r4, 0x8);
/*8005A5D4 000573D4*/ PPC::Runtime::ASM::bl(fn_8005BA38);
/*8005A5D8 000573D8*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*8005A5DC 000573DC*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*8005A5E0 000573E0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8005A5E4 000573E4*/ PPC::Runtime::ASM::bl(fn_8005C298);
/*8005A5E8 000573E8*/ PPC::Runtime::ASM::lis(context->r3, fn_80059CFC @ Get_MemoryOffset_HighBit);
/*8005A5EC 000573EC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_80059CFC @ Get_MemoryOffset_LowBit);
/*8005A5F0 000573F0*/ PPC::Runtime::ASM::bl(fn_80448220);
/*8005A5F4 000573F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005A5F8 000573F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005A5FC 000573FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005A600 00057400*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005A604 00057404*/ PPC::Runtime::ASM::blr();
}