//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_DObjAmnesia(PPC::Runtime::GCContext* context)
{
/*803F4AB4 003F18B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803F4AB8 003F18B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F4ABC 003F18BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F4AC0 003F18C0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE170 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F4AC4 003F18C4*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*803F4AC8 003F18C8*/ PPC::Runtime::ASM::bne(.L_803F4AD4);
/*803F4ACC 003F18CC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803F4AD0 003F18D0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE170 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803F4AD4, 0x803F4AD4) //this is a jump label
/*803F4AD4 003F18D4*/ PPC::Runtime::ASM::lis(context->r4, lbl_80501D10 @ Get_MemoryOffset_HighBit);
/*803F4AD8 003F18D8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_80501D10 @ Get_MemoryOffset_LowBit);
/*803F4ADC 003F18DC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*803F4AE0 003F18E0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*803F4AE4 003F18E4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*803F4AE8 003F18E8*/ PPC::Runtime::ASM::bctrl();
/*803F4AEC 003F18EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F4AF0 003F18F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F4AF4 003F18F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803F4AF8 003F18F8*/ PPC::Runtime::ASM::blr();
}