//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80127564(PPC::Runtime::GCContext* context)
{
/*80127564 00124364*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80127568 00124368*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012756C 0012436C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80127570 00124370*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80127574 00124374*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80127578 00124378*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012757C 0012437C*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*80127580 00124380*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80127584 00124384*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*80127588 00124388*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbd0, context->r31));
/*8012758C 0012438C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80127590 00124390*/ PPC::Runtime::ASM::beq(.L_801275A0);
/*80127594 00124394*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80127598 00124398*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8012759C 0012439C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbd0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801275A0, 0x801275A0) //this is a jump label
/*801275A0 001243A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801275A4 001243A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801275A8 001243A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801275AC 001243AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801275B0 001243B0*/ PPC::Runtime::ASM::blr();
}