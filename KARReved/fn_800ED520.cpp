//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000AE50.hpp"



void fn_800ED520(PPC::Runtime::GCContext* context)
{
/*800ED520 000EA320*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ED524 000EA324*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ED528 000EA328*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ED52C 000EA32C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ED530 000EA330*/ PPC::Runtime::ASM::li(context->r31, -0x1);
/*800ED534 000EA334*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*800ED538 000EA338*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*800ED53C 000EA33C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x17);
/*800ED540 000EA340*/ PPC::Runtime::ASM::bgt(.L_800ED598);
/*800ED544 000EA344*/ PPC::Runtime::ASM::lis(context->r3, jumptable_804A538C @ Get_MemoryOffset_HighBit);
/*800ED548 000EA348*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800ED54C 000EA34C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_804A538C @ Get_MemoryOffset_LowBit);
/*800ED550 000EA350*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800ED554 000EA354*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800ED558 000EA358*/ PPC::Runtime::ASM::bctr();
/*800ED55C 000EA35C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800ED560 000EA360*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED564 000EA364*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*800ED568 000EA368*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED56C 000EA36C*/ PPC::Runtime::ASM::li(context->r31, 0x2);
/*800ED570 000EA370*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED574 000EA374*/ PPC::Runtime::ASM::li(context->r31, 0x3);
/*800ED578 000EA378*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED57C 000EA37C*/ PPC::Runtime::ASM::li(context->r31, 0x4);
/*800ED580 000EA380*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED584 000EA384*/ PPC::Runtime::ASM::li(context->r31, 0x5);
/*800ED588 000EA388*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED58C 000EA38C*/ PPC::Runtime::ASM::li(context->r31, 0x6);
/*800ED590 000EA390*/ PPC::Runtime::ASM::b(.L_800ED598);
/*800ED594 000EA394*/ PPC::Runtime::ASM::li(context->r31, 0x7);
RUNTIME_PPC_JUMP_LABEL(.L_800ED598, 0x800ED598) //this is a jump label
/*800ED598 000EA398*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ED59C 000EA39C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ED5A0 000EA3A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ED5A4 000EA3A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ED5A8 000EA3A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ED5AC 000EA3AC*/ PPC::Runtime::ASM::blr();
}