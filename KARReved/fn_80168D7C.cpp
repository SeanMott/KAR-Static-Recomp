//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138934.hpp"
#include "fn_80168C64.hpp"
#include "fn_80168C64.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"
#include "fn_801689BC.hpp"



void fn_80168D7C(PPC::Runtime::GCContext* context)
{
/*80168D7C 00165B7C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80168D80 00165B80*/ PPC::Runtime::ASM::mflr(context->r0);
/*80168D84 00165B84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80168D88 00165B88*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80168D8C 00165B8C*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*80168D90 00165B90*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80168D94 00165B94*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80168D98 00165B98*/ PPC::Runtime::ASM::extsb(context->r0, context->r27);
/*80168D9C 00165B9C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xad8);
/*80168DA0 00165BA0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80168DA4 00165BA4*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*80168DA8 00165BA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80168DAC 00165BAC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80168DB0 00165BB0*/ PPC::Runtime::ASM::beq(.L_80168DC0);
/*80168DB4 00165BB4*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80168DB8 00165BB8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80168DBC 00165BBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80168DC0, 0x80168DC0) //this is a jump label
/*80168DC0 00165BC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80168DC4 00165BC4*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*80168DC8 00165BC8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80168DCC 00165BCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80168DD0 00165BD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80168DD4 00165BD4*/ PPC::Runtime::ASM::bl(fn_80138934);
/*80168DD8 00165BD8*/ PPC::Runtime::ASM::lis(context->r4, fn_80168C64 @ Get_MemoryOffset_HighBit);
/*80168DDC 00165BDC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80168DE0 00165BE0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80168DE4 00165BE4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80168DE8 00165BE8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80168C64 @ Get_MemoryOffset_LowBit);
/*80168DEC 00165BEC*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*80168DF0 00165BF0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80168DF4 00165BF4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80168DF8 00165BF8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0AB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80168DFC 00165BFC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80168E00 00165C00*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E0ABC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80168E04 00165C04*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*80168E08 00165C08*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80168E0C 00165C0C*/ PPC::Runtime::ASM::li(context->r4, 0x7c);
/*80168E10 00165C10*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*80168E14 00165C14*/ PPC::Runtime::ASM::stb(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80168E18 00165C18*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*80168E1C 00165C1C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80168E20 00165C20*/ PPC::Runtime::ASM::bl(fn_801689BC);
/*80168E24 00165C24*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*80168E28 00165C28*/ PPC::Runtime::ASM::bne(.L_80168E3C);
/*80168E2C 00165C2C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B18 @ Get_MemoryOffset_SDA21);
/*80168E30 00165C30*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80168E34 00165C34*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B20 @ Get_MemoryOffset_SDA21);
/*80168E38 00165C38*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80168E3C, 0x80168E3C) //this is a jump label
/*80168E3C 00165C3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80168E40 00165C40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80168E44 00165C44*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r28));
/*80168E48 00165C48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r28));
/*80168E4C 00165C4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80168E50 00165C50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r28));
/*80168E54 00165C54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*80168E58 00165C58*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80168E5C 00165C5C*/ PPC::Runtime::ASM::bne(.L_80168EA8);
/*80168E60 00165C60*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*80168E64 00165C64*/ PPC::Runtime::ASM::beq(.L_80168EA8);
/*80168E68 00165C68*/ PPC::Runtime::ASM::bne(.L_80168E7C);
/*80168E6C 00165C6C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B18 @ Get_MemoryOffset_SDA21);
/*80168E70 00165C70*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80168E74 00165C74*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B20 @ Get_MemoryOffset_SDA21);
/*80168E78 00165C78*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80168E7C, 0x80168E7C) //this is a jump label
/*80168E7C 00165C7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*80168E80 00165C80*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80168E84 00165C84*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80168E88 00165C88*/ PPC::Runtime::ASM::bne(.L_80168E98);
/*80168E8C 00165C8C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80168E90 00165C90*/ PPC::Runtime::ASM::beq(.L_80168E98);
/*80168E94 00165C94*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80168E98, 0x80168E98) //this is a jump label
/*80168E98 00165C98*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80168E9C 00165C9C*/ PPC::Runtime::ASM::bne(.L_80168EA8);
/*80168EA0 00165CA0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80168EA4 00165CA4*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80168EA8, 0x80168EA8) //this is a jump label
/*80168EA8 00165CA8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80168EAC 00165CAC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80168EB0 00165CB0*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80168EB4 00165CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80168EB8 00165CB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80168EBC 00165CBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80168EC0 00165CC0*/ PPC::Runtime::ASM::blr();
}