//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXCopyTex(PPC::Runtime::GCContext* context)
{
/* 803CCDD4 003C9BD4  54 80 06 3F */ clrlwi. context->r0 , context->r4 , 24
/*803CCDD8 003C9BD8*/ PPC::Runtime::ASM::beq(.L_803CCE14);
/*803CCDDC 003C9BDC*/ PPC::Runtime::ASM::lwz(context->r7, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CCDE0 003C9BE0*/ PPC::Runtime::ASM::li(context->r0, 0x61);
/*803CCDE4 003C9BE4*/ PPC::Runtime::ASM::lis(context->r5, 0xcc01);
/*803CCDE8 003C9BE8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d8, context->r7));
/*803CCDEC 003C9BEC*/ PPC::Runtime::ASM::clrrwi(context->r6, context->r6, 1);
/*803CCDF0 003C9BF0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCDF4 003C9BF4*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x1);
/*803CCDF8 003C9BF8*/ PPC::Runtime::ASM::rlwinm(context->r6, context->r6, 0, 31, 27);
/*803CCDFC 003C9BFC*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0xe);
/*803CCE00 003C9C00*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCE04 003C9C04*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r7));
/*803CCE08 003C9C08*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCE0C 003C9C0C*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r6, 2);
/*803CCE10 003C9C10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_803CCE14, 0x803CCE14) //this is a jump label
/*803CCE14 003C9C14*/ PPC::Runtime::ASM::lwz(context->r6, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CCE18 003C9C18*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CCE1C 003C9C1C*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x200, context->r6));
/*803CCE20 003C9C20*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1dc, context->r6));
/*803CCE24 003C9C24*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*803CCE28 003C9C28*/ PPC::Runtime::ASM::beq(.L_803CCE44);
/*803CCE2C 003C9C2C*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r7, 29);
/*803CCE30 003C9C30*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x3);
/*803CCE34 003C9C34*/ PPC::Runtime::ASM::beq(.L_803CCE44);
/*803CCE38 003C9C38*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r7, 3);
/*803CCE3C 003C9C3C*/ PPC::Runtime::ASM::ori(context->r7, context->r0, 0x3);
/*803CCE40 003C9C40*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803CCE44, 0x803CCE44) //this is a jump label
/* 803CCE44 003C9C44  54 85 06 3F */ clrlwi. context->r5 , context->r4 , 24
/*803CCE48 003C9C48*/ PPC::Runtime::ASM::bne(.L_803CCE58);
/*803CCE4C 003C9C4C*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r7, 29);
/*803CCE50 003C9C50*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x3);
/*803CCE54 003C9C54*/ PPC::Runtime::ASM::bne(.L_803CCE6C);
RUNTIME_PPC_JUMP_LABEL(.L_803CCE58, 0x803CCE58) //this is a jump label
/*803CCE58 003C9C58*/ PPC::Runtime::ASM::extrwi(context->r5, context->r7, 1, 25);
/*803CCE5C 003C9C5C*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x1);
/*803CCE60 003C9C60*/ PPC::Runtime::ASM::bne(.L_803CCE6C);
/*803CCE64 003C9C64*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803CCE68 003C9C68*/ PPC::Runtime::ASM::rlwinm(context->r7, context->r7, 0, 26, 24);
RUNTIME_PPC_JUMP_LABEL(.L_803CCE6C, 0x803CCE6C) //this is a jump label
/* 803CCE6C 003C9C6C  54 05 06 3F */ clrlwi. context->r5 , context->r0 , 24
/*803CCE70 003C9C70*/ PPC::Runtime::ASM::beq(.L_803CCE84);
/*803CCE74 003C9C74*/ PPC::Runtime::ASM::li(context->r6, 0x61);
/*803CCE78 003C9C78*/ PPC::Runtime::ASM::lis(context->r5, 0xcc01);
/*803CCE7C 003C9C7C*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCE80 003C9C80*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_803CCE84, 0x803CCE84) //this is a jump label
/*803CCE84 003C9C84*/ PPC::Runtime::ASM::li(context->r9, 0x61);
/*803CCE88 003C9C88*/ PPC::Runtime::ASM::lwz(context->r7, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CCE8C 003C9C8C*/ PPC::Runtime::ASM::lis(context->r8, 0xcc01);
/*803CCE90 003C9C90*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCE94 003C9C94*/ PPC::Runtime::ASM::extrwi(context->r3, context->r3, 24, 3);
/*803CCE98 003C9C98*/ PPC::Runtime::ASM::oris(context->r10, context->r3, 0x4b00);
/*803CCE9C 003C9C9C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r7));
/* 803CCEA0 003C9CA0  54 85 06 3F */ clrlwi. context->r5 , context->r4 , 24
/*803CCEA4 003C9CA4*/ PPC::Runtime::ASM::clrlslwi(context->r3, context->r4, 24, 11);
/*803CCEA8 003C9CA8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEAC 003C9CAC*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEB0 003C9CB0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f4, context->r7));
/*803CCEB4 003C9CB4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEB8 003C9CB8*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEBC 003C9CBC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f8, context->r7));
/*803CCEC0 003C9CC0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEC4 003C9CC4*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEC8 003C9CC8*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCECC 003C9CCC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCED0 003C9CD0*/ PPC::Runtime::ASM::rlwinm(context->r4, context->r4, 0, 21, 19);
/*803CCED4 003C9CD4*/ PPC::Runtime::ASM::or(context->r3, context->r4, context->r3);
/*803CCED8 003C9CD8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCEDC 003C9CDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCEE0 003C9CE0*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 18, 16);
/*803CCEE4 003C9CE4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCEE8 003C9CE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCEEC 003C9CEC*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 8);
/*803CCEF0 003C9CF0*/ PPC::Runtime::ASM::oris(context->r3, context->r3, 0x5200);
/*803CCEF4 003C9CF4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCEF8 003C9CF8*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCEFC 003C9CFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r7));
/*803CCF00 003C9D00*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCF04 003C9D04*/ PPC::Runtime::ASM::beq(.L_803CCF20);
/*803CCF08 003C9D08*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCF0C 003C9D0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d8, context->r7));
/*803CCF10 003C9D10*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCF14 003C9D14*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
/*803CCF18 003C9D18*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r7));
/*803CCF1C 003C9D1C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_803CCF20, 0x803CCF20) //this is a jump label
/* 803CCF20 003C9D20  54 00 06 3F */ clrlwi. context->r0 , context->r0 , 24
/*803CCF24 003C9D24*/ PPC::Runtime::ASM::beq(.L_803CCF40);
/*803CCF28 003C9D28*/ PPC::Runtime::ASM::li(context->r0, 0x61);
/*803CCF2C 003C9D2C*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CCF30 003C9D30*/ PPC::Runtime::ASM::lis(context->r4, 0xcc01);
/*803CCF34 003C9D34*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CCF38 003C9D38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1dc, context->r3));
/*803CCF3C 003C9D3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803CCF40, 0x803CCF40) //this is a jump label
/*803CCF40 003C9D40*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CCF44 003C9D44*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CCF48 003C9D48*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CCF4C 003C9D4C*/ PPC::Runtime::ASM::blr();
}