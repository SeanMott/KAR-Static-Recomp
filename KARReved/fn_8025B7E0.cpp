//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025B7E0(PPC::Runtime::GCContext* context)
{
/*8025B7E0 002585E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025B7E4 002585E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025B7E8 002585E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B7EC 002585EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B7F0 002585F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025B7F4 002585F4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025B7F8 002585F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025B7FC 002585FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B800 00258600*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025B804 00258604*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B808 00258608*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025B80C 0025860C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025B810 00258610*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B814 00258614*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B818 00258618*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025B81C 0025861C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025B820 00258620*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025B824 00258624*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B828 00258628*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B82C 0025862C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025B830 00258630*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025B834 00258634*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025B838 00258638*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025B83C 0025863C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E94 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B840 00258640*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025B844 00258644*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B848 00258648*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E90 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B84C 0025864C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025B850 00258650*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025B854 00258654*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025B858 00258658*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025B85C 0025865C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B860 00258660*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B864 00258664*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025B868 00258668*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025B86C 0025866C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025B870 00258670*/ PPC::Runtime::ASM::blr();
}