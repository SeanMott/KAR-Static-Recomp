//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80157BD8(PPC::Runtime::GCContext* context)
{
/*80157BD8 001549D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80157BDC 001549DC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80157BE0 001549E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80157BE4 001549E4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80157BE8 001549E8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80157BEC 001549EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80157BF0 001549F0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80157BF4 001549F4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80157BF8, 0x80157BF8) //this is a jump label
/*80157BF8 001549F8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80157BFC 001549FC*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80157C00 00154A00*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80157C04 00154A04*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80157C08 00154A08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x710, context->r30));
/*80157C0C 00154A0C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80157C10 00154A10*/ PPC::Runtime::ASM::beq(.L_80157C1C);
/*80157C14 00154A14*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80157C18 00154A18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x710, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80157C1C, 0x80157C1C) //this is a jump label
/*80157C1C 00154A1C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80157C20 00154A20*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80157C24 00154A24*/ PPC::Runtime::ASM::blt(.L_80157BF8);
/*80157C28 00154A28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80157C2C 00154A2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80157C30 00154A30*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80157C34 00154A34*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80157C38 00154A38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80157C3C 00154A3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80157C40 00154A40*/ PPC::Runtime::ASM::blr();
}