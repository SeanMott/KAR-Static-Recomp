//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_removeHUD.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_8011DB80.hpp"
#include "fn_8011D144.hpp"
#include "fn_8011E384.hpp"
#include "fn_80124810.hpp"
#include "fn_8012509C.hpp"
#include "fn_8012535C.hpp"



void fn_801129F8(PPC::Runtime::GCContext* context)
{
/*801129F8 0010F7F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801129FC 0010F7FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80112A00 0010F800*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80112A04 0010F804*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80112A08 0010F808*/ PPC::Runtime::ASM::bl(fn_removeHUD);
/*80112A0C 0010F80C*/ PPC::Runtime::ASM::lis(context->r3, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80112A10 0010F810*/ PPC::Runtime::ASM::lbz(context->r0, lbl_805578B8 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80112A14 0010F814*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80112A18 0010F818*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112A1C 0010F81C*/ PPC::Runtime::ASM::ble(.L_80112A38);
/*80112A20 0010F820*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*80112A24 0010F824*/ PPC::Runtime::ASM::bne(.L_80112A64);
/*80112A28 0010F828*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*80112A2C 0010F82C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112A30 0010F830*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*80112A34 0010F834*/ PPC::Runtime::ASM::bne(.L_80112A64);
RUNTIME_PPC_JUMP_LABEL(.L_80112A38, 0x80112A38) //this is a jump label
/*80112A38 0010F838*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80112A3C, 0x80112A3C) //this is a jump label
/*80112A3C 0010F83C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80112A40 0010F840*/ PPC::Runtime::ASM::bl(fn_8011DB80);
/*80112A44 0010F844*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80112A48 0010F848*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*80112A4C 0010F84C*/ PPC::Runtime::ASM::blt(.L_80112A3C);
/*80112A50 0010F850*/ PPC::Runtime::ASM::bl(fn_8011D144);
/*80112A54 0010F854*/ PPC::Runtime::ASM::bl(fn_8011E384);
/*80112A58 0010F858*/ PPC::Runtime::ASM::bl(fn_80124810);
/*80112A5C 0010F85C*/ PPC::Runtime::ASM::bl(fn_8012509C);
/*80112A60 0010F860*/ PPC::Runtime::ASM::bl(fn_8012535C);
RUNTIME_PPC_JUMP_LABEL(.L_80112A64, 0x80112A64) //this is a jump label
/*80112A64 0010F864*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80112A68 0010F868*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80112A6C 0010F86C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80112A70 0010F870*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80112A74 0010F874*/ PPC::Runtime::ASM::blr();
}