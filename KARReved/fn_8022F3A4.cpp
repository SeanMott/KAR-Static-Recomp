//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022F3A4(PPC::Runtime::GCContext* context)
{
/*8022F3A4 0022C1A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022F3A8 0022C1A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022F3AC 0022C1AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022F3B0 0022C1B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022F3B4 0022C1B4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022F3B8 0022C1B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022F3BC 0022C1BC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8022F3C0 0022C1C0*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022F3C4 0022C1C4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8022F3C8 0022C1C8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022F3CC 0022C1CC*/ PPC::Runtime::ASM::blt(.L_8022F3E8);
/*8022F3D0 0022C1D0*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022F3D4 0022C1D4*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022F3D8 0022C1D8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022F3DC 0022C1DC*/ PPC::Runtime::ASM::li(context->r4, 0x3d0);
/*8022F3E0 0022C1E0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022F3E4 0022C1E4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022F3E8, 0x8022F3E8) //this is a jump label
/*8022F3E8 0022C1E8*/ PPC::Runtime::ASM::subfic(context->r0, context->r30, 0xf);
/*8022F3EC 0022C1EC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8022F3F0 0022C1F0*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c4, context->r31));
/*8022F3F4 0022C1F4*/ PPC::Runtime::ASM::slw(context->r0, context->r3, context->r0);
/*8022F3F8 0022C1F8*/ PPC::Runtime::ASM::and(context->r0, context->r4, context->r0);
/*8022F3FC 0022C1FC*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r0, 16);
/*8022F400 0022C200*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022F404 0022C204*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022F408 0022C208*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022F40C 0022C20C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022F410 0022C210*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022F414 0022C214*/ PPC::Runtime::ASM::blr();
}