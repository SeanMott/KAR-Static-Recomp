//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800DDD30(PPC::Runtime::GCContext* context)
{
/*800DDD30 000DAB30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800DDD34 000DAB34*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DDD38 000DAB38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDD3C 000DAB3C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DDD40 000DAB40*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800DDD44 000DAB44*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800DDD48 000DAB48*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800DDD4C 000DAB4C*/ PPC::Runtime::ASM::mr(context->r31, context->r30);
/*800DDD50 000DAB50*/ PPC::Runtime::ASM::slwi(context->r29, context->r4, 1);
/*800DDD54 000DAB54*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800DDD58 000DAB58*/ PPC::Runtime::ASM::b(.L_800DDD98);
RUNTIME_PPC_JUMP_LABEL(.L_800DDD5C, 0x800DDD5C) //this is a jump label
/*800DDD5C 000DAB5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r26));
/*800DDD60 000DAB60*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r30);
/*800DDD64 000DAB64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800DDD68 000DAB68*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x1a);
/*800DDD6C 000DAB6C*/ PPC::Runtime::ASM::beq(.L_800DDD7C);
/*800DDD70 000DAB70*/ PPC::Runtime::ASM::subis(context->r0, context->r4, 0x200);
/*800DDD74 000DAB74*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1a);
/*800DDD78 000DAB78*/ PPC::Runtime::ASM::bne(.L_800DDD90);
RUNTIME_PPC_JUMP_LABEL(.L_800DDD7C, 0x800DDD7C) //this is a jump label
/*800DDD7C 000DAB7C*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800DDD80 000DAB80*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800DDD84 000DAB84*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DDD88 000DAB88*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*800DDD8C 000DAB8C*/ PPC::Runtime::ASM::sth(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_800DDD90, 0x800DDD90) //this is a jump label
/*800DDD90 000DAB90*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x140);
/*800DDD94 000DAB94*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DDD98, 0x800DDD98) //this is a jump label
/*800DDD98 000DAB98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r26));
/*800DDD9C 000DAB9C*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800DDDA0 000DABA0*/ PPC::Runtime::ASM::blt(.L_800DDD5C);
/*800DDDA4 000DABA4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DDDA8 000DABA8*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800DDDAC 000DABAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDDB0 000DABB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DDDB4 000DABB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800DDDB8 000DABB8*/ PPC::Runtime::ASM::blr();
}