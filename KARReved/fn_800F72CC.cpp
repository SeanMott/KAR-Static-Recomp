//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DCAB8.hpp"



void fn_800F72CC(PPC::Runtime::GCContext* context)
{
/*800F72CC 000F40CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F72D0 000F40D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F72D4 000F40D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F72D8 000F40D8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F72DC 000F40DC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F72E0 000F40E0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800F72E4 000F40E4*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800F72E8 000F40E8*/ PPC::Runtime::ASM::beq(.L_800F72F8);
/*800F72EC 000F40EC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800F72F0 000F40F0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF808 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F72F4 000F40F4*/ PPC::Runtime::ASM::bl(fn_800DCAB8);
RUNTIME_PPC_JUMP_LABEL(.L_800F72F8, 0x800F72F8) //this is a jump label
/*800F72F8 000F40F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F72FC 000F40FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7300 000F4100*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7304 000F4104*/ PPC::Runtime::ASM::blr();
}