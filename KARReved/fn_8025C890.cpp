//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025C890(PPC::Runtime::GCContext* context)
{
/*8025C890 00259690*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025C894 00259694*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025C898 00259698*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C89C 0025969C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C8A0 002596A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C8A4 002596A4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025C8A8 002596A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025C8AC 002596AC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C8B0 002596B0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025C8B4 002596B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C8B8 002596B8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C8BC 002596BC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025C8C0 002596C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C8C4 002596C4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C8C8 002596C8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025C8CC 002596CC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C8D0 002596D0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025C8D4 002596D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C8D8 002596D8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C8DC 002596DC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025C8E0 002596E0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C8E4 002596E4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025C8E8 002596E8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025C8EC 002596EC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EC4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C8F0 002596F0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025C8F4 002596F4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C8F8 002596F8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C8FC 002596FC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025C900 00259700*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025C904 00259704*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025C908 00259708*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025C90C 0025970C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C910 00259710*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C914 00259714*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C918 00259718*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025C91C 0025971C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025C920 00259720*/ PPC::Runtime::ASM::blr();
}