//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_80195F28.hpp"
#include "fn_801C4154.hpp"
#include "fn_801C4154.hpp"



void fn_801C4178(PPC::Runtime::GCContext* context)
{
/*801C4178 001C0F78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C417C 001C0F7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C4180 001C0F80*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801C4184 001C0F84*/ PPC::Runtime::ASM::li(context->r4, 0x2e);
/*801C4188 001C0F88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C418C 001C0F8C*/ PPC::Runtime::ASM::li(context->r5, 0x6c);
/*801C4190 001C0F90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4194 001C0F94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C4198 001C0F98*/ PPC::Runtime::ASM::ble(.L_801C41A0);
/*801C419C 001C0F9C*/ PPC::Runtime::ASM::li(context->r5, 0x6e);
RUNTIME_PPC_JUMP_LABEL(.L_801C41A0, 0x801C41A0) //this is a jump label
/*801C41A0 001C0FA0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E19B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C41A4 001C0FA4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801C41A8 001C0FA8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E19B4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C41AC 001C0FAC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801C41B0 001C0FB0*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801C41B4 001C0FB4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C41B8 001C0FB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C41BC 001C0FBC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*801C41C0 001C0FC0*/ PPC::Runtime::ASM::bl(fn_80195F28);
/*801C41C4 001C0FC4*/ PPC::Runtime::ASM::lis(context->r3, fn_801C4154 @ Get_MemoryOffset_HighBit);
/*801C41C8 001C0FC8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801C4154 @ Get_MemoryOffset_LowBit);
/*801C41CC 001C0FCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7cc, context->r31));
/*801C41D0 001C0FD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C41D4 001C0FD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C41D8 001C0FD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C41DC 001C0FDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C41E0 001C0FE0*/ PPC::Runtime::ASM::blr();
}