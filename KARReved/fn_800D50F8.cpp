//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_loadLocalDeadLocations?.hpp"



void fn_800D50F8(PPC::Runtime::GCContext* context)
{
/*800D50F8 000D1EF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D50FC 000D1EFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D5100 000D1F00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D5104 000D1F04*/ PPC::Runtime::ASM::mulli(context->r0, context->r3, 0x140);
/*800D5108 000D1F08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D510C 000D1F0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D5110 000D1F10*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800D5114 000D1F14*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5118 000D1F18*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800D511C 000D1F1C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D5120 000D1F20*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800D5124 000D1F24*/ PPC::Runtime::ASM::lwz(context->r7, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D5128 000D1F28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r7));
/*800D512C 000D1F2C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800D5130 000D1F30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800D5134 000D1F34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800D5138 000D1F38*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800D513C 000D1F3C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x19);
/*800D5140 000D1F40*/ PPC::Runtime::ASM::beq(.L_800D5158);
/*800D5144 000D1F44*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_919 @ Get_MemoryOffset_HighBit);
/*800D5148 000D1F48*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D514C 000D1F4C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_919 @ Get_MemoryOffset_LowBit);
/*800D5150 000D1F50*/ PPC::Runtime::ASM::li(context->r4, 0xd4c);
/*800D5154 000D1F54*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D5158, 0x800D5158) //this is a jump label
/*800D5158 000D1F58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D515C 000D1F5C*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800D5160 000D1F60*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800D5164 000D1F64*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*800D5168 000D1F68*/ PPC::Runtime::ASM::bl(fn_loadLocalDeadLocations?);
/*800D516C 000D1F6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D5170 000D1F70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D5174 000D1F74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D5178 000D1F78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D517C 000D1F7C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D5180 000D1F80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D5184 000D1F84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D5188 000D1F88*/ PPC::Runtime::ASM::blr();
}