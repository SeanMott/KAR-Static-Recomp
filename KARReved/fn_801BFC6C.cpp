//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019FF94.hpp"
#include "fn_801BED04.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_801C05A8.hpp"



void fn_801BFC6C(PPC::Runtime::GCContext* context)
{
/*801BFC6C 001BCA6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BFC70 001BCA70*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BFC74 001BCA74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BFC78 001BCA78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BFC7C 001BCA7C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BFC80 001BCA80*/ PPC::Runtime::ASM::bl(fn_8019FF94);
/*801BFC84 001BCA84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFC88 001BCA88*/ PPC::Runtime::ASM::bl(fn_801BED04);
/*801BFC8C 001BCA8C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BFC90 001BCA90*/ PPC::Runtime::ASM::bne(.L_801BFCA8);
/*801BFC94 001BCA94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFC98 001BCA98*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801BFC9C 001BCA9C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFCA0 001BCAA0*/ PPC::Runtime::ASM::bl(fn_801C05A8);
/*801BFCA4 001BCAA4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BFCA8, 0x801BFCA8) //this is a jump label
/*801BFCA8 001BCAA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BFCAC 001BCAAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BFCB0 001BCAB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BFCB4 001BCAB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BFCB8 001BCAB8*/ PPC::Runtime::ASM::blr();
}