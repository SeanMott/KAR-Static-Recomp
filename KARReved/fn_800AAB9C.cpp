//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CFB34.hpp"
#include "fn_800E3994.hpp"
#include "fn_800990AC.hpp"
#include "fn_800E3994.hpp"
#include "fn_800990AC.hpp"
#include "fn_800A9710.hpp"
#include "fn_800A96B0.hpp"
#include "fn_800A9740.hpp"



void fn_800AAB9C(PPC::Runtime::GCContext* context)
{
/*800AAB9C 000A799C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x800, context->r1));
/*800AABA0 000A79A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AABA4 000A79A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x804, context->r1));
/*800AABA8 000A79A8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x800);
/*800AABAC 000A79AC*/ PPC::Runtime::ASM::bl(_savegpr_27);
/* 800AABB0 000A79B0  7C 9B 23 79 */ mr. context->r27 , context->r4
/*800AABB4 000A79B4*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800AABB8 000A79B8*/ PPC::Runtime::ASM::bne(.L_800AAC78);
/*800AABBC 000A79BC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AABC0 000A79C0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*800AABC4 000A79C4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AABC8 000A79C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f84, context->r31));
/*800AABCC 000A79CC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f88, context->r31));
/*800AABD0 000A79D0*/ PPC::Runtime::ASM::bl(fn_800CFB34);
/*800AABD4 000A79D4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*800AABD8 000A79D8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800AABDC 000A79DC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f84, context->r31));
/*800AABE0 000A79E0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800AABE4 000A79E4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800AABE8 000A79E8*/ PPC::Runtime::ASM::bl(fn_800E3994);
/*800AABEC 000A79EC*/ PPC::Runtime::ASM::lfs(context->f1, lbl_805D5BB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AABF0 000A79F0*/ PPC::Runtime::ASM::mr(context->r5, context->r27);
/*800AABF4 000A79F4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800AABF8 000A79F8*/ PPC::Runtime::ASM::li(context->r4, lbl_805D5BB0 @ Get_MemoryOffset_SDA21);
/*800AABFC 000A79FC*/ PPC::Runtime::ASM::bl(fn_800990AC);
/*800AAC00 000A7A00*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f88, context->r31));
/*800AAC04 000A7A04*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800AAC08 000A7A08*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800AAC0C 000A7A0C*/ PPC::Runtime::ASM::bl(fn_800E3994);
/*800AAC10 000A7A10*/ PPC::Runtime::ASM::lfs(context->f1, lbl_805D5BB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AAC14 000A7A14*/ PPC::Runtime::ASM::mr(context->r5, context->r27);
/*800AAC18 000A7A18*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800AAC1C 000A7A1C*/ PPC::Runtime::ASM::li(context->r4, lbl_805D5BB4 @ Get_MemoryOffset_SDA21);
/*800AAC20 000A7A20*/ PPC::Runtime::ASM::bl(fn_800990AC);
/*800AAC24 000A7A24*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*800AAC28 000A7A28*/ PPC::Runtime::ASM::ble(.L_800AAC78);
/*800AAC2C 000A7A2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AAC30 000A7A30*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800AAC34 000A7A34*/ PPC::Runtime::ASM::bl(fn_800A9710);
/*800AAC38 000A7A38*/ PPC::Runtime::ASM::addi(context->r29, context->r1, 0x18);
/*800AAC3C 000A7A3C*/ PPC::Runtime::ASM::subi(context->r31, context->r30, 0x1);
/*800AAC40 000A7A40*/ PPC::Runtime::ASM::li(context->r28, 0x1);
/*800AAC44 000A7A44*/ PPC::Runtime::ASM::b(.L_800AAC5C);
RUNTIME_PPC_JUMP_LABEL(.L_800AAC48, 0x800AAC48) //this is a jump label
/*800AAC48 000A7A48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800AAC4C 000A7A4C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800AAC50 000A7A50*/ PPC::Runtime::ASM::bl(fn_800A96B0);
/*800AAC54 000A7A54*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*800AAC58 000A7A58*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800AAC5C, 0x800AAC5C) //this is a jump label
/*800AAC5C 000A7A5C*/ PPC::Runtime::ASM::cmpw(context->r28, context->r31);
/*800AAC60 000A7A60*/ PPC::Runtime::ASM::blt(.L_800AAC48);
/*800AAC64 000A7A64*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*800AAC68 000A7A68*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*800AAC6C 000A7A6C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800AAC70 000A7A70*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800AAC74 000A7A74*/ PPC::Runtime::ASM::bl(fn_800A9740);
RUNTIME_PPC_JUMP_LABEL(.L_800AAC78, 0x800AAC78) //this is a jump label
/*800AAC78 000A7A78*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x800);
/*800AAC7C 000A7A7C*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800AAC80 000A7A80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x804, context->r1));
/*800AAC84 000A7A84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AAC88 000A7A88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x800);
/*800AAC8C 000A7A8C*/ PPC::Runtime::ASM::blr();
}