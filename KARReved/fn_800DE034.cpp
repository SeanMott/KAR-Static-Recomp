//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800DE034(PPC::Runtime::GCContext* context)
{
/*800DE034 000DAE34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800DE038 000DAE38*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DE03C 000DAE3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DE040 000DAE40*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DE044 000DAE44*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800DE048 000DAE48*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800DE04C 000DAE4C*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800DE050 000DAE50*/ PPC::Runtime::ASM::mr(context->r31, context->r30);
/*800DE054 000DAE54*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800DE058 000DAE58*/ PPC::Runtime::ASM::b(.L_800DE0A4);
RUNTIME_PPC_JUMP_LABEL(.L_800DE05C, 0x800DE05C) //this is a jump label
/*800DE05C 000DAE5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r26));
/*800DE060 000DAE60*/ PPC::Runtime::ASM::add(context->r29, context->r0, context->r30);
/*800DE064 000DAE64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r29));
/*800DE068 000DAE68*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x1a);
/*800DE06C 000DAE6C*/ PPC::Runtime::ASM::beq(.L_800DE07C);
/*800DE070 000DAE70*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x200);
/*800DE074 000DAE74*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1a);
/*800DE078 000DAE78*/ PPC::Runtime::ASM::bne(.L_800DE09C);
RUNTIME_PPC_JUMP_LABEL(.L_800DE07C, 0x800DE07C) //this is a jump label
/*800DE07C 000DAE7C*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r29));
/*800DE080 000DAE80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800DE084 000DAE84*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*800DE088 000DAE88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*800DE08C 000DAE8C*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*800DE090 000DAE90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r29));
/*800DE094 000DAE94*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*800DE098 000DAE98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800DE09C, 0x800DE09C) //this is a jump label
/*800DE09C 000DAE9C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x140);
/*800DE0A0 000DAEA0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DE0A4, 0x800DE0A4) //this is a jump label
/*800DE0A4 000DAEA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r26));
/*800DE0A8 000DAEA8*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800DE0AC 000DAEAC*/ PPC::Runtime::ASM::blt(.L_800DE05C);
/*800DE0B0 000DAEB0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DE0B4 000DAEB4*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800DE0B8 000DAEB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DE0BC 000DAEBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DE0C0 000DAEC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800DE0C4 000DAEC4*/ PPC::Runtime::ASM::blr();
}