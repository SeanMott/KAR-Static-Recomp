//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "MWTRACE.hpp"
#include "TRKTargetStopped.hpp"
#include "memset.hpp"
#include "fn_803C2388.hpp"
#include "memset.hpp"
#include "fn_803C2388.hpp"
#include "TRKTargetContinue.hpp"



void fn_TRKDoContinue(PPC::Runtime::GCContext* context)
{
/*803BEB94 003BB994*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x90, context->r1));
/*803BEB98 003BB998*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BEB9C 003BB99C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_92 @ Get_MemoryOffset_HighBit);
/*803BEBA0 003BB9A0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803BEBA4 003BB9A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*803BEBA8 003BB9A8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, MemoryOffset_92 @ Get_MemoryOffset_LowBit);
/*803BEBAC 003BB9AC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803BEBB0 003BB9B0*/ PPC::Runtime::ASM::bl(MWTRACE);
/*803BEBB4 003BB9B4*/ PPC::Runtime::ASM::bl(TRKTargetStopped);
/*803BEBB8 003BB9B8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803BEBBC 003BB9BC*/ PPC::Runtime::ASM::bne(.L_803BEBFC);
/*803BEBC0 003BB9C0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x48);
/*803BEBC4 003BB9C4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803BEBC8 003BB9C8*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BEBCC 003BB9CC*/ PPC::Runtime::ASM::bl(memset);
/*803BEBD0 003BB9D0*/ PPC::Runtime::ASM::li(context->r3, 0x80);
/*803BEBD4 003BB9D4*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BEBD8 003BB9D8*/ PPC::Runtime::ASM::li(context->r0, 0x16);
/*803BEBDC 003BB9DC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*803BEBE0 003BB9E0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x48);
/*803BEBE4 003BB9E4*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*803BEBE8 003BB9E8*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*803BEBEC 003BB9EC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*803BEBF0 003BB9F0*/ PPC::Runtime::ASM::bl(fn_803C2388);
/*803BEBF4 003BB9F4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803BEBF8 003BB9F8*/ PPC::Runtime::ASM::b(.L_803BEC34);
RUNTIME_PPC_JUMP_LABEL(.L_803BEBFC, 0x803BEBFC) //this is a jump label
/*803BEBFC 003BB9FC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803BEC00 003BBA00*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803BEC04 003BBA04*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BEC08 003BBA08*/ PPC::Runtime::ASM::bl(memset);
/*803BEC0C 003BBA0C*/ PPC::Runtime::ASM::li(context->r3, 0x80);
/*803BEC10 003BBA10*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BEC14 003BBA14*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BEC18 003BBA18*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BEC1C 003BBA1C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803BEC20 003BBA20*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*803BEC24 003BBA24*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BEC28 003BBA28*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BEC2C 003BBA2C*/ PPC::Runtime::ASM::bl(fn_803C2388);
/*803BEC30 003BBA30*/ PPC::Runtime::ASM::bl(TRKTargetContinue);
RUNTIME_PPC_JUMP_LABEL(.L_803BEC34, 0x803BEC34) //this is a jump label
/*803BEC34 003BBA34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*803BEC38 003BBA38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BEC3C 003BBA3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x90);
/*803BEC40 003BBA40*/ PPC::Runtime::ASM::blr();
}