//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_IPIsLocalAddr(PPC::Runtime::GCContext* context)
{
/*8046DC44 0046AA44*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046DC48 0046AA48*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8046DC4C 0046AA4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046DC50 0046AA50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*8046DC54 0046AA54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046DC58 0046AA58*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8046DC5C 0046AA5C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046DC60 0046AA60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046DC64 0046AA64*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*8046DC68 0046AA68*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805E62A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046DC6C 0046AA6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8046DC70 0046AA70*/ PPC::Runtime::ASM::beq(.L_8046DC7C);
/*8046DC74 0046AA74*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8046DC78 0046AA78*/ PPC::Runtime::ASM::b(.L_8046DC84);
RUNTIME_PPC_JUMP_LABEL(.L_8046DC7C, 0x8046DC7C) //this is a jump label
/*8046DC7C 0046AA7C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_1805BDD20 @ Get_MemoryOffset_HighBit);
/*8046DC80 0046AA80*/ PPC::Runtime::ASM::addi(context->r30, context->r3, STRUCT_BYTE4_COUNT_1805BDD20 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_8046DC84, 0x8046DC84) //this is a jump label
/*8046DC84 0046AA84*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8046DC88 0046AA88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*8046DC8C 0046AA8C*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805E6298 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046DC90 0046AA90*/ PPC::Runtime::ASM::cmplw(context->r0, context->r6);
/*8046DC94 0046AA94*/ PPC::Runtime::ASM::beq(.L_8046DCB4);
/*8046DC98 0046AA98*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r30));
/*8046DC9C 0046AA9C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8046DCA0 0046AAA0*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r5);
/*8046DCA4 0046AAA4*/ PPC::Runtime::ASM::and(context->r4, context->r4, context->r5);
/*8046DCA8 0046AAA8*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*8046DCAC 0046AAAC*/ PPC::Runtime::ASM::bne(.L_8046DCB4);
/*8046DCB0 0046AAB0*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8046DCB4, 0x8046DCB4) //this is a jump label
/*8046DCB4 0046AAB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r30));
/*8046DCB8 0046AAB8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r6);
/*8046DCBC 0046AABC*/ PPC::Runtime::ASM::beq(.L_8046DCDC);
/*8046DCC0 0046AAC0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8046DCC4 0046AAC4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8046DCC8 0046AAC8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r5);
/*8046DCCC 0046AACC*/ PPC::Runtime::ASM::and(context->r4, context->r4, context->r5);
/*8046DCD0 0046AAD0*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*8046DCD4 0046AAD4*/ PPC::Runtime::ASM::bne(.L_8046DCDC);
/*8046DCD8 0046AAD8*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8046DCDC, 0x8046DCDC) //this is a jump label
/*8046DCDC 0046AADC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8046DCE0 0046AAE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8046DCE4 0046AAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8046DCE8 0046AAE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046DCEC 0046AAEC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046DCF0 0046AAF0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046DCF4 0046AAF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*8046DCF8 0046AAF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046DCFC 0046AAFC*/ PPC::Runtime::ASM::blr();
}