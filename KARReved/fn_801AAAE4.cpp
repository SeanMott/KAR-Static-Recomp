//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801AA7CC.hpp"
#include "fn_801AA7CC.hpp"
#include "fn_8023D9B0.hpp"
#include "fn_80240084.hpp"
#include "fn_8023FFC4.hpp"
#include "fn_8023FF80.hpp"
#include "fn_80240114.hpp"



void fn_801AAAE4(PPC::Runtime::GCContext* context)
{
/*801AAAE4 001A78E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801AAAE8 001A78E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AAAEC 001A78EC*/ PPC::Runtime::ASM::lis(context->r4, fn_801AA7CC @ Get_MemoryOffset_HighBit);
/*801AAAF0 001A78F0*/ PPC::Runtime::ASM::li(context->r5, 0xb);
/*801AAAF4 001A78F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801AAAF8 001A78F8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801AA7CC @ Get_MemoryOffset_LowBit);
/*801AAAFC 001A78FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801AAB00 001A7900*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801AAB04 001A7904*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801AAB08 001A7908*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AAB0C 001A790C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r3));
/*801AAB10 001A7910*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801AAB14 001A7914*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801AAB18 001A7918*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r6));
/*801AAB1C 001A791C*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*801AAB20 001A7920*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r29));
/*801AAB24 001A7924*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801AAB28 001A7928*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801AAB2C 001A792C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r4));
/*801AAB30 001A7930*/ PPC::Runtime::ASM::bl(fn_8023D9B0);
/*801AAB34 001A7934*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*801AAB38 001A7938*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801AAB3C 001A793C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
/*801AAB40 001A7940*/ PPC::Runtime::ASM::mr(context->r29, context->r30);
/*801AAB44 001A7944*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r31));
/*801AAB48 001A7948*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r30));
/*801AAB4C 001A794C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*801AAB50 001A7950*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
/*801AAB54 001A7954*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801AAB58 001A7958*/ PPC::Runtime::ASM::beq(.L_801AABA0);
/*801AAB5C 001A795C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*801AAB60 001A7960*/ PPC::Runtime::ASM::bne(.L_801AAB74);
/*801AAB64 001A7964*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801AAB68 001A7968*/ PPC::Runtime::ASM::bl(fn_80240084);
/*801AAB6C 001A796C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AAB70 001A7970*/ PPC::Runtime::ASM::beq(.L_801AABA0);
RUNTIME_PPC_JUMP_LABEL(.L_801AAB74, 0x801AAB74) //this is a jump label
/*801AAB74 001A7974*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801AAB78 001A7978*/ PPC::Runtime::ASM::bl(fn_8023FFC4);
/*801AAB7C 001A797C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1370 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AAB80 001A7980*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801AAB84 001A7984*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801AAB88 001A7988*/ PPC::Runtime::ASM::bl(fn_8023FF80);
/*801AAB8C 001A798C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1374 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AAB90 001A7990*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801AAB94 001A7994*/ PPC::Runtime::ASM::bl(fn_80240114);
/*801AAB98 001A7998*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801AAB9C 001A799C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801AABA0, 0x801AABA0) //this is a jump label
/*801AABA0 001A79A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801AABA4 001A79A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801AABA8 001A79A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801AABAC 001A79AC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AABB0 001A79B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AABB4 001A79B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801AABB8 001A79B8*/ PPC::Runtime::ASM::blr();
}