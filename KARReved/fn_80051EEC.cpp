//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "memset.hpp"
#include "fn_8013927C.hpp"
#include "fn_hwExit.hpp"
#include "fn_menu_getCurrentMenuID.hpp"
#include "fn_80185A88.hpp"
#include "fn_80185A88.hpp"
#include "fn_80185940.hpp"
#include "fn_800524CC.hpp"
#include "fn_80051F98.hpp"
#include "fn_80051FF8.hpp"
#include "fn_debug_memCard_reqSave.hpp"



void fn_80051EEC(PPC::Runtime::GCContext* context)
{
/*80051EEC 0004ECEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80051EF0 0004ECF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80051EF4 0004ECF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80051EF8 0004ECF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80051EFC 0004ECFC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80051F00 0004ED00*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80051F04 0004ED04*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80051F08 0004ED08*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80051F0C 0004ED0C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80051F10 0004ED10*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80051F14 0004ED14*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80051F18 0004ED18*/ PPC::Runtime::ASM::li(context->r5, 0xc);
/*80051F1C 0004ED1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x7c8);
/*80051F20 0004ED20*/ PPC::Runtime::ASM::bl(memset);
/*80051F24 0004ED24*/ PPC::Runtime::ASM::bl(fn_8013927C);
/*80051F28 0004ED28*/ PPC::Runtime::ASM::bl(fn_hwExit);
/*80051F2C 0004ED2C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80051F30 0004ED30*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c9, context->r31));
/*80051F34 0004ED34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7cc, context->r31));
/*80051F38 0004ED38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7d0, context->r31));
/*80051F3C 0004ED3C*/ PPC::Runtime::ASM::bl(fn_menu_getCurrentMenuID);
/*80051F40 0004ED40*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80051F44 0004ED44*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*80051F48 0004ED48*/ PPC::Runtime::ASM::beq(.L_80051F58);
/*80051F4C 0004ED4C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80051F50 0004ED50*/ PPC::Runtime::ASM::bl(fn_80185A88);
/*80051F54 0004ED54*/ PPC::Runtime::ASM::b(.L_80051F60);
RUNTIME_PPC_JUMP_LABEL(.L_80051F58, 0x80051F58) //this is a jump label
/*80051F58 0004ED58*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80051F5C 0004ED5C*/ PPC::Runtime::ASM::bl(fn_80185A88);
RUNTIME_PPC_JUMP_LABEL(.L_80051F60, 0x80051F60) //this is a jump label
/*80051F60 0004ED60*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80051F64 0004ED64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c8, context->r30));
/*80051F68 0004ED68*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c8, context->r30));
/*80051F6C 0004ED6C*/ PPC::Runtime::ASM::bl(fn_80185940);
/*80051F70 0004ED70*/ PPC::Runtime::ASM::bl(fn_800524CC);
/*80051F74 0004ED74*/ PPC::Runtime::ASM::bl(fn_80051F98);
/*80051F78 0004ED78*/ PPC::Runtime::ASM::bl(fn_80051FF8);
/*80051F7C 0004ED7C*/ PPC::Runtime::ASM::bl(fn_debug_memCard_reqSave);
/*80051F80 0004ED80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80051F84 0004ED84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80051F88 0004ED88*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80051F8C 0004ED8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80051F90 0004ED90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80051F94 0004ED94*/ PPC::Runtime::ASM::blr();
}