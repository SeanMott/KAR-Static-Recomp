//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_std__red_black_tree_template_rotateshit(PPC::Runtime::GCContext* context)
{
/*80288F50 00285D50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80288F54 00285D54*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80288F58 00285D58*/ PPC::Runtime::ASM::cmplw(context->r0, context->r3);
/*80288F5C 00285D5C*/ PPC::Runtime::ASM::bne(.L_80288F64);
/*80288F60 00285D60*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_80288F64, 0x80288F64) //this is a jump label
/*80288F64 00285D64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80288F68 00285D68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80288F6C 00285D6C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80288F70 00285D70*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*80288F74 00285D74*/ PPC::Runtime::ASM::beq(.L_80288F88);
/*80288F78 00285D78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80288F7C 00285D7C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*80288F80 00285D80*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*80288F84 00285D84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_80288F88, 0x80288F88) //this is a jump label
/*80288F88 00285D88*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80288F8C 00285D8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80288F90 00285D90*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 0, 30);
/*80288F94 00285D94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80288F98 00285D98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80288F9C 00285D9C*/ PPC::Runtime::ASM::clrrwi(context->r4, context->r0, 1);
/*80288FA0 00285DA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80288FA4 00285DA4*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*80288FA8 00285DA8*/ PPC::Runtime::ASM::bne(.L_80288FB4);
/*80288FAC 00285DAC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80288FB0 00285DB0*/ PPC::Runtime::ASM::b(.L_80288FB8);
RUNTIME_PPC_JUMP_LABEL(.L_80288FB4, 0x80288FB4) //this is a jump label
/*80288FB4 00285DB4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_80288FB8, 0x80288FB8) //this is a jump label
/*80288FB8 00285DB8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80288FBC 00285DBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80288FC0 00285DC0*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*80288FC4 00285DC4*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*80288FC8 00285DC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80288FCC 00285DCC*/ PPC::Runtime::ASM::blr();
}