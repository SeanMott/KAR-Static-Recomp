//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E9F50.hpp"
#include "fn_800F7B48.hpp"
#include "fn_800D4BF4.hpp"
#include "fn_800E9F50.hpp"



void fn_800F7870(PPC::Runtime::GCContext* context)
{
/*800F7870 000F4670*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800F7874 000F4674*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7878 000F4678*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F787C 000F467C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F7880 000F4680*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800F7884 000F4684*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800F7888 000F4688*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800F788C 000F468C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F7890 000F4690*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800F7894 000F4694*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F7898 000F4698*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F789C 000F469C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800F78A0 000F46A0*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800F78A4 000F46A4*/ PPC::Runtime::ASM::beq(.L_800F78BC);
/*800F78A8 000F46A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800F78AC 000F46AC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r31));
/*800F78B0 000F46B0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800F78B4 000F46B4*/ PPC::Runtime::ASM::bl(fn_800E9F50);
/*800F78B8 000F46B8*/ PPC::Runtime::ASM::b(.L_800F7918);
RUNTIME_PPC_JUMP_LABEL(.L_800F78BC, 0x800F78BC) //this is a jump label
/*800F78BC 000F46BC*/ PPC::Runtime::ASM::cmpwi(context->r28, -0x1);
/*800F78C0 000F46C0*/ PPC::Runtime::ASM::bne(.L_800F78DC);
/*800F78C4 000F46C4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_988 @ Get_MemoryOffset_HighBit);
/*800F78C8 000F46C8*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_989 @ Get_MemoryOffset_HighBit);
/*800F78CC 000F46CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_988 @ Get_MemoryOffset_LowBit);
/*800F78D0 000F46D0*/ PPC::Runtime::ASM::li(context->r4, 0xb6);
/*800F78D4 000F46D4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_989 @ Get_MemoryOffset_LowBit);
/*800F78D8 000F46D8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F78DC, 0x800F78DC) //this is a jump label
/*800F78DC 000F46DC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800F78E0 000F46E0*/ PPC::Runtime::ASM::beq(.L_800F78F8);
/*800F78E4 000F46E4*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F78E8 000F46E8*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800F78EC 000F46EC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800F78F0 000F46F0*/ PPC::Runtime::ASM::bl(fn_800F7B48);
/*800F78F4 000F46F4*/ PPC::Runtime::ASM::b(.L_800F7904);
RUNTIME_PPC_JUMP_LABEL(.L_800F78F8, 0x800F78F8) //this is a jump label
/*800F78F8 000F46F8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800F78FC 000F46FC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800F7900 000F4700*/ PPC::Runtime::ASM::bl(fn_800D4BF4);
RUNTIME_PPC_JUMP_LABEL(.L_800F7904, 0x800F7904) //this is a jump label
/*800F7904 000F4704*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800F7908 000F4708*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800F790C 000F470C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r31));
/*800F7910 000F4710*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800F7914 000F4714*/ PPC::Runtime::ASM::bl(fn_800E9F50);
RUNTIME_PPC_JUMP_LABEL(.L_800F7918, 0x800F7918) //this is a jump label
/*800F7918 000F4718*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F791C 000F471C*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800F7920 000F4720*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F7924 000F4724*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7928 000F4728*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800F792C 000F472C*/ PPC::Runtime::ASM::blr();
}