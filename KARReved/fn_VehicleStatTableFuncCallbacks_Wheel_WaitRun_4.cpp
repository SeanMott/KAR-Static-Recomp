//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801F8300.hpp"
#include "fn_801F8518.hpp"
#include "fn_801CF60C.hpp"
#include "fn_801CDF84.hpp"
#include "fn_801F8538.hpp"
#include "FuncAtTheEndOf_Wheel_WaitRun_4.hpp"
#include "fn_801DBE5C.hpp"
#include "fn_801DC250.hpp"
#include "fn_801DC3B8.hpp"



void fn_VehicleStatTableFuncCallbacks_Wheel_WaitRun_4(PPC::Runtime::GCContext* context)
{
/*801F8BDC 001F59DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F8BE0 001F59E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F8BE4 001F59E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F8BE8 001F59E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F8BEC 001F59EC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F8BF0 001F59F0*/ PPC::Runtime::ASM::bl(fn_801F8300);
/*801F8BF4 001F59F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8BF8 001F59F8*/ PPC::Runtime::ASM::bl(fn_801F8518);
/*801F8BFC 001F59FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C00 001F5A00*/ PPC::Runtime::ASM::bl(fn_801CF60C);
/*801F8C04 001F5A04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C08 001F5A08*/ PPC::Runtime::ASM::bl(fn_801CDF84);
/*801F8C0C 001F5A0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C10 001F5A10*/ PPC::Runtime::ASM::bl(fn_801F8538);
/*801F8C14 001F5A14*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C18 001F5A18*/ PPC::Runtime::ASM::bl(FuncAtTheEndOf_Wheel_WaitRun_4);
/*801F8C1C 001F5A1C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F8C20 001F5A20*/ PPC::Runtime::ASM::bne(.L_801F8C3C);
/*801F8C24 001F5A24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C28 001F5A28*/ PPC::Runtime::ASM::bl(fn_801DBE5C);
/*801F8C2C 001F5A2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C30 001F5A30*/ PPC::Runtime::ASM::bl(fn_801DC250);
/*801F8C34 001F5A34*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C38 001F5A38*/ PPC::Runtime::ASM::bl(fn_801DC3B8);
RUNTIME_PPC_JUMP_LABEL(.L_801F8C3C, 0x801F8C3C) //this is a jump label
/*801F8C3C 001F5A3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F8C40 001F5A40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F8C44 001F5A44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F8C48 001F5A48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F8C4C 001F5A4C*/ PPC::Runtime::ASM::blr();
}