//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802851B0.hpp"



void fn_80285130(PPC::Runtime::GCContext* context)
{
/*80285130 00281F30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80285134 00281F34*/ PPC::Runtime::ASM::mflr(context->r0);
/*80285138 00281F38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028513C 00281F3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80285140 00281F40*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80285144 00281F44*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80285148 00281F48  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028514C 00281F4C*/ PPC::Runtime::ASM::beq(.L_80285194);
/*80285150 00281F50*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BBFF4 @ Get_MemoryOffset_HighBit);
/*80285154 00281F54*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*80285158 00281F58*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804BBFF4 @ Get_MemoryOffset_LowBit);
/*8028515C 00281F5C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80285160 00281F60*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80285164 00281F64*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*80285168 00281F68*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*8028516C 00281F6C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80285170 00281F70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*80285174 00281F74*/ PPC::Runtime::ASM::bl(fn_8039D358);
/*80285178 00281F78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028517C 00281F7C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80285180 00281F80*/ PPC::Runtime::ASM::bl(fn_802851B0);
/*80285184 00281F84*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80285188 00281F88*/ PPC::Runtime::ASM::ble(.L_80285194);
/*8028518C 00281F8C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80285190 00281F90*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80285194, 0x80285194) //this is a jump label
/*80285194 00281F94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80285198 00281F98*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028519C 00281F9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802851A0 00281FA0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802851A4 00281FA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802851A8 00281FA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802851AC 00281FAC*/ PPC::Runtime::ASM::blr();
}