//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E85A8.hpp"
#include "fn_8010FBFC.hpp"



void fn_8010FE9C(PPC::Runtime::GCContext* context)
{
/*8010FE9C 0010CC9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8010FEA0 0010CCA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010FEA4 0010CCA4*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_168 @ Get_MemoryOffset_HighBit);
/*8010FEA8 0010CCA8*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*8010FEAC 0010CCAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010FEB0 0010CCB0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8010FEB4 0010CCB4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_168 @ Get_MemoryOffset_LowBit);
/*8010FEB8 0010CCB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8010FEBC 0010CCBC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8010FEC0 0010CCC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010FEC4 0010CCC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x728, context->r3));
/*8010FEC8 0010CCC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x72c, context->r3));
/*8010FECC 0010CCCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x730, context->r3));
/*8010FED0 0010CCD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x734, context->r3));
/*8010FED4 0010CCD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x738, context->r3));
/*8010FED8 0010CCD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x73c, context->r3));
/*8010FEDC 0010CCDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x740, context->r3));
/*8010FEE0 0010CCE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x744, context->r3));
/*8010FEE4 0010CCE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x748, context->r3));
/*8010FEE8 0010CCE8*/ PPC::Runtime::ASM::bl(fn_800E85A8);
/*8010FEEC 0010CCEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8010FEF0 0010CCF0*/ PPC::Runtime::ASM::bl(fn_8010FBFC);
/*8010FEF4 0010CCF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010FEF8 0010CCF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8010FEFC 0010CCFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010FF00 0010CD00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8010FF04 0010CD04*/ PPC::Runtime::ASM::blr();
}