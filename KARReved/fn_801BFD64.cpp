//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801941D4.hpp"
#include "fn_801BFDAC.hpp"



void fn_801BFD64(PPC::Runtime::GCContext* context)
{
/*801BFD64 001BCB64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BFD68 001BCB68*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BFD6C 001BCB6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BFD70 001BCB70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BFD74 001BCB74*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BFD78 001BCB78*/ PPC::Runtime::ASM::bl(fn_801941D4);
/*801BFD7C 001BCB7C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BFD80 001BCB80*/ PPC::Runtime::ASM::beq(.L_801BFD94);
/*801BFD84 001BCB84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFD88 001BCB88*/ PPC::Runtime::ASM::bl(fn_801BFDAC);
/*801BFD8C 001BCB8C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801BFD90 001BCB90*/ PPC::Runtime::ASM::b(.L_801BFD98);
RUNTIME_PPC_JUMP_LABEL(.L_801BFD94, 0x801BFD94) //this is a jump label
/*801BFD94 001BCB94*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BFD98, 0x801BFD98) //this is a jump label
/*801BFD98 001BCB98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BFD9C 001BCB9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BFDA0 001BCBA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BFDA4 001BCBA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BFDA8 001BCBA8*/ PPC::Runtime::ASM::blr();
}