//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___GXSetDirtyState.hpp"
#include "fn___GXSendFlushPrim.hpp"



void fn_GXCallDisplayList(PPC::Runtime::GCContext* context)
{
/*803D0384 003CD184*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D0388 003CD188*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D038C 003CD18C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803D0390 003CD190*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D0394 003CD194*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x0);
/*803D0398 003CD198*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803D039C 003CD19C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803D03A0 003CD1A0*/ PPC::Runtime::ASM::lwz(context->r5, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D03A4 003CD1A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r5));
/*803D03A8 003CD1A8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803D03AC 003CD1AC*/ PPC::Runtime::ASM::beq(.L_803D03B4);
/*803D03B0 003CD1B0*/ PPC::Runtime::ASM::bl(fn___GXSetDirtyState);
RUNTIME_PPC_JUMP_LABEL(.L_803D03B4, 0x803D03B4) //this is a jump label
/*803D03B4 003CD1B4*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D03B8 003CD1B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803D03BC 003CD1BC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803D03C0 003CD1C0*/ PPC::Runtime::ASM::bne(.L_803D03C8);
/*803D03C4 003CD1C4*/ PPC::Runtime::ASM::bl(fn___GXSendFlushPrim);
RUNTIME_PPC_JUMP_LABEL(.L_803D03C8, 0x803D03C8) //this is a jump label
/*803D03C8 003CD1C8*/ PPC::Runtime::ASM::li(context->r0, 0x40);
/*803D03CC 003CD1CC*/ PPC::Runtime::ASM::lis(context->r3, 0xcc01);
/*803D03D0 003CD1D0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803D03D4 003CD1D4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803D03D8 003CD1D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803D03DC 003CD1DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D03E0 003CD1E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D03E4 003CD1E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803D03E8 003CD1E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803D03EC 003CD1EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D03F0 003CD1F0*/ PPC::Runtime::ASM::blr();
}