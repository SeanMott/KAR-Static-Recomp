//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80258C14(PPC::Runtime::GCContext* context)
{
/*80258C14 00255A14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80258C18 00255A18*/ PPC::Runtime::ASM::mflr(context->r0);
/*80258C1C 00255A1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80258C20 00255A20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80258C24 00255A24*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80258C28 00255A28*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80258C2C 00255A2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80258C30 00255A30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258C34 00255A34*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80258C38 00255A38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258C3C 00255A3C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258C40 00255A40*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80258C44 00255A44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258C48 00255A48*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258C4C 00255A4C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80258C50 00255A50*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258C54 00255A54*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80258C58 00255A58*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258C5C 00255A5C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258C60 00255A60*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80258C64 00255A64*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258C68 00255A68*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80258C6C 00255A6C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80258C70 00255A70*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E14 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80258C74 00255A74*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80258C78 00255A78*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258C7C 00255A7C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E10 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80258C80 00255A80*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80258C84 00255A84*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80258C88 00255A88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80258C8C 00255A8C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80258C90 00255A90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80258C94 00255A94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80258C98 00255A98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80258C9C 00255A9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80258CA0 00255AA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80258CA4 00255AA4*/ PPC::Runtime::ASM::blr();
}