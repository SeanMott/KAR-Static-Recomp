//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80047844.hpp"
#include "fn_80078E40.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"



void fn_80048800(PPC::Runtime::GCContext* context)
{
/*80048800 00045600*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80048804 00045604*/ PPC::Runtime::ASM::mflr(context->r0);
/*80048808 00045608*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004880C 0004560C*/ PPC::Runtime::ASM::bl(fn_80047844);
/*80048810 00045610*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r3));
/*80048814 00045614*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80048818 00045618*/ PPC::Runtime::ASM::bne(.L_80048830);
/*8004881C 0004561C*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*80048820 00045620*/ PPC::Runtime::ASM::bl(fn_80078E40);
/*80048824 00045624*/ PPC::Runtime::ASM::li(context->r3, 0x1c);
/*80048828 00045628*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
/*8004882C 0004562C*/ PPC::Runtime::ASM::b(.L_80048844);
RUNTIME_PPC_JUMP_LABEL(.L_80048830, 0x80048830) //this is a jump label
/*80048830 00045630*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80048834 00045634*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80048838 00045638*/ PPC::Runtime::ASM::bne(.L_80048844);
/*8004883C 0004563C*/ PPC::Runtime::ASM::li(context->r3, 0x1a);
/*80048840 00045640*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
RUNTIME_PPC_JUMP_LABEL(.L_80048844, 0x80048844) //this is a jump label
/*80048844 00045644*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80048848 00045648*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004884C 0004564C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80048850 00045650*/ PPC::Runtime::ASM::blr();
}