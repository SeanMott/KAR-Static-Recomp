//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_8010D324(PPC::Runtime::GCContext* context)
{
/*8010D324 0010A124*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8010D328 0010A128*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010D32C 0010A12C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFAD8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010D330 0010A130*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8010D334 0010A134*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010D338 0010A138*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8010D33C 0010A13C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8010D340 0010A140*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFADC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010D344 0010A144*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010D348 0010A148*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010D34C 0010A14C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8010D350 0010A150*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r6));
/*8010D354 0010A154*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8010D358 0010A158*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*8010D35C 0010A15C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010D360 0010A160*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010D364 0010A164*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8010D368 0010A168*/ PPC::Runtime::ASM::blr();
}