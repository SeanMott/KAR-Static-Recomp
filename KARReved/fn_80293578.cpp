//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80293578(PPC::Runtime::GCContext* context)
{
/*80293578 00290378*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029357C 0029037C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80293580 00290380*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80293584 00290384*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80293588 00290388*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8029358C 0029038C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80293590 00290390  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80293594 00290394*/ PPC::Runtime::ASM::beq(.L_802935F8);
/*80293598 00290398*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BDBE8 @ Get_MemoryOffset_HighBit);
/*8029359C 0029039C*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x14);
/*802935A0 002903A0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BDBE8 @ Get_MemoryOffset_LowBit);
/*802935A4 002903A4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802935A8 002903A8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x28);
/*802935AC 002903AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802935B0 002903B0*/ PPC::Runtime::ASM::beq(.L_802935D4);
/*802935B4 002903B4*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BDBC0 @ Get_MemoryOffset_HighBit);
/*802935B8 002903B8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x14);
/*802935BC 002903BC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BDBC0 @ Get_MemoryOffset_LowBit);
/*802935C0 002903C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802935C4 002903C4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802935C8 002903C8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r12));
/*802935CC 002903CC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802935D0 002903D0*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_802935D4, 0x802935D4) //this is a jump label
/*802935D4 002903D4*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*802935D8 002903D8*/ PPC::Runtime::ASM::beq(.L_802935E8);
/*802935DC 002903DC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BDB74 @ Get_MemoryOffset_HighBit);
/*802935E0 002903E0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BDB74 @ Get_MemoryOffset_LowBit);
/*802935E4 002903E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_802935E8, 0x802935E8) //this is a jump label
/*802935E8 002903E8*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802935EC 002903EC*/ PPC::Runtime::ASM::ble(.L_802935F8);
/*802935F0 002903F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802935F4 002903F4*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802935F8, 0x802935F8) //this is a jump label
/*802935F8 002903F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802935FC 002903FC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80293600 00290400*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80293604 00290404*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80293608 00290408*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029360C 0029040C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80293610 00290410*/ PPC::Runtime::ASM::blr();
}