//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8027A220.hpp"
#include "fn_801917A4.hpp"
#include "fn_801917B0.hpp"
#include "fn_801917A4.hpp"
#include "fn_801A3ACC.hpp"
#include "fn_801A4A90.hpp"
#include "fn_801A4990.hpp"
#include "fn_801A4D60.hpp"
#include "fn_801A4CC0.hpp"



void fn_801A3FD8(PPC::Runtime::GCContext* context)
{
/*801A3FD8 001A0DD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A3FDC 001A0DDC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A3FE0 001A0DE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A3FE4 001A0DE4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A3FE8 001A0DE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A3FEC 001A0DEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801A3FF0 001A0DF0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A3FF4 001A0DF4*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801A3FF8 001A0DF8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A3FFC 001A0DFC*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801A4000 001A0E00*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa41, context->r3));
/*801A4004 001A0E04*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801A4008 001A0E08*/ PPC::Runtime::ASM::bl(fn_8027A220);
/*801A400C 001A0E0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r29));
/*801A4010 001A0E10*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*801A4014 001A0E14*/ PPC::Runtime::ASM::beq(.L_801A411C);
/*801A4018 001A0E18*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A401C 001A0E1C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A4020 001A0E20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x810, context->r28));
/*801A4024 001A0E24*/ PPC::Runtime::ASM::bl(fn_801917A4);
/*801A4028 001A0E28*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A402C 001A0E2C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A4030 001A0E30*/ PPC::Runtime::ASM::bl(fn_801917B0);
/*801A4034 001A0E34*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A4038 001A0E38*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A403C 001A0E3C*/ PPC::Runtime::ASM::bl(fn_801917A4);
/*801A4040 001A0E40*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A4044 001A0E44*/ PPC::Runtime::ASM::beq(.L_801A405C);
/*801A4048 001A0E48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*801A404C 001A0E4C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x13);
/*801A4050 001A0E50*/ PPC::Runtime::ASM::bne(.L_801A405C);
/*801A4054 001A0E54*/ PPC::Runtime::ASM::li(context->r5, 0x13);
/*801A4058 001A0E58*/ PPC::Runtime::ASM::b(.L_801A40B4);
RUNTIME_PPC_JUMP_LABEL(.L_801A405C, 0x801A405C) //this is a jump label
/*801A405C 001A0E5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r29));
/*801A4060 001A0E60*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x7);
/*801A4064 001A0E64*/ PPC::Runtime::ASM::bgt(.L_801A40B0);
/*801A4068 001A0E68*/ PPC::Runtime::ASM::lis(context->r3, jumptable_804AE408 @ Get_MemoryOffset_HighBit);
/*801A406C 001A0E6C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801A4070 001A0E70*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_804AE408 @ Get_MemoryOffset_LowBit);
/*801A4074 001A0E74*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*801A4078 001A0E78*/ PPC::Runtime::ASM::mtctr(context->r0);
/*801A407C 001A0E7C*/ PPC::Runtime::ASM::bctr();
/*801A4080 001A0E80*/ PPC::Runtime::ASM::li(context->r5, 0xe);
/*801A4084 001A0E84*/ PPC::Runtime::ASM::b(.L_801A40B4);
/*801A4088 001A0E88*/ PPC::Runtime::ASM::li(context->r5, 0xf);
/*801A408C 001A0E8C*/ PPC::Runtime::ASM::b(.L_801A40B4);
/*801A4090 001A0E90*/ PPC::Runtime::ASM::li(context->r5, 0x11);
/*801A4094 001A0E94*/ PPC::Runtime::ASM::b(.L_801A40B4);
/*801A4098 001A0E98*/ PPC::Runtime::ASM::li(context->r5, 0x12);
/*801A409C 001A0E9C*/ PPC::Runtime::ASM::b(.L_801A40B4);
/*801A40A0 001A0EA0*/ PPC::Runtime::ASM::li(context->r5, 0x13);
/*801A40A4 001A0EA4*/ PPC::Runtime::ASM::b(.L_801A40B4);
/*801A40A8 001A0EA8*/ PPC::Runtime::ASM::li(context->r5, 0x10);
/*801A40AC 001A0EAC*/ PPC::Runtime::ASM::b(.L_801A40B4);
RUNTIME_PPC_JUMP_LABEL(.L_801A40B0, 0x801A40B0) //this is a jump label
/*801A40B0 001A0EB0*/ PPC::Runtime::ASM::li(context->r5, 0xd);
RUNTIME_PPC_JUMP_LABEL(.L_801A40B4, 0x801A40B4) //this is a jump label
/*801A40B4 001A0EB4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A40B8 001A0EB8*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*801A40BC 001A0EBC*/ PPC::Runtime::ASM::bl(fn_801A3ACC);
/*801A40C0 001A0EC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*801A40C4 001A0EC4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x13);
/*801A40C8 001A0EC8*/ PPC::Runtime::ASM::beq(.L_801A40DC);
/*801A40CC 001A0ECC*/ PPC::Runtime::ASM::bge(.L_801A411C);
/*801A40D0 001A0ED0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x10);
/*801A40D4 001A0ED4*/ PPC::Runtime::ASM::beq(.L_801A4100);
/*801A40D8 001A0ED8*/ PPC::Runtime::ASM::b(.L_801A411C);
RUNTIME_PPC_JUMP_LABEL(.L_801A40DC, 0x801A40DC) //this is a jump label
/*801A40DC 001A0EDC*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*801A40E0 001A0EE0*/ PPC::Runtime::ASM::beq(.L_801A40F0);
/*801A40E4 001A0EE4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A40E8 001A0EE8*/ PPC::Runtime::ASM::bl(fn_801A4A90);
/*801A40EC 001A0EEC*/ PPC::Runtime::ASM::b(.L_801A411C);
RUNTIME_PPC_JUMP_LABEL(.L_801A40F0, 0x801A40F0) //this is a jump label
/*801A40F0 001A0EF0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A40F4 001A0EF4*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*801A40F8 001A0EF8*/ PPC::Runtime::ASM::bl(fn_801A4990);
/*801A40FC 001A0EFC*/ PPC::Runtime::ASM::b(.L_801A411C);
RUNTIME_PPC_JUMP_LABEL(.L_801A4100, 0x801A4100) //this is a jump label
/*801A4100 001A0F00*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*801A4104 001A0F04*/ PPC::Runtime::ASM::beq(.L_801A4114);
/*801A4108 001A0F08*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A410C 001A0F0C*/ PPC::Runtime::ASM::bl(fn_801A4D60);
/*801A4110 001A0F10*/ PPC::Runtime::ASM::b(.L_801A411C);
RUNTIME_PPC_JUMP_LABEL(.L_801A4114, 0x801A4114) //this is a jump label
/*801A4114 001A0F14*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801A4118 001A0F18*/ PPC::Runtime::ASM::bl(fn_801A4CC0);
RUNTIME_PPC_JUMP_LABEL(.L_801A411C, 0x801A411C) //this is a jump label
/*801A411C 001A0F1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A4120 001A0F20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A4124 001A0F24*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801A4128 001A0F28*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A412C 001A0F2C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A4130 001A0F30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A4134 001A0F34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A4138 001A0F38*/ PPC::Runtime::ASM::blr();
}