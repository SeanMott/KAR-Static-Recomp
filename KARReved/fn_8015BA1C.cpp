//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015BA1C(PPC::Runtime::GCContext* context)
{
/*8015BA1C 0015881C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015BA20 00158820*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015BA24 00158824*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015BA28 00158828*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015BA2C 0015882C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015BA30 00158830*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015BA34 00158834*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015BA38 00158838*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015BA3C, 0x8015BA3C) //this is a jump label
/*8015BA3C 0015883C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015BA40 00158840*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015BA44 00158844*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015BA48 00158848*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8015BA4C 0015884C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7cc, context->r30));
/*8015BA50 00158850*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015BA54 00158854*/ PPC::Runtime::ASM::beq(.L_8015BA60);
/*8015BA58 00158858*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015BA5C 0015885C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7cc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015BA60, 0x8015BA60) //this is a jump label
/*8015BA60 00158860*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015BA64 00158864*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015BA68 00158868*/ PPC::Runtime::ASM::blt(.L_8015BA3C);
/*8015BA6C 0015886C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015BA70 00158870*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015BA74 00158874*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015BA78 00158878*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015BA7C 0015887C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015BA80 00158880*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015BA84 00158884*/ PPC::Runtime::ASM::blr();
}