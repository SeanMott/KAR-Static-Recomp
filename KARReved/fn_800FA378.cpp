//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_800FA378(PPC::Runtime::GCContext* context)
{
/*800FA378 000F7178*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FA37C 000F717C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FA380 000F7180*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FA384 000F7184*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FA388 000F7188*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA38C 000F718C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*800FA390 000F7190*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800FA394 000F7194*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FA398 000F7198*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FA39C 000F719C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FA3A0 000F71A0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FA3A4 000F71A4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FA3A8 000F71A8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FA3AC 000F71AC*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FA3B0 000F71B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA3B4 000F71B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FA3B8 000F71B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FA3BC 000F71BC*/ PPC::Runtime::ASM::blr();
}