//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800721D4.hpp"
#include "fn_80072458.hpp"



void fn_800BBE0C(PPC::Runtime::GCContext* context)
{
/*800BBE0C 000B8C0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800BBE10 000B8C10*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BBE14 000B8C14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800BBE18 000B8C18*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x50);
/*800BBE1C 000B8C1C*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800BBE20 000B8C20*/ PPC::Runtime::ASM::lis(context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BBE24 000B8C24*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*800BBE28 000B8C28*/ PPC::Runtime::ASM::addi(context->r29, context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BBE2C 000B8C2C*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800BBE30 000B8C30*/ PPC::Runtime::ASM::li(context->r27, 0x1);
/*800BBE34 000B8C34*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BBE38, 0x800BBE38) //this is a jump label
/*800BBE38 000B8C38*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x0);
/*800BBE3C 000B8C3C*/ PPC::Runtime::ASM::blt(.L_800BBE48);
/*800BBE40 000B8C40*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x20);
/*800BBE44 000B8C44*/ PPC::Runtime::ASM::blt(.L_800BBE50);
RUNTIME_PPC_JUMP_LABEL(.L_800BBE48, 0x800BBE48) //this is a jump label
/*800BBE48 000B8C48*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BBE4C 000B8C4C*/ PPC::Runtime::ASM::b(.L_800BBE54);
RUNTIME_PPC_JUMP_LABEL(.L_800BBE50, 0x800BBE50) //this is a jump label
/*800BBE50 000B8C50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800BBE54, 0x800BBE54) //this is a jump label
/*800BBE54 000B8C54*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BBE58 000B8C58*/ PPC::Runtime::ASM::beq(.L_800BBE64);
/*800BBE5C 000B8C5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BBE60 000B8C60*/ PPC::Runtime::ASM::b(.L_800BBE68);
RUNTIME_PPC_JUMP_LABEL(.L_800BBE64, 0x800BBE64) //this is a jump label
/*800BBE64 000B8C64*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BBE68, 0x800BBE68) //this is a jump label
/*800BBE68 000B8C68*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800BBE6C 000B8C6C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800BBE70 000B8C70*/ PPC::Runtime::ASM::beq(.L_800BBEDC);
/*800BBE74 000B8C74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800BBE78 000B8C78*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800BBE7C 000B8C7C*/ PPC::Runtime::ASM::bne(.L_800BBEC0);
/*800BBE80 000B8C80*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800BBE84 000B8C84*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800BBE88 000B8C88*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF264 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BBE8C 000B8C8C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800BBE90 000B8C90*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF2A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BBE94 000B8C94*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF2A4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BBE98 000B8C98*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF268 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BBE9C 000B8C9C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800BBEA0 000B8CA0*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800BBEA4 000B8CA4*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BBEA8 000B8CA8*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800BBEAC 000B8CAC*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800BBEB0 000B8CB0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800BBEB4 000B8CB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800BBEB8 000B8CB8*/ PPC::Runtime::ASM::bl(fn_800721D4);
/*800BBEBC 000B8CBC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800BBEC0, 0x800BBEC0) //this is a jump label
/*800BBEC0 000B8CC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800BBEC4 000B8CC4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BBEC8 000B8CC8*/ PPC::Runtime::ASM::beq(.L_800BBEDC);
/*800BBECC 000B8CCC*/ PPC::Runtime::ASM::mr(context->r4, context->r25);
/*800BBED0 000B8CD0*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*800BBED4 000B8CD4*/ PPC::Runtime::ASM::bl(fn_80072458);
/*800BBED8 000B8CD8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_800BBEDC, 0x800BBEDC) //this is a jump label
/*800BBEDC 000B8CDC*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800BBEE0 000B8CE0*/ PPC::Runtime::ASM::bne(.L_800BBEE8);
/*800BBEE4 000B8CE4*/ PPC::Runtime::ASM::li(context->r27, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BBEE8, 0x800BBEE8) //this is a jump label
/*800BBEE8 000B8CE8*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*800BBEEC 000B8CEC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*800BBEF0 000B8CF0*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x20);
/*800BBEF4 000B8CF4*/ PPC::Runtime::ASM::blt(.L_800BBE38);
/*800BBEF8 000B8CF8*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800BBEFC 000B8CFC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x50);
/*800BBF00 000B8D00*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800BBF04 000B8D04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800BBF08 000B8D08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BBF0C 000B8D0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800BBF10 000B8D10*/ PPC::Runtime::ASM::blr();
}