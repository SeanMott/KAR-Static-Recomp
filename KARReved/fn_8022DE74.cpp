//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022DE74(PPC::Runtime::GCContext* context)
{
/*8022DE74 0022AC74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022DE78 0022AC78*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022DE7C 0022AC7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022DE80 0022AC80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022DE84 0022AC84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022DE88 0022AC88*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8022DE8C 0022AC8C*/ PPC::Runtime::ASM::blt(.L_8022DEA8);
/*8022DE90 0022AC90*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022DE94 0022AC94*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022DE98 0022AC98*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022DE9C 0022AC9C*/ PPC::Runtime::ASM::li(context->r4, 0x53);
/*8022DEA0 0022ACA0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022DEA4 0022ACA4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022DEA8, 0x8022DEA8) //this is a jump label
/*8022DEA8 0022ACA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022DEAC 0022ACAC*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022DEB0 0022ACB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022DEB4 0022ACB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x840, context->r3));
/*8022DEB8 0022ACB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022DEBC 0022ACBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022DEC0 0022ACC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022DEC4 0022ACC4*/ PPC::Runtime::ASM::blr();
}