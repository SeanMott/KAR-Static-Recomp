//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802AEE10(PPC::Runtime::GCContext* context)
{
/*802AEE10 002ABC10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AEE14 002ABC14*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AEE18 002ABC18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AEE1C 002ABC1C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r3));
/*802AEE20 002ABC20*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802AEE24 002ABC24*/ PPC::Runtime::ASM::beq(.L_802AEE3C);
/*802AEE28 002ABC28*/ PPC::Runtime::ASM::lwzu(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*802AEE2C 002ABC2C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*802AEE30 002ABC30*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802AEE34 002ABC34*/ PPC::Runtime::ASM::bctrl();
/*802AEE38 002ABC38*/ PPC::Runtime::ASM::b(.L_802AEE4C);
RUNTIME_PPC_JUMP_LABEL(.L_802AEE3C, 0x802AEE3C) //this is a jump label
/*802AEE3C 002ABC3C*/ PPC::Runtime::ASM::lwzu(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*802AEE40 002ABC40*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*802AEE44 002ABC44*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802AEE48 002ABC48*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_802AEE4C, 0x802AEE4C) //this is a jump label
/*802AEE4C 002ABC4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AEE50 002ABC50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AEE54 002ABC54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AEE58 002ABC58*/ PPC::Runtime::ASM::blr();
}