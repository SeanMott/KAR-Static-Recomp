//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8038CB78.hpp"



void fn_8039FED0(PPC::Runtime::GCContext* context)
{
/*8039FED0 0039CCD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039FED4 0039CCD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039FED8 0039CCD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039FEDC 0039CCDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039FEE0 0039CCE0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8039FEE4 0039CCE4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8039FEE8 0039CCE8  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8039FEEC 0039CCEC*/ PPC::Runtime::ASM::beq(.L_8039FFEC);
/*8039FEF0 0039CCF0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F64BC @ Get_MemoryOffset_HighBit);
/*8039FEF4 0039CCF4*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8039FEF8 0039CCF8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804F64BC @ Get_MemoryOffset_LowBit);
/*8039FEFC 0039CCFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039FF00 0039CD00*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x10);
/*8039FF04 0039CD04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039FF08 0039CD08*/ PPC::Runtime::ASM::beq(.L_8039FFC8);
/*8039FF0C 0039CD0C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F58DC @ Get_MemoryOffset_HighBit);
/*8039FF10 0039CD10*/ PPC::Runtime::ASM::addic.(context->r4, context->r30, 0x38);
/*8039FF14 0039CD14*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F58DC @ Get_MemoryOffset_LowBit);
/*8039FF18 0039CD18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039FF1C 0039CD1C*/ PPC::Runtime::ASM::beq(.L_8039FF50);
/*8039FF20 0039CD20*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F5970 @ Get_MemoryOffset_HighBit);
/*8039FF24 0039CD24*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8039FF28 0039CD28*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F5970 @ Get_MemoryOffset_LowBit);
/*8039FF2C 0039CD2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*8039FF30 0039CD30*/ PPC::Runtime::ASM::beq(.L_8039FF50);
/*8039FF34 0039CD34*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F5078 @ Get_MemoryOffset_HighBit);
/*8039FF38 0039CD38*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F5078 @ Get_MemoryOffset_LowBit);
/*8039FF3C 0039CD3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*8039FF40 0039CD40*/ PPC::Runtime::ASM::beq(.L_8039FF50);
/*8039FF44 0039CD44*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC430 @ Get_MemoryOffset_HighBit);
/*8039FF48 0039CD48*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BC430 @ Get_MemoryOffset_LowBit);
/*8039FF4C 0039CD4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8039FF50, 0x8039FF50) //this is a jump label
/*8039FF50 0039CD50*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8039FF54 0039CD54*/ PPC::Runtime::ASM::beq(.L_8039FFC8);
/*8039FF58 0039CD58*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC3DC @ Get_MemoryOffset_HighBit);
/*8039FF5C 0039CD5C*/ PPC::Runtime::ASM::addic.(context->r4, context->r30, 0x30);
/*8039FF60 0039CD60*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BC3DC @ Get_MemoryOffset_LowBit);
/*8039FF64 0039CD64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039FF68 0039CD68*/ PPC::Runtime::ASM::beq(.L_8039FF8C);
/*8039FF6C 0039CD6C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F59EC @ Get_MemoryOffset_HighBit);
/*8039FF70 0039CD70*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8039FF74 0039CD74*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F59EC @ Get_MemoryOffset_LowBit);
/*8039FF78 0039CD78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
/*8039FF7C 0039CD7C*/ PPC::Runtime::ASM::beq(.L_8039FF8C);
/*8039FF80 0039CD80*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC3BC @ Get_MemoryOffset_HighBit);
/*8039FF84 0039CD84*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BC3BC @ Get_MemoryOffset_LowBit);
/*8039FF88 0039CD88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8039FF8C, 0x8039FF8C) //this is a jump label
/*8039FF8C 0039CD8C*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8039FF90 0039CD90*/ PPC::Runtime::ASM::beq(.L_8039FFC8);
/*8039FF94 0039CD94*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC374 @ Get_MemoryOffset_HighBit);
/*8039FF98 0039CD98*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8039FF9C 0039CD9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BC374 @ Get_MemoryOffset_LowBit);
/*8039FFA0 0039CDA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039FFA4 0039CDA4*/ PPC::Runtime::ASM::beq(.L_8039FFC8);
/*8039FFA8 0039CDA8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BC344 @ Get_MemoryOffset_HighBit);
/*8039FFAC 0039CDAC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8);
/*8039FFB0 0039CDB0*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BC344 @ Get_MemoryOffset_LowBit);
/*8039FFB4 0039CDB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039FFB8 0039CDB8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039FFBC 0039CDBC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8039FFC0 0039CDC0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039FFC4 0039CDC4*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8039FFC8, 0x8039FFC8) //this is a jump label
/*8039FFC8 0039CDC8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8039FFCC 0039CDCC*/ PPC::Runtime::ASM::beq(.L_8039FFDC);
/*8039FFD0 0039CDD0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC454 @ Get_MemoryOffset_HighBit);
/*8039FFD4 0039CDD4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BC454 @ Get_MemoryOffset_LowBit);
/*8039FFD8 0039CDD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8039FFDC, 0x8039FFDC) //this is a jump label
/*8039FFDC 0039CDDC*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8039FFE0 0039CDE0*/ PPC::Runtime::ASM::ble(.L_8039FFEC);
/*8039FFE4 0039CDE4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039FFE8 0039CDE8*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8039FFEC, 0x8039FFEC) //this is a jump label
/*8039FFEC 0039CDEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039FFF0 0039CDF0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039FFF4 0039CDF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039FFF8 0039CDF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039FFFC 0039CDFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803A0000 0039CE00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803A0004 0039CE04*/ PPC::Runtime::ASM::blr();
}