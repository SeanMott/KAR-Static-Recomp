//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D416C(PPC::Runtime::GCContext* context)
{
/*800D416C 000D0F6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800D4170 000D0F70*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D4174 000D0F74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D4178 000D0F78*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D417C 000D0F7C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D4180 000D0F80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D4184 000D0F84*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D4188 000D0F88*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D418C 000D0F8C*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4190 000D0F90*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D4194 000D0F94*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800D4198 000D0F98*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D419C 000D0F9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D41A0 000D0FA0*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D41A4 000D0FA4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D41A8 000D0FA8*/ PPC::Runtime::ASM::bne(.L_800D41BC);
/*800D41AC 000D0FAC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D41B0 000D0FB0*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x66c);
/*800D41B4 000D0FB4*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D41B8 000D0FB8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D41BC, 0x800D41BC) //this is a jump label
/*800D41BC 000D0FBC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D41C0 000D0FC0*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800D41C4 000D0FC4*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D41C8 000D0FC8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800D41CC 000D0FCC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D41D0 000D0FD0  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D41D4 000D0FD4*/ PPC::Runtime::ASM::beq(.L_800D4204);
/*800D41D8 000D0FD8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D41DC 000D0FDC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D41E0 000D0FE0*/ PPC::Runtime::ASM::beq(.L_800D41EC);
/*800D41E4 000D0FE4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D41E8 000D0FE8*/ PPC::Runtime::ASM::b(.L_800D41F0);
RUNTIME_PPC_JUMP_LABEL(.L_800D41EC, 0x800D41EC) //this is a jump label
/*800D41EC 000D0FEC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D41F0, 0x800D41F0) //this is a jump label
/*800D41F0 000D0FF0*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800D41F4 000D0FF4*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D41F8 000D0FF8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D41FC 000D0FFC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D4200 000D1000*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D4204, 0x800D4204) //this is a jump label
/*800D4204 000D1004*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D4208 000D1008*/ PPC::Runtime::ASM::bne(.L_800D422C);
/*800D420C 000D100C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D4210 000D1010*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x67c);
/*800D4214 000D1014*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D4218 000D1018*/ PPC::Runtime::ASM::bl(OSReport);
/*800D421C 000D101C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D4220 000D1020*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x68c);
/*800D4224 000D1024*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D4228 000D1028*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D422C, 0x800D422C) //this is a jump label
/*800D422C 000D102C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D4230 000D1030*/ PPC::Runtime::ASM::slwi(context->r3, context->r29, 2);
/*800D4234 000D1034*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4238 000D1038*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D423C 000D103C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D4240 000D1040*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f31);
/*800D4244 000D1044*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r3);
/*800D4248 000D1048*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D424C 000D104C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D4250 000D1050*/ PPC::Runtime::ASM::bne(.L_800D4268);
/*800D4254 000D1054*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4258 000D1058*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D425C 000D105C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D4260 000D1060*/ PPC::Runtime::ASM::bne(.L_800D4268);
/*800D4264 000D1064*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D4268, 0x800D4268) //this is a jump label
/*800D4268 000D1068*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D426C 000D106C*/ PPC::Runtime::ASM::bne(.L_800D4280);
/*800D4270 000D1070*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x6dc);
/*800D4274 000D1074*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D4278 000D1078*/ PPC::Runtime::ASM::li(context->r4, 0xc11);
/*800D427C 000D107C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4280, 0x800D4280) //this is a jump label
/*800D4280 000D1080*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*800D4284 000D1084*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4288 000D1088*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D428C 000D108C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*800D4290 000D1090*/ PPC::Runtime::ASM::beq(.L_800D42A4);
/*800D4294 000D1094*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x76c);
/*800D4298 000D1098*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D429C 000D109C*/ PPC::Runtime::ASM::li(context->r4, 0xc12);
/*800D42A0 000D10A0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D42A4, 0x800D42A4) //this is a jump label
/*800D42A4 000D10A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*800D42A8 000D10A8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800D42AC 000D10AC*/ PPC::Runtime::ASM::li(context->r4, 0x8);
/*800D42B0 000D10B0*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800D42B4 000D10B4*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800D42B8 000D10B8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800D42BC 000D10BC*/ PPC::Runtime::ASM::ble(.L_800D42DC);
RUNTIME_PPC_JUMP_LABEL(.L_800D42C0, 0x800D42C0) //this is a jump label
/*800D42C0 000D10C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800D42C4 000D10C4*/ PPC::Runtime::ASM::lfsx(context->f0, context->r3, context->r4);
/*800D42C8 000D10C8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D42CC 000D10CC*/ PPC::Runtime::ASM::blt(.L_800D42DC);
/*800D42D0 000D10D0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x8);
/*800D42D4 000D10D4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*800D42D8 000D10D8*/ PPC::Runtime::ASM::bdnz(.L_800D42C0);
RUNTIME_PPC_JUMP_LABEL(.L_800D42DC, 0x800D42DC) //this is a jump label
/*800D42DC 000D10DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800D42E0 000D10E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 3);
/*800D42E4 000D10E4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800D42E8 000D10E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x4, context->r3));
/*800D42EC 000D10EC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D42F0 000D10F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D42F4 000D10F4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D42F8 000D10F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D42FC 000D10FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D4300 000D1100*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D4304 000D1104*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D4308 000D1108*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800D430C 000D110C*/ PPC::Runtime::ASM::blr();
}