//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A24C8.hpp"
#include "fn_Interrupt_CheckForRun.hpp"
#include "fn_Interrupt_CheckForSwim.hpp"
#include "fn_Interrupt_CheckForJump.hpp"
#include "fn_801A234C.hpp"
#include "fn_80062ECC.hpp"
#include "fn_801B84E4.hpp"



void fn_Interrupt_AS_Wait(PPC::Runtime::GCContext* context)
{
/*801BADBC 001B7BBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*801BADC0 001B7BC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BADC4 001B7BC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801BADC8 001B7BC8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801BADCC 001B7BCC*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801BADD0 001B7BD0*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801BADD4 001B7BD4*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801BADD8 001B7BD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801BADDC 001B7BDC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BADE0 001B7BE0*/ PPC::Runtime::ASM::bl(fn_801A24C8);
/*801BADE4 001B7BE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BADE8 001B7BE8*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForRun);
/*801BADEC 001B7BEC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BADF0 001B7BF0*/ PPC::Runtime::ASM::bne(.L_801BAE84);
/*801BADF4 001B7BF4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BADF8 001B7BF8*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForSwim);
/*801BADFC 001B7BFC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BAE00 001B7C00*/ PPC::Runtime::ASM::bne(.L_801BAE84);
/*801BAE04 001B7C04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BAE08 001B7C08*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForJump);
/*801BAE0C 001B7C0C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BAE10 001B7C10*/ PPC::Runtime::ASM::bne(.L_801BAE84);
/*801BAE14 001B7C14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BAE18 001B7C18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BAE1C 001B7C1C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*801BAE20 001B7C20*/ PPC::Runtime::ASM::bl(fn_801A234C);
/*801BAE24 001B7C24*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BAE28 001B7C28*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*801BAE2C 001B7C2C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
/*801BAE30 001B7C30*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801BAE34 001B7C34*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r6));
/*801BAE38 001B7C38*/ PPC::Runtime::ASM::lfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r6));
/*801BAE3C 001B7C3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r31));
/*801BAE40 001B7C40*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BAE44 001B7C44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BAE48 001B7C48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r31));
/*801BAE4C 001B7C4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801BAE50 001B7C50*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa6c, context->r31));
/*801BAE54 001B7C54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa70, context->r31));
/*801BAE58 001B7C58*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BAE5C 001B7C5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801BAE60 001B7C60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa74, context->r31));
/*801BAE64 001B7C64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801BAE68 001B7C68*/ PPC::Runtime::ASM::bl(fn_80062ECC);
/*801BAE6C 001B7C6C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E178C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BAE70 001B7C70*/ PPC::Runtime::ASM::fsubs(context->f0, context->f31, context->f30);
/*801BAE74 001B7C74*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BAE78 001B7C78*/ PPC::Runtime::ASM::fdivs(context->f1, context->f1, context->f2);
/*801BAE7C 001B7C7C*/ PPC::Runtime::ASM::fmadds(context->f1, context->f1, context->f0, context->f30);
/*801BAE80 001B7C80*/ PPC::Runtime::ASM::bl(fn_801B84E4);
RUNTIME_PPC_JUMP_LABEL(.L_801BAE84, 0x801BAE84) //this is a jump label
/*801BAE84 001B7C84*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801BAE88 001B7C88*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801BAE8C 001B7C8C*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801BAE90 001B7C90*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801BAE94 001B7C94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801BAE98 001B7C98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801BAE9C 001B7C9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BAEA0 001B7CA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*801BAEA4 001B7CA4*/ PPC::Runtime::ASM::blr();
}