//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DA674.hpp"
#include "fn_801EB898.hpp"



void fn_801EDBFC(PPC::Runtime::GCContext* context)
{
/*801EDBFC 001EA9FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801EDC00 001EAA00*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EDC04 001EAA04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801EDC08 001EAA08*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801EDC0C 001EAA0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801EDC10 001EAA10*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EDC14 001EAA14*/ PPC::Runtime::ASM::bl(fn_801DA674);
/*801EDC18 001EAA18*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EDC1C 001EAA1C*/ PPC::Runtime::ASM::beq(.L_801EDC2C);
/*801EDC20 001EAA20*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801EDC24 001EAA24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EDC28 001EAA28*/ PPC::Runtime::ASM::bl(fn_801EB898);
RUNTIME_PPC_JUMP_LABEL(.L_801EDC2C, 0x801EDC2C) //this is a jump label
/*801EDC2C 001EAA2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801EDC30 001EAA30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801EDC34 001EAA34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EDC38 001EAA38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801EDC3C 001EAA3C*/ PPC::Runtime::ASM::blr();
}