//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"
#include "fn_8022D230.hpp"
#include "fn_801C8508.hpp"
#include "fn_801E5AB0.hpp"
#include "fn_8022D468.hpp"



void fn_8022E6B4(PPC::Runtime::GCContext* context)
{
/*8022E6B4 0022B4B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8022E6B8 0022B4B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022E6BC 0022B4BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022E6C0 0022B4C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8022E6C4 0022B4C4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8022E6C8 0022B4C8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022E6CC 0022B4CC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8022E6D0 0022B4D0*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022E6D4 0022B4D4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022E6D8 0022B4D8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8022E6DC 0022B4DC*/ PPC::Runtime::ASM::bl(fn_8022D230);
/*8022E6E0 0022B4E0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x5);
/*8022E6E4 0022B4E4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8022E6E8 0022B4E8*/ PPC::Runtime::ASM::blt(.L_8022E704);
/*8022E6EC 0022B4EC*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022E6F0 0022B4F0*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022E6F4 0022B4F4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022E6F8 0022B4F8*/ PPC::Runtime::ASM::li(context->r4, 0x161);
/*8022E6FC 0022B4FC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022E700 0022B500*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022E704, 0x8022E704) //this is a jump label
/*8022E704 0022B504*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8022E708 0022B508*/ PPC::Runtime::ASM::bl(fn_801C8508);
/*8022E70C 0022B50C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8022E710 0022B510*/ PPC::Runtime::ASM::beq(.L_8022E730);
/*8022E714 0022B514*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8022E718 0022B518*/ PPC::Runtime::ASM::bl(fn_801E5AB0);
/*8022E71C 0022B51C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/* 8022E720 0022B520  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*8022E724 0022B524*/ PPC::Runtime::ASM::beq(.L_8022E730);
/*8022E728 0022B528*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8022E72C 0022B52C*/ PPC::Runtime::ASM::b(.L_8022E734);
RUNTIME_PPC_JUMP_LABEL(.L_8022E730, 0x8022E730) //this is a jump label
/*8022E730 0022B530*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8022E734, 0x8022E734) //this is a jump label
/*8022E734 0022B534*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8022E738 0022B538*/ PPC::Runtime::ASM::beq(.L_8022E74C);
/*8022E73C 0022B53C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x854, context->r31));
/*8022E740 0022B540*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8022E744 0022B544*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*8022E748 0022B548*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x854, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8022E74C, 0x8022E74C) //this is a jump label
/*8022E74C 0022B54C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8022E750 0022B550*/ PPC::Runtime::ASM::bl(fn_8022D468);
/*8022E754 0022B554*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8022E758 0022B558*/ PPC::Runtime::ASM::beq(.L_8022E76C);
/*8022E75C 0022B55C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x854, context->r31));
/*8022E760 0022B560*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8022E764 0022B564*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*8022E768 0022B568*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x854, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8022E76C, 0x8022E76C) //this is a jump label
/*8022E76C 0022B56C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022E770 0022B570*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8022E774 0022B574*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8022E778 0022B578*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022E77C 0022B57C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022E780 0022B580*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8022E784 0022B584*/ PPC::Runtime::ASM::blr();
}