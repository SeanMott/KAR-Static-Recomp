//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80059818.hpp"
#include "fn_80073FA4.hpp"
#include "fn_LoadDatsForCityTrial.hpp"
#include "fn_80059818.hpp"
#include "fn_80059520.hpp"
#include "fn_80139510.hpp"
#include "fn_8013A9CC.hpp"
#include "fn_80146CB4.hpp"
#include "fn_80147230.hpp"
#include "fn_801476F0.hpp"
#include "fn_80147AFC.hpp"
#include "fn_801480A8.hpp"
#include "fn_801487EC.hpp"
#include "fn_8014906C.hpp"
#include "fn_80149B2C.hpp"
#include "fn_80149E10.hpp"
#include "fn_8014A26C.hpp"
#include "fn_8014A538.hpp"
#include "fn_8014A784.hpp"
#include "fn_8014A98C.hpp"
#include "fn_8014AC84.hpp"
#include "fn_8014AF48.hpp"
#include "fn_8014B278.hpp"
#include "fn_8014B5F0.hpp"
#include "fn_8014B8F8.hpp"
#include "fn_8014BDC4.hpp"
#include "fn_8014BB5C.hpp"
#include "fn_8014C114.hpp"
#include "fn_8014C4CC.hpp"
#include "fn_8014C90C.hpp"
#include "fn_8016180C.hpp"



void fn_80131D44(PPC::Runtime::GCContext* context)
{
/*80131D44 0012EB44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80131D48 0012EB48*/ PPC::Runtime::ASM::mflr(context->r0);
/*80131D4C 0012EB4C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80131D50 0012EB50*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1133 @ Get_MemoryOffset_HighBit);
/*80131D54 0012EB54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80131D58 0012EB58*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80131D5C 0012EB5C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80131D60 0012EB60*/ PPC::Runtime::ASM::addi(context->r4, context->r3, MemoryOffset_1133 @ Get_MemoryOffset_LowBit);
/*80131D64 0012EB64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80131D68 0012EB68*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD7E0 @ Get_MemoryOffset_SDA21);
/*80131D6C 0012EB6C*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80131D70 0012EB70*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80131D74 0012EB74*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80131D78 0012EB78*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80131D7C 0012EB7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r3));
/*80131D80 0012EB80*/ PPC::Runtime::ASM::bl(fn_80073FA4);
/*80131D84 0012EB84*/ PPC::Runtime::ASM::bl(fn_LoadDatsForCityTrial);
/*80131D88 0012EB88*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD7C8 @ Get_MemoryOffset_SDA21);
/*80131D8C 0012EB8C*/ PPC::Runtime::ASM::li(context->r4, lbl_805D65E8 @ Get_MemoryOffset_SDA21);
/*80131D90 0012EB90*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80131D94 0012EB94*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1201 @ Get_MemoryOffset_HighBit);
/*80131D98 0012EB98*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD7C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80131D9C 0012EB9C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1201 @ Get_MemoryOffset_LowBit);
/*80131DA0 0012EBA0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80131DA4 0012EBA4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80131DA8 0012EBA8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80131DAC 0012EBAC*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80131DB0 0012EBB0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80131DB4 0012EBB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80131DB8 0012EBB8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80131DBC 0012EBBC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80131DC0 0012EBC0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559A90 @ Get_MemoryOffset_HighBit);
/*80131DC4 0012EBC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80131DC8 0012EBC8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80559A90 @ Get_MemoryOffset_LowBit);
/*80131DCC 0012EBCC*/ PPC::Runtime::ASM::li(context->r4, 0x1f0);
/*80131DD0 0012EBD0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*80131DD4 0012EBD4*/ PPC::Runtime::ASM::bl(fn_80139510);
/*80131DD8 0012EBD8*/ PPC::Runtime::ASM::bl(fn_8013A9CC);
/*80131DDC 0012EBDC*/ PPC::Runtime::ASM::bl(fn_80146CB4);
/*80131DE0 0012EBE0*/ PPC::Runtime::ASM::bl(fn_80147230);
/*80131DE4 0012EBE4*/ PPC::Runtime::ASM::bl(fn_801476F0);
/*80131DE8 0012EBE8*/ PPC::Runtime::ASM::bl(fn_80147AFC);
/*80131DEC 0012EBEC*/ PPC::Runtime::ASM::bl(fn_801480A8);
/*80131DF0 0012EBF0*/ PPC::Runtime::ASM::bl(fn_801487EC);
/*80131DF4 0012EBF4*/ PPC::Runtime::ASM::bl(fn_8014906C);
/*80131DF8 0012EBF8*/ PPC::Runtime::ASM::bl(fn_80149B2C);
/*80131DFC 0012EBFC*/ PPC::Runtime::ASM::bl(fn_80149E10);
/*80131E00 0012EC00*/ PPC::Runtime::ASM::bl(fn_8014A26C);
/*80131E04 0012EC04*/ PPC::Runtime::ASM::bl(fn_8014A538);
/*80131E08 0012EC08*/ PPC::Runtime::ASM::bl(fn_8014A784);
/*80131E0C 0012EC0C*/ PPC::Runtime::ASM::bl(fn_8014A98C);
/*80131E10 0012EC10*/ PPC::Runtime::ASM::bl(fn_8014AC84);
/*80131E14 0012EC14*/ PPC::Runtime::ASM::bl(fn_8014AF48);
/*80131E18 0012EC18*/ PPC::Runtime::ASM::bl(fn_8014B278);
/*80131E1C 0012EC1C*/ PPC::Runtime::ASM::bl(fn_8014B5F0);
/*80131E20 0012EC20*/ PPC::Runtime::ASM::bl(fn_8014B8F8);
/*80131E24 0012EC24*/ PPC::Runtime::ASM::bl(fn_8014BDC4);
/*80131E28 0012EC28*/ PPC::Runtime::ASM::bl(fn_8014BB5C);
/*80131E2C 0012EC2C*/ PPC::Runtime::ASM::bl(fn_8014C114);
/*80131E30 0012EC30*/ PPC::Runtime::ASM::bl(fn_8014C4CC);
/*80131E34 0012EC34*/ PPC::Runtime::ASM::bl(fn_8014C90C);
/*80131E38 0012EC38*/ PPC::Runtime::ASM::bl(fn_8016180C);
/*80131E3C 0012EC3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80131E40 0012EC40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80131E44 0012EC44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80131E48 0012EC48*/ PPC::Runtime::ASM::blr();
}