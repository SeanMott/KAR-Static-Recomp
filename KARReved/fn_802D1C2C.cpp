//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80296264.hpp"
#include "fn_80296264.hpp"
#include "fn_80296264.hpp"
#include "fn_802F10A4.hpp"



void fn_802D1C2C(PPC::Runtime::GCContext* context)
{
/*802D1C2C 002CEA2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*802D1C30 002CEA30*/ PPC::Runtime::ASM::mflr(context->r0);
/*802D1C34 002CEA34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*802D1C38 002CEA38*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*802D1C3C 002CEA3C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*802D1C40 002CEA40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802D1C44 002CEA44*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802D1C48 002CEA48*/ PPC::Runtime::ASM::lis(context->r5, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*802D1C4C 002CEA4C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802D1C50 002CEA50*/ PPC::Runtime::ASM::addi(context->r3, context->r5, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*802D1C54 002CEA54*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802D1C58 002CEA58*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802D1C5C 002CEA5C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E3728 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D1C60 002CEA60*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*802D1C64 002CEA64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*802D1C68 002CEA68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r3));
/*802D1C6C 002CEA6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*802D1C70 002CEA70*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4a4, context->r3));
/*802D1C74 002CEA74*/ PPC::Runtime::ASM::bl(fn_80296264);
/*802D1C78 002CEA78*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*802D1C7C 002CEA7C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E3728 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D1C80 002CEA80*/ PPC::Runtime::ASM::bl(fn_80296264);
/*802D1C84 002CEA84*/ PPC::Runtime::ASM::fmuls(context->f31, context->f1, context->f31);
/*802D1C88 002CEA88*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E3728 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D1C8C 002CEA8C*/ PPC::Runtime::ASM::bl(fn_80296264);
/*802D1C90 002CEA90*/ PPC::Runtime::ASM::fmuls(context->f2, context->f1, context->f31);
/*802D1C94 002CEA94*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E372C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D1C98 002CEA98*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E3730 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D1C9C 002CEA9C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*802D1CA0 002CEAA0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802D1CA4 002CEAA4*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f2);
/*802D1CA8 002CEAA8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802D1CAC 002CEAAC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802D1CB0 002CEAB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802D1CB4 002CEAB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D1CB8 002CEAB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*802D1CBC 002CEABC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xe0);
/*802D1CC0 002CEAC0*/ PPC::Runtime::ASM::bl(fn_802F10A4);
/*802D1CC4 002CEAC4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*802D1CC8 002CEAC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x46c, context->r3));
/*802D1CCC 002CEACC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*802D1CD0 002CEAD0*/ PPC::Runtime::ASM::bne(.L_802D1CE4);
/*802D1CD4 002CEAD4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D8FC8 @ Get_MemoryOffset_SDA21);
/*802D1CD8 002CEAD8*/ PPC::Runtime::ASM::li(context->r4, 0x2b8);
/*802D1CDC 002CEADC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D8FD0 @ Get_MemoryOffset_SDA21);
/*802D1CE0 002CEAE0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_802D1CE4, 0x802D1CE4) //this is a jump label
/*802D1CE4 002CEAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802D1CE8 002CEAE8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 14, 14);
/*802D1CEC 002CEAEC*/ PPC::Runtime::ASM::beq(.L_802D1D04);
/*802D1CF0 002CEAF0*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D11D0 @ Get_MemoryOffset_HighBit);
/*802D1CF4 002CEAF4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D8FC8 @ Get_MemoryOffset_SDA21);
/*802D1CF8 002CEAF8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804D11D0 @ Get_MemoryOffset_LowBit);
/*802D1CFC 002CEAFC*/ PPC::Runtime::ASM::li(context->r4, 0x2b9);
/*802D1D00 002CEB00*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_802D1D04, 0x802D1D04) //this is a jump label
/*802D1D04 002CEB04*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E3730 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D1D08 002CEB08*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*802D1D0C 002CEB0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802D1D10 002CEB10*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*802D1D14 002CEB14*/ PPC::Runtime::ASM::bne(.L_802D1D60);
/*802D1D18 002CEB18*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*802D1D1C 002CEB1C*/ PPC::Runtime::ASM::beq(.L_802D1D60);
/*802D1D20 002CEB20*/ PPC::Runtime::ASM::bne(.L_802D1D34);
/*802D1D24 002CEB24*/ PPC::Runtime::ASM::li(context->r3, lbl_805D8FC8 @ Get_MemoryOffset_SDA21);
/*802D1D28 002CEB28*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*802D1D2C 002CEB2C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D8FD0 @ Get_MemoryOffset_SDA21);
/*802D1D30 002CEB30*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_802D1D34, 0x802D1D34) //this is a jump label
/*802D1D34 002CEB34*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802D1D38 002CEB38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802D1D3C 002CEB3C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*802D1D40 002CEB40*/ PPC::Runtime::ASM::bne(.L_802D1D50);
/*802D1D44 002CEB44*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*802D1D48 002CEB48*/ PPC::Runtime::ASM::beq(.L_802D1D50);
/*802D1D4C 002CEB4C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_802D1D50, 0x802D1D50) //this is a jump label
/* 802D1D50 002CEB50  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*802D1D54 002CEB54*/ PPC::Runtime::ASM::bne(.L_802D1D60);
/*802D1D58 002CEB58*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802D1D5C 002CEB5C*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_802D1D60, 0x802D1D60) //this is a jump label
/*802D1D60 002CEB60*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802D1D64 002CEB64*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*802D1D68 002CEB68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*802D1D6C 002CEB6C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*802D1D70 002CEB70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802D1D74 002CEB74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802D1D78 002CEB78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802D1D7C 002CEB7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*802D1D80 002CEB80*/ PPC::Runtime::ASM::blr();
}