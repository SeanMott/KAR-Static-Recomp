//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019A660.hpp"



void fn_80199E24(PPC::Runtime::GCContext* context)
{
/*80199E24 00196C24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80199E28 00196C28*/ PPC::Runtime::ASM::mflr(context->r0);
/*80199E2C 00196C2C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1160 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80199E30 00196C30*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80199E34 00196C34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80199E38 00196C38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80199E3C 00196C3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80199E40 00196C40*/ PPC::Runtime::ASM::bl(fn_8019A660);
/*80199E44 00196C44*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80199E48 00196C48*/ PPC::Runtime::ASM::beq(.L_80199E70);
/*80199E4C 00196C4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x648, context->r31));
/*80199E50 00196C50*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80199E54 00196C54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64c, context->r31));
/*80199E58 00196C58*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r31));
/*80199E5C 00196C5C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x304, context->r31));
/*80199E60 00196C60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*80199E64 00196C64*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x308, context->r31));
/*80199E68 00196C68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r31));
/*80199E6C 00196C6C*/ PPC::Runtime::ASM::b(.L_80199E78);
RUNTIME_PPC_JUMP_LABEL(.L_80199E70, 0x80199E70) //this is a jump label
/*80199E70 00196C70*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80199E74 00196C74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80199E78, 0x80199E78) //this is a jump label
/*80199E78 00196C78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80199E7C 00196C7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80199E80 00196C80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80199E84 00196C84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80199E88 00196C88*/ PPC::Runtime::ASM::blr();
}