//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "DCInvalidateRange.hpp"
#include "EXILock.hpp"
#include "EXISelect.hpp"
#include "EXIUnlock.hpp"
#include "EXIImm.hpp"
#include "EXISync.hpp"
#include "EXIDma.hpp"
#include "EXISync.hpp"
#include "EXIDeselect.hpp"
#include "EXIUnlock.hpp"



void __OSInitSram(PPC::Runtime::GCContext* context)
{
/*803D8F20 003D5D20*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D8F24 003D5D24*/ PPC::Runtime::ASM::lis(context->r3, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D8F28 003D5D28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D8F2C 003D5D2C*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*803D8F30 003D5D30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803D8F34 003D5D34*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D8F38 003D5D38*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803D8F3C 003D5D3C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803D8F40 003D5D40*/ PPC::Runtime::ASM::addi(context->r30, context->r3, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D8F44 003D5D44*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803D8F48 003D5D48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*803D8F4C 003D5D4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r30));
/*803D8F50 003D5D50*/ PPC::Runtime::ASM::bl(DCInvalidateRange);
/*803D8F54 003D5D54*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8F58 003D5D58*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803D8F5C 003D5D5C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803D8F60 003D5D60*/ PPC::Runtime::ASM::bl(EXILock);
/*803D8F64 003D5D64*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803D8F68 003D5D68*/ PPC::Runtime::ASM::bne(.L_803D8F70);
/*803D8F6C 003D5D6C*/ PPC::Runtime::ASM::b(.L_803D9030);
RUNTIME_PPC_JUMP_LABEL(.L_803D8F70, 0x803D8F70) //this is a jump label
/*803D8F70 003D5D70*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8F74 003D5D74*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803D8F78 003D5D78*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*803D8F7C 003D5D7C*/ PPC::Runtime::ASM::bl(EXISelect);
/*803D8F80 003D5D80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803D8F84 003D5D84*/ PPC::Runtime::ASM::bne(.L_803D8F94);
/*803D8F88 003D5D88*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8F8C 003D5D8C*/ PPC::Runtime::ASM::bl(EXIUnlock);
/*803D8F90 003D5D90*/ PPC::Runtime::ASM::b(.L_803D9030);
RUNTIME_PPC_JUMP_LABEL(.L_803D8F94, 0x803D8F94) //this is a jump label
/*803D8F94 003D5D94*/ PPC::Runtime::ASM::lis(context->r3, 0x2000);
/*803D8F98 003D5D98*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x100);
/*803D8F9C 003D5D9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803D8FA0 003D5DA0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803D8FA4 003D5DA4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8FA8 003D5DA8*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803D8FAC 003D5DAC*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803D8FB0 003D5DB0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803D8FB4 003D5DB4*/ PPC::Runtime::ASM::bl(EXIImm);
/*803D8FB8 003D5DB8*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803D8FBC 003D5DBC*/ PPC::Runtime::ASM::srwi(context->r31, context->r0, 5);
/*803D8FC0 003D5DC0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8FC4 003D5DC4*/ PPC::Runtime::ASM::bl(EXISync);
/*803D8FC8 003D5DC8*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803D8FCC 003D5DCC*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803D8FD0 003D5DD0*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803D8FD4 003D5DD4*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803D8FD8 003D5DD8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8FDC 003D5DDC*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803D8FE0 003D5DE0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803D8FE4 003D5DE4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803D8FE8 003D5DE8*/ PPC::Runtime::ASM::bl(EXIDma);
/*803D8FEC 003D5DEC*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803D8FF0 003D5DF0*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803D8FF4 003D5DF4*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803D8FF8 003D5DF8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D8FFC 003D5DFC*/ PPC::Runtime::ASM::bl(EXISync);
/*803D9000 003D5E00*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803D9004 003D5E04*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803D9008 003D5E08*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803D900C 003D5E0C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9010 003D5E10*/ PPC::Runtime::ASM::bl(EXIDeselect);
/*803D9014 003D5E14*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803D9018 003D5E18*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803D901C 003D5E1C*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r0);
/*803D9020 003D5E20*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9024 003D5E24*/ PPC::Runtime::ASM::bl(EXIUnlock);
/*803D9028 003D5E28*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r31);
/*803D902C 003D5E2C*/ PPC::Runtime::ASM::srwi(context->r31, context->r0, 5);
RUNTIME_PPC_JUMP_LABEL(.L_803D9030, 0x803D9030) //this is a jump label
/*803D9030 003D5E30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r30));
/*803D9034 003D5E34*/ PPC::Runtime::ASM::li(context->r0, 0x40);
/*803D9038 003D5E38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r30));
/*803D903C 003D5E3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D9040 003D5E40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D9044 003D5E44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803D9048 003D5E48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803D904C 003D5E4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D9050 003D5E50*/ PPC::Runtime::ASM::blr();
}