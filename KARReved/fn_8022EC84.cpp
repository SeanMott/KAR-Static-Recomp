//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022EC84(PPC::Runtime::GCContext* context)
{
/*8022EC84 0022BA84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022EC88 0022BA88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022EC8C 0022BA8C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*8022EC90 0022BA90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022EC94 0022BA94*/ PPC::Runtime::ASM::bge(.L_8022ECC8);
/*8022EC98 0022BA98*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x5);
/*8022EC9C 0022BA9C*/ PPC::Runtime::ASM::bge(.L_8022ECC8);
/*8022ECA0 0022BAA0*/ PPC::Runtime::ASM::cmpw(context->r3, context->r4);
/*8022ECA4 0022BAA4*/ PPC::Runtime::ASM::beq(.L_8022ECC8);
/*8022ECA8 0022BAA8*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022ECAC 0022BAAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x608, context->r3));
/*8022ECB0 0022BAB0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8022ECB4 0022BAB4*/ PPC::Runtime::ASM::beq(.L_8022ECC8);
/*8022ECB8 0022BAB8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84c, context->r3));
/*8022ECBC 0022BABC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8022ECC0 0022BAC0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*8022ECC4 0022BAC4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8022ECC8, 0x8022ECC8) //this is a jump label
/*8022ECC8 0022BAC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022ECCC 0022BACC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022ECD0 0022BAD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022ECD4 0022BAD4*/ PPC::Runtime::ASM::blr();
}