//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D416C.hpp"
#include "fn_800CEC44.hpp"
#include "fn_800D334C.hpp"
#include "fn_801D3334.hpp"



void fn_801EE448(PPC::Runtime::GCContext* context)
{
/*801EE448 001EB248*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*801EE44C 001EB24C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EE450 001EB250*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801EE454 001EB254*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801EE458 001EB258*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801EE45C 001EB25C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801EE460 001EB260*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r3));
/*801EE464 001EB264*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4c, context->r30));
/*801EE468 001EB268*/ PPC::Runtime::ASM::bl(fn_800D416C);
/*801EE46C 001EB26C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EE470 001EB270*/ PPC::Runtime::ASM::bl(fn_800CEC44);
/*801EE474 001EB274*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x15);
/*801EE478 001EB278*/ PPC::Runtime::ASM::bne(.L_801EE4A8);
/*801EE47C 001EB27C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r30));
/*801EE480 001EB280*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*801EE484 001EB284*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4c, context->r30));
/*801EE488 001EB288*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801EE48C 001EB28C*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x14);
/*801EE490 001EB290*/ PPC::Runtime::ASM::bl(fn_800D334C);
/*801EE494 001EB294*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1ED4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EE498 001EB298*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801EE49C 001EB29C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801EE4A0 001EB2A0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801EE4A4 001EB2A4*/ PPC::Runtime::ASM::bl(fn_801D3334);
RUNTIME_PPC_JUMP_LABEL(.L_801EE4A8, 0x801EE4A8) //this is a jump label
/*801EE4A8 001EB2A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801EE4AC 001EB2AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801EE4B0 001EB2B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801EE4B4 001EB2B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EE4B8 001EB2B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*801EE4BC 001EB2BC*/ PPC::Runtime::ASM::blr();
}