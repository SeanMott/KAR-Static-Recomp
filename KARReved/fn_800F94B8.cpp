//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F75B4.hpp"
#include "fn_800F7930.hpp"



void fn_800F94B8(PPC::Runtime::GCContext* context)
{
/*800F94B8 000F62B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F94BC 000F62BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F94C0 000F62C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F94C4 000F62C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F94C8 000F62C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F94CC 000F62CC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F94D0 000F62D0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800F94D4 000F62D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F94D8 000F62D8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F94DC 000F62DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/* 800F94E0 000F62E0  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800F94E4 000F62E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F94E8 000F62E8*/ PPC::Runtime::ASM::beq(.L_800F9500);
/*800F94EC 000F62EC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800F94F0 000F62F0*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800F94F4 000F62F4*/ PPC::Runtime::ASM::beq(.L_800F9500);
/*800F94F8 000F62F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F94FC 000F62FC*/ PPC::Runtime::ASM::bl(fn_800F75B4);
RUNTIME_PPC_JUMP_LABEL(.L_800F9500, 0x800F9500) //this is a jump label
/*800F9500 000F6300*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F9504 000F6304*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F9508 000F6308*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F950C 000F630C*/ PPC::Runtime::ASM::beq(.L_800F951C);
/*800F9510 000F6310*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F9514 000F6314*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F9518 000F6318*/ PPC::Runtime::ASM::bl(fn_800F7930);
RUNTIME_PPC_JUMP_LABEL(.L_800F951C, 0x800F951C) //this is a jump label
/*800F951C 000F631C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9520 000F6320*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9524 000F6324*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9528 000F6328*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F952C 000F632C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9530 000F6330*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F9534 000F6334*/ PPC::Runtime::ASM::blr();
}