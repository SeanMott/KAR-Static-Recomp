//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_OSGetCurrentContext.hpp"
#include "fn___OSGetEffectivePriority.hpp"
#include "fn_OSWakeupThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_OSUnlockMutex(PPC::Runtime::GCContext* context)
{
/*803D7F34 003D4D34*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D7F38 003D4D38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D7F3C 003D4D3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803D7F40 003D4D40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D7F44 003D4D44*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D7F48 003D4D48*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D7F4C 003D4D4C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803D7F50 003D4D50*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D7F54 003D4D54*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803D7F58 003D4D58*/ PPC::Runtime::ASM::bl(fn_OSGetCurrentContext);
/*803D7F5C 003D4D5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*803D7F60 003D4D60*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803D7F64 003D4D64*/ PPC::Runtime::ASM::cmplw(context->r0, context->r30);
/*803D7F68 003D4D68*/ PPC::Runtime::ASM::bne(.L_803D7FD8);
/*803D7F6C 003D4D6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/* 803D7F70 003D4D70  34 03 FF FF */ subic. context->r0 , context->r3 , 0x1
/*803D7F74 003D4D74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*803D7F78 003D4D78*/ PPC::Runtime::ASM::bne(.L_803D7FD8);
/*803D7F7C 003D4D7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*803D7F80 003D4D80*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*803D7F84 003D4D84*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803D7F88 003D4D88*/ PPC::Runtime::ASM::bne(.L_803D7F94);
/*803D7F8C 003D4D8C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8, context->r30));
/*803D7F90 003D4D90*/ PPC::Runtime::ASM::b(.L_803D7F98);
RUNTIME_PPC_JUMP_LABEL(.L_803D7F94, 0x803D7F94) //this is a jump label
/*803D7F94 003D4D94*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803D7F98, 0x803D7F98) //this is a jump label
/*803D7F98 003D4D98*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*803D7F9C 003D4D9C*/ PPC::Runtime::ASM::bne(.L_803D7FA8);
/*803D7FA0 003D4DA0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4, context->r30));
/*803D7FA4 003D4DA4*/ PPC::Runtime::ASM::b(.L_803D7FAC);
RUNTIME_PPC_JUMP_LABEL(.L_803D7FA8, 0x803D7FA8) //this is a jump label
/*803D7FA8 003D4DA8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D7FAC, 0x803D7FAC) //this is a jump label
/*803D7FAC 003D4DAC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803D7FB0 003D4DB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*803D7FB4 003D4DB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d0, context->r30));
/*803D7FB8 003D4DB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r30));
/*803D7FBC 003D4DBC*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*803D7FC0 003D4DC0*/ PPC::Runtime::ASM::bge(.L_803D7FD0);
/*803D7FC4 003D4DC4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803D7FC8 003D4DC8*/ PPC::Runtime::ASM::bl(fn___OSGetEffectivePriority);
/*803D7FCC 003D4DCC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_803D7FD0, 0x803D7FD0) //this is a jump label
/*803D7FD0 003D4DD0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D7FD4 003D4DD4*/ PPC::Runtime::ASM::bl(fn_OSWakeupThread);
RUNTIME_PPC_JUMP_LABEL(.L_803D7FD8, 0x803D7FD8) //this is a jump label
/*803D7FD8 003D4DD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803D7FDC 003D4DDC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D7FE0 003D4DE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D7FE4 003D4DE4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D7FE8 003D4DE8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D7FEC 003D4DEC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D7FF0 003D4DF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803D7FF4 003D4DF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D7FF8 003D4DF8*/ PPC::Runtime::ASM::blr();
}