//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D7E5C.hpp"



void fn_801E3AB4(PPC::Runtime::GCContext* context)
{
/*801E3AB4 001E08B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E3AB8 001E08B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E3ABC 001E08BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E3AC0 001E08C0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1bb0, context->r3));
/*801E3AC4 001E08C4*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801E3AC8 001E08C8*/ PPC::Runtime::ASM::beq(.L_801E3AEC);
/*801E3ACC 001E08CC*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*801E3AD0 001E08D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1bb0, context->r3));
/*801E3AD4 001E08D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x754, context->r3));
/*801E3AD8 001E08D8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801E3ADC 001E08DC*/ PPC::Runtime::ASM::bne(.L_801E3AEC);
/*801E3AE0 001E08E0*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E3AE4 001E08E4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r4));
/*801E3AE8 001E08E8*/ PPC::Runtime::ASM::bl(fn_801D7E5C);
RUNTIME_PPC_JUMP_LABEL(.L_801E3AEC, 0x801E3AEC) //this is a jump label
/*801E3AEC 001E08EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E3AF0 001E08F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E3AF4 001E08F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E3AF8 001E08F8*/ PPC::Runtime::ASM::blr();
}