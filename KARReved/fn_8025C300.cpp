//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025C300(PPC::Runtime::GCContext* context)
{
/*8025C300 00259100*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025C304 00259104*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025C308 00259108*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C30C 0025910C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C310 00259110*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C314 00259114*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025C318 00259118*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025C31C 0025911C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C320 00259120*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025C324 00259124*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C328 00259128*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C32C 0025912C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025C330 00259130*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C334 00259134*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C338 00259138*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025C33C 0025913C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C340 00259140*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025C344 00259144*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C348 00259148*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C34C 0025914C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025C350 00259150*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C354 00259154*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025C358 00259158*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025C35C 0025915C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C360 00259160*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025C364 00259164*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C368 00259168*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EB0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C36C 0025916C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025C370 00259170*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025C374 00259174*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025C378 00259178*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025C37C 0025917C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C380 00259180*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C384 00259184*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C388 00259188*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025C38C 0025918C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025C390 00259190*/ PPC::Runtime::ASM::blr();
}