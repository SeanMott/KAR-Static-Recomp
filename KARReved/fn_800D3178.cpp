//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D3178(PPC::Runtime::GCContext* context)
{
/*800D3178 000CFF78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800D317C 000CFF7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D3180 000CFF80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D3184 000CFF84*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D3188 000CFF88*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D318C 000CFF8C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D3190 000CFF90*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800D3194 000CFF94*/ PPC::Runtime::ASM::lwz(context->r27, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3198 000CFF98*/ PPC::Runtime::ASM::lis(context->r6, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D319C 000CFF9C*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800D31A0 000CFFA0*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800D31A4 000CFFA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r27));
/*800D31A8 000CFFA8*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800D31AC 000CFFAC*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800D31B0 000CFFB0*/ PPC::Runtime::ASM::addi(context->r31, context->r6, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D31B4 000CFFB4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D31B8 000CFFB8*/ PPC::Runtime::ASM::bne(.L_800D31CC);
/*800D31BC 000CFFBC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D31C0 000CFFC0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x66c);
/*800D31C4 000CFFC4*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D31C8 000CFFC8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D31CC, 0x800D31CC) //this is a jump label
/*800D31CC 000CFFCC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D31D0 000CFFD0*/ PPC::Runtime::ASM::xor(context->r0, context->r28, context->r0);
/*800D31D4 000CFFD4*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D31D8 000CFFD8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r28);
/*800D31DC 000CFFDC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D31E0 000CFFE0  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D31E4 000CFFE4*/ PPC::Runtime::ASM::beq(.L_800D3214);
/*800D31E8 000CFFE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r27));
/*800D31EC 000CFFEC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D31F0 000CFFF0*/ PPC::Runtime::ASM::beq(.L_800D31FC);
/*800D31F4 000CFFF4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D31F8 000CFFF8*/ PPC::Runtime::ASM::b(.L_800D3200);
RUNTIME_PPC_JUMP_LABEL(.L_800D31FC, 0x800D31FC) //this is a jump label
/*800D31FC 000CFFFC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3200, 0x800D3200) //this is a jump label
/*800D3200 000D0000*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r28);
/*800D3204 000D0004*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3208 000D0008*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D320C 000D000C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D3210 000D0010*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D3214, 0x800D3214) //this is a jump label
/*800D3214 000D0014*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3218 000D0018*/ PPC::Runtime::ASM::bne(.L_800D323C);
/*800D321C 000D001C*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800D3220 000D0020*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x67c);
/*800D3224 000D0024*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D3228 000D0028*/ PPC::Runtime::ASM::bl(OSReport);
/*800D322C 000D002C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D3230 000D0030*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x68c);
/*800D3234 000D0034*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D3238 000D0038*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D323C, 0x800D323C) //this is a jump label
/*800D323C 000D003C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r27));
/*800D3240 000D0040*/ PPC::Runtime::ASM::slwi(context->r3, context->r28, 2);
/*800D3244 000D0044*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3248 000D0048*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D324C 000D004C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D3250 000D0050*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f31);
/*800D3254 000D0054*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r3);
/*800D3258 000D0058*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D325C 000D005C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D3260 000D0060*/ PPC::Runtime::ASM::bne(.L_800D3278);
/*800D3264 000D0064*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3268 000D0068*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D326C 000D006C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D3270 000D0070*/ PPC::Runtime::ASM::bne(.L_800D3278);
/*800D3274 000D0074*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D3278, 0x800D3278) //this is a jump label
/*800D3278 000D0078*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D327C 000D007C*/ PPC::Runtime::ASM::bne(.L_800D32A0);
/*800D3280 000D0080*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800D3284 000D0084*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x6d0);
/* 800D3288 000D0088  4C C6 32 42 */ crset context->cr1eq
/*800D328C 000D008C*/ PPC::Runtime::ASM::bl(OSReport);
/*800D3290 000D0090*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x6dc);
/*800D3294 000D0094*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D3298 000D0098*/ PPC::Runtime::ASM::li(context->r4, 0xb12);
/*800D329C 000D009C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D32A0, 0x800D32A0) //this is a jump label
/*800D32A0 000D00A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800D32A4 000D00A4*/ PPC::Runtime::ASM::lfd(context->f0, STRUCT_DOUBLE_COUNT_1805DF5F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D32A8 000D00A8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D32AC 000D00AC*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*800D32B0 000D00B0*/ PPC::Runtime::ASM::beq(.L_800D32D0);
/*800D32B4 000D00B4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x6fc);
/* 800D32B8 000D00B8  4C C6 32 42 */ crset context->cr1eq
/*800D32BC 000D00BC*/ PPC::Runtime::ASM::bl(OSReport);
/*800D32C0 000D00C0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x71c);
/*800D32C4 000D00C4*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D32C8 000D00C8*/ PPC::Runtime::ASM::li(context->r4, 0xb13);
/*800D32CC 000D00CC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D32D0, 0x800D32D0) //this is a jump label
/*800D32D0 000D00D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r27));
/*800D32D4 000D00D4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800D32D8 000D00D8*/ PPC::Runtime::ASM::li(context->r4, 0xc);
/*800D32DC 000D00DC*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800D32E0 000D00E0*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800D32E4 000D00E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800D32E8 000D00E8*/ PPC::Runtime::ASM::ble(.L_800D3308);
RUNTIME_PPC_JUMP_LABEL(.L_800D32EC, 0x800D32EC) //this is a jump label
/*800D32EC 000D00EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800D32F0 000D00F0*/ PPC::Runtime::ASM::lfsx(context->f0, context->r3, context->r4);
/*800D32F4 000D00F4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D32F8 000D00F8*/ PPC::Runtime::ASM::blt(.L_800D3308);
/*800D32FC 000D00FC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0xc);
/*800D3300 000D0100*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*800D3304 000D0104*/ PPC::Runtime::ASM::bdnz(.L_800D32EC);
RUNTIME_PPC_JUMP_LABEL(.L_800D3308, 0x800D3308) //this is a jump label
/*800D3308 000D0108*/ PPC::Runtime::ASM::mulli(context->r4, context->r5, 0xc);
/*800D330C 000D010C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800D3310 000D0110*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*800D3314 000D0114*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x4, context->r3));
/*800D3318 000D0118*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800D331C 000D011C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800D3320 000D0120*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*800D3324 000D0124*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r3));
/*800D3328 000D0128*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800D332C 000D012C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D3330 000D0130*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D3334 000D0134*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D3338 000D0138*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800D333C 000D013C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D3340 000D0140*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D3344 000D0144*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800D3348 000D0148*/ PPC::Runtime::ASM::blr();
}