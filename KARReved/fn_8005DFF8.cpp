//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D864.hpp"



void fn_8005DFF8(PPC::Runtime::GCContext* context)
{
/*8005DFF8 0005ADF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005DFFC 0005ADFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005E000 0005AE00*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8005E004 0005AE04*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*8005E008 0005AE08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005E00C 0005AE0C*/ PPC::Runtime::ASM::bl(fn_8005D864);
/*8005E010 0005AE10*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005E014 0005AE14*/ PPC::Runtime::ASM::beq(.L_8005E07C);
/*8005E018 0005AE18*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xb8);
/*8005E01C 0005AE1C*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005E020 0005AE20*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8005E024 0005AE24*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005E028 0005AE28*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r6);
/*8005E02C 0005AE2C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8005E030 0005AE30*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x33c);
/*8005E034 0005AE34*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E038 0005AE38*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*8005E03C 0005AE3C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E040 0005AE40*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E044 0005AE44*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 3, 28, 28);
/*8005E048 0005AE48*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E04C 0005AE4C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E050 0005AE50*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 2, 29, 29);
/*8005E054 0005AE54*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E058 0005AE58*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E05C 0005AE5C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 1, 30, 30);
/*8005E060 0005AE60*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E064 0005AE64*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E068 0005AE68*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 4, 27, 27);
/*8005E06C 0005AE6C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005E070 0005AE70*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
/*8005E074 0005AE74*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*8005E078 0005AE78*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8005E07C, 0x8005E07C) //this is a jump label
/*8005E07C 0005AE7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005E080 0005AE80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005E084 0005AE84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005E088 0005AE88*/ PPC::Runtime::ASM::blr();
}