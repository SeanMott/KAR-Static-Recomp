//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80185290(PPC::Runtime::GCContext* context)
{
/*80185290 00182090*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80185294 00182094*/ PPC::Runtime::ASM::mflr(context->r0);
/*80185298 00182098*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018529C 0018209C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801852A0 001820A0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801852A4 001820A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1190, context->r3));
/*801852A8 001820A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801852AC 001820AC*/ PPC::Runtime::ASM::beq(.L_801852C8);
/*801852B0 001820B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*801852B4 001820B4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0EC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801852B8 001820B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801852BC 001820BC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*801852C0 001820C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801852C4 001820C4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
RUNTIME_PPC_JUMP_LABEL(.L_801852C8, 0x801852C8) //this is a jump label
/*801852C8 001820C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801852CC 001820CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801852D0 001820D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801852D4 001820D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801852D8 001820D8*/ PPC::Runtime::ASM::blr();
}