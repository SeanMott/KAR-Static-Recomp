//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000AF38.hpp"
#include "fn_8000AE50.hpp"
#include "fn_80007EE4.hpp"
#include "fn_8000AE50.hpp"
#include "fn_80007F6C.hpp"
#include "fn_8000AE50.hpp"
#include "fn_800080C0.hpp"
#include "fn_8000AF38.hpp"
#include "fn_8000AE50.hpp"
#include "fn_80008038.hpp"
#include "fn_8000AE50.hpp"
#include "fn_800080C0.hpp"
#include "fn_801382D4.hpp"
#include "fn_8013846C.hpp"
#include "fn_80138324.hpp"
#include "fn_8000AE50.hpp"
#include "fn_80138404.hpp"
#include "fn_8006176C.hpp"



void fn_800461E4(PPC::Runtime::GCContext* context)
{
/*800461E4 00042FE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800461E8 00042FE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800461EC 00042FEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800461F0 00042FF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800461F4 00042FF4*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800461F8 00042FF8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800461FC 00042FFC*/ PPC::Runtime::ASM::bl(fn_8000AF38);
/*80046200 00043000*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80046204 00043004*/ PPC::Runtime::ASM::bne(.L_80046234);
/*80046208 00043008*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*8004620C 0004300C*/ PPC::Runtime::ASM::bl(fn_80007EE4);
/*80046210 00043010*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80046214 00043014*/ PPC::Runtime::ASM::bne(.L_80046260);
/*80046218 00043018*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*8004621C 0004301C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80046220 00043020*/ PPC::Runtime::ASM::bl(fn_80007F6C);
/*80046224 00043024*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*80046228 00043028*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8004622C 0004302C*/ PPC::Runtime::ASM::bl(fn_800080C0);
/*80046230 00043030*/ PPC::Runtime::ASM::b(.L_80046260);
RUNTIME_PPC_JUMP_LABEL(.L_80046234, 0x80046234) //this is a jump label
/*80046234 00043034*/ PPC::Runtime::ASM::bl(fn_8000AF38);
/*80046238 00043038*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8004623C 0004303C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80046240 00043040*/ PPC::Runtime::ASM::bne(.L_80046260);
/*80046244 00043044*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*80046248 00043048*/ PPC::Runtime::ASM::bl(fn_80008038);
/*8004624C 0004304C*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80046250 00043050*/ PPC::Runtime::ASM::beq(.L_80046260);
/*80046254 00043054*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*80046258 00043058*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8004625C 0004305C*/ PPC::Runtime::ASM::bl(fn_800080C0);
RUNTIME_PPC_JUMP_LABEL(.L_80046260, 0x80046260) //this is a jump label
/*80046260 00043060*/ PPC::Runtime::ASM::bl(fn_801382D4);
/*80046264 00043064*/ PPC::Runtime::ASM::bl(fn_8013846C);
/*80046268 00043068*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8004626C 0004306C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80046270 00043070*/ PPC::Runtime::ASM::bl(fn_80138324);
/*80046274 00043074*/ PPC::Runtime::ASM::bl(fn_8000AE50);
/*80046278 00043078*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8004627C 0004307C*/ PPC::Runtime::ASM::bl(fn_80138404);
/*80046280 00043080*/ PPC::Runtime::ASM::lis(context->r3, 0x13);
/*80046284 00043084*/ PPC::Runtime::ASM::bl(fn_8006176C);
/*80046288 00043088*/ PPC::Runtime::ASM::li(context->r0, 0x1e);
/*8004628C 0004308C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r31));
/*80046290 00043090*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80046294 00043094*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80046298 00043098*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004629C 0004309C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800462A0 000430A0*/ PPC::Runtime::ASM::blr();
}