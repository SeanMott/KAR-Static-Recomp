//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D1D3C.hpp"
#include "fn_8010F400.hpp"



void fn_800F7D64(PPC::Runtime::GCContext* context)
{
/*800F7D64 000F4B64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F7D68 000F4B68*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7D6C 000F4B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F7D70 000F4B70*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F7D74 000F4B74*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800F7D78 000F4B78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7D7C 000F4B7C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F7D80 000F4B80*/ PPC::Runtime::ASM::bl(fn_800D1D3C);
/*800F7D84 000F4B84*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x9);
/*800F7D88 000F4B88*/ PPC::Runtime::ASM::bne(.L_800F7D98);
/*800F7D8C 000F4B8C*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800F7D90 000F4B90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F7D94 000F4B94*/ PPC::Runtime::ASM::bl(fn_8010F400);
RUNTIME_PPC_JUMP_LABEL(.L_800F7D98, 0x800F7D98) //this is a jump label
/*800F7D98 000F4B98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F7D9C 000F4B9C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F7DA0 000F4BA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7DA4 000F4BA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7DA8 000F4BA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F7DAC 000F4BAC*/ PPC::Runtime::ASM::blr();
}