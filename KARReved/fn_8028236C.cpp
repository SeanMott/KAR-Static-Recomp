//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028236C(PPC::Runtime::GCContext* context)
{
/*8028236C 0027F16C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80282370 0027F170*/ PPC::Runtime::ASM::mflr(context->r0);
/*80282374 0027F174*/ PPC::Runtime::ASM::lis(context->r3, lbl_8055F480 @ Get_MemoryOffset_HighBit);
/*80282378 0027F178*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028237C 0027F17C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80282380 0027F180*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_8055F480 @ Get_MemoryOffset_LowBit);
/*80282384 0027F184*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c8, context->r31));
/*80282388 0027F188*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028238C 0027F18C*/ PPC::Runtime::ASM::beq(.L_80282398);
/*80282390 0027F190*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80282394 0027F194*/ PPC::Runtime::ASM::b(.L_8028239C);
RUNTIME_PPC_JUMP_LABEL(.L_80282398, 0x80282398) //this is a jump label
/*80282398 0027F198*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8028239C, 0x8028239C) //this is a jump label
/*8028239C 0027F19C*/ PPC::Runtime::ASM::lis(context->r4, 0x400);
/*802823A0 0027F1A0*/ PPC::Runtime::ASM::bl(fn_HSD_MObjSetFlags);
/*802823A4 0027F1A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r31));
/*802823A8 0027F1A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*802823AC 0027F1AC*/ PPC::Runtime::ASM::beq(.L_802823B8);
/*802823B0 0027F1B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*802823B4 0027F1B4*/ PPC::Runtime::ASM::b(.L_802823BC);
RUNTIME_PPC_JUMP_LABEL(.L_802823B8, 0x802823B8) //this is a jump label
/*802823B8 0027F1B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_802823BC, 0x802823BC) //this is a jump label
/*802823BC 0027F1BC*/ PPC::Runtime::ASM::lis(context->r4, 0x400);
/*802823C0 0027F1C0*/ PPC::Runtime::ASM::bl(fn_HSD_MObjSetFlags);
/*802823C4 0027F1C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802823C8 0027F1C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802823CC 0027F1CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802823D0 0027F1D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802823D4 0027F1D4*/ PPC::Runtime::ASM::blr();
}