//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80261228(PPC::Runtime::GCContext* context)
{
/*80261228 0025E028*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8026122C 0025E02C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80261230 0025E030*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80261234 0025E034*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80261238 0025E038*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8026123C 0025E03C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80261240 0025E040*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80261244 0025E044*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80261248 0025E048*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8026124C 0025E04C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80261250 0025E050*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80261254 0025E054*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80261258 0025E058*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8026125C 0025E05C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80261260 0025E060*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80261264 0025E064*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80261268 0025E068*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8026126C 0025E06C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80261270 0025E070*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80261274 0025E074*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80261278 0025E078*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8026127C 0025E07C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80261280 0025E080*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80261284 0025E084*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F9C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80261288 0025E088*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8026128C 0025E08C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80261290 0025E090*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F98 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80261294 0025E094*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80261298 0025E098*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8026129C 0025E09C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*802612A0 0025E0A0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802612A4 0025E0A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802612A8 0025E0A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802612AC 0025E0AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802612B0 0025E0B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802612B4 0025E0B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802612B8 0025E0B8*/ PPC::Runtime::ASM::blr();
}