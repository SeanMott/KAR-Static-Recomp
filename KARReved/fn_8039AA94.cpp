//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8039AA94(PPC::Runtime::GCContext* context)
{
/*8039AA94 00397894*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039AA98 00397898*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039AA9C 0039789C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039AAA0 003978A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039AAA4 003978A4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039AAA8 003978A8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8039AAAC 003978AC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r12));
/*8039AAB0 003978B0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039AAB4 003978B4*/ PPC::Runtime::ASM::bctrl();
/*8039AAB8 003978B8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8039AABC 003978BC*/ PPC::Runtime::ASM::beq(.L_8039AAC8);
/*8039AAC0 003978C0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5018 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8039AAC4 003978C4*/ PPC::Runtime::ASM::b(.L_8039AAEC);
RUNTIME_PPC_JUMP_LABEL(.L_8039AAC8, 0x8039AAC8) //this is a jump label
/*8039AAC8 003978C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039AACC 003978CC*/ PPC::Runtime::ASM::lis(context->r3, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_HighBit);
/*8039AAD0 003978D0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_LowBit);
/*8039AAD4 003978D4*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x2);
/*8039AAD8 003978D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039AADC 003978DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039AAE0 003978E0*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x4);
/*8039AAE4 003978E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039AAE8 003978E8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8039AAEC, 0x8039AAEC) //this is a jump label
/*8039AAEC 003978EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039AAF0 003978F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039AAF4 003978F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039AAF8 003978F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039AAFC 003978FC*/ PPC::Runtime::ASM::blr();
}