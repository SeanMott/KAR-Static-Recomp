//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void __restore_fpr(PPC::Runtime::GCContext* context)
{
# .text: //this is a jump label 0xB4 | 0x803ADAD4 | size : 0x0
.sym _restfpr_14 , global
/*803ADAD4 003AA8D4*/ PPC::Runtime::ASM::lfd(context->f14, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x90, context->r11));
# .text: //this is a jump label 0xB8 | 0x803ADAD8 | size : 0x0
.sym _restfpr_15 , global
/*803ADAD8 003AA8D8*/ PPC::Runtime::ASM::lfd(context->f15, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x88, context->r11));
# .text: //this is a jump label 0xBC | 0x803ADADC | size : 0x0
.sym _restfpr_16 , global
/*803ADADC 003AA8DC*/ PPC::Runtime::ASM::lfd(context->f16, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x80, context->r11));
# .text: //this is a jump label 0xC0 | 0x803ADAE0 | size : 0x0
.sym _restfpr_17 , global
/*803ADAE0 003AA8E0*/ PPC::Runtime::ASM::lfd(context->f17, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x78, context->r11));
# .text: //this is a jump label 0xC4 | 0x803ADAE4 | size : 0x0
.sym _restfpr_18 , global
/*803ADAE4 003AA8E4*/ PPC::Runtime::ASM::lfd(context->f18, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r11));
# .text: //this is a jump label 0xC8 | 0x803ADAE8 | size : 0x0
.sym _restfpr_19 , global
/*803ADAE8 003AA8E8*/ PPC::Runtime::ASM::lfd(context->f19, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x68, context->r11));
# .text: //this is a jump label 0xCC | 0x803ADAEC | size : 0x0
.sym _restfpr_20 , global
/*803ADAEC 003AA8EC*/ PPC::Runtime::ASM::lfd(context->f20, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r11));
# .text: //this is a jump label 0xD0 | 0x803ADAF0 | size : 0x0
.sym _restfpr_21 , global
/*803ADAF0 003AA8F0*/ PPC::Runtime::ASM::lfd(context->f21, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x58, context->r11));
# .text: //this is a jump label 0xD4 | 0x803ADAF4 | size : 0x0
.sym _restfpr_22 , global
/*803ADAF4 003AA8F4*/ PPC::Runtime::ASM::lfd(context->f22, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r11));
# .text: //this is a jump label 0xD8 | 0x803ADAF8 | size : 0x0
.sym _restfpr_23 , global
/*803ADAF8 003AA8F8*/ PPC::Runtime::ASM::lfd(context->f23, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x48, context->r11));
# .text: //this is a jump label 0xDC | 0x803ADAFC | size : 0x0
.sym _restfpr_24 , global
/*803ADAFC 003AA8FC*/ PPC::Runtime::ASM::lfd(context->f24, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r11));
# .text: //this is a jump label 0xE0 | 0x803ADB00 | size : 0x0
.sym _restfpr_25 , global
/*803ADB00 003AA900*/ PPC::Runtime::ASM::lfd(context->f25, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x38, context->r11));
# .text: //this is a jump label 0xE4 | 0x803ADB04 | size : 0x0
.sym _restfpr_26 , global
/*803ADB04 003AA904*/ PPC::Runtime::ASM::lfd(context->f26, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r11));
# .text: //this is a jump label 0xE8 | 0x803ADB08 | size : 0x0
.sym _restfpr_27 , global
/*803ADB08 003AA908*/ PPC::Runtime::ASM::lfd(context->f27, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r11));
# .text: //this is a jump label 0xEC | 0x803ADB0C | size : 0x0
.sym _restfpr_28 , global
/*803ADB0C 003AA90C*/ PPC::Runtime::ASM::lfd(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r11));
# .text: //this is a jump label 0xF0 | 0x803ADB10 | size : 0x0
.sym _restfpr_29 , global
/*803ADB10 003AA910*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r11));
# .text: //this is a jump label 0xF4 | 0x803ADB14 | size : 0x0
.sym _restfpr_30 , global
/*803ADB14 003AA914*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r11));
# .text: //this is a jump label 0xF8 | 0x803ADB18 | size : 0x0
.sym _restfpr_31 , global
/*803ADB18 003AA918*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r11));
/*803ADB1C 003AA91C*/ PPC::Runtime::ASM::blr();
}