//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022CB74.hpp"
#include "fn_8022C568.hpp"



void fn_801FFCE4(PPC::Runtime::GCContext* context)
{
/*801FFCE4 001FCAE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801FFCE8 001FCAE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FFCEC 001FCAEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801FFCF0 001FCAF0*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801FFCF4 001FCAF4*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801FFCF8 001FCAF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801FFCFC 001FCAFC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801FFD00 001FCB00*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801FFD04 001FCB04*/ PPC::Runtime::ASM::li(context->r30, -0x1);
/*801FFD08 001FCB08*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801FFD0C 001FCB0C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_801FFD10, 0x801FFD10) //this is a jump label
/*801FFD10 001FCB10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FFD14 001FCB14*/ PPC::Runtime::ASM::bl(fn_8022CB74);
/*801FFD18 001FCB18*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801FFD1C 001FCB1C*/ PPC::Runtime::ASM::beq(.L_801FFD48);
/*801FFD20 001FCB20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FFD24 001FCB24*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801FFD28 001FCB28*/ PPC::Runtime::ASM::bl(fn_8022C568);
/*801FFD2C 001FCB2C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801FFD30 001FCB30*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x2f8);
/*801FFD34 001FCB34*/ PPC::Runtime::ASM::bl(fn_803D22F4);
/*801FFD38 001FCB38*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f31);
/*801FFD3C 001FCB3C*/ PPC::Runtime::ASM::bge(.L_801FFD48);
/*801FFD40 001FCB40*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801FFD44 001FCB44*/ PPC::Runtime::ASM::mr(context->r30, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_801FFD48, 0x801FFD48) //this is a jump label
/*801FFD48 001FCB48*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*801FFD4C 001FCB4C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4);
/*801FFD50 001FCB50*/ PPC::Runtime::ASM::blt(.L_801FFD10);
/*801FFD54 001FCB54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801FFD58 001FCB58*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FFD5C 001FCB5C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801FFD60 001FCB60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801FFD64 001FCB64*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801FFD68 001FCB68*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801FFD6C 001FCB6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FFD70 001FCB70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801FFD74 001FCB74*/ PPC::Runtime::ASM::blr();
}