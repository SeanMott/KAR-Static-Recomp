//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8016F97C.hpp"



void fn_8016FCFC(PPC::Runtime::GCContext* context)
{
/*8016FCFC 0016CAFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016FD00 0016CB00*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016FD04 0016CB04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016FD08 0016CB08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016FD0C 0016CB0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016FD10 0016CB10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8016FD14 0016CB14*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8016FD18 0016CB18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016FD1C 0016CB1C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8016FD20 0016CB20*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8016FD24 0016CB24*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8016FD28 0016CB28*/ PPC::Runtime::ASM::bl(fn_8016F97C);
/*8016FD2C 0016CB2C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016FD30 0016CB30*/ PPC::Runtime::ASM::bne(.L_8016FD44);
/*8016FD34 0016CB34*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6C28 @ Get_MemoryOffset_SDA21);
/*8016FD38 0016CB38*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8016FD3C 0016CB3C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6C30 @ Get_MemoryOffset_SDA21);
/*8016FD40 0016CB40*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016FD44, 0x8016FD44) //this is a jump label
/*8016FD44 0016CB44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8016FD48 0016CB48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8016FD4C 0016CB4C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8016FD50 0016CB50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8016FD54 0016CB54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8016FD58 0016CB58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8016FD5C 0016CB5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016FD60 0016CB60*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8016FD64 0016CB64*/ PPC::Runtime::ASM::bne(.L_8016FDB0);
/*8016FD68 0016CB68*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016FD6C 0016CB6C*/ PPC::Runtime::ASM::beq(.L_8016FDB0);
/*8016FD70 0016CB70*/ PPC::Runtime::ASM::bne(.L_8016FD84);
/*8016FD74 0016CB74*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6C28 @ Get_MemoryOffset_SDA21);
/*8016FD78 0016CB78*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8016FD7C 0016CB7C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6C30 @ Get_MemoryOffset_SDA21);
/*8016FD80 0016CB80*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016FD84, 0x8016FD84) //this is a jump label
/*8016FD84 0016CB84*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016FD88 0016CB88*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8016FD8C 0016CB8C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8016FD90 0016CB90*/ PPC::Runtime::ASM::bne(.L_8016FDA0);
/*8016FD94 0016CB94*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8016FD98 0016CB98*/ PPC::Runtime::ASM::beq(.L_8016FDA0);
/*8016FD9C 0016CB9C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8016FDA0, 0x8016FDA0) //this is a jump label
/*8016FDA0 0016CBA0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8016FDA4 0016CBA4*/ PPC::Runtime::ASM::bne(.L_8016FDB0);
/*8016FDA8 0016CBA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016FDAC 0016CBAC*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8016FDB0, 0x8016FDB0) //this is a jump label
/*8016FDB0 0016CBB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016FDB4 0016CBB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016FDB8 0016CBB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016FDBC 0016CBBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016FDC0 0016CBC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016FDC4 0016CBC4*/ PPC::Runtime::ASM::blr();
}