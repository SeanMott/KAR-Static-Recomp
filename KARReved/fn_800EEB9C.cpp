//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DB1A8.hpp"
#include "fn_800DB234.hpp"
#include "fn_80109624.hpp"
#include "fn_801097F8.hpp"
#include "fn_800DB1A8.hpp"
#include "fn_800DB234.hpp"
#include "fn_80109624.hpp"
#include "fn_801097F8.hpp"



void fn_800EEB9C(PPC::Runtime::GCContext* context)
{
/*800EEB9C 000EB99C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x1c0, context->r1));
/*800EEBA0 000EB9A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EEBA4 000EB9A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c4, context->r1));
/*800EEBA8 000EB9A8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x1c0);
/*800EEBAC 000EB9AC*/ PPC::Runtime::ASM::bl(_savegpr_23);
/*800EEBB0 000EB9B0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800EEBB4 000EB9B4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_972 @ Get_MemoryOffset_HighBit);
/*800EEBB8 000EB9B8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800EEBBC 000EB9BC*/ PPC::Runtime::ASM::addi(context->r29, context->r3, MemoryOffset_972 @ Get_MemoryOffset_LowBit);
/*800EEBC0 000EB9C0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800EEBC4 000EB9C4*/ PPC::Runtime::ASM::lwz(context->r23, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r4));
/*800EEBC8 000EB9C8*/ PPC::Runtime::ASM::cmplwi(context->r23, 0x0);
/*800EEBCC 000EB9CC*/ PPC::Runtime::ASM::beq(.L_800EEBE0);
/*800EEBD0 000EB9D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r23));
/*800EEBD4 000EB9D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800EEBD8 000EB9D8*/ PPC::Runtime::ASM::bne(.L_800EEBE0);
/*800EEBDC 000EB9DC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800EEBE0, 0x800EEBE0) //this is a jump label
/*800EEBE0 000EB9E0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800EEBE4 000EB9E4*/ PPC::Runtime::ASM::bne(.L_800EEBF8);
/*800EEBE8 000EB9E8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EEBEC 000EB9EC*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x6c);
/*800EEBF0 000EB9F0*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*800EEBF4 000EB9F4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EEBF8, 0x800EEBF8) //this is a jump label
/*800EEBF8 000EB9F8*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800EEBFC 000EB9FC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xd0);
/*800EEC00 000EBA00*/ PPC::Runtime::ASM::stw(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EEC04 000EBA04*/ PPC::Runtime::ASM::li(context->r4, 0x32);
/*800EEC08 000EBA08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r23));
/*800EEC0C 000EBA0C*/ PPC::Runtime::ASM::bl(fn_800DB1A8);
/*800EEC10 000EBA10*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800EEC14 000EBA14*/ PPC::Runtime::ASM::mr(context->r24, context->r26);
/*800EEC18 000EBA18*/ PPC::Runtime::ASM::b(.L_800EED04);
RUNTIME_PPC_JUMP_LABEL(.L_800EEC1C, 0x800EEC1C) //this is a jump label
/*800EEC1C 000EBA1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800EEC20 000EBA20*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800EEC24 000EBA24*/ PPC::Runtime::ASM::add(context->r28, context->r0, context->r24);
/*800EEC28 000EBA28*/ PPC::Runtime::ASM::b(.L_800EECF0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEC2C, 0x800EEC2C) //this is a jump label
/*800EEC2C 000EBA2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800EEC30 000EBA30*/ PPC::Runtime::ASM::subf(context->r3, context->r25, context->r0);
/*800EEC34 000EBA34*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800EEC38 000EBA38*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800EEC3C 000EBA3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xd0);
/*800EEC40 000EBA40*/ PPC::Runtime::ASM::li(context->r5, 0x32);
/*800EEC44 000EBA44*/ PPC::Runtime::ASM::bl(fn_800DB234);
/*800EEC48 000EBA48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800EEC4C 000EBA4C*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*800EEC50 000EBA50*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EEC54 000EBA54*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3f);
/*800EEC58 000EBA58*/ PPC::Runtime::ASM::lwzx(context->r5, context->r4, context->r3);
/*800EEC5C 000EBA5C*/ PPC::Runtime::ASM::beq(.L_800EEC88);
/*800EEC60 000EBA60*/ PPC::Runtime::ASM::bge(.L_800EECA0);
/*800EEC64 000EBA64*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3e);
/*800EEC68 000EBA68*/ PPC::Runtime::ASM::bge(.L_800EEC70);
/*800EEC6C 000EBA6C*/ PPC::Runtime::ASM::b(.L_800EECA0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEC70, 0x800EEC70) //this is a jump label
/*800EEC70 000EBA70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EEC74 000EBA74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800EEC78 000EBA78*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800EEC7C 000EBA7C*/ PPC::Runtime::ASM::bl(fn_80109624);
/*800EEC80 000EBA80*/ PPC::Runtime::ASM::mr(context->r23, context->r3);
/*800EEC84 000EBA84*/ PPC::Runtime::ASM::b(.L_800EECB4);
RUNTIME_PPC_JUMP_LABEL(.L_800EEC88, 0x800EEC88) //this is a jump label
/*800EEC88 000EBA88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EEC8C 000EBA8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800EEC90 000EBA90*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800EEC94 000EBA94*/ PPC::Runtime::ASM::bl(fn_801097F8);
/*800EEC98 000EBA98*/ PPC::Runtime::ASM::mr(context->r23, context->r3);
/*800EEC9C 000EBA9C*/ PPC::Runtime::ASM::b(.L_800EECB4);
RUNTIME_PPC_JUMP_LABEL(.L_800EECA0, 0x800EECA0) //this is a jump label
/*800EECA0 000EBAA0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EECA4 000EBAA4*/ PPC::Runtime::ASM::li(context->r4, 0x20);
/*800EECA8 000EBAA8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6190 @ Get_MemoryOffset_SDA21);
/*800EECAC 000EBAAC*/ PPC::Runtime::ASM::bl(fn___assert);
/*800EECB0 000EBAB0*/ PPC::Runtime::ASM::li(context->r23, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800EECB4, 0x800EECB4) //this is a jump label
/*800EECB4 000EBAB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EECB8 000EBAB8*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
/*800EECBC 000EBABC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x34);
/*800EECC0 000EBAC0*/ PPC::Runtime::ASM::blt(.L_800EECD4);
/*800EECC4 000EBAC4*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EECC8 000EBAC8*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x10);
/*800EECCC 000EBACC*/ PPC::Runtime::ASM::li(context->r4, 0x3b);
/*800EECD0 000EBAD0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EECD4, 0x800EECD4) //this is a jump label
/*800EECD4 000EBAD4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EECD8 000EBAD8*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*800EECDC 000EBADC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800EECE0 000EBAE0*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*800EECE4 000EBAE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EECE8 000EBAE8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x750);
/*800EECEC 000EBAEC*/ PPC::Runtime::ASM::stwx(context->r23, context->r30, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_800EECF0, 0x800EECF0) //this is a jump label
/*800EECF0 000EBAF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r28));
/*800EECF4 000EBAF4*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800EECF8 000EBAF8*/ PPC::Runtime::ASM::blt(.L_800EEC2C);
/*800EECFC 000EBAFC*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x10);
/*800EED00 000EBB00*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800EED04, 0x800EED04) //this is a jump label
/*800EED04 000EBB04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800EED08 000EBB08*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800EED0C 000EBB0C*/ PPC::Runtime::ASM::blt(.L_800EEC1C);
/*800EED10 000EBB10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800EED14 000EBB14*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*800EED18 000EBB18*/ PPC::Runtime::ASM::beq(.L_800EED2C);
/*800EED1C 000EBB1C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EED20 000EBB20*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x48);
/*800EED24 000EBB24*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*800EED28 000EBB28*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EED2C, 0x800EED2C) //this is a jump label
/*800EED2C 000EBB2C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800EED30 000EBB30*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800EED34 000EBB34*/ PPC::Runtime::ASM::li(context->r4, 0x32);
/*800EED38 000EBB38*/ PPC::Runtime::ASM::bl(fn_800DB1A8);
/*800EED3C 000EBB3C*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800EED40 000EBB40*/ PPC::Runtime::ASM::mr(context->r24, context->r27);
/*800EED44 000EBB44*/ PPC::Runtime::ASM::b(.L_800EEE30);
RUNTIME_PPC_JUMP_LABEL(.L_800EED48, 0x800EED48) //this is a jump label
/*800EED48 000EBB48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*800EED4C 000EBB4C*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800EED50 000EBB50*/ PPC::Runtime::ASM::add(context->r25, context->r0, context->r24);
/*800EED54 000EBB54*/ PPC::Runtime::ASM::b(.L_800EEE1C);
RUNTIME_PPC_JUMP_LABEL(.L_800EED58, 0x800EED58) //this is a jump label
/*800EED58 000EBB58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800EED5C 000EBB5C*/ PPC::Runtime::ASM::subf(context->r3, context->r28, context->r0);
/*800EED60 000EBB60*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800EED64 000EBB64*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800EED68 000EBB68*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800EED6C 000EBB6C*/ PPC::Runtime::ASM::li(context->r5, 0x32);
/*800EED70 000EBB70*/ PPC::Runtime::ASM::bl(fn_800DB234);
/*800EED74 000EBB74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r25));
/*800EED78 000EBB78*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*800EED7C 000EBB7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EED80 000EBB80*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3f);
/*800EED84 000EBB84*/ PPC::Runtime::ASM::lwzx(context->r5, context->r4, context->r3);
/*800EED88 000EBB88*/ PPC::Runtime::ASM::beq(.L_800EEDB4);
/*800EED8C 000EBB8C*/ PPC::Runtime::ASM::bge(.L_800EEDCC);
/*800EED90 000EBB90*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3e);
/*800EED94 000EBB94*/ PPC::Runtime::ASM::bge(.L_800EED9C);
/*800EED98 000EBB98*/ PPC::Runtime::ASM::b(.L_800EEDCC);
RUNTIME_PPC_JUMP_LABEL(.L_800EED9C, 0x800EED9C) //this is a jump label
/*800EED9C 000EBB9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EEDA0 000EBBA0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800EEDA4 000EBBA4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r25));
/*800EEDA8 000EBBA8*/ PPC::Runtime::ASM::bl(fn_80109624);
/*800EEDAC 000EBBAC*/ PPC::Runtime::ASM::mr(context->r23, context->r3);
/*800EEDB0 000EBBB0*/ PPC::Runtime::ASM::b(.L_800EEDE0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEDB4, 0x800EEDB4) //this is a jump label
/*800EEDB4 000EBBB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EEDB8 000EBBB8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800EEDBC 000EBBBC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r25));
/*800EEDC0 000EBBC0*/ PPC::Runtime::ASM::bl(fn_801097F8);
/*800EEDC4 000EBBC4*/ PPC::Runtime::ASM::mr(context->r23, context->r3);
/*800EEDC8 000EBBC8*/ PPC::Runtime::ASM::b(.L_800EEDE0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEDCC, 0x800EEDCC) //this is a jump label
/*800EEDCC 000EBBCC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EEDD0 000EBBD0*/ PPC::Runtime::ASM::li(context->r4, 0x20);
/*800EEDD4 000EBBD4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6190 @ Get_MemoryOffset_SDA21);
/*800EEDD8 000EBBD8*/ PPC::Runtime::ASM::bl(fn___assert);
/*800EEDDC 000EBBDC*/ PPC::Runtime::ASM::li(context->r23, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEDE0, 0x800EEDE0) //this is a jump label
/*800EEDE0 000EBBE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EEDE4 000EBBE4*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*800EEDE8 000EBBE8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x34);
/*800EEDEC 000EBBEC*/ PPC::Runtime::ASM::blt(.L_800EEE00);
/*800EEDF0 000EBBF0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EEDF4 000EBBF4*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x10);
/*800EEDF8 000EBBF8*/ PPC::Runtime::ASM::li(context->r4, 0x3b);
/*800EEDFC 000EBBFC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EEE00, 0x800EEE00) //this is a jump label
/*800EEE00 000EBC00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EEE04 000EBC04*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
/*800EEE08 000EBC08*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800EEE0C 000EBC0C*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*800EEE10 000EBC10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*800EEE14 000EBC14*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x750);
/*800EEE18 000EBC18*/ PPC::Runtime::ASM::stwx(context->r23, context->r30, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEE1C, 0x800EEE1C) //this is a jump label
/*800EEE1C 000EBC1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r25));
/*800EEE20 000EBC20*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800EEE24 000EBC24*/ PPC::Runtime::ASM::blt(.L_800EED58);
/*800EEE28 000EBC28*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x10);
/*800EEE2C 000EBC2C*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800EEE30, 0x800EEE30) //this is a jump label
/*800EEE30 000EBC30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*800EEE34 000EBC34*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800EEE38 000EBC38*/ PPC::Runtime::ASM::blt(.L_800EED48);
/*800EEE3C 000EBC3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800EEE40 000EBC40*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800EEE44 000EBC44*/ PPC::Runtime::ASM::beq(.L_800EEE58);
/*800EEE48 000EBC48*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EEE4C 000EBC4C*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x48);
/*800EEE50 000EBC50*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*800EEE54 000EBC54*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EEE58, 0x800EEE58) //this is a jump label
/*800EEE58 000EBC58*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x1c0);
/*800EEE5C 000EBC5C*/ PPC::Runtime::ASM::bl(_restgpr_23);
/*800EEE60 000EBC60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c4, context->r1));
/*800EEE64 000EBC64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EEE68 000EBC68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x1c0);
/*800EEE6C 000EBC6C*/ PPC::Runtime::ASM::blr();
}