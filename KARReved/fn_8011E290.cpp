//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8011E290(PPC::Runtime::GCContext* context)
{
/*8011E290 0011B090*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011E294 0011B094*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011E298 0011B098*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011E29C 0011B09C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011E2A0 0011B0A0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011E2A4 0011B0A4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011E2A8 0011B0A8*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*8011E2AC 0011B0AC*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*8011E2B0 0011B0B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r31));
/*8011E2B4 0011B0B4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011E2B8 0011B0B8*/ PPC::Runtime::ASM::beq(.L_8011E2C8);
/*8011E2BC 0011B0BC*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8011E2C0 0011B0C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8011E2C4 0011B0C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8011E2C8, 0x8011E2C8) //this is a jump label
/*8011E2C8 0011B0C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011E2CC 0011B0CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011E2D0 0011B0D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011E2D4 0011B0D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011E2D8 0011B0D8*/ PPC::Runtime::ASM::blr();
}