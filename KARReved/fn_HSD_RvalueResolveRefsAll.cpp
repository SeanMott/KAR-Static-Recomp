//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_JObjUnrefThis.hpp"
#include "fn_HSD_IDGetDataFromTable.hpp"
#include "fn___assert.hpp"
#include "fn___assert.hpp"



void fn_HSD_RvalueResolveRefsAll(PPC::Runtime::GCContext* context)
{
/*8041A350 00417150*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041A354 00417154*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041A358 00417158*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041A35C 0041715C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041A360 00417160*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 8041A364 00417164  7C 9E 23 79 */ mr. context->r30 , context->r4
/*8041A368 00417168*/ PPC::Runtime::ASM::lis(context->r4, lbl_80504060 @ Get_MemoryOffset_HighBit);
/*8041A36C 0041716C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041A370 00417170*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8041A374 00417174*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80504060 @ Get_MemoryOffset_LowBit);
/*8041A378 00417178*/ PPC::Runtime::ASM::bne(.L_8041A408);
/*8041A37C 0041717C*/ PPC::Runtime::ASM::b(.L_8041A41C);
/*8041A380 00417180*/ PPC::Runtime::ASM::b(.L_8041A408);
RUNTIME_PPC_JUMP_LABEL(.L_8041A384, 0x8041A384) //this is a jump label
/*8041A384 00417184*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8041A388 00417188*/ PPC::Runtime::ASM::beq(.L_8041A400);
/*8041A38C 0041718C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8041A390 00417190*/ PPC::Runtime::ASM::beq(.L_8041A400);
/*8041A394 00417194*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8041A398 00417198*/ PPC::Runtime::ASM::bl(fn_HSD_JObjUnrefThis);
/*8041A39C 0041719C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8041A3A0 004171A0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8041A3A4 004171A4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8041A3A8 004171A8*/ PPC::Runtime::ASM::bl(fn_HSD_IDGetDataFromTable);
/*8041A3AC 004171AC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8041A3B0 004171B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8041A3B4 004171B4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8041A3B8 004171B8*/ PPC::Runtime::ASM::bne(.L_8041A3CC);
/*8041A3BC 004171BC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x130);
/*8041A3C0 004171C0*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_507 @ Get_MemoryOffset_SDA21);
/*8041A3C4 004171C4*/ PPC::Runtime::ASM::li(context->r4, 0x4f2);
/*8041A3C8 004171C8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041A3CC, 0x8041A3CC) //this is a jump label
/*8041A3CC 004171CC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8041A3D0 004171D0*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8041A3D4 004171D4*/ PPC::Runtime::ASM::beq(.L_8041A400);
/*8041A3D8 004171D8*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r4));
/*8041A3DC 004171DC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8041A3E0 004171E0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r4));
/*8041A3E4 004171E4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r4));
/*8041A3E8 004171E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8041A3EC 004171EC*/ PPC::Runtime::ASM::bne(.L_8041A400);
/*8041A3F0 004171F0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x5c);
/*8041A3F4 004171F4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x68);
/*8041A3F8 004171F8*/ PPC::Runtime::ASM::li(context->r4, 0x9e);
/*8041A3FC 004171FC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041A400, 0x8041A400) //this is a jump label
/*8041A400 00417200*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8041A404 00417204*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x8);
RUNTIME_PPC_JUMP_LABEL(.L_8041A408, 0x8041A408) //this is a jump label
/*8041A408 00417208*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8041A40C 0041720C*/ PPC::Runtime::ASM::beq(.L_8041A41C);
/*8041A410 00417210*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8041A414 00417214*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8041A418 00417218*/ PPC::Runtime::ASM::bne(.L_8041A384);
RUNTIME_PPC_JUMP_LABEL(.L_8041A41C, 0x8041A41C) //this is a jump label
/*8041A41C 0041721C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041A420 00417220*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041A424 00417224*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041A428 00417228*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041A42C 0041722C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041A430 00417230*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041A434 00417234*/ PPC::Runtime::ASM::blr();
}