//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80155548(PPC::Runtime::GCContext* context)
{
/*80155548 00152348*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015554C 0015234C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80155550 00152350*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80155554 00152354*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80155558 00152358*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015555C 0015235C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80155560 00152360*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155564 00152364*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80155568, 0x80155568) //this is a jump label
/*80155568 00152368*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015556C 0015236C*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80155570 00152370*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80155574 00152374*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80155578 00152378*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r30));
/*8015557C 0015237C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80155580 00152380*/ PPC::Runtime::ASM::beq(.L_8015558C);
/*80155584 00152384*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80155588 00152388*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015558C, 0x8015558C) //this is a jump label
/*8015558C 0015238C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80155590 00152390*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80155594 00152394*/ PPC::Runtime::ASM::blt(.L_80155568);
/*80155598 00152398*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015559C 0015239C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801555A0 001523A0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801555A4 001523A4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801555A8 001523A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801555AC 001523AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801555B0 001523B0*/ PPC::Runtime::ASM::blr();
}