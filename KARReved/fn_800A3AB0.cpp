//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800990AC.hpp"
#include "fn_80098E30.hpp"
#include "fn_802433C4.hpp"
#include "fn_802433C4.hpp"
#include "fn_8009908C.hpp"



void fn_800A3AB0(PPC::Runtime::GCContext* context)
{
/*800A3AB0 000A08B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x100, context->r1));
/*800A3AB4 000A08B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A3AB8 000A08B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r1));
/*800A3ABC 000A08BC*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r1));
/*800A3AC0 000A08C0*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r1)0, context->qr0);
/*800A3AC4 000A08C4*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r1));
/*800A3AC8 000A08C8*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r1)0, context->qr0);
/*800A3ACC 000A08CC*/ PPC::Runtime::ASM::stfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r1));
/*800A3AD0 000A08D0*/ PPC::Runtime::ASM::psq_st(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r1)0, context->qr0);
/*800A3AD4 000A08D4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0xd0);
/*800A3AD8 000A08D8*/ PPC::Runtime::ASM::bl(_savegpr_24);
/*800A3ADC 000A08DC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800A3AE0 000A08E0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_646 @ Get_MemoryOffset_HighBit);
/*800A3AE4 000A08E4*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r27));
/*800A3AE8 000A08E8*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800A3AEC 000A08EC*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800A3AF0 000A08F0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_646 @ Get_MemoryOffset_LowBit);
/*800A3AF4 000A08F4*/ PPC::Runtime::ASM::cmpwi(context->r24, 0x0);
/*800A3AF8 000A08F8*/ PPC::Runtime::ASM::beq(.L_800A3B0C);
/*800A3AFC 000A08FC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x40);
/*800A3B00 000A0900*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x50);
/*800A3B04 000A0904*/ PPC::Runtime::ASM::li(context->r4, 0x7b);
/*800A3B08 000A0908*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A3B0C, 0x800A3B0C) //this is a jump label
/*800A3B0C 000A090C*/ PPC::Runtime::ASM::cmpwi(context->r24, 0x0);
/*800A3B10 000A0910*/ PPC::Runtime::ASM::bne(.L_800A3DD0);
/*800A3B14 000A0914*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r28, 0, 28, 28);
/*800A3B18 000A0918*/ PPC::Runtime::ASM::beq(.L_800A3D0C);
/*800A3B1C 000A091C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r27));
/*800A3B20 000A0920*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A3B24 000A0924*/ PPC::Runtime::ASM::beq(.L_800A3B38);
/*800A3B28 000A0928*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800A3B2C 000A092C*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800A3B30 000A0930*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*800A3B34 000A0934*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A3B38, 0x800A3B38) //this is a jump label
/*800A3B38 000A0938*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r27));
/*800A3B3C 000A093C*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800A3B40 000A0940*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DF0D8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A3B44 000A0944*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x8);
/*800A3B48 000A0948*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*800A3B4C 000A094C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A3B50 000A0950*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r6));
/*800A3B54 000A0954*/ PPC::Runtime::ASM::bl(fn_800990AC);
/*800A3B58 000A0958*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r27));
/*800A3B5C 000A095C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A3B60 000A0960*/ PPC::Runtime::ASM::beq(.L_800A3B74);
/*800A3B64 000A0964*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800A3B68 000A0968*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800A3B6C 000A096C*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*800A3B70 000A0970*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A3B74, 0x800A3B74) //this is a jump label
/*800A3B74 000A0974*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r27));
/*800A3B78 000A0978*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r27));
/*800A3B7C 000A097C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A3B80 000A0980*/ PPC::Runtime::ASM::beq(.L_800A3B94);
/*800A3B84 000A0984*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800A3B88 000A0988*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800A3B8C 000A098C*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*800A3B90 000A0990*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A3B94, 0x800A3B94) //this is a jump label
/*800A3B94 000A0994*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r27));
/*800A3B98 000A0998*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A3B9C 000A099C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*800A3BA0 000A09A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A3BA4 000A09A4*/ PPC::Runtime::ASM::beq(.L_800A3BB8);
/*800A3BA8 000A09A8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34c, context->r27));
/* 800A3BAC 000A09AC  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*800A3BB0 000A09B0*/ PPC::Runtime::ASM::beq(.L_800A3BB8);
/*800A3BB4 000A09B4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A3BB8, 0x800A3BB8) //this is a jump label
/*800A3BB8 000A09B8*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800A3BBC 000A09BC*/ PPC::Runtime::ASM::beq(.L_800A3D0C);
/*800A3BC0 000A09C0*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800A3BC4 000A09C4*/ PPC::Runtime::ASM::bne(.L_800A3D0C);
/*800A3BC8 000A09C8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A3BCC 000A09CC*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*800A3BD0 000A09D0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800A3BD4 000A09D4*/ PPC::Runtime::ASM::li(context->r0, 0xff);
/*800A3BD8 000A09D8*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A3BDC 000A09DC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800A3BE0 000A09E0*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800A3BE4 000A09E4*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r1));
/*800A3BE8 000A09E8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r1));
/*800A3BEC 000A09EC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb, context->r1));
/*800A3BF0 000A09F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A3BF4 000A09F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A3BF8 000A09F8*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*800A3BFC 000A09FC*/ PPC::Runtime::ASM::li(context->r3, 0x40);
/*800A3C00 000A0A00*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A3C04 000A0A04*/ PPC::Runtime::ASM::bl(fn_GXSetPointSize);
/*800A3C08 000A0A08*/ PPC::Runtime::ASM::li(context->r3, 0x10);
/*800A3C0C 000A0A0C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A3C10 000A0A10*/ PPC::Runtime::ASM::bl(fn_GXSetLineWidth);
/*800A3C14 000A0A14*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*800A3C18 000A0A18*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*800A3C1C 000A0A1C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A3C20 000A0A20*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A3C24 000A0A24*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A3C28 000A0A28*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A3C2C 000A0A2C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800A3C30 000A0A30*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A3C34 000A0A34*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A3C38 000A0A38*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A3C3C 000A0A3C*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A3C40 000A0A40*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x80);
/*800A3C44 000A0A44*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A3C48 000A0A48*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800A3C4C 000A0A4C*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x8);
/*800A3C50 000A0A50*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0xc);
/*800A3C54 000A0A54*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x50);
/*800A3C58 000A0A58*/ PPC::Runtime::ASM::bl(fn_802433C4);
/*800A3C5C 000A0A5C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x80);
/*800A3C60 000A0A60*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x50);
/*800A3C64 000A0A64*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*800A3C68 000A0A68*/ PPC::Runtime::ASM::bl(fn_PSMTXConcat);
/*800A3C6C 000A0A6C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x80);
/*800A3C70 000A0A70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A3C74 000A0A74*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*800A3C78 000A0A78*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A3C7C 000A0A7C*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*800A3C80 000A0A80*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800A3C84 000A0A84*/ PPC::Runtime::ASM::lis(context->r26, 0xcc01);
/*800A3C88 000A0A88*/ PPC::Runtime::ASM::mr(context->r24, context->r25);
/*800A3C8C 000A0A8C*/ PPC::Runtime::ASM::b(.L_800A3CFC);
RUNTIME_PPC_JUMP_LABEL(.L_800A3C90, 0x800A3C90) //this is a jump label
/*800A3C90 000A0A90*/ PPC::Runtime::ASM::add(context->r6, context->r3, context->r24);
/*800A3C94 000A0A94*/ PPC::Runtime::ASM::li(context->r3, 0xa8);
/*800A3C98 000A0A98*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800A3C9C 000A0A9C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A3CA0 000A0AA0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r6));
/*800A3CA4 000A0AA4*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*800A3CA8 000A0AA8*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*800A3CAC 000A0AAC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r6));
/*800A3CB0 000A0AB0*/ PPC::Runtime::ASM::fadds(context->f31, context->f1, context->f0);
/*800A3CB4 000A0AB4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r6));
/*800A3CB8 000A0AB8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r6));
/*800A3CBC 000A0ABC*/ PPC::Runtime::ASM::fadds(context->f30, context->f3, context->f2);
/*800A3CC0 000A0AC0*/ PPC::Runtime::ASM::fadds(context->f29, context->f1, context->f0);
/*800A3CC4 000A0AC4*/ PPC::Runtime::ASM::bl(fn_GXBegin);
/*800A3CC8 000A0AC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*800A3CCC 000A0ACC*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
/*800A3CD0 000A0AD0*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r24);
/*800A3CD4 000A0AD4*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x48);
/*800A3CD8 000A0AD8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800A3CDC 000A0ADC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800A3CE0 000A0AE0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800A3CE4 000A0AE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r26));
/*800A3CE8 000A0AE8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r26));
/*800A3CEC 000A0AEC*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r26));
/*800A3CF0 000A0AF0*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r26));
/*800A3CF4 000A0AF4*/ PPC::Runtime::ASM::stfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r26));
/*800A3CF8 000A0AF8*/ PPC::Runtime::ASM::stfs(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r26));
RUNTIME_PPC_JUMP_LABEL(.L_800A3CFC, 0x800A3CFC) //this is a jump label
/*800A3CFC 000A0AFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*800A3D00 000A0B00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r3));
/*800A3D04 000A0B04*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*800A3D08 000A0B08*/ PPC::Runtime::ASM::blt(.L_800A3C90);
RUNTIME_PPC_JUMP_LABEL(.L_800A3D0C, 0x800A3D0C) //this is a jump label
/*800A3D0C 000A0B0C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r28, 0, 27, 27);
/*800A3D10 000A0B10*/ PPC::Runtime::ASM::beq(.L_800A3DD0);
/*800A3D14 000A0B14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r27));
/*800A3D18 000A0B18*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A3D1C 000A0B1C*/ PPC::Runtime::ASM::beq(.L_800A3D30);
/*800A3D20 000A0B20*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800A3D24 000A0B24*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800A3D28 000A0B28*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*800A3D2C 000A0B2C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A3D30, 0x800A3D30) //this is a jump label
/*800A3D30 000A0B30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r27));
/*800A3D34 000A0B34*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r27));
/*800A3D38 000A0B38*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A3D3C 000A0B3C*/ PPC::Runtime::ASM::beq(.L_800A3D50);
/*800A3D40 000A0B40*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800A3D44 000A0B44*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800A3D48 000A0B48*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*800A3D4C 000A0B4C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A3D50, 0x800A3D50) //this is a jump label
/*800A3D50 000A0B50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r27));
/*800A3D54 000A0B54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A3D58 000A0B58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r3));
/*800A3D5C 000A0B5C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A3D60 000A0B60*/ PPC::Runtime::ASM::beq(.L_800A3D74);
/*800A3D64 000A0B64*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34c, context->r27));
/* 800A3D68 000A0B68  54 00 E7 FF */ extrwi. context->r0 , context->r0 , 1 , 27
/*800A3D6C 000A0B6C*/ PPC::Runtime::ASM::beq(.L_800A3D74);
/*800A3D70 000A0B70*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A3D74, 0x800A3D74) //this is a jump label
/*800A3D74 000A0B74*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800A3D78 000A0B78*/ PPC::Runtime::ASM::beq(.L_800A3DD0);
/*800A3D7C 000A0B7C*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*800A3D80 000A0B80*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x8);
/*800A3D84 000A0B84*/ PPC::Runtime::ASM::addi(context->r5, context->r26, 0xc);
/*800A3D88 000A0B88*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x20);
/*800A3D8C 000A0B8C*/ PPC::Runtime::ASM::bl(fn_802433C4);
/*800A3D90 000A0B90*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800A3D94 000A0B94*/ PPC::Runtime::ASM::mr(context->r24, context->r25);
RUNTIME_PPC_JUMP_LABEL(.L_800A3D98, 0x800A3D98) //this is a jump label
/*800A3D98 000A0B98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r26));
/*800A3D9C 000A0B9C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*800A3DA0 000A0BA0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*800A3DA4 000A0BA4*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r24);
/*800A3DA8 000A0BA8*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
/*800A3DAC 000A0BAC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800A3DB0 000A0BB0*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*800A3DB4 000A0BB4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800A3DB8 000A0BB8*/ PPC::Runtime::ASM::addi(context->r6, context->r26, 0xc);
/*800A3DBC 000A0BBC*/ PPC::Runtime::ASM::bl(fn_8009908C);
/*800A3DC0 000A0BC0*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
/*800A3DC4 000A0BC4*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x10);
/*800A3DC8 000A0BC8*/ PPC::Runtime::ASM::cmpwi(context->r25, 0x3);
/*800A3DCC 000A0BCC*/ PPC::Runtime::ASM::blt(.L_800A3D98);
RUNTIME_PPC_JUMP_LABEL(.L_800A3DD0, 0x800A3DD0) //this is a jump label
/*800A3DD0 000A0BD0*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r1)0, context->qr0);
/*800A3DD4 000A0BD4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r1));
/*800A3DD8 000A0BD8*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r1)0, context->qr0);
/*800A3DDC 000A0BDC*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r1));
/*800A3DE0 000A0BE0*/ PPC::Runtime::ASM::psq_l(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r1)0, context->qr0);
/*800A3DE4 000A0BE4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0xd0);
/*800A3DE8 000A0BE8*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r1));
/*800A3DEC 000A0BEC*/ PPC::Runtime::ASM::bl(_restgpr_24);
/*800A3DF0 000A0BF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r1));
/*800A3DF4 000A0BF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A3DF8 000A0BF8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x100);
/*800A3DFC 000A0BFC*/ PPC::Runtime::ASM::blr();
}