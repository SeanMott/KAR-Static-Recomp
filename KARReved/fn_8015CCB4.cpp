//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80138BA4.hpp"



void fn_8015CCB4(PPC::Runtime::GCContext* context)
{
/*8015CCB4 00159AB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015CCB8 00159AB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015CCBC 00159ABC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015CCC0 00159AC0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8015CCC4 00159AC4*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*8015CCC8 00159AC8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8015CCCC 00159ACC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r28));
/*8015CCD0 00159AD0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8015CCD4 00159AD4*/ PPC::Runtime::ASM::beq(.L_8015CD44);
/*8015CCD8 00159AD8*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*8015CCDC 00159ADC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6978 @ Get_MemoryOffset_SDA21);
/*8015CCE0 00159AE0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r28));
/*8015CCE4 00159AE4*/ PPC::Runtime::ASM::mr(context->r30, context->r28);
/*8015CCE8 00159AE8*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*8015CCEC 00159AEC*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*8015CCF0 00159AF0*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r28));
/*8015CCF4 00159AF4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r28));
/*8015CCF8 00159AF8*/ PPC::Runtime::ASM::extsb(context->r4, context->r4);
/*8015CCFC 00159AFC*/ PPC::Runtime::ASM::mulli(context->r4, context->r4, 0x3);
/*8015CD00 00159B00*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8015CD04 00159B04*/ PPC::Runtime::ASM::subfic(context->r0, context->r0, 0x2);
/*8015CD08 00159B08*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r0);
/*8015CD0C 00159B0C*/ PPC::Runtime::ASM::lbzx(context->r29, context->r3, context->r0);
/*8015CD10 00159B10*/ PPC::Runtime::ASM::extsb(context->r29, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_8015CD14, 0x8015CD14) //this is a jump label
/*8015CD14 00159B14*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*8015CD18 00159B18*/ PPC::Runtime::ASM::slw(context->r0, context->r31, context->r27);
/*8015CD1C 00159B1C*/ PPC::Runtime::ASM::and.(context->r0, context->r3, context->r0);
/*8015CD20 00159B20*/ PPC::Runtime::ASM::beq(.L_8015CD34);
/*8015CD24 00159B24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8015CD28 00159B28*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8015CD2C 00159B2C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E08B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8015CD30 00159B30*/ PPC::Runtime::ASM::bl(fn_80138BA4);
RUNTIME_PPC_JUMP_LABEL(.L_8015CD34, 0x8015CD34) //this is a jump label
/*8015CD34 00159B34*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*8015CD38 00159B38*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8015CD3C 00159B3C*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x9);
/*8015CD40 00159B40*/ PPC::Runtime::ASM::blt(.L_8015CD14);
RUNTIME_PPC_JUMP_LABEL(.L_8015CD44, 0x8015CD44) //this is a jump label
/*8015CD44 00159B44*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8015CD48 00159B48*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8015CD4C 00159B4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015CD50 00159B50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015CD54 00159B54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015CD58 00159B58*/ PPC::Runtime::ASM::blr();
}