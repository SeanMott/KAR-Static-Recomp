//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8028967C.hpp"
#include "fn_80289730.hpp"
#include "fn_80289768.hpp"
#include "fn_80289768.hpp"
#include "fn_80289768.hpp"



void fn_8033FAA0(PPC::Runtime::GCContext* context)
{
/*8033FAA0 0033C8A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8033FAA4 0033C8A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8033FAA8 0033C8A8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E4480 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8033FAAC 0033C8AC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8033FAB0 0033C8B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8033FAB4 0033C8B4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8033FAB8 0033C8B8*/ PPC::Runtime::ASM::li(context->r5, lbl_805DAEF8 @ Get_MemoryOffset_SDA21);
/*8033FABC 0033C8BC*/ PPC::Runtime::ASM::li(context->r6, lbl_805DAEF0 @ Get_MemoryOffset_SDA21);
/*8033FAC0 0033C8C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8033FAC4 0033C8C4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8033FAC8 0033C8C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8033FACC 0033C8CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*8033FAD0 0033C8D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*8033FAD4 0033C8D4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*8033FAD8 0033C8D8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8033FADC 0033C8DC*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*8033FAE0 0033C8E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8033FAE4 0033C8E4*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E7660 @ Get_MemoryOffset_HighBit);
/*8033FAE8 0033C8E8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E7660 @ Get_MemoryOffset_LowBit);
/*8033FAEC 0033C8EC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*8033FAF0 0033C8F0*/ PPC::Runtime::ASM::bne(.L_8033FAFC);
/*8033FAF4 0033C8F4*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E7614 @ Get_MemoryOffset_HighBit);
/*8033FAF8 0033C8F8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E7614 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_8033FAFC, 0x8033FAFC) //this is a jump label
/*8033FAFC 0033C8FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8033FB00 0033C900*/ PPC::Runtime::ASM::lis(context->r3, 0x1);
/*8033FB04 0033C904*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E4480 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8033FB08 0033C908*/ PPC::Runtime::ASM::subi(context->r4, context->r3, 0x1);
/*8033FB0C 0033C90C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8033FB10 0033C910*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E4484 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8033FB14 0033C914*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8033FB18 0033C918*/ PPC::Runtime::ASM::bl(fn_8028967C);
/*8033FB1C 0033C91C*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*8033FB20 0033C920*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8033FB24 0033C924*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E4480 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8033FB28 0033C928*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*8033FB2C 0033C92C*/ PPC::Runtime::ASM::bl(fn_80289730);
/*8033FB30 0033C930*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*8033FB34 0033C934*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8033FB38 0033C938*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E4488 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8033FB3C 0033C93C*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*8033FB40 0033C940*/ PPC::Runtime::ASM::bl(fn_80289768);
/*8033FB44 0033C944*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*8033FB48 0033C948*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8033FB4C 0033C94C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8033FB50 0033C950*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*8033FB54 0033C954*/ PPC::Runtime::ASM::bl(fn_80289768);
/*8033FB58 0033C958*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8033FB5C 0033C95C*/ PPC::Runtime::ASM::li(context->r4, 0x20);
/*8033FB60 0033C960*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8033FB64 0033C964*/ PPC::Runtime::ASM::bl(fn_80289768);
/*8033FB68 0033C968*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8033FB6C 0033C96C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8033FB70 0033C970*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8033FB74 0033C974*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8033FB78 0033C978*/ PPC::Runtime::ASM::blr();
}