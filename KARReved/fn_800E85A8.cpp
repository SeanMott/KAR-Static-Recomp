//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800E85A8(PPC::Runtime::GCContext* context)
{
/*800E85A8 000E53A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800E85AC 000E53AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E85B0 000E53B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800E85B4 000E53B4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800E85B8 000E53B8*/ PPC::Runtime::ASM::bl(_savegpr_24);
/*800E85BC 000E53BC*/ PPC::Runtime::ASM::lis(context->r6, MemoryOffset_958 @ Get_MemoryOffset_HighBit);
/*800E85C0 000E53C0*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E85C4 000E53C4*/ PPC::Runtime::ASM::mr(context->r25, context->r4);
/*800E85C8 000E53C8*/ PPC::Runtime::ASM::mr(context->r26, context->r5);
/*800E85CC 000E53CC*/ PPC::Runtime::ASM::addi(context->r30, context->r6, MemoryOffset_958 @ Get_MemoryOffset_LowBit);
/*800E85D0 000E53D0*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x210);
/*800E85D4 000E53D4*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800E85D8 000E53D8*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800E85DC 000E53DC*/ PPC::Runtime::ASM::b(.L_800E86A8);
RUNTIME_PPC_JUMP_LABEL(.L_800E85E0, 0x800E85E0) //this is a jump label
/*800E85E0 000E53E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*800E85E4 000E53E4*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r28);
/*800E85E8 000E53E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800E85EC 000E53EC*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800E85F0 000E53F0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xc);
/*800E85F4 000E53F4*/ PPC::Runtime::ASM::beq(.L_800E8600);
/*800E85F8 000E53F8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xd);
/*800E85FC 000E53FC*/ PPC::Runtime::ASM::bne(.L_800E86A0);
RUNTIME_PPC_JUMP_LABEL(.L_800E8600, 0x800E8600) //this is a jump label
/*800E8600 000E5400*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800E8604 000E5404*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800E8608 000E5408*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r24));
/*800E860C 000E540C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E8610 000E5410*/ PPC::Runtime::ASM::blt(.L_800E8620);
/*800E8614 000E5414*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x8);
/*800E8618 000E5418*/ PPC::Runtime::ASM::bge(.L_800E8620);
/*800E861C 000E541C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8620, 0x800E8620) //this is a jump label
/*800E8620 000E5420*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E8624 000E5424*/ PPC::Runtime::ASM::bne(.L_800E8638);
/*800E8628 000E5428*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*800E862C 000E542C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0xc);
/*800E8630 000E5430*/ PPC::Runtime::ASM::li(context->r4, 0x41);
/*800E8634 000E5434*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8638, 0x800E8638) //this is a jump label
/*800E8638 000E5438*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r24));
/*800E863C 000E543C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800E8640 000E5440*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E8644 000E5444*/ PPC::Runtime::ASM::blt(.L_800E8654);
/*800E8648 000E5448*/ PPC::Runtime::ASM::cmpw(context->r3, context->r26);
/*800E864C 000E544C*/ PPC::Runtime::ASM::bge(.L_800E8654);
/*800E8650 000E5450*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8654, 0x800E8654) //this is a jump label
/*800E8654 000E5454*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E8658 000E5458*/ PPC::Runtime::ASM::bne(.L_800E866C);
/*800E865C 000E545C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*800E8660 000E5460*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x44);
/*800E8664 000E5464*/ PPC::Runtime::ASM::li(context->r4, 0x42);
/*800E8668 000E5468*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E866C, 0x800E866C) //this is a jump label
/*800E866C 000E546C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r24));
/*800E8670 000E5470*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r24));
/*800E8674 000E5474*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*800E8678 000E5478*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x48);
/*800E867C 000E547C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r25, context->r3);
/*800E8680 000E5480*/ PPC::Runtime::ASM::stwx(context->r3, context->r29, context->r0);
/*800E8684 000E5484*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r24));
/*800E8688 000E5488*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0x48);
/*800E868C 000E548C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*800E8690 000E5490*/ PPC::Runtime::ASM::stwx(context->r27, context->r29, context->r0);
/*800E8694 000E5494*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r29));
/*800E8698 000E5498*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800E869C 000E549C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800E86A0, 0x800E86A0) //this is a jump label
/*800E86A0 000E54A0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x140);
/*800E86A4 000E54A4*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E86A8, 0x800E86A8) //this is a jump label
/*800E86A8 000E54A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*800E86AC 000E54AC*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800E86B0 000E54B0*/ PPC::Runtime::ASM::blt(.L_800E85E0);
/*800E86B4 000E54B4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800E86B8 000E54B8*/ PPC::Runtime::ASM::bl(_restgpr_24);
/*800E86BC 000E54BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800E86C0 000E54C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E86C4 000E54C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800E86C8 000E54C8*/ PPC::Runtime::ASM::blr();
}