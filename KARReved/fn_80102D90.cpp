//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA180.hpp"
#include "fn_killWhispy.hpp"



void fn_80102D90(PPC::Runtime::GCContext* context)
{
/*80102D90 000FFB90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80102D94 000FFB94*/ PPC::Runtime::ASM::mflr(context->r0);
/*80102D98 000FFB98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80102D9C 000FFB9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80102DA0 000FFBA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80102DA4 000FFBA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80102DA8 000FFBA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*80102DAC 000FFBAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80102DB0 000FFBB0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80102DB4 000FFBB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80102DB8 000FFBB8*/ PPC::Runtime::ASM::ble(.L_80102DC4);
/*80102DBC 000FFBBC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*80102DC0 000FFBC0*/ PPC::Runtime::ASM::bl(fn_800EA180);
RUNTIME_PPC_JUMP_LABEL(.L_80102DC4, 0x80102DC4) //this is a jump label
/*80102DC4 000FFBC4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF990 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80102DC8 000FFBC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80102DCC 000FFBCC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80102DD0 000FFBD0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80102DD4 000FFBD4*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*80102DD8 000FFBD8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80102DDC 000FFBDC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80102DE0 000FFBE0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80102DE4 000FFBE4*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*80102DE8 000FFBE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80102DEC 000FFBEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80102DF0 000FFBF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80102DF4 000FFBF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80102DF8 000FFBF8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80102DFC 000FFBFC*/ PPC::Runtime::ASM::blr();
}