//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "DCInvalidateRange.hpp"
#include "OSDisableInterrupts.hpp"
#include "__DVDPushWaitingQueue.hpp"
#include "stateReady.hpp"
#include "OSRestoreInterrupts.hpp"



void DVDInquiryAsync(PPC::Runtime::GCContext* context)
{
/*803C76A0 003C44A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C76A4 003C44A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C76A8 003C44A8*/ PPC::Runtime::ASM::li(context->r0, 0xe);
/*803C76AC 003C44AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803C76B0 003C44B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C76B4 003C44B4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803C76B8 003C44B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C76BC 003C44BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803C76C0 003C44C0*/ PPC::Runtime::ASM::li(context->r3, 0x20);
/*803C76C4 003C44C4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C76C8 003C44C8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803C76CC 003C44CC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803C76D0 003C44D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*803C76D4 003C44D4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*803C76D8 003C44D8*/ PPC::Runtime::ASM::lwz(context->r0, autoInvalidation_805DC8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C76DC 003C44DC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803C76E0 003C44E0*/ PPC::Runtime::ASM::beq(.L_803C7710);
/*803C76E4 003C44E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803C76E8 003C44E8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x1);
/*803C76EC 003C44EC*/ PPC::Runtime::ASM::beq(.L_803C7704);
/*803C76F0 003C44F0*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x4);
/*803C76F4 003C44F4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*803C76F8 003C44F8*/ PPC::Runtime::ASM::ble(.L_803C7704);
/*803C76FC 003C44FC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xe);
/*803C7700 003C4500*/ PPC::Runtime::ASM::bne(.L_803C7710);
RUNTIME_PPC_JUMP_LABEL(.L_803C7704, 0x803C7704) //this is a jump label
/*803C7704 003C4504*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803C7708 003C4508*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803C770C 003C450C*/ PPC::Runtime::ASM::bl(DCInvalidateRange);
RUNTIME_PPC_JUMP_LABEL(.L_803C7710, 0x803C7710) //this is a jump label
/*803C7710 003C4510*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C7714 003C4514*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*803C7718 003C4518*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803C771C 003C451C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803C7720 003C4520*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803C7724 003C4524*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C7728 003C4528*/ PPC::Runtime::ASM::bl(__DVDPushWaitingQueue);
/*803C772C 003C452C*/ PPC::Runtime::ASM::lwz(context->r0, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7730 003C4530*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803C7734 003C4534*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803C7738 003C4538*/ PPC::Runtime::ASM::bne(.L_803C774C);
/*803C773C 003C453C*/ PPC::Runtime::ASM::lwz(context->r0, PauseFlag_805DDDB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7740 003C4540*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803C7744 003C4544*/ PPC::Runtime::ASM::bne(.L_803C774C);
/*803C7748 003C4548*/ PPC::Runtime::ASM::bl(stateReady);
RUNTIME_PPC_JUMP_LABEL(.L_803C774C, 0x803C774C) //this is a jump label
/*803C774C 003C454C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C7750 003C4550*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C7754 003C4554*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803C7758 003C4558*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803C775C 003C455C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C7760 003C4560*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C7764 003C4564*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803C7768 003C4568*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C776C 003C456C*/ PPC::Runtime::ASM::blr();
}