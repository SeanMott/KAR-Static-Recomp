//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80231CEC.hpp"



void fn_8022EC34(PPC::Runtime::GCContext* context)
{
/*8022EC34 0022BA34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022EC38 0022BA38*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022EC3C 0022BA3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022EC40 0022BA40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022EC44 0022BA44*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022EC48 0022BA48*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8022EC4C 0022BA4C*/ PPC::Runtime::ASM::blt(.L_8022EC68);
/*8022EC50 0022BA50*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022EC54 0022BA54*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022EC58 0022BA58*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022EC5C 0022BA5C*/ PPC::Runtime::ASM::li(context->r4, 0x2b6);
/*8022EC60 0022BA60*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022EC64 0022BA64*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022EC68, 0x8022EC68) //this is a jump label
/*8022EC68 0022BA68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022EC6C 0022BA6C*/ PPC::Runtime::ASM::bl(fn_80231CEC);
/*8022EC70 0022BA70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022EC74 0022BA74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022EC78 0022BA78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022EC7C 0022BA7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022EC80 0022BA80*/ PPC::Runtime::ASM::blr();
}