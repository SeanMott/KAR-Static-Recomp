//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80114F1C.hpp"
#include "fn_80114F1C.hpp"
#include "fn_80114A34.hpp"
#include "fn_80123BC0.hpp"
#include "fn_80123BC0.hpp"
#include "fn_80114D9C.hpp"
#include "fn_80114E24.hpp"



void fn_80123D50(PPC::Runtime::GCContext* context)
{
/*80123D50 00120B50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80123D54 00120B54*/ PPC::Runtime::ASM::mflr(context->r0);
/*80123D58 00120B58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80123D5C 00120B5C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80123D60 00120B60*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*80123D64 00120B64*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*80123D68 00120B68*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*80123D6C 00120B6C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80123D70 00120B70*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x5b4);
/*80123D74 00120B74*/ PPC::Runtime::ASM::slwi(context->r0, context->r27, 2);
/*80123D78 00120B78*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*80123D7C 00120B7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*80123D80 00120B80*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80123D84 00120B84*/ PPC::Runtime::ASM::bne(.L_80123E1C);
/*80123D88 00120B88*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*80123D8C 00120B8C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80123D90 00120B90*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80123D94 00120B94*/ PPC::Runtime::ASM::bne(.L_80123DA0);
/*80123D98 00120B98*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80123D9C 00120B9C*/ PPC::Runtime::ASM::b(.L_80123DBC);
RUNTIME_PPC_JUMP_LABEL(.L_80123DA0, 0x80123DA0) //this is a jump label
/*80123DA0 00120BA0*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*80123DA4 00120BA4*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80123DA8 00120BA8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80123DAC 00120BAC*/ PPC::Runtime::ASM::bne(.L_80123DB8);
/*80123DB0 00120BB0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80123DB4 00120BB4*/ PPC::Runtime::ASM::b(.L_80123DBC);
RUNTIME_PPC_JUMP_LABEL(.L_80123DB8, 0x80123DB8) //this is a jump label
/*80123DB8 00120BB8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80123DBC, 0x80123DBC) //this is a jump label
/*80123DBC 00120BBC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80123DC0 00120BC0*/ PPC::Runtime::ASM::lis(context->r3, fn_80114F1C @ Get_MemoryOffset_HighBit);
/*80123DC4 00120BC4*/ PPC::Runtime::ASM::addi(context->r5, context->r3, fn_80114F1C @ Get_MemoryOffset_LowBit);
/*80123DC8 00120BC8*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*80123DCC 00120BCC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80123DD0 00120BD0*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*80123DD4 00120BD4*/ PPC::Runtime::ASM::bl(fn_80114A34);
/*80123DD8 00120BD8*/ PPC::Runtime::ASM::lis(context->r4, fn_80123BC0 @ Get_MemoryOffset_HighBit);
/*80123DDC 00120BDC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80123DE0 00120BE0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80123DE4 00120BE4*/ PPC::Runtime::ASM::li(context->r5, 0x14);
/*80123DE8 00120BE8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80123BC0 @ Get_MemoryOffset_LowBit);
/*80123DEC 00120BEC*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*80123DF0 00120BF0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80123DF4 00120BF4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80123DF8 00120BF8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFEA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80123DFC 00120BFC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFEAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80123E00 00120C00*/ PPC::Runtime::ASM::bl(fn_80114D9C);
/*80123E04 00120C04*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80123E08 00120C08*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*80123E0C 00120C0C*/ PPC::Runtime::ASM::mr(context->r6, context->r27);
/*80123E10 00120C10*/ PPC::Runtime::ASM::li(context->r4, 0x3e);
/*80123E14 00120C14*/ PPC::Runtime::ASM::bl(fn_80114E24);
/*80123E18 00120C18*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80123E1C, 0x80123E1C) //this is a jump label
/*80123E1C 00120C1C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80123E20 00120C20*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*80123E24 00120C24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80123E28 00120C28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80123E2C 00120C2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80123E30 00120C30*/ PPC::Runtime::ASM::blr();
}