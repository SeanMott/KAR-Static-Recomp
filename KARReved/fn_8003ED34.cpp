//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_8002CFD8.hpp"
#include "fn_8003D03C.hpp"
#include "fn_8003EDEC.hpp"



void fn_8003ED34(PPC::Runtime::GCContext* context)
{
/*8003ED34 0003BB34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8003ED38 0003BB38*/ PPC::Runtime::ASM::mflr(context->r0);
/*8003ED3C 0003BB3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003ED40 0003BB40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003ED44 0003BB44*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003ED48 0003BB48*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8003ED4C 0003BB4C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003ED50 0003BB50*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x381, context->r3));
/*8003ED54 0003BB54*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x382, context->r3));
/*8003ED58 0003BB58*/ PPC::Runtime::ASM::extsb(context->r5, context->r4);
/*8003ED5C 0003BB5C*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8003ED60 0003BB60*/ PPC::Runtime::ASM::neg(context->r4, context->r5);
/*8003ED64 0003BB64*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*8003ED68 0003BB68*/ PPC::Runtime::ASM::or(context->r4, context->r4, context->r5);
/*8003ED6C 0003BB6C*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*8003ED70 0003BB70*/ PPC::Runtime::ASM::srwi(context->r4, context->r4, 31);
/*8003ED74 0003BB74*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
/*8003ED78 0003BB78*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8003ED7C 0003BB7C*/ PPC::Runtime::ASM::extsb(context->r0, context->r4);
/*8003ED80 0003BB80*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*8003ED84 0003BB84*/ PPC::Runtime::ASM::beq(.L_8003ED98);
/*8003ED88 0003BB88*/ PPC::Runtime::ASM::bl(fn_8002CFD8);
/*8003ED8C 0003BB8C*/ PPC::Runtime::ASM::bl(fn_8003D03C);
/*8003ED90 0003BB90*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*8003ED94 0003BB94*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x387, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8003ED98, 0x8003ED98) //this is a jump label
/*8003ED98 0003BB98*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*8003ED9C 0003BB9C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8003EDA0 0003BBA0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x385, context->r31));
/*8003EDA4 0003BBA4*/ PPC::Runtime::ASM::bl(fn_8003EDEC);
/*8003EDA8 0003BBA8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8003EDAC 0003BBAC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x390, context->r31));
/*8003EDB0 0003BBB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003EDB4 0003BBB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003EDB8 0003BBB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8003EDBC 0003BBBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8003EDC0 0003BBC0*/ PPC::Runtime::ASM::blr();
}