//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "SetExiInterruptMask.hpp"
#include "SetExiInterruptMask.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_EXISetExiCallback(PPC::Runtime::GCContext* context)
{
/*803EA6D4 003E74D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EA6D8 003E74D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EA6DC 003E74DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803EA6E0 003E74E0*/ PPC::Runtime::ASM::stmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EA6E4 003E74E4*/ PPC::Runtime::ASM::addi(context->r26, context->r3, 0x0);
/*803EA6E8 003E74E8*/ PPC::Runtime::ASM::addi(context->r27, context->r4, 0x0);
/*803EA6EC 003E74EC*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 6);
/*803EA6F0 003E74F0*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EA6F4 003E74F4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EA6F8 003E74F8*/ PPC::Runtime::ASM::add(context->r30, context->r31, context->r0);
/*803EA6FC 003E74FC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EA700 003E7500*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*803EA704 003E7504*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803EA708 003E7508*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803EA70C 003E750C*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x2);
/*803EA710 003E7510*/ PPC::Runtime::ASM::beq(.L_803EA724);
/*803EA714 003E7514*/ PPC::Runtime::ASM::addi(context->r3, context->r26, 0x0);
/*803EA718 003E7518*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803EA71C 003E751C*/ PPC::Runtime::ASM::bl(SetExiInterruptMask);
/*803EA720 003E7520*/ PPC::Runtime::ASM::b(.L_803EA730);
RUNTIME_PPC_JUMP_LABEL(.L_803EA724, 0x803EA724) //this is a jump label
/*803EA724 003E7524*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EA728 003E7528*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803EA72C 003E752C*/ PPC::Runtime::ASM::bl(SetExiInterruptMask);
RUNTIME_PPC_JUMP_LABEL(.L_803EA730, 0x803EA730) //this is a jump label
/*803EA730 003E7530*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803EA734 003E7534*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EA738 003E7538*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EA73C 003E753C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803EA740 003E7540*/ PPC::Runtime::ASM::lmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EA744 003E7544*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803EA748 003E7548*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EA74C 003E754C*/ PPC::Runtime::ASM::blr();
}