//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "strlen.hpp"
#include "strlen.hpp"
#include "fn_TRKGetFreeBuffer.hpp"
#include "fn_TRKAppendBuffer_ui8.hpp"
#include "strlen.hpp"
#include "fn_TRKAppendBuffer_ui8.hpp"
#include "fn_TRKRequestSend.hpp"
#include "TRKGetBuffer.hpp"
#include "fn_TRKReleaseBuffer.hpp"
#include "fn_TRKReleaseBuffer.hpp"



void fn_HandleOpenFileSupportRequest(PPC::Runtime::GCContext* context)
{
/*803BF9EC 003BC7EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*803BF9F0 003BC7F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BF9F4 003BC7F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803BF9F8 003BC7F8*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*803BF9FC 003BC7FC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*803BFA00 003BC800*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*803BFA04 003BC804*/ PPC::Runtime::ASM::mr(context->r28, context->r5);
/*803BFA08 003BC808*/ PPC::Runtime::ASM::mr(context->r29, context->r6);
/*803BFA0C 003BC80C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*803BFA10 003BC810*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803BFA14 003BC814*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BFA18 003BC818*/ PPC::Runtime::ASM::bl(memset);
/*803BFA1C 003BC81C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803BFA20 003BC820*/ PPC::Runtime::ASM::li(context->r0, 0xd2);
/*803BFA24 003BC824*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803BFA28 003BC828*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803BFA2C 003BC82C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BFA30 003BC830*/ PPC::Runtime::ASM::bl(strlen);
/*803BFA34 003BC834*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x41);
/*803BFA38 003BC838*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BFA3C 003BC83C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803BFA40 003BC840*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BFA44 003BC844*/ PPC::Runtime::ASM::bl(strlen);
/*803BFA48 003BC848*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*803BFA4C 003BC84C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*803BFA50 003BC850*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803BFA54 003BC854*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803BFA58 003BC858*/ PPC::Runtime::ASM::bl(fn_TRKGetFreeBuffer);
/*803BFA5C 003BC85C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BFA60 003BC860*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*803BFA64 003BC864*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BFA68 003BC868*/ PPC::Runtime::ASM::bl(fn_TRKAppendBuffer_ui8);
/* 803BFA6C 003BC86C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803BFA70 003BC870*/ PPC::Runtime::ASM::bne(.L_803BFA94);
/*803BFA74 003BC874*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803BFA78 003BC878*/ PPC::Runtime::ASM::bl(strlen);
/*803BFA7C 003BC87C*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*803BFA80 003BC880*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BFA84 003BC884*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*803BFA88 003BC888*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*803BFA8C 003BC88C*/ PPC::Runtime::ASM::bl(fn_TRKAppendBuffer_ui8);
/*803BFA90 003BC890*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BFA94, 0x803BFA94) //this is a jump label
/*803BFA94 003BC894*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BFA98 003BC898*/ PPC::Runtime::ASM::bne(.L_803BFAE8);
/*803BFA9C 003BC89C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BFAA0 003BC8A0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*803BFAA4 003BC8A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803BFAA8 003BC8A8*/ PPC::Runtime::ASM::li(context->r5, 0x7);
/*803BFAAC 003BC8AC*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*803BFAB0 003BC8B0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803BFAB4 003BC8B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BFAB8 003BC8B8*/ PPC::Runtime::ASM::bl(fn_TRKRequestSend);
/* 803BFABC 003BC8BC  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803BFAC0 003BC8C0*/ PPC::Runtime::ASM::bne(.L_803BFAD0);
/*803BFAC4 003BC8C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BFAC8 003BC8C8*/ PPC::Runtime::ASM::bl(TRKGetBuffer);
/*803BFACC 003BC8CC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BFAD0, 0x803BFAD0) //this is a jump label
/*803BFAD0 003BC8D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*803BFAD4 003BC8D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803BFAD8 003BC8D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*803BFADC 003BC8DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803BFAE0 003BC8E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BFAE4 003BC8E4*/ PPC::Runtime::ASM::bl(fn_TRKReleaseBuffer);
RUNTIME_PPC_JUMP_LABEL(.L_803BFAE8, 0x803BFAE8) //this is a jump label
/*803BFAE8 003BC8E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BFAEC 003BC8EC*/ PPC::Runtime::ASM::bl(fn_TRKReleaseBuffer);
/*803BFAF0 003BC8F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803BFAF4 003BC8F4*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*803BFAF8 003BC8F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803BFAFC 003BC8FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BFB00 003BC900*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*803BFB04 003BC904*/ PPC::Runtime::ASM::blr();
}