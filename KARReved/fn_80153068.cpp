//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80153068(PPC::Runtime::GCContext* context)
{
/*80153068 0014FE68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015306C 0014FE6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80153070 0014FE70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80153074 0014FE74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80153078 0014FE78*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015307C 0014FE7C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80153080 0014FE80*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80153084 0014FE84*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80153088, 0x80153088) //this is a jump label
/*80153088 0014FE88*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015308C 0014FE8C*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80153090 0014FE90*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80153094 0014FE94*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80153098 0014FE98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x598, context->r30));
/*8015309C 0014FE9C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801530A0 0014FEA0*/ PPC::Runtime::ASM::beq(.L_801530AC);
/*801530A4 0014FEA4*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801530A8 0014FEA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x598, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801530AC, 0x801530AC) //this is a jump label
/*801530AC 0014FEAC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801530B0 0014FEB0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*801530B4 0014FEB4*/ PPC::Runtime::ASM::blt(.L_80153088);
/*801530B8 0014FEB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801530BC 0014FEBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801530C0 0014FEC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801530C4 0014FEC4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801530C8 0014FEC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801530CC 0014FECC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801530D0 0014FED0*/ PPC::Runtime::ASM::blr();
}