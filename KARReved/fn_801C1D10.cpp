//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_setStickXYandChargeBool.hpp"
#include "fn_801C1DD8.hpp"



void fn_801C1D10(PPC::Runtime::GCContext* context)
{
/*801C1D10 001BEB10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C1D14 001BEB14*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C1D18 001BEB18*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1900 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C1D1C 001BEB1C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801C1D20 001BEB20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C1D24 001BEB24*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*801C1D28 001BEB28*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C1D2C 001BEB2C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C1D30 001BEB30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r3));
/*801C1D34 001BEB34*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801C1D38 001BEB38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C1D3C 001BEB3C*/ PPC::Runtime::ASM::bl(fn_801C1DD8);
/*801C1D40 001BEB40*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C1D44 001BEB44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C1D48 001BEB48*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C1D4C 001BEB4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C1D50 001BEB50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C1D54 001BEB54*/ PPC::Runtime::ASM::blr();
}