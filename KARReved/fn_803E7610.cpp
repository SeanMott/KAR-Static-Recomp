//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___CARDSyncCallback.hpp"
#include "fn___CARDSyncCallback.hpp"
#include "fn_CARDCreateAsync.hpp"
#include "fn___CARDSync.hpp"



void fn_803E7610(PPC::Runtime::GCContext* context)
{
/*803E7610 003E4410*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E7614 003E4414*/ PPC::Runtime::ASM::lis(context->r7, fn___CARDSyncCallback @ Get_MemoryOffset_HighBit);
/*803E7618 003E4418*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E761C 003E441C*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn___CARDSyncCallback @ Get_MemoryOffset_LowBit);
/*803E7620 003E4420*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E7624 003E4424*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E7628 003E4428*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E762C 003E442C*/ PPC::Runtime::ASM::bl(fn_CARDCreateAsync);
/*803E7630 003E4430*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E7634 003E4434*/ PPC::Runtime::ASM::bge(.L_803E763C);
/*803E7638 003E4438*/ PPC::Runtime::ASM::b(.L_803E7644);
RUNTIME_PPC_JUMP_LABEL(.L_803E763C, 0x803E763C) //this is a jump label
/*803E763C 003E443C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E7640 003E4440*/ PPC::Runtime::ASM::bl(fn___CARDSync);
RUNTIME_PPC_JUMP_LABEL(.L_803E7644, 0x803E7644) //this is a jump label
/*803E7644 003E4444*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E7648 003E4448*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E764C 003E444C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E7650 003E4450*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E7654 003E4454*/ PPC::Runtime::ASM::blr();
}