//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8015AA5C.hpp"



void fn_8015B820(PPC::Runtime::GCContext* context)
{
/*8015B820 00158620*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015B824 00158624*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015B828 00158628*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015B82C 0015862C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015B830 00158630*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015B834 00158634*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015B838 00158638*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8015B83C 0015863C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8015B840 00158640*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*8015B844 00158644*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8015B848 00158648*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15, context->r3));
/*8015B84C 0015864C*/ PPC::Runtime::ASM::bl(fn_8015AA5C);
/*8015B850 00158650*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8015B854 00158654*/ PPC::Runtime::ASM::bne(.L_8015B868);
/*8015B858 00158658*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6930 @ Get_MemoryOffset_SDA21);
/*8015B85C 0015865C*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8015B860 00158660*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6938 @ Get_MemoryOffset_SDA21);
/*8015B864 00158664*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8015B868, 0x8015B868) //this is a jump label
/*8015B868 00158668*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015B86C 0015866C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015B870 00158670*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8015B874 00158674*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8015B878 00158678*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015B87C 0015867C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8015B880 00158680*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8015B884 00158684*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8015B888 00158688*/ PPC::Runtime::ASM::bne(.L_8015B8D4);
/*8015B88C 0015868C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8015B890 00158690*/ PPC::Runtime::ASM::beq(.L_8015B8D4);
/*8015B894 00158694*/ PPC::Runtime::ASM::bne(.L_8015B8A8);
/*8015B898 00158698*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6930 @ Get_MemoryOffset_SDA21);
/*8015B89C 0015869C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8015B8A0 001586A0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6938 @ Get_MemoryOffset_SDA21);
/*8015B8A4 001586A4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8015B8A8, 0x8015B8A8) //this is a jump label
/*8015B8A8 001586A8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8015B8AC 001586AC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8015B8B0 001586B0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8015B8B4 001586B4*/ PPC::Runtime::ASM::bne(.L_8015B8C4);
/*8015B8B8 001586B8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8015B8BC 001586BC*/ PPC::Runtime::ASM::beq(.L_8015B8C4);
/*8015B8C0 001586C0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8015B8C4, 0x8015B8C4) //this is a jump label
/*8015B8C4 001586C4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8015B8C8 001586C8*/ PPC::Runtime::ASM::bne(.L_8015B8D4);
/*8015B8CC 001586CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8015B8D0 001586D0*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8015B8D4, 0x8015B8D4) //this is a jump label
/*8015B8D4 001586D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8015B8D8 001586D8*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8015B8DC 001586DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015B8E0 001586E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015B8E4 001586E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015B8E8 001586E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015B8EC 001586EC*/ PPC::Runtime::ASM::blr();
}