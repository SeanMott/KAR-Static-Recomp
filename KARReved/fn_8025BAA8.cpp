//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025BAA8(PPC::Runtime::GCContext* context)
{
/*8025BAA8 002588A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025BAAC 002588AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025BAB0 002588B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BAB4 002588B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025BAB8 002588B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025BABC 002588BC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025BAC0 002588C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025BAC4 002588C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BAC8 002588C8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025BACC 002588CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BAD0 002588D0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025BAD4 002588D4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025BAD8 002588D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BADC 002588DC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025BAE0 002588E0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025BAE4 002588E4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025BAE8 002588E8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025BAEC 002588EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BAF0 002588F0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025BAF4 002588F4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025BAF8 002588F8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025BAFC 002588FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025BB00 00258900*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025BB04 00258904*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E9C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025BB08 00258908*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025BB0C 0025890C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025BB10 00258910*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E98 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025BB14 00258914*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025BB18 00258918*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025BB1C 0025891C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025BB20 00258920*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025BB24 00258924*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BB28 00258928*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025BB2C 0025892C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025BB30 00258930*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025BB34 00258934*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025BB38 00258938*/ PPC::Runtime::ASM::blr();
}