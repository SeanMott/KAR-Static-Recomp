//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_80312680.hpp"



void fn_8000BC30(PPC::Runtime::GCContext* context)
{
/*8000BC30 00008A30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8000BC34 00008A34*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000BC38 00008A38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000BC3C 00008A3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8000BC40 00008A40*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8000BC44 00008A44*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BC48 00008A48*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8000BC4C 00008A4C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BC50 00008A50*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000BC54 00008A54*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BC58 00008A58*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000BC5C 00008A5C*/ PPC::Runtime::ASM::stb(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd00, context->r3));
/*8000BC60 00008A60*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x374, context->r30));
/*8000BC64 00008A64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd03, context->r3));
/*8000BC68 00008A68*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd00, context->r3));
/*8000BC6C 00008A6C*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8000BC70 00008A70*/ PPC::Runtime::ASM::bne(.L_8000BCF4);
/*8000BC74 00008A74*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x375, context->r30));
/*8000BC78 00008A78*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8000BC7C 00008A7C*/ PPC::Runtime::ASM::bgt(.L_8000BC94);
/*8000BC80 00008A80*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd03, context->r31));
/*8000BC84 00008A84*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*8000BC88 00008A88*/ PPC::Runtime::ASM::bl(fn_80312680);
/*8000BC8C 00008A8C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd05, context->r31));
/*8000BC90 00008A90*/ PPC::Runtime::ASM::b(.L_8000BC98);
RUNTIME_PPC_JUMP_LABEL(.L_8000BC94, 0x8000BC94) //this is a jump label
/*8000BC94 00008A94*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd05, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8000BC98, 0x8000BC98) //this is a jump label
/*8000BC98 00008A98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x376, context->r30));
/*8000BC9C 00008A9C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd08, context->r31));
/*8000BCA0 00008AA0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x379, context->r30));
/*8000BCA4 00008AA4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0d, context->r31));
/*8000BCA8 00008AA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x377, context->r30));
/*8000BCAC 00008AAC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd09, context->r31));
/*8000BCB0 00008AB0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x378, context->r30));
/*8000BCB4 00008AB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0a, context->r31));
/*8000BCB8 00008AB8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37a, context->r30));
/*8000BCBC 00008ABC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0e, context->r31));
/*8000BCC0 00008AC0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37b, context->r30));
/*8000BCC4 00008AC4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0f, context->r31));
/*8000BCC8 00008AC8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37c, context->r30));
/*8000BCCC 00008ACC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd15, context->r31));
/*8000BCD0 00008AD0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 24, 25);
/*8000BCD4 00008AD4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd15, context->r31));
/*8000BCD8 00008AD8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37e, context->r30));
/*8000BCDC 00008ADC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd12, context->r31));
/*8000BCE0 00008AE0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37f, context->r30));
/*8000BCE4 00008AE4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd13, context->r31));
/*8000BCE8 00008AE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x380, context->r30));
/*8000BCEC 00008AEC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd14, context->r31));
/*8000BCF0 00008AF0*/ PPC::Runtime::ASM::b(.L_8000BD40);
RUNTIME_PPC_JUMP_LABEL(.L_8000BCF4, 0x8000BCF4) //this is a jump label
/*8000BCF4 00008AF4*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8000BCF8 00008AF8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8000BCFC 00008AFC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd05, context->r31));
/*8000BD00 00008B00*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8000BD04 00008B04*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd08, context->r31));
/*8000BD08 00008B08*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0d, context->r31));
/*8000BD0C 00008B0C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd09, context->r31));
/*8000BD10 00008B10*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0a, context->r31));
/*8000BD14 00008B14*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0e, context->r31));
/*8000BD18 00008B18*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0f, context->r31));
/*8000BD1C 00008B1C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd15, context->r31));
/*8000BD20 00008B20*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 24, 25);
/*8000BD24 00008B24*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd15, context->r31));
/*8000BD28 00008B28*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37e, context->r30));
/*8000BD2C 00008B2C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd12, context->r31));
/*8000BD30 00008B30*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37f, context->r30));
/*8000BD34 00008B34*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd13, context->r31));
/*8000BD38 00008B38*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x380, context->r30));
/*8000BD3C 00008B3C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd14, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8000BD40, 0x8000BD40) //this is a jump label
/*8000BD40 00008B40*/ PPC::Runtime::ASM::li(context->r0, 0x3c0);
/*8000BD44 00008B44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd18, context->r31));
/*8000BD48 00008B48*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37d, context->r30));
/*8000BD4C 00008B4C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd11, context->r31));
/*8000BD50 00008B50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8000BD54 00008B54*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8000BD58 00008B58*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BD5C 00008B5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000BD60 00008B60*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000BD64 00008B64*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8000BD68 00008B68*/ PPC::Runtime::ASM::blr();
}