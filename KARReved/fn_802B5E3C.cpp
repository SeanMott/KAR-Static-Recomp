//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8004A130.hpp"



void fn_802B5E3C(PPC::Runtime::GCContext* context)
{
/*802B5E3C 002B2C3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802B5E40 002B2C40*/ PPC::Runtime::ASM::mflr(context->r0);
/*802B5E44 002B2C44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802B5E48 002B2C48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802B5E4C 002B2C4C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802B5E50 002B2C50*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*802B5E54 002B2C54*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802B5E58 002B2C58*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*802B5E5C 002B2C5C*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_802B5E60, 0x802B5E60) //this is a jump label
/*802B5E60 002B2C60*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x78);
/*802B5E64 002B2C64*/ PPC::Runtime::ASM::blt(.L_802B5E80);
/*802B5E68 002B2C68*/ PPC::Runtime::ASM::lis(context->r3, String_ "a2d_gamehistory.cp" Get_MemoryOffset_HighBit);
/*802B5E6C 002B2C6C*/ PPC::Runtime::ASM::lis(context->r5, lbl_804C54D0 @ Get_MemoryOffset_HighBit);
/*802B5E70 002B2C70*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "a2d_gamehistory.cp" Get_MemoryOffset_LowBit);
/*802B5E74 002B2C74*/ PPC::Runtime::ASM::li(context->r4, 0x18);
/*802B5E78 002B2C78*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804C54D0 @ Get_MemoryOffset_LowBit);
/*802B5E7C 002B2C7C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_802B5E80, 0x802B5E80) //this is a jump label
/*802B5E80 002B2C80*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r30, 24);
/*802B5E84 002B2C84*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802B5E88 002B2C88*/ PPC::Runtime::ASM::bl(fn_8004A130);
/*802B5E8C 002B2C8C*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*802B5E90 002B2C90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r31));
/*802B5E94 002B2C94*/ PPC::Runtime::ASM::andi.(context->r0, context->r0, 0x5);
/*802B5E98 002B2C98*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802B5E9C 002B2C9C*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 24);
/*802B5EA0 002B2CA0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r12));
/*802B5EA4 002B2CA4*/ PPC::Runtime::ASM::neg(context->r0, context->r4);
/*802B5EA8 002B2CA8*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r4);
/*802B5EAC 002B2CAC*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*802B5EB0 002B2CB0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802B5EB4 002B2CB4*/ PPC::Runtime::ASM::bctrl();
/*802B5EB8 002B2CB8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*802B5EBC 002B2CBC*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*802B5EC0 002B2CC0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x78);
/*802B5EC4 002B2CC4*/ PPC::Runtime::ASM::blt(.L_802B5E60);
/*802B5EC8 002B2CC8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x8);
/*802B5ECC 002B2CCC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*802B5ED0 002B2CD0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r12));
/*802B5ED4 002B2CD4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802B5ED8 002B2CD8*/ PPC::Runtime::ASM::bctrl();
/*802B5EDC 002B2CDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802B5EE0 002B2CE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802B5EE4 002B2CE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802B5EE8 002B2CE8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802B5EEC 002B2CEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802B5EF0 002B2CF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802B5EF4 002B2CF4*/ PPC::Runtime::ASM::blr();
}