//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801971D8.hpp"
#include "fn_801970F0.hpp"
#include "fn_801971D8.hpp"



void fn_801C18E4(PPC::Runtime::GCContext* context)
{
/*801C18E4 001BE6E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C18E8 001BE6E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C18EC 001BE6EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C18F0 001BE6F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C18F4 001BE6F4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801C18F8 001BE6F8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C18FC 001BE6FC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801C1900 001BE700*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f4, context->r3));
/*801C1904 001BE704*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801C1908 001BE708*/ PPC::Runtime::ASM::beq(.L_801C1940);
/*801C190C 001BE70C*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*801C1910 001BE710*/ PPC::Runtime::ASM::beq(.L_801C1934);
/*801C1914 001BE714*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x40c);
/*801C1918 001BE718*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x2b4);
/*801C191C 001BE71C*/ PPC::Runtime::ASM::bl(fn_801971D8);
/*801C1920 001BE720*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801C1924 001BE724*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x900);
/*801C1928 001BE728*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8f0);
/*801C192C 001BE72C*/ PPC::Runtime::ASM::bl(fn_801970F0);
/*801C1930 001BE730*/ PPC::Runtime::ASM::b(.L_801C1940);
RUNTIME_PPC_JUMP_LABEL(.L_801C1934, 0x801C1934) //this is a jump label
/*801C1934 001BE734*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x900);
/*801C1938 001BE738*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8f0);
/*801C193C 001BE73C*/ PPC::Runtime::ASM::bl(fn_801971D8);
RUNTIME_PPC_JUMP_LABEL(.L_801C1940, 0x801C1940) //this is a jump label
/*801C1940 001BE740*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C1944 001BE744*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C1948 001BE748*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C194C 001BE74C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C1950 001BE750*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C1954 001BE754*/ PPC::Runtime::ASM::blr();
}