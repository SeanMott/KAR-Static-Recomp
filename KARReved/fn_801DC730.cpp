//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D416C.hpp"
#include "fn_hwGetSampleExtraData2.hpp"
#include "fn_8005E7D8.hpp"
#include "fn_801DD17C.hpp"



void fn_801DC730(PPC::Runtime::GCContext* context)
{
/*801DC730 001D9530*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801DC734 001D9534*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DC738 001D9538*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DC73C 001D953C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DC740 001D9540*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801DC744 001D9544*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801DC748 001D9548*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3b, context->r3));
/* 801DC74C 001D954C  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*801DC750 001D9550*/ PPC::Runtime::ASM::bne(.L_801DC784);
/*801DC754 001D9554*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/* 801DC758 001D9558  54 00 FF FF */ extrwi. context->r0 , context->r0 , 1 , 30
/*801DC75C 001D955C*/ PPC::Runtime::ASM::beq(.L_801DC784);
/*801DC760 001D9560*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r31));
/*801DC764 001D9564*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4c, context->r31));
/*801DC768 001D9568*/ PPC::Runtime::ASM::bl(fn_800D416C);
/*801DC76C 001D956C*/ PPC::Runtime::ASM::bl(fn_hwGetSampleExtraData2);
/*801DC770 001D9570*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD840 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DC774 001D9574*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 4);
/*801DC778 001D9578*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r3);
/*801DC77C 001D957C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r3));
/*801DC780 001D9580*/ PPC::Runtime::ASM::b(.L_801DC7A4);
RUNTIME_PPC_JUMP_LABEL(.L_801DC784, 0x801DC784) //this is a jump label
/*801DC784 001D9584*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801DC788 001D9588*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*801DC78C 001D958C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD844 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DC790 001D9590*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*801DC794 001D9594*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x94);
/*801DC798 001D9598*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r3);
/*801DC79C 001D959C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801DC7A0 001D95A0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_801DC7A4, 0x801DC7A4) //this is a jump label
/*801DC7A4 001D95A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x86c, context->r31));
/*801DC7A8 001D95A8*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*801DC7AC 001D95AC*/ PPC::Runtime::ASM::beq(.L_801DC7F4);
/*801DC7B0 001D95B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x860, context->r31));
/*801DC7B4 001D95B4*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*801DC7B8 001D95B8*/ PPC::Runtime::ASM::beq(.L_801DC7C0);
/*801DC7BC 001D95BC*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
RUNTIME_PPC_JUMP_LABEL(.L_801DC7C0, 0x801DC7C0) //this is a jump label
/*801DC7C0 001D95C0*/ PPC::Runtime::ASM::cmpwi(context->r30, -0x1);
/*801DC7C4 001D95C4*/ PPC::Runtime::ASM::beq(.L_801DC7E0);
/*801DC7C8 001D95C8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1C40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DC7CC 001D95CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801DC7D0 001D95D0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801DC7D4 001D95D4*/ PPC::Runtime::ASM::bl(fn_801DD17C);
/*801DC7D8 001D95D8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x860, context->r31));
/*801DC7DC 001D95DC*/ PPC::Runtime::ASM::b(.L_801DC7F0);
RUNTIME_PPC_JUMP_LABEL(.L_801DC7E0, 0x801DC7E0) //this is a jump label
/*801DC7E0 001D95E0*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801DC7E4 001D95E4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1C40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DC7E8 001D95E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x860, context->r31));
/*801DC7EC 001D95EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x868, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801DC7F0, 0x801DC7F0) //this is a jump label
/*801DC7F0 001D95F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x86c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801DC7F4, 0x801DC7F4) //this is a jump label
/*801DC7F4 001D95F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DC7F8 001D95F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DC7FC 001D95FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801DC800 001D9600*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DC804 001D9604*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801DC808 001D9608*/ PPC::Runtime::ASM::blr();
}