//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"
#include "fn_801C9DB8.hpp"



void fn_801FABD0(PPC::Runtime::GCContext* context)
{
/*801FABD0 001F79D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FABD4 001F79D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FABD8 001F79D8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E21E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FABDC 001F79DC*/ PPC::Runtime::ASM::li(context->r4, 0x16);
/*801FABE0 001F79E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FABE4 001F79E4*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801FABE8 001F79E8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E21E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FABEC 001F79EC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801FABF0 001F79F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FABF4 001F79F4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FABF8 001F79F8*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801FABFC 001F79FC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801FAC00 001F7A00*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801FAC04 001F7A04*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 31, 31);
/*801FAC08 001F7A08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAC0C 001F7A0C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801FAC10 001F7A10*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801FAC14 001F7A14*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 31, 31);
/*801FAC18 001F7A18*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801FAC1C 001F7A1C*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801FAC20 001F7A20*/ PPC::Runtime::ASM::extrwi(context->r0, context->r4, 2, 26);
/*801FAC24 001F7A24*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801FAC28 001F7A28*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 4, 26, 27);
/*801FAC2C 001F7A2C*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801FAC30 001F7A30*/ PPC::Runtime::ASM::bl(fn_801C9DB8);
/*801FAC34 001F7A34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FAC38 001F7A38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FAC3C 001F7A3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FAC40 001F7A40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FAC44 001F7A44*/ PPC::Runtime::ASM::blr();
}