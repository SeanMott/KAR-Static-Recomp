//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80343A74.hpp"



void fn_80342E20(PPC::Runtime::GCContext* context)
{
/*80342E20 0033FC20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80342E24 0033FC24*/ PPC::Runtime::ASM::mflr(context->r0);
/*80342E28 0033FC28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80342E2C 0033FC2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80342E30 0033FC30*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80342E34 0033FC34*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80342E38 0033FC38*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80342E3C 0033FC3C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80342E40 0033FC40*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80342E44 0033FC44*/ PPC::Runtime::ASM::b(.L_80342E5C);
RUNTIME_PPC_JUMP_LABEL(.L_80342E48, 0x80342E48) //this is a jump label
/*80342E48 0033FC48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80342E4C 0033FC4C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r31);
/*80342E50 0033FC50*/ PPC::Runtime::ASM::bl(fn_80343A74);
/*80342E54 0033FC54*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*80342E58 0033FC58*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80342E5C, 0x80342E5C) //this is a jump label
/*80342E5C 0033FC5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*80342E60 0033FC60*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*80342E64 0033FC64*/ PPC::Runtime::ASM::blt(.L_80342E48);
/*80342E68 0033FC68*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80342E6C 0033FC6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*80342E70 0033FC70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*80342E74 0033FC74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*80342E78 0033FC78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r29));
/*80342E7C 0033FC7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80342E80 0033FC80*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80342E84 0033FC84*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80342E88 0033FC88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80342E8C 0033FC8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80342E90 0033FC90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80342E94 0033FC94*/ PPC::Runtime::ASM::blr();
}