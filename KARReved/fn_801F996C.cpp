//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801F996C(PPC::Runtime::GCContext* context)
{
/*801F996C 001F676C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F9970 001F6770*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F9974 001F6774*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2168 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9978 001F6778*/ PPC::Runtime::ASM::li(context->r4, 0x1c);
/*801F997C 001F677C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F9980 001F6780*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801F9984 001F6784*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E216C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9988 001F6788*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801F998C 001F678C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F9990 001F6790*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F9994 001F6794*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801F9998 001F6798*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F999C 001F679C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F99A0 001F67A0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*801F99A4 001F67A4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F99A8 001F67A8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F99AC 001F67AC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801F99B0 001F67B0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F99B4 001F67B4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801F99B8 001F67B8*/ PPC::Runtime::ASM::extrwi(context->r0, context->r3, 2, 26);
/*801F99BC 001F67BC*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801F99C0 001F67C0*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 4, 26, 27);
/*801F99C4 001F67C4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801F99C8 001F67C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F99CC 001F67CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F99D0 001F67D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F99D4 001F67D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F99D8 001F67D8*/ PPC::Runtime::ASM::blr();
}