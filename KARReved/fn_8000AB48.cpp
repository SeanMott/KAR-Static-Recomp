//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022CF6C.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_8003F670.hpp"



void fn_8000AB48(PPC::Runtime::GCContext* context)
{
/*8000AB48 00007948*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*8000AB4C 0000794C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000AB50 00007950*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*8000AB54 00007954*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8000AB58 00007958*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8000AB5C 0000795C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8000AB60 00007960*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8000AB64 00007964*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000AB68 00007968*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8000AB6C 0000796C*/ PPC::Runtime::ASM::bne(.L_8000AB7C);
/*8000AB70 00007970*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8000AB74 00007974*/ PPC::Runtime::ASM::bl(fn_8022CF6C);
/*8000AB78 00007978*/ PPC::Runtime::ASM::b(.L_8000ABD4);
RUNTIME_PPC_JUMP_LABEL(.L_8000AB7C, 0x8000AB7C) //this is a jump label
/*8000AB7C 0000797C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000AB80 00007980*/ PPC::Runtime::ASM::bl(fn_8003F670);
/*8000AB84 00007984*/ PPC::Runtime::ASM::mulli(context->r0, context->r29, 0x24);
/*8000AB88 00007988*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*8000AB8C 0000798C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*8000AB90 00007990*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*8000AB94 00007994*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000AB98 00007998*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000AB9C 0000799C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8000ABA0 000079A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4));
/*8000ABA4 000079A4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8000ABA8 000079A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000ABAC 000079AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*8000ABB0 000079B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*8000ABB4 000079B4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8000ABB8 000079B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8000ABBC 000079BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r4));
/*8000ABC0 000079C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*8000ABC4 000079C4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8000ABC8 000079C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000ABCC 000079CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*8000ABD0 000079D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_8000ABD4, 0x8000ABD4) //this is a jump label
/*8000ABD4 000079D4*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x8);
/*8000ABD8 000079D8*/ PPC::Runtime::ASM::bgt(.L_8000AC38);
/*8000ABDC 000079DC*/ PPC::Runtime::ASM::lis(context->r3, jumptable_80495760 @ Get_MemoryOffset_HighBit);
/*8000ABE0 000079E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*8000ABE4 000079E4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_80495760 @ Get_MemoryOffset_LowBit);
/*8000ABE8 000079E8*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*8000ABEC 000079EC*/ PPC::Runtime::ASM::mtctr(context->r0);
/*8000ABF0 000079F0*/ PPC::Runtime::ASM::bctr();
/*8000ABF4 000079F4*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*8000ABF8 000079F8*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000ABFC 000079FC*/ PPC::Runtime::ASM::li(context->r31, 0x2);
/*8000AC00 00007A00*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC04 00007A04*/ PPC::Runtime::ASM::li(context->r31, 0x3);
/*8000AC08 00007A08*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC0C 00007A0C*/ PPC::Runtime::ASM::li(context->r31, 0x4);
/*8000AC10 00007A10*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC14 00007A14*/ PPC::Runtime::ASM::li(context->r31, 0x5);
/*8000AC18 00007A18*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC1C 00007A1C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8000AC20 00007A20*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC24 00007A24*/ PPC::Runtime::ASM::li(context->r31, 0x6);
/*8000AC28 00007A28*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC2C 00007A2C*/ PPC::Runtime::ASM::li(context->r31, 0x7);
/*8000AC30 00007A30*/ PPC::Runtime::ASM::b(.L_8000AC38);
/*8000AC34 00007A34*/ PPC::Runtime::ASM::li(context->r31, 0x8);
RUNTIME_PPC_JUMP_LABEL(.L_8000AC38, 0x8000AC38) //this is a jump label
/*8000AC38 00007A38*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*8000AC3C 00007A3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8000AC40 00007A40*/ PPC::Runtime::ASM::lfsx(context->f1, context->r3, context->r0);
/*8000AC44 00007A44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8000AC48 00007A48*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8000AC4C 00007A4C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000AC50 00007A50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8000AC54 00007A54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AC58 00007A58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*8000AC5C 00007A5C*/ PPC::Runtime::ASM::blr();
}