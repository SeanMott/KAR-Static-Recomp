//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7A64.hpp"
#include "fn_801097C4.hpp"
#include "fn_80109D80.hpp"



void fn_800D58F4(PPC::Runtime::GCContext* context)
{
/*800D58F4 000D26F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D58F8 000D26F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D58FC 000D26FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5900 000D2700*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D5904 000D2704*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D5908 000D2708*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800D590C 000D270C*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D5910 000D2710*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800D5914 000D2714*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r4));
/*800D5918 000D2718*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800D591C 000D271C*/ PPC::Runtime::ASM::beq(.L_800D593C);
/*800D5920 000D2720*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D5924 000D2724*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800D5928 000D2728*/ PPC::Runtime::ASM::bne(.L_800D593C);
/*800D592C 000D272C*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800D5930 000D2730*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r0);
/*800D5934 000D2734*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x750, context->r3));
/*800D5938 000D2738*/ PPC::Runtime::ASM::b(.L_800D5950);
RUNTIME_PPC_JUMP_LABEL(.L_800D593C, 0x800D593C) //this is a jump label
/*800D593C 000D273C*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D5940 000D2740*/ PPC::Runtime::ASM::li(context->r4, 0xf2d);
/*800D5944 000D2744*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6098 @ Get_MemoryOffset_SDA21);
/*800D5948 000D2748*/ PPC::Runtime::ASM::bl(fn___assert);
/*800D594C 000D274C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D5950, 0x800D5950) //this is a jump label
/*800D5950 000D2750*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D5954 000D2754*/ PPC::Runtime::ASM::bl(fn_800F7A64);
/*800D5958 000D2758*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3f);
/*800D595C 000D275C*/ PPC::Runtime::ASM::beq(.L_800D5980);
/*800D5960 000D2760*/ PPC::Runtime::ASM::bge(.L_800D5990);
/*800D5964 000D2764*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3e);
/*800D5968 000D2768*/ PPC::Runtime::ASM::bge(.L_800D5970);
/*800D596C 000D276C*/ PPC::Runtime::ASM::b(.L_800D5990);
RUNTIME_PPC_JUMP_LABEL(.L_800D5970, 0x800D5970) //this is a jump label
/*800D5970 000D2770*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D5974 000D2774*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D5978 000D2778*/ PPC::Runtime::ASM::bl(fn_801097C4);
/*800D597C 000D277C*/ PPC::Runtime::ASM::b(.L_800D59A0);
RUNTIME_PPC_JUMP_LABEL(.L_800D5980, 0x800D5980) //this is a jump label
/*800D5980 000D2780*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D5984 000D2784*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D5988 000D2788*/ PPC::Runtime::ASM::bl(fn_80109D80);
/*800D598C 000D278C*/ PPC::Runtime::ASM::b(.L_800D59A0);
RUNTIME_PPC_JUMP_LABEL(.L_800D5990, 0x800D5990) //this is a jump label
/*800D5990 000D2790*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D5994 000D2794*/ PPC::Runtime::ASM::li(context->r4, 0xf57);
/*800D5998 000D2798*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6098 @ Get_MemoryOffset_SDA21);
/*800D599C 000D279C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D59A0, 0x800D59A0) //this is a jump label
/*800D59A0 000D27A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D59A4 000D27A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D59A8 000D27A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D59AC 000D27AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D59B0 000D27B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D59B4 000D27B4*/ PPC::Runtime::ASM::blr();
}