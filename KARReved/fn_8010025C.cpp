//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E86CC.hpp"
#include "fn_801002DC.hpp"



void fn_8010025C(PPC::Runtime::GCContext* context)
{
/*8010025C 000FD05C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80100260 000FD060*/ PPC::Runtime::ASM::mflr(context->r0);
/*80100264 000FD064*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80100268 000FD068*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8010026C 000FD06C*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*80100270 000FD070*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80100274 000FD074*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80100278 000FD078*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*8010027C 000FD07C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80100280 000FD080*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80100284 000FD084*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80100288 000FD088*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010028C 000FD08C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r5));
/*80100290 000FD090*/ PPC::Runtime::ASM::b(.L_801002B0);
RUNTIME_PPC_JUMP_LABEL(.L_80100294, 0x80100294) //this is a jump label
/*80100294 000FD094*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*80100298 000FD098*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8010029C 000FD09C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*801002A0 000FD0A0*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r31);
/*801002A4 000FD0A4*/ PPC::Runtime::ASM::bl(fn_800E86CC);
/*801002A8 000FD0A8*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*801002AC 000FD0AC*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801002B0, 0x801002B0) //this is a jump label
/*801002B0 000FD0B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*801002B4 000FD0B4*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*801002B8 000FD0B8*/ PPC::Runtime::ASM::blt(.L_80100294);
/*801002BC 000FD0BC*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*801002C0 000FD0C0*/ PPC::Runtime::ASM::bl(fn_801002DC);
/*801002C4 000FD0C4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*801002C8 000FD0C8*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*801002CC 000FD0CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801002D0 000FD0D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801002D4 000FD0D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801002D8 000FD0D8*/ PPC::Runtime::ASM::blr();
}