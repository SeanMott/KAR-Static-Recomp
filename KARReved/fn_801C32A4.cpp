//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019FE98.hpp"
#include "fn_801C2268.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_801C3F40.hpp"



void fn_801C32A4(PPC::Runtime::GCContext* context)
{
/*801C32A4 001C00A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C32A8 001C00A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C32AC 001C00AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C32B0 001C00B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C32B4 001C00B4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C32B8 001C00B8*/ PPC::Runtime::ASM::bl(fn_8019FE98);
/*801C32BC 001C00BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C32C0 001C00C0*/ PPC::Runtime::ASM::bl(fn_801C2268);
/*801C32C4 001C00C4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C32C8 001C00C8*/ PPC::Runtime::ASM::bne(.L_801C32E0);
/*801C32CC 001C00CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C32D0 001C00D0*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801C32D4 001C00D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C32D8 001C00D8*/ PPC::Runtime::ASM::bl(fn_801C3F40);
/*801C32DC 001C00DC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801C32E0, 0x801C32E0) //this is a jump label
/*801C32E0 001C00E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C32E4 001C00E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C32E8 001C00E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C32EC 001C00EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C32F0 001C00F0*/ PPC::Runtime::ASM::blr();
}