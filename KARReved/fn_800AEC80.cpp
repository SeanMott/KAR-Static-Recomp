//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005FD38.hpp"
#include "fn_8005FD9C.hpp"
#include "fn_8005FA48.hpp"
#include "fn_8005FAE4.hpp"
#include "fn_8005FB64.hpp"
#include "fn_8005B924.hpp"
#include "fn_8005E788.hpp"
#include "fn_8005E5D0.hpp"
#include "fn_8005B918.hpp"



void fn_800AEC80(PPC::Runtime::GCContext* context)
{
/*800AEC80 000ABA80*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AEC84 000ABA84*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AEC88 000ABA88*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*800AEC8C 000ABA8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AEC90 000ABA90*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AEC94 000ABA94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AEC98 000ABA98*/ PPC::Runtime::ASM::bne(.L_800AECCC);
/*800AEC9C 000ABA9C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800AECA0 000ABAA0*/ PPC::Runtime::ASM::bl(fn_8005FD38);
/*800AECA4 000ABAA4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800AECA8 000ABAA8*/ PPC::Runtime::ASM::bl(fn_8005FD9C);
/*800AECAC 000ABAAC*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*800AECB0 000ABAB0*/ PPC::Runtime::ASM::bl(fn_8005FA48);
/*800AECB4 000ABAB4*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*800AECB8 000ABAB8*/ PPC::Runtime::ASM::bl(fn_8005FAE4);
/*800AECBC 000ABABC*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*800AECC0 000ABAC0*/ PPC::Runtime::ASM::bl(fn_8005FB64);
/*800AECC4 000ABAC4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800AECC8 000ABAC8*/ PPC::Runtime::ASM::b(.L_800AECE0);
RUNTIME_PPC_JUMP_LABEL(.L_800AECCC, 0x800AECCC) //this is a jump label
/*800AECCC 000ABACC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*800AECD0 000ABAD0*/ PPC::Runtime::ASM::beq(.L_800AECDC);
/*800AECD4 000ABAD4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3);
/*800AECD8 000ABAD8*/ PPC::Runtime::ASM::bne(.L_800AECE0);
RUNTIME_PPC_JUMP_LABEL(.L_800AECDC, 0x800AECDC) //this is a jump label
/*800AECDC 000ABADC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800AECE0, 0x800AECE0) //this is a jump label
/*800AECE0 000ABAE0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800AECE4 000ABAE4*/ PPC::Runtime::ASM::beq(.L_800AED10);
/*800AECE8 000ABAE8*/ PPC::Runtime::ASM::bl(fn_8005B924);
/*800AECEC 000ABAEC*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AECF0 000ABAF0*/ PPC::Runtime::ASM::addi(context->r31, context->r4, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AECF4 000ABAF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800AECF8 000ABAF8*/ PPC::Runtime::ASM::cmpw(context->r0, context->r3);
/*800AECFC 000ABAFC*/ PPC::Runtime::ASM::beq(.L_800AED10);
/*800AED00 000ABB00*/ PPC::Runtime::ASM::bl(fn_8005E788);
/*800AED04 000ABB04*/ PPC::Runtime::ASM::bl(fn_8005E5D0);
/*800AED08 000ABB08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800AED0C 000ABB0C*/ PPC::Runtime::ASM::bl(fn_8005B918);
RUNTIME_PPC_JUMP_LABEL(.L_800AED10, 0x800AED10) //this is a jump label
/*800AED10 000ABB10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AED14 000ABB14*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AED18 000ABB18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AED1C 000ABB1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AED20 000ABB20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AED24 000ABB24*/ PPC::Runtime::ASM::blr();
}