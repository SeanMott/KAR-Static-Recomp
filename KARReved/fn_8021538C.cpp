//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_8021538C(PPC::Runtime::GCContext* context)
{
/*8021538C 0021218C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80215390 00212190*/ PPC::Runtime::ASM::mflr(context->r0);
/*80215394 00212194*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80215398 00212198*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8021539C 0021219C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802153A0 002121A0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802153A4 002121A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*802153A8 002121A8*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*802153AC 002121AC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E25E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802153B0 002121B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802153B4 002121B4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E25E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802153B8 002121B8*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*802153BC 002121BC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802153C0 002121C0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802153C4 002121C4*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*802153C8 002121C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802153CC 002121CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802153D0 002121D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802153D4 002121D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802153D8 002121D8*/ PPC::Runtime::ASM::blr();
}