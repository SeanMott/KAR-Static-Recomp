//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8019EB0C(PPC::Runtime::GCContext* context)
{
/*8019EB0C 0019B90C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019EB10 0019B910*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019EB14 0019B914*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019EB18 0019B918*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019EB1C 0019B91C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8019EB20 0019B920*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x800, context->r3));
/*8019EB24 0019B924*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*8019EB28 0019B928*/ PPC::Runtime::ASM::beq(.L_8019EB34);
/*8019EB2C 0019B92C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8019EB30 0019B930*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8019EB34, 0x8019EB34) //this is a jump label
/*8019EB34 0019B934*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x821, context->r31));
/*8019EB38 0019B938*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8019EB3C 0019B93C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 2, 29, 29);
/*8019EB40 0019B940*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x821, context->r31));
/*8019EB44 0019B944*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019EB48 0019B948*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019EB4C 0019B94C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019EB50 0019B950*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8019EB54 0019B954*/ PPC::Runtime::ASM::blr();
}