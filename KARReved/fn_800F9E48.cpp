//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F784C.hpp"
#include "fn_800E9A4C.hpp"
#include "fn_800E9EA8.hpp"
#include "fn_800E9F30.hpp"



void fn_800F9E48(PPC::Runtime::GCContext* context)
{
/*800F9E48 000F6C48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F9E4C 000F6C4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9E50 000F6C50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9E54 000F6C54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9E58 000F6C58*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F9E5C 000F6C5C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9E60 000F6C60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9E64 000F6C64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F9E68 000F6C68*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*800F9E6C 000F6C6C*/ PPC::Runtime::ASM::bl(fn_800F784C);
/*800F9E70 000F6C70*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800F9E74, 0x800F9E74) //this is a jump label
/*800F9E74 000F6C74*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x134);
/*800F9E78 000F6C78*/ PPC::Runtime::ASM::bl(fn_800E9A4C);
/*800F9E7C 000F6C7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F9E80 000F6C80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*800F9E84 000F6C84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800F9E88 000F6C88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*800F9E8C 000F6C8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800F9E90 000F6C90*/ PPC::Runtime::ASM::bl(fn_800E9EA8);
/*800F9E94 000F6C94*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
/*800F9E98 000F6C98*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800F9E9C 000F6C9C*/ PPC::Runtime::ASM::bl(fn_800E9F30);
/*800F9EA0 000F6CA0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*800F9EA4 000F6CA4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*800F9EA8 000F6CA8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*800F9EAC 000F6CAC*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x14);
/*800F9EB0 000F6CB0*/ PPC::Runtime::ASM::blt(.L_800F9E74);
/*800F9EB4 000F6CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9EB8 000F6CB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9EBC 000F6CBC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9EC0 000F6CC0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9EC4 000F6CC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9EC8 000F6CC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F9ECC 000F6CCC*/ PPC::Runtime::ASM::blr();
}