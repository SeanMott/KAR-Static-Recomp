//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_abilityTimer_Plasma_removeEffect.hpp"
#include "fn_801B4408.hpp"
#include "fn_801B43A4.hpp"



void fn_801B4048(PPC::Runtime::GCContext* context)
{
/*801B4048 001B0E48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B404C 001B0E4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B4050 001B0E50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4054 001B0E54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4058 001B0E58*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B405C 001B0E5C*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801B4060 001B0E60*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B4064 001B0E64*/ PPC::Runtime::ASM::beq(.L_801B40A0);
/*801B4068 001B0E68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B406C 001B0E6C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B4070 001B0E70*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B4074 001B0E74*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r5);
/*801B4078 001B0E78*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r5);
/*801B407C 001B0E7C*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*801B4080 001B0E80*/ PPC::Runtime::ASM::beq(.L_801B4094);
/*801B4084 001B0E84*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Plasma_removeEffect);
/*801B4088 001B0E88*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B408C 001B0E8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B4090 001B0E90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B4094, 0x801B4094) //this is a jump label
/*801B4094 001B0E94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4098 001B0E98*/ PPC::Runtime::ASM::bl(fn_801B4408);
/*801B409C 001B0E9C*/ PPC::Runtime::ASM::b(.L_801B40A8);
RUNTIME_PPC_JUMP_LABEL(.L_801B40A0, 0x801B40A0) //this is a jump label
/*801B40A0 001B0EA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B40A4 001B0EA4*/ PPC::Runtime::ASM::bl(fn_801B43A4);
RUNTIME_PPC_JUMP_LABEL(.L_801B40A8, 0x801B40A8) //this is a jump label
/*801B40A8 001B0EA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B40AC 001B0EAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B40B0 001B0EB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B40B4 001B0EB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B40B8 001B0EB8*/ PPC::Runtime::ASM::blr();
}