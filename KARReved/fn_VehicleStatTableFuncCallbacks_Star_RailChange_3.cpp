//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E48BC.hpp"
#include "fn_801D9264.hpp"
#include "fn_801EDA28.hpp"
#include "fn_801EDC40.hpp"
#include "fn_801EDB48.hpp"
#include "fn_801EDBBC.hpp"
#include "fn_801EDBFC.hpp"
#include "fn_801EC118.hpp"
#include "fn_801EC254.hpp"



void fn_VehicleStatTableFuncCallbacks_Star_RailChange_3(PPC::Runtime::GCContext* context)
{
/*801F0A54 001ED854*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F0A58 001ED858*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F0A5C 001ED85C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0A60 001ED860*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F0A64 001ED864*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F0A68 001ED868*/ PPC::Runtime::ASM::bl(fn_801E48BC);
/*801F0A6C 001ED86C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0A70 001ED870*/ PPC::Runtime::ASM::bl(fn_801D9264);
/*801F0A74 001ED874*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801F0A78 001ED878*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0A7C 001ED87C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r4));
/*801F0A80 001ED880*/ PPC::Runtime::ASM::bl(fn_801EDA28);
/*801F0A84 001ED884*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0A88 001ED888*/ PPC::Runtime::ASM::bl(fn_801EDC40);
/*801F0A8C 001ED88C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0A90 001ED890*/ PPC::Runtime::ASM::bl(fn_801EDB48);
/*801F0A94 001ED894*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0A98 001ED898*/ PPC::Runtime::ASM::bl(fn_801EDBBC);
/*801F0A9C 001ED89C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0AA0 001ED8A0*/ PPC::Runtime::ASM::bl(fn_801EDBFC);
/*801F0AA4 001ED8A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0AA8 001ED8A8*/ PPC::Runtime::ASM::bl(fn_801EC118);
/*801F0AAC 001ED8AC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0AB0 001ED8B0*/ PPC::Runtime::ASM::bl(fn_801EC254);
/*801F0AB4 001ED8B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0AB8 001ED8B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F0ABC 001ED8BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F0AC0 001ED8C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F0AC4 001ED8C4*/ PPC::Runtime::ASM::blr();
}