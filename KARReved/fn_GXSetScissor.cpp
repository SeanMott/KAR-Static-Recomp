//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetScissor(PPC::Runtime::GCContext* context)
{
/*803D0A28 003CD828*/ PPC::Runtime::ASM::lwz(context->r8, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D0A2C 003CD82C*/ PPC::Runtime::ASM::addi(context->r9, context->r3, 0x156);
/*803D0A30 003CD830*/ PPC::Runtime::ASM::addi(context->r10, context->r4, 0x156);
/*803D0A34 003CD834*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r8));
/*803D0A38 003CD838*/ PPC::Runtime::ASM::subi(context->r0, context->r5, 0x1);
/*803D0A3C 003CD83C*/ PPC::Runtime::ASM::slwi(context->r4, context->r9, 12);
/*803D0A40 003CD840*/ PPC::Runtime::ASM::clrrwi(context->r3, context->r3, 11);
/*803D0A44 003CD844*/ PPC::Runtime::ASM::or(context->r3, context->r3, context->r10);
/*803D0A48 003CD848*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r8));
/*803D0A4C 003CD84C*/ PPC::Runtime::ASM::subi(context->r3, context->r6, 0x1);
/*803D0A50 003CD850*/ PPC::Runtime::ASM::add(context->r6, context->r10, context->r3);
/*803D0A54 003CD854*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r8));
/*803D0A58 003CD858*/ PPC::Runtime::ASM::add(context->r0, context->r9, context->r0);
/*803D0A5C 003CD85C*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r5, 0, 20, 8);
/*803D0A60 003CD860*/ PPC::Runtime::ASM::or(context->r3, context->r3, context->r4);
/*803D0A64 003CD864*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r8));
/*803D0A68 003CD868*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 12);
/*803D0A6C 003CD86C*/ PPC::Runtime::ASM::li(context->r5, 0x61);
/*803D0A70 003CD870*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r8));
/*803D0A74 003CD874*/ PPC::Runtime::ASM::lis(context->r4, 0xcc01);
/*803D0A78 003CD878*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803D0A7C 003CD87C*/ PPC::Runtime::ASM::clrrwi(context->r7, context->r7, 11);
/*803D0A80 003CD880*/ PPC::Runtime::ASM::or(context->r6, context->r7, context->r6);
/*803D0A84 003CD884*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r8));
/*803D0A88 003CD888*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r8));
/*803D0A8C 003CD88C*/ PPC::Runtime::ASM::rlwinm(context->r6, context->r6, 0, 20, 8);
/*803D0A90 003CD890*/ PPC::Runtime::ASM::or(context->r3, context->r6, context->r3);
/*803D0A94 003CD894*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r8));
/*803D0A98 003CD898*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803D0A9C 003CD89C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r8));
/*803D0AA0 003CD8A0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803D0AA4 003CD8A4*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803D0AA8 003CD8A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r8));
/*803D0AAC 003CD8AC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803D0AB0 003CD8B0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r8));
/*803D0AB4 003CD8B4*/ PPC::Runtime::ASM::blr();
}