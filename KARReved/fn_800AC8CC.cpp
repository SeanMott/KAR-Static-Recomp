//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_debug_mainMenuThink.hpp"
#include "fn_800ACE18.hpp"



void fn_800AC8CC(PPC::Runtime::GCContext* context)
{
/*800AC8CC 000A96CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AC8D0 000A96D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AC8D4 000A96D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AC8D8 000A96D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AC8DC 000A96DC*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1805DD6A4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AC8E0 000A96E0*/ PPC::Runtime::ASM::b(.L_800AC97C);
RUNTIME_PPC_JUMP_LABEL(.L_800AC8E4, 0x800AC8E4) //this is a jump label
/*800AC8E4 000A96E4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/*800AC8E8 000A96E8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 29, 29);
/*800AC8EC 000A96EC*/ PPC::Runtime::ASM::beq(.L_800AC914);
/*800AC8F0 000A96F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800AC8F4 000A96F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC8F8 000A96F8*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x80);
/*800AC8FC 000A96FC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC900 000A9700*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800AC904 000A9704*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC908 000A9708*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x40);
/*800AC90C 000A970C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC910 000A9710*/ PPC::Runtime::ASM::b(.L_800AC95C);
RUNTIME_PPC_JUMP_LABEL(.L_800AC914, 0x800AC914) //this is a jump label
/*800AC914 000A9714*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800AC918 000A9718*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC91C 000A971C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 25);
/*800AC920 000A9720*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC924 000A9724*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800AC928 000A9728*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC92C 000A972C*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 26, 24);
/*800AC930 000A9730*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*800AC934 000A9734*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/* 800AC938 000A9738  54 60 07 FF */ clrlwi. context->r0 , context->r3 , 31
/*800AC93C 000A973C*/ PPC::Runtime::ASM::beq(.L_800AC94C);
/*800AC940 000A9740*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r3, 0, 24, 30);
/*800AC944 000A9744*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/*800AC948 000A9748*/ PPC::Runtime::ASM::b(.L_800AC95C);
RUNTIME_PPC_JUMP_LABEL(.L_800AC94C, 0x800AC94C) //this is a jump label
/*800AC94C 000A974C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 30, 30);
/*800AC950 000A9750*/ PPC::Runtime::ASM::bne(.L_800AC95C);
/*800AC954 000A9754*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AC958 000A9758*/ PPC::Runtime::ASM::bl(fn_debug_mainMenuThink);
RUNTIME_PPC_JUMP_LABEL(.L_800AC95C, 0x800AC95C) //this is a jump label
/*800AC95C 000A975C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/*800AC960 000A9760*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 27);
/*800AC964 000A9764*/ PPC::Runtime::ASM::beq(.L_800AC978);
/*800AC968 000A9768*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AC96C 000A976C*/ PPC::Runtime::ASM::bl(fn_800ACE18);
/*800AC970 000A9770*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800AC974 000A9774*/ PPC::Runtime::ASM::b(.L_800AC97C);
RUNTIME_PPC_JUMP_LABEL(.L_800AC978, 0x800AC978) //this is a jump label
/*800AC978 000A9778*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800AC97C, 0x800AC97C) //this is a jump label
/*800AC97C 000A977C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800AC980 000A9780*/ PPC::Runtime::ASM::bne(.L_800AC8E4);
/*800AC984 000A9784*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AC988 000A9788*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AC98C 000A978C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AC990 000A9790*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AC994 000A9794*/ PPC::Runtime::ASM::blr();
}