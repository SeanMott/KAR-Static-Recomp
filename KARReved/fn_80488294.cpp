//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSCreateAlarm.hpp"
#include "OSInitThreadQueue.hpp"
#include "fn_804893D8.hpp"
#include "fn_80488268.hpp"
#include "fn_80488268.hpp"
#include "fn_804893F8.hpp"
#include "OSSetAlarm.hpp"
#include "fn_OSSleepThread.hpp"
#include "fn_8047B578.hpp"
#include "fn_IPClearConfigError.hpp"



void fn_80488294(PPC::Runtime::GCContext* context)
{
/*80488294 00485094*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80488298 00485098*/ PPC::Runtime::ASM::mflr(context->r0);
/*8048829C 0048509C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*804882A0 004850A0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*804882A4 004850A4*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*804882A8 004850A8*/ PPC::Runtime::ASM::lis(context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*804882AC 004850AC*/ PPC::Runtime::ASM::addi(context->r29, context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*804882B0 004850B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r29));
/*804882B4 004850B4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*804882B8 004850B8*/ PPC::Runtime::ASM::bne(.L_80488320);
/*804882BC 004850BC*/ PPC::Runtime::ASM::addi(context->r28, context->r29, 0xd0);
/*804882C0 004850C0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*804882C4 004850C4*/ PPC::Runtime::ASM::bl(OSCreateAlarm);
/*804882C8 004850C8*/ PPC::Runtime::ASM::lis(context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*804882CC 004850CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*804882D0 004850D0*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x100);
/*804882D4 004850D4*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*804882D8 004850D8*/ PPC::Runtime::ASM::bl(OSInitThreadQueue);
/*804882DC 004850DC*/ PPC::Runtime::ASM::bl(fn_804893D8);
/*804882E0 004850E0*/ PPC::Runtime::ASM::lis(context->r3, fn_80488268 @ Get_MemoryOffset_HighBit);
/*804882E4 004850E4*/ PPC::Runtime::ASM::lis(context->r30, 0x26a);
/*804882E8 004850E8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, fn_80488268 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_804882EC, 0x804882EC) //this is a jump label
/*804882EC 004850EC*/ PPC::Runtime::ASM::bl(fn_804893F8);
/*804882F0 004850F0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*804882F4 004850F4*/ PPC::Runtime::ASM::beq(.L_80488318);
/*804882F8 004850F8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*804882FC 004850FC*/ PPC::Runtime::ASM::mr(context->r7, context->r31);
/*80488300 00485100*/ PPC::Runtime::ASM::subi(context->r6, context->r30, 0x4e0);
/*80488304 00485104*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80488308 00485108*/ PPC::Runtime::ASM::bl(OSSetAlarm);
/*8048830C 0048510C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*80488310 00485110*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
/*80488314 00485114*/ PPC::Runtime::ASM::b(.L_804882EC);
RUNTIME_PPC_JUMP_LABEL(.L_80488318, 0x80488318) //this is a jump label
/*80488318 00485118*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8048831C 0048511C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_80488320, 0x80488320) //this is a jump label
/*80488320 00485120*/ PPC::Runtime::ASM::lis(context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*80488324 00485124*/ PPC::Runtime::ASM::addi(context->r31, context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*80488328 00485128*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8048832C 0048512C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80488330 00485130*/ PPC::Runtime::ASM::bne(.L_80488348);
/*80488334 00485134*/ PPC::Runtime::ASM::bl(fn_8047B578);
/*80488338 00485138*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8048833C 0048513C*/ PPC::Runtime::ASM::bl(fn_IPClearConfigError);
/*80488340 00485140*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80488344 00485144*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80488348, 0x80488348) //this is a jump label
/*80488348 00485148*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8048834C 0048514C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80488350 00485150*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80488354 00485154*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80488358 00485158*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8048835C 0048515C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80488360 00485160*/ PPC::Runtime::ASM::blr();
}