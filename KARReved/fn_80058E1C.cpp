//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80058E1C(PPC::Runtime::GCContext* context)
{
/*80058E1C 00055C1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80058E20 00055C20*/ PPC::Runtime::ASM::mflr(context->r0);
/*80058E24 00055C24*/ PPC::Runtime::ASM::cmpwi(context->r6, 0x0);
/*80058E28 00055C28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80058E2C 00055C2C*/ PPC::Runtime::ASM::beq(.L_80058E48);
/*80058E30 00055C30*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_200 @ Get_MemoryOffset_HighBit);
/*80058E34 00055C34*/ PPC::Runtime::ASM::lis(context->r5, String_ "!cancelfla" Get_MemoryOffset_HighBit);
/*80058E38 00055C38*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_200 @ Get_MemoryOffset_LowBit);
/*80058E3C 00055C3C*/ PPC::Runtime::ASM::li(context->r4, 0x4f);
/*80058E40 00055C40*/ PPC::Runtime::ASM::addi(context->r5, context->r5, String_ "!cancelfla" Get_MemoryOffset_LowBit);
/*80058E44 00055C44*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80058E48, 0x80058E48) //this is a jump label
/*80058E48 00055C48*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80058E4C 00055C4C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD5A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80058E50 00055C50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80058E54 00055C54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80058E58 00055C58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80058E5C 00055C5C*/ PPC::Runtime::ASM::blr();
}