//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_lbLoadArchive.hpp"



void fn_cmLoadCommon(PPC::Runtime::GCContext* context)
{
/*800BC3E0 000B91E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800BC3E4 000B91E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BC3E8 000B91E8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_785 @ Get_MemoryOffset_HighBit);
/*800BC3EC 000B91EC*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BC3F0 000B91F0*/ PPC::Runtime::ASM::addi(context->r8, context->r3, MemoryOffset_785 @ Get_MemoryOffset_LowBit);
/*800BC3F4 000B91F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BC3F8 000B91F8*/ PPC::Runtime::ASM::addi(context->r7, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BC3FC 000B91FC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800BC400 000B9200*/ PPC::Runtime::ASM::addi(context->r5, context->r7, 0x234);
/*800BC404 000B9204*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*800BC408 000B9208*/ PPC::Runtime::ASM::addi(context->r4, context->r8, 0x0);
/*800BC40C 000B920C*/ PPC::Runtime::ASM::addi(context->r6, context->r8, 0x10);
/*800BC410 000B9210*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x238);
/*800BC414 000B9214*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x24);
/*800BC418 000B9218*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800BC41C 000B921C*/ PPC::Runtime::ASM::bl(fn_lbLoadArchive);
/*800BC420 000B9220*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BC424 000B9224*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BC428 000B9228*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800BC42C 000B922C*/ PPC::Runtime::ASM::blr();
}