//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098F60.hpp"



void fn_800A1614(PPC::Runtime::GCContext* context)
{
/*800A1614 0009E414*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800A1618 0009E418*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A161C 0009E41C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A1620 0009E420*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*800A1624 0009E424*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*800A1628 0009E428*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A162C 0009E42C*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A1630 0009E430*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A1634 0009E434*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A1638 0009E438*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800A163C 0009E43C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A1640 0009E440*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A1644 0009E444*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A1648 0009E448*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A164C 0009E44C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800A1650 0009E450*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A1654 0009E454*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800A1658 0009E458*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A165C 0009E45C*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*800A1660 0009E460*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A1664 0009E464*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*800A1668 0009E468*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A166C 0009E46C*/ PPC::Runtime::ASM::bl(fn_80098F60);
/*800A1670 0009E470*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A1674 0009E474*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A1678 0009E478*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800A167C 0009E47C*/ PPC::Runtime::ASM::blr();
}