//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006C1DC.hpp"
#include "fn_800D59F0.hpp"



void fn_800D5D9C(PPC::Runtime::GCContext* context)
{
/*800D5D9C 000D2B9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800D5DA0 000D2BA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D5DA4 000D2BA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D5DA8 000D2BA8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D5DAC 000D2BAC*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800D5DB0 000D2BB0*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D5DB4 000D2BB4*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800D5DB8 000D2BB8*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D5DBC 000D2BBC*/ PPC::Runtime::ASM::lis(context->r6, MemoryOffset_920 @ Get_MemoryOffset_HighBit);
/*800D5DC0 000D2BC0*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*800D5DC4 000D2BC4*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800D5DC8 000D2BC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r5));
/*800D5DCC 000D2BCC*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*800D5DD0 000D2BD0*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800D5DD4 000D2BD4*/ PPC::Runtime::ASM::addi(context->r31, context->r6, MemoryOffset_920 @ Get_MemoryOffset_LowBit);
/*800D5DD8 000D2BD8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800D5DDC 000D2BDC*/ PPC::Runtime::ASM::bne(.L_800D5DF0);
/*800D5DE0 000D2BE0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x50);
/*800D5DE4 000D2BE4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x84);
/*800D5DE8 000D2BE8*/ PPC::Runtime::ASM::li(context->r4, 0x82);
/*800D5DEC 000D2BEC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D5DF0, 0x800D5DF0) //this is a jump label
/*800D5DF0 000D2BF0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800D5DF4 000D2BF4*/ PPC::Runtime::ASM::slwi(context->r3, context->r27, 2);
/*800D5DF8 000D2BF8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D5DFC 000D2BFC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800D5E00 000D2C00*/ PPC::Runtime::ASM::lwzx(context->r29, context->r4, context->r3);
/*800D5E04 000D2C04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E08 000D2C08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800D5E0C 000D2C0C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800D5E10 000D2C10*/ PPC::Runtime::ASM::bne(.L_800D5E78);
/*800D5E14 000D2C14*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*800D5E18 000D2C18*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800D5E1C 000D2C1C*/ PPC::Runtime::ASM::fmr(context->f2, context->f31);
/*800D5E20 000D2C20*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800D5E24 000D2C24*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800D5E28 000D2C28*/ PPC::Runtime::ASM::bl(fn_8006C1DC);
/*800D5E2C 000D2C2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E30 000D2C30*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800D5E34 000D2C34*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xf);
/*800D5E38 000D2C38*/ PPC::Runtime::ASM::blt(.L_800D5E4C);
/*800D5E3C 000D2C3C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x50);
/*800D5E40 000D2C40*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x5c);
/*800D5E44 000D2C44*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800D5E48 000D2C48*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D5E4C, 0x800D5E4C) //this is a jump label
/*800D5E4C 000D2C4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E50 000D2C50*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800D5E54 000D2C54*/ PPC::Runtime::ASM::stwx(context->r29, context->r28, context->r0);
/*800D5E58 000D2C58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E5C 000D2C5C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800D5E60 000D2C60*/ PPC::Runtime::ASM::add(context->r3, context->r28, context->r0);
/*800D5E64 000D2C64*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D5E68 000D2C68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E6C 000D2C6C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800D5E70 000D2C70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E74 000D2C74*/ PPC::Runtime::ASM::b(.L_800D5EB4);
RUNTIME_PPC_JUMP_LABEL(.L_800D5E78, 0x800D5E78) //this is a jump label
/*800D5E78 000D2C78*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*800D5E7C 000D2C7C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D5E80 000D2C80*/ PPC::Runtime::ASM::fmr(context->f2, context->f31);
/*800D5E84 000D2C84*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800D5E88 000D2C88*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800D5E8C 000D2C8C*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*800D5E90 000D2C90*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800D5E94 000D2C94*/ PPC::Runtime::ASM::bl(fn_800D59F0);
/*800D5E98 000D2C98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r28));
/*800D5E9C 000D2C9C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D5EA0 000D2CA0*/ PPC::Runtime::ASM::bne(.L_800D5EB4);
/*800D5EA4 000D2CA4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x50);
/*800D5EA8 000D2CA8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x90);
/*800D5EAC 000D2CAC*/ PPC::Runtime::ASM::li(context->r4, 0x90);
/*800D5EB0 000D2CB0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D5EB4, 0x800D5EB4) //this is a jump label
/*800D5EB4 000D2CB4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D5EB8 000D2CB8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800D5EBC 000D2CBC*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D5EC0 000D2CC0*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800D5EC4 000D2CC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D5EC8 000D2CC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D5ECC 000D2CCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800D5ED0 000D2CD0*/ PPC::Runtime::ASM::blr();
}