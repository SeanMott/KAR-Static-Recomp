//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7A64.hpp"



void fn_800D2A1C(PPC::Runtime::GCContext* context)
{
/*800D2A1C 000CF81C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D2A20 000CF820*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D2A24 000CF824*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D2A28 000CF828*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D2A2C 000CF82C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800D2A30 000CF830*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D2A34 000CF834*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2A38 000CF838*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D2A3C 000CF83C*/ PPC::Runtime::ASM::cmpwi(context->r29, -0x1);
/*800D2A40 000CF840*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D2A44 000CF844*/ PPC::Runtime::ASM::ble(.L_800D2A5C);
/*800D2A48 000CF848*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r30));
/*800D2A4C 000CF84C*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800D2A50 000CF850*/ PPC::Runtime::ASM::bge(.L_800D2A5C);
/*800D2A54 000CF854*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D2A58 000CF858*/ PPC::Runtime::ASM::b(.L_800D2A60);
RUNTIME_PPC_JUMP_LABEL(.L_800D2A5C, 0x800D2A5C) //this is a jump label
/*800D2A5C 000CF85C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D2A60, 0x800D2A60) //this is a jump label
/*800D2A60 000CF860*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D2A64 000CF864*/ PPC::Runtime::ASM::beq(.L_800D2A7C);
/*800D2A68 000CF868*/ PPC::Runtime::ASM::lis(context->r4, String_Debug_ "!grChkIllegalZoneId(zoneId" Get_MemoryOffset_HighBit);
/*800D2A6C 000CF86C*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D2A70 000CF870*/ PPC::Runtime::ASM::addi(context->r5, context->r4, String_Debug_ "!grChkIllegalZoneId(zoneId" Get_MemoryOffset_LowBit);
/*800D2A74 000CF874*/ PPC::Runtime::ASM::li(context->r4, 0x9be);
/*800D2A78 000CF878*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D2A7C, 0x800D2A7C) //this is a jump label
/*800D2A7C 000CF87C*/ PPC::Runtime::ASM::mulli(context->r4, context->r29, 0x140);
/*800D2A80 000CF880*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r30));
/*800D2A84 000CF884*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r4);
/*800D2A88 000CF888*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800D2A8C 000CF88C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800D2A90 000CF890*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xc);
/*800D2A94 000CF894*/ PPC::Runtime::ASM::beq(.L_800D2AA0);
/*800D2A98 000CF898*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xd);
/*800D2A9C 000CF89C*/ PPC::Runtime::ASM::bne(.L_800D2ADC);
RUNTIME_PPC_JUMP_LABEL(.L_800D2AA0, 0x800D2AA0) //this is a jump label
/*800D2AA0 000CF8A0*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r4);
/*800D2AA4 000CF8A4*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D2AA8 000CF8A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800D2AAC 000CF8AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D2AB0 000CF8B0*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x48);
/*800D2AB4 000CF8B4*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r0);
/*800D2AB8 000CF8B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x218, context->r3));
/*800D2ABC 000CF8BC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D2AC0 000CF8C0*/ PPC::Runtime::ASM::beq(.L_800D2ACC);
/*800D2AC4 000CF8C4*/ PPC::Runtime::ASM::bl(fn_800F7A64);
/*800D2AC8 000CF8C8*/ PPC::Runtime::ASM::b(.L_800D2AD0);
RUNTIME_PPC_JUMP_LABEL(.L_800D2ACC, 0x800D2ACC) //this is a jump label
/*800D2ACC 000CF8CC*/ PPC::Runtime::ASM::li(context->r3, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D2AD0, 0x800D2AD0) //this is a jump label
/*800D2AD0 000CF8D0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2AD4 000CF8D4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800D2AD8 000CF8D8*/ PPC::Runtime::ASM::b(.L_800D2AE0);
RUNTIME_PPC_JUMP_LABEL(.L_800D2ADC, 0x800D2ADC) //this is a jump label
/*800D2ADC 000CF8DC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D2AE0, 0x800D2AE0) //this is a jump label
/*800D2AE0 000CF8E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D2AE4 000CF8E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D2AE8 000CF8E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D2AEC 000CF8EC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2AF0 000CF8F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D2AF4 000CF8F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D2AF8 000CF8F8*/ PPC::Runtime::ASM::blr();
}