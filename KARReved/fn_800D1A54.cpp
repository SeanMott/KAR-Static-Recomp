//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A98EC.hpp"
#include "fn_800D9958.hpp"
#include "fn_800A98F0.hpp"



void fn_800D1A54(PPC::Runtime::GCContext* context)
{
/*800D1A54 000CE854*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D1A58 000CE858*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D1A5C 000CE85C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D1A60 000CE860*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D1A64 000CE864*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800D1A68 000CE868*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D1A6C 000CE86C*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800D1A70 000CE870*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D1A74 000CE874*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D1A78 000CE878*/ PPC::Runtime::ASM::bl(fn_800A98EC);
/*800D1A7C 000CE87C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D1A80 000CE880*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D1A84 000CE884*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800D1A88 000CE888*/ PPC::Runtime::ASM::mr(context->r8, context->r31);
/*800D1A8C 000CE88C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x54);
/*800D1A90 000CE890*/ PPC::Runtime::ASM::li(context->r6, 0x7);
/*800D1A94 000CE894*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800D1A98 000CE898*/ PPC::Runtime::ASM::bl(fn_800D9958);
/*800D1A9C 000CE89C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800D1AA0 000CE8A0*/ PPC::Runtime::ASM::bl(fn_800A98F0);
/*800D1AA4 000CE8A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D1AA8 000CE8A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D1AAC 000CE8AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D1AB0 000CE8B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D1AB4 000CE8B4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D1AB8 000CE8B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D1ABC 000CE8BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D1AC0 000CE8C0*/ PPC::Runtime::ASM::blr();
}