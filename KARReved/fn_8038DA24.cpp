//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8038DA24(PPC::Runtime::GCContext* context)
{
/*8038DA24 0038A824*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8038DA28 0038A828*/ PPC::Runtime::ASM::mflr(context->r0);
/*8038DA2C 0038A82C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8038DA30 0038A830*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8038DA34 0038A834*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8038DA38 0038A838*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8038DA3C 0038A83C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038DA40 0038A840*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8038DA44 0038A844*/ PPC::Runtime::ASM::extsb.(context->r0, context->r6);
/*8038DA48 0038A848*/ PPC::Runtime::ASM::bne(.L_8038DA54);
/*8038DA4C 0038A84C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8038DA50 0038A850*/ PPC::Runtime::ASM::b(.L_8038DAF8);
RUNTIME_PPC_JUMP_LABEL(.L_8038DA54, 0x8038DA54) //this is a jump label
/*8038DA54 0038A854*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r6, 24);
/*8038DA58 0038A858*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8038DA5C 0038A85C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x81);
/*8038DA60 0038A860*/ PPC::Runtime::ASM::blt(.L_8038DA6C);
/*8038DA64 0038A864*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x9f);
/*8038DA68 0038A868*/ PPC::Runtime::ASM::ble(.L_8038DA7C);
RUNTIME_PPC_JUMP_LABEL(.L_8038DA6C, 0x8038DA6C) //this is a jump label
/*8038DA6C 0038A86C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xe0);
/*8038DA70 0038A870*/ PPC::Runtime::ASM::blt(.L_8038DA80);
/*8038DA74 0038A874*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xef);
/*8038DA78 0038A878*/ PPC::Runtime::ASM::bgt(.L_8038DA80);
RUNTIME_PPC_JUMP_LABEL(.L_8038DA7C, 0x8038DA7C) //this is a jump label
/*8038DA7C 0038A87C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8038DA80, 0x8038DA80) //this is a jump label
/* 8038DA80 0038A880  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*8038DA84 0038A884*/ PPC::Runtime::ASM::bne(.L_8038DADC);
/* 8038DA88 0038A888  54 80 06 3F */ clrlwi. context->r0 , context->r4 , 24
/*8038DA8C 0038A88C*/ PPC::Runtime::ASM::beq(.L_8038DAD4);
/*8038DA90 0038A890*/ PPC::Runtime::ASM::lis(context->r3, String_ "TheEntireFontSymbolsForSomeReason" Get_MemoryOffset_HighBit);
/*8038DA94 0038A894*/ PPC::Runtime::ASM::lis(context->r5, lbl_804F4EB0 @ Get_MemoryOffset_HighBit);
/*8038DA98 0038A898*/ PPC::Runtime::ASM::addi(context->r30, context->r3, String_ "TheEntireFontSymbolsForSomeReason" Get_MemoryOffset_LowBit);
/*8038DA9C 0038A89C*/ PPC::Runtime::ASM::extsb(context->r4, context->r6);
/*8038DAA0 0038A8A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8038DAA4 0038A8A4*/ PPC::Runtime::ASM::addi(context->r31, context->r5, lbl_804F4EB0 @ Get_MemoryOffset_LowBit);
/*8038DAA8 0038A8A8*/ PPC::Runtime::ASM::bl(strchr);
/*8038DAAC 0038A8AC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8038DAB0 0038A8B0*/ PPC::Runtime::ASM::beq(.L_8038DAF4);
/*8038DAB4 0038A8B4*/ PPC::Runtime::ASM::subf(context->r0, context->r30, context->r3);
/*8038DAB8 0038A8B8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 1);
/*8038DABC 0038A8BC*/ PPC::Runtime::ASM::add(context->r4, context->r31, context->r0);
/*8038DAC0 0038A8C0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8038DAC4 0038A8C4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r4));
/*8038DAC8 0038A8C8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 8, 16, 23);
/*8038DACC 0038A8CC*/ PPC::Runtime::ASM::clrlwi(context->r29, context->r0, 16);
/*8038DAD0 0038A8D0*/ PPC::Runtime::ASM::b(.L_8038DAF4);
RUNTIME_PPC_JUMP_LABEL(.L_8038DAD4, 0x8038DAD4) //this is a jump label
/*8038DAD4 0038A8D4*/ PPC::Runtime::ASM::extsb(context->r29, context->r6);
/*8038DAD8 0038A8D8*/ PPC::Runtime::ASM::b(.L_8038DAF4);
RUNTIME_PPC_JUMP_LABEL(.L_8038DADC, 0x8038DADC) //this is a jump label
/*8038DADC 0038A8DC*/ PPC::Runtime::ASM::beq(.L_8038DAEC);
/*8038DAE0 0038A8E0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r5));
/*8038DAE4 0038A8E4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 8, 16, 23);
/*8038DAE8 0038A8E8*/ PPC::Runtime::ASM::b(.L_8038DAF0);
RUNTIME_PPC_JUMP_LABEL(.L_8038DAEC, 0x8038DAEC) //this is a jump label
/*8038DAEC 0038A8EC*/ PPC::Runtime::ASM::mr(context->r0, context->r6);
RUNTIME_PPC_JUMP_LABEL(.L_8038DAF0, 0x8038DAF0) //this is a jump label
/*8038DAF0 0038A8F0*/ PPC::Runtime::ASM::clrlwi(context->r29, context->r0, 16);
RUNTIME_PPC_JUMP_LABEL(.L_8038DAF4, 0x8038DAF4) //this is a jump label
/*8038DAF4 0038A8F4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_8038DAF8, 0x8038DAF8) //this is a jump label
/*8038DAF8 0038A8F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8038DAFC 0038A8FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8038DB00 0038A900*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8038DB04 0038A904*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038DB08 0038A908*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8038DB0C 0038A90C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8038DB10 0038A910*/ PPC::Runtime::ASM::blr();
}