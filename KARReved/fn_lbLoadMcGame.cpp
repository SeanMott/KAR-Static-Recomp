//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80182E8C.hpp"
#include "fn_lbLoadArchive.hpp"



void fn_lbLoadMcGame(PPC::Runtime::GCContext* context)
{
/*80078F98 00075D98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80078F9C 00075D9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80078FA0 00075DA0*/ PPC::Runtime::ASM::lis(context->r3, AllZeros_46 @ Get_MemoryOffset_HighBit);
/*80078FA4 00075DA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80078FA8 00075DA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80078FAC 00075DAC*/ PPC::Runtime::ASM::addi(context->r31, context->r3, AllZeros_46 @ Get_MemoryOffset_LowBit);
/*80078FB0 00075DB0*/ PPC::Runtime::ASM::bl(fn_80182E8C);
/*80078FB4 00075DB4*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_1805528F8 @ Get_MemoryOffset_HighBit);
/*80078FB8 00075DB8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80078FBC 00075DBC*/ PPC::Runtime::ASM::addi(context->r10, context->r4, STRUCT_BYTE4_COUNT_1805528F8 @ Get_MemoryOffset_LowBit);
/*80078FC0 00075DC0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x128);
/*80078FC4 00075DC4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r10));
/*80078FC8 00075DC8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*80078FCC 00075DCC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*80078FD0 00075DD0*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0x138);
/*80078FD4 00075DD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r10));
/*80078FD8 00075DD8*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x8);
/*80078FDC 00075DDC*/ PPC::Runtime::ASM::addi(context->r8, context->r31, 0x148);
/*80078FE0 00075DE0*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*80078FE4 00075DE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r10));
/*80078FE8 00075DE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r10));
/*80078FEC 00075DEC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80078FF0 00075DF0*/ PPC::Runtime::ASM::bl(fn_lbLoadArchive);
/*80078FF4 00075DF4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80078FF8 00075DF8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x6c);
/*80078FFC 00075DFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80079000 00075E00*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80079004 00075E04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*80079008 00075E08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8007900C 00075E0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80079010 00075E10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80079014 00075E14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80079018 00075E18*/ PPC::Runtime::ASM::blr();
}