//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80369010.hpp"
#include "fn_80368DB4.hpp"
#include "fn_8029B2A4.hpp"



void fn_80368D00(PPC::Runtime::GCContext* context)
{
/*80368D00 00365B00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80368D04 00365B04*/ PPC::Runtime::ASM::mflr(context->r0);
/*80368D08 00365B08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80368D0C 00365B0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80368D10 00365B10*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*80368D14 00365B14*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80368D18 00365B18*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80368D1C 00365B1C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80368D20 00365B20*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*80368D24 00365B24*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80368D28 00365B28*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80368D2C 00365B2C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD984 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80368D30 00365B30*/ PPC::Runtime::ASM::bl(fn_80369010);
/*80368D34 00365B34*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*80368D38 00365B38*/ PPC::Runtime::ASM::addi(context->r0, context->r29, 0x8);
/*80368D3C 00365B3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80368D40 00365B40*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80368D44 00365B44*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80368D48 00365B48*/ PPC::Runtime::ASM::addi(context->r4, context->r6, 0x8);
/*80368D4C 00365B4C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80368D50 00365B50*/ PPC::Runtime::ASM::bl(fn_80368DB4);
/*80368D54 00365B54*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80368D58 00365B58*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80368D5C 00365B5C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80368D60 00365B60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80368D64 00365B64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80368D68 00365B68*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80368D6C 00365B6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80368D70 00365B70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80368D74 00365B74*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80368D78 00365B78*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80368D7C 00365B7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80368D80 00365B80*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80368D84 00365B84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80368D88 00365B88*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80368D8C 00365B8C*/ PPC::Runtime::ASM::b(.L_80368D94);
/*80368D90 00365B90*/ PPC::Runtime::ASM::bl(fn_8029B2A4);
RUNTIME_PPC_JUMP_LABEL(.L_80368D94, 0x80368D94) //this is a jump label
/*80368D94 00365B94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80368D98 00365B98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80368D9C 00365B9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80368DA0 00365BA0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80368DA4 00365BA4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80368DA8 00365BA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80368DAC 00365BAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80368DB0 00365BB0*/ PPC::Runtime::ASM::blr();
}