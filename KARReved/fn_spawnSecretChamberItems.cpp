//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_loadEventLocations?.hpp"
#include "fn_802433C4.hpp"
#include "fn_80254114.hpp"
#include "fn_80253F0C.hpp"



void fn_spawnSecretChamberItems(PPC::Runtime::GCContext* context)
{
/*8010A998 00107798*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x80, context->r1));
/*8010A99C 0010779C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010A9A0 001077A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*8010A9A4 001077A4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x14);
/*8010A9A8 001077A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*8010A9AC 001077AC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1));
/*8010A9B0 001077B0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8010A9B4 001077B4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*8010A9B8 001077B8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010A9BC 001077BC*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*8010A9C0 001077C0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x2c);
/*8010A9C4 001077C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8010A9C8 001077C8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x20);
/*8010A9CC 001077CC*/ PPC::Runtime::ASM::bl(fn_loadEventLocations?);
/*8010A9D0 001077D0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*8010A9D4 001077D4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*8010A9D8 001077D8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*8010A9DC 001077DC*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x38);
/*8010A9E0 001077E0*/ PPC::Runtime::ASM::bl(fn_802433C4);
/*8010A9E4 001077E4*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8010A9E8 001077E8*/ PPC::Runtime::ASM::bl(fn_80254114);
/*8010A9EC 001077EC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*8010A9F0 001077F0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8010A9F4 001077F4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8010A9F8 001077F8*/ PPC::Runtime::ASM::b(.L_8010AA34);
RUNTIME_PPC_JUMP_LABEL(.L_8010A9FC, 0x8010A9FC) //this is a jump label
/*8010A9FC 001077FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010AA00 00107800*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x38);
/*8010AA04 00107804*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8010AA08 00107808*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*8010AA0C 0010780C*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
/*8010AA10 00107810*/ PPC::Runtime::ASM::cmpwi(context->r29, -0x1);
/*8010AA14 00107814*/ PPC::Runtime::ASM::beq(.L_8010AA2C);
/*8010AA18 00107818*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010AA1C 0010781C*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*8010AA20 00107820*/ PPC::Runtime::ASM::li(context->r4, 0x8);
/*8010AA24 00107824*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8010AA28 00107828*/ PPC::Runtime::ASM::bl(fn_80253F0C);
RUNTIME_PPC_JUMP_LABEL(.L_8010AA2C, 0x8010AA2C) //this is a jump label
/*8010AA2C 0010782C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0xc);
/*8010AA30 00107830*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8010AA34, 0x8010AA34) //this is a jump label
/*8010AA34 00107834*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8010AA38 00107838*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8010AA3C 0010783C*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*8010AA40 00107840*/ PPC::Runtime::ASM::blt(.L_8010A9FC);
/*8010AA44 00107844*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*8010AA48 00107848*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*8010AA4C 0010784C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1));
/*8010AA50 00107850*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8010AA54 00107854*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*8010AA58 00107858*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010AA5C 0010785C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x80);
/*8010AA60 00107860*/ PPC::Runtime::ASM::blr();
}