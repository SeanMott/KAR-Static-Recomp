//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029216C(PPC::Runtime::GCContext* context)
{
/*8029216C 0028EF6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80292170 0028EF70*/ PPC::Runtime::ASM::mflr(context->r0);
/*80292174 0028EF74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80292178 0028EF78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029217C 0028EF7C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80292180 0028EF80*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80292184 0028EF84  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80292188 0028EF88*/ PPC::Runtime::ASM::beq(.L_802921D0);
/*8029218C 0028EF8C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BD318 @ Get_MemoryOffset_HighBit);
/*80292190 0028EF90*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4);
/*80292194 0028EF94*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BD318 @ Get_MemoryOffset_LowBit);
/*80292198 0028EF98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029219C 0028EF9C*/ PPC::Runtime::ASM::beq(.L_802921C0);
/*802921A0 0028EFA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*802921A4 0028EFA4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*802921A8 0028EFA8*/ PPC::Runtime::ASM::beq(.L_802921C0);
/*802921AC 0028EFAC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802921B0 0028EFB0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*802921B4 0028EFB4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*802921B8 0028EFB8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802921BC 0028EFBC*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_802921C0, 0x802921C0) //this is a jump label
/*802921C0 0028EFC0*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802921C4 0028EFC4*/ PPC::Runtime::ASM::ble(.L_802921D0);
/*802921C8 0028EFC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802921CC 0028EFCC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802921D0, 0x802921D0) //this is a jump label
/*802921D0 0028EFD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802921D4 0028EFD4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802921D8 0028EFD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802921DC 0028EFDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802921E0 0028EFE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802921E4 0028EFE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802921E8 0028EFE8*/ PPC::Runtime::ASM::blr();
}