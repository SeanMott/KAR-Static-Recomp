//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_804889F4.hpp"
#include "fn_803DA558.hpp"
#include "fn_80488294.hpp"
#include "fn_80488294.hpp"
#include "fn_OSCreateThread.hpp"
#include "fn_OSResumeThread.hpp"



void fn_80488364(PPC::Runtime::GCContext* context)
{
/*80488364 00485164*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80488368 00485168*/ PPC::Runtime::ASM::mflr(context->r0);
/*8048836C 0048516C*/ PPC::Runtime::ASM::lis(context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*80488370 00485170*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80488374 00485174*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80488378 00485178*/ PPC::Runtime::ASM::addi(context->r31, context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*8048837C 0048517C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80488380 00485180*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r31));
/*80488384 00485184*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80488388 00485188*/ PPC::Runtime::ASM::beq(.L_80488404);
/*8048838C 0048518C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*80488390 00485190*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80488394 00485194*/ PPC::Runtime::ASM::beq(.L_804883A4);
/*80488398 00485198*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8048839C 0048519C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*804883A0 004851A0*/ PPC::Runtime::ASM::bne(.L_804883BC);
RUNTIME_PPC_JUMP_LABEL(.L_804883A4, 0x804883A4) //this is a jump label
/*804883A4 004851A4*/ PPC::Runtime::ASM::bl(fn_804889F4);
/*804883A8 004851A8*/ PPC::Runtime::ASM::lis(context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*804883AC 004851AC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*804883B0 004851B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*804883B4 004851B4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x110);
/*804883B8 004851B8*/ PPC::Runtime::ASM::bl(fn_803DA558);
RUNTIME_PPC_JUMP_LABEL(.L_804883BC, 0x804883BC) //this is a jump label
/*804883BC 004851BC*/ PPC::Runtime::ASM::lis(context->r4, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*804883C0 004851C0*/ PPC::Runtime::ASM::lis(context->r3, fn_80488294 @ Get_MemoryOffset_HighBit);
/*804883C4 004851C4*/ PPC::Runtime::ASM::addi(context->r9, context->r4, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*804883C8 004851C8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*804883CC 004851CC*/ PPC::Runtime::ASM::addis(context->r6, context->r9, 0x1);
/*804883D0 004851D0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r9));
/*804883D4 004851D4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x7bd8, context->r6));
/*804883D8 004851D8*/ PPC::Runtime::ASM::addi(context->r30, context->r9, 0x110);
/*804883DC 004851DC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn_80488294 @ Get_MemoryOffset_LowBit);
/*804883E0 004851E0*/ PPC::Runtime::ASM::add(context->r6, context->r9, context->r7);
/*804883E4 004851E4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*804883E8 004851E8*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*804883EC 004851EC*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x428);
/*804883F0 004851F0*/ PPC::Runtime::ASM::bl(fn_OSCreateThread);
/*804883F4 004851F4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*804883F8 004851F8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*804883FC 004851FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r31));
/*80488400 00485200*/ PPC::Runtime::ASM::bl(fn_OSResumeThread);
RUNTIME_PPC_JUMP_LABEL(.L_80488404, 0x80488404) //this is a jump label
/*80488404 00485204*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80488408 00485208*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8048840C 0048520C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80488410 00485210*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80488414 00485214*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80488418 00485218*/ PPC::Runtime::ASM::blr();
}