//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800BA648(PPC::Runtime::GCContext* context)
{
/*800BA648 000B7448*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800BA64C 000B744C*/ PPC::Runtime::ASM::blt(.L_800BA658);
/*800BA650 000B7450*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800BA654 000B7454*/ PPC::Runtime::ASM::blt(.L_800BA660);
RUNTIME_PPC_JUMP_LABEL(.L_800BA658, 0x800BA658) //this is a jump label
/*800BA658 000B7458*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BA65C 000B745C*/ PPC::Runtime::ASM::b(.L_800BA674);
RUNTIME_PPC_JUMP_LABEL(.L_800BA660, 0x800BA660) //this is a jump label
/*800BA660 000B7460*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BA664 000B7464*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800BA668 000B7468*/ PPC::Runtime::ASM::addi(context->r3, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BA66C 000B746C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800BA670 000B7470*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800BA674, 0x800BA674) //this is a jump label
/*800BA674 000B7474*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BA678 000B7478*/ PPC::Runtime::ASM::beq(.L_800BA684);
/*800BA67C 000B747C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BA680 000B7480*/ PPC::Runtime::ASM::b(.L_800BA688);
RUNTIME_PPC_JUMP_LABEL(.L_800BA684, 0x800BA684) //this is a jump label
/*800BA684 000B7484*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BA688, 0x800BA688) //this is a jump label
/*800BA688 000B7488*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BA68C 000B748C*/ PPC::Runtime::ASM::beq(.L_800BA698);
/*800BA690 000B7490*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800BA694 000B7494*/ PPC::Runtime::ASM::b(.L_800BA69C);
RUNTIME_PPC_JUMP_LABEL(.L_800BA698, 0x800BA698) //this is a jump label
/*800BA698 000B7498*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BA69C, 0x800BA69C) //this is a jump label
/*800BA69C 000B749C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BA6A0 000B74A0*/ PPC::Runtime::ASM::beq(.L_800BA6B8);
/*800BA6A4 000B74A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800BA6A8 000B74A8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800BA6AC 000B74AC*/ PPC::Runtime::ASM::bne(.L_800BA6B8);
/*800BA6B0 000B74B0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800BA6B4 000B74B4*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800BA6B8, 0x800BA6B8) //this is a jump label
/*800BA6B8 000B74B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BA6BC 000B74BC*/ PPC::Runtime::ASM::blr();
}