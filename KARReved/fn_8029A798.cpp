//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029A798(PPC::Runtime::GCContext* context)
{
/*8029A798 00297598*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029A79C 0029759C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029A7A0 002975A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A7A4 002975A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A7A8 002975A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A7AC 002975AC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029A7B0 002975B0*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029A7B4 002975B4*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029A7B8 002975B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A7BC 002975BC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A7C0 002975C0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029A7C4 002975C4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A7C8 002975C8*/ PPC::Runtime::ASM::bctrl();
/*8029A7CC 002975CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029A7D0 002975D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A7D4 002975D4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A7D8 002975D8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029A7DC 002975DC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A7E0 002975E0*/ PPC::Runtime::ASM::bctrl();
/*8029A7E4 002975E4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029A7E8 002975E8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029A7EC 002975EC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8029A7F0 002975F0*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029A7F4 002975F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A7F8 002975F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A7FC 002975FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A800 00297600*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029A804 00297604*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029A808 00297608*/ PPC::Runtime::ASM::blr();
}