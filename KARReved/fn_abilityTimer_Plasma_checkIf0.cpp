//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_abilityTimerDecreaser.hpp"
#include "fn_abilityTimer_Plasma_remove.hpp"
#include "fn_AS_LoseCopyAbility.hpp"



void fn_abilityTimer_Plasma_checkIf0(PPC::Runtime::GCContext* context)
{
/*801B2658 001AF458*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B265C 001AF45C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B2660 001AF460*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B2664 001AF464*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B2668 001AF468*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B266C 001AF46C*/ PPC::Runtime::ASM::bl(fn_abilityTimerDecreaser);
/*801B2670 001AF470*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
/*801B2674 001AF474*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B2678 001AF478*/ PPC::Runtime::ASM::bgt(.L_801B268C);
/*801B267C 001AF47C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B2680 001AF480*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Plasma_remove);
/*801B2684 001AF484*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B2688 001AF488*/ PPC::Runtime::ASM::bl(fn_AS_LoseCopyAbility);
RUNTIME_PPC_JUMP_LABEL(.L_801B268C, 0x801B268C) //this is a jump label
/*801B268C 001AF48C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B2690 001AF490*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B2694 001AF494*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B2698 001AF498*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B269C 001AF49C*/ PPC::Runtime::ASM::blr();
}