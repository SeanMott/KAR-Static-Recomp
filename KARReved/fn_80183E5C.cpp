//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"
#include "fn_800644AC.hpp"



void fn_80183E5C(PPC::Runtime::GCContext* context)
{
/*80183E5C 00180C5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80183E60 00180C60*/ PPC::Runtime::ASM::mflr(context->r0);
/*80183E64 00180C64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80183E68 00180C68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80183E6C 00180C6C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80183E70 00180C70*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80183E74 00180C74*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80183E78 00180C78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1168, context->r3));
/*80183E7C 00180C7C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80183E80 00180C80*/ PPC::Runtime::ASM::beq(.L_80183EF8);
/*80183E84 00180C84*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80183E88 00180C88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80183E8C 00180C8C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80183E90 00180C90*/ PPC::Runtime::ASM::bne(.L_80183EA4);
/*80183E94 00180C94*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6E38 @ Get_MemoryOffset_SDA21);
/*80183E98 00180C98*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*80183E9C 00180C9C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6E40 @ Get_MemoryOffset_SDA21);
/*80183EA0 00180CA0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80183EA4, 0x80183EA4) //this is a jump label
/*80183EA4 00180CA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80183EA8 00180CA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80183EAC 00180CAC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80183EB0 00180CB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80183EB4 00180CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80183EB8 00180CB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80183EBC 00180CBC*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80183EC0 00180CC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80183EC4 00180CC4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80183EC8 00180CC8*/ PPC::Runtime::ASM::beq(.L_80183EE4);
/*80183ECC 00180CCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80183ED0 00180CD0*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*80183ED4 00180CD4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80183ED8 00180CD8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80183EDC 00180CDC*/ PPC::Runtime::ASM::bl(fn_800644AC);
/*80183EE0 00180CE0*/ PPC::Runtime::ASM::b(.L_80183EF8);
RUNTIME_PPC_JUMP_LABEL(.L_80183EE4, 0x80183EE4) //this is a jump label
/*80183EE4 00180CE4*/ PPC::Runtime::ASM::lis(context->r3, String_ "mnlandialogue." Get_MemoryOffset_HighBit);
/*80183EE8 00180CE8*/ PPC::Runtime::ASM::li(context->r4, 0x4f);
/*80183EEC 00180CEC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "mnlandialogue." Get_MemoryOffset_LowBit);
/*80183EF0 00180CF0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6E48 @ Get_MemoryOffset_SDA21);
/*80183EF4 00180CF4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80183EF8, 0x80183EF8) //this is a jump label
/*80183EF8 00180CF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80183EFC 00180CFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80183F00 00180D00*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80183F04 00180D04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80183F08 00180D08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80183F0C 00180D0C*/ PPC::Runtime::ASM::blr();
}