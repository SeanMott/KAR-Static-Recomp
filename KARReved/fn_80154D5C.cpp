//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80154D5C(PPC::Runtime::GCContext* context)
{
/*80154D5C 00151B5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80154D60 00151B60*/ PPC::Runtime::ASM::mflr(context->r0);
/*80154D64 00151B64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80154D68 00151B68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80154D6C 00151B6C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80154D70 00151B70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80154D74 00151B74*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80154D78 00151B78*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80154D7C, 0x80154D7C) //this is a jump label
/*80154D7C 00151B7C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80154D80 00151B80*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80154D84 00151B84*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80154D88 00151B88*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80154D8C 00151B8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x618, context->r30));
/*80154D90 00151B90*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80154D94 00151B94*/ PPC::Runtime::ASM::beq(.L_80154DA0);
/*80154D98 00151B98*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80154D9C 00151B9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x618, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80154DA0, 0x80154DA0) //this is a jump label
/*80154DA0 00151BA0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80154DA4 00151BA4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80154DA8 00151BA8*/ PPC::Runtime::ASM::blt(.L_80154D7C);
/*80154DAC 00151BAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80154DB0 00151BB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80154DB4 00151BB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80154DB8 00151BB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80154DBC 00151BBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80154DC0 00151BC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80154DC4 00151BC4*/ PPC::Runtime::ASM::blr();
}