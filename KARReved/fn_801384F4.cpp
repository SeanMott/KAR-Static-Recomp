//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80059818.hpp"
#include "fn_80059520.hpp"
#include "fn_8017B3CC.hpp"



void fn_801384F4(PPC::Runtime::GCContext* context)
{
/*801384F4 001352F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801384F8 001352F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801384FC 001352FC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80138500 00135300*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1133 @ Get_MemoryOffset_HighBit);
/*80138504 00135304*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80138508 00135308*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8013850C 0013530C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80138510 00135310*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_1133 @ Get_MemoryOffset_LowBit);
/*80138514 00135314*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x13c);
/*80138518 00135318*/ PPC::Runtime::ASM::stb(context->r0, lbl_80558788 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*8013851C 0013531C*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD794 @ Get_MemoryOffset_SDA21);
/*80138520 00135320*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80138524 00135324*/ PPC::Runtime::ASM::lis(context->r4, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80138528 00135328*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD794 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8013852C 0013532C*/ PPC::Runtime::ASM::addi(context->r8, context->r4, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80138530 00135330*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x38c);
/*80138534 00135334*/ PPC::Runtime::ASM::addi(context->r4, context->r8, 0xea8);
/*80138538 00135338*/ PPC::Runtime::ASM::addi(context->r7, context->r31, 0x3a4);
/*8013853C 0013533C*/ PPC::Runtime::ASM::addi(context->r6, context->r8, 0xec0);
/*80138540 00135340*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0xec4);
/*80138544 00135344*/ PPC::Runtime::ASM::addi(context->r9, context->r31, 0x3bc);
/*80138548 00135348*/ PPC::Runtime::ASM::li(context->r10, 0x0);
/*8013854C 0013534C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80138550 00135350*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80138554 00135354*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559A90 @ Get_MemoryOffset_HighBit);
/*80138558 00135358*/ PPC::Runtime::ASM::li(context->r4, 0x1f0);
/*8013855C 0013535C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80559A90 @ Get_MemoryOffset_LowBit);
/*80138560 00135360*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80138564 00135364*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*80138568 00135368*/ PPC::Runtime::ASM::bl(fn_8017B3CC);
/*8013856C 0013536C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80138570 00135370*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80138574 00135374*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80138578 00135378*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8013857C 0013537C*/ PPC::Runtime::ASM::blr();
}