//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_AS_Land.hpp"
#include "fn_AS_Land.hpp"
#include "fn_801A2AA4.hpp"



void fn_801BC6A8(PPC::Runtime::GCContext* context)
{
/*801BC6A8 001B94A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BC6AC 001B94AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BC6B0 001B94B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BC6B4 001B94B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r3));
/*801BC6B8 001B94B8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801BC6BC 001B94BC*/ PPC::Runtime::ASM::bne(.L_801BC6CC);
/*801BC6C0 001B94C0*/ PPC::Runtime::ASM::lis(context->r4, fn_AS_Land @ Get_MemoryOffset_HighBit);
/*801BC6C4 001B94C4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_AS_Land @ Get_MemoryOffset_LowBit);
/*801BC6C8 001B94C8*/ PPC::Runtime::ASM::bl(fn_801A2AA4);
RUNTIME_PPC_JUMP_LABEL(.L_801BC6CC, 0x801BC6CC) //this is a jump label
/*801BC6CC 001B94CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BC6D0 001B94D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BC6D4 001B94D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BC6D8 001B94D8*/ PPC::Runtime::ASM::blr();
}