//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006C134.hpp"
#include "fn_8006C134.hpp"



void fn_800D066C(PPC::Runtime::GCContext* context)
{
/*800D066C 000CD46C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*800D0670 000CD470*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D0674 000CD474*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800D0678 000CD478*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*800D067C 000CD47C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*800D0680 000CD480*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*800D0684 000CD484*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*800D0688 000CD488*/ PPC::Runtime::ASM::stfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800D068C 000CD48C*/ PPC::Runtime::ASM::psq_st(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800D0690 000CD490*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800D0694 000CD494*/ PPC::Runtime::ASM::bl(_savegpr_21);
/*800D0698 000CD498*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D069C 000CD49C*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800D06A0 000CD4A0*/ PPC::Runtime::ASM::fmr(context->f29, context->f2);
/*800D06A4 000CD4A4*/ PPC::Runtime::ASM::mr(context->r21, context->r3);
/*800D06A8 000CD4A8*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r5));
/*800D06AC 000CD4AC*/ PPC::Runtime::ASM::mr(context->r22, context->r4);
/*800D06B0 000CD4B0*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*800D06B4 000CD4B4*/ PPC::Runtime::ASM::bne(.L_800D06CC);
/*800D06B8 000CD4B8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_899 @ Get_MemoryOffset_HighBit);
/*800D06BC 000CD4BC*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D06C0 000CD4C0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_899 @ Get_MemoryOffset_LowBit);
/*800D06C4 000CD4C4*/ PPC::Runtime::ASM::li(context->r4, 0x3d4);
/*800D06C8 000CD4C8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D06CC, 0x800D06CC) //this is a jump label
/*800D06CC 000CD4CC*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800D06D0 000CD4D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800D06D4 000CD4D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800D06D8 000CD4D8*/ PPC::Runtime::ASM::bne(.L_800D06F8);
/*800D06DC 000CD4DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800D06E0 000CD4E0*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800D06E4 000CD4E4*/ PPC::Runtime::ASM::fmr(context->f2, context->f29);
/*800D06E8 000CD4E8*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r27));
/*800D06EC 000CD4EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D06F0 000CD4F0*/ PPC::Runtime::ASM::bl(fn_8006C134);
/*800D06F4 000CD4F4*/ PPC::Runtime::ASM::b(.L_800D086C);
RUNTIME_PPC_JUMP_LABEL(.L_800D06F8, 0x800D06F8) //this is a jump label
/*800D06F8 000CD4F8*/ PPC::Runtime::ASM::cmpw(context->r21, context->r22);
/*800D06FC 000CD4FC*/ PPC::Runtime::ASM::lfs(context->f30, STRUCT_FLOAT_COUNT_1805DF5E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D0700 000CD500*/ PPC::Runtime::ASM::bne(.L_800D0730);
/*800D0704 000CD504*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f29);
/*800D0708 000CD508*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D070C 000CD50C*/ PPC::Runtime::ASM::bne(.L_800D0730);
/*800D0710 000CD510*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800D0714 000CD514*/ PPC::Runtime::ASM::slwi(context->r0, context->r21, 2);
/*800D0718 000CD518*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800D071C 000CD51C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800D0720 000CD520*/ PPC::Runtime::ASM::fmr(context->f2, context->f29);
/*800D0724 000CD524*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800D0728 000CD528*/ PPC::Runtime::ASM::bl(fn_8006C134);
/*800D072C 000CD52C*/ PPC::Runtime::ASM::b(.L_800D086C);
RUNTIME_PPC_JUMP_LABEL(.L_800D0730, 0x800D0730) //this is a jump label
/*800D0730 000CD530*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D0734 000CD534*/ PPC::Runtime::ASM::slwi(context->r30, context->r21, 3);
/*800D0738 000CD538*/ PPC::Runtime::ASM::slwi(context->r29, context->r21, 2);
/*800D073C 000CD53C*/ PPC::Runtime::ASM::slwi(context->r28, context->r22, 2);
/*800D0740 000CD540*/ PPC::Runtime::ASM::fsubs(context->f31, context->f0, context->f31);
/*800D0744 000CD544*/ PPC::Runtime::ASM::li(context->r24, 0x0);
/*800D0748 000CD548*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800D074C 000CD54C*/ PPC::Runtime::ASM::b(.L_800D0854);
RUNTIME_PPC_JUMP_LABEL(.L_800D0750, 0x800D0750) //this is a jump label
/*800D0750 000CD550*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D0754 000CD554*/ PPC::Runtime::ASM::li(context->r23, 0x0);
/*800D0758 000CD558*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r27));
/*800D075C 000CD55C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800D0760 000CD560*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r31);
/*800D0764 000CD564*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800D0768 000CD568*/ PPC::Runtime::ASM::add(context->r25, context->r4, context->r0);
/*800D076C 000CD56C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800D0770 000CD570*/ PPC::Runtime::ASM::b(.L_800D077C);
RUNTIME_PPC_JUMP_LABEL(.L_800D0774, 0x800D0774) //this is a jump label
/*800D0774 000CD574*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
/*800D0778 000CD578*/ PPC::Runtime::ASM::addi(context->r23, context->r23, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D077C, 0x800D077C) //this is a jump label
/*800D077C 000CD57C*/ PPC::Runtime::ASM::cmpw(context->r23, context->r4);
/*800D0780 000CD580*/ PPC::Runtime::ASM::bge(.L_800D0794);
/*800D0784 000CD584*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r25));
/*800D0788 000CD588*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r5);
/*800D078C 000CD58C*/ PPC::Runtime::ASM::cmpw(context->r21, context->r0);
/*800D0790 000CD590*/ PPC::Runtime::ASM::bne(.L_800D0774);
RUNTIME_PPC_JUMP_LABEL(.L_800D0794, 0x800D0794) //this is a jump label
/*800D0794 000CD594*/ PPC::Runtime::ASM::cmpw(context->r23, context->r4);
/*800D0798 000CD598*/ PPC::Runtime::ASM::bne(.L_800D07B0);
/*800D079C 000CD59C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_902 @ Get_MemoryOffset_HighBit);
/*800D07A0 000CD5A0*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D07A4 000CD5A4*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_902 @ Get_MemoryOffset_LowBit);
/*800D07A8 000CD5A8*/ PPC::Runtime::ASM::li(context->r4, 0x3ed);
/*800D07AC 000CD5AC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D07B0, 0x800D07B0) //this is a jump label
/*800D07B0 000CD5B0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800D07B4 000CD5B4*/ PPC::Runtime::ASM::addi(context->r6, context->r23, 0x1);
/*800D07B8 000CD5B8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800D07BC 000CD5BC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800D07C0 000CD5C0*/ PPC::Runtime::ASM::lwzx(context->r3, context->r29, context->r5);
/*800D07C4 000CD5C4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800D07C8 000CD5C8*/ PPC::Runtime::ASM::fmuls(context->f2, context->f31, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800D07CC, 0x800D07CC) //this is a jump label
/*800D07CC 000CD5CC*/ PPC::Runtime::ASM::cmpw(context->r6, context->r4);
/*800D07D0 000CD5D0*/ PPC::Runtime::ASM::bne(.L_800D07E4);
/*800D07D4 000CD5D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r27));
/*800D07D8 000CD5D8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D07DC 000CD5DC*/ PPC::Runtime::ASM::beq(.L_800D0820);
/*800D07E0 000CD5E0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D07E4, 0x800D07E4) //this is a jump label
/*800D07E4 000CD5E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r25));
/*800D07E8 000CD5E8*/ PPC::Runtime::ASM::slwi(context->r0, context->r6, 2);
/*800D07EC 000CD5EC*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800D07F0 000CD5F0*/ PPC::Runtime::ASM::cmpw(context->r22, context->r0);
/*800D07F4 000CD5F4*/ PPC::Runtime::ASM::bne(.L_800D0800);
/*800D07F8 000CD5F8*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*800D07FC 000CD5FC*/ PPC::Runtime::ASM::b(.L_800D0820);
RUNTIME_PPC_JUMP_LABEL(.L_800D0800, 0x800D0800) //this is a jump label
/*800D0800 000CD600*/ PPC::Runtime::ASM::cmpw(context->r6, context->r23);
/*800D0804 000CD604*/ PPC::Runtime::ASM::beq(.L_800D0820);
/*800D0808 000CD608*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800D080C 000CD60C*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x1);
/*800D0810 000CD610*/ PPC::Runtime::ASM::lwzx(context->r3, context->r5, context->r0);
/*800D0814 000CD614*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800D0818 000CD618*/ PPC::Runtime::ASM::fadds(context->f2, context->f2, context->f0);
/*800D081C 000CD61C*/ PPC::Runtime::ASM::b(.L_800D07CC);
RUNTIME_PPC_JUMP_LABEL(.L_800D0820, 0x800D0820) //this is a jump label
/*800D0820 000CD620*/ PPC::Runtime::ASM::cmpwi(context->r7, 0x0);
/*800D0824 000CD624*/ PPC::Runtime::ASM::beq(.L_800D084C);
/*800D0828 000CD628*/ PPC::Runtime::ASM::lwzx(context->r3, context->r28, context->r5);
/*800D082C 000CD62C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D0830 000CD630*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800D0834 000CD634*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f30);
/*800D0838 000CD638*/ PPC::Runtime::ASM::fmadds(context->f2, context->f29, context->f1, context->f2);
/*800D083C 000CD63C*/ PPC::Runtime::ASM::beq(.L_800D0848);
/*800D0840 000CD640*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f30);
/*800D0844 000CD644*/ PPC::Runtime::ASM::bge(.L_800D084C);
RUNTIME_PPC_JUMP_LABEL(.L_800D0848, 0x800D0848) //this is a jump label
/*800D0848 000CD648*/ PPC::Runtime::ASM::fmr(context->f30, context->f2);
RUNTIME_PPC_JUMP_LABEL(.L_800D084C, 0x800D084C) //this is a jump label
/*800D084C 000CD64C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*800D0850 000CD650*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D0854, 0x800D0854) //this is a jump label
/*800D0854 000CD654*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r27));
/*800D0858 000CD658*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*800D085C 000CD65C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D0860 000CD660*/ PPC::Runtime::ASM::cmpw(context->r24, context->r0);
/*800D0864 000CD664*/ PPC::Runtime::ASM::blt(.L_800D0750);
/*800D0868 000CD668*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
RUNTIME_PPC_JUMP_LABEL(.L_800D086C, 0x800D086C) //this is a jump label
/*800D086C 000CD66C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*800D0870 000CD670*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*800D0874 000CD674*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*800D0878 000CD678*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*800D087C 000CD67C*/ PPC::Runtime::ASM::psq_l(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800D0880 000CD680*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800D0884 000CD684*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800D0888 000CD688*/ PPC::Runtime::ASM::bl(_restgpr_21);
/*800D088C 000CD68C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800D0890 000CD690*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D0894 000CD694*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*800D0898 000CD698*/ PPC::Runtime::ASM::blr();
}