//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022CB74.hpp"
#include "fn_8022C568.hpp"
#include "fn_80062CA4.hpp"
#include "fn_80062ECC.hpp"



void fn_801FE4F4(PPC::Runtime::GCContext* context)
{
/*801FE4F4 001FB2F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*801FE4F8 001FB2F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FE4FC 001FB2FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801FE500 001FB300*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801FE504 001FB304*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801FE508 001FB308*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801FE50C 001FB30C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801FE510 001FB310*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801FE514 001FB314*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801FE518 001FB318*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801FE51C 001FB31C*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*801FE520 001FB320*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801FE524 001FB324*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801FE528 001FB328*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FE52C 001FB32C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801FE530 001FB330*/ PPC::Runtime::ASM::bl(fn_8022CB74);
/*801FE534 001FB334*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801FE538 001FB338*/ PPC::Runtime::ASM::beq(.L_801FE5A8);
/*801FE53C 001FB33C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FE540 001FB340*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801FE544 001FB344*/ PPC::Runtime::ASM::bl(fn_8022C568);
/*801FE548 001FB348*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801FE54C 001FB34C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801FE550 001FB350*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*801FE554 001FB354*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801FE558 001FB358*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FE55C 001FB35C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801FE560 001FB360*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801FE564 001FB364*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801FE568 001FB368*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*801FE56C 001FB36C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f2, context->f0);
/*801FE570 001FB370*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FE574 001FB374*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*801FE578 001FB378*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801FE57C 001FB37C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801FE580 001FB380*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801FE584 001FB384*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801FE588 001FB388*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801FE58C 001FB38C*/ PPC::Runtime::ASM::bl(fn_80062ECC);
/*801FE590 001FB390*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2244 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FE594 001FB394*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801FE598 001FB398*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f31);
/*801FE59C 001FB39C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801FE5A0 001FB3A0*/ PPC::Runtime::ASM::bne(.L_801FE5A8);
/*801FE5A4 001FB3A4*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801FE5A8, 0x801FE5A8) //this is a jump label
/*801FE5A8 001FB3A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FE5AC 001FB3AC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801FE5B0 001FB3B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801FE5B4 001FB3B4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801FE5B8 001FB3B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801FE5BC 001FB3BC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801FE5C0 001FB3C0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801FE5C4 001FB3C4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801FE5C8 001FB3C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FE5CC 001FB3CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*801FE5D0 001FB3D0*/ PPC::Runtime::ASM::blr();
}