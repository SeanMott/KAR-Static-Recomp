//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_800A59DC.hpp"



void fn_800A6E44(PPC::Runtime::GCContext* context)
{
/*800A6E44 000A3C44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*800A6E48 000A3C48*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A6E4C 000A3C4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800A6E50 000A3C50*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*800A6E54 000A3C54*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*800A6E58 000A3C58*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*800A6E5C 000A3C5C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*800A6E60 000A3C60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A6E64 000A3C64*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A6E68 000A3C68*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800A6E6C 000A3C6C*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xc);
/*800A6E70 000A3C70*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800A6E74 000A3C74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800A6E78 000A3C78*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x2);
/*800A6E7C 000A3C7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*800A6E80 000A3C80*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800A6E84 000A3C84*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800A6E88 000A3C88*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r4));
/*800A6E8C 000A3C8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800A6E90 000A3C90*/ PPC::Runtime::ASM::add(context->r4, context->r7, context->r6);
/*800A6E94 000A3C94*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800A6E98 000A3C98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800A6E9C 000A3C9C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800A6EA0 000A3CA0*/ PPC::Runtime::ASM::extrwi(context->r29, context->r5, 1, 24);
/*800A6EA4 000A3CA4*/ PPC::Runtime::ASM::lfsx(context->f31, context->r7, context->r6);
/*800A6EA8 000A3CA8*/ PPC::Runtime::ASM::lwzx(context->r30, context->r3, context->r0);
/*800A6EAC 000A3CAC*/ PPC::Runtime::ASM::bne(.L_800A6FC4);
/*800A6EB0 000A3CB0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF0E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A6EB4 000A3CB4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6EB8 000A3CB8*/ PPC::Runtime::ASM::li(context->r0, 0xc8);
/*800A6EBC 000A3CBC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A6EC0 000A3CC0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800A6EC4 000A3CC4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11, context->r1));
/*800A6EC8 000A3CC8*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r1));
/*800A6ECC 000A3CCC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r1));
/*800A6ED0 000A3CD0*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*800A6ED4 000A3CD4*/ PPC::Runtime::ASM::bne(.L_800A6EE4);
/*800A6ED8 000A3CD8*/ PPC::Runtime::ASM::li(context->r0, 0x80);
/*800A6EDC 000A3CDC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r1));
/*800A6EE0 000A3CE0*/ PPC::Runtime::ASM::b(.L_800A6EEC);
RUNTIME_PPC_JUMP_LABEL(.L_800A6EE4, 0x800A6EE4) //this is a jump label
/*800A6EE4 000A3CE4*/ PPC::Runtime::ASM::li(context->r0, 0x80);
/*800A6EE8 000A3CE8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800A6EEC, 0x800A6EEC) //this is a jump label
/*800A6EEC 000A3CEC*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A6EF0 000A3CF0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800A6EF4 000A3CF4*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A6EF8 000A3CF8*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*800A6EFC 000A3CFC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6F00 000A3D00*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A6F04 000A3D04*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800A6F08 000A3D08*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A6F0C 000A3D0C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A6F10 000A3D10*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A6F14 000A3D14*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*800A6F18 000A3D18*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A6F1C 000A3D1C*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A6F20 000A3D20*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A6F24 000A3D24*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800A6F28 000A3D28*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A6F2C 000A3D2C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*800A6F30 000A3D30*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A6F34 000A3D34*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*800A6F38 000A3D38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6F3C 000A3D3C*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*800A6F40 000A3D40*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800A6F44 000A3D44*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A6F48 000A3D48*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A6F4C 000A3D4C*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A6F50 000A3D50*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*800A6F54 000A3D54*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A6F58 000A3D58*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A6F5C 000A3D5C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*800A6F60 000A3D60*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800A6F64 000A3D64*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*800A6F68 000A3D68*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*800A6F6C 000A3D6C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A6F70 000A3D70*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*800A6F74 000A3D74*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6F78 000A3D78*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*800A6F7C 000A3D7C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A6F80 000A3D80*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*800A6F84 000A3D84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A6F88 000A3D88*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800A6F8C 000A3D8C*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800A6F90 000A3D90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A6F94 000A3D94*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*800A6F98 000A3D98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A6F9C 000A3D9C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800A6FA0 000A3DA0*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800A6FA4 000A3DA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A6FA8 000A3DA8*/ PPC::Runtime::ASM::bl(fn_GXSetChanAmbColor);
/*800A6FAC 000A3DAC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6FB0 000A3DB0*/ PPC::Runtime::ASM::bl(fn_GXSetCullMode);
/*800A6FB4 000A3DB4*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800A6FB8 000A3DB8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800A6FBC 000A3DBC*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800A6FC0 000A3DC0*/ PPC::Runtime::ASM::bl(fn_800A59DC);
RUNTIME_PPC_JUMP_LABEL(.L_800A6FC4, 0x800A6FC4) //this is a jump label
/*800A6FC4 000A3DC4*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*800A6FC8 000A3DC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800A6FCC 000A3DCC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*800A6FD0 000A3DD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*800A6FD4 000A3DD4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*800A6FD8 000A3DD8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A6FDC 000A3DDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A6FE0 000A3DE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*800A6FE4 000A3DE4*/ PPC::Runtime::ASM::blr();
}