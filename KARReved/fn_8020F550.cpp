//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204FAC.hpp"
#include "fn_801FC398.hpp"



void fn_8020F550(PPC::Runtime::GCContext* context)
{
/*8020F550 0020C350*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020F554 0020C354*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020F558 0020C358*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020F55C 0020C35C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020F560 0020C360*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020F564 0020C364*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c0, context->r3));
/*8020F568 0020C368*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x95c, context->r3));
/*8020F56C 0020C36C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*8020F570 0020C370*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8020F574 0020C374*/ PPC::Runtime::ASM::bne(.L_8020F588);
/*8020F578 0020C378*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8020F57C 0020C37C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r31));
/*8020F580 0020C380*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x95c, context->r31));
/*8020F584 0020C384*/ PPC::Runtime::ASM::bl(fn_80204FAC);
RUNTIME_PPC_JUMP_LABEL(.L_8020F588, 0x8020F588) //this is a jump label
/*8020F588 0020C388*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r31));
/*8020F58C 0020C38C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8020F590 0020C390*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*8020F594 0020C394*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E251C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020F598 0020C398*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r31));
/*8020F59C 0020C39C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8020F5A0 0020C3A0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8020F5A4 0020C3A4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2520 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020F5A8 0020C3A8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x87c, context->r31));
/*8020F5AC 0020C3AC*/ PPC::Runtime::ASM::li(context->r4, 0xf);
/*8020F5B0 0020C3B0*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*8020F5B4 0020C3B4*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*8020F5B8 0020C3B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020F5BC 0020C3BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020F5C0 0020C3C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020F5C4 0020C3C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020F5C8 0020C3C8*/ PPC::Runtime::ASM::blr();
}