//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn___cvt_sll_flt(PPC::Runtime::GCContext* context)
{
/*803AE03C 003AAE3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/* 803AE040 003AAE40  54 65 00 01 */ clrrwi. context->r5 , context->r3 , 31
/*803AE044 003AAE44*/ PPC::Runtime::ASM::beq(.L_803AE050);
/*803AE048 003AAE48*/ PPC::Runtime::ASM::subfic(context->r4, context->r4, 0x0);
/*803AE04C 003AAE4C*/ PPC::Runtime::ASM::subfze(context->r3, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803AE050, 0x803AE050) //this is a jump label
/*803AE050 003AAE50*/ PPC::Runtime::ASM::or.(context->r7, context->r3, context->r4);
/*803AE054 003AAE54*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803AE058 003AAE58*/ PPC::Runtime::ASM::beq(.L_803AE0D8);
/*803AE05C 003AAE5C*/ PPC::Runtime::ASM::cntlzw(context->r7, context->r3);
/*803AE060 003AAE60*/ PPC::Runtime::ASM::cntlzw(context->r8, context->r4);
/* 803AE064 003AAE64  54 E9 D0 08 */ extlwi context->r9 , context->r7 , 5 , 26
/*803AE068 003AAE68*/ PPC::Runtime::ASM::srawi(context->r9, context->r9, 31);
/*803AE06C 003AAE6C*/ PPC::Runtime::ASM::and(context->r9, context->r9, context->r8);
/*803AE070 003AAE70*/ PPC::Runtime::ASM::add(context->r7, context->r7, context->r9);
/*803AE074 003AAE74*/ PPC::Runtime::ASM::subfic(context->r8, context->r7, 0x20);
/*803AE078 003AAE78*/ PPC::Runtime::ASM::subic(context->r9, context->r7, 0x20);
/*803AE07C 003AAE7C*/ PPC::Runtime::ASM::slw(context->r3, context->r3, context->r7);
/*803AE080 003AAE80*/ PPC::Runtime::ASM::srw(context->r10, context->r4, context->r8);
/*803AE084 003AAE84*/ PPC::Runtime::ASM::or(context->r3, context->r3, context->r10);
/*803AE088 003AAE88*/ PPC::Runtime::ASM::slw(context->r10, context->r4, context->r9);
/*803AE08C 003AAE8C*/ PPC::Runtime::ASM::or(context->r3, context->r3, context->r10);
/*803AE090 003AAE90*/ PPC::Runtime::ASM::slw(context->r4, context->r4, context->r7);
/*803AE094 003AAE94*/ PPC::Runtime::ASM::subf(context->r6, context->r7, context->r6);
/*803AE098 003AAE98*/ PPC::Runtime::ASM::clrlwi(context->r7, context->r4, 21);
/*803AE09C 003AAE9C*/ PPC::Runtime::ASM::cmpwi(context->r7, 0x400);
/*803AE0A0 003AAEA0*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x43e);
/*803AE0A4 003AAEA4*/ PPC::Runtime::ASM::blt(.L_803AE0C0);
/*803AE0A8 003AAEA8*/ PPC::Runtime::ASM::bgt(.L_803AE0B4);
/*803AE0AC 003AAEAC*/ PPC::Runtime::ASM::rlwinm.(context->r7, context->r4, 0, 20, 20);
/*803AE0B0 003AAEB0*/ PPC::Runtime::ASM::beq(.L_803AE0C0);
RUNTIME_PPC_JUMP_LABEL(.L_803AE0B4, 0x803AE0B4) //this is a jump label
/*803AE0B4 003AAEB4*/ PPC::Runtime::ASM::addic(context->r4, context->r4, 0x800);
/*803AE0B8 003AAEB8*/ PPC::Runtime::ASM::addze(context->r3, context->r3);
/*803AE0BC 003AAEBC*/ PPC::Runtime::ASM::addze(context->r6, context->r6);
RUNTIME_PPC_JUMP_LABEL(.L_803AE0C0, 0x803AE0C0) //this is a jump label
/*803AE0C0 003AAEC0*/ PPC::Runtime::ASM::rotrwi(context->r4, context->r4, 11);
/*803AE0C4 003AAEC4*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r3, 21, 0, 10);
/*803AE0C8 003AAEC8*/ PPC::Runtime::ASM::extrwi(context->r3, context->r3, 20, 1);
/*803AE0CC 003AAECC*/ PPC::Runtime::ASM::slwi(context->r6, context->r6, 20);
/*803AE0D0 003AAED0*/ PPC::Runtime::ASM::or(context->r3, context->r6, context->r3);
/*803AE0D4 003AAED4*/ PPC::Runtime::ASM::or(context->r3, context->r5, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803AE0D8, 0x803AE0D8) //this is a jump label
/*803AE0D8 003AAED8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803AE0DC 003AAEDC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803AE0E0 003AAEE0*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803AE0E4 003AAEE4*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
/*803AE0E8 003AAEE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803AE0EC 003AAEEC*/ PPC::Runtime::ASM::blr();
}