//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B7C2C.hpp"
#include "fn_801B7C4C.hpp"
#include "fn_801B7C2C.hpp"
#include "fn_801B7C4C.hpp"



void fn_801B7AB4(PPC::Runtime::GCContext* context)
{
/*801B7AB4 001B48B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B7AB8 001B48B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B7ABC 001B48BC*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801B7AC0 001B48C0*/ PPC::Runtime::ASM::li(context->r5, 0x70);
/*801B7AC4 001B48C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B7AC8 001B48C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7ACC 001B48CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B7AD0 001B48D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r3));
/*801B7AD4 001B48D4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*801B7AD8 001B48D8*/ PPC::Runtime::ASM::li(context->r4, 0x50);
/*801B7ADC 001B48DC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r3));
/*801B7AE0 001B48E0*/ PPC::Runtime::ASM::ble(.L_801B7AE8);
/*801B7AE4 001B48E4*/ PPC::Runtime::ASM::li(context->r5, 0x73);
RUNTIME_PPC_JUMP_LABEL(.L_801B7AE8, 0x801B7AE8) //this is a jump label
/*801B7AE8 001B48E8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E16E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7AEC 001B48EC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B7AF0 001B48F0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E16EC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7AF4 001B48F4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B7AF8 001B48F8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B7AFC 001B48FC*/ PPC::Runtime::ASM::lis(context->r4, fn_801B7C2C @ Get_MemoryOffset_HighBit);
/*801B7B00 001B4900*/ PPC::Runtime::ASM::lis(context->r3, fn_801B7C4C @ Get_MemoryOffset_HighBit);
/*801B7B04 001B4904*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B7C2C @ Get_MemoryOffset_LowBit);
/*801B7B08 001B4908*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B7B0C 001B490C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B7C4C @ Get_MemoryOffset_LowBit);
/*801B7B10 001B4910*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B7B14 001B4914*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7B18 001B4918*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B7B1C 001B491C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B7B20 001B4920*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B7B24 001B4924*/ PPC::Runtime::ASM::blr();
}