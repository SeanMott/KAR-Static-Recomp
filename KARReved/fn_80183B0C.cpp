//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"
#include "fn_800644AC.hpp"



void fn_80183B0C(PPC::Runtime::GCContext* context)
{
/*80183B0C 0018090C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80183B10 00180910*/ PPC::Runtime::ASM::mflr(context->r0);
/*80183B14 00180914*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80183B18 00180918*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80183B1C 0018091C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80183B20 00180920*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80183B24 00180924*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80183B28 00180928*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1168, context->r3));
/*80183B2C 0018092C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80183B30 00180930*/ PPC::Runtime::ASM::beq(.L_80183BA8);
/*80183B34 00180934*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80183B38 00180938*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80183B3C 0018093C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80183B40 00180940*/ PPC::Runtime::ASM::bne(.L_80183B54);
/*80183B44 00180944*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6E38 @ Get_MemoryOffset_SDA21);
/*80183B48 00180948*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*80183B4C 0018094C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6E40 @ Get_MemoryOffset_SDA21);
/*80183B50 00180950*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80183B54, 0x80183B54) //this is a jump label
/*80183B54 00180954*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80183B58 00180958*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80183B5C 0018095C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80183B60 00180960*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80183B64 00180964*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80183B68 00180968*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80183B6C 0018096C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80183B70 00180970*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80183B74 00180974*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80183B78 00180978*/ PPC::Runtime::ASM::beq(.L_80183B94);
/*80183B7C 0018097C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80183B80 00180980*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*80183B84 00180984*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80183B88 00180988*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80183B8C 0018098C*/ PPC::Runtime::ASM::bl(fn_800644AC);
/*80183B90 00180990*/ PPC::Runtime::ASM::b(.L_80183BA8);
RUNTIME_PPC_JUMP_LABEL(.L_80183B94, 0x80183B94) //this is a jump label
/*80183B94 00180994*/ PPC::Runtime::ASM::lis(context->r3, String_ "mnlandialogue." Get_MemoryOffset_HighBit);
/*80183B98 00180998*/ PPC::Runtime::ASM::li(context->r4, 0x4f);
/*80183B9C 0018099C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "mnlandialogue." Get_MemoryOffset_LowBit);
/*80183BA0 001809A0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6E48 @ Get_MemoryOffset_SDA21);
/*80183BA4 001809A4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80183BA8, 0x80183BA8) //this is a jump label
/*80183BA8 001809A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80183BAC 001809AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80183BB0 001809B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80183BB4 001809B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80183BB8 001809B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80183BBC 001809BC*/ PPC::Runtime::ASM::blr();
}