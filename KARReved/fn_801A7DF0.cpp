//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801AA1B8.hpp"
#include "fn_80055C7C.hpp"



void fn_801A7DF0(PPC::Runtime::GCContext* context)
{
/*801A7DF0 001A4BF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A7DF4 001A4BF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A7DF8 001A4BF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A7DFC 001A4BFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A7E00 001A4C00*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A7E04 001A4C04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x77c, context->r3));
/*801A7E08 001A4C08*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801A7E0C 001A4C0C*/ PPC::Runtime::ASM::bne(.L_801A7E34);
/*801A7E10 001A4C10*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD810 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A7E14 001A4C14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*801A7E18 001A4C18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*801A7E1C 001A4C1C*/ PPC::Runtime::ASM::bl(fn_801AA1B8);
/*801A7E20 001A4C20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x790, context->r31));
/*801A7E24 001A4C24*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801A7E28 001A4C28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801A7E2C 001A4C2C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x190, context->r4));
/*801A7E30 001A4C30*/ PPC::Runtime::ASM::bl(fn_80055C7C);
RUNTIME_PPC_JUMP_LABEL(.L_801A7E34, 0x801A7E34) //this is a jump label
/*801A7E34 001A4C34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A7E38 001A4C38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A7E3C 001A4C3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A7E40 001A4C40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A7E44 001A4C44*/ PPC::Runtime::ASM::blr();
}