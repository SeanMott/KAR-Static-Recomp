//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800ABA74.hpp"



void fn_800AE4BC(PPC::Runtime::GCContext* context)
{
/*800AE4BC 000AB2BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AE4C0 000AB2C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AE4C4 000AB2C4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AE4C8 000AB2C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE4CC 000AB2CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE4D0 000AB2D0*/ PPC::Runtime::ASM::bne(.L_800AE508);
/*800AE4D4 000AB2D4*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE4D8 000AB2D8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE4DC 000AB2DC*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800AE4E0 000AB2E0*/ PPC::Runtime::ASM::lis(context->r4, StructWithStructs_56 @ Get_MemoryOffset_HighBit);
/*800AE4E4 000AB2E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AE4E8 000AB2E8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithStructs_56 @ Get_MemoryOffset_LowBit);
/*800AE4EC 000AB2EC*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800AE4F0 000AB2F0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800AE4F4 000AB2F4*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800AE4F8 000AB2F8*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE4FC 000AB2FC*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD5BC @ Get_MemoryOffset_HighBit);
/*800AE500 000AB300*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD5BC @ Get_MemoryOffset_LowBit);
/*800AE504 000AB304*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800AE508, 0x800AE508) //this is a jump label
/*800AE508 000AB308*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE50C 000AB30C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AE510 000AB310*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE514 000AB314*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AE518 000AB318*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AE51C 000AB31C*/ PPC::Runtime::ASM::blr();
}