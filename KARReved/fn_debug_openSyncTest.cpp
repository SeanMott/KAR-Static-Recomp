//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AFE30.hpp"
#include "fn_800AFE30.hpp"
#include "fn_800ABA74.hpp"



void fn_debug_openSyncTest(PPC::Runtime::GCContext* context)
{
/*800ADDE8 000AABE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADDEC 000AABEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADDF0 000AABF0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADDF4 000AABF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADDF8 000AABF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADDFC 000AABFC*/ PPC::Runtime::ASM::bne(.L_800ADE34);
/*800ADE00 000AAC00*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADE04 000AAC04*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADE08 000AAC08*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADE0C 000AAC0C*/ PPC::Runtime::ASM::lis(context->r4, StructWithStructs_74_DoesSomethingWithShoriochi @ Get_MemoryOffset_HighBit);
/*800ADE10 000AAC10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADE14 000AAC14*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithStructs_74_DoesSomethingWithShoriochi @ Get_MemoryOffset_LowBit);
/*800ADE18 000AAC18*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADE1C 000AAC1C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADE20 000AAC20*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADE24 000AAC24*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADE28 000AAC28*/ PPC::Runtime::ASM::lis(context->r4, fn_800AFE30 @ Get_MemoryOffset_HighBit);
/*800ADE2C 000AAC2C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AFE30 @ Get_MemoryOffset_LowBit);
/*800ADE30 000AAC30*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADE34, 0x800ADE34) //this is a jump label
/*800ADE34 000AAC34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADE38 000AAC38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADE3C 000AAC3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADE40 000AAC40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADE44 000AAC44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADE48 000AAC48*/ PPC::Runtime::ASM::blr();
}