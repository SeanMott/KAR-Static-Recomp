//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A7DD8(PPC::Runtime::GCContext* context)
{
/*802A7DD8 002A4BD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A7DDC 002A4BDC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A7DE0 002A4BE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A7DE4 002A4BE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A7DE8 002A4BE8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A7DEC 002A4BEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A7DF0 002A4BF0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A7DF4 002A4BF4*/ PPC::Runtime::ASM::beq(.L_802A7EB4);
/*802A7DF8 002A4BF8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C2664 @ Get_MemoryOffset_HighBit);
/*802A7DFC 002A4BFC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A7E00 002A4C00*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C2664 @ Get_MemoryOffset_LowBit);
/*802A7E04 002A4C04*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E08 002A4C08*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A7E0C 002A4C0C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A7E10 002A4C10*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A7E14 002A4C14*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A7E18 002A4C18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A7E1C 002A4C1C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E20 002A4C20*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A7E24 002A4C24*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E28 002A4C28*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E2C 002A4C2C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A7E30 002A4C30*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E34 002A4C34*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E38 002A4C38*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A7E3C 002A4C3C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E40 002A4C40*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E44 002A4C44*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A7E48 002A4C48*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E4C 002A4C4C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E50 002A4C50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A7E54 002A4C54*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E58 002A4C58*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E5C 002A4C5C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A7E60 002A4C60*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E64 002A4C64*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E68 002A4C68*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A7E6C 002A4C6C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E70 002A4C70*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E74 002A4C74*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A7E78 002A4C78*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E7C 002A4C7C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E80 002A4C80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A7E84 002A4C84*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E88 002A4C88*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E8C 002A4C8C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A7E90 002A4C90*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7E94 002A4C94*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7E98 002A4C98*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A7E9C 002A4C9C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A7EA0 002A4CA0*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A7EA4 002A4CA4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A7EA8 002A4CA8*/ PPC::Runtime::ASM::ble(.L_802A7EB4);
/*802A7EAC 002A4CAC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A7EB0 002A4CB0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A7EB4, 0x802A7EB4) //this is a jump label
/*802A7EB4 002A4CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A7EB8 002A4CB8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A7EBC 002A4CBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A7EC0 002A4CC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A7EC4 002A4CC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A7EC8 002A4CC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A7ECC 002A4CCC*/ PPC::Runtime::ASM::blr();
}