//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8007FC98(PPC::Runtime::GCContext* context)
{
/*8007FC98 0007CA98*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180552DE8 @ Get_MemoryOffset_HighBit);
/*8007FC9C 0007CA9C*/ PPC::Runtime::ASM::addi(context->r5, context->r3, STRUCT_BYTE4_COUNT_180552DE8 @ Get_MemoryOffset_LowBit);
/*8007FCA0 0007CAA0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8007FCA4 0007CAA4*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8007FCA8 0007CAA8*/ PPC::Runtime::ASM::beqlr();
/*8007FCAC 0007CAAC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r4));
/*8007FCB0 0007CAB0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8007FCB4 0007CAB4*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 26, 24);
/*8007FCB8 0007CAB8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r4));
/*8007FCBC 0007CABC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8007FCC0 0007CAC0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r4));
/*8007FCC4 0007CAC4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 25);
/*8007FCC8 0007CAC8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r4));
/*8007FCCC 0007CACC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8007FCD0 0007CAD0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*8007FCD4 0007CAD4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8007FCD8 0007CAD8*/ PPC::Runtime::ASM::blr();
}