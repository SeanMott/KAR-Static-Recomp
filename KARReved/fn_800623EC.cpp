//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800623EC(PPC::Runtime::GCContext* context)
{
/*800623EC 0005F1EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800623F0 0005F1F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800623F4 0005F1F4*/ PPC::Runtime::ASM::mulli(context->r4, context->r3, 0xb8);
/*800623F8 0005F1F8*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*800623FC 0005F1FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80062400 0005F200*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*80062404 0005F204*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80062408 0005F208*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*8006240C 0005F20C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x33c);
/*80062410 0005F210*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80062414 0005F214*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80062418 0005F218*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37c, context->r3));
/*8006241C 0005F21C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80062420 0005F220*/ PPC::Runtime::ASM::beq(.L_8006242C);
/*80062424 0005F224*/ PPC::Runtime::ASM::bl(fn_80443D8C);
/*80062428 0005F228*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8006242C, 0x8006242C) //this is a jump label
/*8006242C 0005F22C*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42, context->r31));
/*80062430 0005F230*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80062434 0005F234*/ PPC::Runtime::ASM::beq(.L_80062440);
/*80062438 0005F238*/ PPC::Runtime::ASM::bl(fn_80443D8C);
/*8006243C 0005F23C*/ PPC::Runtime::ASM::add(context->r30, context->r30, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80062440, 0x80062440) //this is a jump label
/*80062440 0005F240*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80062444 0005F244*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80062448 0005F248*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8006244C 0005F24C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80062450 0005F250*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80062454 0005F254*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80062458 0005F258*/ PPC::Runtime::ASM::blr();
}