//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000AE08(PPC::Runtime::GCContext* context)
{
/*8000AE08 00007C08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000AE0C 00007C0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000AE10 00007C10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AE14 00007C14*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000AE18 00007C18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AE1C 00007C1C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5af, context->r3));
/*8000AE20 00007C20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AE24 00007C24*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000AE28 00007C28*/ PPC::Runtime::ASM::blr();
}