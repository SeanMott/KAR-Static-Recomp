//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_lbLoadArchive.hpp"



void fn_vcLoadCommon(PPC::Runtime::GCContext* context)
{
/*801C6D0C 001C3B0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C6D10 001C3B10*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C6D14 001C3B14*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B080C @ Get_MemoryOffset_HighBit);
/*801C6D18 001C3B18*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B081C @ Get_MemoryOffset_HighBit);
/*801C6D1C 001C3B1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C6D20 001C3B20*/ PPC::Runtime::ASM::addi(context->r6, context->r3, lbl_804B081C @ Get_MemoryOffset_LowBit);
/*801C6D24 001C3B24*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_804B080C @ Get_MemoryOffset_LowBit);
/*801C6D28 001C3B28*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801C6D2C 001C3B2C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801C6D30 001C3B30*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801C6D34 001C3B34*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801C6D38 001C3B38*/ PPC::Runtime::ASM::bl(fn_lbLoadArchive);
/*801C6D3C 001C3B3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C6D40 001C3B40*/ PPC::Runtime::ASM::stw(context->r3, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C6D44 001C3B44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801C6D48 001C3B48*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C6D4C 001C3B4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801C6D50 001C3B50*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD840 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C6D54 001C3B54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801C6D58 001C3B58*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD83C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C6D5C 001C3B5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801C6D60 001C3B60*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD844 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C6D64 001C3B64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C6D68 001C3B68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C6D6C 001C3B6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C6D70 001C3B70*/ PPC::Runtime::ASM::blr();
}