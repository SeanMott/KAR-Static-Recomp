//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8003D5F0.hpp"
#include "fn_gmGetClearcheckerType0Ptr.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_8022EB10.hpp"



void fn_8004B814(PPC::Runtime::GCContext* context)
{
/*8004B814 00048614*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8004B818 00048618*/ PPC::Runtime::ASM::mflr(context->r0);
/*8004B81C 0004861C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8004B820 00048620*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8004B824 00048624*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8004B828 00048628*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004B82C 0004862C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8004B830 00048630*/ PPC::Runtime::ASM::bl(fn_8003D5F0);
/*8004B834 00048634*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8004B838 00048638*/ PPC::Runtime::ASM::bl(fn_gmGetClearcheckerType0Ptr);
/*8004B83C 0004863C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8004B840 00048640*/ PPC::Runtime::ASM::extsb(context->r31, context->r31);
/*8004B844 00048644*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8004B848 00048648*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8004B84C, 0x8004B84C) //this is a jump label
/*8004B84C 0004864C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8004B850 00048650*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*8004B854 00048654*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8004B858 00048658*/ PPC::Runtime::ASM::beq(.L_8004B86C);
/*8004B85C 0004865C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8004B860 00048660*/ PPC::Runtime::ASM::bne(.L_8004B87C);
/*8004B864 00048664*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*8004B868 00048668*/ PPC::Runtime::ASM::bne(.L_8004B87C);
RUNTIME_PPC_JUMP_LABEL(.L_8004B86C, 0x8004B86C) //this is a jump label
/*8004B86C 0004866C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8004B870 00048670*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*8004B874 00048674*/ PPC::Runtime::ASM::bl(fn_8022EB10);
/*8004B878 00048678*/ PPC::Runtime::ASM::add(context->r29, context->r29, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8004B87C, 0x8004B87C) //this is a jump label
/*8004B87C 0004867C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8004B880 00048680*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x5);
/*8004B884 00048684*/ PPC::Runtime::ASM::blt(.L_8004B84C);
/*8004B888 00048688*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r30));
/*8004B88C 0004868C*/ PPC::Runtime::ASM::add(context->r29, context->r29, context->r0);
/*8004B890 00048690*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8004B894 00048694*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8004B898 00048698*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8004B89C 0004869C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004B8A0 000486A0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8004B8A4 000486A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8004B8A8 000486A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004B8AC 000486AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8004B8B0 000486B0*/ PPC::Runtime::ASM::blr();
}