//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025E9D0(PPC::Runtime::GCContext* context)
{
/*8025E9D0 0025B7D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E9D4 0025B7D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E9D8 0025B7D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E9DC 0025B7DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E9E0 0025B7E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E9E4 0025B7E4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025E9E8 0025B7E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E9EC 0025B7EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E9F0 0025B7F0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025E9F4 0025B7F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E9F8 0025B7F8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E9FC 0025B7FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025EA00 0025B800*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EA04 0025B804*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025EA08 0025B808*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025EA0C 0025B80C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025EA10 0025B810*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025EA14 0025B814*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EA18 0025B818*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025EA1C 0025B81C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025EA20 0025B820*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025EA24 0025B824*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025EA28 0025B828*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025EA2C 0025B82C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025EA30 0025B830*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025EA34 0025B834*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025EA38 0025B838*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025EA3C 0025B83C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025EA40 0025B840*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025EA44 0025B844*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025EA48 0025B848*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025EA4C 0025B84C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025EA50 0025B850*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025EA54 0025B854*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025EA58 0025B858*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025EA5C 0025B85C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025EA60 0025B860*/ PPC::Runtime::ASM::blr();
}