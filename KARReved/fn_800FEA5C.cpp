//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D4BF4.hpp"
#include "fn_800D4CA0.hpp"
#include "fn_800D4D58.hpp"



void fn_800FEA5C(PPC::Runtime::GCContext* context)
{
/*800FEA5C 000FB85C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FEA60 000FB860*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FEA64 000FB864*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FEA68 000FB868*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FEA6C 000FB86C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FEA70 000FB870*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800FEA74 000FB874*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEA78 000FB878*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800FEA7C 000FB87C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FEA80 000FB880*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FEA84 000FB884*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FEA88 000FB888*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800FEA8C 000FB88C*/ PPC::Runtime::ASM::bl(fn_800D4BF4);
/*800FEA90 000FB890*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800FEA94 000FB894*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800FEA98 000FB898*/ PPC::Runtime::ASM::bl(fn_800D4CA0);
/*800FEA9C 000FB89C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800FEAA0 000FB8A0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800FEAA4 000FB8A4*/ PPC::Runtime::ASM::bl(fn_800D4D58);
/*800FEAA8 000FB8A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FEAAC 000FB8AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FEAB0 000FB8B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FEAB4 000FB8B4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEAB8 000FB8B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FEABC 000FB8BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FEAC0 000FB8C0*/ PPC::Runtime::ASM::blr();
}