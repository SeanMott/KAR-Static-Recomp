//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D5D9C.hpp"
#include "fn_800CEFB4.hpp"



void fn_800BB440(PPC::Runtime::GCContext* context)
{
/*800BB440 000B8240*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0xe0, context->r1));
/*800BB444 000B8244*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BB448 000B8248*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r1));
/*800BB44C 000B824C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r1));
/*800BB450 000B8250*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r1)0, context->qr0);
/*800BB454 000B8254*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r1));
/*800BB458 000B8258*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r1)0, context->qr0);
/*800BB45C 000B825C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0xc0);
/*800BB460 000B8260*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800BB464 000B8264*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*800BB468 000B8268*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800BB46C 000B826C*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800BB470 000B8270*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800BB474 000B8274*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*800BB478 000B8278*/ PPC::Runtime::ASM::bl(fn_800D5D9C);
/*800BB47C 000B827C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r1));
/*800BB480 000B8280*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800BB484 000B8284*/ PPC::Runtime::ASM::ble(.L_800BB5A8);
/*800BB488 000B8288*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*800BB48C 000B828C*/ PPC::Runtime::ASM::bne(.L_800BB4E8);
/*800BB490 000B8290*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800BB494 000B8294*/ PPC::Runtime::ASM::bgt(.L_800BB4B0);
/*800BB498 000B8298*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_783 @ Get_MemoryOffset_HighBit);
/*800BB49C 000B829C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_784 @ Get_MemoryOffset_HighBit);
/*800BB4A0 000B82A0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_783 @ Get_MemoryOffset_LowBit);
/*800BB4A4 000B82A4*/ PPC::Runtime::ASM::li(context->r4, 0x2c);
/*800BB4A8 000B82A8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_784 @ Get_MemoryOffset_LowBit);
/*800BB4AC 000B82AC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800BB4B0, 0x800BB4B0) //this is a jump label
/*800BB4B0 000B82B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800BB4B4 000B82B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800BB4B8 000B82B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r1));
/*800BB4BC 000B82BC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800BB4C0 000B82C0*/ PPC::Runtime::ASM::bgt(.L_800BB4DC);
/*800BB4C4 000B82C4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_783 @ Get_MemoryOffset_HighBit);
/*800BB4C8 000B82C8*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_784 @ Get_MemoryOffset_HighBit);
/*800BB4CC 000B82CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_783 @ Get_MemoryOffset_LowBit);
/*800BB4D0 000B82D0*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*800BB4D4 000B82D4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_784 @ Get_MemoryOffset_LowBit);
/*800BB4D8 000B82D8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800BB4DC, 0x800BB4DC) //this is a jump label
/*800BB4DC 000B82DC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800BB4E0 000B82E0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800BB4E4 000B82E4*/ PPC::Runtime::ASM::b(.L_800BB5A0);
RUNTIME_PPC_JUMP_LABEL(.L_800BB4E8, 0x800BB4E8) //this is a jump label
/*800BB4E8 000B82E8*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805DF26C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BB4EC 000B82EC*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*800BB4F0 000B82F0*/ PPC::Runtime::ASM::bl(fn_800CEFB4);
/*800BB4F4 000B82F4*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*800BB4F8 000B82F8*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800BB4FC 000B82FC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800BB500 000B8300*/ PPC::Runtime::ASM::bl(fn_splArcLengthPoint);
/*800BB504 000B8304*/ PPC::Runtime::ASM::addi(context->r26, context->r1, 0x20);
/*800BB508 000B8308*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800BB50C 000B830C*/ PPC::Runtime::ASM::b(.L_800BB598);
RUNTIME_PPC_JUMP_LABEL(.L_800BB510, 0x800BB510) //this is a jump label
/*800BB510 000B8310*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r1));
/*800BB514 000B8314*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800BB518 000B8318*/ PPC::Runtime::ASM::blt(.L_800BB534);
/*800BB51C 000B831C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_783 @ Get_MemoryOffset_HighBit);
/*800BB520 000B8320*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_784 @ Get_MemoryOffset_HighBit);
/*800BB524 000B8324*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_783 @ Get_MemoryOffset_LowBit);
/*800BB528 000B8328*/ PPC::Runtime::ASM::li(context->r4, 0x2c);
/*800BB52C 000B832C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_784 @ Get_MemoryOffset_LowBit);
/*800BB530 000B8330*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800BB534, 0x800BB534) //this is a jump label
/*800BB534 000B8334*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r1));
/*800BB538 000B8338*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800BB53C 000B833C*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800BB540 000B8340*/ PPC::Runtime::ASM::blt(.L_800BB55C);
/*800BB544 000B8344*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_783 @ Get_MemoryOffset_HighBit);
/*800BB548 000B8348*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_784 @ Get_MemoryOffset_HighBit);
/*800BB54C 000B834C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_783 @ Get_MemoryOffset_LowBit);
/*800BB550 000B8350*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*800BB554 000B8354*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_784 @ Get_MemoryOffset_LowBit);
/*800BB558 000B8358*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800BB55C, 0x800BB55C) //this is a jump label
/*800BB55C 000B835C*/ PPC::Runtime::ASM::lfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800BB560 000B8360*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800BB564 000B8364*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*800BB568 000B8368*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*800BB56C 000B836C*/ PPC::Runtime::ASM::bl(fn_splArcLengthPoint);
/*800BB570 000B8370*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800BB574 000B8374*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800BB578 000B8378*/ PPC::Runtime::ASM::bl(fn_803D22CC);
/*800BB57C 000B837C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f1);
/*800BB580 000B8380*/ PPC::Runtime::ASM::bge(.L_800BB590);
/*800BB584 000B8384*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800BB588 000B8388*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800BB58C 000B838C*/ PPC::Runtime::ASM::stfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800BB590, 0x800BB590) //this is a jump label
/*800BB590 000B8390*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x8);
/*800BB594 000B8394*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800BB598, 0x800BB598) //this is a jump label
/*800BB598 000B8398*/ PPC::Runtime::ASM::cmpw(context->r28, context->r31);
/*800BB59C 000B839C*/ PPC::Runtime::ASM::blt(.L_800BB510);
RUNTIME_PPC_JUMP_LABEL(.L_800BB5A0, 0x800BB5A0) //this is a jump label
/*800BB5A0 000B83A0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800BB5A4 000B83A4*/ PPC::Runtime::ASM::b(.L_800BB5AC);
RUNTIME_PPC_JUMP_LABEL(.L_800BB5A8, 0x800BB5A8) //this is a jump label
/*800BB5A8 000B83A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BB5AC, 0x800BB5AC) //this is a jump label
/*800BB5AC 000B83AC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r1)0, context->qr0);
/*800BB5B0 000B83B0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r1));
/*800BB5B4 000B83B4*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r1)0, context->qr0);
/*800BB5B8 000B83B8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0xc0);
/*800BB5BC 000B83BC*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r1));
/*800BB5C0 000B83C0*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800BB5C4 000B83C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r1));
/*800BB5C8 000B83C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BB5CC 000B83CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0xe0);
/*800BB5D0 000B83D0*/ PPC::Runtime::ASM::blr();
}