//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000AF38.hpp"



void fn_801DED8C(PPC::Runtime::GCContext* context)
{
/*801DED8C 001DBB8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801DED90 001DBB90*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DED94 001DBB94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DED98 001DBB98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DED9C 001DBB9C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801DEDA0 001DBBA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DEDA4 001DBBA4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DEDA8 001DBBA8*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*801DEDAC 001DBBAC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DEDB0 001DBBB0*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801DEDB4 001DBBB4*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DD860 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DEDB8 001DBBB8*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*801DEDBC 001DBBBC*/ PPC::Runtime::ASM::beq(.L_801DEE38);
/*801DEDC0 001DBBC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r6));
/*801DEDC4 001DBBC4*/ PPC::Runtime::ASM::bl(fn_8000AF38);
/*801DEDC8 001DBBC8*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*801DEDCC 001DBBCC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801DEDD0 001DBBD0*/ PPC::Runtime::ASM::bne(.L_801DEDE8);
/*801DEDD4 001DBBD4*/ PPC::Runtime::ASM::add(context->r4, context->r30, context->r28);
/*801DEDD8 001DBBD8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r4));
/*801DEDDC 001DBBDC*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*801DEDE0 001DBBE0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r4));
/*801DEDE4 001DBBE4*/ PPC::Runtime::ASM::b(.L_801DEE38);
RUNTIME_PPC_JUMP_LABEL(.L_801DEDE8, 0x801DEDE8) //this is a jump label
/*801DEDE8 001DBBE8*/ PPC::Runtime::ASM::cmpwi(context->r31, -0x1);
/*801DEDEC 001DBBEC*/ PPC::Runtime::ASM::beq(.L_801DEE38);
/*801DEDF0 001DBBF0*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r31);
/*801DEDF4 001DBBF4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801DEDF8 001DBBF8*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*801DEDFC 001DBBFC*/ PPC::Runtime::ASM::bne(.L_801DEE18);
/*801DEE00 001DBC00*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0E10 @ Get_MemoryOffset_HighBit);
/*801DEE04 001DBC04*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0E54 @ Get_MemoryOffset_HighBit);
/*801DEE08 001DBC08*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0E10 @ Get_MemoryOffset_LowBit);
/*801DEE0C 001DBC0C*/ PPC::Runtime::ASM::li(context->r4, 0x285);
/*801DEE10 001DBC10*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0E54 @ Get_MemoryOffset_LowBit);
/*801DEE14 001DBC14*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DEE18, 0x801DEE18) //this is a jump label
/*801DEE18 001DBC18*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801DEE1C 001DBC1C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*801DEE20 001DBC20*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*801DEE24 001DBC24*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801DEE28 001DBC28*/ PPC::Runtime::ASM::bne(.L_801DEE38);
/*801DEE2C 001DBC2C*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*801DEE30 001DBC30*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*801DEE34 001DBC34*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801DEE38, 0x801DEE38) //this is a jump label
/*801DEE38 001DBC38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DEE3C 001DBC3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DEE40 001DBC40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DEE44 001DBC44*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DEE48 001DBC48*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DEE4C 001DBC4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DEE50 001DBC50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801DEE54 001DBC54*/ PPC::Runtime::ASM::blr();
}