//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"



void fn_8040B45C(PPC::Runtime::GCContext* context)
{
/*8040B45C 0040825C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8040B460 00408260*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040B464 00408264*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8040B468 00408268*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040B46C 0040826C*/ PPC::Runtime::ASM::beq(.L_8040B4A0);
/*8040B470 00408270*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8040B474 00408274*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*8040B478 00408278*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8040B47C 0040827C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8040B480 00408280*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*8040B484 00408284*/ PPC::Runtime::ASM::bne(.L_8040B4A0);
/*8040B488 00408288*/ PPC::Runtime::ASM::lis(context->r3, lbl_805039A8 @ Get_MemoryOffset_HighBit);
/*8040B48C 0040828C*/ PPC::Runtime::ASM::lis(context->r5, lbl_805039B4 @ Get_MemoryOffset_HighBit);
/*8040B490 00408290*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805039A8 @ Get_MemoryOffset_LowBit);
/*8040B494 00408294*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*8040B498 00408298*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_805039B4 @ Get_MemoryOffset_LowBit);
/*8040B49C 0040829C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040B4A0, 0x8040B4A0) //this is a jump label
/*8040B4A0 004082A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040B4A4 004082A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040B4A8 004082A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8040B4AC 004082AC*/ PPC::Runtime::ASM::blr();
}