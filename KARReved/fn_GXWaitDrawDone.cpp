//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_GXWaitDrawDone(PPC::Runtime::GCContext* context)
{
/*803CBE50 003C8C50*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CBE54 003C8C54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CBE58 003C8C58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803CBE5C 003C8C5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803CBE60 003C8C60*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803CBE64 003C8C64*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803CBE68 003C8C68*/ PPC::Runtime::ASM::b(.L_803CBE74);
RUNTIME_PPC_JUMP_LABEL(.L_803CBE6C, 0x803CBE6C) //this is a jump label
/*803CBE6C 003C8C6C*/ PPC::Runtime::ASM::li(context->r3, SkipAddress_51 @ Get_MemoryOffset_SDA21);
/*803CBE70 003C8C70*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_803CBE74, 0x803CBE74) //this is a jump label
/*803CBE74 003C8C74*/ PPC::Runtime::ASM::lbz(context->r0, SkipAddress_52 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CBE78 003C8C78*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803CBE7C 003C8C7C*/ PPC::Runtime::ASM::beq(.L_803CBE6C);
/*803CBE80 003C8C80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803CBE84 003C8C84*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803CBE88 003C8C88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803CBE8C 003C8C8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803CBE90 003C8C90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803CBE94 003C8C94*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CBE98 003C8C98*/ PPC::Runtime::ASM::blr();
}