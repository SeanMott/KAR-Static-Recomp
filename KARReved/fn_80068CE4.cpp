//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800BBE0C.hpp"



void fn_80068CE4(PPC::Runtime::GCContext* context)
{
/*80068CE4 00065AE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80068CE8 00065AE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80068CEC 00065AEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80068CF0 00065AF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80068CF4 00065AF4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80068CF8 00065AF8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80068CFC 00065AFC*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80068D00 00065B00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80068D04 00065B04*/ PPC::Runtime::ASM::extrwi(context->r3, context->r3, 8, 22);
/*80068D08 00065B08*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 14);
/*80068D0C 00065B0C*/ PPC::Runtime::ASM::bl(fn_800BBE0C);
/*80068D10 00065B10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80068D14 00065B14*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*80068D18 00065B18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80068D1C 00065B1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80068D20 00065B20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80068D24 00065B24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80068D28 00065B28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80068D2C 00065B2C*/ PPC::Runtime::ASM::blr();
}