//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80299DD4(PPC::Runtime::GCContext* context)
{
/*80299DD4 00296BD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80299DD8 00296BD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80299DDC 00296BDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80299DE0 00296BE0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80299DE4 00296BE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80299DE8 00296BE8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80299DEC 00296BEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80299DF0 00296BF0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80299DF4 00296BF4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80299DF8 00296BF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r3));
/*80299DFC 00296BFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80299E00 00296C00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80299E04 00296C04*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80299E08 00296C08*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r29));
/*80299E0C 00296C0C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r12));
/*80299E10 00296C10*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4e, context->r29));
/*80299E14 00296C14*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80299E18 00296C18*/ PPC::Runtime::ASM::bctrl();
/* 80299E1C 00296C1C  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*80299E20 00296C20*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80299E24 00296C24*/ PPC::Runtime::ASM::beq(.L_80299E48);
/*80299E28 00296C28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80299E2C 00296C2C*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*80299E30 00296C30*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80299E34 00296C34*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r12));
/*80299E38 00296C38*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80299E3C 00296C3C*/ PPC::Runtime::ASM::bctrl();
/*80299E40 00296C40*/ PPC::Runtime::ASM::add(context->r3, context->r29, context->r3);
/*80299E44 00296C44*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_80299E48, 0x80299E48) //this is a jump label
/*80299E48 00296C48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80299E4C 00296C4C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80299E50 00296C50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80299E54 00296C54*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80299E58 00296C58*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80299E5C 00296C5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80299E60 00296C60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80299E64 00296C64*/ PPC::Runtime::ASM::blr();
}