//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801E0F44(PPC::Runtime::GCContext* context)
{
/*801E0F44 001DDD44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E0F48 001DDD48*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E0F4C 001DDD4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0F50 001DDD50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0F54 001DDD54*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E0F58 001DDD58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r3));
/*801E0F5C 001DDD5C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801E0F60 001DDD60*/ PPC::Runtime::ASM::beq(.L_801E0F98);
/*801E0F64 001DDD64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x754, context->r31));
/*801E0F68 001DDD68*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801E0F6C 001DDD6C*/ PPC::Runtime::ASM::bne(.L_801E0F98);
/*801E0F70 001DDD70*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc34, context->r31));
/* 801E0F74 001DDD74  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801E0F78 001DDD78*/ PPC::Runtime::ASM::bne(.L_801E0F98);
/*801E0F7C 001DDD7C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x354);
/*801E0F80 001DDD80*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801E0F84 001DDD84*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1CB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0F88 001DDD88*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801E0F8C 001DDD8C*/ PPC::Runtime::ASM::bge(.L_801E0F98);
/*801E0F90 001DDD90*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E0F94 001DDD94*/ PPC::Runtime::ASM::b(.L_801E0FA4);
RUNTIME_PPC_JUMP_LABEL(.L_801E0F98, 0x801E0F98) //this is a jump label
/*801E0F98 001DDD98*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801E0F9C 001DDD9C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801E0FA0 001DDDA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801E0FA4, 0x801E0FA4) //this is a jump label
/*801E0FA4 001DDDA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0FA8 001DDDA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0FAC 001DDDAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E0FB0 001DDDB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E0FB4 001DDDB4*/ PPC::Runtime::ASM::blr();
}