//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memmove.hpp"
#include "memmove.hpp"
#include "memmove.hpp"
#include "memmove.hpp"



void fn_IFRingIn(PPC::Runtime::GCContext* context)
{
/*8047202C 0046EE2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80472030 0046EE30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80472034 0046EE34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x38, context->r1));
/*80472038 0046EE38*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8047203C 0046EE3C*/ PPC::Runtime::ASM::addi(context->r28, context->r5, 0x0);
/*80472040 0046EE40*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*80472044 0046EE44*/ PPC::Runtime::ASM::add(context->r0, context->r28, context->r6);
/*80472048 0046EE48*/ PPC::Runtime::ASM::add(context->r5, context->r27, context->r4);
/*8047204C 0046EE4C*/ PPC::Runtime::ASM::cmplw(context->r5, context->r0);
/*80472050 0046EE50*/ PPC::Runtime::ASM::addi(context->r29, context->r7, 0x0);
/*80472054 0046EE54*/ PPC::Runtime::ASM::addi(context->r30, context->r8, 0x0);
/*80472058 0046EE58*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*8047205C 0046EE5C*/ PPC::Runtime::ASM::bgt(.L_80472064);
/*80472060 0046EE60*/ PPC::Runtime::ASM::subf(context->r3, context->r4, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80472064, 0x80472064) //this is a jump label
/*80472064 0046EE64*/ PPC::Runtime::ASM::cmplw(context->r28, context->r3);
/*80472068 0046EE68*/ PPC::Runtime::ASM::bgt(.L_804720BC);
/*8047206C 0046EE6C*/ PPC::Runtime::ASM::subf(context->r0, context->r3, context->r5);
/*80472070 0046EE70*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80472074 0046EE74*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*80472078 0046EE78*/ PPC::Runtime::ASM::bgt(.L_80472090);
/*8047207C 0046EE7C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*80472080 0046EE80*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*80472084 0046EE84*/ PPC::Runtime::ASM::bl(memmove);
/*80472088 0046EE88*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8047208C 0046EE8C*/ PPC::Runtime::ASM::b(.L_804720CC);
RUNTIME_PPC_JUMP_LABEL(.L_80472090, 0x80472090) //this is a jump label
/*80472090 0046EE90*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*80472094 0046EE94*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x0);
/*80472098 0046EE98*/ PPC::Runtime::ASM::bl(memmove);
/*8047209C 0046EE9C*/ PPC::Runtime::ASM::add(context->r29, context->r29, context->r31);
/*804720A0 0046EEA0*/ PPC::Runtime::ASM::subf(context->r30, context->r31, context->r30);
/*804720A4 0046EEA4*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*804720A8 0046EEA8*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*804720AC 0046EEAC*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*804720B0 0046EEB0*/ PPC::Runtime::ASM::bl(memmove);
/*804720B4 0046EEB4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*804720B8 0046EEB8*/ PPC::Runtime::ASM::b(.L_804720CC);
RUNTIME_PPC_JUMP_LABEL(.L_804720BC, 0x804720BC) //this is a jump label
/*804720BC 0046EEBC*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*804720C0 0046EEC0*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*804720C4 0046EEC4*/ PPC::Runtime::ASM::bl(memmove);
/*804720C8 0046EEC8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
RUNTIME_PPC_JUMP_LABEL(.L_804720CC, 0x804720CC) //this is a jump label
/*804720CC 0046EECC*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*804720D0 0046EED0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*804720D4 0046EED4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x38);
/*804720D8 0046EED8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804720DC 0046EEDC*/ PPC::Runtime::ASM::blr();
}