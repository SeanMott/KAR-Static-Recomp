//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800BAB78(PPC::Runtime::GCContext* context)
{
/*800BAB78 000B7978*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800BAB7C 000B797C*/ PPC::Runtime::ASM::blt(.L_800BAB88);
/*800BAB80 000B7980*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800BAB84 000B7984*/ PPC::Runtime::ASM::blt(.L_800BAB90);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB88, 0x800BAB88) //this is a jump label
/*800BAB88 000B7988*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BAB8C 000B798C*/ PPC::Runtime::ASM::b(.L_800BABA4);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB90, 0x800BAB90) //this is a jump label
/*800BAB90 000B7990*/ PPC::Runtime::ASM::lis(context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BAB94 000B7994*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800BAB98 000B7998*/ PPC::Runtime::ASM::addi(context->r3, context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BAB9C 000B799C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800BABA0 000B79A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800BABA4, 0x800BABA4) //this is a jump label
/*800BABA4 000B79A4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BABA8 000B79A8*/ PPC::Runtime::ASM::beq(.L_800BABB4);
/*800BABAC 000B79AC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BABB0 000B79B0*/ PPC::Runtime::ASM::b(.L_800BABB8);
RUNTIME_PPC_JUMP_LABEL(.L_800BABB4, 0x800BABB4) //this is a jump label
/*800BABB4 000B79B4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BABB8, 0x800BABB8) //this is a jump label
/*800BABB8 000B79B8*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800BABBC 000B79BC*/ PPC::Runtime::ASM::beqlr();
/*800BABC0 000B79C0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800BABC4 000B79C4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 4, 27, 27);
/*800BABC8 000B79C8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800BABCC 000B79CC*/ PPC::Runtime::ASM::blr();
}