//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80197074.hpp"



void fn_80196F78(PPC::Runtime::GCContext* context)
{
/*80196F78 00193D78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80196F7C 00193D7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80196F80 00193D80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80196F84 00193D84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80196F88 00193D88*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80196F8C 00193D8C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80196F90 00193D90*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80196F94 00193D94*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80196F98 00193D98*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
/*80196F9C 00193D9C*/ PPC::Runtime::ASM::b(.L_80196FCC);
RUNTIME_PPC_JUMP_LABEL(.L_80196FA0, 0x80196FA0) //this is a jump label
/*80196FA0 00193DA0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x415, context->r31));
/*80196FA4 00193DA4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x414, context->r31));
/*80196FA8 00193DA8*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80196FAC 00193DAC*/ PPC::Runtime::ASM::extsb(context->r5, context->r3);
/*80196FB0 00193DB0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*80196FB4 00193DB4*/ PPC::Runtime::ASM::beq(.L_80196FC4);
/*80196FB8 00193DB8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80196FBC 00193DBC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80196FC0 00193DC0*/ PPC::Runtime::ASM::bl(fn_80197074);
RUNTIME_PPC_JUMP_LABEL(.L_80196FC4, 0x80196FC4) //this is a jump label
/*80196FC4 00193DC4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x2);
/*80196FC8 00193DC8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80196FCC, 0x80196FCC) //this is a jump label
/*80196FCC 00193DCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40c, context->r29));
/*80196FD0 00193DD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80196FD4 00193DD4*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80196FD8 00193DD8*/ PPC::Runtime::ASM::blt(.L_80196FA0);
/*80196FDC 00193DDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r29));
/*80196FE0 00193DE0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80196FE4 00193DE4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*80196FE8 00193DE8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r29));
/*80196FEC 00193DEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80196FF0 00193DF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80196FF4 00193DF4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80196FF8 00193DF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80196FFC 00193DFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80197000 00193E00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80197004 00193E04*/ PPC::Runtime::ASM::blr();
}