//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80177050(PPC::Runtime::GCContext* context)
{
/*80177050 00173E50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80177054 00173E54*/ PPC::Runtime::ASM::mflr(context->r0);
/*80177058 00173E58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8017705C 00173E5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80177060 00173E60*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80177064 00173E64*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80177068 00173E68*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8017706C 00173E6C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80177070, 0x80177070) //this is a jump label
/*80177070 00173E70*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80177074 00173E74*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80177078 00173E78*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8017707C 00173E7C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80177080 00173E80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcf4, context->r30));
/*80177084 00173E84*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80177088 00173E88*/ PPC::Runtime::ASM::beq(.L_80177094);
/*8017708C 00173E8C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80177090 00173E90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcf4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80177094, 0x80177094) //this is a jump label
/*80177094 00173E94*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80177098 00173E98*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8017709C 00173E9C*/ PPC::Runtime::ASM::blt(.L_80177070);
/*801770A0 00173EA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801770A4 00173EA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801770A8 00173EA8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801770AC 00173EAC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801770B0 00173EB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801770B4 00173EB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801770B8 00173EB8*/ PPC::Runtime::ASM::blr();
}