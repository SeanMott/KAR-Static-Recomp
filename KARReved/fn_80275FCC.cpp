//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80275FCC(PPC::Runtime::GCContext* context)
{
/*80275FCC 00272DCC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80275FD0 00272DD0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80275FD4 00272DD4*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B7A58 @ Get_MemoryOffset_HighBit);
/*80275FD8 00272DD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80275FDC 00272DDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80275FE0 00272DE0*/ PPC::Runtime::ASM::addi(context->r31, context->r5, lbl_804B7A58 @ Get_MemoryOffset_LowBit);
/*80275FE4 00272DE4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80275FE8 00272DE8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80275FEC 00272DEC*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*80275FF0 00272DF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x778, context->r3));
/*80275FF4 00272DF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x114, context->r30));
/*80275FF8 00272DF8*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x19c);
/*80275FFC 00272DFC*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*80276000 00272E00*/ PPC::Runtime::ASM::blt(.L_80276020);
/*80276004 00272E04*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xac);
/*80276008 00272E08*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8027600C 00272E0C*/ PPC::Runtime::ASM::bl(OSReport);
/*80276010 00272E10*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1c);
/*80276014 00272E14*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x68);
/*80276018 00272E18*/ PPC::Runtime::ASM::li(context->r4, 0x96);
/*8027601C 00272E1C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80276020, 0x80276020) //this is a jump label
/*80276020 00272E20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r30));
/*80276024 00272E24*/ PPC::Runtime::ASM::stb(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80276028 00272E28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r30));
/*8027602C 00272E2C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80276030 00272E30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r30));
/*80276034 00272E34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80276038 00272E38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8027603C 00272E3C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80276040 00272E40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80276044 00272E44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80276048 00272E48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8027604C 00272E4C*/ PPC::Runtime::ASM::blr();
}