//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802E6534(PPC::Runtime::GCContext* context)
{
/*802E6534 002E3334*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802E6538 002E3338*/ PPC::Runtime::ASM::mflr(context->r0);
/*802E653C 002E333C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802E6540 002E3340*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802E6544 002E3344*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802E6548 002E3348*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802E654C 002E334C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802E6550 002E3350*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E6554 002E3354*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E6558 002E3358*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r12));
/*802E655C 002E335C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E6560 002E3360*/ PPC::Runtime::ASM::bctrl();
/* 802E6564 002E3364  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*802E6568 002E3368*/ PPC::Runtime::ASM::bne(.L_802E6614);
/*802E656C 002E336C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E6570 002E3370*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E6574 002E3374*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r12));
/*802E6578 002E3378*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E657C 002E337C*/ PPC::Runtime::ASM::bctrl();
/*802E6580 002E3380*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*802E6584 002E3384*/ PPC::Runtime::ASM::cmplw(context->r0, context->r3);
/*802E6588 002E3388*/ PPC::Runtime::ASM::beq(.L_802E6614);
/*802E658C 002E338C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E6590 002E3390*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E6594 002E3394*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r12));
/*802E6598 002E3398*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E659C 002E339C*/ PPC::Runtime::ASM::bctrl();
/*802E65A0 002E33A0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x1d);
/*802E65A4 002E33A4*/ PPC::Runtime::ASM::beq(.L_802E6614);
/*802E65A8 002E33A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E65AC 002E33AC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E65B0 002E33B0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r12));
/*802E65B4 002E33B4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E65B8 002E33B8*/ PPC::Runtime::ASM::bctrl();
/*802E65BC 002E33BC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x2);
/*802E65C0 002E33C0*/ PPC::Runtime::ASM::beq(.L_802E6614);
/*802E65C4 002E33C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E65C8 002E33C8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E65CC 002E33CC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r12));
/*802E65D0 002E33D0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E65D4 002E33D4*/ PPC::Runtime::ASM::bctrl();
/*802E65D8 002E33D8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x8);
/*802E65DC 002E33DC*/ PPC::Runtime::ASM::beq(.L_802E6614);
/*802E65E0 002E33E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E65E4 002E33E4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E65E8 002E33E8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r12));
/*802E65EC 002E33EC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E65F0 002E33F0*/ PPC::Runtime::ASM::bctrl();
/*802E65F4 002E33F4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xa);
/*802E65F8 002E33F8*/ PPC::Runtime::ASM::beq(.L_802E6614);
/*802E65FC 002E33FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802E6600 002E3400*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802E6604 002E3404*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r12));
/*802E6608 002E3408*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802E660C 002E340C*/ PPC::Runtime::ASM::bctrl();
/*802E6610 002E3410*/ PPC::Runtime::ASM::b(.L_802E6618);
RUNTIME_PPC_JUMP_LABEL(.L_802E6614, 0x802E6614) //this is a jump label
/*802E6614 002E3414*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_802E6618, 0x802E6618) //this is a jump label
/*802E6618 002E3418*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802E661C 002E341C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802E6620 002E3420*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802E6624 002E3424*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802E6628 002E3428*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802E662C 002E342C*/ PPC::Runtime::ASM::blr();
}