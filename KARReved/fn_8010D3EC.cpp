//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800547E0.hpp"
#include "fn_800EA084.hpp"
#include "fn_killWhispy.hpp"



void fn_8010D3EC(PPC::Runtime::GCContext* context)
{
/*8010D3EC 0010A1EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8010D3F0 0010A1F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010D3F4 0010A1F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010D3F8 0010A1F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8010D3FC 0010A1FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8010D400 0010A200*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8010D404 0010A204*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010D408 0010A208*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010D40C 0010A20C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010D410 0010A210*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r4));
/*8010D414 0010A214*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010D418 0010A218*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010D41C 0010A21C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*8010D420 0010A220*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r0);
/*8010D424 0010A224*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*8010D428 0010A228*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8010D42C 0010A22C*/ PPC::Runtime::ASM::bne(.L_8010D4C0);
/*8010D430 0010A230*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8010D434 0010A234*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8010D438 0010A238*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010D43C 0010A23C*/ PPC::Runtime::ASM::mr(context->r8, context->r7);
/*8010D440 0010A240*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8010D444 0010A244*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8010D448 0010A248*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010D44C 0010A24C*/ PPC::Runtime::ASM::b(.L_8010D478);
RUNTIME_PPC_JUMP_LABEL(.L_8010D450, 0x8010D450) //this is a jump label
/*8010D450 0010A250*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8010D454 0010A254*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x1);
/*8010D458 0010A258*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r6));
/*8010D45C 0010A25C*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r8);
/*8010D460 0010A260*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x4);
/*8010D464 0010A264*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0x140);
/*8010D468 0010A268*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x13c);
/*8010D46C 0010A26C*/ PPC::Runtime::ASM::lbzx(context->r0, context->r4, context->r3);
/*8010D470 0010A270*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*8010D474 0010A274*/ PPC::Runtime::ASM::stbx(context->r0, context->r4, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8010D478, 0x8010D478) //this is a jump label
/*8010D478 0010A278*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8010D47C 0010A27C*/ PPC::Runtime::ASM::cmpw(context->r7, context->r0);
/*8010D480 0010A280*/ PPC::Runtime::ASM::blt(.L_8010D450);
/*8010D484 0010A284*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r30));
/*8010D488 0010A288*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8010D48C 0010A28C*/ PPC::Runtime::ASM::ble(.L_8010D49C);
/*8010D490 0010A290*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*8010D494 0010A294*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8010D498 0010A298*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_8010D49C, 0x8010D49C) //this is a jump label
/*8010D49C 0010A29C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFAD8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010D4A0 0010A2A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8010D4A4 0010A2A4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*8010D4A8 0010A2A8*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*8010D4AC 0010A2AC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8010D4B0 0010A2B0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8010D4B4 0010A2B4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFADC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010D4B8 0010A2B8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8010D4BC 0010A2BC*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_8010D4C0, 0x8010D4C0) //this is a jump label
/*8010D4C0 0010A2C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010D4C4 0010A2C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8010D4C8 0010A2C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8010D4CC 0010A2CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010D4D0 0010A2D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8010D4D4 0010A2D4*/ PPC::Runtime::ASM::blr();
}