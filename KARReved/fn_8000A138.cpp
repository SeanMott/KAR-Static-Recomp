//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A138(PPC::Runtime::GCContext* context)
{
/*8000A138 00006F38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A13C 00006F3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A140 00006F40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A144 00006F44*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A148 00006F48*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A14C 00006F4C*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 24);
/*8000A150 00006F50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A154 00006F54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A158 00006F58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A15C 00006F5C*/ PPC::Runtime::ASM::blr();
}