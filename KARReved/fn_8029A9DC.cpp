//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029A9DC(PPC::Runtime::GCContext* context)
{
/*8029A9DC 002977DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029A9E0 002977E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029A9E4 002977E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A9E8 002977E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A9EC 002977EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A9F0 002977F0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029A9F4 002977F4*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029A9F8 002977F8*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029A9FC 002977FC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AA00 00297800*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AA04 00297804*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029AA08 00297808*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AA0C 0029780C*/ PPC::Runtime::ASM::bctrl();
/*8029AA10 00297810*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029AA14 00297814*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AA18 00297818*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AA1C 0029781C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029AA20 00297820*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AA24 00297824*/ PPC::Runtime::ASM::bctrl();
/*8029AA28 00297828*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029AA2C 0029782C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029AA30 00297830*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8029AA34 00297834*/ PPC::Runtime::ASM::li(context->r5, 0x9);
/*8029AA38 00297838*/ PPC::Runtime::ASM::li(context->r7, 0x2);
/*8029AA3C 0029783C*/ PPC::Runtime::ASM::bl(fn_80391C70);
/*8029AA40 00297840*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AA44 00297844*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AA48 00297848*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AA4C 0029784C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029AA50 00297850*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029AA54 00297854*/ PPC::Runtime::ASM::blr();
}