//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018AFE4.hpp"



void fn_801DA9C8(PPC::Runtime::GCContext* context)
{
/*801DA9C8 001D77C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801DA9CC 001D77CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DA9D0 001D77D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DA9D4 001D77D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DA9D8 001D77D8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801DA9DC 001D77DC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801DA9E0 001D77E0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xa20);
/*801DA9E4 001D77E4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r31));
/*801DA9E8 001D77E8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*801DA9EC 001D77EC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x310, context->r31));
/*801DA9F0 001D77F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*801DA9F4 001D77F4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*801DA9F8 001D77F8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x46c, context->r31));
/*801DA9FC 001D77FC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*801DAA00 001D7800*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r0);
/*801DAA04 001D7804*/ PPC::Runtime::ASM::bl(fn_8018AFE4);
/*801DAA08 001D7808*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc31, context->r31));
/*801DAA0C 001D780C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801DAA10 001D7810*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*801DAA14 001D7814*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc31, context->r31));
/*801DAA18 001D7818*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DAA1C 001D781C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DAA20 001D7820*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DAA24 001D7824*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801DAA28 001D7828*/ PPC::Runtime::ASM::blr();
}