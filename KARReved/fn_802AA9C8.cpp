//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802AAA38.hpp"



void fn_802AA9C8(PPC::Runtime::GCContext* context)
{
/*802AA9C8 002A77C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AA9CC 002A77CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AA9D0 002A77D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AA9D4 002A77D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AA9D8 002A77D8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802AA9DC 002A77DC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802AA9E0 002A77E0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802AA9E4 002A77E4*/ PPC::Runtime::ASM::beq(.L_802AAA1C);
/*802AA9E8 002A77E8*/ PPC::Runtime::ASM::lis(context->r5, lbl_804C1058 @ Get_MemoryOffset_HighBit);
/*802AA9EC 002A77EC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AA9F0 002A77F0*/ PPC::Runtime::ASM::addi(context->r6, context->r5, lbl_804C1058 @ Get_MemoryOffset_LowBit);
/*802AA9F4 002A77F4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802AA9F8 002A77F8*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802AA9FC 002A77FC*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802AAA00 002A7800*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802AAA04 002A7804*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802AAA08 002A7808*/ PPC::Runtime::ASM::bl(fn_802AAA38);
/*802AAA0C 002A780C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802AAA10 002A7810*/ PPC::Runtime::ASM::ble(.L_802AAA1C);
/*802AAA14 002A7814*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AAA18 002A7818*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802AAA1C, 0x802AAA1C) //this is a jump label
/*802AAA1C 002A781C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AAA20 002A7820*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AAA24 002A7824*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AAA28 002A7828*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802AAA2C 002A782C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AAA30 002A7830*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AAA34 002A7834*/ PPC::Runtime::ASM::blr();
}