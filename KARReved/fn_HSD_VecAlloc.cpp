//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_ObjAlloc.hpp"
#include "fn___assert.hpp"



void fn_HSD_VecAlloc(PPC::Runtime::GCContext* context)
{
/*80417BD4 004149D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80417BD8 004149D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80417BDC 004149DC*/ PPC::Runtime::ASM::lis(context->r3, lbl_8058BBB8 @ Get_MemoryOffset_HighBit);
/*80417BE0 004149E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80417BE4 004149E4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8058BBB8 @ Get_MemoryOffset_LowBit);
/*80417BE8 004149E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80417BEC 004149EC*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 80417BF0 004149F0  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80417BF4 004149F4*/ PPC::Runtime::ASM::bne(.L_80417C08);
/*80417BF8 004149F8*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_509 @ Get_MemoryOffset_SDA21);
/*80417BFC 004149FC*/ PPC::Runtime::ASM::li(context->r4, 0x3cf);
/*80417C00 00414A00*/ PPC::Runtime::ASM::li(context->r5, String_ "ve" 2 @ Get_MemoryOffset_SDA21);
/*80417C04 00414A04*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80417C08, 0x80417C08) //this is a jump label
/*80417C08 00414A08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80417C0C 00414A0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80417C10 00414A10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80417C14 00414A14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80417C18 00414A18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80417C1C 00414A1C*/ PPC::Runtime::ASM::blr();
}