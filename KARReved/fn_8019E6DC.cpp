//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80236C40.hpp"



void fn_8019E6DC(PPC::Runtime::GCContext* context)
{
/*8019E6DC 0019B4DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019E6E0 0019B4E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019E6E4 0019B4E4*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*8019E6E8 0019B4E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019E6EC 0019B4EC*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8019E6F0 0019B4F0*/ PPC::Runtime::ASM::cmplwi(context->r7, 0x5);
/*8019E6F4 0019B4F4*/ PPC::Runtime::ASM::beq(.L_8019E71C);
/*8019E6F8 0019B4F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8019E6FC 0019B4FC*/ PPC::Runtime::ASM::addis(context->r4, context->r4, 0x6);
/*8019E700 0019B500*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43c, context->r5));
/*8019E704 0019B504*/ PPC::Runtime::ASM::li(context->r6, 0x1fa);
/*8019E708 0019B508*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8019E70C 0019B50C*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*8019E710 0019B510*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8019E714 0019B514*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x5a66);
/*8019E718 0019B518*/ PPC::Runtime::ASM::bl(fn_80236C40);
RUNTIME_PPC_JUMP_LABEL(.L_8019E71C, 0x8019E71C) //this is a jump label
/*8019E71C 0019B51C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019E720 0019B520*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019E724 0019B524*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8019E728 0019B528*/ PPC::Runtime::ASM::blr();
}