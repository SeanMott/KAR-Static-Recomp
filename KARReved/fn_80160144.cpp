//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000948C.hpp"
#include "fn_8000948C.hpp"
#include "fn_8000948C.hpp"
#include "fn_8000948C.hpp"
#include "fn_8000948C.hpp"
#include "fn_8000948C.hpp"



void fn_80160144(PPC::Runtime::GCContext* context)
{
/*80160144 0015CF44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80160148 0015CF48*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016014C 0015CF4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80160150 0015CF50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80160154 0015CF54*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80160158 0015CF58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016015C 0015CF5C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80160160 0015CF60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80160164 0015CF64*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_80160168, 0x80160168) //this is a jump label
/*80160168 0015CF68*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8016016C 0015CF6C*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*80160170 0015CF70*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80160174 0015CF74*/ PPC::Runtime::ASM::beq(.L_8016018C);
/*80160178 0015CF78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8016017C 0015CF7C*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*80160180 0015CF80*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80160184 0015CF84*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80160188 0015CF88*/ PPC::Runtime::ASM::bne(.L_80160190);
RUNTIME_PPC_JUMP_LABEL(.L_8016018C, 0x8016018C) //this is a jump label
/*8016018C 0015CF8C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80160190, 0x80160190) //this is a jump label
/*80160190 0015CF90*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80160194 0015CF94*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x4);
/*80160198 0015CF98*/ PPC::Runtime::ASM::blt(.L_80160168);
/*8016019C 0015CF9C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*801601A0 0015CFA0*/ PPC::Runtime::ASM::bgt(.L_801601A8);
/*801601A4 0015CFA4*/ PPC::Runtime::ASM::li(context->r31, 0x2);
RUNTIME_PPC_JUMP_LABEL(.L_801601A8, 0x801601A8) //this is a jump label
/*801601A8 0015CFA8*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801601AC 0015CFAC*/ PPC::Runtime::ASM::blt(.L_801601B4);
/*801601B0 0015CFB0*/ PPC::Runtime::ASM::li(context->r31, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_801601B4, 0x801601B4) //this is a jump label
/*801601B4 0015CFB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*801601B8 0015CFB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*801601BC 0015CFBC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801601C0 0015CFC0*/ PPC::Runtime::ASM::bgt(.L_8016021C);
/*801601C4 0015CFC4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801601C8 0015CFC8*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
/*801601CC 0015CFCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*801601D0 0015CFD0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801601D4 0015CFD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*801601D8 0015CFD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*801601DC 0015CFDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_801601E0, 0x801601E0) //this is a jump label
/*801601E0 0015CFE0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801601E4 0015CFE4*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*801601E8 0015CFE8*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*801601EC 0015CFEC*/ PPC::Runtime::ASM::beq(.L_80160204);
/*801601F0 0015CFF0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801601F4 0015CFF4*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*801601F8 0015CFF8*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*801601FC 0015CFFC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80160200 0015D000*/ PPC::Runtime::ASM::bne(.L_8016020C);
RUNTIME_PPC_JUMP_LABEL(.L_80160204, 0x80160204) //this is a jump label
/*80160204 0015D004*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*80160208 0015D008*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8016020C, 0x8016020C) //this is a jump label
/*8016020C 0015D00C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80160210 0015D010*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x4);
/*80160214 0015D014*/ PPC::Runtime::ASM::blt(.L_801601E0);
/*80160218 0015D018*/ PPC::Runtime::ASM::b(.L_80160268);
RUNTIME_PPC_JUMP_LABEL(.L_8016021C, 0x8016021C) //this is a jump label
/*8016021C 0015D01C*/ PPC::Runtime::ASM::mr(context->r30, context->r29);
/*80160220 0015D020*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80160224 0015D024*/ PPC::Runtime::ASM::li(context->r31, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80160228, 0x80160228) //this is a jump label
/*80160228 0015D028*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8016022C 0015D02C*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*80160230 0015D030*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80160234 0015D034*/ PPC::Runtime::ASM::beq(.L_8016024C);
/*80160238 0015D038*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8016023C 0015D03C*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*80160240 0015D040*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80160244 0015D044*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80160248 0015D048*/ PPC::Runtime::ASM::bne(.L_80160254);
RUNTIME_PPC_JUMP_LABEL(.L_8016024C, 0x8016024C) //this is a jump label
/*8016024C 0015D04C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*80160250 0015D050*/ PPC::Runtime::ASM::b(.L_80160258);
RUNTIME_PPC_JUMP_LABEL(.L_80160254, 0x80160254) //this is a jump label
/*80160254 0015D054*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80160258, 0x80160258) //this is a jump label
/*80160258 0015D058*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8016025C 0015D05C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80160260 0015D060*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80160264 0015D064*/ PPC::Runtime::ASM::blt(.L_80160228);
RUNTIME_PPC_JUMP_LABEL(.L_80160268, 0x80160268) //this is a jump label
/*80160268 0015D068*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016026C 0015D06C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80160270 0015D070*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80160274 0015D074*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80160278 0015D078*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016027C 0015D07C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80160280 0015D080*/ PPC::Runtime::ASM::blr();
}