//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_800F9F30(PPC::Runtime::GCContext* context)
{
/*800F9F30 000F6D30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F9F34 000F6D34*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9F38 000F6D38*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F9F3C 000F6D3C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F9F40 000F6D40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9F44 000F6D44*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*800F9F48 000F6D48*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800F9F4C 000F6D4C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800F9F50 000F6D50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9F54 000F6D54*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800F9F58 000F6D58*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F9F5C 000F6D5C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800F9F60 000F6D60*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800F9F64 000F6D64*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800F9F68 000F6D68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9F6C 000F6D6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9F70 000F6D70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F9F74 000F6D74*/ PPC::Runtime::ASM::blr();
}