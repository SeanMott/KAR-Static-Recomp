//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80057970.hpp"



void fn_8005884C(PPC::Runtime::GCContext* context)
{
/*8005884C 0005564C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80058850 00055650*/ PPC::Runtime::ASM::mflr(context->r0);
/*80058854 00055654*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80058858 00055658*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8005885C 0005565C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80058860 00055660*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80058864 00055664*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80058868 00055668*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8005886C 0005566C*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80058870 00055670*/ PPC::Runtime::ASM::mulli(context->r5, context->r30, 0x1c);
/*80058874 00055674*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_HighBit);
/*80058878 00055678*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8005887C 0005567C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_LowBit);
/*80058880 00055680*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r5);
/*80058884 00055684*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*80058888 00055688*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x10);
/*8005888C 0005568C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80058890 00055690*/ PPC::Runtime::ASM::bne(.L_800588F4);
/*80058894 00055694*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*80058898 00055698*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8005889C 0005569C*/ PPC::Runtime::ASM::bne(.L_800588D0);
/*800588A0 000556A0*/ PPC::Runtime::ASM::bl(fn_80410338);
/*800588A4 000556A4*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800588A8 000556A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800588AC 000556AC*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*800588B0 000556B0*/ PPC::Runtime::ASM::bl(fn_8041037C);
/*800588B4 000556B4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800588B8 000556B8*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800588BC 000556BC*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800588C0 000556C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800588C4 000556C4*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*800588C8 000556C8*/ PPC::Runtime::ASM::bl(fn_8041037C);
/*800588CC 000556CC*/ PPC::Runtime::ASM::b(.L_800588F8);
RUNTIME_PPC_JUMP_LABEL(.L_800588D0, 0x800588D0) //this is a jump label
/*800588D0 000556D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800588D4 000556D4*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800588D8 000556D8*/ PPC::Runtime::ASM::bl(fn_80057970);
/*800588DC 000556DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800588E0 000556E0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800588E4 000556E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*800588E8 000556E8*/ PPC::Runtime::ASM::bne(.L_800588F8);
/*800588EC 000556EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800588F0 000556F0*/ PPC::Runtime::ASM::b(.L_800588F8);
RUNTIME_PPC_JUMP_LABEL(.L_800588F4, 0x800588F4) //this is a jump label
/*800588F4 000556F4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800588F8, 0x800588F8) //this is a jump label
/*800588F8 000556F8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800588FC 000556FC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80058900 00055700*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80058904 00055704*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80058908 00055708*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8005890C 0005570C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80058910 00055710*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80058914 00055714*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80058918 00055718*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8005891C 0005571C*/ PPC::Runtime::ASM::blr();
}