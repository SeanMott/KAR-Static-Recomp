//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800AB15C.hpp"
#include "fn_800AB15C.hpp"



void fn_800AB1B4(PPC::Runtime::GCContext* context)
{
/*800AB1B4 000A7FB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800AB1B8 000A7FB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AB1BC 000A7FBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800AB1C0 000A7FC0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800AB1C4 000A7FC4*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800AB1C8 000A7FC8*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800AB1CC 000A7FCC*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800AB1D0 000A7FD0*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800AB1D4 000A7FD4*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800AB1D8 000A7FD8*/ PPC::Runtime::ASM::mr(context->r31, context->r7);
/*800AB1DC 000A7FDC*/ PPC::Runtime::ASM::mr(context->r25, context->r8);
/*800AB1E0 000A7FE0*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 16);
/*800AB1E4 000A7FE4*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r4, 24);
/*800AB1E8 000A7FE8*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r5, 24);
/*800AB1EC 000A7FEC*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/* 800AB1F0 000A7FF0  7C 7A 1B 79 */ mr. context->r26 , context->r3
/*800AB1F4 000A7FF4*/ PPC::Runtime::ASM::beq(.L_800AB250);
/*800AB1F8 000A7FF8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_660 @ Get_MemoryOffset_HighBit);
/*800AB1FC 000A7FFC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_660 @ Get_MemoryOffset_LowBit);
/*800AB200 000A8000*/ PPC::Runtime::ASM::bl(fn_HSD_CObjLoadDesc);
/* 800AB204 000A8004  7C 65 1B 79 */ mr. context->r5 , context->r3
/*800AB208 000A8008*/ PPC::Runtime::ASM::beq(.L_800AB248);
/*800AB20C 000A800C*/ PPC::Runtime::ASM::lbz(context->r4, SkipAddress_28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AB210 000A8010*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*800AB214 000A8014*/ PPC::Runtime::ASM::bl(fn_GObj_AddObject);
/*800AB218 000A8018*/ PPC::Runtime::ASM::lis(context->r4, fn_8042A29C @ Get_MemoryOffset_HighBit);
/*800AB21C 000A801C*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*800AB220 000A8020*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8042A29C @ Get_MemoryOffset_LowBit);
/*800AB224 000A8024*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r25, 24);
/*800AB228 000A8028*/ PPC::Runtime::ASM::bl(fn_80429728);
/*800AB22C 000A802C*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800AB230 000A8030*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AB234 000A8034*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800AB238 000A8038*/ PPC::Runtime::ASM::bl(fn___shl2i);
/*800AB23C 000A803C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r26));
/*800AB240 000A8040*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r26));
/*800AB244 000A8044*/ PPC::Runtime::ASM::b(.L_800AB250);
RUNTIME_PPC_JUMP_LABEL(.L_800AB248, 0x800AB248) //this is a jump label
/*800AB248 000A8048*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*800AB24C 000A804C*/ PPC::Runtime::ASM::bl(fn_80428F64);
RUNTIME_PPC_JUMP_LABEL(.L_800AB250, 0x800AB250) //this is a jump label
/*800AB250 000A8050*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557008 @ Get_MemoryOffset_HighBit);
/*800AB254 000A8054*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*800AB258 000A8058*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80557008 @ Get_MemoryOffset_LowBit);
/*800AB25C 000A805C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*800AB260 000A8060*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*800AB264 000A8064*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557034 @ Get_MemoryOffset_HighBit);
/*800AB268 000A8068*/ PPC::Runtime::ASM::li(context->r4, 0xf00);
/*800AB26C 000A806C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80557034 @ Get_MemoryOffset_LowBit);
/*800AB270 000A8070*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*800AB274 000A8074*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*800AB278 000A8078*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AB27C 000A807C*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r27, 16);
/*800AB280 000A8080*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD69C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AB284 000A8084*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r28, 24);
/*800AB288 000A8088*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r29, 24);
/*800AB28C 000A808C*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/* 800AB290 000A8090  7C 7A 1B 79 */ mr. context->r26 , context->r3
/*800AB294 000A8094*/ PPC::Runtime::ASM::beq(.L_800AB2AC);
/*800AB298 000A8098*/ PPC::Runtime::ASM::lis(context->r4, fn_800AB15C @ Get_MemoryOffset_HighBit);
/*800AB29C 000A809C*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r30, 24);
/*800AB2A0 000A80A0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AB15C @ Get_MemoryOffset_LowBit);
/*800AB2A4 000A80A4*/ PPC::Runtime::ASM::clrlwi(context->r6, context->r31, 24);
/*800AB2A8 000A80A8*/ PPC::Runtime::ASM::bl(fn_GObj_AddGXLink);
RUNTIME_PPC_JUMP_LABEL(.L_800AB2AC, 0x800AB2AC) //this is a jump label
/*800AB2AC 000A80AC*/ PPC::Runtime::ASM::stw(context->r26, STRUCT_BYTE4_COUNT_1805DD698 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AB2B0 000A80B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AB2B4 000A80B4*/ PPC::Runtime::ASM::bl(fn_HSD_FogSet?);
/*800AB2B8 000A80B8*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*800AB2BC 000A80BC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800AB2C0 000A80C0*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800AB2C4 000A80C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800AB2C8 000A80C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AB2CC 000A80CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800AB2D0 000A80D0*/ PPC::Runtime::ASM::blr();
}