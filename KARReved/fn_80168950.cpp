//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80168950(PPC::Runtime::GCContext* context)
{
/*80168950 00165750*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80168954 00165754*/ PPC::Runtime::ASM::mflr(context->r0);
/*80168958 00165758*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016895C 0016575C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80168960 00165760*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80168964 00165764*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80168968 00165768*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016896C 0016576C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80168970, 0x80168970) //this is a jump label
/*80168970 00165770*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80168974 00165774*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80168978 00165778*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8016897C 0016577C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80168980 00165780*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa64, context->r30));
/*80168984 00165784*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80168988 00165788*/ PPC::Runtime::ASM::beq(.L_80168994);
/*8016898C 0016578C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80168990 00165790*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa64, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80168994, 0x80168994) //this is a jump label
/*80168994 00165794*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80168998 00165798*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*8016899C 0016579C*/ PPC::Runtime::ASM::blt(.L_80168970);
/*801689A0 001657A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801689A4 001657A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801689A8 001657A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801689AC 001657AC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801689B0 001657B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801689B4 001657B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801689B8 001657B8*/ PPC::Runtime::ASM::blr();
}