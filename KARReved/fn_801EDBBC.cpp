//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DA530.hpp"
#include "fn_801EB898.hpp"



void fn_801EDBBC(PPC::Runtime::GCContext* context)
{
/*801EDBBC 001EA9BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EDBC0 001EA9C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EDBC4 001EA9C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EDBC8 001EA9C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EDBCC 001EA9CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EDBD0 001EA9D0*/ PPC::Runtime::ASM::bl(fn_801DA530);
/*801EDBD4 001EA9D4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EDBD8 001EA9D8*/ PPC::Runtime::ASM::beq(.L_801EDBE8);
/*801EDBDC 001EA9DC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7bc, context->r31));
/*801EDBE0 001EA9E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EDBE4 001EA9E4*/ PPC::Runtime::ASM::bl(fn_801EB898);
RUNTIME_PPC_JUMP_LABEL(.L_801EDBE8, 0x801EDBE8) //this is a jump label
/*801EDBE8 001EA9E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EDBEC 001EA9EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EDBF0 001EA9F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EDBF4 001EA9F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EDBF8 001EA9F8*/ PPC::Runtime::ASM::blr();
}