//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245F70.hpp"
#include "fn_802460D4.hpp"
#include "fn_8024625C.hpp"
#include "fn_8020551C.hpp"
#include "fn_80245F70.hpp"
#include "fn_802461B4.hpp"
#include "fn_8024625C.hpp"
#include "fn_802096B4.hpp"
#include "fn_80205F60.hpp"



void fn_80205A60(PPC::Runtime::GCContext* context)
{
/*80205A60 00202860*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80205A64 00202864*/ PPC::Runtime::ASM::mflr(context->r0);
/*80205A68 00202868*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E231C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80205A6C 0020286C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80205A70 00202870*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80205A74 00202874*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80205A78 00202878*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80205A7C 0020287C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80205A80 00202880*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8c, context->r3));
/*80205A84 00202884*/ PPC::Runtime::ASM::fcmpu(cr0, context->f2, context->f0);
/*80205A88 00202888*/ PPC::Runtime::ASM::bne(.L_80205B70);
/*80205A8C 0020288C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r30));
/* 80205A90 00202890  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80205A94 00202894*/ PPC::Runtime::ASM::beq(.L_80205B0C);
/*80205A98 00202898*/ PPC::Runtime::ASM::beq(.L_80205ACC);
/*80205A9C 0020289C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205AA0 002028A0*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x2f8);
/*80205AA4 002028A4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2318 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80205AA8 002028A8*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x334);
/*80205AAC 002028AC*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x340);
/*80205AB0 002028B0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80205AB4 002028B4*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*80205AB8 002028B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205ABC 002028BC*/ PPC::Runtime::ASM::bl(fn_802460D4);
/*80205AC0 002028C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205AC4 002028C4*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x2f8);
/*80205AC8 002028C8*/ PPC::Runtime::ASM::bl(fn_8024625C);
RUNTIME_PPC_JUMP_LABEL(.L_80205ACC, 0x80205ACC) //this is a jump label
/*80205ACC 002028CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80205AD0 002028D0*/ PPC::Runtime::ASM::bl(fn_8020551C);
/*80205AD4 002028D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205AD8 002028D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*80205ADC 002028DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r3));
/*80205AE0 002028E0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80205AE4 002028E4*/ PPC::Runtime::ASM::beq(.L_80205B9C);
/*80205AE8 002028E8*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80205AEC 002028EC*/ PPC::Runtime::ASM::beq(.L_80205B9C);
/*80205AF0 002028F0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80205AF4 002028F4*/ PPC::Runtime::ASM::mr(context->r12, context->r31);
/*80205AF8 002028F8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80205AFC 002028FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r30));
/*80205B00 00202900*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80205B04 00202904*/ PPC::Runtime::ASM::bctrl();
/*80205B08 00202908*/ PPC::Runtime::ASM::b(.L_80205B9C);
RUNTIME_PPC_JUMP_LABEL(.L_80205B0C, 0x80205B0C) //this is a jump label
/*80205B0C 0020290C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205B10 00202910*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x2f8);
/*80205B14 00202914*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2318 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80205B18 00202918*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x334);
/*80205B1C 0020291C*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x340);
/*80205B20 00202920*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80205B24 00202924*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*80205B28 00202928*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205B2C 0020292C*/ PPC::Runtime::ASM::bl(fn_802461B4);
/*80205B30 00202930*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x594, context->r30));
/*80205B34 00202934*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x2f8);
/*80205B38 00202938*/ PPC::Runtime::ASM::bl(fn_8024625C);
/*80205B3C 0020293C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80205B40 00202940*/ PPC::Runtime::ASM::bl(fn_802096B4);
/*80205B44 00202944*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80205B48 00202948*/ PPC::Runtime::ASM::beq(.L_80205B9C);
/*80205B4C 0020294C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80205B50 00202950*/ PPC::Runtime::ASM::beq(.L_80205B9C);
/*80205B54 00202954*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80205B58 00202958*/ PPC::Runtime::ASM::mr(context->r12, context->r31);
/*80205B5C 0020295C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80205B60 00202960*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r30));
/*80205B64 00202964*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80205B68 00202968*/ PPC::Runtime::ASM::bctrl();
/*80205B6C 0020296C*/ PPC::Runtime::ASM::b(.L_80205B9C);
RUNTIME_PPC_JUMP_LABEL(.L_80205B70, 0x80205B70) //this is a jump label
/*80205B70 00202970*/ PPC::Runtime::ASM::bl(fn_80205F60);
/*80205B74 00202974*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80205B78 00202978*/ PPC::Runtime::ASM::beq(.L_80205B9C);
/*80205B7C 0020297C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80205B80 00202980*/ PPC::Runtime::ASM::beq(.L_80205B9C);
/*80205B84 00202984*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80205B88 00202988*/ PPC::Runtime::ASM::mr(context->r12, context->r31);
/*80205B8C 0020298C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80205B90 00202990*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r30));
/*80205B94 00202994*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80205B98 00202998*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_80205B9C, 0x80205B9C) //this is a jump label
/*80205B9C 0020299C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80205BA0 002029A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80205BA4 002029A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80205BA8 002029A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80205BAC 002029AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80205BB0 002029B0*/ PPC::Runtime::ASM::blr();
}