//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXLoadLightObjImm(PPC::Runtime::GCContext* context)
{
/*803CD23C 003CA03C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r4);
/*803CD240 003CA040*/ PPC::Runtime::ASM::subfic(context->r0, context->r0, 0x1f);
/*803CD244 003CA044*/ PPC::Runtime::ASM::clrlslwi(context->r5, context->r0, 29, 4);
/*803CD248 003CA048*/ PPC::Runtime::ASM::lis(context->r4, 0xcc01);
/*803CD24C 003CA04C*/ PPC::Runtime::ASM::li(context->r0, 0x10);
/*803CD250 003CA050*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x600);
/*803CD254 003CA054*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CD258 003CA058*/ PPC::Runtime::ASM::oris(context->r0, context->r5, 0xf);
/*803CD25C 003CA05C*/ PPC::Runtime::ASM::stwu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CD260 003CA060*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*803CD264 003CA064*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r6);
/*803CD268 003CA068*/ PPC::Runtime::ASM::psq_l(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3)0, context->qr0);
/*803CD26C 003CA06C*/ PPC::Runtime::ASM::psq_l(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3)0, context->qr0);
/*803CD270 003CA070*/ PPC::Runtime::ASM::psq_l(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3)0, context->qr0);
/*803CD274 003CA074*/ PPC::Runtime::ASM::psq_l(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3)0, context->qr0);
/*803CD278 003CA078*/ PPC::Runtime::ASM::psq_l(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3)0, context->qr0);
/*803CD27C 003CA07C*/ PPC::Runtime::ASM::psq_l(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3)0, context->qr0);
/*803CD280 003CA080*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CD284 003CA084*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CD288 003CA088*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CD28C 003CA08C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CD290 003CA090*/ PPC::Runtime::ASM::psq_st(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803CD294 003CA094*/ PPC::Runtime::ASM::psq_st(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803CD298 003CA098*/ PPC::Runtime::ASM::psq_st(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803CD29C 003CA09C*/ PPC::Runtime::ASM::psq_st(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803CD2A0 003CA0A0*/ PPC::Runtime::ASM::psq_st(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803CD2A4 003CA0A4*/ PPC::Runtime::ASM::psq_st(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803CD2A8 003CA0A8*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CD2AC 003CA0AC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803CD2B0 003CA0B0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CD2B4 003CA0B4*/ PPC::Runtime::ASM::blr();
}