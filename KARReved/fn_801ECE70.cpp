//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CC2A4.hpp"
#include "fn_801CF340.hpp"
#include "fn_80064C18.hpp"



void fn_801ECE70(PPC::Runtime::GCContext* context)
{
/*801ECE70 001E9C70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801ECE74 001E9C74*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ECE78 001E9C78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801ECE7C 001E9C7C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*801ECE80 001E9C80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801ECE84 001E9C84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801ECE88 001E9C88*/ PPC::Runtime::ASM::bl(fn_801CC2A4);
/*801ECE8C 001E9C8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ECE90 001E9C90*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801ECE94 001E9C94*/ PPC::Runtime::ASM::bl(fn_801CF340);
/*801ECE98 001E9C98*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x76c, context->r31));
/*801ECE9C 001E9C9C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ECEA0 001E9CA0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x768, context->r31));
/*801ECEA4 001E9CA4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*801ECEA8 001E9CA8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801ECEAC 001E9CAC*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x770, context->r31));
/*801ECEB0 001E9CB0*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801ECEB4 001E9CB4*/ PPC::Runtime::ASM::fmadds(context->f1, context->f2, context->f1, context->f0);
/*801ECEB8 001E9CB8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1E80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801ECEBC 001E9CBC*/ PPC::Runtime::ASM::fmadds(context->f1, context->f4, context->f3, context->f1);
/*801ECEC0 001E9CC0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801ECEC4 001E9CC4*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801ECEC8 001E9CC8*/ PPC::Runtime::ASM::bne(.L_801ECEDC);
/*801ECECC 001E9CCC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*801ECED0 001E9CD0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801ECED4 001E9CD4*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*801ECED8 001E9CD8*/ PPC::Runtime::ASM::bl(fn_80064C18);
RUNTIME_PPC_JUMP_LABEL(.L_801ECEDC, 0x801ECEDC) //this is a jump label
/*801ECEDC 001E9CDC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801ECEE0 001E9CE0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ECEE4 001E9CE4*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801ECEE8 001E9CE8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801ECEEC 001E9CEC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801ECEF0 001E9CF0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801ECEF4 001E9CF4*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801ECEF8 001E9CF8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801ECEFC 001E9CFC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801ECF00 001E9D00*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801ECF04 001E9D04*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801ECF08 001E9D08*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801ECF0C 001E9D0C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801ECF10 001E9D10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801ECF14 001E9D14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ECF18 001E9D18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801ECF1C 001E9D1C*/ PPC::Runtime::ASM::blr();
}