//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FD6B0.hpp"
#include "fn_801FC398.hpp"



void fn_8020F75C(PPC::Runtime::GCContext* context)
{
/*8020F75C 0020C55C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020F760 0020C560*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020F764 0020C564*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020F768 0020C568*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8020F76C 0020C56C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020F770 0020C570*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020F774 0020C574*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*8020F778 0020C578*/ PPC::Runtime::ASM::bl(fn_801FD6B0);
/*8020F77C 0020C57C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E251C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020F780 0020C580*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8020F784 0020C584*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2520 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020F788 0020C588*/ PPC::Runtime::ASM::li(context->r4, 0x11);
/*8020F78C 0020C58C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8020F790 0020C590*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8020F794 0020C594*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*8020F798 0020C598*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020F79C 0020C59C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020F7A0 0020C5A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020F7A4 0020C5A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020F7A8 0020C5A8*/ PPC::Runtime::ASM::blr();
}