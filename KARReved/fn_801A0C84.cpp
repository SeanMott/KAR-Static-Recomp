//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801942AC.hpp"
#include "fn_80191170.hpp"
#include "fn_801910E8.hpp"



void fn_801A0C84(PPC::Runtime::GCContext* context)
{
/*801A0C84 0019DA84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A0C88 0019DA88*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A0C8C 0019DA8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A0C90 0019DA90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A0C94 0019DA94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A0C98 0019DA98*/ PPC::Runtime::ASM::bl(fn_801942AC);
/*801A0C9C 0019DA9C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A0CA0 0019DAA0*/ PPC::Runtime::ASM::bne(.L_801A0CE4);
/*801A0CA4 0019DAA4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x821, context->r31));
/*801A0CA8 0019DAA8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801A0CAC 0019DAAC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801A0CB0 0019DAB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A0CB4 0019DAB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x821, context->r31));
/*801A0CB8 0019DAB8*/ PPC::Runtime::ASM::bl(fn_80191170);
/*801A0CBC 0019DABC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7ec, context->r31));
/*801A0CC0 0019DAC0*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801A0CC4 0019DAC4*/ PPC::Runtime::ASM::beq(.L_801A0CD4);
/*801A0CC8 0019DAC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A0CCC 0019DACC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801A0CD0 0019DAD0*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801A0CD4, 0x801A0CD4) //this is a jump label
/*801A0CD4 0019DAD4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A0CD8 0019DAD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A0CDC 0019DADC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7ec, context->r31));
/*801A0CE0 0019DAE0*/ PPC::Runtime::ASM::bl(fn_801910E8);
RUNTIME_PPC_JUMP_LABEL(.L_801A0CE4, 0x801A0CE4) //this is a jump label
/*801A0CE4 0019DAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A0CE8 0019DAE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A0CEC 0019DAEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A0CF0 0019DAF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A0CF4 0019DAF4*/ PPC::Runtime::ASM::blr();
}