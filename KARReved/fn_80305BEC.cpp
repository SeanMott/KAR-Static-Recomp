//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80305CA0.hpp"
#include "fn_8036C7DC.hpp"
#include "fn_8029B244.hpp"



void fn_80305BEC(PPC::Runtime::GCContext* context)
{
/*80305BEC 003029EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80305BF0 003029F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80305BF4 003029F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80305BF8 003029F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80305BFC 003029FC*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*80305C00 00302A00*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80305C04 00302A04*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80305C08 00302A08*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80305C0C 00302A0C*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*80305C10 00302A10*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80305C14 00302A14*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80305C18 00302A18*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD974 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80305C1C 00302A1C*/ PPC::Runtime::ASM::bl(fn_80305CA0);
/*80305C20 00302A20*/ PPC::Runtime::ASM::addi(context->r0, context->r29, 0x8);
/*80305C24 00302A24*/ PPC::Runtime::ASM::addic.(context->r4, context->r3, 0x8);
/*80305C28 00302A28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80305C2C 00302A2C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80305C30 00302A30*/ PPC::Runtime::ASM::beq(.L_80305C40);
/*80305C34 00302A34*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*80305C38 00302A38*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80305C3C 00302A3C*/ PPC::Runtime::ASM::bl(fn_8036C7DC);
RUNTIME_PPC_JUMP_LABEL(.L_80305C40, 0x80305C40) //this is a jump label
/*80305C40 00302A40*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80305C44 00302A44*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80305C48 00302A48*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80305C4C 00302A4C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80305C50 00302A50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80305C54 00302A54*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80305C58 00302A58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80305C5C 00302A5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80305C60 00302A60*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80305C64 00302A64*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80305C68 00302A68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80305C6C 00302A6C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80305C70 00302A70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80305C74 00302A74*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80305C78 00302A78*/ PPC::Runtime::ASM::b(.L_80305C80);
/*80305C7C 00302A7C*/ PPC::Runtime::ASM::bl(fn_8029B244);
RUNTIME_PPC_JUMP_LABEL(.L_80305C80, 0x80305C80) //this is a jump label
/*80305C80 00302A80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80305C84 00302A84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80305C88 00302A88*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80305C8C 00302A8C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80305C90 00302A90*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80305C94 00302A94*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80305C98 00302A98*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80305C9C 00302A9C*/ PPC::Runtime::ASM::blr();
}