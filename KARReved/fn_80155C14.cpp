//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80155C14(PPC::Runtime::GCContext* context)
{
/*80155C14 00152A14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80155C18 00152A18*/ PPC::Runtime::ASM::mflr(context->r0);
/*80155C1C 00152A1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155C20 00152A20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80155C24 00152A24*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80155C28 00152A28*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80155C2C 00152A2C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80155C30 00152A30*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80155C34 00152A34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x688, context->r3));
/*80155C38 00152A38*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80155C3C 00152A3C*/ PPC::Runtime::ASM::beq(.L_80155C68);
/*80155C40 00152A40*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80155C44 00152A44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80155C48 00152A48*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*80155C4C 00152A4C*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*80155C50 00152A50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*80155C54 00152A54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*80155C58 00152A58*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80155C5C 00152A5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80155C60 00152A60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*80155C64 00152A64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80155C68, 0x80155C68) //this is a jump label
/*80155C68 00152A68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155C6C 00152A6C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80155C70 00152A70*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80155C74 00152A74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80155C78 00152A78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80155C7C 00152A7C*/ PPC::Runtime::ASM::blr();
}