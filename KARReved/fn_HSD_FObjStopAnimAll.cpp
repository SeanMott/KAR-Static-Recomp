//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_FObjInterpretAnim.hpp"



void fn_HSD_FObjStopAnimAll(PPC::Runtime::GCContext* context)
{
/*804037C0 004005C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*804037C4 004005C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*804037C8 004005C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*804037CC 004005CC*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*804037D0 004005D0*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*804037D4 004005D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804037D8 004005D8*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*804037DC 004005DC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*804037E0 004005E0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*804037E4 004005E4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804037E8 004005E8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*804037EC 004005EC*/ PPC::Runtime::ASM::b(.L_80403830);
RUNTIME_PPC_JUMP_LABEL(.L_804037F0, 0x804037F0) //this is a jump label
/*804037F0 004005F0*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*804037F4 004005F4*/ PPC::Runtime::ASM::beq(.L_8040382C);
/*804037F8 004005F8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r29));
/*804037FC 004005FC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x6);
/*80403800 00400600*/ PPC::Runtime::ASM::bne(.L_80403818);
/*80403804 00400604*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80403808 00400608*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8040380C 0040060C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80403810 00400610*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80403814 00400614*/ PPC::Runtime::ASM::bl(fn_HSD_FObjInterpretAnim);
RUNTIME_PPC_JUMP_LABEL(.L_80403818, 0x80403818) //this is a jump label
/*80403818 00400618*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8040381C 0040061C*/ PPC::Runtime::ASM::beq(.L_8040382C);
/*80403820 00400620*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*80403824 00400624*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 24, 27);
/*80403828 00400628*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_8040382C, 0x8040382C) //this is a jump label
/*8040382C 0040062C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_80403830, 0x80403830) //this is a jump label
/*80403830 00400630*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80403834 00400634*/ PPC::Runtime::ASM::bne(.L_804037F0);
/*80403838 00400638*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8040383C 0040063C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80403840 00400640*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80403844 00400644*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80403848 00400648*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040384C 0040064C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80403850 00400650*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80403854 00400654*/ PPC::Runtime::ASM::blr();
}