//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7A64.hpp"
#include "fn_800FDF40.hpp"
#include "fn_800FE4FC.hpp"
#include "fn_800FCD0C.hpp"
#include "fn_801001BC.hpp"
#include "fn_801067C4.hpp"



void fn_800D2AFC(PPC::Runtime::GCContext* context)
{
/*800D2AFC 000CF8FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D2B00 000CF900*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D2B04 000CF904*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D2B08 000CF908*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D2B0C 000CF90C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800D2B10 000CF910*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D2B14 000CF914*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2B18 000CF918*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D2B1C 000CF91C*/ PPC::Runtime::ASM::cmpwi(context->r29, -0x1);
/*800D2B20 000CF920*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D2B24 000CF924*/ PPC::Runtime::ASM::ble(.L_800D2B3C);
/*800D2B28 000CF928*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r30));
/*800D2B2C 000CF92C*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800D2B30 000CF930*/ PPC::Runtime::ASM::bge(.L_800D2B3C);
/*800D2B34 000CF934*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D2B38 000CF938*/ PPC::Runtime::ASM::b(.L_800D2B40);
RUNTIME_PPC_JUMP_LABEL(.L_800D2B3C, 0x800D2B3C) //this is a jump label
/*800D2B3C 000CF93C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D2B40, 0x800D2B40) //this is a jump label
/*800D2B40 000CF940*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D2B44 000CF944*/ PPC::Runtime::ASM::beq(.L_800D2B5C);
/*800D2B48 000CF948*/ PPC::Runtime::ASM::lis(context->r4, String_Debug_ "!grChkIllegalZoneId(zoneId" Get_MemoryOffset_HighBit);
/*800D2B4C 000CF94C*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D2B50 000CF950*/ PPC::Runtime::ASM::addi(context->r5, context->r4, String_Debug_ "!grChkIllegalZoneId(zoneId" Get_MemoryOffset_LowBit);
/*800D2B54 000CF954*/ PPC::Runtime::ASM::li(context->r4, 0x9e0);
/*800D2B58 000CF958*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D2B5C, 0x800D2B5C) //this is a jump label
/*800D2B5C 000CF95C*/ PPC::Runtime::ASM::mulli(context->r4, context->r29, 0x140);
/*800D2B60 000CF960*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r30));
/*800D2B64 000CF964*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r4);
/*800D2B68 000CF968*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800D2B6C 000CF96C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800D2B70 000CF970*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xc);
/*800D2B74 000CF974*/ PPC::Runtime::ASM::beq(.L_800D2B80);
/*800D2B78 000CF978*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xd);
/*800D2B7C 000CF97C*/ PPC::Runtime::ASM::bne(.L_800D2C3C);
RUNTIME_PPC_JUMP_LABEL(.L_800D2B80, 0x800D2B80) //this is a jump label
/*800D2B80 000CF980*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r4);
/*800D2B84 000CF984*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D2B88 000CF988*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800D2B8C 000CF98C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D2B90 000CF990*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x48);
/*800D2B94 000CF994*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r0);
/*800D2B98 000CF998*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x218, context->r3));
/*800D2B9C 000CF99C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800D2BA0 000CF9A0*/ PPC::Runtime::ASM::beq(.L_800D2C2C);
/*800D2BA4 000CF9A4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D2BA8 000CF9A8*/ PPC::Runtime::ASM::bl(fn_800F7A64);
/*800D2BAC 000CF9AC*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x2b);
/*800D2BB0 000CF9B0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xf);
/*800D2BB4 000CF9B4*/ PPC::Runtime::ASM::bgt(.L_800D2C20);
/*800D2BB8 000CF9B8*/ PPC::Runtime::ASM::lis(context->r3, jumptable_804A3928 @ Get_MemoryOffset_HighBit);
/*800D2BBC 000CF9BC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800D2BC0 000CF9C0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_804A3928 @ Get_MemoryOffset_LowBit);
/*800D2BC4 000CF9C4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800D2BC8 000CF9C8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800D2BCC 000CF9CC*/ PPC::Runtime::ASM::bctr();
/*800D2BD0 000CF9D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D2BD4 000CF9D4*/ PPC::Runtime::ASM::bl(fn_800FDF40);
/*800D2BD8 000CF9D8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2BDC 000CF9DC*/ PPC::Runtime::ASM::b(.L_800D2C34);
/*800D2BE0 000CF9E0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D2BE4 000CF9E4*/ PPC::Runtime::ASM::bl(fn_800FE4FC);
/*800D2BE8 000CF9E8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2BEC 000CF9EC*/ PPC::Runtime::ASM::b(.L_800D2C34);
/*800D2BF0 000CF9F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D2BF4 000CF9F4*/ PPC::Runtime::ASM::bl(fn_800FCD0C);
/*800D2BF8 000CF9F8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2BFC 000CF9FC*/ PPC::Runtime::ASM::b(.L_800D2C34);
/*800D2C00 000CFA00*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D2C04 000CFA04*/ PPC::Runtime::ASM::bl(fn_801001BC);
/*800D2C08 000CFA08*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2C0C 000CFA0C*/ PPC::Runtime::ASM::b(.L_800D2C34);
/*800D2C10 000CFA10*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D2C14 000CFA14*/ PPC::Runtime::ASM::bl(fn_801067C4);
/*800D2C18 000CFA18*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2C1C 000CFA1C*/ PPC::Runtime::ASM::b(.L_800D2C34);
RUNTIME_PPC_JUMP_LABEL(.L_800D2C20, 0x800D2C20) //this is a jump label
/*800D2C20 000CFA20*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D2C24 000CFA24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D2C28 000CFA28*/ PPC::Runtime::ASM::b(.L_800D2C34);
RUNTIME_PPC_JUMP_LABEL(.L_800D2C2C, 0x800D2C2C) //this is a jump label
/*800D2C2C 000CFA2C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D2C30 000CFA30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800D2C34, 0x800D2C34) //this is a jump label
/*800D2C34 000CFA34*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800D2C38 000CFA38*/ PPC::Runtime::ASM::b(.L_800D2C40);
RUNTIME_PPC_JUMP_LABEL(.L_800D2C3C, 0x800D2C3C) //this is a jump label
/*800D2C3C 000CFA3C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D2C40, 0x800D2C40) //this is a jump label
/*800D2C40 000CFA40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D2C44 000CFA44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D2C48 000CFA48*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D2C4C 000CFA4C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2C50 000CFA50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D2C54 000CFA54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D2C58 000CFA58*/ PPC::Runtime::ASM::blr();
}