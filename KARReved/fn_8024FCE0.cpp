//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80255FC4.hpp"
#include "fn_80261A54.hpp"
#include "fn_8024FE38.hpp"
#include "fn_80082838.hpp"
#include "fn_800826A4.hpp"
#include "fn_80082250.hpp"
#include "fn_80082284.hpp"



void fn_8024FCE0(PPC::Runtime::GCContext* context)
{
/*8024FCE0 0024CAE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8024FCE4 0024CAE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8024FCE8 0024CAE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8024FCEC 0024CAEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8024FCF0 0024CAF0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8024FCF4 0024CAF4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8024FCF8 0024CAF8*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8024FCFC 0024CAFC*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x3);
/*8024FD00 0024CB00*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8024FD04 0024CB04*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8024FD08 0024CB08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8024FD0C 0024CB0C*/ PPC::Runtime::ASM::bne(.L_8024FD38);
/*8024FD10 0024CB10*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*8024FD14 0024CB14*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8024FD18 0024CB18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8024FD1C 0024CB1C*/ PPC::Runtime::ASM::bl(fn_80255FC4);
/*8024FD20 0024CB20*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r31));
/*8024FD24 0024CB24*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*8024FD28 0024CB28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8024FD2C 0024CB2C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r31));
/*8024FD30 0024CB30*/ PPC::Runtime::ASM::bl(fn_80261A54);
/*8024FD34 0024CB34*/ PPC::Runtime::ASM::b(.L_8024FE18);
RUNTIME_PPC_JUMP_LABEL(.L_8024FD38, 0x8024FD38) //this is a jump label
/*8024FD38 0024CB38*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r31));
/* 8024FD3C 0024CB3C  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*8024FD40 0024CB40*/ PPC::Runtime::ASM::beq(.L_8024FE18);
/*8024FD44 0024CB44*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39c, context->r31));
/*8024FD48 0024CB48*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/* 8024FD4C 0024CB4C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8024FD50 0024CB50*/ PPC::Runtime::ASM::beq(.L_8024FD68);
/*8024FD54 0024CB54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8024FD58 0024CB58*/ PPC::Runtime::ASM::bl(fn_8024FE38);
/*8024FD5C 0024CB5C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8024FD60 0024CB60*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8024FD64 0024CB64*/ PPC::Runtime::ASM::bl(fn_GXLink_Common);
RUNTIME_PPC_JUMP_LABEL(.L_8024FD68, 0x8024FD68) //this is a jump label
/*8024FD68 0024CB68*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39c, context->r31));
/* 8024FD6C 0024CB6C  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*8024FD70 0024CB70*/ PPC::Runtime::ASM::beq(.L_8024FD8C);
/*8024FD74 0024CB74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r31));
/*8024FD78 0024CB78*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8024FD7C 0024CB7C*/ PPC::Runtime::ASM::bl(fn_80082838);
/*8024FD80 0024CB80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8024FD84 0024CB84*/ PPC::Runtime::ASM::beq(.L_8024FD8C);
/*8024FD88 0024CB88*/ PPC::Runtime::ASM::li(context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8024FD8C, 0x8024FD8C) //this is a jump label
/*8024FD8C 0024CB8C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39c, context->r31));
/* 8024FD90 0024CB90  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*8024FD94 0024CB94*/ PPC::Runtime::ASM::beq(.L_8024FDC0);
/*8024FD98 0024CB98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35a, context->r31));
/* 8024FD9C 0024CB9C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*8024FDA0 0024CBA0*/ PPC::Runtime::ASM::bne(.L_8024FDC0);
/*8024FDA4 0024CBA4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r31));
/*8024FDA8 0024CBA8*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8024FDAC 0024CBAC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x250);
/*8024FDB0 0024CBB0*/ PPC::Runtime::ASM::bl(fn_800826A4);
/*8024FDB4 0024CBB4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8024FDB8 0024CBB8*/ PPC::Runtime::ASM::beq(.L_8024FDC0);
/*8024FDBC 0024CBBC*/ PPC::Runtime::ASM::li(context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8024FDC0, 0x8024FDC0) //this is a jump label
/*8024FDC0 0024CBC0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39c, context->r31));
/* 8024FDC4 0024CBC4  54 00 FF FF */ extrwi. context->r0 , context->r0 , 1 , 30
/*8024FDC8 0024CBC8*/ PPC::Runtime::ASM::beq(.L_8024FDE4);
/*8024FDCC 0024CBCC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8024FDD0 0024CBD0*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8024FDD4 0024CBD4*/ PPC::Runtime::ASM::bl(fn_80082250);
/*8024FDD8 0024CBD8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8024FDDC 0024CBDC*/ PPC::Runtime::ASM::beq(.L_8024FDE4);
/*8024FDE0 0024CBE0*/ PPC::Runtime::ASM::li(context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8024FDE4, 0x8024FDE4) //this is a jump label
/*8024FDE4 0024CBE4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39c, context->r31));
/* 8024FDE8 0024CBE8  54 00 F7 FF */ extrwi. context->r0 , context->r0 , 1 , 29
/*8024FDEC 0024CBEC*/ PPC::Runtime::ASM::beq(.L_8024FE08);
/*8024FDF0 0024CBF0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8024FDF4 0024CBF4*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8024FDF8 0024CBF8*/ PPC::Runtime::ASM::bl(fn_80082284);
/*8024FDFC 0024CBFC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8024FE00 0024CC00*/ PPC::Runtime::ASM::beq(.L_8024FE08);
/*8024FE04 0024CC04*/ PPC::Runtime::ASM::li(context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8024FE08, 0x8024FE08) //this is a jump label
/*8024FE08 0024CC08*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8024FE0C 0024CC0C*/ PPC::Runtime::ASM::beq(.L_8024FE18);
/*8024FE10 0024CC10*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8024FE14 0024CC14*/ PPC::Runtime::ASM::bl(fn_HSD_StateInvalidate);
RUNTIME_PPC_JUMP_LABEL(.L_8024FE18, 0x8024FE18) //this is a jump label
/*8024FE18 0024CC18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8024FE1C 0024CC1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8024FE20 0024CC20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8024FE24 0024CC24*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8024FE28 0024CC28*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8024FE2C 0024CC2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8024FE30 0024CC30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8024FE34 0024CC34*/ PPC::Runtime::ASM::blr();
}