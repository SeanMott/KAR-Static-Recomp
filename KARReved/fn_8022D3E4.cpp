//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_lbLoadArchive.hpp"



void fn_8022D3E4(PPC::Runtime::GCContext* context)
{
/*8022D3E4 0022A1E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022D3E8 0022A1E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022D3EC 0022A1EC*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B4C00 @ Get_MemoryOffset_HighBit);
/*8022D3F0 0022A1F0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B4C0C @ Get_MemoryOffset_HighBit);
/*8022D3F4 0022A1F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022D3F8 0022A1F8*/ PPC::Runtime::ASM::addi(context->r6, context->r3, lbl_804B4C0C @ Get_MemoryOffset_LowBit);
/*8022D3FC 0022A1FC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_804B4C00 @ Get_MemoryOffset_LowBit);
/*8022D400 0022A200*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8022D404 0022A204*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8022D408 0022A208*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8022D40C 0022A20C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8022D410 0022A210*/ PPC::Runtime::ASM::bl(fn_lbLoadArchive);
/*8022D414 0022A214*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022D418 0022A218*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DD890 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8022D41C 0022A21C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8022D420 0022A220*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD894 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8022D424 0022A224*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022D428 0022A228*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022D42C 0022A22C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022D430 0022A230*/ PPC::Runtime::ASM::blr();
}