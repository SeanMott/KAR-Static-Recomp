//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80123E34(PPC::Runtime::GCContext* context)
{
/*80123E34 00120C34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80123E38 00120C38*/ PPC::Runtime::ASM::mflr(context->r0);
/*80123E3C 00120C3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80123E40 00120C40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80123E44 00120C44*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80123E48 00120C48*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80123E4C 00120C4C*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*80123E50 00120C50*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*80123E54 00120C54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c0, context->r31));
/*80123E58 00120C58*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80123E5C 00120C5C*/ PPC::Runtime::ASM::beq(.L_80123E6C);
/*80123E60 00120C60*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80123E64 00120C64*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80123E68 00120C68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80123E6C, 0x80123E6C) //this is a jump label
/*80123E6C 00120C6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80123E70 00120C70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80123E74 00120C74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80123E78 00120C78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80123E7C 00120C7C*/ PPC::Runtime::ASM::blr();
}