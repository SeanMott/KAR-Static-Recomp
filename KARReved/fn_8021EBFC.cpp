//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007A920.hpp"
#include "fn_8007A94C.hpp"



void fn_8021EBFC(PPC::Runtime::GCContext* context)
{
/*8021EBFC 0021B9FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8021EC00 0021BA00*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021EC04 0021BA04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021EC08 0021BA08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021EC0C 0021BA0C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8021EC10 0021BA10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8021EC14 0021BA14*/ PPC::Runtime::ASM::lha(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4a, context->r31));
/*8021EC18 0021BA18*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8021EC1C 0021BA1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*8021EC20 0021BA20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r5));
/*8021EC24 0021BA24*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*8021EC28 0021BA28*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*8021EC2C 0021BA2C*/ PPC::Runtime::ASM::bge(.L_8021EC70);
/*8021EC30 0021BA30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
/*8021EC34 0021BA34*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8021EC38 0021BA38*/ PPC::Runtime::ASM::beq(.L_8021EC70);
/*8021EC3C 0021BA3C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x2f8);
/*8021EC40 0021BA40*/ PPC::Runtime::ASM::bl(fn_8007A920);
/*8021EC44 0021BA44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8021EC48 0021BA48*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r31));
/*8021EC4C 0021BA4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb14, context->r31));
/*8021EC50 0021BA50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8021EC54 0021BA54*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*8021EC58 0021BA58*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb68, context->r31));
/*8021EC5C 0021BA5C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8021EC60 0021BA60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
/*8021EC64 0021BA64*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*8021EC68 0021BA68*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f0);
/*8021EC6C 0021BA6C*/ PPC::Runtime::ASM::bl(fn_8007A94C);
RUNTIME_PPC_JUMP_LABEL(.L_8021EC70, 0x8021EC70) //this is a jump label
/*8021EC70 0021BA70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021EC74 0021BA74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021EC78 0021BA78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8021EC7C 0021BA7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021EC80 0021BA80*/ PPC::Runtime::ASM::blr();
}