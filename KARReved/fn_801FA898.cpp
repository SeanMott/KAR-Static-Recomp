//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"
#include "fn_801CA294.hpp"



void fn_801FA898(PPC::Runtime::GCContext* context)
{
/*801FA898 001F7698*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FA89C 001F769C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FA8A0 001F76A0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E21D4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA8A4 001F76A4*/ PPC::Runtime::ASM::li(context->r4, 0x15);
/*801FA8A8 001F76A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA8AC 001F76AC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801FA8B0 001F76B0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E21D8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA8B4 001F76B4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801FA8B8 001F76B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA8BC 001F76BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FA8C0 001F76C0*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801FA8C4 001F76C4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801FA8C8 001F76C8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801FA8CC 001F76CC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801FA8D0 001F76D0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801FA8D4 001F76D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r31));
/* 801FA8D8 001F76D8  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801FA8DC 001F76DC*/ PPC::Runtime::ASM::bne(.L_801FA8E8);
/*801FA8E0 001F76E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA8E4 001F76E4*/ PPC::Runtime::ASM::bl(fn_801CA294);
RUNTIME_PPC_JUMP_LABEL(.L_801FA8E8, 0x801FA8E8) //this is a jump label
/*801FA8E8 001F76E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA8EC 001F76EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA8F0 001F76F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FA8F4 001F76F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FA8F8 001F76F8*/ PPC::Runtime::ASM::blr();
}