//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025E3E0(PPC::Runtime::GCContext* context)
{
/*8025E3E0 0025B1E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E3E4 0025B1E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E3E8 0025B1E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E3EC 0025B1EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E3F0 0025B1F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025E3F4 0025B1F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E3F8 0025B1F8*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025E3FC 0025B1FC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F10 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E400 0025B200*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E404 0025B204*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F14 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E408 0025B208*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025E40C 0025B20C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E410 0025B210*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E414 0025B214*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E418 0025B218*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E41C 0025B21C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E420 0025B220*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E424 0025B224*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E428 0025B228*/ PPC::Runtime::ASM::blr();
}