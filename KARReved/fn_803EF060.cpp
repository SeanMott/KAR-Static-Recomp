//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn___cvt_fp2unsigned.hpp"
#include "fn___cvt_fp2unsigned.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_803EF060(PPC::Runtime::GCContext* context)
{
/*803EF060 003EBE60*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EF064 003EBE64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EF068 003EBE68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803EF06C 003EBE6C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803EF070 003EBE70*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*803EF074 003EBE74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EF078 003EBE78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EF07C 003EBE7C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EF080 003EBE80*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803EF084 003EBE84*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EF088 003EBE88*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E5940 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803EF08C 003EBE8C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803EF090 003EBE90*/ PPC::Runtime::ASM::fmuls(context->f31, context->f0, context->f31);
/*803EF094 003EBE94*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*803EF098 003EBE98*/ PPC::Runtime::ASM::bl(fn___cvt_fp2unsigned);
/*803EF09C 003EBE9C*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*803EF0A0 003EBEA0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803EF0A4 003EBEA4*/ PPC::Runtime::ASM::bl(fn___cvt_fp2unsigned);
/*803EF0A8 003EBEA8*/ PPC::Runtime::ASM::lis(context->r0, 0x4);
/*803EF0AC 003EBEAC*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*803EF0B0 003EBEB0*/ PPC::Runtime::ASM::ble(.L_803EF0B8);
/*803EF0B4 003EBEB4*/ PPC::Runtime::ASM::lis(context->r31, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_803EF0B8, 0x803EF0B8) //this is a jump label
/*803EF0B8 003EBEB8*/ PPC::Runtime::ASM::srwi(context->r0, context->r31, 16);
/*803EF0BC 003EBEBC*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1de, context->r29));
/*803EF0C0 003EBEC0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EF0C4 003EBEC4*/ PPC::Runtime::ASM::sth(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r29));
/*803EF0C8 003EBEC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803EF0CC 003EBECC*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x8);
/*803EF0D0 003EBED0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803EF0D4 003EBED4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EF0D8 003EBED8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803EF0DC 003EBEDC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803EF0E0 003EBEE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EF0E4 003EBEE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EF0E8 003EBEE8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EF0EC 003EBEEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803EF0F0 003EBEF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EF0F4 003EBEF4*/ PPC::Runtime::ASM::blr();
}