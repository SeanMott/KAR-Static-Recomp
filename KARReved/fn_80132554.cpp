//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8014A7D0.hpp"
#include "fn_8014A584.hpp"
#include "fn_8013B870.hpp"
#include "fn_801484A4.hpp"
#include "fn_80146FBC.hpp"



void fn_80132554(PPC::Runtime::GCContext* context)
{
/*80132554 0012F354*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80132558 0012F358*/ PPC::Runtime::ASM::mflr(context->r0);
/*8013255C 0012F35C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80132560 0012F360*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80132564 0012F364*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*80132568 0012F368*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8013256C 0012F36C*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80132570 0012F370*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80132574 0012F374*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80132578 0012F378*/ PPC::Runtime::ASM::mr(context->r3, context->r5);
/*8013257C 0012F37C*/ PPC::Runtime::ASM::bl(fn_8014A7D0);
/*80132580 0012F380*/ PPC::Runtime::ASM::bl(fn_8014A584);
/*80132584 0012F384*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*80132588 0012F388*/ PPC::Runtime::ASM::lis(context->r3, StructValues_86 @ Get_MemoryOffset_HighBit);
/*8013258C 0012F38C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80132590 0012F390*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructValues_86 @ Get_MemoryOffset_LowBit);
/*80132594 0012F394*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80132598 0012F398*/ PPC::Runtime::ASM::extsh(context->r3, context->r0);
/*8013259C 0012F39C*/ PPC::Runtime::ASM::bl(fn_8013B870);
/*801325A0 0012F3A0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801325A4 0012F3A4*/ PPC::Runtime::ASM::bl(fn_801484A4);
/*801325A8 0012F3A8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801325AC 0012F3AC*/ PPC::Runtime::ASM::bl(fn_80146FBC);
/*801325B0 0012F3B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801325B4 0012F3B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801325B8 0012F3B8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801325BC 0012F3BC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801325C0 0012F3C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801325C4 0012F3C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801325C8 0012F3C8*/ PPC::Runtime::ASM::blr();
}