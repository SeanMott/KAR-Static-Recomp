//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800FEAC4(PPC::Runtime::GCContext* context)
{
/*800FEAC4 000FB8C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FEAC8 000FB8C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FEACC 000FB8CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEAD0 000FB8D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FEAD4 000FB8D4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800FEAD8 000FB8D8*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800FEADC 000FB8DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FEAE0 000FB8E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FEAE4 000FB8E4*/ PPC::Runtime::ASM::cmplw(context->r0, context->r4);
/*800FEAE8 000FB8E8*/ PPC::Runtime::ASM::beq(.L_800FEB04);
/*800FEAEC 000FB8EC*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakugondola." Get_MemoryOffset_HighBit);
/*800FEAF0 000FB8F0*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_1009 @ Get_MemoryOffset_HighBit);
/*800FEAF4 000FB8F4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakugondola." Get_MemoryOffset_LowBit);
/*800FEAF8 000FB8F8*/ PPC::Runtime::ASM::li(context->r4, 0x164);
/*800FEAFC 000FB8FC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_1009 @ Get_MemoryOffset_LowBit);
/*800FEB00 000FB900*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FEB04, 0x800FEB04) //this is a jump label
/*800FEB04 000FB904*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FEB08 000FB908*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEB0C 000FB90C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FEB10 000FB910*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800FEB14 000FB914*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FEB18 000FB918*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FEB1C 000FB91C*/ PPC::Runtime::ASM::blr();
}