//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802414D4.hpp"
#include "fn_800A3AB0.hpp"



void fn_800A3E00(PPC::Runtime::GCContext* context)
{
/*800A3E00 000A0C00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A3E04 000A0C04*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A3E08 000A0C08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A3E0C 000A0C0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A3E10 000A0C10*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A3E14 000A0C14*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800A3E18 000A0C18*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A3E1C 000A0C1C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800A3E20 000A0C20*/ PPC::Runtime::ASM::bl(fn_802414D4);
/*800A3E24 000A0C24*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800A3E28 000A0C28*/ PPC::Runtime::ASM::b(.L_800A3E40);
RUNTIME_PPC_JUMP_LABEL(.L_800A3E2C, 0x800A3E2C) //this is a jump label
/*800A3E2C 000A0C2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A3E30 000A0C30*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800A3E34 000A0C34*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800A3E38 000A0C38*/ PPC::Runtime::ASM::bl(fn_800A3AB0);
/*800A3E3C 000A0C3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800A3E40, 0x800A3E40) //this is a jump label
/*800A3E40 000A0C40*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800A3E44 000A0C44*/ PPC::Runtime::ASM::bne(.L_800A3E2C);
/*800A3E48 000A0C48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A3E4C 000A0C4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A3E50 000A0C50*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A3E54 000A0C54*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A3E58 000A0C58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A3E5C 000A0C5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A3E60 000A0C60*/ PPC::Runtime::ASM::blr();
}