//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025EF20(PPC::Runtime::GCContext* context)
{
/*8025EF20 0025BD20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025EF24 0025BD24*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025EF28 0025BD28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025EF2C 0025BD2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025EF30 0025BD30*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025EF34 0025BD34*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025EF38 0025BD38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025EF3C 0025BD3C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EF40 0025BD40*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025EF44 0025BD44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EF48 0025BD48*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025EF4C 0025BD4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025EF50 0025BD50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EF54 0025BD54*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025EF58 0025BD58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025EF5C 0025BD5C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025EF60 0025BD60*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025EF64 0025BD64*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EF68 0025BD68*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025EF6C 0025BD6C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025EF70 0025BD70*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025EF74 0025BD74*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025EF78 0025BD78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025EF7C 0025BD7C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F34 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025EF80 0025BD80*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025EF84 0025BD84*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025EF88 0025BD88*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025EF8C 0025BD8C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025EF90 0025BD90*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025EF94 0025BD94*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025EF98 0025BD98*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025EF9C 0025BD9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025EFA0 0025BDA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025EFA4 0025BDA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025EFA8 0025BDA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025EFAC 0025BDAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025EFB0 0025BDB0*/ PPC::Runtime::ASM::blr();
}