//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803A2BE4.hpp"



void fn_803AB968(PPC::Runtime::GCContext* context)
{
/*803AB968 003A8768*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803AB96C 003A876C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803AB970 003A8770*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803AB974 003A8774*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803AB978 003A8778*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*803AB97C 003A877C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803AB980 003A8780*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*803AB984 003A8784*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AB988 003A8788*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*803AB98C 003A878C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803AB990 003A8790*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*803AB994 003A8794*/ PPC::Runtime::ASM::bl(fn_803A2BE4);
/*803AB998 003A8798*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F8660 @ Get_MemoryOffset_HighBit);
/*803AB99C 003A879C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803AB9A0 003A87A0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_804F8660 @ Get_MemoryOffset_LowBit);
/*803AB9A4 003A87A4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803AB9A8 003A87A8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803AB9AC 003A87AC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r28));
/*803AB9B0 003A87B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r28));
/*803AB9B4 003A87B4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r28));
/*803AB9B8 003A87B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r28));
/*803AB9BC 003A87BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803AB9C0 003A87C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r28));
/*803AB9C4 003A87C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*803AB9C8 003A87C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r28));
/*803AB9CC 003A87CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803AB9D0 003A87D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803AB9D4 003A87D4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AB9D8 003A87D8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803AB9DC 003A87DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803AB9E0 003A87E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803AB9E4 003A87E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803AB9E8 003A87E8*/ PPC::Runtime::ASM::blr();
}