//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_801181EC(PPC::Runtime::GCContext* context)
{
/*801181EC 00114FEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801181F0 00114FF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801181F4 00114FF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801181F8 00114FF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801181FC 00114FFC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80118200 00115000*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80118204 00115004*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80118208 00115008*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x58);
/*8011820C 0011500C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80118210 00115010*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80118214, 0x80118214) //this is a jump label
/*80118214 00115014*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*80118218 00115018*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011821C 0011501C*/ PPC::Runtime::ASM::beq(.L_80118228);
/*80118220 00115020*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80118224 00115024*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80118228, 0x80118228) //this is a jump label
/*80118228 00115028*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8011822C 0011502C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80118230 00115030*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80118234 00115034*/ PPC::Runtime::ASM::blt(.L_80118214);
/*80118238 00115038*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011823C 0011503C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80118240 00115040*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80118244 00115044*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80118248 00115048*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011824C 0011504C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80118250 00115050*/ PPC::Runtime::ASM::blr();
}