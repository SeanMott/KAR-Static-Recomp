//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn__hsdClassAlloc.hpp"
#include "fn__hsdClassInit.hpp"
#include "fn__hsdClassRelease.hpp"
#include "fn__hsdClassDestroy.hpp"
#include "fn__hsdClassAmnesia.hpp"
#include "fn__hsdClassAmnesia.hpp"
#include "fn__hsdClassAlloc.hpp"
#include "fn__hsdClassInit.hpp"
#include "fn__hsdClassRelease.hpp"
#include "fn__hsdClassDestroy.hpp"



void fn_80420BF8(PPC::Runtime::GCContext* context)
{
/*80420BF8 0041D9F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80420BFC 0041D9FC*/ PPC::Runtime::ASM::lis(context->r3, lbl_805047A8 @ Get_MemoryOffset_HighBit);
/*80420C00 0041DA00*/ PPC::Runtime::ASM::addi(context->r9, context->r3, lbl_805047A8 @ Get_MemoryOffset_LowBit);
/*80420C04 0041DA04*/ PPC::Runtime::ASM::lis(context->r7, fn__hsdClassAlloc @ Get_MemoryOffset_HighBit);
/*80420C08 0041DA08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80420C0C 0041DA0C*/ PPC::Runtime::ASM::lis(context->r6, fn__hsdClassInit @ Get_MemoryOffset_HighBit);
/*80420C10 0041DA10*/ PPC::Runtime::ASM::lis(context->r5, fn__hsdClassRelease @ Get_MemoryOffset_HighBit);
/*80420C14 0041DA14*/ PPC::Runtime::ASM::lis(context->r4, fn__hsdClassDestroy @ Get_MemoryOffset_HighBit);
/*80420C18 0041DA18*/ PPC::Runtime::ASM::lis(context->r3, fn__hsdClassAmnesia @ Get_MemoryOffset_HighBit);
/*80420C1C 0041DA1C*/ PPC::Runtime::ASM::addi(context->r12, context->r9, 0x0);
/*80420C20 0041DA20*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*80420C24 0041DA24*/ PPC::Runtime::ASM::addi(context->r11, context->r9, 0x114);
/*80420C28 0041DA28*/ PPC::Runtime::ASM::addi(context->r10, context->r9, 0x12c);
/*80420C2C 0041DA2C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn__hsdClassAmnesia @ Get_MemoryOffset_LowBit);
/*80420C30 0041DA30*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn__hsdClassAlloc @ Get_MemoryOffset_LowBit);
/*80420C34 0041DA34*/ PPC::Runtime::ASM::addi(context->r6, context->r6, fn__hsdClassInit @ Get_MemoryOffset_LowBit);
/*80420C38 0041DA38*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn__hsdClassRelease @ Get_MemoryOffset_LowBit);
/*80420C3C 0041DA3C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn__hsdClassDestroy @ Get_MemoryOffset_LowBit);
/*80420C40 0041DA40*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*80420C44 0041DA44*/ PPC::Runtime::ASM::li(context->r9, 0x4);
/*80420C48 0041DA48*/ PPC::Runtime::ASM::li(context->r3, 0x3c);
/*80420C4C 0041DA4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r12));
/*80420C50 0041DA50*/ PPC::Runtime::ASM::stw(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*80420C54 0041DA54*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*80420C58 0041DA58*/ PPC::Runtime::ASM::sth(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r12));
/*80420C5C 0041DA5C*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r12));
/*80420C60 0041DA60*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*80420C64 0041DA64*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r12));
/*80420C68 0041DA68*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*80420C6C 0041DA6C*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r12));
/*80420C70 0041DA70*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r12));
/*80420C74 0041DA74*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r12));
/*80420C78 0041DA78*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r12));
/*80420C7C 0041DA7C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r12));
/*80420C80 0041DA80*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r12));
/*80420C84 0041DA84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r12));
/*80420C88 0041DA88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80420C8C 0041DA8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80420C90 0041DA90*/ PPC::Runtime::ASM::blr();
}