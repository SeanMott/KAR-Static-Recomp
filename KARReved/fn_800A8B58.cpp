//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E92CC.hpp"
#include "fn_8007D988.hpp"



void fn_800A8B58(PPC::Runtime::GCContext* context)
{
/*800A8B58 000A5958*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800A8B5C 000A595C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A8B60 000A5960*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800A8B64 000A5964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A8B68 000A5968*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 2);
/*800A8B6C 000A596C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800A8B70 000A5970*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x454);
/*800A8B74 000A5974*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800A8B78 000A5978*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r0);
/*800A8B7C 000A597C*/ PPC::Runtime::ASM::lhzx(context->r4, context->r4, context->r0);
/*800A8B80 000A5980*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r5));
/*800A8B84 000A5984*/ PPC::Runtime::ASM::bne(.L_800A8BDC);
/*800A8B88 000A5988*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800A8B8C 000A598C*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x14);
/*800A8B90 000A5990*/ PPC::Runtime::ASM::bl(fn_800E92CC);
/*800A8B94 000A5994*/ PPC::Runtime::ASM::lwz(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A8B98 000A5998*/ PPC::Runtime::ASM::li(context->r6, lbl_805D5B90 @ Get_MemoryOffset_SDA21);
/*800A8B9C 000A599C*/ PPC::Runtime::ASM::lwz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A8BA0 000A59A0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*800A8BA4 000A59A4*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A8BA8 000A59A8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x2c);
/*800A8BAC 000A59AC*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A8BB0 000A59B0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5B90 @ Get_MemoryOffset_SDA21);
/*800A8BB4 000A59B4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A8BB8 000A59B8*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x4);
/*800A8BBC 000A59BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A8BC0 000A59C0*/ PPC::Runtime::ASM::stw(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800A8BC4 000A59C4*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800A8BC8 000A59C8*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A8BCC 000A59CC*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800A8BD0 000A59D0*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A8BD4 000A59D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800A8BD8 000A59D8*/ PPC::Runtime::ASM::bl(fn_8007D988);
RUNTIME_PPC_JUMP_LABEL(.L_800A8BDC, 0x800A8BDC) //this is a jump label
/*800A8BDC 000A59DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A8BE0 000A59E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A8BE4 000A59E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800A8BE8 000A59E8*/ PPC::Runtime::ASM::blr();
}