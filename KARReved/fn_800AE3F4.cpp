//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800ABA74.hpp"



void fn_800AE3F4(PPC::Runtime::GCContext* context)
{
/*800AE3F4 000AB1F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AE3F8 000AB1F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AE3FC 000AB1FC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AE400 000AB200*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE404 000AB204*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE408 000AB208*/ PPC::Runtime::ASM::bne(.L_800AE440);
/*800AE40C 000AB20C*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE410 000AB210*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE414 000AB214*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800AE418 000AB218*/ PPC::Runtime::ASM::lis(context->r4, StructValues_String_5_PlayerKind_CPU_DemoX_And_BossX_AndMicStructs @ Get_MemoryOffset_HighBit);
/*800AE41C 000AB21C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AE420 000AB220*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructValues_String_5_PlayerKind_CPU_DemoX_And_BossX_AndMicStructs @ Get_MemoryOffset_LowBit);
/*800AE424 000AB224*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800AE428 000AB228*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800AE42C 000AB22C*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800AE430 000AB230*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE434 000AB234*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD5BC @ Get_MemoryOffset_HighBit);
/*800AE438 000AB238*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD5BC @ Get_MemoryOffset_LowBit);
/*800AE43C 000AB23C*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800AE440, 0x800AE440) //this is a jump label
/*800AE440 000AB240*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE444 000AB244*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AE448 000AB248*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE44C 000AB24C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AE450 000AB250*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AE454 000AB254*/ PPC::Runtime::ASM::blr();
}