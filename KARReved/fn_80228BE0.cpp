//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802361A0.hpp"



void fn_80228BE0(PPC::Runtime::GCContext* context)
{
/*80228BE0 002259E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80228BE4 002259E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80228BE8 002259E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80228BEC 002259EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80228BF0 002259F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80228BF4 002259F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b8, context->r3));
/*80228BF8 002259F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1bc, context->r31));
/*80228BFC 002259FC*/ PPC::Runtime::ASM::bl(fn_802361A0);
/*80228C00 00225A00*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80228C04 00225A04*/ PPC::Runtime::ASM::bne(.L_80228C10);
/*80228C08 00225A08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80228C0C 00225A0C*/ PPC::Runtime::ASM::bl(fn_80428F64);
RUNTIME_PPC_JUMP_LABEL(.L_80228C10, 0x80228C10) //this is a jump label
/*80228C10 00225A10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80228C14 00225A14*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80228C18 00225A18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80228C1C 00225A1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80228C20 00225A20*/ PPC::Runtime::ASM::blr();
}