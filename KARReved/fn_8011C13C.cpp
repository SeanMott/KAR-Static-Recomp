//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8011C13C(PPC::Runtime::GCContext* context)
{
/*8011C13C 00118F3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011C140 00118F40*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011C144 00118F44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011C148 00118F48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011C14C 00118F4C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011C150 00118F50*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011C154 00118F54*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8011C158 00118F58*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8011C15C 00118F5C*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*8011C160 00118F60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b8, context->r31));
/*8011C164 00118F64*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011C168 00118F68*/ PPC::Runtime::ASM::beq(.L_8011C178);
/*8011C16C 00118F6C*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8011C170 00118F70*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8011C174 00118F74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8011C178, 0x8011C178) //this is a jump label
/*8011C178 00118F78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011C17C 00118F7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011C180 00118F80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011C184 00118F84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011C188 00118F88*/ PPC::Runtime::ASM::blr();
}