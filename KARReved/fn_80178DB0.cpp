//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801388A8.hpp"
#include "fn_80178C94.hpp"
#include "fn_80178C94.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"
#include "fn_GObj_GetJObjAtIndex_zzTOP.hpp"
#include "fn_GObj_GetJObjAtIndex_zzTOP.hpp"
#include "fn_80138BA4.hpp"
#include "fn_80138BA4.hpp"
#include "fn_80178250.hpp"



void fn_80178DB0(PPC::Runtime::GCContext* context)
{
/*80178DB0 00175BB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*80178DB4 00175BB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80178DB8 00175BB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80178DBC 00175BBC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*80178DC0 00175BC0*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*80178DC4 00175BC4*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80178DC8 00175BC8*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80178DCC 00175BCC*/ PPC::Runtime::ASM::mr(context->r25, context->r5);
/*80178DD0 00175BD0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80178DD4 00175BD4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0xd60);
/*80178DD8 00175BD8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd60, context->r3));
/*80178DDC 00175BDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80178DE0 00175BE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80178DE4 00175BE4*/ PPC::Runtime::ASM::bl(fn_801388A8);
/*80178DE8 00175BE8*/ PPC::Runtime::ASM::lis(context->r4, fn_80178C94 @ Get_MemoryOffset_HighBit);
/*80178DEC 00175BEC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80178DF0 00175BF0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80178DF4 00175BF4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80178DF8 00175BF8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80178C94 @ Get_MemoryOffset_LowBit);
/*80178DFC 00175BFC*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*80178E00 00175C00*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0CC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80178E04 00175C04*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80178E08 00175C08*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80178E0C 00175C0C*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*80178E10 00175C10*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80178E14 00175C14*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*80178E18 00175C18*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80178E1C 00175C1C*/ PPC::Runtime::ASM::li(context->r4, 0xa5);
/*80178E20 00175C20*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*80178E24 00175C24*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*80178E28 00175C28*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80178E2C 00175C2C*/ PPC::Runtime::ASM::stb(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80178E30 00175C30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80178E34 00175C34*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80178E38 00175C38*/ PPC::Runtime::ASM::stb(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r26));
/*80178E3C 00175C3C*/ PPC::Runtime::ASM::stb(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r26));
/*80178E40 00175C40*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r26));
/*80178E44 00175C44*/ PPC::Runtime::ASM::bl(fn_GObj_GetJObjAtIndex_zzTOP);
/*80178E48 00175C48*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r26));
/*80178E4C 00175C4C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80178E50 00175C50*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80178E54 00175C54*/ PPC::Runtime::ASM::bl(fn_GObj_GetJObjAtIndex_zzTOP);
/*80178E58 00175C58*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r26));
/*80178E5C 00175C5C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0CC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80178E60 00175C60*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r26));
/*80178E64 00175C64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r26));
/*80178E68 00175C68*/ PPC::Runtime::ASM::extsb(context->r4, context->r4);
/*80178E6C 00175C6C*/ PPC::Runtime::ASM::bl(fn_80138BA4);
/*80178E70 00175C70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r26));
/*80178E74 00175C74*/ PPC::Runtime::ASM::extsb(context->r4, context->r25);
/*80178E78 00175C78*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0CC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80178E7C 00175C7C*/ PPC::Runtime::ASM::bl(fn_80138BA4);
/*80178E80 00175C80*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*80178E84 00175C84*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*80178E88 00175C88*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80178E8C 00175C8C*/ PPC::Runtime::ASM::bl(fn_80178250);
/*80178E90 00175C90*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80178E94 00175C94*/ PPC::Runtime::ASM::bne(.L_80178EA8);
/*80178E98 00175C98*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6D58 @ Get_MemoryOffset_SDA21);
/*80178E9C 00175C9C*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80178EA0 00175CA0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6D60 @ Get_MemoryOffset_SDA21);
/*80178EA4 00175CA4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80178EA8, 0x80178EA8) //this is a jump label
/*80178EA8 00175CA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80178EAC 00175CAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80178EB0 00175CB0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r29));
/*80178EB4 00175CB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r29));
/*80178EB8 00175CB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80178EBC 00175CBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r29));
/*80178EC0 00175CC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*80178EC4 00175CC4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80178EC8 00175CC8*/ PPC::Runtime::ASM::bne(.L_80178F14);
/*80178ECC 00175CCC*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80178ED0 00175CD0*/ PPC::Runtime::ASM::beq(.L_80178F14);
/*80178ED4 00175CD4*/ PPC::Runtime::ASM::bne(.L_80178EE8);
/*80178ED8 00175CD8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6D58 @ Get_MemoryOffset_SDA21);
/*80178EDC 00175CDC*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80178EE0 00175CE0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6D60 @ Get_MemoryOffset_SDA21);
/*80178EE4 00175CE4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80178EE8, 0x80178EE8) //this is a jump label
/*80178EE8 00175CE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*80178EEC 00175CEC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80178EF0 00175CF0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80178EF4 00175CF4*/ PPC::Runtime::ASM::bne(.L_80178F04);
/*80178EF8 00175CF8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80178EFC 00175CFC*/ PPC::Runtime::ASM::beq(.L_80178F04);
/*80178F00 00175D00*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80178F04, 0x80178F04) //this is a jump label
/*80178F04 00175D04*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80178F08 00175D08*/ PPC::Runtime::ASM::bne(.L_80178F14);
/*80178F0C 00175D0C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80178F10 00175D10*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80178F14, 0x80178F14) //this is a jump label
/*80178F14 00175D14*/ PPC::Runtime::ASM::extsb(context->r3, context->r27);
/*80178F18 00175D18*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*80178F1C 00175D1C*/ PPC::Runtime::ASM::mulli(context->r3, context->r3, 0x14);
/*80178F20 00175D20*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80178F24 00175D24*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*80178F28 00175D28*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*80178F2C 00175D2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80178F30 00175D30*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*80178F34 00175D34*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*80178F38 00175D38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80178F3C 00175D3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80178F40 00175D40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80178F44 00175D44*/ PPC::Runtime::ASM::blr();
}