//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000CA3C.hpp"
#include "fn_acos.hpp"
#include "fn_8000CADC.hpp"
#include "fn_800088C8.hpp"
#include "fn_8005A348.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_8003C0C4.hpp"
#include "fn_8003C0EC.hpp"
#include "fn_800088C8.hpp"
#include "fn_80028838.hpp"
#include "fn_80028860.hpp"
#include "fn_800088C8.hpp"
#include "fn_8003B4E8.hpp"



void fn_8003DBEC(PPC::Runtime::GCContext* context)
{
/*8003DBEC 0003A9EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8003DBF0 0003A9F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8003DBF4 0003A9F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003DBF8 0003A9F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003DBFC 0003A9FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8003DC00 0003AA00*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8003DC04 0003AA04*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003DC08 0003AA08*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8003DC0C 0003AA0C*/ PPC::Runtime::ASM::bl(fn_8000CA3C);
/*8003DC10 0003AA10*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8003DC14 0003AA14*/ PPC::Runtime::ASM::bne(.L_8003DC34);
/*8003DC18 0003AA18*/ PPC::Runtime::ASM::bl(fn_acos);
/*8003DC1C 0003AA1C*/ PPC::Runtime::ASM::bl(fn_8000CADC);
/*8003DC20 0003AA20*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8003DC24 0003AA24*/ PPC::Runtime::ASM::li(context->r3, 0x17);
/*8003DC28 0003AA28*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x360, context->r31));
/*8003DC2C 0003AA2C*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*8003DC30 0003AA30*/ PPC::Runtime::ASM::b(.L_8003DCC0);
RUNTIME_PPC_JUMP_LABEL(.L_8003DC34, 0x8003DC34) //this is a jump label
/*8003DC34 0003AA34*/ PPC::Runtime::ASM::bl(fn_8005A348);
/*8003DC38 0003AA38*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003DC3C 0003AA3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8003DC40 0003AA40*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003DC44 0003AA44*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35d, context->r3));
/*8003DC48 0003AA48*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8003DC4C 0003AA4C*/ PPC::Runtime::ASM::bne(.L_8003DC64);
/*8003DC50 0003AA50*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x362, context->r3));
/*8003DC54 0003AA54*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8003DC58 0003AA58*/ PPC::Runtime::ASM::bne(.L_8003DC64);
/*8003DC5C 0003AA5C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8003DC60 0003AA60*/ PPC::Runtime::ASM::b(.L_8003DC68);
RUNTIME_PPC_JUMP_LABEL(.L_8003DC64, 0x8003DC64) //this is a jump label
/*8003DC64 0003AA64*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8003DC68, 0x8003DC68) //this is a jump label
/*8003DC68 0003AA68*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8003DC6C 0003AA6C*/ PPC::Runtime::ASM::beq(.L_8003DC98);
/*8003DC70 0003AA70*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8003DC74 0003AA74*/ PPC::Runtime::ASM::beq(.L_8003DC80);
/*8003DC78 0003AA78*/ PPC::Runtime::ASM::bl(fn_8003C0C4);
/*8003DC7C 0003AA7C*/ PPC::Runtime::ASM::b(.L_8003DC84);
RUNTIME_PPC_JUMP_LABEL(.L_8003DC80, 0x8003DC80) //this is a jump label
/*8003DC80 0003AA80*/ PPC::Runtime::ASM::bl(fn_8003C0EC);
RUNTIME_PPC_JUMP_LABEL(.L_8003DC84, 0x8003DC84) //this is a jump label
/*8003DC84 0003AA84*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*8003DC88 0003AA88*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*8003DC8C 0003AA8C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x360, context->r31));
/*8003DC90 0003AA90*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*8003DC94 0003AA94*/ PPC::Runtime::ASM::b(.L_8003DCC0);
RUNTIME_PPC_JUMP_LABEL(.L_8003DC98, 0x8003DC98) //this is a jump label
/*8003DC98 0003AA98*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8003DC9C 0003AA9C*/ PPC::Runtime::ASM::beq(.L_8003DCA8);
/*8003DCA0 0003AAA0*/ PPC::Runtime::ASM::bl(fn_80028838);
/*8003DCA4 0003AAA4*/ PPC::Runtime::ASM::b(.L_8003DCAC);
RUNTIME_PPC_JUMP_LABEL(.L_8003DCA8, 0x8003DCA8) //this is a jump label
/*8003DCA8 0003AAA8*/ PPC::Runtime::ASM::bl(fn_80028860);
RUNTIME_PPC_JUMP_LABEL(.L_8003DCAC, 0x8003DCAC) //this is a jump label
/*8003DCAC 0003AAAC*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*8003DCB0 0003AAB0*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*8003DCB4 0003AAB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x360, context->r31));
/*8003DCB8 0003AAB8*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*8003DCBC 0003AABC*/ PPC::Runtime::ASM::bl(fn_8003B4E8);
RUNTIME_PPC_JUMP_LABEL(.L_8003DCC0, 0x8003DCC0) //this is a jump label
/*8003DCC0 0003AAC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003DCC4 0003AAC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003DCC8 0003AAC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8003DCCC 0003AACC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8003DCD0 0003AAD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8003DCD4 0003AAD4*/ PPC::Runtime::ASM::blr();
}