//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F6090(PPC::Runtime::GCContext* context)
{
/*800F6090 000F2E90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F6094 000F2E94*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F6098 000F2E98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F609C 000F2E9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F60A0 000F2EA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F60A4 000F2EA4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F60A8 000F2EA8*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800F60AC 000F2EAC*/ PPC::Runtime::ASM::bl(fn_8040BCA0);
/*800F60B0 000F2EB0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F60B4 000F2EB4*/ PPC::Runtime::ASM::b(.L_800F610C);
RUNTIME_PPC_JUMP_LABEL(.L_800F60B8, 0x800F60B8) //this is a jump label
/*800F60B8 000F2EB8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800F60BC 000F2EBC*/ PPC::Runtime::ASM::beq(.L_800F60C8);
/*800F60C0 000F2EC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800F60C4 000F2EC4*/ PPC::Runtime::ASM::b(.L_800F60CC);
RUNTIME_PPC_JUMP_LABEL(.L_800F60C8, 0x800F60C8) //this is a jump label
/*800F60C8 000F2EC8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800F60CC, 0x800F60CC) //this is a jump label
/*800F60CC 000F2ECC*/ PPC::Runtime::ASM::bl(fn_HSD_MObjGetTObj);
/*800F60D0 000F2ED0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F60D4 000F2ED4*/ PPC::Runtime::ASM::beq(.L_800F6108);
/*800F60D8 000F2ED8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r3));
/*800F60DC 000F2EDC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F60E0 000F2EE0*/ PPC::Runtime::ASM::beq(.L_800F6108);
/*800F60E4 000F2EE4*/ PPC::Runtime::ASM::bne(.L_800F60F8);
/*800F60E8 000F2EE8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D61B8 @ Get_MemoryOffset_SDA21);
/*800F60EC 000F2EEC*/ PPC::Runtime::ASM::li(context->r4, 0x95);
/*800F60F0 000F2EF0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D61C0 @ Get_MemoryOffset_SDA21);
/*800F60F4 000F2EF4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F60F8, 0x800F60F8) //this is a jump label
/*800F60F8 000F2EF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800F60FC 000F2EFC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800F6100 000F2F00*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800F6104 000F2F04*/ PPC::Runtime::ASM::b(.L_800F6118);
RUNTIME_PPC_JUMP_LABEL(.L_800F6108, 0x800F6108) //this is a jump label
/*800F6108 000F2F08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800F610C, 0x800F610C) //this is a jump label
/*800F610C 000F2F0C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800F6110 000F2F10*/ PPC::Runtime::ASM::bne(.L_800F60B8);
/*800F6114 000F2F14*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800F6118, 0x800F6118) //this is a jump label
/*800F6118 000F2F18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F611C 000F2F1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F6120 000F2F20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F6124 000F2F24*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F6128 000F2F28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F612C 000F2F2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F6130 000F2F30*/ PPC::Runtime::ASM::blr();
}