//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801388A8.hpp"
#include "fn_8014E198.hpp"
#include "fn_8014E198.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"



void fn_8014E1E8(PPC::Runtime::GCContext* context)
{
/*8014E1E8 0014AFE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8014E1EC 0014AFEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014E1F0 0014AFF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014E1F4 0014AFF4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014E1F8 0014AFF8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014E1FC 0014AFFC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014E200 0014B000*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014E204 0014B004*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8014E208 0014B008*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x474, context->r3));
/*8014E20C 0014B00C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014E210 0014B010*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014E214 0014B014*/ PPC::Runtime::ASM::bl(fn_801388A8);
/*8014E218 0014B018*/ PPC::Runtime::ASM::lis(context->r4, fn_8014E198 @ Get_MemoryOffset_HighBit);
/*8014E21C 0014B01C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8014E220 0014B020*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8014E224 0014B024*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8014E228 0014B028*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8014E198 @ Get_MemoryOffset_LowBit);
/*8014E22C 0014B02C*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*8014E230 0014B030*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0640 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014E234 0014B034*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8014E238 0014B038*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x474, context->r31));
/*8014E23C 0014B03C*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*8014E240 0014B040*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8014E244 0014B044*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*8014E248 0014B048*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8014E24C 0014B04C*/ PPC::Runtime::ASM::li(context->r4, 0x28);
/*8014E250 0014B050*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*8014E254 0014B054*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x478, context->r31));
/*8014E258 0014B058*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014E25C 0014B05C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014E260 0014B060*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014E264 0014B064*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014E268 0014B068*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014E26C 0014B06C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8014E270 0014B070*/ PPC::Runtime::ASM::blr();
}