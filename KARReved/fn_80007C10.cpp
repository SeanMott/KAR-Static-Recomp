//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007CC90.hpp"
#include "fn_8007B954.hpp"



void fn_80007C10(PPC::Runtime::GCContext* context)
{
/*80007C10 00004A10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80007C14 00004A14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80007C18 00004A18*/ PPC::Runtime::ASM::lis(context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_HighBit);
/*80007C1C 00004A1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80007C20 00004A20*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80007C24 00004A24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80007C28 00004A28*/ PPC::Runtime::ASM::addi(context->r31, context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_LowBit);
/*80007C2C 00004A2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80007C30 00004A30*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80007C34 00004A34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd50, context->r31));
/*80007C38 00004A38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd54, context->r31));
/*80007C3C 00004A3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd58, context->r31));
/*80007C40 00004A40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd5c, context->r31));
/*80007C44 00004A44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd60, context->r31));
/*80007C48 00004A48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd64, context->r31));
/*80007C4C 00004A4C*/ PPC::Runtime::ASM::b(.L_80007CBC);
RUNTIME_PPC_JUMP_LABEL(.L_80007C50, 0x80007C50) //this is a jump label
/*80007C50 00004A50*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r30, 24);
/*80007C54 00004A54*/ PPC::Runtime::ASM::bl(fn_8007CC90);
/*80007C58 00004A58*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd50, context->r31));
/*80007C5C 00004A5C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80007C60 00004A60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80007C64 00004A64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd54, context->r31));
/*80007C68 00004A68*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*80007C6C 00004A6C*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd58, context->r31));
/*80007C70 00004A70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd50, context->r31));
/*80007C74 00004A74*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd5c, context->r31));
/*80007C78 00004A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80007C7C 00004A7C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd60, context->r31));
/*80007C80 00004A80*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*80007C84 00004A84*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd64, context->r31));
/*80007C88 00004A88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd54, context->r31));
/*80007C8C 00004A8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80007C90 00004A90*/ PPC::Runtime::ASM::or(context->r0, context->r7, context->r0);
/*80007C94 00004A94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd58, context->r31));
/*80007C98 00004A98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80007C9C 00004A9C*/ PPC::Runtime::ASM::or(context->r0, context->r6, context->r0);
/*80007CA0 00004AA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd5c, context->r31));
/*80007CA4 00004AA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80007CA8 00004AA8*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*80007CAC 00004AAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd60, context->r31));
/*80007CB0 00004AB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80007CB4 00004AB4*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*80007CB8 00004AB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd64, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80007CBC, 0x80007CBC) //this is a jump label
/*80007CBC 00004ABC*/ PPC::Runtime::ASM::bl(fn_8007B954);
/*80007CC0 00004AC0*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r3, 24);
/*80007CC4 00004AC4*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80007CC8 00004AC8*/ PPC::Runtime::ASM::blt(.L_80007C50);
/*80007CCC 00004ACC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80007CD0 00004AD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80007CD4 00004AD4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80007CD8 00004AD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80007CDC 00004ADC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80007CE0 00004AE0*/ PPC::Runtime::ASM::blr();
}