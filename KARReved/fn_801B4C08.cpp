//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801B4C40.hpp"
#include "fn_801B4CD0.hpp"
#include "fn_801B4C40.hpp"
#include "fn_801B4CCC.hpp"
#include "fn_801B4CD0.hpp"
#include "fn_801B4CCC.hpp"



void fn_801B4C08(PPC::Runtime::GCContext* context)
{
/*801B4C08 001B1A08*/ PPC::Runtime::ASM::lis(context->r4, fn_801B4C40 @ Get_MemoryOffset_HighBit);
/*801B4C0C 001B1A0C*/ PPC::Runtime::ASM::lis(context->r5, fn_801B4CD0 @ Get_MemoryOffset_HighBit);
/*801B4C10 001B1A10*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B4C40 @ Get_MemoryOffset_LowBit);
/*801B4C14 001B1A14*/ PPC::Runtime::ASM::lis(context->r4, fn_801B4CCC @ Get_MemoryOffset_HighBit);
/*801B4C18 001B1A18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x92c, context->r3));
/*801B4C1C 001B1A1C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn_801B4CD0 @ Get_MemoryOffset_LowBit);
/*801B4C20 001B1A20*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B4CCC @ Get_MemoryOffset_LowBit);
/*801B4C24 001B1A24*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801B4C28 001B1A28*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7fc, context->r3));
/*801B4C2C 001B1A2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e8, context->r3));
/*801B4C30 001B1A30*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r3));
/*801B4C34 001B1A34*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 6, 25, 25);
/*801B4C38 001B1A38*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r3));
/*801B4C3C 001B1A3C*/ PPC::Runtime::ASM::blr();
}