//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80147C78.hpp"
#include "fn_8013B870.hpp"



void fn_80131FBC(PPC::Runtime::GCContext* context)
{
/*80131FBC 0012EDBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80131FC0 0012EDC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80131FC4 0012EDC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80131FC8 0012EDC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80131FCC 0012EDCC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80131FD0 0012EDD0*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*80131FD4 0012EDD4*/ PPC::Runtime::ASM::bl(fn_80147C78);
/*80131FD8 0012EDD8*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*80131FDC 0012EDDC*/ PPC::Runtime::ASM::lis(context->r3, StructValues_86 @ Get_MemoryOffset_HighBit);
/*80131FE0 0012EDE0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80131FE4 0012EDE4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructValues_86 @ Get_MemoryOffset_LowBit);
/*80131FE8 0012EDE8*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80131FEC 0012EDEC*/ PPC::Runtime::ASM::extsh(context->r3, context->r0);
/*80131FF0 0012EDF0*/ PPC::Runtime::ASM::bl(fn_8013B870);
/*80131FF4 0012EDF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80131FF8 0012EDF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80131FFC 0012EDFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80132000 0012EE00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80132004 0012EE04*/ PPC::Runtime::ASM::blr();
}