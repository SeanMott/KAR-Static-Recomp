//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FC398.hpp"
#include "fn_80206E1C.hpp"
#include "fn_8021A0E0.hpp"



void fn_80211C34(PPC::Runtime::GCContext* context)
{
/*80211C34 0020EA34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80211C38 0020EA38*/ PPC::Runtime::ASM::mflr(context->r0);
/*80211C3C 0020EA3C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2550 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80211C40 0020EA40*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*80211C44 0020EA44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80211C48 0020EA48*/ PPC::Runtime::ASM::li(context->r4, 0x11);
/*80211C4C 0020EA4C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80211C50 0020EA50*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2554 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80211C54 0020EA54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80211C58 0020EA58*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80211C5C 0020EA5C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80211C60 0020EA60*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r3));
/*80211C64 0020EA64*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 7, 24, 24);
/*80211C68 0020EA68*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r3));
/*80211C6C 0020EA6C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x87c, context->r3));
/*80211C70 0020EA70*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80211C74 0020EA74*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80211C78 0020EA78*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80211C7C 0020EA7C*/ PPC::Runtime::ASM::bl(fn_80206E1C);
/*80211C80 0020EA80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80211C84 0020EA84*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80211C88 0020EA88*/ PPC::Runtime::ASM::beq(.L_80211C94);
/*80211C8C 0020EA8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80211C90 0020EA90*/ PPC::Runtime::ASM::bl(fn_8021A0E0);
RUNTIME_PPC_JUMP_LABEL(.L_80211C94, 0x80211C94) //this is a jump label
/*80211C94 0020EA94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80211C98 0020EA98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80211C9C 0020EA9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80211CA0 0020EAA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80211CA4 0020EAA4*/ PPC::Runtime::ASM::blr();
}