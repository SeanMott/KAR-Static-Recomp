//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802889EC.hpp"



void fn_803A0910(PPC::Runtime::GCContext* context)
{
/*803A0910 0039D710*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803A0914 0039D714*/ PPC::Runtime::ASM::mflr(context->r0);
/*803A0918 0039D718*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803A091C 0039D71C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803A0920 0039D720*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803A0924 0039D724*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F6820 @ Get_MemoryOffset_HighBit);
/*803A0928 0039D728*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803A092C 0039D72C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, lbl_804F6820 @ Get_MemoryOffset_LowBit);
/*803A0930 0039D730*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803A0934 0039D734*/ PPC::Runtime::ASM::lhz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*803A0938 0039D738*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x20);
/*803A093C 0039D73C*/ PPC::Runtime::ASM::blt(.L_803A095C);
/*803A0940 0039D740*/ PPC::Runtime::ASM::lis(context->r3, __files @ Get_MemoryOffset_HighBit);
/*803A0944 0039D744*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x230);
/*803A0948 0039D748*/ PPC::Runtime::ASM::addi(context->r3, context->r3, __files @ Get_MemoryOffset_LowBit);
/*803A094C 0039D74C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xa0);
/*803A0950 0039D750*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803A0954 0039D754*/ PPC::Runtime::ASM::bl(fn_fprintf);
/*803A0958 0039D758*/ PPC::Runtime::ASM::bl(fn_abort);
RUNTIME_PPC_JUMP_LABEL(.L_803A095C, 0x803A095C) //this is a jump label
/*803A095C 0039D75C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803A0960 0039D760*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*803A0964 0039D764*/ PPC::Runtime::ASM::slw(context->r4, context->r0, context->r29);
/*803A0968 0039D768*/ PPC::Runtime::ASM::and.(context->r0, context->r3, context->r4);
/*803A096C 0039D76C*/ PPC::Runtime::ASM::beq(.L_803A097C);
/*803A0970 0039D770*/ PPC::Runtime::ASM::andc(context->r0, context->r3, context->r4);
/*803A0974 0039D774*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*803A0978 0039D778*/ PPC::Runtime::ASM::b(.L_803A0984);
RUNTIME_PPC_JUMP_LABEL(.L_803A097C, 0x803A097C) //this is a jump label
/*803A097C 0039D77C*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r4);
/*803A0980 0039D780*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_803A0984, 0x803A0984) //this is a jump label
/*803A0984 0039D784*/ PPC::Runtime::ASM::lhz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*803A0988 0039D788*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x20);
/*803A098C 0039D78C*/ PPC::Runtime::ASM::blt(.L_803A09AC);
/*803A0990 0039D790*/ PPC::Runtime::ASM::lis(context->r3, __files @ Get_MemoryOffset_HighBit);
/*803A0994 0039D794*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x254);
/*803A0998 0039D798*/ PPC::Runtime::ASM::addi(context->r3, context->r3, __files @ Get_MemoryOffset_LowBit);
/*803A099C 0039D79C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xa0);
/*803A09A0 0039D7A0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803A09A4 0039D7A4*/ PPC::Runtime::ASM::bl(fn_fprintf);
/*803A09A8 0039D7A8*/ PPC::Runtime::ASM::bl(fn_abort);
RUNTIME_PPC_JUMP_LABEL(.L_803A09AC, 0x803A09AC) //this is a jump label
/*803A09AC 0039D7AC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803A09B0 0039D7B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*803A09B4 0039D7B4*/ PPC::Runtime::ASM::slw(context->r0, context->r0, context->r29);
/*803A09B8 0039D7B8*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x148);
/*803A09BC 0039D7BC*/ PPC::Runtime::ASM::and.(context->r0, context->r3, context->r0);
/*803A09C0 0039D7C0*/ PPC::Runtime::ASM::beq(.L_803A09C8);
/*803A09C4 0039D7C4*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x278);
RUNTIME_PPC_JUMP_LABEL(.L_803A09C8, 0x803A09C8) //this is a jump label
/*803A09C8 0039D7C8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803A09CC 0039D7CC*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*803A09D0 0039D7D0*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*803A09D4 0039D7D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r31));
/*803A09D8 0039D7D8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*803A09DC 0039D7DC*/ PPC::Runtime::ASM::add(context->r29, context->r3, context->r0);
/*803A09E0 0039D7E0*/ PPC::Runtime::ASM::beq(.L_803A0A10);
/*803A09E4 0039D7E4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803A09E8 0039D7E8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803A09EC 0039D7EC*/ PPC::Runtime::ASM::li(context->r5, lbl_805DC498 @ Get_MemoryOffset_SDA21);
/*803A09F0 0039D7F0*/ PPC::Runtime::ASM::li(context->r6, lbl_805DC490 @ Get_MemoryOffset_SDA21);
/*803A09F4 0039D7F4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803A09F8 0039D7F8*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*803A09FC 0039D7FC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*803A0A00 0039D800*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803A0A04 0039D804*/ PPC::Runtime::ASM::bl(fn_802889EC);
/*803A0A08 0039D808*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*803A0A0C 0039D80C*/ PPC::Runtime::ASM::b(.L_803A0A14);
RUNTIME_PPC_JUMP_LABEL(.L_803A0A10, 0x803A0A10) //this is a jump label
/*803A0A10 0039D810*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803A0A14, 0x803A0A14) //this is a jump label
/*803A0A14 0039D814*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*803A0A18 0039D818*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803A0A1C 0039D81C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803A0A20 0039D820*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803A0A24 0039D824*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803A0A28 0039D828*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803A0A2C 0039D82C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803A0A30 0039D830*/ PPC::Runtime::ASM::blr();
}