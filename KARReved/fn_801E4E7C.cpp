//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801E4E7C(PPC::Runtime::GCContext* context)
{
/*801E4E7C 001E1C7C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x384, context->r3));
/*801E4E80 001E1C80*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b78, context->r3));
/*801E4E84 001E1C84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b54, context->r3));
/*801E4E88 001E1C88*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f2, context->f0);
/*801E4E8C 001E1C8C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b60, context->r3));
/*801E4E90 001E1C90*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b7c, context->r3));
/*801E4E94 001E1C94*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b58, context->r3));
/*801E4E98 001E1C98*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f2, context->f0);
/*801E4E9C 001E1C9C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b64, context->r3));
/*801E4EA0 001E1CA0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b80, context->r3));
/*801E4EA4 001E1CA4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b5c, context->r3));
/*801E4EA8 001E1CA8*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f2, context->f0);
/*801E4EAC 001E1CAC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b68, context->r3));
/*801E4EB0 001E1CB0*/ PPC::Runtime::ASM::blr();
}