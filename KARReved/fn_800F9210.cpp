//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F4B20.hpp"
#include "fn_800F9188.hpp"
#include "fn_800F92A0.hpp"



void fn_800F9210(PPC::Runtime::GCContext* context)
{
/*800F9210 000F6010*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F9214 000F6014*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9218 000F6018*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800F921C 000F601C*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*800F9220 000F6020*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9224 000F6024*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F9228 000F6028*/ PPC::Runtime::ASM::bl(fn_800F4B20);
/*800F922C 000F602C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F9230 000F6030*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9234 000F6034*/ PPC::Runtime::ASM::bl(fn_800F9188);
/*800F9238 000F6038*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F923C 000F603C*/ PPC::Runtime::ASM::bl(fn_800F92A0);
/*800F9240 000F6040*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9244 000F6044*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9248 000F6048*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F924C 000F604C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9250 000F6050*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F9254 000F6054*/ PPC::Runtime::ASM::blr();
}