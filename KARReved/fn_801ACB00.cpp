//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A0044.hpp"
#include "fn_startCharge.hpp"
#include "fn_ground_chargeAnimation.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_groundSpin2?.hpp"
#include "fn_doQuickSpin.hpp"



void fn_801ACB00(PPC::Runtime::GCContext* context)
{
/*801ACB00 001A9900*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ACB04 001A9904*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ACB08 001A9908*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ACB0C 001A990C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ACB10 001A9910*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801ACB14 001A9914*/ PPC::Runtime::ASM::bl(fn_801A0044);
/*801ACB18 001A9918*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACB1C 001A991C*/ PPC::Runtime::ASM::bl(fn_startCharge);
/*801ACB20 001A9920*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ACB24 001A9924*/ PPC::Runtime::ASM::bne(.L_801ACB5C);
/*801ACB28 001A9928*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACB2C 001A992C*/ PPC::Runtime::ASM::bl(fn_ground_chargeAnimation);
/*801ACB30 001A9930*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ACB34 001A9934*/ PPC::Runtime::ASM::bne(.L_801ACB5C);
/*801ACB38 001A9938*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACB3C 001A993C*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801ACB40 001A9940*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACB44 001A9944*/ PPC::Runtime::ASM::bl(fn_groundSpin2?);
/*801ACB48 001A9948*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ACB4C 001A994C*/ PPC::Runtime::ASM::bne(.L_801ACB5C);
/*801ACB50 001A9950*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACB54 001A9954*/ PPC::Runtime::ASM::bl(fn_doQuickSpin);
/*801ACB58 001A9958*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801ACB5C, 0x801ACB5C) //this is a jump label
/*801ACB5C 001A995C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ACB60 001A9960*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ACB64 001A9964*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ACB68 001A9968*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ACB6C 001A996C*/ PPC::Runtime::ASM::blr();
}