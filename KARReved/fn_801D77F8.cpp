//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___flush_callback_Fv_zdOptionUse3.hpp"
#include "fn_80189D34.hpp"
#include "fn_8018A188.hpp"



void fn_801D77F8(PPC::Runtime::GCContext* context)
{
/*801D77F8 001D45F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D77FC 001D45FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D7800 001D4600*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7804 001D4604*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7808 001D4608*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D780C 001D460C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801D7810 001D4610*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r3));
/*801D7814 001D4614*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801D7818 001D4618*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x258, context->r3));
/*801D781C 001D461C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x258);
/*801D7820 001D4620*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D7824 001D4624*/ PPC::Runtime::ASM::beq(.L_801D7844);
/*801D7828 001D4628*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D782C 001D462C*/ PPC::Runtime::ASM::bl(fn___flush_callback_Fv_zdOptionUse3);
/*801D7830 001D4630*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7834 001D4634*/ PPC::Runtime::ASM::bl(fn_80189D34);
/*801D7838 001D4638*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x310, context->r30));
/*801D783C 001D463C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7840 001D4640*/ PPC::Runtime::ASM::bl(fn_8018A188);
RUNTIME_PPC_JUMP_LABEL(.L_801D7844, 0x801D7844) //this is a jump label
/*801D7844 001D4644*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7848 001D4648*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D784C 001D464C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7850 001D4650*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D7854 001D4654*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D7858 001D4658*/ PPC::Runtime::ASM::blr();
}