//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_80138BA4.hpp"
#include "fn_8015A0E8.hpp"



void fn_8015A34C(PPC::Runtime::GCContext* context)
{
/*8015A34C 0015714C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015A350 00157150*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015A354 00157154*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015A358 00157158*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015A35C 0015715C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015A360 00157160*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015A364 00157164*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015A368 00157168*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015A36C 0015716C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8015A370 00157170*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8015A374 00157174*/ PPC::Runtime::ASM::mr(context->r28, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_8015A378, 0x8015A378) //this is a jump label
/*8015A378 00157178*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*8015A37C 0015717C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x24);
/*8015A380 00157180*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8015A384 00157184*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*8015A388 00157188*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*8015A38C 0015718C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x30);
/*8015A390 00157190*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8015A394 00157194*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*8015A398 00157198*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*8015A39C 0015719C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x38);
/*8015A3A0 001571A0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4);
/*8015A3A4 001571A4*/ PPC::Runtime::ASM::blt(.L_8015A378);
/*8015A3A8 001571A8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8015A3AC 001571AC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8015A3B0 001571B0*/ PPC::Runtime::ASM::mr(context->r30, context->r28);
/*8015A3B4 001571B4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8015A3B8 001571B8*/ PPC::Runtime::ASM::li(context->r31, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8015A3BC, 0x8015A3BC) //this is a jump label
/*8015A3BC 001571BC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8015A3C0 001571C0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*8015A3C4 001571C4*/ PPC::Runtime::ASM::bne(.L_8015A3FC);
/*8015A3C8 001571C8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r30));
/*8015A3CC 001571CC*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8015A3D0 001571D0*/ PPC::Runtime::ASM::ble(.L_8015A3FC);
/*8015A3D4 001571D4*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*8015A3D8 001571D8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r30));
/*8015A3DC 001571DC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r30));
/*8015A3E0 001571E0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8015A3E4 001571E4*/ PPC::Runtime::ASM::bgt(.L_8015A3FC);
/*8015A3E8 001571E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*8015A3EC 001571EC*/ PPC::Runtime::ASM::li(context->r4, 0x24);
/*8015A3F0 001571F0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0858 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8015A3F4 001571F4*/ PPC::Runtime::ASM::bl(fn_80138BA4);
/*8015A3F8 001571F8*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015A3FC, 0x8015A3FC) //this is a jump label
/*8015A3FC 001571FC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8015A400 00157200*/ PPC::Runtime::ASM::extsb(context->r4, context->r29);
/*8015A404 00157204*/ PPC::Runtime::ASM::bl(fn_8015A0E8);
/*8015A408 00157208*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015A40C 0015720C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x38);
/*8015A410 00157210*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015A414 00157214*/ PPC::Runtime::ASM::blt(.L_8015A3BC);
/*8015A418 00157218*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015A41C 0015721C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015A420 00157220*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015A424 00157224*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015A428 00157228*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015A42C 0015722C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015A430 00157230*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015A434 00157234*/ PPC::Runtime::ASM::blr();
}