//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_800547E0.hpp"
#include "fn_8011CA98.hpp"



void fn_8011C760(PPC::Runtime::GCContext* context)
{
/*8011C760 00119560*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011C764 00119564*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011C768 00119568*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011C76C 0011956C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011C770 00119570*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8011C774 00119574*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8011C778 00119578*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011C77C 0011957C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*8011C780 00119580*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8011C784 00119584*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8011C788 00119588*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8011C78C 0011958C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8011C790 00119590*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8011C794 00119594*/ PPC::Runtime::ASM::bne(.L_8011C7B8);
/*8011C798 00119598*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8011C79C 0011959C*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*8011C7A0 001195A0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8011C7A4 001195A4*/ PPC::Runtime::ASM::bne(.L_8011C7B8);
/*8011C7A8 001195A8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8011C7AC 001195AC*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 2, 28);
/*8011C7B0 001195B0*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8011C7B4 001195B4*/ PPC::Runtime::ASM::bl(fn_8011CA98);
RUNTIME_PPC_JUMP_LABEL(.L_8011C7B8, 0x8011C7B8) //this is a jump label
/*8011C7B8 001195B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011C7BC 001195BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011C7C0 001195C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8011C7C4 001195C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011C7C8 001195C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011C7CC 001195CC*/ PPC::Runtime::ASM::blr();
}