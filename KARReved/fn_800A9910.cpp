//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007D440.hpp"
#include "fn_800EE964.hpp"



void fn_800A9910(PPC::Runtime::GCContext* context)
{
/*800A9910 000A6710*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800A9914 000A6714*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A9918 000A6718*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A991C 000A671C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A9920 000A6720*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A9924 000A6724*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x725, context->r31));
/* 800A9928 000A6728  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800A992C 000A672C*/ PPC::Runtime::ASM::beq(.L_800A996C);
/*800A9930 000A6730*/ PPC::Runtime::ASM::bl(fn_8007D440);
/*800A9934 000A6734*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 26, 26);
/*800A9938 000A6738*/ PPC::Runtime::ASM::beq(.L_800A996C);
/*800A993C 000A673C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9940 000A6740*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9944 000A6744*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9948 000A6748*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f3c, context->r31));
/*800A994C 000A674C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*800A9950 000A6750*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f3c, context->r31));
/*800A9954 000A6754*/ PPC::Runtime::ASM::bl(fn_800EE964);
/*800A9958 000A6758*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f3c, context->r31));
/*800A995C 000A675C*/ PPC::Runtime::ASM::cmpw(context->r0, context->r3);
/*800A9960 000A6760*/ PPC::Runtime::ASM::blt(.L_800A996C);
/*800A9964 000A6764*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A9968 000A6768*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f3c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800A996C, 0x800A996C) //this is a jump label
/*800A996C 000A676C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9970 000A6770*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A9974 000A6774*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A9978 000A6778*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800A997C 000A677C*/ PPC::Runtime::ASM::blr();
}