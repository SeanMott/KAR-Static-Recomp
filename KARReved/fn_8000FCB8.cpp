//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000948C.hpp"



void fn_8000FCB8(PPC::Runtime::GCContext* context)
{
/*8000FCB8 0000CAB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8000FCBC 0000CABC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000FCC0 0000CAC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000FCC4 0000CAC4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8000FCC8 0000CAC8*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*8000FCCC 0000CACC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8000FCD0 0000CAD0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8000FCD4 0000CAD4*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8000FCD8 0000CAD8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000FCDC 0000CADC*/ PPC::Runtime::ASM::lwz(context->r27, STRUCT_BYTE4_COUNT_1805DD570 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000FCE0 0000CAE0*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8000FCE4 0000CAE4*/ PPC::Runtime::ASM::li(context->r26, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8000FCE8, 0x8000FCE8) //this is a jump label
/*8000FCE8 0000CAE8*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*8000FCEC 0000CAEC*/ PPC::Runtime::ASM::bl(fn_8000948C);
/*8000FCF0 0000CAF0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8000FCF4 0000CAF4*/ PPC::Runtime::ASM::beq(.L_8000FD04);
/*8000FCF8 0000CAF8*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
/*8000FCFC 0000CAFC*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x4);
/*8000FD00 0000CB00*/ PPC::Runtime::ASM::blt(.L_8000FCE8);
RUNTIME_PPC_JUMP_LABEL(.L_8000FD04, 0x8000FD04) //this is a jump label
/*8000FD04 0000CB04*/ PPC::Runtime::ASM::slwi(context->r0, context->r26, 2);
/*8000FD08 0000CB08*/ PPC::Runtime::ASM::lis(context->r3, 0x8889);
/*8000FD0C 0000CB0C*/ PPC::Runtime::ASM::add(context->r4, context->r27, context->r0);
/*8000FD10 0000CB10*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x833, context->r28));
/*8000FD14 0000CB14*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r4));
/*8000FD18 0000CB18*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x7777);
/*8000FD1C 0000CB1C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x834, context->r28));
/* 8000FD20 0000CB20  7C 63 40 96 */ mulhw context->r3 , context->r3 , context->r8
/*8000FD24 0000CB24*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r8);
/*8000FD28 0000CB28*/ PPC::Runtime::ASM::srawi(context->r6, context->r3, 5);
/*8000FD2C 0000CB2C*/ PPC::Runtime::ASM::srawi(context->r3, context->r3, 5);
/*8000FD30 0000CB30*/ PPC::Runtime::ASM::srwi(context->r4, context->r3, 31);
/*8000FD34 0000CB34*/ PPC::Runtime::ASM::srwi(context->r7, context->r6, 31);
/*8000FD38 0000CB38*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*8000FD3C 0000CB3C*/ PPC::Runtime::ASM::mulli(context->r4, context->r3, 0x3c);
/*8000FD40 0000CB40*/ PPC::Runtime::ASM::add(context->r3, context->r6, context->r7);
/*8000FD44 0000CB44*/ PPC::Runtime::ASM::subf(context->r3, context->r3, context->r5);
/*8000FD48 0000CB48*/ PPC::Runtime::ASM::subf(context->r4, context->r4, context->r8);
/*8000FD4C 0000CB4C*/ PPC::Runtime::ASM::subf.(context->r9, context->r4, context->r0);
/*8000FD50 0000CB50*/ PPC::Runtime::ASM::bge(.L_8000FD5C);
/*8000FD54 0000CB54*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x1);
/*8000FD58 0000CB58*/ PPC::Runtime::ASM::addi(context->r9, context->r9, 0x3c);
RUNTIME_PPC_JUMP_LABEL(.L_8000FD5C, 0x8000FD5C) //this is a jump label
/*8000FD5C 0000CB5C*/ PPC::Runtime::ASM::mulli(context->r5, context->r3, 0x3c);
/*8000FD60 0000CB60*/ PPC::Runtime::ASM::lis(context->r4, 0x5);
/*8000FD64 0000CB64*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x7e40);
/*8000FD68 0000CB68*/ PPC::Runtime::ASM::add(context->r4, context->r9, context->r5);
/*8000FD6C 0000CB6C*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*8000FD70 0000CB70*/ PPC::Runtime::ASM::blt(.L_8000FD8C);
/*8000FD74 0000CB74*/ PPC::Runtime::ASM::li(context->r3, 0x63);
/*8000FD78 0000CB78*/ PPC::Runtime::ASM::li(context->r0, 0x3b);
/*8000FD7C 0000CB7C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8000FD80 0000CB80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8000FD84 0000CB84*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8000FD88 0000CB88*/ PPC::Runtime::ASM::b(.L_8000FE1C);
RUNTIME_PPC_JUMP_LABEL(.L_8000FD8C, 0x8000FD8C) //this is a jump label
/*8000FD8C 0000CB8C*/ PPC::Runtime::ASM::lis(context->r4, 0x8889);
/*8000FD90 0000CB90*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*8000FD94 0000CB94*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x7777);
/*8000FD98 0000CB98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8000FD9C 0000CB9C  7C A4 18 96 */ mulhw context->r5 , context->r4 , context->r3
/*8000FDA0 0000CBA0*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805DE788 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000FDA4 0000CBA4*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DE780 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000FDA8 0000CBA8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DE784 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/* 8000FDAC 0000CBAC  7C 04 48 96 */ mulhw context->r0 , context->r4 , context->r9
/*8000FDB0 0000CBB0*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r3);
/*8000FDB4 0000CBB4*/ PPC::Runtime::ASM::srawi(context->r7, context->r4, 5);
/*8000FDB8 0000CBB8*/ PPC::Runtime::ASM::srawi(context->r5, context->r4, 5);
/*8000FDBC 0000CBBC*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r9);
/*8000FDC0 0000CBC0*/ PPC::Runtime::ASM::srwi(context->r8, context->r7, 31);
/*8000FDC4 0000CBC4*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 5);
/*8000FDC8 0000CBC8*/ PPC::Runtime::ASM::srwi(context->r6, context->r5, 31);
/*8000FDCC 0000CBCC*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8000FDD0 0000CBD0*/ PPC::Runtime::ASM::add(context->r7, context->r7, context->r8);
/*8000FDD4 0000CBD4*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8000FDD8 0000CBD8*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r6);
/*8000FDDC 0000CBDC*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3c);
/*8000FDE0 0000CBE0*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8000FDE4 0000CBE4*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r9);
/*8000FDE8 0000CBE8*/ PPC::Runtime::ASM::xoris(context->r0, context->r0, 0x8000);
/*8000FDEC 0000CBEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000FDF0 0000CBF0*/ PPC::Runtime::ASM::mulli(context->r0, context->r4, 0x3c);
/*8000FDF4 0000CBF4*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000FDF8 0000CBF8*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*8000FDFC 0000CBFC*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f2);
/*8000FE00 0000CC00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8000FE04 0000CC04*/ PPC::Runtime::ASM::fmuls(context->f1, context->f3, context->f1);
/*8000FE08 0000CC08*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f0);
/*8000FE0C 0000CC0C*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f0);
/*8000FE10 0000CC10*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8000FE14 0000CC14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000FE18 0000CC18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8000FE1C, 0x8000FE1C) //this is a jump label
/*8000FE1C 0000CC1C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8000FE20 0000CC20*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*8000FE24 0000CC24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000FE28 0000CC28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000FE2C 0000CC2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8000FE30 0000CC30*/ PPC::Runtime::ASM::blr();
}