//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_getTrialFlag.hpp"
#include "fn_8000AD48.hpp"
#include "fn_800098C0.hpp"
#include "fn_80127F54.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80124E98.hpp"



void fn_80114010(PPC::Runtime::GCContext* context)
{
/*80114010 00110E10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80114014 00110E14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80114018 00110E18*/ PPC::Runtime::ASM::lis(context->r4, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*8011401C 00110E1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80114020 00110E20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80114024 00110E24*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_805578B8 @ Get_MemoryOffset_LowBit);
/*80114028 00110E28*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011402C 00110E2C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80114030 00110E30*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80114034 00110E34*/ PPC::Runtime::ASM::bl(fn_getTrialFlag);
/*80114038 00110E38*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8011403C 00110E3C*/ PPC::Runtime::ASM::bne(.L_8011404C);
/*80114040 00110E40*/ PPC::Runtime::ASM::bl(fn_8000AD48);
/*80114044 00110E44*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80114048 00110E48*/ PPC::Runtime::ASM::beq(.L_801140C8);
RUNTIME_PPC_JUMP_LABEL(.L_8011404C, 0x8011404C) //this is a jump label
/*8011404C 00110E4C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80114050, 0x80114050) //this is a jump label
/*80114050 00110E50*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80114054 00110E54*/ PPC::Runtime::ASM::bl(fn_800098C0);
/*80114058 00110E58*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8011405C 00110E5C*/ PPC::Runtime::ASM::beq(.L_80114080);
/*80114060 00110E60*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x1);
/*80114064 00110E64*/ PPC::Runtime::ASM::lbzx(context->r3, context->r31, context->r0);
/*80114068 00110E68*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*8011406C 00110E6C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80114070 00110E70*/ PPC::Runtime::ASM::beq(.L_80114080);
/*80114074 00110E74*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80114078 00110E78*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*8011407C 00110E7C*/ PPC::Runtime::ASM::bl(fn_80127F54);
RUNTIME_PPC_JUMP_LABEL(.L_80114080, 0x80114080) //this is a jump label
/*80114080 00110E80*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80114084 00110E84*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x4);
/*80114088 00110E88*/ PPC::Runtime::ASM::blt(.L_80114050);
/*8011408C 00110E8C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80114090 00110E90*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80114094 00110E94*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80114098 00110E98*/ PPC::Runtime::ASM::ble(.L_801140BC);
/*8011409C 00110E9C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801140A0 00110EA0*/ PPC::Runtime::ASM::beq(.L_801140BC);
/*801140A4 00110EA4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*801140A8 00110EA8*/ PPC::Runtime::ASM::bne(.L_801140C8);
/*801140AC 00110EAC*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*801140B0 00110EB0*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*801140B4 00110EB4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*801140B8 00110EB8*/ PPC::Runtime::ASM::bne(.L_801140C8);
RUNTIME_PPC_JUMP_LABEL(.L_801140BC, 0x801140BC) //this is a jump label
/*801140BC 00110EBC*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*801140C0 00110EC0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801140C4 00110EC4*/ PPC::Runtime::ASM::bl(fn_80124E98);
RUNTIME_PPC_JUMP_LABEL(.L_801140C8, 0x801140C8) //this is a jump label
/*801140C8 00110EC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801140CC 00110ECC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801140D0 00110ED0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801140D4 00110ED4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801140D8 00110ED8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801140DC 00110EDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801140E0 00110EE0*/ PPC::Runtime::ASM::blr();
}