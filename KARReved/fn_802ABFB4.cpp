//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802ABFB4(PPC::Runtime::GCContext* context)
{
/*802ABFB4 002A8DB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802ABFB8 002A8DB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802ABFBC 002A8DBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802ABFC0 002A8DC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802ABFC4 002A8DC4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802ABFC8 002A8DC8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802ABFCC 002A8DCC  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802ABFD0 002A8DD0*/ PPC::Runtime::ASM::beq(.L_802AC084);
/*802ABFD4 002A8DD4*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C09A4 @ Get_MemoryOffset_HighBit);
/*802ABFD8 002A8DD8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802ABFDC 002A8DDC*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C09A4 @ Get_MemoryOffset_LowBit);
/*802ABFE0 002A8DE0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABFE4 002A8DE4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802ABFE8 002A8DE8*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802ABFEC 002A8DEC*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802ABFF0 002A8DF0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802ABFF4 002A8DF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802ABFF8 002A8DF8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABFFC 002A8DFC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802AC000 002A8E00*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC004 002A8E04*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC008 002A8E08*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802AC00C 002A8E0C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC010 002A8E10*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC014 002A8E14*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802AC018 002A8E18*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC01C 002A8E1C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC020 002A8E20*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802AC024 002A8E24*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC028 002A8E28*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC02C 002A8E2C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802AC030 002A8E30*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC034 002A8E34*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC038 002A8E38*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802AC03C 002A8E3C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC040 002A8E40*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC044 002A8E44*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802AC048 002A8E48*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC04C 002A8E4C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC050 002A8E50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802AC054 002A8E54*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC058 002A8E58*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC05C 002A8E5C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802AC060 002A8E60*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC064 002A8E64*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC068 002A8E68*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC06C 002A8E6C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AC070 002A8E70*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802AC074 002A8E74*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802AC078 002A8E78*/ PPC::Runtime::ASM::ble(.L_802AC084);
/*802AC07C 002A8E7C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC080 002A8E80*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802AC084, 0x802AC084) //this is a jump label
/*802AC084 002A8E84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AC088 002A8E88*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC08C 002A8E8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AC090 002A8E90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802AC094 002A8E94*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AC098 002A8E98*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AC09C 002A8E9C*/ PPC::Runtime::ASM::blr();
}