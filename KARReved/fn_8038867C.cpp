//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8038867C(PPC::Runtime::GCContext* context)
{
/*8038867C 0038547C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80388680 00385480*/ PPC::Runtime::ASM::mflr(context->r0);
/*80388684 00385484*/ PPC::Runtime::ASM::lis(context->r4, lbl_804F4C64 @ Get_MemoryOffset_HighBit);
/*80388688 00385488*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8038868C 0038548C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80388690 00385490*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80388694 00385494*/ PPC::Runtime::ASM::lwzu(context->r6, lbl_804F4C64 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*80388698 00385498*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8038869C 0038549C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*803886A0 003854A0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803886A4 003854A4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803886A8 003854A8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803886AC 003854AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803886B0 003854B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803886B4 003854B4*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xac);
/*803886B8 003854B8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803886BC 003854BC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803886C0 003854C0*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*803886C4 003854C4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803886C8 003854C8*/ PPC::Runtime::ASM::b(.L_803886E0);
RUNTIME_PPC_JUMP_LABEL(.L_803886CC, 0x803886CC) //this is a jump label
/*803886CC 003854CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803886D0 003854D0*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*803886D4 003854D4*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*803886D8 003854D8*/ PPC::Runtime::ASM::nop();
/*803886DC 003854DC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0xac);
RUNTIME_PPC_JUMP_LABEL(.L_803886E0, 0x803886E0) //this is a jump label
/*803886E0 003854E0*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*803886E4 003854E4*/ PPC::Runtime::ASM::bne(.L_803886CC);
/*803886E8 003854E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803886EC 003854EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803886F0 003854F0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803886F4 003854F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803886F8 003854F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803886FC 003854FC*/ PPC::Runtime::ASM::blr();
}