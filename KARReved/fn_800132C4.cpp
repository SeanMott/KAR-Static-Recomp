//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_800132C4(PPC::Runtime::GCContext* context)
{
/*800132C4 000100C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800132C8 000100C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800132CC 000100CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800132D0 000100D0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800132D4 000100D4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800132D8 000100D8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa4, context->r3));
/*800132DC 000100DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800132E0 000100E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800132E4 000100E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800132E8 000100E8*/ PPC::Runtime::ASM::blr();
}