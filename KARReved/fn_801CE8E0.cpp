//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801CE8E0(PPC::Runtime::GCContext* context)
{
/*801CE8E0 001CB6E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CE8E4 001CB6E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CE8E8 001CB6E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CE8EC 001CB6EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CE8F0 001CB6F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r3));
/*801CE8F4 001CB6F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*801CE8F8 001CB6F8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CE8FC 001CB6FC*/ PPC::Runtime::ASM::beq(.L_801CE914);
/*801CE900 001CB700*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CE904 001CB704*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CE908 001CB708*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CE90C 001CB70C*/ PPC::Runtime::ASM::li(context->r4, 0x1f9);
/*801CE910 001CB710*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CE914, 0x801CE914) //this is a jump label
/*801CE914 001CB714*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*801CE918 001CB718*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CE91C 001CB71C*/ PPC::Runtime::ASM::beq(.L_801CE938);
/*801CE920 001CB720*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0A88 @ Get_MemoryOffset_HighBit);
/*801CE924 001CB724*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CE928 001CB728*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0A88 @ Get_MemoryOffset_LowBit);
/*801CE92C 001CB72C*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*801CE930 001CB730*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CE934 001CB734*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CE938, 0x801CE938) //this is a jump label
/*801CE938 001CB738*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r31));
/*801CE93C 001CB73C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CE940 001CB740*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*801CE944 001CB744*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CE948 001CB748*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CE94C 001CB74C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CE950 001CB750*/ PPC::Runtime::ASM::blr();
}