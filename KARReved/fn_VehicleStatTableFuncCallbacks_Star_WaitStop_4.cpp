//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CEE08.hpp"
#include "fn_801EEA10.hpp"
#include "fn_801EE804.hpp"



void fn_VehicleStatTableFuncCallbacks_Star_WaitStop_4(PPC::Runtime::GCContext* context)
{
/*801EE7B4 001EB5B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EE7B8 001EB5B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EE7BC 001EB5BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EE7C0 001EB5C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EE7C4 001EB5C4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EE7C8 001EB5C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb58, context->r3));
/*801EE7CC 001EB5CC*/ PPC::Runtime::ASM::bl(fn_800CEE08);
/*801EE7D0 001EB5D0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EE7D4 001EB5D4*/ PPC::Runtime::ASM::bne(.L_801EE7E4);
/*801EE7D8 001EB5D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE7DC 001EB5DC*/ PPC::Runtime::ASM::bl(fn_801EEA10);
/*801EE7E0 001EB5E0*/ PPC::Runtime::ASM::b(.L_801EE7F0);
RUNTIME_PPC_JUMP_LABEL(.L_801EE7E4, 0x801EE7E4) //this is a jump label
/*801EE7E4 001EB5E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE7E8 001EB5E8*/ PPC::Runtime::ASM::bl(fn_801EE804);
/*801EE7EC 001EB5EC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801EE7F0, 0x801EE7F0) //this is a jump label
/*801EE7F0 001EB5F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EE7F4 001EB5F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EE7F8 001EB5F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EE7FC 001EB5FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EE800 001EB600*/ PPC::Runtime::ASM::blr();
}