//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245ED0.hpp"



void fn_80088278(PPC::Runtime::GCContext* context)
{
/*80088278 00085078*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8008827C 0008507C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80088280 00085080*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80088284 00085084*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80088288 00085088*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008828C 0008508C*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80088290 00085090*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80088294 00085094*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80088298 00085098*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r31));
/*8008829C 0008509C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 25, 26);
/*800882A0 000850A0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r31));
/*800882A4 000850A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*800882A8 000850A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800882AC 000850AC*/ PPC::Runtime::ASM::beq(.L_800882BC);
/*800882B0 000850B0*/ PPC::Runtime::ASM::bl(fn_80245ED0);
/*800882B4 000850B4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800882B8 000850B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800882BC, 0x800882BC) //this is a jump label
/*800882BC 000850BC*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x1);
/*800882C0 000850C0*/ PPC::Runtime::ASM::bne(.L_800882DC);
/*800882C4 000850C4*/ PPC::Runtime::ASM::lis(context->r3, lbl_80552FB0 @ Get_MemoryOffset_HighBit);
/*800882C8 000850C8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800882CC 000850CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80552FB0 @ Get_MemoryOffset_LowBit);
/*800882D0 000850D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r3));
/*800882D4 000850D4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 1, 29, 30);
/*800882D8 000850D8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800882DC, 0x800882DC) //this is a jump label
/*800882DC 000850DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800882E0 000850E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800882E4 000850E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800882E8 000850E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800882EC 000850EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800882F0 000850F0*/ PPC::Runtime::ASM::blr();
}