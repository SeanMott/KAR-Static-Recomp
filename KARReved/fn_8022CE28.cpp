//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191C38.hpp"
#include "fn_801C7698.hpp"



void fn_8022CE28(PPC::Runtime::GCContext* context)
{
/*8022CE28 00229C28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022CE2C 00229C2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022CE30 00229C30*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18055A9F0 @ Get_MemoryOffset_HighBit);
/*8022CE34 00229C34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022CE38 00229C38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022CE3C 00229C3C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, STRUCT_BYTE4_COUNT_18055A9F0 @ Get_MemoryOffset_LowBit);
/*8022CE40 00229C40*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022CE44 00229C44*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8022CE48, 0x8022CE48) //this is a jump label
/*8022CE48 00229C48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8022CE4C 00229C4C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8022CE50 00229C50*/ PPC::Runtime::ASM::beq(.L_8022CE6C);
/*8022CE54 00229C54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8022CE58 00229C58*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8022CE5C 00229C5C*/ PPC::Runtime::ASM::beq(.L_8022CE6C);
/*8022CE60 00229C60*/ PPC::Runtime::ASM::bl(fn_80191C38);
/*8022CE64 00229C64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8022CE68 00229C68*/ PPC::Runtime::ASM::bl(fn_801C7698);
RUNTIME_PPC_JUMP_LABEL(.L_8022CE6C, 0x8022CE6C) //this is a jump label
/*8022CE6C 00229C6C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8022CE70 00229C70*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x90c);
/*8022CE74 00229C74*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x5);
/*8022CE78 00229C78*/ PPC::Runtime::ASM::blt(.L_8022CE48);
/*8022CE7C 00229C7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022CE80 00229C80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022CE84 00229C84*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022CE88 00229C88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022CE8C 00229C8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022CE90 00229C90*/ PPC::Runtime::ASM::blr();
}