//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A9A34.hpp"
#include "fn_800A9A34.hpp"
#include "fn_debugInitMenu.hpp"
#include "fn_800AB584.hpp"
#include "fn_800AB55C.hpp"
#include "fn_800AB534.hpp"



void fn_800A9AE4(PPC::Runtime::GCContext* context)
{
/*800A9AE4 000A68E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A9AE8 000A68E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A9AEC 000A68EC*/ PPC::Runtime::ASM::lis(context->r4, fn_800A9A34 @ Get_MemoryOffset_HighBit);
/*800A9AF0 000A68F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A9AF4 000A68F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A9AF8 000A68F8*/ PPC::Runtime::ASM::addi(context->r8, context->r4, fn_800A9A34 @ Get_MemoryOffset_LowBit);
/*800A9AFC 000A68FC*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*800A9B00 000A6900*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*800A9B04 000A6904*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A9B08 000A6908*/ PPC::Runtime::ASM::li(context->r6, 0x1e);
/*800A9B0C 000A690C*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*800A9B10 000A6910*/ PPC::Runtime::ASM::bl(fn_debugInitMenu);
/* 800A9B14 000A6914  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*800A9B18 000A6918*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9B1C 000A691C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9B20 000A6920*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f40, context->r4));
/*800A9B24 000A6924*/ PPC::Runtime::ASM::beq(.L_800A9B8C);
/*800A9B28 000A6928*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r31));
/*800A9B2C 000A692C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800A9B30 000A6930*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DF11C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A9B34 000A6934*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DF120 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A9B38 000A6938*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 28, 26);
/*800A9B3C 000A693C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9B40 000A6940*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r31));
/*800A9B44 000A6944*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A9B48 000A6948*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A9B4C 000A694C*/ PPC::Runtime::ASM::bl(fn_800AB584);
/*800A9B50 000A6950*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A9B54 000A6954*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9B58 000A6958*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800A9B5C 000A695C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A9B60 000A6960*/ PPC::Runtime::ASM::bl(fn_800AB55C);
/*800A9B64 000A6964*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF124 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A9B68 000A6968*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9B6C 000A696C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF128 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A9B70 000A6970*/ PPC::Runtime::ASM::bl(fn_800AB534);
/*800A9B74 000A6974*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r31));
/*800A9B78 000A6978*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x40);
/*800A9B7C 000A697C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r31));
/*800A9B80 000A6980*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r31));
/*800A9B84 000A6984*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x80);
/*800A9B88 000A6988*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800A9B8C, 0x800A9B8C) //this is a jump label
/*800A9B8C 000A698C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A9B90 000A6990*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A9B94 000A6994*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A9B98 000A6998*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A9B9C 000A699C*/ PPC::Runtime::ASM::blr();
}