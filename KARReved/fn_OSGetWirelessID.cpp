//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_UnlockSram.hpp"



void fn_OSGetWirelessID(PPC::Runtime::GCContext* context)
{
/*803D97C8 003D65C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D97CC 003D65CC*/ PPC::Runtime::ASM::lis(context->r4, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D97D0 003D65D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D97D4 003D65D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803D97D8 003D65D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D97DC 003D65DC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D97E0 003D65E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D97E4 003D65E4*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803D97E8 003D65E8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D97EC 003D65EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*803D97F0 003D65F0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*803D97F4 003D65F4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D97F8 003D65F8*/ PPC::Runtime::ASM::beq(.L_803D9808);
/*803D97FC 003D65FC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D9800 003D6600*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9804 003D6604*/ PPC::Runtime::ASM::b(.L_803D9818);
RUNTIME_PPC_JUMP_LABEL(.L_803D9808, 0x803D9808) //this is a jump label
/*803D9808 003D6608*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803D980C 003D660C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D9810 003D6610*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x14);
/*803D9814 003D6614*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D9818, 0x803D9818) //this is a jump label
/*803D9818 003D6618*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 1);
/*803D981C 003D661C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*803D9820 003D6620*/ PPC::Runtime::ASM::lhz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*803D9824 003D6624*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9828 003D6628*/ PPC::Runtime::ASM::li(context->r4, 0x14);
/*803D982C 003D662C*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
/*803D9830 003D6630*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803D9834 003D6634*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D9838 003D6638*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D983C 003D663C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D9840 003D6640*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803D9844 003D6644*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D9848 003D6648*/ PPC::Runtime::ASM::blr();
}