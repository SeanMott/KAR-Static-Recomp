//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80292894(PPC::Runtime::GCContext* context)
{
/*80292894 0028F694*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80292898 0028F698*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029289C 0028F69C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802928A0 0028F6A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802928A4 0028F6A4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802928A8 0028F6A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802928AC 0028F6AC  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802928B0 0028F6B0*/ PPC::Runtime::ASM::beq(.L_80292910);
/*802928B4 0028F6B4*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BD6FC @ Get_MemoryOffset_HighBit);
/*802928B8 0028F6B8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BD6FC @ Get_MemoryOffset_LowBit);
/*802928BC 0028F6BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802928C0 0028F6C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*802928C4 0028F6C4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*802928C8 0028F6C8*/ PPC::Runtime::ASM::beq(.L_802928D8);
/*802928CC 0028F6CC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjUnref);
/*802928D0 0028F6D0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802928D4 0028F6D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_802928D8, 0x802928D8) //this is a jump label
/*802928D8 0028F6D8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*802928DC 0028F6DC*/ PPC::Runtime::ASM::beq(.L_80292900);
/*802928E0 0028F6E0*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BD6D4 @ Get_MemoryOffset_HighBit);
/*802928E4 0028F6E4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802928E8 0028F6E8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BD6D4 @ Get_MemoryOffset_LowBit);
/*802928EC 0028F6EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802928F0 0028F6F0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802928F4 0028F6F4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r12));
/*802928F8 0028F6F8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802928FC 0028F6FC*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_80292900, 0x80292900) //this is a jump label
/*80292900 0028F700*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80292904 0028F704*/ PPC::Runtime::ASM::ble(.L_80292910);
/*80292908 0028F708*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029290C 0028F70C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80292910, 0x80292910) //this is a jump label
/*80292910 0028F710*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80292914 0028F714*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80292918 0028F718*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029291C 0028F71C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80292920 0028F720*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80292924 0028F724*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80292928 0028F728*/ PPC::Runtime::ASM::blr();
}