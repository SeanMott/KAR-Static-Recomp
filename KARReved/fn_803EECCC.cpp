//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_803EECCC(PPC::Runtime::GCContext* context)
{
/*803EECCC 003EBACC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EECD0 003EBAD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EECD4 003EBAD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803EECD8 003EBAD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EECDC 003EBADC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EECE0 003EBAE0*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803EECE4 003EBAE4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EECE8 003EBAE8*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803EECEC 003EBAEC*/ PPC::Runtime::ASM::addi(context->r31, context->r29, 0x1a6);
/*803EECF0 003EBAF0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EECF4 003EBAF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803EECF8 003EBAF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803EECFC 003EBAFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803EED00 003EBB00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803EED04 003EBB04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*803EED08 003EBB08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803EED0C 003EBB0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EED10 003EBB10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EED14 003EBB14*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r30));
/*803EED18 003EBB18*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xa);
/*803EED1C 003EBB1C*/ PPC::Runtime::ASM::beq(.L_803EED3C);
/*803EED20 003EBB20*/ PPC::Runtime::ASM::bge(.L_803EED30);
/*803EED24 003EBB24*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EED28 003EBB28*/ PPC::Runtime::ASM::beq(.L_803EEDA0);
/*803EED2C 003EBB2C*/ PPC::Runtime::ASM::b(.L_803EEDA0);
RUNTIME_PPC_JUMP_LABEL(.L_803EED30, 0x803EED30) //this is a jump label
/*803EED30 003EBB30*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x19);
/*803EED34 003EBB34*/ PPC::Runtime::ASM::beq(.L_803EED70);
/*803EED38 003EBB38*/ PPC::Runtime::ASM::b(.L_803EEDA0);
RUNTIME_PPC_JUMP_LABEL(.L_803EED3C, 0x803EED3C) //this is a jump label
/*803EED3C 003EBB3C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EED40 003EBB40*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803EED44 003EBB44*/ PPC::Runtime::ASM::lis(context->r0, 0x800);
/*803EED48 003EBB48*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803EED4C 003EBB4C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803EED50 003EBB50*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*803EED54 003EBB54*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*803EED58 003EBB58*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*803EED5C 003EBB5C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*803EED60 003EBB60*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*803EED64 003EBB64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*803EED68 003EBB68*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*803EED6C 003EBB6C*/ PPC::Runtime::ASM::b(.L_803EEDA0);
RUNTIME_PPC_JUMP_LABEL(.L_803EED70, 0x803EED70) //this is a jump label
/*803EED70 003EBB70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EED74 003EBB74*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803EED78 003EBB78*/ PPC::Runtime::ASM::lis(context->r0, 0x100);
/*803EED7C 003EBB7C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803EED80 003EBB80*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803EED84 003EBB84*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*803EED88 003EBB88*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*803EED8C 003EBB8C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*803EED90 003EBB90*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*803EED94 003EBB94*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*803EED98 003EBB98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*803EED9C 003EBB9C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_803EEDA0, 0x803EEDA0) //this is a jump label
/*803EEDA0 003EBBA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803EEDA4 003EBBA4*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 19, 14);
/*803EEDA8 003EBBA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803EEDAC 003EBBAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803EEDB0 003EBBB0*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x2);
/*803EEDB4 003EBBB4*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1000);
/*803EEDB8 003EBBB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803EEDBC 003EBBBC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EEDC0 003EBBC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803EEDC4 003EBBC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EEDC8 003EBBC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EEDCC 003EBBCC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EEDD0 003EBBD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803EEDD4 003EBBD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EEDD8 003EBBD8*/ PPC::Runtime::ASM::blr();
}