//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CC2A4.hpp"
#include "fn_801CF854.hpp"
#include "fn_80064C18.hpp"



void fn_801F6254(PPC::Runtime::GCContext* context)
{
/*801F6254 001F3054*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801F6258 001F3058*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F625C 001F305C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F6260 001F3060*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801F6264 001F3064*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F6268 001F3068*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F626C 001F306C*/ PPC::Runtime::ASM::bl(fn_801CC2A4);
/*801F6270 001F3070*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F6274 001F3074*/ PPC::Runtime::ASM::bl(fn_801CF854);
/*801F6278 001F3078*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F627C 001F307C*/ PPC::Runtime::ASM::bne(.L_801F6290);
/*801F6280 001F3080*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801F6284 001F3084*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x738);
/*801F6288 001F3088*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*801F628C 001F308C*/ PPC::Runtime::ASM::bl(fn_80064C18);
RUNTIME_PPC_JUMP_LABEL(.L_801F6290, 0x801F6290) //this is a jump label
/*801F6290 001F3090*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801F6294 001F3094*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801F6298 001F3098*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801F629C 001F309C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r31));
/*801F62A0 001F30A0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801F62A4 001F30A4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F62A8 001F30A8*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801F62AC 001F30AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r31));
/*801F62B0 001F30B0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801F62B4 001F30B4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801F62B8 001F30B8*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801F62BC 001F30BC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r31));
/*801F62C0 001F30C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F62C4 001F30C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F62C8 001F30C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F62CC 001F30CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801F62D0 001F30D0*/ PPC::Runtime::ASM::blr();
}