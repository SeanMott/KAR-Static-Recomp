//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80194264.hpp"
#include "fn_801C3CAC.hpp"



void fn_801C3C50(PPC::Runtime::GCContext* context)
{
/*801C3C50 001C0A50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C3C54 001C0A54*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C3C58 001C0A58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3C5C 001C0A5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3C60 001C0A60*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C3C64 001C0A64*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r3));
/* 801C3C68 001C0A68  54 80 F7 FF */ extrwi. context->r0 , context->r4 , 1 , 29
/*801C3C6C 001C0A6C*/ PPC::Runtime::ASM::bne(.L_801C3C94);
/* 801C3C70 001C0A70  54 80 EF FF */ extrwi. context->r0 , context->r4 , 1 , 28
/*801C3C74 001C0A74*/ PPC::Runtime::ASM::bne(.L_801C3C94);
/*801C3C78 001C0A78*/ PPC::Runtime::ASM::bl(fn_80194264);
/*801C3C7C 001C0A7C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C3C80 001C0A80*/ PPC::Runtime::ASM::beq(.L_801C3C94);
/*801C3C84 001C0A84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3C88 001C0A88*/ PPC::Runtime::ASM::bl(fn_801C3CAC);
/*801C3C8C 001C0A8C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801C3C90 001C0A90*/ PPC::Runtime::ASM::b(.L_801C3C98);
RUNTIME_PPC_JUMP_LABEL(.L_801C3C94, 0x801C3C94) //this is a jump label
/*801C3C94 001C0A94*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801C3C98, 0x801C3C98) //this is a jump label
/*801C3C98 001C0A98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3C9C 001C0A9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3CA0 001C0AA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C3CA4 001C0AA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C3CA8 001C0AA8*/ PPC::Runtime::ASM::blr();
}