//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hwOff.hpp"



void fn_80201138(PPC::Runtime::GCContext* context)
{
/*80201138 001FDF38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020113C 001FDF3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80201140 001FDF40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201144 001FDF44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80201148 001FDF48*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8020114C 001FDF4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80201150 001FDF50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r3));
/*80201154 001FDF54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80201158 001FDF58*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 6);
/*8020115C 001FDF5C*/ PPC::Runtime::ASM::bl(fn_hwOff);
/*80201160 001FDF60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80201164 001FDF64*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*80201168 001FDF68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8020116C 001FDF6C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80201170 001FDF70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201174 001FDF74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80201178 001FDF78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020117C 001FDF7C*/ PPC::Runtime::ASM::blr();
}