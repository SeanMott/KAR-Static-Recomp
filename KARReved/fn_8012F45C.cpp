//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012F45C(PPC::Runtime::GCContext* context)
{
/*8012F45C 0012C25C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012F460 0012C260*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012F464 0012C264*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012F468 0012C268*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012F46C 0012C26C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012F470 0012C270*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012F474 0012C274*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012F478 0012C278*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xd0c);
/*8012F47C 0012C27C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8012F480 0012C280*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8012F484, 0x8012F484) //this is a jump label
/*8012F484 0012C284*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8012F488 0012C288*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012F48C 0012C28C*/ PPC::Runtime::ASM::beq(.L_8012F498);
/*8012F490 0012C290*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012F494 0012C294*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012F498, 0x8012F498) //this is a jump label
/*8012F498 0012C298*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8012F49C 0012C29C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8012F4A0 0012C2A0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8012F4A4 0012C2A4*/ PPC::Runtime::ASM::blt(.L_8012F484);
/*8012F4A8 0012C2A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012F4AC 0012C2AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012F4B0 0012C2B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012F4B4 0012C2B4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012F4B8 0012C2B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012F4BC 0012C2BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012F4C0 0012C2C0*/ PPC::Runtime::ASM::blr();
}