//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8031EA08(PPC::Runtime::GCContext* context)
{
/*8031EA08 0031B808*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8031EA0C 0031B80C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8031EA10 0031B810*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8031EA14 0031B814*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8031EA18 0031B818*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8031EA1C 0031B81C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031EA20 0031B820*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8031EA24 0031B824*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/* 8031EA28 0031B828  7C 7C 1B 79 */ mr. context->r28 , context->r3
/*8031EA2C 0031B82C*/ PPC::Runtime::ASM::beq(.L_8031EAD4);
/*8031EA30 0031B830*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E0E60 @ Get_MemoryOffset_HighBit);
/*8031EA34 0031B834*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*8031EA38 0031B838*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804E0E60 @ Get_MemoryOffset_LowBit);
/*8031EA3C 0031B83C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8031EA40 0031B840*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*8031EA44 0031B844*/ PPC::Runtime::ASM::b(.L_8031EA74);
RUNTIME_PPC_JUMP_LABEL(.L_8031EA48, 0x8031EA48) //this is a jump label
/*8031EA48 0031B848*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*8031EA4C 0031B84C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r31);
/*8031EA50 0031B850*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8031EA54 0031B854*/ PPC::Runtime::ASM::beq(.L_8031EA6C);
/*8031EA58 0031B858*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8031EA5C 0031B85C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8031EA60 0031B860*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*8031EA64 0031B864*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8031EA68 0031B868*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8031EA6C, 0x8031EA6C) //this is a jump label
/*8031EA6C 0031B86C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*8031EA70 0031B870*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8031EA74, 0x8031EA74) //this is a jump label
/*8031EA74 0031B874*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*8031EA78 0031B878*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*8031EA7C 0031B87C*/ PPC::Runtime::ASM::blt(.L_8031EA48);
/*8031EA80 0031B880*/ PPC::Runtime::ASM::addic.(context->r0, context->r28, 0x24);
/*8031EA84 0031B884*/ PPC::Runtime::ASM::beq(.L_8031EAA8);
/*8031EA88 0031B888*/ PPC::Runtime::ASM::addic.(context->r0, context->r28, 0x24);
/*8031EA8C 0031B88C*/ PPC::Runtime::ASM::beq(.L_8031EAA8);
/*8031EA90 0031B890*/ PPC::Runtime::ASM::addic.(context->r0, context->r28, 0x24);
/*8031EA94 0031B894*/ PPC::Runtime::ASM::beq(.L_8031EAA8);
/*8031EA98 0031B898*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*8031EA9C 0031B89C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8031EAA0 0031B8A0*/ PPC::Runtime::ASM::beq(.L_8031EAA8);
/*8031EAA4 0031B8A4*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8031EAA8, 0x8031EAA8) //this is a jump label
/*8031EAA8 0031B8A8*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*8031EAAC 0031B8AC*/ PPC::Runtime::ASM::beq(.L_8031EAC4);
/*8031EAB0 0031B8B0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E0E6C @ Get_MemoryOffset_HighBit);
/*8031EAB4 0031B8B4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8031EAB8 0031B8B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E0E6C @ Get_MemoryOffset_LowBit);
/*8031EABC 0031B8BC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*8031EAC0 0031B8C0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDB30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8031EAC4, 0x8031EAC4) //this is a jump label
/*8031EAC4 0031B8C4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r29);
/*8031EAC8 0031B8C8*/ PPC::Runtime::ASM::ble(.L_8031EAD4);
/*8031EACC 0031B8CC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8031EAD0 0031B8D0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8031EAD4, 0x8031EAD4) //this is a jump label
/*8031EAD4 0031B8D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8031EAD8 0031B8D8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8031EADC 0031B8DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8031EAE0 0031B8E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8031EAE4 0031B8E4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031EAE8 0031B8E8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8031EAEC 0031B8EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8031EAF0 0031B8F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8031EAF4 0031B8F4*/ PPC::Runtime::ASM::blr();
}