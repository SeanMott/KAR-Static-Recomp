//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_firecrackerLogic_PressedA.hpp"
#include "fn_801B65F8.hpp"



void fn_801B658C(PPC::Runtime::GCContext* context)
{
/*801B658C 001B338C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B6590 001B3390*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B6594 001B3394*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B6598 001B3398*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B659C 001B339C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B65A0 001B33A0*/ PPC::Runtime::ASM::bl(fn_firecrackerLogic_PressedA);
/*801B65A4 001B33A4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B65A8 001B33A8*/ PPC::Runtime::ASM::bne(.L_801B65C4);
/*801B65AC 001B33AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa28, context->r31));
/*801B65B0 001B33B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B65B4 001B33B4*/ PPC::Runtime::ASM::beq(.L_801B65C4);
/*801B65B8 001B33B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B65BC 001B33BC*/ PPC::Runtime::ASM::bl(fn_801B65F8);
/*801B65C0 001B33C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801B65C4, 0x801B65C4) //this is a jump label
/*801B65C4 001B33C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B65C8 001B33C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B65CC 001B33CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B65D0 001B33D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B65D4 001B33D4*/ PPC::Runtime::ASM::blr();
}