//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025DE50(PPC::Runtime::GCContext* context)
{
/*8025DE50 0025AC50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025DE54 0025AC54*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025DE58 0025AC58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025DE5C 0025AC5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025DE60 0025AC60*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025DE64 0025AC64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025DE68 0025AC68*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025DE6C 0025AC6C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F00 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025DE70 0025AC70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025DE74 0025AC74*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F04 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025DE78 0025AC78*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025DE7C 0025AC7C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025DE80 0025AC80*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025DE84 0025AC84*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025DE88 0025AC88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025DE8C 0025AC8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025DE90 0025AC90*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025DE94 0025AC94*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025DE98 0025AC98*/ PPC::Runtime::ASM::blr();
}