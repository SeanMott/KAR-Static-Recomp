//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "TRKInterruptHandlerEnableInterrupts.hpp"
#include "TRKRestoreExtended1Block.hpp"



void TRKSwapAndGo(PPC::Runtime::GCContext* context)
{
/*803C0344 003BD144*/ PPC::Runtime::ASM::lis(context->r3, gTRKState @ h);
/*803C0348 003BD148*/ PPC::Runtime::ASM::ori(context->r3, context->r3, gTRKState @ Get_MemoryOffset_LowBit);
/*803C034C 003BD14C*/ PPC::Runtime::ASM::stmw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803C0350 003BD150*/ PPC::Runtime::ASM::mfmsr(context->r0);
/*803C0354 003BD154*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r3));
/*803C0358 003BD158*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C035C 003BD15C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r3));
/* 803C0360 003BD160  7C 09 02 A6 */ mfctr context->r0
/*803C0364 003BD164*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/* 803C0368 003BD168  7C 01 02 A6 */ mfxer context->r0
/*803C036C 003BD16C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r3));
/* 803C0370 003BD170  7C 12 02 A6 */ mfdsisr context->r0
/*803C0374 003BD174*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r3));
/*803C0378 003BD178*/ PPC::Runtime::ASM::mfdar(context->r0);
/*803C037C 003BD17C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r3));
/*803C0380 003BD180*/ PPC::Runtime::ASM::li(context->r1, -0x7ffe);
/*803C0384 003BD184*/ PPC::Runtime::ASM::nor(context->r1, context->r1, context->r1);
/*803C0388 003BD188*/ PPC::Runtime::ASM::mfmsr(context->r3);
/*803C038C 003BD18C*/ PPC::Runtime::ASM::and(context->r3, context->r3, context->r1);
/*803C0390 003BD190*/ PPC::Runtime::ASM::mtmsr(context->r3);
/*803C0394 003BD194*/ PPC::Runtime::ASM::lis(context->r2, gTRKState @ h);
/*803C0398 003BD198*/ PPC::Runtime::ASM::ori(context->r2, context->r2, gTRKState @ Get_MemoryOffset_LowBit);
/*803C039C 003BD19C*/ PPC::Runtime::ASM::lwz(context->r2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0, context->r2));
/*803C03A0 003BD1A0*/ PPC::Runtime::ASM::lbz(context->r2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r2));
/*803C03A4 003BD1A4*/ PPC::Runtime::ASM::cmpwi(context->r2, 0x0);
/*803C03A8 003BD1A8*/ PPC::Runtime::ASM::beq(.L_803C03C0);
/*803C03AC 003BD1AC*/ PPC::Runtime::ASM::lis(context->r2, gTRKState @ h);
/*803C03B0 003BD1B0*/ PPC::Runtime::ASM::ori(context->r2, context->r2, gTRKState @ Get_MemoryOffset_LowBit);
/*803C03B4 003BD1B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C03B8 003BD1B8*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r2));
/*803C03BC 003BD1BC*/ PPC::Runtime::ASM::b(TRKInterruptHandlerEnableInterrupts);
RUNTIME_PPC_JUMP_LABEL(.L_803C03C0, 0x803C03C0) //this is a jump label
/*803C03C0 003BD1C0*/ PPC::Runtime::ASM::lis(context->r2, gTRKExceptionStatus_804F9264 @ h);
/*803C03C4 003BD1C4*/ PPC::Runtime::ASM::ori(context->r2, context->r2, gTRKExceptionStatus_804F9264 @ Get_MemoryOffset_LowBit);
/*803C03C8 003BD1C8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C03CC 003BD1CC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r2));
/*803C03D0 003BD1D0*/ PPC::Runtime::ASM::bl(TRKRestoreExtended1Block);
/*803C03D4 003BD1D4*/ PPC::Runtime::ASM::lis(context->r2, gTRKCPUState @ h);
/*803C03D8 003BD1D8*/ PPC::Runtime::ASM::ori(context->r2, context->r2, gTRKCPUState @ Get_MemoryOffset_LowBit);
/*803C03DC 003BD1DC*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r2));
/*803C03E0 003BD1E0*/ PPC::Runtime::ASM::mtsrr0(context->r27);
/*803C03E4 003BD1E4*/ PPC::Runtime::ASM::mtlr(context->r28);
/*803C03E8 003BD1E8*/ PPC::Runtime::ASM::mtcrf(255, context->r29);
/*803C03EC 003BD1EC*/ PPC::Runtime::ASM::mtctr(context->r30);
/*803C03F0 003BD1F0*/ PPC::Runtime::ASM::mtxer(context->r31);
/*803C03F4 003BD1F4*/ PPC::Runtime::ASM::lmw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r2));
/*803C03F8 003BD1F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r2));
/*803C03FC 003BD1FC*/ PPC::Runtime::ASM::lwz(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r2));
/*803C0400 003BD200*/ PPC::Runtime::ASM::lwz(context->r2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r2));
/*803C0404 003BD204*/ PPC::Runtime::ASM::rfi();
}