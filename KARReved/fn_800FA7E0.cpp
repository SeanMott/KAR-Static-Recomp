//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F784C.hpp"
#include "fn_800E9A4C.hpp"
#include "fn_800E9EA8.hpp"
#include "fn_800E9F30.hpp"



void fn_800FA7E0(PPC::Runtime::GCContext* context)
{
/*800FA7E0 000F75E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FA7E4 000F75E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FA7E8 000F75E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FA7EC 000F75EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FA7F0 000F75F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800FA7F4 000F75F4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FA7F8 000F75F8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA7FC 000F75FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FA800 000F7600*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*800FA804 000F7604*/ PPC::Runtime::ASM::bl(fn_800F784C);
/*800FA808 000F7608*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800FA80C, 0x800FA80C) //this is a jump label
/*800FA80C 000F760C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x134);
/*800FA810 000F7610*/ PPC::Runtime::ASM::bl(fn_800E9A4C);
/*800FA814 000F7614*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FA818 000F7618*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*800FA81C 000F761C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FA820 000F7620*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*800FA824 000F7624*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FA828 000F7628*/ PPC::Runtime::ASM::bl(fn_800E9EA8);
/*800FA82C 000F762C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
/*800FA830 000F7630*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800FA834 000F7634*/ PPC::Runtime::ASM::bl(fn_800E9F30);
/*800FA838 000F7638*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*800FA83C 000F763C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*800FA840 000F7640*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*800FA844 000F7644*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x14);
/*800FA848 000F7648*/ PPC::Runtime::ASM::blt(.L_800FA80C);
/*800FA84C 000F764C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FA850 000F7650*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FA854 000F7654*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FA858 000F7658*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA85C 000F765C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FA860 000F7660*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FA864 000F7664*/ PPC::Runtime::ASM::blr();
}