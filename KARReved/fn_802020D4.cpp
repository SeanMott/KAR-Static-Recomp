//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80223120.hpp"
#include "fn_8018D284.hpp"



void fn_802020D4(PPC::Runtime::GCContext* context)
{
/*802020D4 001FEED4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802020D8 001FEED8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802020DC 001FEEDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802020E0 001FEEE0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802020E4 001FEEE4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802020E8 001FEEE8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802020EC 001FEEEC*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802020F0 001FEEF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*802020F4 001FEEF4*/ PPC::Runtime::ASM::b(.L_80202110);
RUNTIME_PPC_JUMP_LABEL(.L_802020F8, 0x802020F8) //this is a jump label
/*802020F8 001FEEF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802020FC 001FEEFC*/ PPC::Runtime::ASM::bl(fn_80223120);
/*80202100 001FEF00*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80202104 001FEF04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r30));
/*80202108 001FEF08*/ PPC::Runtime::ASM::bl(fn_8018D284);
/*8020210C 001FEF0C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80202110, 0x80202110) //this is a jump label
/*80202110 001FEF10*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80202114 001FEF14*/ PPC::Runtime::ASM::bne(.L_802020F8);
/*80202118 001FEF18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020211C 001FEF1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80202120 001FEF20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80202124 001FEF24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80202128 001FEF28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020212C 001FEF2C*/ PPC::Runtime::ASM::blr();
}