//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028BE6C(PPC::Runtime::GCContext* context)
{
/*8028BE6C 00288C6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8028BE70 00288C70*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028BE74 00288C74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028BE78 00288C78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028BE7C 00288C7C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8028BE80 00288C80*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8028BE84 00288C84  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028BE88 00288C88*/ PPC::Runtime::ASM::beq(.L_8028BED0);
/*8028BE8C 00288C8C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BE46C @ Get_MemoryOffset_HighBit);
/*8028BE90 00288C90*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4);
/*8028BE94 00288C94*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BE46C @ Get_MemoryOffset_LowBit);
/*8028BE98 00288C98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028BE9C 00288C9C*/ PPC::Runtime::ASM::beq(.L_8028BEC0);
/*8028BEA0 00288CA0*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4);
/*8028BEA4 00288CA4*/ PPC::Runtime::ASM::beq(.L_8028BEC0);
/*8028BEA8 00288CA8*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4);
/*8028BEAC 00288CAC*/ PPC::Runtime::ASM::beq(.L_8028BEC0);
/*8028BEB0 00288CB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8028BEB4 00288CB4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028BEB8 00288CB8*/ PPC::Runtime::ASM::beq(.L_8028BEC0);
/*8028BEBC 00288CBC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028BEC0, 0x8028BEC0) //this is a jump label
/*8028BEC0 00288CC0*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8028BEC4 00288CC4*/ PPC::Runtime::ASM::ble(.L_8028BED0);
/*8028BEC8 00288CC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028BECC 00288CCC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028BED0, 0x8028BED0) //this is a jump label
/*8028BED0 00288CD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028BED4 00288CD4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028BED8 00288CD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028BEDC 00288CDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8028BEE0 00288CE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028BEE4 00288CE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028BEE8 00288CE8*/ PPC::Runtime::ASM::blr();
}