//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CF6D8.hpp"
#include "fn_800CF724.hpp"
#include "fn_800CF874.hpp"



void fn_800AAA9C(PPC::Runtime::GCContext* context)
{
/*800AAA9C 000A789C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800AAAA0 000A78A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AAAA4 000A78A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800AAAA8 000A78A8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800AAAAC 000A78AC*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*800AAAB0 000A78B0*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800AAAB4 000A78B4*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800AAAB8 000A78B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800AAABC 000A78BC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AAAC0 000A78C0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AAAC4 000A78C4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800AAAC8 000A78C8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_658 @ Get_MemoryOffset_HighBit);
/*800AAACC 000A78CC*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_658 @ Get_MemoryOffset_LowBit);
/*800AAAD0 000A78D0*/ PPC::Runtime::ASM::bl(fn_800CF6D8);
/*800AAAD4 000A78D4*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800AAAD8 000A78D8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x3c);
/*800AAADC 000A78DC*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*800AAAE0 000A78E0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AAAE4 000A78E4*/ PPC::Runtime::ASM::bl(OSReport);
/*800AAAE8 000A78E8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800AAAEC 000A78EC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x50);
/*800AAAF0 000A78F0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AAAF4 000A78F4*/ PPC::Runtime::ASM::bl(OSReport);
/*800AAAF8 000A78F8*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805DF14C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AAAFC 000A78FC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800AAB00 000A7900*/ PPC::Runtime::ASM::b(.L_800AAB64);
RUNTIME_PPC_JUMP_LABEL(.L_800AAB04, 0x800AAB04) //this is a jump label
/*800AAB04 000A7904*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800AAB08 000A7908*/ PPC::Runtime::ASM::b(.L_800AAB4C);
RUNTIME_PPC_JUMP_LABEL(.L_800AAB0C, 0x800AAB0C) //this is a jump label
/*800AAB0C 000A790C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800AAB10 000A7910*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800AAB14 000A7914*/ PPC::Runtime::ASM::bl(fn_800CF724);
/*800AAB18 000A7918*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*800AAB1C 000A791C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f31, context->f30);
/*800AAB20 000A7920*/ PPC::Runtime::ASM::bne(.L_800AAB28);
/*800AAB24 000A7924*/ PPC::Runtime::ASM::lfs(context->f30, STRUCT_FLOAT_COUNT_1805DF148 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800AAB28, 0x800AAB28) //this is a jump label
/*800AAB28 000A7928*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800AAB2C 000A792C*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800AAB30 000A7930*/ PPC::Runtime::ASM::bl(fn_800CF874);
/*800AAB34 000A7934*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*800AAB38 000A7938*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800AAB3C 000A793C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x5c);
/* 800AAB40 000A7940  4C C6 32 42 */ crset context->cr1eq
/*800AAB44 000A7944*/ PPC::Runtime::ASM::bl(OSReport);
/*800AAB48 000A7948*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800AAB4C, 0x800AAB4C) //this is a jump label
/*800AAB4C 000A794C*/ PPC::Runtime::ASM::cmpw(context->r29, context->r30);
/*800AAB50 000A7950*/ PPC::Runtime::ASM::blt(.L_800AAB0C);
/*800AAB54 000A7954*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5BBC @ Get_MemoryOffset_SDA21);
/*800AAB58 000A7958*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AAB5C 000A795C*/ PPC::Runtime::ASM::bl(OSReport);
/*800AAB60 000A7960*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800AAB64, 0x800AAB64) //this is a jump label
/*800AAB64 000A7964*/ PPC::Runtime::ASM::cmpw(context->r28, context->r30);
/*800AAB68 000A7968*/ PPC::Runtime::ASM::blt(.L_800AAB04);
/*800AAB6C 000A796C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*800AAB70 000A7970*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800AAB74 000A7974*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800AAB78 000A7978*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800AAB7C 000A797C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800AAB80 000A7980*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AAB84 000A7984*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AAB88 000A7988*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800AAB8C 000A798C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800AAB90 000A7990*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AAB94 000A7994*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800AAB98 000A7998*/ PPC::Runtime::ASM::blr();
}