//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_abilityTimerDecreaser.hpp"
#include "fn_abilityTimer_Ice_remove.hpp"
#include "fn_AS_LoseCopyAbility.hpp"



void fn_abilityTimer_Ice_checkIf0(PPC::Runtime::GCContext* context)
{
/*801B47A0 001B15A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B47A4 001B15A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B47A8 001B15A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B47AC 001B15AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B47B0 001B15B0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B47B4 001B15B4*/ PPC::Runtime::ASM::bl(fn_abilityTimerDecreaser);
/*801B47B8 001B15B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
/*801B47BC 001B15BC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B47C0 001B15C0*/ PPC::Runtime::ASM::bne(.L_801B47D4);
/*801B47C4 001B15C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B47C8 001B15C8*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Ice_remove);
/*801B47CC 001B15CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B47D0 001B15D0*/ PPC::Runtime::ASM::bl(fn_AS_LoseCopyAbility);
RUNTIME_PPC_JUMP_LABEL(.L_801B47D4, 0x801B47D4) //this is a jump label
/*801B47D4 001B15D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B47D8 001B15D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B47DC 001B15DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B47E0 001B15E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B47E4 001B15E4*/ PPC::Runtime::ASM::blr();
}