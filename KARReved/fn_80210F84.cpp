//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80205F60.hpp"
#include "fn_80210B68.hpp"
#include "fn_80210B68.hpp"



void fn_80210F84(PPC::Runtime::GCContext* context)
{
/*80210F84 0020DD84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80210F88 0020DD88*/ PPC::Runtime::ASM::mflr(context->r0);
/*80210F8C 0020DD8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80210F90 0020DD90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80210F94 0020DD94*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80210F98 0020DD98*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80210F9C 0020DD9C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80210FA0 0020DDA0*/ PPC::Runtime::ASM::bl(fn_80205F60);
/*80210FA4 0020DDA4*/ PPC::Runtime::ASM::lis(context->r3, fn_80210B68 @ Get_MemoryOffset_HighBit);
/*80210FA8 0020DDA8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_80210B68 @ Get_MemoryOffset_LowBit);
/*80210FAC 0020DDAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xad4, context->r29));
/*80210FB0 0020DDB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80210FB4 0020DDB4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb09, context->r29));
/*80210FB8 0020DDB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/* 80210FBC 0020DDBC  54 05 EF BF */ extrwi. context->r5 , context->r0 , 2 , 27
/*80210FC0 0020DDC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*80210FC4 0020DDC4*/ PPC::Runtime::ASM::bge(.L_80210FD0);
/*80210FC8 0020DDC8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80210FCC 0020DDCC*/ PPC::Runtime::ASM::b(.L_80210FDC);
RUNTIME_PPC_JUMP_LABEL(.L_80210FD0, 0x80210FD0) //this is a jump label
/*80210FD0 0020DDD0*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x2);
/*80210FD4 0020DDD4*/ PPC::Runtime::ASM::ble(.L_80210FDC);
/*80210FD8 0020DDD8*/ PPC::Runtime::ASM::li(context->r5, 0x2);
RUNTIME_PPC_JUMP_LABEL(.L_80210FDC, 0x80210FDC) //this is a jump label
/*80210FDC 0020DDDC*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4e, context->r29));
/*80210FE0 0020DDE0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B3020 @ Get_MemoryOffset_HighBit);
/*80210FE4 0020DDE4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804B3020 @ Get_MemoryOffset_LowBit);
/*80210FE8 0020DDE8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80210FEC 0020DDEC*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r4, 31);
/*80210FF0 0020DDF0*/ PPC::Runtime::ASM::mulli(context->r3, context->r3, 0x3);
/*80210FF4 0020DDF4*/ PPC::Runtime::ASM::add(context->r5, context->r5, context->r3);
/*80210FF8 0020DDF8*/ PPC::Runtime::ASM::slwi(context->r3, context->r5, 2);
/*80210FFC 0020DDFC*/ PPC::Runtime::ASM::add(context->r29, context->r0, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80211000, 0x80211000) //this is a jump label
/*80211000 0020DE00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80211004 0020DE04*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80211008 0020DE08*/ PPC::Runtime::ASM::bne(.L_8021101C);
/*8021100C 0020DE0C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80211010 0020DE10*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80211014 0020DE14*/ PPC::Runtime::ASM::bl(fn_HSD_DObjClearFlags);
/*80211018 0020DE18*/ PPC::Runtime::ASM::b(.L_80211028);
RUNTIME_PPC_JUMP_LABEL(.L_8021101C, 0x8021101C) //this is a jump label
/*8021101C 0020DE1C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80211020 0020DE20*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80211024 0020DE24*/ PPC::Runtime::ASM::bl(fn_HSD_DObjSetFlags);
RUNTIME_PPC_JUMP_LABEL(.L_80211028, 0x80211028) //this is a jump label
/*80211028 0020DE28*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*8021102C 0020DE2C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80211030 0020DE30*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x6);
/*80211034 0020DE34*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x18);
/*80211038 0020DE38*/ PPC::Runtime::ASM::blt(.L_80211000);
/*8021103C 0020DE3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80211040 0020DE40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80211044 0020DE44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80211048 0020DE48*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021104C 0020DE4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80211050 0020DE50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80211054 0020DE54*/ PPC::Runtime::ASM::blr();
}