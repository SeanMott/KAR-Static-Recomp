//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015F0C8(PPC::Runtime::GCContext* context)
{
/*8015F0C8 0015BEC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015F0CC 0015BECC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015F0D0 0015BED0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F0D4 0015BED4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015F0D8 0015BED8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015F0DC 0015BEDC*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015F0E0 0015BEE0*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8015F0E4 0015BEE4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015F0E8 0015BEE8*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*8015F0EC 0015BEEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f0, context->r31));
/*8015F0F0 0015BEF0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015F0F4 0015BEF4*/ PPC::Runtime::ASM::beq(.L_8015F104);
/*8015F0F8 0015BEF8*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015F0FC 0015BEFC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8015F100 0015BF00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015F104, 0x8015F104) //this is a jump label
/*8015F104 0015BF04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F108 0015BF08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015F10C 0015BF0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015F110 0015BF10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015F114 0015BF14*/ PPC::Runtime::ASM::blr();
}