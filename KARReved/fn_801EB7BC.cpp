//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DC548.hpp"
#include "fn_801EB84C.hpp"
#include "fn_801EB84C.hpp"



void fn_801EB7BC(PPC::Runtime::GCContext* context)
{
/*801EB7BC 001E85BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EB7C0 001E85C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EB7C4 001E85C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EB7C8 001E85C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EB7CC 001E85CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EB7D0 001E85D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r3));
/* 801EB7D4 001E85D4  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801EB7D8 001E85D8*/ PPC::Runtime::ASM::beq(.L_801EB834);
/*801EB7DC 001E85DC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x324);
/*801EB7E0 001E85E0*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801EB7E4 001E85E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801EB7E8 001E85E8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*801EB7EC 001E85EC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801EB7F0 001E85F0*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801EB7F4 001E85F4*/ PPC::Runtime::ASM::bne(.L_801EB828);
/*801EB7F8 001E85F8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
/* 801EB7FC 001E85FC  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801EB800 001E8600*/ PPC::Runtime::ASM::bne(.L_801EB838);
/*801EB804 001E8604*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EB808 001E8608*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801EB80C 001E860C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801EB810 001E8610*/ PPC::Runtime::ASM::bl(fn_801DC548);
/*801EB814 001E8614*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
/*801EB818 001E8618*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EB81C 001E861C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801EB820 001E8620*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
/*801EB824 001E8624*/ PPC::Runtime::ASM::b(.L_801EB838);
RUNTIME_PPC_JUMP_LABEL(.L_801EB828, 0x801EB828) //this is a jump label
/*801EB828 001E8628*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EB82C 001E862C*/ PPC::Runtime::ASM::bl(fn_801EB84C);
/*801EB830 001E8630*/ PPC::Runtime::ASM::b(.L_801EB838);
RUNTIME_PPC_JUMP_LABEL(.L_801EB834, 0x801EB834) //this is a jump label
/*801EB834 001E8634*/ PPC::Runtime::ASM::bl(fn_801EB84C);
RUNTIME_PPC_JUMP_LABEL(.L_801EB838, 0x801EB838) //this is a jump label
/*801EB838 001E8638*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EB83C 001E863C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EB840 001E8640*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EB844 001E8644*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EB848 001E8648*/ PPC::Runtime::ASM::blr();
}