//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801917D0.hpp"



void fn_80192794(PPC::Runtime::GCContext* context)
{
/*80192794 0018F594*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80192798 0018F598*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019279C 0018F59C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801927A0 0018F5A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801927A4 0018F5A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801927A8 0018F5A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r3));
/*801927AC 0018F5AC*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r3));
/*801927B0 0018F5B0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801927B4 0018F5B4*/ PPC::Runtime::ASM::extrwi(context->r31, context->r4, 1, 24);
/*801927B8 0018F5B8*/ PPC::Runtime::ASM::beq(.L_801927C4);
/*801927BC 0018F5BC*/ PPC::Runtime::ASM::bl(fn_801917D0);
/*801927C0 0018F5C0*/ PPC::Runtime::ASM::or(context->r31, context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_801927C4, 0x801927C4) //this is a jump label
/*801927C4 0018F5C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801927C8 0018F5C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801927CC 0018F5CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801927D0 0018F5D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801927D4 0018F5D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801927D8 0018F5D8*/ PPC::Runtime::ASM::blr();
}