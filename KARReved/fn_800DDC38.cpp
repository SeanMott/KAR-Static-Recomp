//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000A2A0.hpp"
#include "memcpy.hpp"
#include "fn_800DDD1C.hpp"
#include "fn_800DDD1C.hpp"
#include "fn_800DD748.hpp"



void fn_800DDC38(PPC::Runtime::GCContext* context)
{
/*800DDC38 000DAA38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800DDC3C 000DAA3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DDC40 000DAA40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDC44 000DAA44*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DDC48 000DAA48*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800DDC4C 000DAA4C*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800DDC50 000DAA50*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*800DDC54 000DAA54*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800DDC58 000DAA58*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800DDC5C 000DAA5C*/ PPC::Runtime::ASM::b(.L_800DDCE4);
RUNTIME_PPC_JUMP_LABEL(.L_800DDC60, 0x800DDC60) //this is a jump label
/*800DDC60 000DAA60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r26));
/*800DDC64 000DAA64*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r30);
/*800DDC68 000DAA68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800DDC6C 000DAA6C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1a);
/*800DDC70 000DAA70*/ PPC::Runtime::ASM::bne(.L_800DDCDC);
/*800DDC74 000DAA74*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800DDC78 000DAA78*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800DDC7C 000DAA7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DDC80 000DAA80*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800DDC84 000DAA84*/ PPC::Runtime::ASM::bne(.L_800DDCB4);
/*800DDC88 000DAA88*/ PPC::Runtime::ASM::bl(fn_8000A2A0);
/*800DDC8C 000DAA8C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800DDC90 000DAA90*/ PPC::Runtime::ASM::bne(.L_800DDCA8);
/*800DDC94 000DAA94*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_936 @ Get_MemoryOffset_HighBit);
/*800DDC98 000DAA98*/ PPC::Runtime::ASM::li(context->r4, 0x39);
/*800DDC9C 000DAA9C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_936 @ Get_MemoryOffset_LowBit);
/*800DDCA0 000DAAA0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6110 @ Get_MemoryOffset_SDA21);
/*800DDCA4 000DAAA4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DDCA8, 0x800DDCA8) //this is a jump label
/*800DDCA8 000DAAA8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800DDCAC 000DAAAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DDCB0 000DAAB0*/ PPC::Runtime::ASM::b(.L_800DDCD4);
RUNTIME_PPC_JUMP_LABEL(.L_800DDCB4, 0x800DDCB4) //this is a jump label
/*800DDCB4 000DAAB4*/ PPC::Runtime::ASM::clrlslwi(context->r3, context->r0, 16, 1);
/*800DDCB8 000DAAB8*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DDCBC 000DAABC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DDCC0 000DAAC0*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800DDCC4 000DAAC4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800DDCC8 000DAAC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DDCCC 000DAACC*/ PPC::Runtime::ASM::slwi(context->r5, context->r0, 1);
/*800DDCD0 000DAAD0*/ PPC::Runtime::ASM::bl(memcpy);
RUNTIME_PPC_JUMP_LABEL(.L_800DDCD4, 0x800DDCD4) //this is a jump label
/*800DDCD4 000DAAD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800DDCD8 000DAAD8*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800DDCDC, 0x800DDCDC) //this is a jump label
/*800DDCDC 000DAADC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x140);
/*800DDCE0 000DAAE0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DDCE4, 0x800DDCE4) //this is a jump label
/*800DDCE4 000DAAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r26));
/*800DDCE8 000DAAE8*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800DDCEC 000DAAEC*/ PPC::Runtime::ASM::blt(.L_800DDC60);
/*800DDCF0 000DAAF0*/ PPC::Runtime::ASM::lis(context->r4, fn_800DDD1C @ Get_MemoryOffset_HighBit);
/*800DDCF4 000DAAF4*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*800DDCF8 000DAAF8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_800DDD1C @ Get_MemoryOffset_LowBit);
/*800DDCFC 000DAAFC*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800DDD00 000DAB00*/ PPC::Runtime::ASM::bl(fn_800DD748);
/*800DDD04 000DAB04*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DDD08 000DAB08*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800DDD0C 000DAB0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDD10 000DAB10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DDD14 000DAB14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800DDD18 000DAB18*/ PPC::Runtime::ASM::blr();
}