//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80090984(PPC::Runtime::GCContext* context)
{
/*80090984 0008D784*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 13, 13);
/*80090988 0008D788*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DD684 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8009098C 0008D78C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80090990 0008D790*/ PPC::Runtime::ASM::beq(.L_800909C0);
/*80090994 0008D794*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_HighBit);
/*80090998 0008D798*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_LowBit);
/*8009099C 0008D79C*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96, context->r4));
/*800909A0 0008D7A0*/ PPC::Runtime::ASM::subf(context->r3, context->r5, context->r0);
/*800909A4 0008D7A4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r3);
/*800909A8 0008D7A8*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96, context->r4));
/*800909AC 0008D7AC*/ PPC::Runtime::ASM::bge(.L_800909B8);
/*800909B0 0008D7B0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800909B4 0008D7B4*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800909B8, 0x800909B8) //this is a jump label
/*800909B8 0008D7B8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800909BC 0008D7BC*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800909C0, 0x800909C0) //this is a jump label
/*800909C0 0008D7C0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 12, 12);
/*800909C4 0008D7C4*/ PPC::Runtime::ASM::beqlr();
/*800909C8 0008D7C8*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_HighBit);
/*800909CC 0008D7CC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_LowBit);
/*800909D0 0008D7D0*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96, context->r4));
/*800909D4 0008D7D4*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r5);
/*800909D8 0008D7D8*/ PPC::Runtime::ASM::extsh(context->r0, context->r3);
/*800909DC 0008D7DC*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96, context->r4));
/*800909E0 0008D7E0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2710);
/*800909E4 0008D7E4*/ PPC::Runtime::ASM::ble(.L_800909F0);
/*800909E8 0008D7E8*/ PPC::Runtime::ASM::li(context->r0, 0x2710);
/*800909EC 0008D7EC*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800909F0, 0x800909F0) //this is a jump label
/*800909F0 0008D7F0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800909F4 0008D7F4*/ PPC::Runtime::ASM::blr();
}