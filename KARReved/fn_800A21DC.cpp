//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A16A8.hpp"



void fn_800A21DC(PPC::Runtime::GCContext* context)
{
/*800A21DC 0009EFDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A21E0 0009EFE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A21E4 0009EFE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A21E8 0009EFE8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800A21EC 0009EFEC*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800A21F0 0009EFF0*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800A21F4 0009EFF4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_640 @ Get_MemoryOffset_HighBit);
/*800A21F8 0009EFF8*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800A21FC 0009EFFC*/ PPC::Runtime::ASM::mr(context->r26, context->r5);
/*800A2200 0009F000*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r27));
/*800A2204 0009F004*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_640 @ Get_MemoryOffset_LowBit);
/*800A2208 0009F008*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800A220C 0009F00C*/ PPC::Runtime::ASM::bne(.L_800A2220);
/*800A2210 0009F010*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xd8);
/*800A2214 0009F014*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x294);
/*800A2218 0009F018*/ PPC::Runtime::ASM::li(context->r4, 0x2e4);
/*800A221C 0009F01C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A2220, 0x800A2220) //this is a jump label
/*800A2220 0009F020*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r27));
/*800A2224 0009F024*/ PPC::Runtime::ASM::slwi(context->r28, context->r28, 2);
/*800A2228 0009F028*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800A222C 0009F02C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A2230 0009F030*/ PPC::Runtime::ASM::lhzx(context->r29, context->r4, context->r28);
/*800A2234 0009F034*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800A2238 0009F038*/ PPC::Runtime::ASM::blt(.L_800A224C);
/*800A223C 0009F03C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800A2240 0009F040*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800A2244 0009F044*/ PPC::Runtime::ASM::bge(.L_800A224C);
/*800A2248 0009F048*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A224C, 0x800A224C) //this is a jump label
/*800A224C 0009F04C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800A2250 0009F050*/ PPC::Runtime::ASM::bne(.L_800A2264);
/*800A2254 0009F054*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x184);
/*800A2258 0009F058*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1d4);
/*800A225C 0009F05C*/ PPC::Runtime::ASM::li(context->r4, 0xb8);
/*800A2260 0009F060*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A2264, 0x800A2264) //this is a jump label
/*800A2264 0009F064*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r27));
/*800A2268 0009F068*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800A226C 0009F06C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800A2270 0009F070*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800A2274 0009F074*/ PPC::Runtime::ASM::add(context->r8, context->r5, context->r28);
/*800A2278 0009F078*/ PPC::Runtime::ASM::lhzx(context->r5, context->r5, context->r28);
/*800A227C 0009F07C*/ PPC::Runtime::ASM::lwzx(context->r7, context->r4, context->r0);
/*800A2280 0009F080*/ PPC::Runtime::ASM::mr(context->r6, context->r26);
/*800A2284 0009F084*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r8));
/*800A2288 0009F088*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A228C 0009F08C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r7));
/*800A2290 0009F090*/ PPC::Runtime::ASM::clrlslwi(context->r0, context->r0, 16, 2);
/*800A2294 0009F094*/ PPC::Runtime::ASM::add(context->r7, context->r8, context->r0);
/*800A2298 0009F098*/ PPC::Runtime::ASM::lfsx(context->f1, context->r8, context->r0);
/*800A229C 0009F09C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*800A22A0 0009F0A0*/ PPC::Runtime::ASM::bl(fn_800A16A8);
/*800A22A4 0009F0A4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800A22A8 0009F0A8*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800A22AC 0009F0AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A22B0 0009F0B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A22B4 0009F0B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A22B8 0009F0B8*/ PPC::Runtime::ASM::blr();
}