//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E1EDC.hpp"
#include "fn_800E1E18.hpp"
#include "fn_800E1E18.hpp"



void fn_800D0470(PPC::Runtime::GCContext* context)
{
/*800D0470 000CD270*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800D0474 000CD274*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D0478 000CD278*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800D047C 000CD27C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800D0480 000CD280*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800D0484 000CD284*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D0488 000CD288*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D048C 000CD28C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D0490 000CD290*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r30));
/*800D0494 000CD294*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D0498 000CD298*/ PPC::Runtime::ASM::bne(.L_800D0630);
/*800D049C 000CD29C*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x9c);
/*800D04A0 000CD2A0*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D04A4 000CD2A4*/ PPC::Runtime::ASM::li(context->r4, 0x3b2);
/*800D04A8 000CD2A8*/ PPC::Runtime::ASM::bl(fn___assert);
/*800D04AC 000CD2AC*/ PPC::Runtime::ASM::b(.L_800D0630);
RUNTIME_PPC_JUMP_LABEL(.L_800D04B0, 0x800D04B0) //this is a jump label
/*800D04B0 000CD2B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r30));
/*800D04B4 000CD2B4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D04B8 000CD2B8*/ PPC::Runtime::ASM::bgt(.L_800D04CC);
/*800D04BC 000CD2BC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1e0);
/*800D04C0 000CD2C0*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D04C4 000CD2C4*/ PPC::Runtime::ASM::li(context->r4, 0x38c);
/*800D04C8 000CD2C8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D04CC, 0x800D04CC) //this is a jump label
/*800D04CC 000CD2CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r30));
/*800D04D0 000CD2D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D04D4 000CD2D4*/ PPC::Runtime::ASM::bgt(.L_800D04E8);
/*800D04D8 000CD2D8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1f4);
/*800D04DC 000CD2DC*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D04E0 000CD2E0*/ PPC::Runtime::ASM::li(context->r4, 0x38d);
/*800D04E4 000CD2E4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D04E8, 0x800D04E8) //this is a jump label
/*800D04E8 000CD2E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r30));
/*800D04EC 000CD2EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r30));
/*800D04F0 000CD2F0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D04F4 000CD2F4*/ PPC::Runtime::ASM::subi(context->r29, context->r3, 0x1);
/*800D04F8 000CD2F8*/ PPC::Runtime::ASM::bne(.L_800D050C);
/*800D04FC 000CD2FC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D0500 000CD300*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xe0);
/*800D0504 000CD304*/ PPC::Runtime::ASM::li(context->r4, 0xef);
/*800D0508 000CD308*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D050C, 0x800D050C) //this is a jump label
/*800D050C 000CD30C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800D0510 000CD310*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800D0514 000CD314*/ PPC::Runtime::ASM::blt(.L_800D0528);
/*800D0518 000CD318*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r30));
/*800D051C 000CD31C*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800D0520 000CD320*/ PPC::Runtime::ASM::bge(.L_800D0528);
/*800D0524 000CD324*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D0528, 0x800D0528) //this is a jump label
/*800D0528 000CD328*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800D052C 000CD32C*/ PPC::Runtime::ASM::bne(.L_800D0540);
/*800D0530 000CD330*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D0534 000CD334*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xec);
/*800D0538 000CD338*/ PPC::Runtime::ASM::li(context->r4, 0xf0);
/*800D053C 000CD33C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D0540, 0x800D0540) //this is a jump label
/*800D0540 000CD340*/ PPC::Runtime::ASM::mulli(context->r0, context->r29, 0x2c);
/*800D0544 000CD344*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r30));
/*800D0548 000CD348*/ PPC::Runtime::ASM::add(context->r28, context->r3, context->r0);
/*800D054C 000CD34C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800D0550 000CD350*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*800D0554 000CD354*/ PPC::Runtime::ASM::beq(.L_800D0568);
/*800D0558 000CD358*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x208);
/*800D055C 000CD35C*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D0560 000CD360*/ PPC::Runtime::ASM::li(context->r4, 0x392);
/*800D0564 000CD364*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D0568, 0x800D0568) //this is a jump label
/*800D0568 000CD368*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800D056C 000CD36C*/ PPC::Runtime::ASM::addi(context->r26, context->r1, 0x8);
/*800D0570 000CD370*/ PPC::Runtime::ASM::addi(context->r25, context->r1, 0x10);
/*800D0574 000CD374*/ PPC::Runtime::ASM::subi(context->r29, context->r3, 0x1);
/*800D0578 000CD378*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800D057C 000CD37C*/ PPC::Runtime::ASM::add(context->r27, context->r28, context->r0);
/*800D0580 000CD380*/ PPC::Runtime::ASM::add(context->r26, context->r26, context->r0);
/*800D0584 000CD384*/ PPC::Runtime::ASM::add(context->r25, context->r25, context->r0);
/*800D0588 000CD388*/ PPC::Runtime::ASM::b(.L_800D05B8);
RUNTIME_PPC_JUMP_LABEL(.L_800D058C, 0x800D058C) //this is a jump label
/*800D058C 000CD38C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800D0590 000CD390*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800D0594 000CD394*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800D0598 000CD398*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800D059C 000CD39C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800D05A0 000CD3A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r25));
/*800D05A4 000CD3A4*/ PPC::Runtime::ASM::bl(fn_800E1EDC);
/*800D05A8 000CD3A8*/ PPC::Runtime::ASM::subi(context->r27, context->r27, 0x4);
/*800D05AC 000CD3AC*/ PPC::Runtime::ASM::subi(context->r26, context->r26, 0x4);
/*800D05B0 000CD3B0*/ PPC::Runtime::ASM::subi(context->r25, context->r25, 0x4);
/*800D05B4 000CD3B4*/ PPC::Runtime::ASM::subi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D05B8, 0x800D05B8) //this is a jump label
/*800D05B8 000CD3B8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800D05BC 000CD3BC*/ PPC::Runtime::ASM::bge(.L_800D058C);
/*800D05C0 000CD3C0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D05C4 000CD3C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D05C8 000CD3C8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D05CC 000CD3CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D05D0 000CD3D0*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*800D05D4 000CD3D4*/ PPC::Runtime::ASM::beq(.L_800D05E8);
/*800D05D8 000CD3D8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x224);
/*800D05DC 000CD3DC*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D05E0 000CD3E0*/ PPC::Runtime::ASM::li(context->r4, 0x39b);
/*800D05E4 000CD3E4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D05E8, 0x800D05E8) //this is a jump label
/*800D05E8 000CD3E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D05EC 000CD3EC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D05F0 000CD3F0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D05F4 000CD3F4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D05F8 000CD3F8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D05FC 000CD3FC*/ PPC::Runtime::ASM::bl(fn_800E1E18);
/*800D0600 000CD400*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D0604 000CD404*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D0608 000CD408*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D060C 000CD40C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D0610 000CD410*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D0614 000CD414*/ PPC::Runtime::ASM::bl(fn_800E1E18);
/*800D0618 000CD418*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r30));
/*800D061C 000CD41C*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800D0620 000CD420*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r30));
/*800D0624 000CD424*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r30));
/*800D0628 000CD428*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800D062C 000CD42C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800D0630, 0x800D0630) //this is a jump label
/*800D0630 000CD430*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r30));
/*800D0634 000CD434*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D0638 000CD438*/ PPC::Runtime::ASM::bne(.L_800D04B0);
/*800D063C 000CD43C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800D0640 000CD440*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800D0644 000CD444*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800D0648 000CD448*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D064C 000CD44C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800D0650 000CD450*/ PPC::Runtime::ASM::blr();
}