//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80066DF8.hpp"



void fn_800A3E64(PPC::Runtime::GCContext* context)
{
/*800A3E64 000A0C64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800A3E68 000A0C68*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A3E6C 000A0C6C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_651 @ Get_MemoryOffset_HighBit);
/*800A3E70 000A0C70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A3E74 000A0C74*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_651 @ Get_MemoryOffset_LowBit);
/*800A3E78 000A0C78*/ PPC::Runtime::ASM::bl(fn_80066DF8);
/*800A3E7C 000A0C7C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A3E80 000A0C80*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*800A3E84 000A0C84*/ PPC::Runtime::ASM::addi(context->r7, context->r4, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A3E88 000A0C88*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*800A3E8C 000A0C8C*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r7));
/*800A3E90 000A0C90*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r8, 4, 27, 27);
/*800A3E94 000A0C94*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A3E98 000A0C98*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DD690 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A3E9C 000A0C9C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r5, 24);
/*800A3EA0 000A0CA0*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r7));
/*800A3EA4 000A0CA4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 3, 28, 28);
/*800A3EA8 000A0CA8*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f10, context->r7));
/*800A3EAC 000A0CAC*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f0c, context->r7));
/*800A3EB0 000A0CB0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f14, context->r7));
/*800A3EB4 000A0CB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r7));
/*800A3EB8 000A0CB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A3EBC 000A0CBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A3EC0 000A0CC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800A3EC4 000A0CC4*/ PPC::Runtime::ASM::blr();
}