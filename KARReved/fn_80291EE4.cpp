//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80291EE4(PPC::Runtime::GCContext* context)
{
/*80291EE4 0028ECE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80291EE8 0028ECE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80291EEC 0028ECEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291EF0 0028ECF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80291EF4 0028ECF4  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80291EF8 0028ECF8*/ PPC::Runtime::ASM::beq(.L_80291F1C);
/*80291EFC 0028ECFC*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BD298 @ Get_MemoryOffset_HighBit);
/*80291F00 0028ED00*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*80291F04 0028ED04*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BD298 @ Get_MemoryOffset_LowBit);
/*80291F08 0028ED08*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80291F0C 0028ED0C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80291F10 0028ED10*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDB40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80291F14 0028ED14*/ PPC::Runtime::ASM::ble(.L_80291F1C);
/*80291F18 0028ED18*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80291F1C, 0x80291F1C) //this is a jump label
/*80291F1C 0028ED1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291F20 0028ED20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80291F24 0028ED24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80291F28 0028ED28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80291F2C 0028ED2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80291F30 0028ED30*/ PPC::Runtime::ASM::blr();
}