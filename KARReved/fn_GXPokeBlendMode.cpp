//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXPokeBlendMode(PPC::Runtime::GCContext* context)
{
/*803CBF04 003C8D04*/ PPC::Runtime::ASM::lwz(context->r7, __peReg @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CBF08 003C8D08*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*803CBF0C 003C8D0C*/ PPC::Runtime::ASM::li(context->r9, 0x1);
/*803CBF10 003C8D10*/ PPC::Runtime::ASM::addi(context->r10, context->r7, 0x2);
/*803CBF14 003C8D14*/ PPC::Runtime::ASM::lhz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
/*803CBF18 003C8D18*/ PPC::Runtime::ASM::beq(.L_803CBF28);
/*803CBF1C 003C8D1C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3);
/*803CBF20 003C8D20*/ PPC::Runtime::ASM::beq(.L_803CBF28);
/*803CBF24 003C8D24*/ PPC::Runtime::ASM::li(context->r9, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803CBF28, 0x803CBF28) //this is a jump label
/*803CBF28 003C8D28*/ PPC::Runtime::ASM::clrrwi(context->r8, context->r7, 1);
/*803CBF2C 003C8D2C*/ PPC::Runtime::ASM::subfic(context->r0, context->r3, 0x3);
/*803CBF30 003C8D30*/ PPC::Runtime::ASM::cntlzw(context->r7, context->r0);
/*803CBF34 003C8D34*/ PPC::Runtime::ASM::subfic(context->r0, context->r3, 0x2);
/*803CBF38 003C8D38*/ PPC::Runtime::ASM::or(context->r8, context->r8, context->r9);
/*803CBF3C 003C8D3C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*803CBF40 003C8D40*/ PPC::Runtime::ASM::rlwinm(context->r8, context->r8, 0, 21, 19);
/* 803CBF44 003C8D44  54 E3 30 28 */ extlwi context->r3 , context->r7 , 21 , 6
/*803CBF48 003C8D48*/ PPC::Runtime::ASM::or(context->r3, context->r8, context->r3);
/*803CBF4C 003C8D4C*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 31, 29);
/*803CBF50 003C8D50*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 28, 4, 30);
/*803CBF54 003C8D54*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CBF58 003C8D58*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r0, 0, 20, 15);
/*803CBF5C 003C8D5C*/ PPC::Runtime::ASM::slwi(context->r0, context->r6, 12);
/*803CBF60 003C8D60*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CBF64 003C8D64*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r0, 0, 24, 20);
/*803CBF68 003C8D68*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 8);
/*803CBF6C 003C8D6C*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CBF70 003C8D70*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r0, 0, 27, 23);
/*803CBF74 003C8D74*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 5);
/*803CBF78 003C8D78*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CBF7C 003C8D7C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 8);
/*803CBF80 003C8D80*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x4100);
/*803CBF84 003C8D84*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*803CBF88 003C8D88*/ PPC::Runtime::ASM::blr();
}