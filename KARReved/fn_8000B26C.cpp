//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000B26C(PPC::Runtime::GCContext* context)
{
/*8000B26C 0000806C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000B270 00008070*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000B274 00008074*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B278 00008078*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000B27C 0000807C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B280 00008080*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r3));
/*8000B284 00008084*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000B288 00008088*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000B28C 0000808C*/ PPC::Runtime::ASM::blr();
}