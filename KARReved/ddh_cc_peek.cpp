//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803F3928.hpp"
#include "fn_803F3930.hpp"
#include "fn_CircleBufferWriteBytes.hpp"



void ddh_cc_peek(PPC::Runtime::GCContext* context)
{
/*803C29A0 003BF7A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x810, context->r1));
/*803C29A4 003BF7A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C29A8 003BF7A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x814, context->r1));
/*803C29AC 003BF7AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r1));
/*803C29B0 003BF7B0*/ PPC::Runtime::ASM::bl(fn_803F3928);
/* 803C29B4 003BF7B4  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803C29B8 003BF7B8*/ PPC::Runtime::ASM::bgt(.L_803C29C4);
/*803C29BC 003BF7BC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C29C0 003BF7C0*/ PPC::Runtime::ASM::b(.L_803C29FC);
RUNTIME_PPC_JUMP_LABEL(.L_803C29C4, 0x803C29C4) //this is a jump label
/*803C29C4 003BF7C4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*803C29C8 003BF7C8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803C29CC 003BF7CC*/ PPC::Runtime::ASM::bl(fn_803F3930);
/*803C29D0 003BF7D0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803C29D4 003BF7D4*/ PPC::Runtime::ASM::bne(.L_803C29F0);
/*803C29D8 003BF7D8*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056C600 @ Get_MemoryOffset_HighBit);
/*803C29DC 003BF7DC*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*803C29E0 003BF7E0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8056C600 @ Get_MemoryOffset_LowBit);
/*803C29E4 003BF7E4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803C29E8 003BF7E8*/ PPC::Runtime::ASM::bl(fn_CircleBufferWriteBytes);
/*803C29EC 003BF7EC*/ PPC::Runtime::ASM::b(.L_803C29F8);
RUNTIME_PPC_JUMP_LABEL(.L_803C29F0, 0x803C29F0) //this is a jump label
/*803C29F0 003BF7F0*/ PPC::Runtime::ASM::li(context->r3, -0x2719);
/*803C29F4 003BF7F4*/ PPC::Runtime::ASM::b(.L_803C29FC);
RUNTIME_PPC_JUMP_LABEL(.L_803C29F8, 0x803C29F8) //this is a jump label
/*803C29F8 003BF7F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_803C29FC, 0x803C29FC) //this is a jump label
/*803C29FC 003BF7FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x814, context->r1));
/*803C2A00 003BF800*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r1));
/*803C2A04 003BF804*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C2A08 003BF808*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x810);
/*803C2A0C 003BF80C*/ PPC::Runtime::ASM::blr();
}