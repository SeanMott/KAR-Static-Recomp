//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114EEC.hpp"



void fn_80130EEC(PPC::Runtime::GCContext* context)
{
/*80130EEC 0012DCEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80130EF0 0012DCF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80130EF4 0012DCF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130EF8 0012DCF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80130EFC 0012DCFC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80130F00 0012DD00*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80130F04 0012DD04*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*80130F08 0012DD08*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*80130F0C 0012DD0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc50, context->r3));
/*80130F10 0012DD10*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80130F14 0012DD14*/ PPC::Runtime::ASM::beq(.L_80130F1C);
/*80130F18 0012DD18*/ PPC::Runtime::ASM::bl(fn_80114EEC);
RUNTIME_PPC_JUMP_LABEL(.L_80130F1C, 0x80130F1C) //this is a jump label
/*80130F1C 0012DD1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130F20 0012DD20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80130F24 0012DD24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80130F28 0012DD28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80130F2C 0012DD2C*/ PPC::Runtime::ASM::blr();
}