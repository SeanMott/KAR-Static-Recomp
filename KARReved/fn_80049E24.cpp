//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetClearcheckerTypeP.hpp"



void fn_80049E24(PPC::Runtime::GCContext* context)
{
/*80049E24 00046C24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80049E28 00046C28*/ PPC::Runtime::ASM::mflr(context->r0);
/*80049E2C 00046C2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049E30 00046C30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049E34 00046C34*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049E38 00046C38*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80049E3C 00046C3C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049E40 00046C40*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80049E44 00046C44*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r29, 24);
/*80049E48 00046C48*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_169 @ Get_MemoryOffset_HighBit);
/*80049E4C 00046C4C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x3);
/*80049E50 00046C50*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_169 @ Get_MemoryOffset_LowBit);
/*80049E54 00046C54*/ PPC::Runtime::ASM::blt(.L_80049E78);
/*80049E58 00046C58*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*80049E5C 00046C5C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x180);
/*80049E60 00046C60*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80049E64 00046C64*/ PPC::Runtime::ASM::bl(OSReport);
/*80049E68 00046C68*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x19c);
/*80049E6C 00046C6C*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*80049E70 00046C70*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D4 @ Get_MemoryOffset_SDA21);
/*80049E74 00046C74*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049E78, 0x80049E78) //this is a jump label
/*80049E78 00046C78*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r30, 24);
/*80049E7C 00046C7C*/ PPC::Runtime::ASM::clrlslwi(context->r5, context->r29, 24, 2);
/*80049E80 00046C80*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x174);
/*80049E84 00046C84*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80049E88 00046C88*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3);
/*80049E8C 00046C8C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r5);
/*80049E90 00046C90*/ PPC::Runtime::ASM::add(context->r31, context->r4, context->r0);
/*80049E94 00046C94*/ PPC::Runtime::ASM::bl(fn_gmGetClearcheckerTypeP);
/*80049E98 00046C98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r31));
/*80049E9C 00046C9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049EA0 00046CA0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*80049EA4 00046CA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049EA8 00046CA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*80049EAC 00046CAC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049EB0 00046CB0*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 28);
/*80049EB4 00046CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049EB8 00046CB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80049EBC 00046CBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80049EC0 00046CC0*/ PPC::Runtime::ASM::blr();
}