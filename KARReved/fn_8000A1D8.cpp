//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A1D8(PPC::Runtime::GCContext* context)
{
/*8000A1D8 00006FD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A1DC 00006FDC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A1E0 00006FE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A1E4 00006FE4*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A1E8 00006FE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A1EC 00006FEC*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 2, 29);
/*8000A1F0 00006FF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A1F4 00006FF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A1F8 00006FF8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A1FC 00006FFC*/ PPC::Runtime::ASM::blr();
}