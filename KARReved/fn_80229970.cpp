//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802361A0.hpp"



void fn_80229970(PPC::Runtime::GCContext* context)
{
/*80229970 00226770*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80229974 00226774*/ PPC::Runtime::ASM::mflr(context->r0);
/*80229978 00226778*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022997C 0022677C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80229980 00226780*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80229984 00226784*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d8, context->r3));
/*80229988 00226788*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1dc, context->r31));
/*8022998C 0022678C*/ PPC::Runtime::ASM::bl(fn_802361A0);
/*80229990 00226790*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80229994 00226794*/ PPC::Runtime::ASM::bne(.L_802299A0);
/*80229998 00226798*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8022999C 0022679C*/ PPC::Runtime::ASM::bl(fn_80428F64);
RUNTIME_PPC_JUMP_LABEL(.L_802299A0, 0x802299A0) //this is a jump label
/*802299A0 002267A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802299A4 002267A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802299A8 002267A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802299AC 002267AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802299B0 002267B0*/ PPC::Runtime::ASM::blr();
}