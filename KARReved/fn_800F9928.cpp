//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F4B20.hpp"
#include "fn_800F91C8.hpp"
#include "fn_800F9970.hpp"



void fn_800F9928(PPC::Runtime::GCContext* context)
{
/*800F9928 000F6728*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F992C 000F672C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9930 000F6730*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800F9934 000F6734*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*800F9938 000F6738*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F993C 000F673C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F9940 000F6740*/ PPC::Runtime::ASM::bl(fn_800F4B20);
/*800F9944 000F6744*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F9948 000F6748*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F994C 000F674C*/ PPC::Runtime::ASM::bl(fn_800F91C8);
/*800F9950 000F6750*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9954 000F6754*/ PPC::Runtime::ASM::bl(fn_800F9970);
/*800F9958 000F6758*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F995C 000F675C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9960 000F6760*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F9964 000F6764*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9968 000F6768*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F996C 000F676C*/ PPC::Runtime::ASM::blr();
}