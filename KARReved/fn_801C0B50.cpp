//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019F238.hpp"
#include "fn_801C0DD8.hpp"
#include "fn_801C0DD8.hpp"
#include "fn_8019F288.hpp"



void fn_801C0B50(PPC::Runtime::GCContext* context)
{
/*801C0B50 001BD950*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C0B54 001BD954*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C0B58 001BD958*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C0B5C 001BD95C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C0B60 001BD960*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C0B64 001BD964*/ PPC::Runtime::ASM::bl(fn_8019F238);
/*801C0B68 001BD968*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C0B6C 001BD96C*/ PPC::Runtime::ASM::beq(.L_801C0BA8);
/*801C0B70 001BD970*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r31));
/* 801C0B74 001BD974  54 60 D7 FF */ extrwi. context->r0 , context->r3 , 1 , 25
/*801C0B78 001BD978*/ PPC::Runtime::ASM::bne(.L_801C0B80);
/*801C0B7C 001BD97C*/ PPC::Runtime::ASM::b(.L_801C0BA8);
RUNTIME_PPC_JUMP_LABEL(.L_801C0B80, 0x801C0B80) //this is a jump label
/* 801C0B80 001BD980  54 60 CF FF */ extrwi. context->r0 , context->r3 , 1 , 24
/*801C0B84 001BD984*/ PPC::Runtime::ASM::bne(.L_801C0BA8);
/*801C0B88 001BD988*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
/*801C0B8C 001BD98C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801C0B90 001BD990*/ PPC::Runtime::ASM::bne(.L_801C0BA8);
/*801C0B94 001BD994*/ PPC::Runtime::ASM::lis(context->r4, fn_801C0DD8 @ Get_MemoryOffset_HighBit);
/*801C0B98 001BD998*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C0B9C 001BD99C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_801C0DD8 @ Get_MemoryOffset_LowBit);
/*801C0BA0 001BD9A0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x828);
/*801C0BA4 001BD9A4*/ PPC::Runtime::ASM::bl(fn_8019F288);
RUNTIME_PPC_JUMP_LABEL(.L_801C0BA8, 0x801C0BA8) //this is a jump label
/*801C0BA8 001BD9A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C0BAC 001BD9AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C0BB0 001BD9B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C0BB4 001BD9B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C0BB8 001BD9B8*/ PPC::Runtime::ASM::blr();
}