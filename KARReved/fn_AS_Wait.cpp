//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801A2D80.hpp"
#include "fn_801A2FE8.hpp"
#include "fn_801BCCB8.hpp"
#include "fn_801BCCB8.hpp"
#include "fn_801A304C.hpp"



void fn_AS_Wait(PPC::Runtime::GCContext* context)
{
/*801BAC70 001B7A70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BAC74 001B7A74*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BAC78 001B7A78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BAC7C 001B7A7C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BAC80 001B7A80*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BAC84 001B7A84*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801BAC88 001B7A88*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BAC8C 001B7A8C*/ PPC::Runtime::ASM::beq(.L_801BAD04);
/*801BAC90 001B7A90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BAC94 001B7A94*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*801BAC98 001B7A98*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*801BAC9C 001B7A9C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1784 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BACA0 001B7AA0*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*801BACA4 001B7AA4*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*801BACA8 001B7AA8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1788 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BACAC 001B7AAC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801BACB0 001B7AB0*/ PPC::Runtime::ASM::srawi(context->r4, context->r0, 31);
/*801BACB4 001B7AB4*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x1e9);
/*801BACB8 001B7AB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BACBC 001B7ABC*/ PPC::Runtime::ASM::li(context->r4, 0x71);
/*801BACC0 001B7AC0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801BACC4 001B7AC4*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801BACC8 001B7AC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BACCC 001B7ACC*/ PPC::Runtime::ASM::bl(fn_801A2D80);
/*801BACD0 001B7AD0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BACD4 001B7AD4*/ PPC::Runtime::ASM::bl(fn_801A2FE8);
/*801BACD8 001B7AD8*/ PPC::Runtime::ASM::lis(context->r4, fn_801BCCB8 @ Get_MemoryOffset_HighBit);
/*801BACDC 001B7ADC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BACE0 001B7AE0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801BCCB8 @ Get_MemoryOffset_LowBit);
/*801BACE4 001B7AE4*/ PPC::Runtime::ASM::bl(fn_801A304C);
/*801BACE8 001B7AE8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1784 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BACEC 001B7AEC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r31));
/*801BACF0 001B7AF0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa64, context->r31));
/*801BACF4 001B7AF4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa60, context->r31));
/*801BACF8 001B7AF8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa5c, context->r31));
/*801BACFC 001B7AFC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r31));
/*801BAD00 001B7B00*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa54, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801BAD04, 0x801BAD04) //this is a jump label
/*801BAD04 001B7B04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BAD08 001B7B08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BAD0C 001B7B0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BAD10 001B7B10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BAD14 001B7B14*/ PPC::Runtime::ASM::blr();
}