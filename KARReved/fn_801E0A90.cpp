//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007A38C.hpp"



void fn_801E0A90(PPC::Runtime::GCContext* context)
{
/*801E0A90 001DD890*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801E0A94 001DD894*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E0A98 001DD898*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801E0A9C 001DD89C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD820 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0AA0 001DD8A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801E0AA4 001DD8A4*/ PPC::Runtime::ASM::beq(.L_801E0AF0);
/*801E0AA8 001DD8A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r3));
/*801E0AAC 001DD8AC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*801E0AB0 001DD8B0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x10);
/*801E0AB4 001DD8B4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x18);
/*801E0AB8 001DD8B8*/ PPC::Runtime::ASM::bl(fn_8007A38C);
/*801E0ABC 001DD8BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0AC0 001DD8C0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801E0AC4 001DD8C4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD818 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0AC8 001DD8C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0ACC 001DD8CC*/ PPC::Runtime::ASM::bl(fn_HSD_LObjSetColor);
/*801E0AD0 001DD8D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801E0AD4 001DD8D4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801E0AD8 001DD8D8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD81C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0ADC 001DD8DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801E0AE0 001DD8E0*/ PPC::Runtime::ASM::bl(fn_HSD_LObjSetColor);
/*801E0AE4 001DD8E4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD81C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0AE8 001DD8E8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x18);
/*801E0AEC 001DD8EC*/ PPC::Runtime::ASM::bl(fn_HSD_LObjSetPosition);
RUNTIME_PPC_JUMP_LABEL(.L_801E0AF0, 0x801E0AF0) //this is a jump label
/*801E0AF0 001DD8F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801E0AF4 001DD8F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E0AF8 001DD8F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801E0AFC 001DD8FC*/ PPC::Runtime::ASM::blr();
}