//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801A1724.hpp"
#include "fn_801A1720.hpp"
#include "fn_801A1724.hpp"
#include "fn_801A1720.hpp"



void fn_801A15B4(PPC::Runtime::GCContext* context)
{
/*801A15B4 0019E3B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A15B8 0019E3B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A15BC 0019E3BC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1258 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A15C0 0019E3C0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*801A15C4 0019E3C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A15C8 0019E3C8*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801A15CC 0019E3CC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801A15D0 0019E3D0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E125C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A15D4 0019E3D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A15D8 0019E3D8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A15DC 0019E3DC*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*801A15E0 0019E3E0*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801A15E4 0019E3E4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r31));
/*801A15E8 0019E3E8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801A15EC 0019E3EC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 4, 27, 27);
/*801A15F0 0019E3F0*/ PPC::Runtime::ASM::lis(context->r4, fn_801A1724 @ Get_MemoryOffset_HighBit);
/*801A15F4 0019E3F4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r31));
/*801A15F8 0019E3F8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A15FC 0019E3FC*/ PPC::Runtime::ASM::lis(context->r3, fn_801A1720 @ Get_MemoryOffset_HighBit);
/*801A1600 0019E400*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801A1724 @ Get_MemoryOffset_LowBit);
/*801A1604 0019E404*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58c, context->r31));
/*801A1608 0019E408*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801A1720 @ Get_MemoryOffset_LowBit);
/*801A160C 0019E40C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801A1610 0019E410*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801A1614 0019E414*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A1618 0019E418*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 1, 30, 30);
/*801A161C 0019E41C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A1620 0019E420*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A1624 0019E424*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*801A1628 0019E428*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A162C 0019E42C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A1630 0019E430*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A1634 0019E434*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A1638 0019E438*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A163C 0019E43C*/ PPC::Runtime::ASM::blr();
}