//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80286188.hpp"
#include "fn_80285130.hpp"



void fn_802AC644(PPC::Runtime::GCContext* context)
{
/*802AC644 002A9444*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AC648 002A9448*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AC64C 002A944C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AC650 002A9450*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AC654 002A9454*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802AC658 002A9458*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802AC65C 002A945C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802AC660 002A9460*/ PPC::Runtime::ASM::beq(.L_802AC6D8);
/*802AC664 002A9464*/ PPC::Runtime::ASM::lis(context->r4, lbl_804CAD10 @ Get_MemoryOffset_HighBit);
/*802AC668 002A9468*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x578);
/*802AC66C 002A946C*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804CAD10 @ Get_MemoryOffset_LowBit);
/*802AC670 002A9470*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC674 002A9474*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802AC678 002A9478*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802AC67C 002A947C*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802AC680 002A9480*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802AC684 002A9484*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802AC688 002A9488*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC68C 002A948C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x474);
/*802AC690 002A9490*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC694 002A9494*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC698 002A9498*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x370);
/*802AC69C 002A949C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC6A0 002A94A0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC6A4 002A94A4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x26c);
/*802AC6A8 002A94A8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC6AC 002A94AC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AC6B0 002A94B0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802AC6B4 002A94B4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AC6B8 002A94B8*/ PPC::Runtime::ASM::bl(fn_80286188);
/*802AC6BC 002A94BC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC6C0 002A94C0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AC6C4 002A94C4*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802AC6C8 002A94C8*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802AC6CC 002A94CC*/ PPC::Runtime::ASM::ble(.L_802AC6D8);
/*802AC6D0 002A94D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC6D4 002A94D4*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802AC6D8, 0x802AC6D8) //this is a jump label
/*802AC6D8 002A94D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AC6DC 002A94DC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AC6E0 002A94E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AC6E4 002A94E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802AC6E8 002A94E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AC6EC 002A94EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AC6F0 002A94F0*/ PPC::Runtime::ASM::blr();
}