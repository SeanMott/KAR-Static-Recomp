//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D260.hpp"



void fn_8022EB10(PPC::Runtime::GCContext* context)
{
/*8022EB10 0022B910*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022EB14 0022B914*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022EB18 0022B918*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022EB1C 0022B91C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022EB20 0022B920*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8022EB24 0022B924*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022EB28 0022B928*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8022EB2C 0022B92C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x5);
/*8022EB30 0022B930*/ PPC::Runtime::ASM::blt(.L_8022EB4C);
/*8022EB34 0022B934*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022EB38 0022B938*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022EB3C 0022B93C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022EB40 0022B940*/ PPC::Runtime::ASM::li(context->r4, 0x256);
/*8022EB44 0022B944*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022EB48 0022B948*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022EB4C, 0x8022EB4C) //this is a jump label
/*8022EB4C 0022B94C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1b);
/*8022EB50 0022B950*/ PPC::Runtime::ASM::bge(.L_8022EB6C);
/*8022EB54 0022B954*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8022EB58 0022B958*/ PPC::Runtime::ASM::bl(fn_8022D260);
/*8022EB5C 0022B95C*/ PPC::Runtime::ASM::slwi(context->r4, context->r31, 2);
/*8022EB60 0022B960*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0xe4);
/*8022EB64 0022B964*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*8022EB68 0022B968*/ PPC::Runtime::ASM::b(.L_8022EB70);
RUNTIME_PPC_JUMP_LABEL(.L_8022EB6C, 0x8022EB6C) //this is a jump label
/*8022EB6C 0022B96C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8022EB70, 0x8022EB70) //this is a jump label
/*8022EB70 0022B970*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022EB74 0022B974*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022EB78 0022B978*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022EB7C 0022B97C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022EB80 0022B980*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022EB84 0022B984*/ PPC::Runtime::ASM::blr();
}