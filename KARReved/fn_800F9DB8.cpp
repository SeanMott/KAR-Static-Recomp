//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D79C0.hpp"
#include "fn_800F9E48.hpp"
#include "fn_800F9F30.hpp"



void fn_800F9DB8(PPC::Runtime::GCContext* context)
{
/*800F9DB8 000F6BB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F9DBC 000F6BBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9DC0 000F6BC0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800F9DC4 000F6BC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9DC8 000F6BC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F9DCC 000F6BCC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F9DD0 000F6BD0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F9DD4 000F6BD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*800F9DD8 000F6BD8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*800F9DDC 000F6BDC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F9DE0 000F6BE0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800F9DE4 000F6BE4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800F9DE8 000F6BE8*/ PPC::Runtime::ASM::lwz(context->r7, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F9DEC 000F6BEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800F9DF0 000F6BF0*/ PPC::Runtime::ASM::addi(context->r3, context->r7, 0x54);
/*800F9DF4 000F6BF4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800F9DF8 000F6BF8*/ PPC::Runtime::ASM::lwzx(context->r4, context->r6, context->r0);
/*800F9DFC 000F6BFC*/ PPC::Runtime::ASM::bl(fn_800D79C0);
/*800F9E00 000F6C00*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800F9E04 000F6C04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800F9E08 000F6C08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800F9E0C 000F6C0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800F9E10 000F6C10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F9E14 000F6C14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F9E18 000F6C18*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F9E1C 000F6C1C*/ PPC::Runtime::ASM::beq(.L_800F9E28);
/*800F9E20 000F6C20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9E24 000F6C24*/ PPC::Runtime::ASM::bl(fn_800F9E48);
RUNTIME_PPC_JUMP_LABEL(.L_800F9E28, 0x800F9E28) //this is a jump label
/*800F9E28 000F6C28*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F9E2C 000F6C2C*/ PPC::Runtime::ASM::bl(fn_800F9F30);
/*800F9E30 000F6C30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9E34 000F6C34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F9E38 000F6C38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F9E3C 000F6C3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9E40 000F6C40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F9E44 000F6C44*/ PPC::Runtime::ASM::blr();
}