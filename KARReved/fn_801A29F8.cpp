//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_isAccelerationPossible.hpp"
#include "fn_8019AB94.hpp"
#include "fn_8019AD34.hpp"



void fn_801A29F8(PPC::Runtime::GCContext* context)
{
/*801A29F8 0019F7F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A29FC 0019F7FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A2A00 0019F800*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A2A04 0019F804*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A2A08 0019F808*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A2A0C 0019F80C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801A2A10 0019F810*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r31));
/*801A2A14 0019F814*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d0, context->r31));
/*801A2A18 0019F818*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801A2A1C 0019F81C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A2A20 0019F820*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r31));
/*801A2A24 0019F824*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r31));
/*801A2A28 0019F828*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801A2A2C 0019F82C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A2A30 0019F830*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r31));
/*801A2A34 0019F834*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r31));
/*801A2A38 0019F838*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801A2A3C 0019F83C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A2A40 0019F840*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5ac, context->r31));
/*801A2A44 0019F844*/ PPC::Runtime::ASM::bl(fn_isAccelerationPossible);
/*801A2A48 0019F848*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A2A4C 0019F84C*/ PPC::Runtime::ASM::beq(.L_801A2A80);
/*801A2A50 0019F850*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A2A54 0019F854*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r31));
/*801A2A58 0019F858*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801A2A5C 0019F85C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d0, context->r31));
/*801A2A60 0019F860*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A2A64 0019F864*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r31));
/*801A2A68 0019F868*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801A2A6C 0019F86C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r31));
/*801A2A70 0019F870*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A2A74 0019F874*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r31));
/*801A2A78 0019F878*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801A2A7C 0019F87C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801A2A80, 0x801A2A80) //this is a jump label
/*801A2A80 0019F880*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A2A84 0019F884*/ PPC::Runtime::ASM::bl(fn_8019AB94);
/*801A2A88 0019F888*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A2A8C 0019F88C*/ PPC::Runtime::ASM::bl(fn_8019AD34);
/*801A2A90 0019F890*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A2A94 0019F894*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A2A98 0019F898*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A2A9C 0019F89C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A2AA0 0019F8A0*/ PPC::Runtime::ASM::blr();
}