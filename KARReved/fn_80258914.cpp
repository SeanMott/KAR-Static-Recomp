//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80258940.hpp"
#include "fn_80258940.hpp"
#include "fn_80254D4C.hpp"



void fn_80258914(PPC::Runtime::GCContext* context)
{
/*80258914 00255714*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80258918 00255718*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025891C 0025571C*/ PPC::Runtime::ASM::lis(context->r4, fn_80258940 @ Get_MemoryOffset_HighBit);
/*80258920 00255720*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80258924 00255724*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80258940 @ Get_MemoryOffset_LowBit);
/*80258928 00255728*/ PPC::Runtime::ASM::bl(fn_80254D4C);
/*8025892C 0025572C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80258930 00255730*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80258934 00255734*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80258938 00255738*/ PPC::Runtime::ASM::blr();
}