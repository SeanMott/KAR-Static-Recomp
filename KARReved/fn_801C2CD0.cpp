//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019FD9C.hpp"
#include "fn_801C1A20.hpp"
#include "fn_801C2E2C.hpp"
#include "fn_801C297C.hpp"
#include "fn_801C2020.hpp"



void fn_801C2CD0(PPC::Runtime::GCContext* context)
{
/*801C2CD0 001BFAD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C2CD4 001BFAD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C2CD8 001BFAD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C2CDC 001BFADC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C2CE0 001BFAE0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C2CE4 001BFAE4*/ PPC::Runtime::ASM::bl(fn_8019FD9C);
/*801C2CE8 001BFAE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C2CEC 001BFAEC*/ PPC::Runtime::ASM::bl(fn_801C1A20);
/*801C2CF0 001BFAF0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C2CF4 001BFAF4*/ PPC::Runtime::ASM::bne(.L_801C2D44);
/*801C2CF8 001BFAF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5a8, context->r31));
/*801C2CFC 001BFAFC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801C2D00 001BFB00*/ PPC::Runtime::ASM::bne(.L_801C2D44);
/*801C2D04 001BFB04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C2D08 001BFB08*/ PPC::Runtime::ASM::bl(fn_801C2E2C);
/*801C2D0C 001BFB0C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C2D10 001BFB10*/ PPC::Runtime::ASM::bne(.L_801C2D44);
/*801C2D14 001BFB14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C2D18 001BFB18*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x398, context->r31));
/*801C2D1C 001BFB1C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801C2D20 001BFB20*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801C2D24 001BFB24*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801C2D28 001BFB28*/ PPC::Runtime::ASM::ble(.L_801C2D44);
/*801C2D2C 001BFB2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C2D30 001BFB30*/ PPC::Runtime::ASM::bl(fn_801C297C);
/*801C2D34 001BFB34*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C2D38 001BFB38*/ PPC::Runtime::ASM::bne(.L_801C2D44);
/*801C2D3C 001BFB3C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C2D40 001BFB40*/ PPC::Runtime::ASM::bl(fn_801C2020);
RUNTIME_PPC_JUMP_LABEL(.L_801C2D44, 0x801C2D44) //this is a jump label
/*801C2D44 001BFB44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C2D48 001BFB48*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C2D4C 001BFB4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C2D50 001BFB50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C2D54 001BFB54*/ PPC::Runtime::ASM::blr();
}