//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__EXIProbe.hpp"
#include "EXIGetID.hpp"



void fn_EXIProbeEx(PPC::Runtime::GCContext* context)
{
/*803EA944 003E7744*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EA948 003E7748*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EA94C 003E774C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803EA950 003E7750*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EA954 003E7754*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EA958 003E7758*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803EA95C 003E775C*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EA960 003E7760*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EA964 003E7764*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EA968 003E7768*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*803EA96C 003E776C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803EA970 003E7770*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EA974 003E7774*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EA978 003E7778*/ PPC::Runtime::ASM::beq(.L_803EA9AC);
/*803EA97C 003E777C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*803EA980 003E7780*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EA984 003E7784*/ PPC::Runtime::ASM::bne(.L_803EA9AC);
/*803EA988 003E7788*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803EA98C 003E778C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EA990 003E7790*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*803EA994 003E7794*/ PPC::Runtime::ASM::bl(EXIGetID);
/*803EA998 003E7798*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EA99C 003E779C*/ PPC::Runtime::ASM::beq(.L_803EA9A8);
/*803EA9A0 003E77A0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EA9A4 003E77A4*/ PPC::Runtime::ASM::b(.L_803EA9AC);
RUNTIME_PPC_JUMP_LABEL(.L_803EA9A8, 0x803EA9A8) //this is a jump label
/*803EA9A8 003E77A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803EA9AC, 0x803EA9AC) //this is a jump label
/*803EA9AC 003E77AC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EA9B0 003E77B0*/ PPC::Runtime::ASM::beq(.L_803EA9BC);
/*803EA9B4 003E77B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EA9B8 003E77B8*/ PPC::Runtime::ASM::b(.L_803EA9E0);
RUNTIME_PPC_JUMP_LABEL(.L_803EA9BC, 0x803EA9BC) //this is a jump label
/*803EA9BC 003E77BC*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*803EA9C0 003E77C0*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803EA9C4 003E77C4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x30c0);
/*803EA9C8 003E77C8*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*803EA9CC 003E77CC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EA9D0 003E77D0*/ PPC::Runtime::ASM::beq(.L_803EA9DC);
/*803EA9D4 003E77D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EA9D8 003E77D8*/ PPC::Runtime::ASM::b(.L_803EA9E0);
RUNTIME_PPC_JUMP_LABEL(.L_803EA9DC, 0x803EA9DC) //this is a jump label
/*803EA9DC 003E77DC*/ PPC::Runtime::ASM::li(context->r3, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EA9E0, 0x803EA9E0) //this is a jump label
/*803EA9E0 003E77E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EA9E4 003E77E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EA9E8 003E77E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EA9EC 003E77EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803EA9F0 003E77F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EA9F4 003E77F4*/ PPC::Runtime::ASM::blr();
}