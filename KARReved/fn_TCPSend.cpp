//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80475590.hpp"
#include "fn_80475590.hpp"
#include "fn_SendAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_TCPSend(PPC::Runtime::GCContext* context)
{
/*80476368 00473168*/ PPC::Runtime::ASM::mflr(context->r0);
/*8047636C 0047316C*/ PPC::Runtime::ASM::lis(context->r6, fn_80475590 @ Get_MemoryOffset_HighBit);
/*80476370 00473170*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80476374 00473174*/ PPC::Runtime::ASM::addi(context->r7, context->r6, fn_80475590 @ Get_MemoryOffset_LowBit);
/*80476378 00473178*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*8047637C 0047317C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80476380 00473180*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80476384 00473184*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x14);
/*80476388 00473188*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8047638C 0047318C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*80476390 00473190*/ PPC::Runtime::ASM::bl(fn_SendAsync);
/*80476394 00473194*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80476398 00473198*/ PPC::Runtime::ASM::bge(.L_804763A0);
/*8047639C 0047319C*/ PPC::Runtime::ASM::b(.L_804763CC);
RUNTIME_PPC_JUMP_LABEL(.L_804763A0, 0x804763A0) //this is a jump label
/*804763A0 004731A0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*804763A4 004731A4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*804763A8 004731A8*/ PPC::Runtime::ASM::b(.L_804763B4);
RUNTIME_PPC_JUMP_LABEL(.L_804763AC, 0x804763AC) //this is a jump label
/*804763AC 004731AC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*804763B0 004731B0*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_804763B4, 0x804763B4) //this is a jump label
/*804763B4 004731B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804763B8 004731B8*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*804763BC 004731BC*/ PPC::Runtime::ASM::beq(.L_804763AC);
/*804763C0 004731C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*804763C4 004731C4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*804763C8 004731C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_804763CC, 0x804763CC) //this is a jump label
/*804763CC 004731CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*804763D0 004731D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*804763D4 004731D4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*804763D8 004731D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*804763DC 004731DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804763E0 004731E0*/ PPC::Runtime::ASM::blr();
}