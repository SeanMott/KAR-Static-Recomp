//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn___assert.hpp"
#include "fn_8044B2C0.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_80449DC0(PPC::Runtime::GCContext* context)
{
/*80449DC0 00446BC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80449DC4 00446BC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80449DC8 00446BC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80449DCC 00446BCC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80449DD0 00446BD0*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*80449DD4 00446BD4*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80449DD8 00446BD8*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80449DDC 00446BDC*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*80449DE0 00446BE0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80449DE4 00446BE4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r27, 26);
/*80449DE8 00446BE8*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_HighBit);
/*80449DEC 00446BEC*/ PPC::Runtime::ASM::mulli(context->r5, context->r0, 0x98);
/*80449DF0 00446BF0*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*80449DF4 00446BF4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_LowBit);
/*80449DF8 00446BF8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80449DFC 00446BFC*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r5);
/*80449E00 00446C00*/ PPC::Runtime::ASM::ble(.L_80449E14);
/*80449E04 00446C04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80449E08 00446C08*/ PPC::Runtime::ASM::cmpw(context->r0, context->r27);
/*80449E0C 00446C0C*/ PPC::Runtime::ASM::bne(.L_80449E14);
/*80449E10 00446C10*/ PPC::Runtime::ASM::b(.L_80449E18);
RUNTIME_PPC_JUMP_LABEL(.L_80449E14, 0x80449E14) //this is a jump label
/*80449E14 00446C14*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80449E18, 0x80449E18) //this is a jump label
/*80449E18 00446C18*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80449E1C 00446C1C*/ PPC::Runtime::ASM::beq(.L_80449E78);
/*80449E20 00446C20*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*80449E24 00446C24*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80449E28 00446C28*/ PPC::Runtime::ASM::blt(.L_80449E38);
/*80449E2C 00446C2C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*80449E30 00446C30*/ PPC::Runtime::ASM::bge(.L_80449E38);
/*80449E34 00446C34*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80449E38, 0x80449E38) //this is a jump label
/*80449E38 00446C38*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80449E3C 00446C3C*/ PPC::Runtime::ASM::bne(.L_80449E54);
/*80449E40 00446C40*/ PPC::Runtime::ASM::lis(context->r4, String_ "flag_GreaterThenEqual_0_And_flag_LessThen_USERPAN_NU" Get_MemoryOffset_HighBit);
/*80449E44 00446C44*/ PPC::Runtime::ASM::li(context->r3, String_ "synth." Get_MemoryOffset_SDA21);
/*80449E48 00446C48*/ PPC::Runtime::ASM::addi(context->r5, context->r4, String_ "flag_GreaterThenEqual_0_And_flag_LessThen_USERPAN_NU" Get_MemoryOffset_LowBit);
/*80449E4C 00446C4C*/ PPC::Runtime::ASM::li(context->r4, 0x80f);
/*80449E50 00446C50*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80449E54, 0x80449E54) //this is a jump label
/*80449E54 00446C54*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r28, 24);
/*80449E58 00446C58*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xfe);
/*80449E5C 00446C5C*/ PPC::Runtime::ASM::ble(.L_80449E64);
/*80449E60 00446C60*/ PPC::Runtime::ASM::li(context->r28, 0xfe);
RUNTIME_PPC_JUMP_LABEL(.L_80449E64, 0x80449E64) //this is a jump label
/*80449E64 00446C64*/ PPC::Runtime::ASM::add(context->r4, context->r31, context->r29);
/*80449E68 00446C68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80449E6C 00446C6C*/ PPC::Runtime::ASM::stb(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r4));
/*80449E70 00446C70*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80449E74 00446C74*/ PPC::Runtime::ASM::bl(fn_8044B2C0);
RUNTIME_PPC_JUMP_LABEL(.L_80449E78, 0x80449E78) //this is a jump label
/*80449E78 00446C78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80449E7C 00446C7C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80449E80 00446C80*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80449E84 00446C84*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80449E88 00446C88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80449E8C 00446C8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80449E90 00446C90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80449E94 00446C94*/ PPC::Runtime::ASM::blr();
}