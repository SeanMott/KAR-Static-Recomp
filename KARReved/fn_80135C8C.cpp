//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80131928.hpp"
#include "fn_80159AB4.hpp"
#include "fn_80159CC0.hpp"
#include "fn_80159DE4.hpp"
#include "fn_8015AA18.hpp"
#include "fn_8015B130.hpp"
#include "fn_8015BA1C.hpp"
#include "fn_8015BE24.hpp"
#include "fn_8015C304.hpp"
#include "fn_8015CA20.hpp"
#include "fn_8015CF9C.hpp"
#include "fn_8015DA80.hpp"
#include "fn_8015DB38.hpp"
#include "fn_8015E070.hpp"
#include "fn_8015E6D4.hpp"
#include "fn_8015EAF4.hpp"
#include "fn_8015ED38.hpp"
#include "fn_8015F118.hpp"
#include "fn_8015F754.hpp"
#include "fn_8015FAC4.hpp"
#include "fn_8015FF40.hpp"
#include "fn_8013B6F0.hpp"
#include "fn_80161C08.hpp"
#include "fn_80162940.hpp"



void fn_80135C8C(PPC::Runtime::GCContext* context)
{
/*80135C8C 00132A8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80135C90 00132A90*/ PPC::Runtime::ASM::mflr(context->r0);
/*80135C94 00132A94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80135C98 00132A98*/ PPC::Runtime::ASM::bl(fn_80131928);
/*80135C9C 00132A9C*/ PPC::Runtime::ASM::bl(fn_80159AB4);
/*80135CA0 00132AA0*/ PPC::Runtime::ASM::bl(fn_80159CC0);
/*80135CA4 00132AA4*/ PPC::Runtime::ASM::bl(fn_80159DE4);
/*80135CA8 00132AA8*/ PPC::Runtime::ASM::bl(fn_8015AA18);
/*80135CAC 00132AAC*/ PPC::Runtime::ASM::bl(fn_8015B130);
/*80135CB0 00132AB0*/ PPC::Runtime::ASM::bl(fn_8015BA1C);
/*80135CB4 00132AB4*/ PPC::Runtime::ASM::bl(fn_8015BE24);
/*80135CB8 00132AB8*/ PPC::Runtime::ASM::bl(fn_8015C304);
/*80135CBC 00132ABC*/ PPC::Runtime::ASM::bl(fn_8015CA20);
/*80135CC0 00132AC0*/ PPC::Runtime::ASM::bl(fn_8015CF9C);
/*80135CC4 00132AC4*/ PPC::Runtime::ASM::bl(fn_8015DA80);
/*80135CC8 00132AC8*/ PPC::Runtime::ASM::bl(fn_8015DB38);
/*80135CCC 00132ACC*/ PPC::Runtime::ASM::bl(fn_8015E070);
/*80135CD0 00132AD0*/ PPC::Runtime::ASM::bl(fn_8015E6D4);
/*80135CD4 00132AD4*/ PPC::Runtime::ASM::bl(fn_8015EAF4);
/*80135CD8 00132AD8*/ PPC::Runtime::ASM::bl(fn_8015ED38);
/*80135CDC 00132ADC*/ PPC::Runtime::ASM::bl(fn_8015F118);
/*80135CE0 00132AE0*/ PPC::Runtime::ASM::bl(fn_8015F754);
/*80135CE4 00132AE4*/ PPC::Runtime::ASM::bl(fn_8015FAC4);
/*80135CE8 00132AE8*/ PPC::Runtime::ASM::bl(fn_8015FF40);
/*80135CEC 00132AEC*/ PPC::Runtime::ASM::bl(fn_8013B6F0);
/*80135CF0 00132AF0*/ PPC::Runtime::ASM::bl(fn_80161C08);
/*80135CF4 00132AF4*/ PPC::Runtime::ASM::bl(fn_80162940);
/*80135CF8 00132AF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80135CFC 00132AFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80135D00 00132B00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80135D04 00132B04*/ PPC::Runtime::ASM::blr();
}