//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8043294C.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_SListAppend.hpp"



void fn_80433098(PPC::Runtime::GCContext* context)
{
/*80433098 0042FE98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8043309C 0042FE9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*804330A0 0042FEA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804330A4 0042FEA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804330A8 0042FEA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*804330AC 0042FEAC*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*804330B0 0042FEB0*/ PPC::Runtime::ASM::bl(fn_8043294C);
/* 804330B4 0042FEB4  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*804330B8 0042FEB8*/ PPC::Runtime::ASM::bne(.L_804330C4);
/*804330BC 0042FEBC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*804330C0 0042FEC0*/ PPC::Runtime::ASM::b(.L_8043313C);
RUNTIME_PPC_JUMP_LABEL(.L_804330C4, 0x804330C4) //this is a jump label
/*804330C4 0042FEC4*/ PPC::Runtime::ASM::beq(.L_80433108);
/*804330C8 0042FEC8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*804330CC 0042FECC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*804330D0 0042FED0*/ PPC::Runtime::ASM::beq(.L_80433108);
/*804330D4 0042FED4*/ PPC::Runtime::ASM::beq(.L_80433108);
/*804330D8 0042FED8*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*804330DC 0042FEDC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*804330E0 0042FEE0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*804330E4 0042FEE4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*804330E8 0042FEE8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*804330EC 0042FEEC*/ PPC::Runtime::ASM::bne(.L_80433108);
/*804330F0 0042FEF0*/ PPC::Runtime::ASM::lis(context->r3, lbl_8050528C @ Get_MemoryOffset_HighBit);
/*804330F4 0042FEF4*/ PPC::Runtime::ASM::lis(context->r5, lbl_80505298 @ Get_MemoryOffset_HighBit);
/*804330F8 0042FEF8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8050528C @ Get_MemoryOffset_LowBit);
/*804330FC 0042FEFC*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*80433100 0042FF00*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_80505298 @ Get_MemoryOffset_LowBit);
/*80433104 0042FF04*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80433108, 0x80433108) //this is a jump label
/*80433108 0042FF08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8043310C 0042FF0C*/ PPC::Runtime::ASM::li(context->r3, 0x700);
/*80433110 0042FF10*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 14, 14);
/*80433114 0042FF14*/ PPC::Runtime::ASM::beq(.L_8043311C);
/*80433118 0042FF18*/ PPC::Runtime::ASM::li(context->r3, 0x500);
RUNTIME_PPC_JUMP_LABEL(.L_8043311C, 0x8043311C) //this is a jump label
/*8043311C 0042FF1C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r31));
/*80433120 0042FF20*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80433124 0042FF24*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*80433128 0042FF28*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r31));
/*8043312C 0042FF2C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE370 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80433130 0042FF30*/ PPC::Runtime::ASM::bl(fn_HSD_SListAppend);
/*80433134 0042FF34*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DE370 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80433138 0042FF38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_8043313C, 0x8043313C) //this is a jump label
/*8043313C 0042FF3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80433140 0042FF40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80433144 0042FF44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80433148 0042FF48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8043314C 0042FF4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80433150 0042FF50*/ PPC::Runtime::ASM::blr();
}