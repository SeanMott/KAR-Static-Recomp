//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80167E8C.hpp"



void fn_8016AEDC(PPC::Runtime::GCContext* context)
{
/*8016AEDC 00167CDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016AEE0 00167CE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016AEE4 00167CE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016AEE8 00167CE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016AEEC 00167CEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016AEF0 00167CF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8016AEF4 00167CF4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8016AEF8 00167CF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016AEFC 00167CFC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8016AF00 00167D00*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8016AF04 00167D04*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8016AF08 00167D08*/ PPC::Runtime::ASM::bl(fn_80167E8C);
/*8016AF0C 00167D0C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016AF10 00167D10*/ PPC::Runtime::ASM::bne(.L_8016AF24);
/*8016AF14 00167D14*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B90 @ Get_MemoryOffset_SDA21);
/*8016AF18 00167D18*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8016AF1C 00167D1C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B98 @ Get_MemoryOffset_SDA21);
/*8016AF20 00167D20*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016AF24, 0x8016AF24) //this is a jump label
/*8016AF24 00167D24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8016AF28 00167D28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8016AF2C 00167D2C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8016AF30 00167D30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8016AF34 00167D34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8016AF38 00167D38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8016AF3C 00167D3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016AF40 00167D40*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8016AF44 00167D44*/ PPC::Runtime::ASM::bne(.L_8016AF90);
/*8016AF48 00167D48*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016AF4C 00167D4C*/ PPC::Runtime::ASM::beq(.L_8016AF90);
/*8016AF50 00167D50*/ PPC::Runtime::ASM::bne(.L_8016AF64);
/*8016AF54 00167D54*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B90 @ Get_MemoryOffset_SDA21);
/*8016AF58 00167D58*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8016AF5C 00167D5C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B98 @ Get_MemoryOffset_SDA21);
/*8016AF60 00167D60*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016AF64, 0x8016AF64) //this is a jump label
/*8016AF64 00167D64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016AF68 00167D68*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8016AF6C 00167D6C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8016AF70 00167D70*/ PPC::Runtime::ASM::bne(.L_8016AF80);
/*8016AF74 00167D74*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8016AF78 00167D78*/ PPC::Runtime::ASM::beq(.L_8016AF80);
/*8016AF7C 00167D7C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8016AF80, 0x8016AF80) //this is a jump label
/*8016AF80 00167D80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8016AF84 00167D84*/ PPC::Runtime::ASM::bne(.L_8016AF90);
/*8016AF88 00167D88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016AF8C 00167D8C*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8016AF90, 0x8016AF90) //this is a jump label
/*8016AF90 00167D90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016AF94 00167D94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016AF98 00167D98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016AF9C 00167D9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016AFA0 00167DA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016AFA4 00167DA4*/ PPC::Runtime::ASM::blr();
}