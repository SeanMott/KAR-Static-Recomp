//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_VIWaitForRetrace(PPC::Runtime::GCContext* context)
{
/*803DE164 003DAF64*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DE168 003DAF68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DE16C 003DAF6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803DE170 003DAF70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803DE174 003DAF74*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803DE178 003DAF78*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803DE17C 003DAF7C*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1805DDF6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DE180 003DAF80*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803DE184, 0x803DE184) //this is a jump label
/*803DE184 003DAF84*/ PPC::Runtime::ASM::li(context->r3, SkipAddress_50 @ Get_MemoryOffset_SDA21);
/*803DE188 003DAF88*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
/*803DE18C 003DAF8C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDF6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DE190 003DAF90*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*803DE194 003DAF94*/ PPC::Runtime::ASM::beq(.L_803DE184);
/*803DE198 003DAF98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803DE19C 003DAF9C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803DE1A0 003DAFA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DE1A4 003DAFA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803DE1A8 003DAFA8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803DE1AC 003DAFAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803DE1B0 003DAFB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DE1B4 003DAFB4*/ PPC::Runtime::ASM::blr();
}