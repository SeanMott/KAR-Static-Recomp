//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80168EC4(PPC::Runtime::GCContext* context)
{
/*80168EC4 00165CC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80168EC8 00165CC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80168ECC 00165CCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80168ED0 00165CD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80168ED4 00165CD4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80168ED8 00165CD8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80168EDC 00165CDC*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*80168EE0 00165CE0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80168EE4 00165CE4*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*80168EE8 00165CE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xadc, context->r31));
/*80168EEC 00165CEC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80168EF0 00165CF0*/ PPC::Runtime::ASM::beq(.L_80168F00);
/*80168EF4 00165CF4*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80168EF8 00165CF8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80168EFC 00165CFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xadc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80168F00, 0x80168F00) //this is a jump label
/*80168F00 00165D00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80168F04 00165D04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80168F08 00165D08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80168F0C 00165D0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80168F10 00165D10*/ PPC::Runtime::ASM::blr();
}