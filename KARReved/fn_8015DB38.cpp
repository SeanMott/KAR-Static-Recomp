//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015DB38(PPC::Runtime::GCContext* context)
{
/*8015DB38 0015A938*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015DB3C 0015A93C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015DB40 0015A940*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015DB44 0015A944*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015DB48 0015A948*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015DB4C 0015A94C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015DB50 0015A950*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015DB54 0015A954*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015DB58, 0x8015DB58) //this is a jump label
/*8015DB58 0015A958*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015DB5C 0015A95C*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015DB60 0015A960*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015DB64 0015A964*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8015DB68 0015A968*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x898, context->r30));
/*8015DB6C 0015A96C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015DB70 0015A970*/ PPC::Runtime::ASM::beq(.L_8015DB7C);
/*8015DB74 0015A974*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015DB78 0015A978*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x898, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015DB7C, 0x8015DB7C) //this is a jump label
/*8015DB7C 0015A97C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015DB80 0015A980*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015DB84 0015A984*/ PPC::Runtime::ASM::blt(.L_8015DB58);
/*8015DB88 0015A988*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015DB8C 0015A98C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015DB90 0015A990*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015DB94 0015A994*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015DB98 0015A998*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015DB9C 0015A99C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015DBA0 0015A9A0*/ PPC::Runtime::ASM::blr();
}