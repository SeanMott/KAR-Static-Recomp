//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801EBC90.hpp"
#include "fn_801D9980.hpp"
#include "fn_801D9E34.hpp"
#include "fn_801D9064.hpp"
#include "fn_801DA6A8.hpp"
#include "fn_scale.hpp"
#include "fn_801ECD74.hpp"
#include "fn_801ECDA8.hpp"
#include "fn_801D8F7C.hpp"
#include "fn_accelerateStar.hpp"



void fn_VehicleStatTableFuncCallbacks_Star_FlyPush_3(PPC::Runtime::GCContext* context)
{
/*801EFCC0 001ECAC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EFCC4 001ECAC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EFCC8 001ECAC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFCCC 001ECACC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFCD0 001ECAD0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EFCD4 001ECAD4*/ PPC::Runtime::ASM::bl(fn_801EBC90);
/*801EFCD8 001ECAD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFCDC 001ECADC*/ PPC::Runtime::ASM::bl(fn_801D9980);
/*801EFCE0 001ECAE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFCE4 001ECAE4*/ PPC::Runtime::ASM::bl(fn_801D9E34);
/*801EFCE8 001ECAE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFCEC 001ECAEC*/ PPC::Runtime::ASM::bl(fn_801D9064);
/*801EFCF0 001ECAF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFCF4 001ECAF4*/ PPC::Runtime::ASM::bl(fn_801DA6A8);
/*801EFCF8 001ECAF8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801EFCFC 001ECAFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFD00 001ECB00*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x178, context->r4));
/*801EFD04 001ECB04*/ PPC::Runtime::ASM::bl(fn_scale);
/*801EFD08 001ECB08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFD0C 001ECB0C*/ PPC::Runtime::ASM::bl(fn_801ECD74);
/*801EFD10 001ECB10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFD14 001ECB14*/ PPC::Runtime::ASM::bl(fn_801ECDA8);
/*801EFD18 001ECB18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFD1C 001ECB1C*/ PPC::Runtime::ASM::bl(fn_801D8F7C);
/*801EFD20 001ECB20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFD24 001ECB24*/ PPC::Runtime::ASM::bl(fn_accelerateStar);
/*801EFD28 001ECB28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFD2C 001ECB2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFD30 001ECB30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EFD34 001ECB34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EFD38 001ECB38*/ PPC::Runtime::ASM::blr();
}