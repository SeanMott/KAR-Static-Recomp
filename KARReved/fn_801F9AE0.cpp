//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801F9AE0(PPC::Runtime::GCContext* context)
{
/*801F9AE0 001F68E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F9AE4 001F68E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F9AE8 001F68E8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2174 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9AEC 001F68EC*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*801F9AF0 001F68F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F9AF4 001F68F4*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801F9AF8 001F68F8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2170 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9AFC 001F68FC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801F9B00 001F6900*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F9B04 001F6904*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F9B08 001F6908*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801F9B0C 001F690C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F9B10 001F6910*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F9B14 001F6914*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*801F9B18 001F6918*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F9B1C 001F691C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F9B20 001F6920*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F9B24 001F6924*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F9B28 001F6928*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F9B2C 001F692C*/ PPC::Runtime::ASM::blr();
}