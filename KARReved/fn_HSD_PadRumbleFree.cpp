//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_HSD_PadRumbleFree(PPC::Runtime::GCContext* context)
{
/*80414474 00411274*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80414478 00411278*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041447C 0041127C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80414480 00411280*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80414484 00411284*/ PPC::Runtime::ASM::lis(context->r3, lbl_8058B080 @ Get_MemoryOffset_HighBit);
/*80414488 00411288*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041448C 0041128C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8058B080 @ Get_MemoryOffset_LowBit);
/*80414490 00411290*/ PPC::Runtime::ASM::slwi(context->r31, context->r0, 1);
/*80414494 00411294*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11, context->r3));
/*80414498 00411298*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r31);
/*8041449C 0041129C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r3));
/*804144A0 004112A0*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*804144A4 004112A4*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*804144A8 004112A8*/ PPC::Runtime::ASM::bne(.L_804144E0);
/*804144AC 004112AC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*804144B0 004112B0*/ PPC::Runtime::ASM::lis(context->r5, lbl_8058B080 @ Get_MemoryOffset_HighBit);
/*804144B4 004112B4*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_18058BB88 @ Get_MemoryOffset_HighBit);
/*804144B8 004112B8*/ PPC::Runtime::ASM::addi(context->r0, context->r5, lbl_8058B080 @ Get_MemoryOffset_LowBit);
/*804144BC 004112BC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*804144C0 004112C0*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r31);
/*804144C4 004112C4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_18058BB88 @ Get_MemoryOffset_LowBit);
/*804144C8 004112C8*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r5));
/*804144CC 004112CC*/ PPC::Runtime::ASM::extsb(context->r4, context->r4);
/*804144D0 004112D0*/ PPC::Runtime::ASM::mulli(context->r4, context->r4, 0xc);
/*804144D4 004112D4*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r4);
/*804144D8 004112D8*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*804144DC 004112DC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
RUNTIME_PPC_JUMP_LABEL(.L_804144E0, 0x804144E0) //this is a jump label
/*804144E0 004112E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804144E4 004112E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804144E8 004112E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804144EC 004112EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*804144F0 004112F0*/ PPC::Runtime::ASM::blr();
}