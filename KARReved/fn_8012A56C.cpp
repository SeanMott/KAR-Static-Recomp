//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112058.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_8012A56C(PPC::Runtime::GCContext* context)
{
/*8012A56C 0012736C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012A570 00127370*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012A574 00127374*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1111 @ Get_MemoryOffset_HighBit);
/*8012A578 00127378*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012A57C 0012737C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012A580 00127380*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012A584 00127384*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1111 @ Get_MemoryOffset_LowBit);
/*8012A588 00127388*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012A58C 0012738C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012A590 00127390*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0xd64);
/*8012A594 00127394*/ PPC::Runtime::ASM::bl(fn_80112058);
/*8012A598 00127398*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8012A59C 0012739C*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*8012A5A0 001273A0*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8012A5A4 001273A4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*8012A5A8 001273A8*/ PPC::Runtime::ASM::beq(.L_8012A5E0);
/*8012A5AC 001273AC*/ PPC::Runtime::ASM::bge(.L_8012A604);
/*8012A5B0 001273B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8012A5B4 001273B4*/ PPC::Runtime::ASM::bge(.L_8012A5BC);
/*8012A5B8 001273B8*/ PPC::Runtime::ASM::b(.L_8012A604);
RUNTIME_PPC_JUMP_LABEL(.L_8012A5BC, 0x8012A5BC) //this is a jump label
/*8012A5BC 001273BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8012A5C0 001273C0*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8012A5C4 001273C4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*8012A5C8 001273C8*/ PPC::Runtime::ASM::addi(context->r6, context->r29, 0x4);
/*8012A5CC 001273CC*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0x1c);
/*8012A5D0 001273D0*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8012A5D4 001273D4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8012A5D8 001273D8*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8012A5DC 001273DC*/ PPC::Runtime::ASM::b(.L_8012A624);
RUNTIME_PPC_JUMP_LABEL(.L_8012A5E0, 0x8012A5E0) //this is a jump label
/*8012A5E0 001273E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8012A5E4 001273E4*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8012A5E8 001273E8*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*8012A5EC 001273EC*/ PPC::Runtime::ASM::addi(context->r6, context->r29, 0x4);
/*8012A5F0 001273F0*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0x54);
/*8012A5F4 001273F4*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8012A5F8 001273F8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8012A5FC 001273FC*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8012A600 00127400*/ PPC::Runtime::ASM::b(.L_8012A624);
RUNTIME_PPC_JUMP_LABEL(.L_8012A604, 0x8012A604) //this is a jump label
/*8012A604 00127404*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8012A608 00127408*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8012A60C 0012740C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x70);
/*8012A610 00127410*/ PPC::Runtime::ASM::addi(context->r6, context->r29, 0x4);
/*8012A614 00127414*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0x8c);
/*8012A618 00127418*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8012A61C 0012741C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8012A620 00127420*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_8012A624, 0x8012A624) //this is a jump label
/*8012A624 00127424*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012A628 00127428*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012A62C 0012742C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012A630 00127430*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012A634 00127434*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012A638 00127438*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012A63C 0012743C*/ PPC::Runtime::ASM::blr();
}