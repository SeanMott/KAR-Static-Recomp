//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Interrupt_CheckForJump.hpp"
#include "fn_801A24C8.hpp"
#include "fn_801A234C.hpp"
#include "fn_801BBEBC.hpp"



void fn_Interrupt_AS_RunBrake(PPC::Runtime::GCContext* context)
{
/*801BBDB4 001B8BB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BBDB8 001B8BB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BBDBC 001B8BBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BBDC0 001B8BC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BBDC4 001B8BC4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BBDC8 001B8BC8*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForJump);
/*801BBDCC 001B8BCC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BBDD0 001B8BD0*/ PPC::Runtime::ASM::bne(.L_801BBE04);
/*801BBDD4 001B8BD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
/*801BBDD8 001B8BD8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801BBDDC 001B8BDC*/ PPC::Runtime::ASM::bne(.L_801BBE04);
/*801BBDE0 001B8BE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBDE4 001B8BE4*/ PPC::Runtime::ASM::bl(fn_801A24C8);
/*801BBDE8 001B8BE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BBDEC 001B8BEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBDF0 001B8BF0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*801BBDF4 001B8BF4*/ PPC::Runtime::ASM::bl(fn_801A234C);
/*801BBDF8 001B8BF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBDFC 001B8BFC*/ PPC::Runtime::ASM::bl(fn_801BBEBC);
/*801BBE00 001B8C00*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BBE04, 0x801BBE04) //this is a jump label
/*801BBE04 001B8C04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BBE08 001B8C08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BBE0C 001B8C0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BBE10 001B8C10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BBE14 001B8C14*/ PPC::Runtime::ASM::blr();
}