//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80072430.hpp"



void fn_800BBF14(PPC::Runtime::GCContext* context)
{
/*800BBF14 000B8D14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800BBF18 000B8D18*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BBF1C 000B8D1C*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BBF20 000B8D20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800BBF24 000B8D24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800BBF28 000B8D28*/ PPC::Runtime::ASM::addi(context->r31, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BBF2C 000B8D2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800BBF30 000B8D30*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800BBF34 000B8D34*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BBF38 000B8D38*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_800BBF3C, 0x800BBF3C) //this is a jump label
/*800BBF3C 000B8D3C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800BBF40 000B8D40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0, context->r29));
/*800BBF44 000B8D44*/ PPC::Runtime::ASM::slw(context->r0, context->r0, context->r30);
/*800BBF48 000B8D48*/ PPC::Runtime::ASM::and.(context->r0, context->r3, context->r0);
/*800BBF4C 000B8D4C*/ PPC::Runtime::ASM::beq(.L_800BBF98);
/*800BBF50 000B8D50*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*800BBF54 000B8D54*/ PPC::Runtime::ASM::blt(.L_800BBF60);
/*800BBF58 000B8D58*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*800BBF5C 000B8D5C*/ PPC::Runtime::ASM::blt(.L_800BBF68);
RUNTIME_PPC_JUMP_LABEL(.L_800BBF60, 0x800BBF60) //this is a jump label
/*800BBF60 000B8D60*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BBF64 000B8D64*/ PPC::Runtime::ASM::b(.L_800BBF6C);
RUNTIME_PPC_JUMP_LABEL(.L_800BBF68, 0x800BBF68) //this is a jump label
/*800BBF68 000B8D68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800BBF6C, 0x800BBF6C) //this is a jump label
/*800BBF6C 000B8D6C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BBF70 000B8D70*/ PPC::Runtime::ASM::beq(.L_800BBF7C);
/*800BBF74 000B8D74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BBF78 000B8D78*/ PPC::Runtime::ASM::b(.L_800BBF80);
RUNTIME_PPC_JUMP_LABEL(.L_800BBF7C, 0x800BBF7C) //this is a jump label
/*800BBF7C 000B8D7C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BBF80, 0x800BBF80) //this is a jump label
/*800BBF80 000B8D80*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BBF84 000B8D84*/ PPC::Runtime::ASM::beq(.L_800BBF98);
/*800BBF88 000B8D88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800BBF8C 000B8D8C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BBF90 000B8D90*/ PPC::Runtime::ASM::beq(.L_800BBF98);
/*800BBF94 000B8D94*/ PPC::Runtime::ASM::bl(fn_80072430);
RUNTIME_PPC_JUMP_LABEL(.L_800BBF98, 0x800BBF98) //this is a jump label
/*800BBF98 000B8D98*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*800BBF9C 000B8D9C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*800BBFA0 000B8DA0*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*800BBFA4 000B8DA4*/ PPC::Runtime::ASM::blt(.L_800BBF3C);
/*800BBFA8 000B8DA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800BBFAC 000B8DAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800BBFB0 000B8DB0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800BBFB4 000B8DB4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BBFB8 000B8DB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BBFBC 000B8DBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800BBFC0 000B8DC0*/ PPC::Runtime::ASM::blr();
}