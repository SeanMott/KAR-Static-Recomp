//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80148A04(PPC::Runtime::GCContext* context)
{
/*80148A04 00145804*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80148A08 00145808*/ PPC::Runtime::ASM::mflr(context->r0);
/*80148A0C 0014580C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80148A10 00145810*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80148A14 00145814*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80148A18 00145818*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80148A1C 0014581C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80148A20 00145820*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80148A24, 0x80148A24) //this is a jump label
/*80148A24 00145824*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80148A28 00145828*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80148A2C 0014582C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80148A30 00145830*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80148A34 00145834*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r30));
/*80148A38 00145838*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80148A3C 0014583C*/ PPC::Runtime::ASM::beq(.L_80148A48);
/*80148A40 00145840*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80148A44 00145844*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80148A48, 0x80148A48) //this is a jump label
/*80148A48 00145848*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80148A4C 0014584C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*80148A50 00145850*/ PPC::Runtime::ASM::blt(.L_80148A24);
/*80148A54 00145854*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80148A58 00145858*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80148A5C 0014585C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80148A60 00145860*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80148A64 00145864*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80148A68 00145868*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80148A6C 0014586C*/ PPC::Runtime::ASM::blr();
}