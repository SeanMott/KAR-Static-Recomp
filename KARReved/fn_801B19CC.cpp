//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B1AF8.hpp"
#include "fn_801B2518.hpp"
#include "fn_801B1AF8.hpp"
#include "fn_801B24F8.hpp"
#include "fn_801B2518.hpp"
#include "fn_801B24F8.hpp"



void fn_801B19CC(PPC::Runtime::GCContext* context)
{
/*801B19CC 001AE7CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B19D0 001AE7D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B19D4 001AE7D4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1510 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B19D8 001AE7D8*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*801B19DC 001AE7DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B19E0 001AE7E0*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B19E4 001AE7E4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B19E8 001AE7E8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1514 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B19EC 001AE7EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B19F0 001AE7F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B19F4 001AE7F4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B19F8 001AE7F8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B19FC 001AE7FC*/ PPC::Runtime::ASM::lis(context->r3, fn_801B1AF8 @ Get_MemoryOffset_HighBit);
/*801B1A00 001AE800*/ PPC::Runtime::ASM::lis(context->r4, fn_801B2518 @ Get_MemoryOffset_HighBit);
/*801B1A04 001AE804*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B1AF8 @ Get_MemoryOffset_LowBit);
/*801B1A08 001AE808*/ PPC::Runtime::ASM::lis(context->r3, fn_801B24F8 @ Get_MemoryOffset_HighBit);
/*801B1A0C 001AE80C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7d0, context->r31));
/*801B1A10 001AE810*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801B2518 @ Get_MemoryOffset_LowBit);
/*801B1A14 001AE814*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B24F8 @ Get_MemoryOffset_LowBit);
/*801B1A18 001AE818*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B1A1C 001AE81C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B1A20 001AE820*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B1A24 001AE824*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B1A28 001AE828*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B1A2C 001AE82C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B1A30 001AE830*/ PPC::Runtime::ASM::blr();
}