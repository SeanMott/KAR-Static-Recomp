//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80154090(PPC::Runtime::GCContext* context)
{
/*80154090 00150E90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80154094 00150E94*/ PPC::Runtime::ASM::mflr(context->r0);
/*80154098 00150E98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015409C 00150E9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801540A0 00150EA0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801540A4 00150EA4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801540A8 00150EA8*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*801540AC 00150EAC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801540B0 00150EB0*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*801540B4 00150EB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5e8, context->r31));
/*801540B8 00150EB8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801540BC 00150EBC*/ PPC::Runtime::ASM::beq(.L_801540CC);
/*801540C0 00150EC0*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801540C4 00150EC4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801540C8 00150EC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5e8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801540CC, 0x801540CC) //this is a jump label
/*801540CC 00150ECC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801540D0 00150ED0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801540D4 00150ED4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801540D8 00150ED8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801540DC 00150EDC*/ PPC::Runtime::ASM::blr();
}