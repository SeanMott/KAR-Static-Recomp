//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A4B94.hpp"
#include "fn_801A4BB0.hpp"
#include "fn_801A4B94.hpp"
#include "fn_801A4BB0.hpp"



void fn_801A4A90(PPC::Runtime::GCContext* context)
{
/*801A4A90 001A1890*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x824, context->r3));
/*801A4A94 001A1894*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*801A4A98 001A1898*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r7, 7, 24, 24);
/*801A4A9C 001A189C*/ PPC::Runtime::ASM::lis(context->r5, fn_801A4B94 @ Get_MemoryOffset_HighBit);
/*801A4AA0 001A18A0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x824, context->r3));
/*801A4AA4 001A18A4*/ PPC::Runtime::ASM::lis(context->r4, fn_801A4BB0 @ Get_MemoryOffset_HighBit);
/*801A4AA8 001A18A8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn_801A4B94 @ Get_MemoryOffset_LowBit);
/*801A4AAC 001A18AC*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r3));
/*801A4AB0 001A18B0*/ PPC::Runtime::ASM::rlwimi(context->r6, context->r7, 4, 27, 27);
/*801A4AB4 001A18B4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801A4BB0 @ Get_MemoryOffset_LowBit);
/*801A4AB8 001A18B8*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r3));
/*801A4ABC 001A18BC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r3));
/*801A4AC0 001A18C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r3));
/*801A4AC4 001A18C4*/ PPC::Runtime::ASM::blr();
}