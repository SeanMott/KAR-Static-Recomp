//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "__DVDClearWaitingQueue.hpp"
#include "OSDisableInterrupts.hpp"
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_DVDCancelAsync.hpp"
#include "__DVDPopWaitingQueue.hpp"
#include "fn_DVDCancelAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "stateReady.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn___DVDPrepareResetAsync(PPC::Runtime::GCContext* context)
{
/*803C7D58 003C4B58*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C7D5C 003C4B5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C7D60 003C4B60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803C7D64 003C4B64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C7D68 003C4B68*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C7D6C 003C4B6C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803C7D70 003C4B70*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C7D74 003C4B74*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C7D78 003C4B78*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803C7D7C 003C4B7C*/ PPC::Runtime::ASM::bl(__DVDClearWaitingQueue);
/*803C7D80 003C4B80*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDDC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7D84 003C4B84*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803C7D88 003C4B88*/ PPC::Runtime::ASM::beq(.L_803C7D94);
/*803C7D8C 003C4B8C*/ PPC::Runtime::ASM::stw(context->r30, STRUCT_BYTE4_COUNT_1805DDDCC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7D90 003C4B90*/ PPC::Runtime::ASM::b(.L_803C7E50);
RUNTIME_PPC_JUMP_LABEL(.L_803C7D94, 0x803C7D94) //this is a jump label
/*803C7D94 003C4B94*/ PPC::Runtime::ASM::lwz(context->r3, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7D98 003C4B98*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803C7D9C 003C4B9C*/ PPC::Runtime::ASM::beq(.L_803C7DA8);
/*803C7DA0 003C4BA0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C7DA4 003C4BA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803C7DA8, 0x803C7DA8) //this is a jump label
/*803C7DA8 003C4BA8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C7DAC 003C4BAC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803C7DB0 003C4BB0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C7DB4 003C4BB4*/ PPC::Runtime::ASM::lwz(context->r0, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7DB8 003C4BB8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C7DBC 003C4BBC*/ PPC::Runtime::ASM::stw(context->r4, PauseFlag_805DDDB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7DC0 003C4BC0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803C7DC4 003C4BC4*/ PPC::Runtime::ASM::bne(.L_803C7DCC);
/*803C7DC8 003C4BC8*/ PPC::Runtime::ASM::stw(context->r4, PausingFlag_805DDDB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803C7DCC, 0x803C7DCC) //this is a jump label
/*803C7DCC 003C4BCC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C7DD0 003C4BD0*/ PPC::Runtime::ASM::b(.L_803C7DDC);
RUNTIME_PPC_JUMP_LABEL(.L_803C7DD4, 0x803C7DD4) //this is a jump label
/*803C7DD4 003C4BD4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C7DD8 003C4BD8*/ PPC::Runtime::ASM::bl(fn_DVDCancelAsync);
RUNTIME_PPC_JUMP_LABEL(.L_803C7DDC, 0x803C7DDC) //this is a jump label
/*803C7DDC 003C4BDC*/ PPC::Runtime::ASM::bl(__DVDPopWaitingQueue);
/*803C7DE0 003C4BE0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803C7DE4 003C4BE4*/ PPC::Runtime::ASM::bne(.L_803C7DD4);
/*803C7DE8 003C4BE8*/ PPC::Runtime::ASM::lwz(context->r3, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7DEC 003C4BEC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803C7DF0 003C4BF0*/ PPC::Runtime::ASM::beq(.L_803C7E00);
/*803C7DF4 003C4BF4*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*803C7DF8 003C4BF8*/ PPC::Runtime::ASM::bl(fn_DVDCancelAsync);
/*803C7DFC 003C4BFC*/ PPC::Runtime::ASM::b(.L_803C7E1C);
RUNTIME_PPC_JUMP_LABEL(.L_803C7E00, 0x803C7E00) //this is a jump label
/*803C7E00 003C4C00*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*803C7E04 003C4C04*/ PPC::Runtime::ASM::beq(.L_803C7E1C);
/*803C7E08 003C4C08*/ PPC::Runtime::ASM::addi(context->r12, context->r30, 0x0);
/*803C7E0C 003C4C0C*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803C7E10 003C4C10*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C7E14 003C4C14*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/* 803C7E18 003C4C18  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803C7E1C, 0x803C7E1C) //this is a jump label
/*803C7E1C 003C4C1C*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C7E20 003C4C20*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C7E24 003C4C24*/ PPC::Runtime::ASM::stw(context->r4, PauseFlag_805DDDB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7E28 003C4C28*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803C7E2C 003C4C2C*/ PPC::Runtime::ASM::lwz(context->r0, PausingFlag_805DDDB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7E30 003C4C30*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803C7E34 003C4C34*/ PPC::Runtime::ASM::beq(.L_803C7E40);
/*803C7E38 003C4C38*/ PPC::Runtime::ASM::stw(context->r4, PausingFlag_805DDDB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C7E3C 003C4C3C*/ PPC::Runtime::ASM::bl(stateReady);
RUNTIME_PPC_JUMP_LABEL(.L_803C7E40, 0x803C7E40) //this is a jump label
/*803C7E40 003C4C40*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C7E44 003C4C44*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C7E48 003C4C48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803C7E4C 003C4C4C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
RUNTIME_PPC_JUMP_LABEL(.L_803C7E50, 0x803C7E50) //this is a jump label
/*803C7E50 003C4C50*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803C7E54 003C4C54*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C7E58 003C4C58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C7E5C 003C4C5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C7E60 003C4C60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C7E64 003C4C64*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C7E68 003C4C68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803C7E6C 003C4C6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C7E70 003C4C70*/ PPC::Runtime::ASM::blr();
}