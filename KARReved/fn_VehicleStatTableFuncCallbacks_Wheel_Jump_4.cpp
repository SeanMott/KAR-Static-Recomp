//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801F8558.hpp"
#include "fn_801CF60C.hpp"
#include "fn_checkMachineStuck.hpp"
#include "fn_801D0BE4.hpp"
#include "fn_801D0C08.hpp"
#include "fn_801D2D2C.hpp"
#include "fn_801E6848.hpp"
#include "fn_801E3E48.hpp"
#include "fn_801F7D54.hpp"
#include "fn_801F8874.hpp"
#include "fn_801F9454.hpp"
#include "fn_801FAE30.hpp"



void fn_VehicleStatTableFuncCallbacks_Wheel_Jump_4(PPC::Runtime::GCContext* context)
{
/*801FAA88 001F7888*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FAA8C 001F788C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FAA90 001F7890*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FAA94 001F7894*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FAA98 001F7898*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FAA9C 001F789C*/ PPC::Runtime::ASM::bl(fn_801F8558);
/*801FAAA0 001F78A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAAA4 001F78A4*/ PPC::Runtime::ASM::bl(fn_801CF60C);
/*801FAAA8 001F78A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAAAC 001F78AC*/ PPC::Runtime::ASM::bl(fn_checkMachineStuck);
/*801FAAB0 001F78B0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FAAB4 001F78B4*/ PPC::Runtime::ASM::bne(.L_801FAB2C);
/*801FAAB8 001F78B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAABC 001F78BC*/ PPC::Runtime::ASM::bl(fn_801D0BE4);
/*801FAAC0 001F78C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAAC4 001F78C4*/ PPC::Runtime::ASM::bl(fn_801D0C08);
/*801FAAC8 001F78C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAACC 001F78CC*/ PPC::Runtime::ASM::bl(fn_801D2D2C);
/*801FAAD0 001F78D0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FAAD4 001F78D4*/ PPC::Runtime::ASM::bne(.L_801FAB2C);
/*801FAAD8 001F78D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAADC 001F78DC*/ PPC::Runtime::ASM::bl(fn_801E6848);
/*801FAAE0 001F78E0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FAAE4 001F78E4*/ PPC::Runtime::ASM::bne(.L_801FAB2C);
/*801FAAE8 001F78E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAAEC 001F78EC*/ PPC::Runtime::ASM::bl(fn_801E3E48);
/*801FAAF0 001F78F0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FAAF4 001F78F4*/ PPC::Runtime::ASM::beq(.L_801FAB20);
/*801FAAF8 001F78F8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/* 801FAAFC 001F78FC  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*801FAB00 001F7900*/ PPC::Runtime::ASM::beq(.L_801FAB14);
/*801FAB04 001F7904*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAB08 001F7908*/ PPC::Runtime::ASM::bl(fn_801F7D54);
/*801FAB0C 001F790C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAB10 001F7910*/ PPC::Runtime::ASM::bl(fn_801F8874);
RUNTIME_PPC_JUMP_LABEL(.L_801FAB14, 0x801FAB14) //this is a jump label
/*801FAB14 001F7914*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAB18 001F7918*/ PPC::Runtime::ASM::bl(fn_801F9454);
/*801FAB1C 001F791C*/ PPC::Runtime::ASM::b(.L_801FAB2C);
RUNTIME_PPC_JUMP_LABEL(.L_801FAB20, 0x801FAB20) //this is a jump label
/*801FAB20 001F7920*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAB24 001F7924*/ PPC::Runtime::ASM::bl(fn_801FAE30);
/*801FAB28 001F7928*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801FAB2C, 0x801FAB2C) //this is a jump label
/*801FAB2C 001F792C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FAB30 001F7930*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FAB34 001F7934*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FAB38 001F7938*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FAB3C 001F793C*/ PPC::Runtime::ASM::blr();
}