//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8031DF54.hpp"
#include "fn_80328894.hpp"



void fn_80325C00(PPC::Runtime::GCContext* context)
{
/*80325C00 00322A00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*80325C04 00322A04*/ PPC::Runtime::ASM::mflr(context->r0);
/*80325C08 00322A08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80325C0C 00322A0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80325C10 00322A10*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80325C14 00322A14*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80325C18 00322A18*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80325C1C 00322A1C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x2c);
/*80325C20 00322A20*/ PPC::Runtime::ASM::bl(fn_8031DF54);
/*80325C24 00322A24*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E30C4 @ Get_MemoryOffset_HighBit);
/*80325C28 00322A28*/ PPC::Runtime::ASM::lwzu(context->r5, lbl_804E30C4 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80325C2C 00322A2C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80325C30 00322A30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80325C34 00322A34*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80325C38 00322A38*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80325C3C 00322A3C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80325C40 00322A40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*80325C44 00322A44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80325C48 00322A48*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80325C4C 00322A4C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80325C50 00322A50*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*80325C54 00322A54*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80325C58 00322A58*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80325C5C 00322A5C*/ PPC::Runtime::ASM::b(.L_80325C74);
RUNTIME_PPC_JUMP_LABEL(.L_80325C60, 0x80325C60) //this is a jump label
/*80325C60 00322A60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80325C64 00322A64*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x20);
/*80325C68 00322A68*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*80325C6C 00322A6C*/ PPC::Runtime::ASM::nop();
/*80325C70 00322A70*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_80325C74, 0x80325C74) //this is a jump label
/*80325C74 00322A74*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*80325C78 00322A78*/ PPC::Runtime::ASM::bne(.L_80325C60);
/*80325C7C 00322A7C*/ PPC::Runtime::ASM::addi(context->r7, context->r29, 0x1c);
/*80325C80 00322A80*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*80325C84 00322A84*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80325C88 00322A88*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x10);
/*80325C8C 00322A8C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*80325C90 00322A90*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x10);
/*80325C94 00322A94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r29));
/*80325C98 00322A98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80325C9C 00322A9C*/ PPC::Runtime::ASM::bl(fn_80328894);
/*80325CA0 00322AA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80325CA4 00322AA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80325CA8 00322AA8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80325CAC 00322AAC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80325CB0 00322AB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80325CB4 00322AB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80325CB8 00322AB8*/ PPC::Runtime::ASM::blr();
}