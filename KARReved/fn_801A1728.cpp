//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8027A13C.hpp"



void fn_801A1728(PPC::Runtime::GCContext* context)
{
/*801A1728 0019E528*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A172C 0019E52C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A1730 0019E530*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E1268 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A1734 0019E534*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A1738 0019E538*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*801A173C 0019E53C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1260 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A1740 0019E540*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A1744 0019E544*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A1748 0019E548*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58c, context->r3));
/*801A174C 0019E54C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A1750 0019E550*/ PPC::Runtime::ASM::xoris(context->r0, context->r3, 0x8000);
/*801A1754 0019E554*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A1758 0019E558*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A175C 0019E55C*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f2);
/*801A1760 0019E560*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801A1764 0019E564*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801A1768 0019E568*/ PPC::Runtime::ASM::bne(.L_801A1774);
/*801A176C 0019E56C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1770 0019E570*/ PPC::Runtime::ASM::bl(fn_8027A13C);
RUNTIME_PPC_JUMP_LABEL(.L_801A1774, 0x801A1774) //this is a jump label
/*801A1774 0019E574*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A1778 0019E578*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58c, context->r31));
/*801A177C 0019E57C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A1780 0019E580*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A1784 0019E584*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A1788 0019E588*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A178C 0019E58C*/ PPC::Runtime::ASM::blr();
}