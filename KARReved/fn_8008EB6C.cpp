//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800BC370.hpp"
#include "fn_800BABD0.hpp"
#include "fn_8000AA8C.hpp"
#include "fn_removeHUD.hpp"
#include "fn_80113A98.hpp"
#include "fn_800B989C.hpp"



void fn_8008EB6C(PPC::Runtime::GCContext* context)
{
/*8008EB6C 0008B96C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8008EB70 0008B970*/ PPC::Runtime::ASM::mflr(context->r0);
/*8008EB74 0008B974*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*8008EB78 0008B978*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008EB7C 0008B97C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8008EB80 0008B980*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*8008EB84 0008B984*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008EB88 0008B988*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EB8C, 0x8008EB8C) //this is a jump label
/*8008EB8C 0008B98C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8008EB90 0008B990*/ PPC::Runtime::ASM::blt(.L_8008EB9C);
/*8008EB94 0008B994*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*8008EB98 0008B998*/ PPC::Runtime::ASM::blt(.L_8008EBA4);
RUNTIME_PPC_JUMP_LABEL(.L_8008EB9C, 0x8008EB9C) //this is a jump label
/*8008EB9C 0008B99C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8008EBA0 0008B9A0*/ PPC::Runtime::ASM::b(.L_8008EBA8);
RUNTIME_PPC_JUMP_LABEL(.L_8008EBA4, 0x8008EBA4) //this is a jump label
/*8008EBA4 0008B9A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8008EBA8, 0x8008EBA8) //this is a jump label
/*8008EBA8 0008B9A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8008EBAC 0008B9AC*/ PPC::Runtime::ASM::beq(.L_8008EBB8);
/*8008EBB0 0008B9B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8008EBB4 0008B9B4*/ PPC::Runtime::ASM::b(.L_8008EBBC);
RUNTIME_PPC_JUMP_LABEL(.L_8008EBB8, 0x8008EBB8) //this is a jump label
/*8008EBB8 0008B9B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EBBC, 0x8008EBBC) //this is a jump label
/*8008EBBC 0008B9BC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8008EBC0 0008B9C0*/ PPC::Runtime::ASM::beq(.L_8008EBCC);
/*8008EBC4 0008B9C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8008EBC8 0008B9C8*/ PPC::Runtime::ASM::b(.L_8008EBD0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EBCC, 0x8008EBCC) //this is a jump label
/*8008EBCC 0008B9CC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EBD0, 0x8008EBD0) //this is a jump label
/*8008EBD0 0008B9D0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8008EBD4 0008B9D4*/ PPC::Runtime::ASM::beq(.L_8008EBEC);
/*8008EBD8 0008B9D8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8008EBDC 0008B9DC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*8008EBE0 0008B9E0*/ PPC::Runtime::ASM::bl(fn_800BC370);
/*8008EBE4 0008B9E4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8008EBE8 0008B9E8*/ PPC::Runtime::ASM::bl(fn_800BABD0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EBEC, 0x8008EBEC) //this is a jump label
/*8008EBEC 0008B9EC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8008EBF0 0008B9F0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*8008EBF4 0008B9F4*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*8008EBF8 0008B9F8*/ PPC::Runtime::ASM::blt(.L_8008EB8C);
/*8008EBFC 0008B9FC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8008EC00 0008BA00*/ PPC::Runtime::ASM::bl(fn_8000AA8C);
/*8008EC04 0008BA04*/ PPC::Runtime::ASM::bl(fn_removeHUD);
/*8008EC08 0008BA08*/ PPC::Runtime::ASM::bl(fn_80113A98);
/*8008EC0C 0008BA0C*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8008EC10 0008BA10*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8008EC14 0008BA14*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8008EC18 0008BA18*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*8008EC1C 0008BA1C*/ PPC::Runtime::ASM::bl(fn_800B989C);
/*8008EC20 0008BA20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008EC24 0008BA24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8008EC28 0008BA28*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008EC2C 0008BA2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8008EC30 0008BA30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8008EC34 0008BA34*/ PPC::Runtime::ASM::blr();
}