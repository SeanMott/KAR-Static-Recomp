//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80260460(PPC::Runtime::GCContext* context)
{
/*80260460 0025D260*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80260464 0025D264*/ PPC::Runtime::ASM::mflr(context->r0);
/*80260468 0025D268*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8026046C 0025D26C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260470 0025D270*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260474 0025D274*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80260478 0025D278*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8026047C 0025D27C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260480 0025D280*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80260484 0025D284*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260488 0025D288*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8026048C 0025D28C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80260490 0025D290*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260494 0025D294*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260498 0025D298*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8026049C 0025D29C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802604A0 0025D2A0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*802604A4 0025D2A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802604A8 0025D2A8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802604AC 0025D2AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*802604B0 0025D2B0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802604B4 0025D2B4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*802604B8 0025D2B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802604BC 0025D2BC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F74 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802604C0 0025D2C0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802604C4 0025D2C4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802604C8 0025D2C8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F70 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802604CC 0025D2CC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802604D0 0025D2D0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802604D4 0025D2D4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*802604D8 0025D2D8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802604DC 0025D2DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802604E0 0025D2E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802604E4 0025D2E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802604E8 0025D2E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802604EC 0025D2EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802604F0 0025D2F0*/ PPC::Runtime::ASM::blr();
}