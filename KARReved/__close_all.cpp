//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__begin_critical_region.hpp"
#include "fn_fclose.hpp"
#include "fn_free.hpp"
#include "__end_critical_region.hpp"



void __close_all(PPC::Runtime::GCContext* context)
{
/*803AFFEC 003ACDEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803AFFF0 003ACDF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803AFFF4 003ACDF4*/ PPC::Runtime::ASM::lis(context->r4, __files @ Get_MemoryOffset_HighBit);
/*803AFFF8 003ACDF8*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803AFFFC 003ACDFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B0000 003ACE00*/ PPC::Runtime::ASM::addi(context->r0, context->r4, __files @ Get_MemoryOffset_LowBit);
/*803B0004 003ACE04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B0008 003ACE08*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803B000C 003ACE0C*/ PPC::Runtime::ASM::bl(__begin_critical_region);
/*803B0010 003ACE10*/ PPC::Runtime::ASM::b(.L_803B0070);
RUNTIME_PPC_JUMP_LABEL(.L_803B0014, 0x803B0014) //this is a jump label
/*803B0014 003ACE14*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/* 803B0018 003ACE18  54 00 D7 7F */ extrwi. context->r0 , context->r0 , 3 , 23
/*803B001C 003ACE1C*/ PPC::Runtime::ASM::beq(.L_803B0028);
/*803B0020 003ACE20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803B0024 003ACE24*/ PPC::Runtime::ASM::bl(fn_fclose);
RUNTIME_PPC_JUMP_LABEL(.L_803B0028, 0x803B0028) //this is a jump label
/*803B0028 003ACE28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803B002C 003ACE2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*803B0030 003ACE30*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*803B0034 003ACE34*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803B0038 003ACE38*/ PPC::Runtime::ASM::beq(.L_803B0044);
/*803B003C 003ACE3C*/ PPC::Runtime::ASM::bl(fn_free);
/*803B0040 003ACE40*/ PPC::Runtime::ASM::b(.L_803B0070);
RUNTIME_PPC_JUMP_LABEL(.L_803B0044, 0x803B0044) //this is a jump label
/*803B0044 003ACE44*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803B0048 003ACE48*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*803B004C 003ACE4C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 6, 23, 25);
/*803B0050 003ACE50*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*803B0054 003ACE54*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803B0058 003ACE58*/ PPC::Runtime::ASM::beq(.L_803B0070);
/*803B005C 003ACE5C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803B0060 003ACE60*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803B0064 003ACE64*/ PPC::Runtime::ASM::beq(.L_803B0070);
/*803B0068 003ACE68*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803B006C 003ACE6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803B0070, 0x803B0070) //this is a jump label
/*803B0070 003ACE70*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*803B0074 003ACE74*/ PPC::Runtime::ASM::bne(.L_803B0014);
/*803B0078 003ACE78*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803B007C 003ACE7C*/ PPC::Runtime::ASM::bl(__end_critical_region);
/*803B0080 003ACE80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B0084 003ACE84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B0088 003ACE88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B008C 003ACE8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803B0090 003ACE90*/ PPC::Runtime::ASM::blr();
}