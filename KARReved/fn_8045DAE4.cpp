//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8045D6A4.hpp"
#include "OSReport.hpp"



void fn_8045DAE4(PPC::Runtime::GCContext* context)
{
/*8045DAE4 0045A8E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8045DAE8 0045A8E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045DAEC 0045A8EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045DAF0 0045A8F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045DAF4 0045A8F4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8045DAF8 0045A8F8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8045DAFC 0045A8FC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8045DB00 0045A900*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x3f);
/*8045DB04 0045A904*/ PPC::Runtime::ASM::slwi(context->r3, context->r4, 4);
/*8045DB08 0045A908*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r0, 6);
/*8045DB0C 0045A90C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DB10 0045A910*/ PPC::Runtime::ASM::mullw(context->r4, context->r0, context->r31);
/*8045DB14 0045A914*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1f);
/*8045DB18 0045A918*/ PPC::Runtime::ASM::clrrwi(context->r29, context->r0, 5);
/*8045DB1C 0045A91C*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x40);
/*8045DB20 0045A920*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r29);
/*8045DB24 0045A924*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x3f);
/*8045DB28 0045A928*/ PPC::Runtime::ASM::clrrwi(context->r3, context->r0, 5);
/*8045DB2C 0045A92C*/ PPC::Runtime::ASM::bl(fn_8045D6A4);
/*8045DB30 0045A930*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8045DB34 0045A934*/ PPC::Runtime::ASM::bne(.L_8045DB50);
/*8045DB38 0045A938*/ PPC::Runtime::ASM::lis(context->r3, lbl_805323F8 @ Get_MemoryOffset_HighBit);
/*8045DB3C 0045A93C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805323F8 @ Get_MemoryOffset_LowBit);
/*8045DB40 0045A940*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8045DB44 0045A944*/ PPC::Runtime::ASM::bl(OSReport);
/*8045DB48 0045A948*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8045DB4C 0045A94C*/ PPC::Runtime::ASM::b(.L_8045DBE4);
RUNTIME_PPC_JUMP_LABEL(.L_8045DB50, 0x8045DB50) //this is a jump label
/*8045DB50 0045A950*/ PPC::Runtime::ASM::addi(context->r7, context->r3, 0x20);
/*8045DB54 0045A954*/ PPC::Runtime::ASM::addi(context->r0, context->r29, 0x3f);
/*8045DB58 0045A958*/ PPC::Runtime::ASM::add(context->r0, context->r7, context->r0);
/*8045DB5C 0045A95C*/ PPC::Runtime::ASM::subi(context->r5, context->r31, 0x1);
/*8045DB60 0045A960*/ PPC::Runtime::ASM::mr(context->r6, context->r7);
/*8045DB64 0045A964*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*8045DB68 0045A968*/ PPC::Runtime::ASM::clrrwi(context->r8, context->r0, 6);
/*8045DB6C 0045A96C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8045DB70 0045A970*/ PPC::Runtime::ASM::mtctr(context->r31);
/*8045DB74 0045A974*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8045DB78 0045A978*/ PPC::Runtime::ASM::ble(.L_8045DBC0);
RUNTIME_PPC_JUMP_LABEL(.L_8045DB7C, 0x8045DB7C) //this is a jump label
/*8045DB7C 0045A97C*/ PPC::Runtime::ASM::cmplw(context->r9, context->r5);
/*8045DB80 0045A980*/ PPC::Runtime::ASM::bne(.L_8045DB8C);
/*8045DB84 0045A984*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8045DB88 0045A988*/ PPC::Runtime::ASM::b(.L_8045DB9C);
RUNTIME_PPC_JUMP_LABEL(.L_8045DB8C, 0x8045DB8C) //this is a jump label
/*8045DB8C 0045A98C*/ PPC::Runtime::ASM::addi(context->r0, context->r9, 0x1);
/*8045DB90 0045A990*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 4);
/*8045DB94 0045A994*/ PPC::Runtime::ASM::add(context->r0, context->r7, context->r0);
/*8045DB98 0045A998*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8045DB9C, 0x8045DB9C) //this is a jump label
/*8045DB9C 0045A99C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*8045DBA0 0045A9A0*/ PPC::Runtime::ASM::addi(context->r9, context->r9, 0x1);
/*8045DBA4 0045A9A4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r6));
/*8045DBA8 0045A9A8*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r6));
/*8045DBAC 0045A9AC*/ PPC::Runtime::ASM::add(context->r8, context->r8, context->r30);
/*8045DBB0 0045A9B0*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x3f);
/*8045DBB4 0045A9B4*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x10);
/*8045DBB8 0045A9B8*/ PPC::Runtime::ASM::clrrwi(context->r8, context->r0, 6);
/*8045DBBC 0045A9BC*/ PPC::Runtime::ASM::bdnz(.L_8045DB7C);
RUNTIME_PPC_JUMP_LABEL(.L_8045DBC0, 0x8045DBC0) //this is a jump label
/*8045DBC0 0045A9C0*/ PPC::Runtime::ASM::subi(context->r0, context->r31, 0x1);
/*8045DBC4 0045A9C4*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8045DBC8 0045A9C8*/ PPC::Runtime::ASM::slwi(context->r4, context->r0, 4);
/*8045DBCC 0045A9CC*/ PPC::Runtime::ASM::add(context->r4, context->r7, context->r4);
/*8045DBD0 0045A9D0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8045DBD4 0045A9D4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8045DBD8 0045A9D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8045DBDC 0045A9DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8045DBE0 0045A9E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8045DBE4, 0x8045DBE4) //this is a jump label
/*8045DBE4 0045A9E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045DBE8 0045A9E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045DBEC 0045A9EC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8045DBF0 0045A9F0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DBF4 0045A9F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045DBF8 0045A9F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8045DBFC 0045A9FC*/ PPC::Runtime::ASM::blr();
}