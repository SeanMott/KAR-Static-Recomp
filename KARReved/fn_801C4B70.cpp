//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80236C40.hpp"
#include "fn_801C4E9C.hpp"
#include "fn_801C4EB0.hpp"
#include "fn_801C4E9C.hpp"
#include "fn_801C4EB0.hpp"
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801C4CBC.hpp"



void fn_801C4B70(PPC::Runtime::GCContext* context)
{
/*801C4B70 001C1970*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C4B74 001C1974*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C4B78 001C1978*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4B7C 001C197C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4B80 001C1980*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C4B84 001C1984*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r3));
/*801C4B88 001C1988*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801C4B8C 001C198C*/ PPC::Runtime::ASM::beq(.L_801C4BDC);
/*801C4B90 001C1990*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801C4B94 001C1994*/ PPC::Runtime::ASM::lis(context->r4, 0x6);
/*801C4B98 001C1998*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801C4B9C 001C199C*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x5aa0);
/*801C4BA0 001C19A0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x440, context->r31));
/*801C4BA4 001C19A4*/ PPC::Runtime::ASM::li(context->r6, 0xc8);
/*801C4BA8 001C19A8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*801C4BAC 001C19AC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801C4BB0 001C19B0*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801C4BB4 001C19B4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44c, context->r31));
/*801C4BB8 001C19B8*/ PPC::Runtime::ASM::lis(context->r5, fn_801C4E9C @ Get_MemoryOffset_HighBit);
/*801C4BBC 001C19BC*/ PPC::Runtime::ASM::lis(context->r4, fn_801C4EB0 @ Get_MemoryOffset_HighBit);
/*801C4BC0 001C19C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801C4BC4 001C19C4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x448, context->r31));
/*801C4BC8 001C19C8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn_801C4E9C @ Get_MemoryOffset_LowBit);
/*801C4BCC 001C19CC*/ PPC::Runtime::ASM::addi(context->r3, context->r4, fn_801C4EB0 @ Get_MemoryOffset_LowBit);
/*801C4BD0 001C19D0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x800, context->r31));
/*801C4BD4 001C19D4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x804, context->r31));
/*801C4BD8 001C19D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C4BDC, 0x801C4BDC) //this is a jump label
/*801C4BDC 001C19DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4BE0 001C19E0*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801C4BE4 001C19E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C4BE8 001C19E8*/ PPC::Runtime::ASM::beq(.L_801C4BF4);
/*801C4BEC 001C19EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4BF0 001C19F0*/ PPC::Runtime::ASM::bl(fn_801C4CBC);
RUNTIME_PPC_JUMP_LABEL(.L_801C4BF4, 0x801C4BF4) //this is a jump label
/*801C4BF4 001C19F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4BF8 001C19F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4BFC 001C19FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C4C00 001C1A00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C4C04 001C1A04*/ PPC::Runtime::ASM::blr();
}