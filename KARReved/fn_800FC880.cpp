//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7954.hpp"
#include "fn_800D7954.hpp"
#include "fn_800D79C0.hpp"
#include "fn_800E86CC.hpp"
#include "fn_800F7870.hpp"
#include "fn_800FC9C0.hpp"



void fn_800FC880(PPC::Runtime::GCContext* context)
{
/*800FC880 000F9680*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FC884 000F9684*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FC888 000F9688*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FC88C 000F968C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FC890 000F9690*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800FC894 000F9694*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800FC898 000F9698*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*800FC89C 000F969C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FC8A0 000F96A0*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FC8A4 000F96A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FC8A8 000F96A8*/ PPC::Runtime::ASM::addi(context->r27, context->r4, 0x54);
/*800FC8AC 000F96AC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800FC8B0 000F96B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FC8B4 000F96B4*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800FC8B8 000F96B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800FC8BC 000F96BC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FC8C0 000F96C0*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*800FC8C4 000F96C4*/ PPC::Runtime::ASM::bl(fn_800D7954);
/*800FC8C8 000F96C8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*800FC8CC 000F96CC*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800FC8D0 000F96D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800FC8D4 000F96D4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800FC8D8 000F96D8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FC8DC 000F96DC*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*800FC8E0 000F96E0*/ PPC::Runtime::ASM::bl(fn_800D7954);
/*800FC8E4 000F96E4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*800FC8E8 000F96E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*800FC8EC 000F96EC*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800FC8F0 000F96F0*/ PPC::Runtime::ASM::beq(.L_800FC940);
/*800FC8F4 000F96F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800FC8F8 000F96F8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FC8FC 000F96FC*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800FC900 000F9700*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FC904 000F9704*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*800FC908 000F9708*/ PPC::Runtime::ASM::bl(fn_800D79C0);
/*800FC90C 000F970C*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800FC910 000F9710*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800FC914 000F9714*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800FC918 000F9718*/ PPC::Runtime::ASM::bne(.L_800FC934);
/*800FC91C 000F971C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1005 @ Get_MemoryOffset_HighBit);
/*800FC920 000F9720*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_1006 @ Get_MemoryOffset_HighBit);
/*800FC924 000F9724*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1005 @ Get_MemoryOffset_LowBit);
/*800FC928 000F9728*/ PPC::Runtime::ASM::li(context->r4, 0x5b);
/*800FC92C 000F972C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_1006 @ Get_MemoryOffset_LowBit);
/*800FC930 000F9730*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FC934, 0x800FC934) //this is a jump label
/*800FC934 000F9734*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r27));
/*800FC938 000F9738*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FC93C 000F973C*/ PPC::Runtime::ASM::b(.L_800FC948);
RUNTIME_PPC_JUMP_LABEL(.L_800FC940, 0x800FC940) //this is a jump label
/*800FC940 000F9740*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FC944 000F9744*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800FC948, 0x800FC948) //this is a jump label
/*800FC948 000F9748*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800FC94C 000F974C*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800FC950 000F9750*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r30));
/*800FC954 000F9754*/ PPC::Runtime::ASM::b(.L_800FC974);
RUNTIME_PPC_JUMP_LABEL(.L_800FC958, 0x800FC958) //this is a jump label
/*800FC958 000F9758*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*800FC95C 000F975C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800FC960 000F9760*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800FC964 000F9764*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r27);
/*800FC968 000F9768*/ PPC::Runtime::ASM::bl(fn_800E86CC);
/*800FC96C 000F976C*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*800FC970 000F9770*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FC974, 0x800FC974) //this is a jump label
/*800FC974 000F9774*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*800FC978 000F9778*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800FC97C 000F977C*/ PPC::Runtime::ASM::blt(.L_800FC958);
/*800FC980 000F9780*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FC984 000F9784*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800FC988 000F9788*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800FC98C 000F978C*/ PPC::Runtime::ASM::beq(.L_800FC9A0);
/*800FC990 000F9790*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800FC994 000F9794*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FC998 000F9798*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FC99C 000F979C*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_800FC9A0, 0x800FC9A0) //this is a jump label
/*800FC9A0 000F97A0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FC9A4 000F97A4*/ PPC::Runtime::ASM::bl(fn_800FC9C0);
/*800FC9A8 000F97A8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FC9AC 000F97AC*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800FC9B0 000F97B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FC9B4 000F97B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FC9B8 000F97B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FC9BC 000F97BC*/ PPC::Runtime::ASM::blr();
}