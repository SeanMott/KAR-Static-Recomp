//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80475590.hpp"
#include "fn_80475590.hpp"
#include "fn_TCPReceiveExAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_804766F0(PPC::Runtime::GCContext* context)
{
/*804766F0 004734F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*804766F4 004734F4*/ PPC::Runtime::ASM::lis(context->r7, fn_80475590 @ Get_MemoryOffset_HighBit);
/*804766F8 004734F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*804766FC 004734FC*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn_80475590 @ Get_MemoryOffset_LowBit);
/*80476700 00473500*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*80476704 00473504*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80476708 00473508*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x18);
/*8047670C 0047350C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80476710 00473510*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*80476714 00473514*/ PPC::Runtime::ASM::bl(fn_TCPReceiveExAsync);
/*80476718 00473518*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8047671C 0047351C*/ PPC::Runtime::ASM::bge(.L_80476724);
/*80476720 00473520*/ PPC::Runtime::ASM::b(.L_80476750);
RUNTIME_PPC_JUMP_LABEL(.L_80476724, 0x80476724) //this is a jump label
/*80476724 00473524*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80476728 00473528*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8047672C 0047352C*/ PPC::Runtime::ASM::b(.L_80476738);
RUNTIME_PPC_JUMP_LABEL(.L_80476730, 0x80476730) //this is a jump label
/*80476730 00473530*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*80476734 00473534*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_80476738, 0x80476738) //this is a jump label
/*80476738 00473538*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8047673C 0047353C*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80476740 00473540*/ PPC::Runtime::ASM::beq(.L_80476730);
/*80476744 00473544*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80476748 00473548*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8047674C 0047354C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_80476750, 0x80476750) //this is a jump label
/*80476750 00473550*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80476754 00473554*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80476758 00473558*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8047675C 0047355C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*80476760 00473560*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80476764 00473564*/ PPC::Runtime::ASM::blr();
}