//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A370(PPC::Runtime::GCContext* context)
{
/*8000A370 00007170*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8000A374 00007174*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A378 00007178*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000A37C 0000717C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8000A380 00007180*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000A384 00007184*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A388 00007188*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8000A38C 0000718C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8000A390 00007190*/ PPC::Runtime::ASM::cmpw(context->r0, context->r31);
/*8000A394 00007194*/ PPC::Runtime::ASM::beq(.L_8000A3FC);
/*8000A398 00007198*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac8, context->r3));
/*8000A39C 0000719C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*8000A3A0 000071A0*/ PPC::Runtime::ASM::beq(.L_8000A3A8);
/*8000A3A4 000071A4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000A3A8, 0x8000A3A8) //this is a jump label
/*8000A3A8 000071A8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8000A3AC 000071AC*/ PPC::Runtime::ASM::cmpw(context->r0, context->r31);
/*8000A3B0 000071B0*/ PPC::Runtime::ASM::beq(.L_8000A3FC);
/*8000A3B4 000071B4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaf8, context->r3));
/*8000A3B8 000071B8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*8000A3BC 000071BC*/ PPC::Runtime::ASM::beq(.L_8000A3C4);
/*8000A3C0 000071C0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000A3C4, 0x8000A3C4) //this is a jump label
/*8000A3C4 000071C4*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*8000A3C8 000071C8*/ PPC::Runtime::ASM::cmpw(context->r0, context->r31);
/*8000A3CC 000071CC*/ PPC::Runtime::ASM::beq(.L_8000A3FC);
/*8000A3D0 000071D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb28, context->r3));
/*8000A3D4 000071D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*8000A3D8 000071D8*/ PPC::Runtime::ASM::beq(.L_8000A3E0);
/*8000A3DC 000071DC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000A3E0, 0x8000A3E0) //this is a jump label
/*8000A3E0 000071E0*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*8000A3E4 000071E4*/ PPC::Runtime::ASM::cmpw(context->r0, context->r31);
/*8000A3E8 000071E8*/ PPC::Runtime::ASM::beq(.L_8000A3FC);
/*8000A3EC 000071EC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb58, context->r3));
/*8000A3F0 000071F0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*8000A3F4 000071F4*/ PPC::Runtime::ASM::beq(.L_8000A3FC);
/*8000A3F8 000071F8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000A3FC, 0x8000A3FC) //this is a jump label
/*8000A3FC 000071FC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa95, context->r3));
/*8000A400 00007200*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*8000A404 00007204*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000A408 00007208*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*8000A40C 0000720C*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805DE748 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000A410 00007210*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*8000A414 00007214*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DE750 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000A418 00007218*/ PPC::Runtime::ASM::subf(context->r0, context->r4, context->r0);
/*8000A41C 0000721C*/ PPC::Runtime::ASM::xoris(context->r0, context->r0, 0x8000);
/*8000A420 00007220*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000A424 00007224*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000A428 00007228*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f1);
/*8000A42C 0000722C*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f0);
/*8000A430 00007230*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8000A434 00007234*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000A438 00007238*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A43C 0000723C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8000A440 00007240*/ PPC::Runtime::ASM::blr();
}