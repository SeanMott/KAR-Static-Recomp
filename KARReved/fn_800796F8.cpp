//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"
#include "fn_80062CA4.hpp"



void fn_800796F8(PPC::Runtime::GCContext* context)
{
/*800796F8 000764F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800796FC 000764FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80079700 00076500*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80079704 00076504*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80079708 00076508*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8007970C 0007650C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80079710 00076510*/ PPC::Runtime::ASM::addi(context->r31, context->r30, 0x18);
/*80079714 00076514*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80079718 00076518*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007971C 0007651C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80079720 00076520*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*80079724 00076524*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*80079728 00076528*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8007972C 0007652C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
/*80079730 00076530*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*80079734 00076534*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DED50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80079738 00076538*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*8007973C 0007653C*/ PPC::Runtime::ASM::beq(.L_80079750);
/*80079740 00076540*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80079744 00076544*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80079748 00076548*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*8007974C 0007654C*/ PPC::Runtime::ASM::b(.L_8007975C);
RUNTIME_PPC_JUMP_LABEL(.L_80079750, 0x80079750) //this is a jump label
/*80079750 00076550*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*80079754 00076554*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*80079758 00076558*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8007975C, 0x8007975C) //this is a jump label
/*8007975C 0007655C*/ PPC::Runtime::ASM::addi(context->r31, context->r30, 0x28);
/*80079760 00076560*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80079764 00076564*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*80079768 00076568*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DED50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007976C 0007656C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*80079770 00076570*/ PPC::Runtime::ASM::beq(.L_80079784);
/*80079774 00076574*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80079778 00076578*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8007977C 0007657C*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*80079780 00076580*/ PPC::Runtime::ASM::b(.L_80079790);
RUNTIME_PPC_JUMP_LABEL(.L_80079784, 0x80079784) //this is a jump label
/*80079784 00076584*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*80079788 00076588*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8007978C 0007658C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80079790, 0x80079790) //this is a jump label
/*80079790 00076590*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80079794 00076594*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80079798 00076598*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8007979C 0007659C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800797A0 000765A0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800797A4 000765A4*/ PPC::Runtime::ASM::blr();
}