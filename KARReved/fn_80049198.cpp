//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"



void fn_80049198(PPC::Runtime::GCContext* context)
{
/*80049198 00045F98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8004919C 00045F9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800491A0 00045FA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800491A4 00045FA4*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800491A8 00045FA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c4, context->r3));
/*800491AC 00045FAC*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*800491B0 00045FB0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*800491B4 00045FB4*/ PPC::Runtime::ASM::beq(.L_80049208);
/*800491B8 00045FB8*/ PPC::Runtime::ASM::bge(.L_800491D4);
/*800491BC 00045FBC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800491C0 00045FC0*/ PPC::Runtime::ASM::beq(.L_800491F0);
/*800491C4 00045FC4*/ PPC::Runtime::ASM::bge(.L_800491FC);
/*800491C8 00045FC8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800491CC 00045FCC*/ PPC::Runtime::ASM::bge(.L_800491E4);
/*800491D0 00045FD0*/ PPC::Runtime::ASM::b(.L_8004922C);
RUNTIME_PPC_JUMP_LABEL(.L_800491D4, 0x800491D4) //this is a jump label
/*800491D4 00045FD4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*800491D8 00045FD8*/ PPC::Runtime::ASM::beq(.L_80049220);
/*800491DC 00045FDC*/ PPC::Runtime::ASM::bge(.L_8004922C);
/*800491E0 00045FE0*/ PPC::Runtime::ASM::b(.L_80049214);
RUNTIME_PPC_JUMP_LABEL(.L_800491E4, 0x800491E4) //this is a jump label
/*800491E4 00045FE4*/ PPC::Runtime::ASM::li(context->r3, 0x16);
/*800491E8 00045FE8*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*800491EC 00045FEC*/ PPC::Runtime::ASM::b(.L_80049240);
RUNTIME_PPC_JUMP_LABEL(.L_800491F0, 0x800491F0) //this is a jump label
/*800491F0 00045FF0*/ PPC::Runtime::ASM::li(context->r3, 0x17);
/*800491F4 00045FF4*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*800491F8 00045FF8*/ PPC::Runtime::ASM::b(.L_80049240);
RUNTIME_PPC_JUMP_LABEL(.L_800491FC, 0x800491FC) //this is a jump label
/*800491FC 00045FFC*/ PPC::Runtime::ASM::li(context->r3, 0x18);
/*80049200 00046000*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80049204 00046004*/ PPC::Runtime::ASM::b(.L_80049240);
RUNTIME_PPC_JUMP_LABEL(.L_80049208, 0x80049208) //this is a jump label
/*80049208 00046008*/ PPC::Runtime::ASM::li(context->r3, 0x19);
/*8004920C 0004600C*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80049210 00046010*/ PPC::Runtime::ASM::b(.L_80049240);
RUNTIME_PPC_JUMP_LABEL(.L_80049214, 0x80049214) //this is a jump label
/*80049214 00046014*/ PPC::Runtime::ASM::li(context->r3, 0x1a);
/*80049218 00046018*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*8004921C 0004601C*/ PPC::Runtime::ASM::b(.L_80049240);
RUNTIME_PPC_JUMP_LABEL(.L_80049220, 0x80049220) //this is a jump label
/*80049220 00046020*/ PPC::Runtime::ASM::li(context->r3, 0x1b);
/*80049224 00046024*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80049228 00046028*/ PPC::Runtime::ASM::b(.L_80049240);
RUNTIME_PPC_JUMP_LABEL(.L_8004922C, 0x8004922C) //this is a jump label
/*8004922C 0004602C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_160 @ Get_MemoryOffset_HighBit);
/*80049230 00046030*/ PPC::Runtime::ASM::li(context->r4, 0x6e);
/*80049234 00046034*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_160 @ Get_MemoryOffset_LowBit);
/*80049238 00046038*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51C8 @ Get_MemoryOffset_SDA21);
/*8004923C 0004603C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049240, 0x80049240) //this is a jump label
/*80049240 00046040*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049244 00046044*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80049248 00046048*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8004924C 0004604C*/ PPC::Runtime::ASM::blr();
}