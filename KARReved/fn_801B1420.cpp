//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A9580.hpp"



void fn_801B1420(PPC::Runtime::GCContext* context)
{
/*801B1420 001AE220*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801B1424 001AE224*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B1428 001AE228*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801B142C 001AE22C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r3));
/*801B1430 001AE230*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801B1434 001AE234*/ PPC::Runtime::ASM::beq(.L_801B1454);
/*801B1438 001AE238*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E14E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B143C 001AE23C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801B1440 001AE240*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B1444 001AE244*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801B1448 001AE248*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B144C 001AE24C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801B1450 001AE250*/ PPC::Runtime::ASM::bl(fn_801A9580);
RUNTIME_PPC_JUMP_LABEL(.L_801B1454, 0x801B1454) //this is a jump label
/*801B1454 001AE254*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801B1458 001AE258*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B145C 001AE25C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801B1460 001AE260*/ PPC::Runtime::ASM::blr();
}