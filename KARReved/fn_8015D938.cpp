//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013121C.hpp"
#include "fn_80059520.hpp"



void fn_8015D938(PPC::Runtime::GCContext* context)
{
/*8015D938 0015A738*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015D93C 0015A73C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015D940 0015A740*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015D944 0015A744*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015D948 0015A748*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015D94C 0015A74C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015D950 0015A750*/ PPC::Runtime::ASM::bl(fn_8013121C);
/*8015D954 0015A754*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1259 @ Get_MemoryOffset_HighBit);
/*8015D958 0015A758*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8015D95C 0015A75C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1259 @ Get_MemoryOffset_LowBit);
/*8015D960 0015A760*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8015D964 0015A764*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x880);
/*8015D968 0015A768*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8015D96C 0015A76C*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8015D970 0015A770*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015D974 0015A774*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015D978 0015A778*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015D97C 0015A77C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015D980 0015A780*/ PPC::Runtime::ASM::blr();
}