//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80218620(PPC::Runtime::GCContext* context)
{
/*80218620 00215420*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80218624 00215424*/ PPC::Runtime::ASM::mflr(context->r0);
/*80218628 00215428*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021862C 0021542C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80218630 00215430*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80218634 00215434*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80218638 00215438*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*8021863C 0021543C*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80218640 00215440*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2680 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80218644 00215444*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80218648 00215448*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E267C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8021864C 0021544C*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80218650 00215450*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80218654 00215454*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80218658 00215458*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*8021865C 0021545C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80218660 00215460*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80218664 00215464*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80218668 00215468*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021866C 0021546C*/ PPC::Runtime::ASM::blr();
}