//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CF058.hpp"



void fn_800955D4(PPC::Runtime::GCContext* context)
{
/*800955D4 000923D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800955D8 000923D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800955DC 000923DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800955E0 000923E0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800955E4 000923E4*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800955E8 000923E8*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800955EC 000923EC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553C00 @ Get_MemoryOffset_HighBit);
/*800955F0 000923F0*/ PPC::Runtime::ASM::mr(context->r30, context->r28);
/*800955F4 000923F4*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800955F8 000923F8*/ PPC::Runtime::ASM::mr(context->r31, context->r28);
/*800955FC 000923FC*/ PPC::Runtime::ASM::addi(context->r29, context->r3, lbl_80553C00 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_80095600, 0x80095600) //this is a jump label
/*80095600 00092400*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD680 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80095604 00092404*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r28);
/*80095608 00092408*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009560C 0009240C*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*80095610 00092410*/ PPC::Runtime::ASM::beq(.L_80095628);
/*80095614 00092414*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80095618 00092418*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8009561C 0009241C*/ PPC::Runtime::ASM::bne(.L_80095628);
/*80095620 00092420*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80095624 00092424*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
RUNTIME_PPC_JUMP_LABEL(.L_80095628, 0x80095628) //this is a jump label
/*80095628 00092428*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD680 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8009562C 0009242C*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*80095630 00092430*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x100);
/*80095634 00092434*/ PPC::Runtime::ASM::addi(context->r0, context->r28, 0x4);
/*80095638 00092438*/ PPC::Runtime::ASM::stwx(context->r30, context->r3, context->r28);
/*8009563C 0009243C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x8);
/*80095640 00092440*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD680 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80095644 00092444*/ PPC::Runtime::ASM::stwx(context->r31, context->r3, context->r0);
/*80095648 00092448*/ PPC::Runtime::ASM::blt(.L_80095600);
/*8009564C 0009244C*/ PPC::Runtime::ASM::lis(context->r5, lbl_80553C00 @ Get_MemoryOffset_HighBit);
/*80095650 00092450*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_HighBit);
/*80095654 00092454*/ PPC::Runtime::ASM::lis(context->r3, BLOCK_OF_NULL_2 @ Get_MemoryOffset_HighBit);
/*80095658 00092458*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*8009565C 0009245C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_80553C00 @ Get_MemoryOffset_LowBit);
/*80095660 00092460*/ PPC::Runtime::ASM::addi(context->r31, context->r4, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_LowBit);
/*80095664 00092464*/ PPC::Runtime::ASM::addi(context->r3, context->r3, BLOCK_OF_NULL_2 @ Get_MemoryOffset_LowBit);
/*80095668 00092468*/ PPC::Runtime::ASM::li(context->r0, 0x13);
/*8009566C 0009246C*/ PPC::Runtime::ASM::sth(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r5));
/*80095670 00092470*/ PPC::Runtime::ASM::subi(context->r5, context->r31, 0x4);
/*80095674 00092474*/ PPC::Runtime::ASM::subi(context->r4, context->r3, 0x4);
/*80095678 00092478*/ PPC::Runtime::ASM::mtctr(context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_8009567C, 0x8009567C) //this is a jump label
/*8009567C 0009247C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80095680 00092480*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80095684 00092484*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80095688 00092488*/ PPC::Runtime::ASM::stwu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*8009568C 0009248C*/ PPC::Runtime::ASM::bdnz(.L_8009567C);
/*80095690 00092490*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80095694 00092494*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80095698 00092498*/ PPC::Runtime::ASM::bl(fn_800CF058);
/*8009569C 0009249C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800956A0 000924A0*/ PPC::Runtime::ASM::bgt(.L_800956B0);
/*800956A4 000924A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*800956A8 000924A8*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x3);
/*800956AC 000924AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800956B0, 0x800956B0) //this is a jump label
/*800956B0 000924B0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800956B4 000924B4*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800956B8 000924B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800956BC 000924BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800956C0 000924C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800956C4 000924C4*/ PPC::Runtime::ASM::blr();
}