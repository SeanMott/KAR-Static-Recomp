//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_EXISetExiCallback.hpp"
#include "fn_OSCancelAlarm.hpp"



void fn___CARDExtHandler(PPC::Runtime::GCContext* context)
{
/*803E1E60 003DEC60*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E1E64 003DEC64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E1E68 003DEC68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E1E6C 003DEC6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E1E70 003DEC70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E1E74 003DEC74*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E1E78 003DEC78*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803E1E7C 003DEC7C*/ PPC::Runtime::ASM::mulli(context->r4, context->r29, 0x110);
/*803E1E80 003DEC80*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E1E84 003DEC84*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E1E88 003DEC88*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r4);
/*803E1E8C 003DEC8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803E1E90 003DEC90*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803E1E94 003DEC94*/ PPC::Runtime::ASM::beq(.L_803E1F1C);
/*803E1E98 003DEC98*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803E1E9C 003DEC9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803E1EA0 003DECA0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E1EA4 003DECA4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E1EA8 003DECA8*/ PPC::Runtime::ASM::bl(fn_EXISetExiCallback);
/*803E1EAC 003DECAC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xe0);
/*803E1EB0 003DECB0*/ PPC::Runtime::ASM::bl(fn_OSCancelAlarm);
/*803E1EB4 003DECB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r30));
/*803E1EB8 003DECB8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E1EBC 003DECBC*/ PPC::Runtime::ASM::mr(context->r12, context->r0);
/*803E1EC0 003DECC0*/ PPC::Runtime::ASM::beq(.L_803E1ED8);
/*803E1EC4 003DECC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r30));
/*803E1EC8 003DECC8*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E1ECC 003DECCC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E1ED0 003DECD0*/ PPC::Runtime::ASM::li(context->r4, -0x3);
/* 803E1ED4 003DECD4  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E1ED8, 0x803E1ED8) //this is a jump label
/*803E1ED8 003DECD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803E1EDC 003DECDC*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*803E1EE0 003DECE0*/ PPC::Runtime::ASM::beq(.L_803E1EEC);
/*803E1EE4 003DECE4*/ PPC::Runtime::ASM::li(context->r0, -0x3);
/*803E1EE8 003DECE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_803E1EEC, 0x803E1EEC) //this is a jump label
/*803E1EEC 003DECEC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r30));
/*803E1EF0 003DECF0*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*803E1EF4 003DECF4*/ PPC::Runtime::ASM::beq(.L_803E1F1C);
/*803E1EF8 003DECF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*803E1EFC 003DECFC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x7);
/*803E1F00 003DED00*/ PPC::Runtime::ASM::blt(.L_803E1F1C);
/*803E1F04 003DED04*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E1F08 003DED08*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E1F0C 003DED0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r30));
/*803E1F10 003DED10*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E1F14 003DED14*/ PPC::Runtime::ASM::li(context->r4, -0x3);
/* 803E1F18 003DED18  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E1F1C, 0x803E1F1C) //this is a jump label
/*803E1F1C 003DED1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E1F20 003DED20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E1F24 003DED24*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E1F28 003DED28*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E1F2C 003DED2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E1F30 003DED30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E1F34 003DED34*/ PPC::Runtime::ASM::blr();
}