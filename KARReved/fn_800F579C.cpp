//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DB9A0.hpp"



void fn_800F579C(PPC::Runtime::GCContext* context)
{
/*800F579C 000F259C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F57A0 000F25A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F57A4 000F25A4*/ PPC::Runtime::ASM::mr(context->r11, context->r5);
/*800F57A8 000F25A8*/ PPC::Runtime::ASM::mr(context->r10, context->r6);
/*800F57AC 000F25AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F57B0 000F25B0*/ PPC::Runtime::ASM::mr(context->r8, context->r7);
/*800F57B4 000F25B4*/ PPC::Runtime::ASM::mulli(context->r0, context->r4, 0x14);
/*800F57B8 000F25B8*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*800F57BC 000F25BC*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F57C0 000F25C0*/ PPC::Runtime::ASM::mr(context->r6, context->r11);
/*800F57C4 000F25C4*/ PPC::Runtime::ASM::mr(context->r7, context->r10);
/*800F57C8 000F25C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*800F57CC 000F25CC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F57D0 000F25D0*/ PPC::Runtime::ASM::addi(context->r3, context->r9, 0x64);
/*800F57D4 000F25D4*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*800F57D8 000F25D8*/ PPC::Runtime::ASM::bl(fn_800DB9A0);
/*800F57DC 000F25DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F57E0 000F25E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F57E4 000F25E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F57E8 000F25E8*/ PPC::Runtime::ASM::blr();
}