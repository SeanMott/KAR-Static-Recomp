//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801918BC.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B71E4.hpp"
#include "fn_801B71C4.hpp"
#include "fn_801B71E4.hpp"
#include "fn_801B71C4.hpp"



void fn_801B6FD0(PPC::Runtime::GCContext* context)
{
/*801B6FD0 001B3DD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B6FD4 001B3DD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B6FD8 001B3DD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B6FDC 001B3DDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B6FE0 001B3DE0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B6FE4 001B3DE4*/ PPC::Runtime::ASM::bl(fn_801918BC);
/*801B6FE8 001B3DE8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E16B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B6FEC 001B3DEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B6FF0 001B3DF0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E16BC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B6FF4 001B3DF4*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*801B6FF8 001B3DF8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B6FFC 001B3DFC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B7000 001B3E00*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B7004 001B3E04*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B7008 001B3E08*/ PPC::Runtime::ASM::lis(context->r4, fn_801B71E4 @ Get_MemoryOffset_HighBit);
/*801B700C 001B3E0C*/ PPC::Runtime::ASM::lis(context->r3, fn_801B71C4 @ Get_MemoryOffset_HighBit);
/*801B7010 001B3E10*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801B71E4 @ Get_MemoryOffset_LowBit);
/*801B7014 001B3E14*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B7018 001B3E18*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B701C 001B3E1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_801B71C4 @ Get_MemoryOffset_LowBit);
/*801B7020 001B3E20*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B7024 001B3E24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r31));
/*801B7028 001B3E28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801B702C 001B3E2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r3));
/*801B7030 001B3E30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa24, context->r31));
/*801B7034 001B3E34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7038 001B3E38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B703C 001B3E3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B7040 001B3E40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B7044 001B3E44*/ PPC::Runtime::ASM::blr();
}