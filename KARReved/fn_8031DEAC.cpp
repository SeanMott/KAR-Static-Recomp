//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8031E824.hpp"



void fn_8031DEAC(PPC::Runtime::GCContext* context)
{
/*8031DEAC 0031ACAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8031DEB0 0031ACB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8031DEB4 0031ACB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8031DEB8 0031ACB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8031DEBC 0031ACBC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8031DEC0 0031ACC0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8031DEC4 0031ACC4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8031DEC8 0031ACC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
/*8031DECC 0031ACCC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8031DED0 0031ACD0*/ PPC::Runtime::ASM::beq(.L_8031DF3C);
/*8031DED4 0031ACD4*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*8031DED8 0031ACD8*/ PPC::Runtime::ASM::beq(.L_8031DEE4);
/*8031DEDC 0031ACDC*/ PPC::Runtime::ASM::bl(fn_8031E824);
/*8031DEE0 0031ACE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8031DEE4, 0x8031DEE4) //this is a jump label
/*8031DEE4 0031ACE4*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E0E38 @ Get_MemoryOffset_HighBit);
/*8031DEE8 0031ACE8*/ PPC::Runtime::ASM::lwzu(context->r5, lbl_804E0E38 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*8031DEEC 0031ACEC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8031DEF0 0031ACF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8031DEF4 0031ACF4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031DEF8 0031ACF8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8031DEFC 0031ACFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8031DF00 0031AD00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*8031DF04 0031AD04*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8031DF08 0031AD08*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8031DF0C 0031AD0C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8031DF10 0031AD10*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*8031DF14 0031AD14*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8031DF18 0031AD18*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8031DF1C 0031AD1C*/ PPC::Runtime::ASM::b(.L_8031DF34);
RUNTIME_PPC_JUMP_LABEL(.L_8031DF20, 0x8031DF20) //this is a jump label
/*8031DF20 0031AD20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8031DF24 0031AD24*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*8031DF28 0031AD28*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*8031DF2C 0031AD2C*/ PPC::Runtime::ASM::nop();
/*8031DF30 0031AD30*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8031DF34, 0x8031DF34) //this is a jump label
/*8031DF34 0031AD34*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*8031DF38 0031AD38*/ PPC::Runtime::ASM::bne(.L_8031DF20);
RUNTIME_PPC_JUMP_LABEL(.L_8031DF3C, 0x8031DF3C) //this is a jump label
/*8031DF3C 0031AD3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8031DF40 0031AD40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8031DF44 0031AD44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8031DF48 0031AD48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8031DF4C 0031AD4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8031DF50 0031AD50*/ PPC::Runtime::ASM::blr();
}