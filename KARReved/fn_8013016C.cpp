//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8013016C(PPC::Runtime::GCContext* context)
{
/*8013016C 0012CF6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80130170 0012CF70*/ PPC::Runtime::ASM::mflr(context->r0);
/*80130174 0012CF74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80130178 0012CF78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8013017C 0012CF7C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80130180 0012CF80*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130184 0012CF84*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80130188 0012CF88*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xd48);
/*8013018C 0012CF8C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80130190 0012CF90*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80130194, 0x80130194) //this is a jump label
/*80130194 0012CF94*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80130198 0012CF98*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8013019C 0012CF9C*/ PPC::Runtime::ASM::beq(.L_801301A8);
/*801301A0 0012CFA0*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*801301A4 0012CFA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801301A8, 0x801301A8) //this is a jump label
/*801301A8 0012CFA8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801301AC 0012CFAC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*801301B0 0012CFB0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*801301B4 0012CFB4*/ PPC::Runtime::ASM::blt(.L_80130194);
/*801301B8 0012CFB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801301BC 0012CFBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801301C0 0012CFC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801301C4 0012CFC4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801301C8 0012CFC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801301CC 0012CFCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801301D0 0012CFD0*/ PPC::Runtime::ASM::blr();
}