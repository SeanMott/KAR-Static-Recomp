//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80117AC0(PPC::Runtime::GCContext* context)
{
/*80117AC0 001148C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80117AC4 001148C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80117AC8 001148C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80117ACC 001148CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80117AD0 001148D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80117AD4 001148D4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80117AD8 001148D8*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80117ADC 001148DC*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80117AE0 001148E0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80117AE4 001148E4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80117AE8, 0x80117AE8) //this is a jump label
/*80117AE8 001148E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r30));
/*80117AEC 001148EC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80117AF0 001148F0*/ PPC::Runtime::ASM::beq(.L_80117AFC);
/*80117AF4 001148F4*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80117AF8 001148F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80117AFC, 0x80117AFC) //this is a jump label
/*80117AFC 001148FC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80117B00 00114900*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80117B04 00114904*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80117B08 00114908*/ PPC::Runtime::ASM::blt(.L_80117AE8);
/*80117B0C 0011490C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80117B10 00114910*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80117B14 00114914*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80117B18 00114918*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80117B1C 0011491C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80117B20 00114920*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80117B24 00114924*/ PPC::Runtime::ASM::blr();
}