//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018A0C0.hpp"
#include "fn_8018A0E8.hpp"
#include "fn_8018A188.hpp"
#include "fn_80189D1C.hpp"



void fn_80201BA4(PPC::Runtime::GCContext* context)
{
/*80201BA4 001FE9A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*80201BA8 001FE9A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80201BAC 001FE9AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*80201BB0 001FE9B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*80201BB4 001FE9B4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*80201BB8 001FE9B8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80201BBC 001FE9BC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80201BC0 001FE9C0*/ PPC::Runtime::ASM::addi(context->r31, context->r29, 0x45c);
/*80201BC4 001FE9C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80201BC8 001FE9C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80201BCC 001FE9CC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80201BD0 001FE9D0*/ PPC::Runtime::ASM::beq(.L_80201C54);
/*80201BD4 001FE9D4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*80201BD8 001FE9D8*/ PPC::Runtime::ASM::bl(fn_8018A0C0);
/*80201BDC 001FE9DC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80201BE0 001FE9E0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80201BE4 001FE9E4*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37, context->r1));
/*80201BE8 001FE9E8*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r4, 1, 30, 30);
/*80201BEC 001FE9EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80201BF0 001FE9F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80201BF4 001FE9F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80201BF8 001FE9F8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 3, 28, 28);
/*80201BFC 001FE9FC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80201C00 001FEA00*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80201C04 001FEA04*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80201C08 001FEA08*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80201C0C 001FEA0C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201C10 001FEA10*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*80201C14 001FEA14*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80201C18 001FEA18*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37, context->r1));
/*80201C1C 001FEA1C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80201C20 001FEA20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80201C24 001FEA24*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b4, context->r29));
/*80201C28 001FEA28*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80201C2C 001FEA2C*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r0);
/*80201C30 001FEA30*/ PPC::Runtime::ASM::bl(fn_8018A0E8);
/*80201C34 001FEA34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*80201C38 001FEA38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80201C3C 001FEA3C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80201C40 001FEA40*/ PPC::Runtime::ASM::beq(.L_80201C5C);
/*80201C44 001FEA44*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r29));
/*80201C48 001FEA48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80201C4C 001FEA4C*/ PPC::Runtime::ASM::bl(fn_8018A188);
/*80201C50 001FEA50*/ PPC::Runtime::ASM::b(.L_80201C5C);
RUNTIME_PPC_JUMP_LABEL(.L_80201C54, 0x80201C54) //this is a jump label
/*80201C54 001FEA54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80201C58 001FEA58*/ PPC::Runtime::ASM::bl(fn_80189D1C);
RUNTIME_PPC_JUMP_LABEL(.L_80201C5C, 0x80201C5C) //this is a jump label
/*80201C5C 001FEA5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*80201C60 001FEA60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*80201C64 001FEA64*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*80201C68 001FEA68*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80201C6C 001FEA6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80201C70 001FEA70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*80201C74 001FEA74*/ PPC::Runtime::ASM::blr();
}