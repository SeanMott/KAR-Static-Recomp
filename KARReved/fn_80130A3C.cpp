//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80130A3C(PPC::Runtime::GCContext* context)
{
/*80130A3C 0012D83C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80130A40 0012D840*/ PPC::Runtime::ASM::mflr(context->r0);
/*80130A44 0012D844*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80130A48 0012D848*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80130A4C 0012D84C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80130A50 0012D850*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130A54 0012D854*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80130A58 0012D858*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xc10);
/*80130A5C 0012D85C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80130A60 0012D860*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80130A64, 0x80130A64) //this is a jump label
/*80130A64 0012D864*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80130A68 0012D868*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80130A6C 0012D86C*/ PPC::Runtime::ASM::beq(.L_80130A78);
/*80130A70 0012D870*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80130A74 0012D874*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80130A78, 0x80130A78) //this is a jump label
/*80130A78 0012D878*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80130A7C 0012D87C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80130A80 0012D880*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80130A84 0012D884*/ PPC::Runtime::ASM::blt(.L_80130A64);
/*80130A88 0012D888*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80130A8C 0012D88C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80130A90 0012D890*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80130A94 0012D894*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130A98 0012D898*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80130A9C 0012D89C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80130AA0 0012D8A0*/ PPC::Runtime::ASM::blr();
}