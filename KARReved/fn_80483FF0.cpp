//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_80483DD4.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80483C3C.hpp"
#include "fn_804828C4.hpp"
#include "fn_SOSendTo.hpp"



void fn_80483FF0(PPC::Runtime::GCContext* context)
{
/*80483FF0 00480DF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80483FF4 00480DF4*/ PPC::Runtime::ASM::lis(context->r7, lbl_80534C30 @ Get_MemoryOffset_HighBit);
/*80483FF8 00480DF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80483FFC 00480DFC*/ PPC::Runtime::ASM::lis(context->r6, lbl_805C2AF8 @ Get_MemoryOffset_HighBit);
/*80484000 00480E00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x38, context->r1));
/*80484004 00480E04*/ PPC::Runtime::ASM::stmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80484008 00480E08*/ PPC::Runtime::ASM::addi(context->r29, context->r7, lbl_80534C30 @ Get_MemoryOffset_LowBit);
/*8048400C 00480E0C*/ PPC::Runtime::ASM::addi(context->r30, context->r6, lbl_805C2AF8 @ Get_MemoryOffset_LowBit);
/*80484010 00480E10*/ PPC::Runtime::ASM::addi(context->r26, context->r3, 0x0);
/*80484014 00480E14*/ PPC::Runtime::ASM::addi(context->r27, context->r4, 0x0);
/*80484018 00480E18*/ PPC::Runtime::ASM::addi(context->r28, context->r5, 0x0);
/*8048401C 00480E1C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE6D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80484020 00480E20*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80484024 00480E24*/ PPC::Runtime::ASM::beq(.L_80484030);
/*80484028 00480E28*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8048402C 00480E2C*/ PPC::Runtime::ASM::b(.L_80484100);
RUNTIME_PPC_JUMP_LABEL(.L_80484030, 0x80484030) //this is a jump label
/*80484030 00480E30*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80484034 00480E34*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80484038 00480E38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*8048403C 00480E3C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80484040 00480E40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80484044 00480E44*/ PPC::Runtime::ASM::addi(context->r6, context->r29, 0x0);
/*80484048 00480E48*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*8048404C 00480E4C*/ PPC::Runtime::ASM::li(context->r4, 0xc8);
/*80484050 00480E50*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_323 @ Get_MemoryOffset_SDA21);
/*80484054 00480E54*/ PPC::Runtime::ASM::bl(fn_80483DD4);
/*80484058 00480E58*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*8048405C 00480E5C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x24);
/*80484060 00480E60*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x34);
/*80484064 00480E64*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*80484068 00480E68*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*8048406C 00480E6C*/ PPC::Runtime::ASM::li(context->r4, String_ "EX" Get_MemoryOffset_SDA21);
/*80484070 00480E70*/ PPC::Runtime::ASM::li(context->r5, AllZeros_35 @ Get_MemoryOffset_SDA21);
/*80484074 00480E74*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*80484078 00480E78*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*8048407C 00480E7C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x44);
/*80484080 00480E80*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x40);
/*80484084 00480E84*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*80484088 00480E88*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*8048408C 00480E8C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*80484090 00480E90*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_324 @ Get_MemoryOffset_SDA21);
/*80484094 00480E94*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*80484098 00480E98*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*8048409C 00480E9C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*804840A0 00480EA0*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_322 @ Get_MemoryOffset_SDA21);
/*804840A4 00480EA4*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*804840A8 00480EA8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*804840AC 00480EAC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x80);
/*804840B0 00480EB0*/ PPC::Runtime::ASM::li(context->r4, String_ "US" Get_MemoryOffset_SDA21);
/*804840B4 00480EB4*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*804840B8 00480EB8*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*804840BC 00480EBC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*804840C0 00480EC0*/ PPC::Runtime::ASM::bl(fn_804828C4);
/*804840C4 00480EC4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*804840C8 00480EC8*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE6E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*804840CC 00480ECC*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*804840D0 00480ED0*/ PPC::Runtime::ASM::beq(.L_804840DC);
/*804840D4 00480ED4*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*804840D8 00480ED8*/ PPC::Runtime::ASM::b(.L_80484100);
RUNTIME_PPC_JUMP_LABEL(.L_804840DC, 0x804840DC) //this is a jump label
/*804840DC 00480EDC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6a0, context->r30));
/*804840E0 00480EE0*/ PPC::Runtime::ASM::addi(context->r3, context->r26, 0x0);
/*804840E4 00480EE4*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x0);
/*804840E8 00480EE8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*804840EC 00480EEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6a0, context->r30));
/*804840F0 00480EF0*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x80);
/*804840F4 00480EF4*/ PPC::Runtime::ASM::addi(context->r7, context->r28, 0x18);
/*804840F8 00480EF8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*804840FC 00480EFC*/ PPC::Runtime::ASM::bl(fn_SOSendTo);
RUNTIME_PPC_JUMP_LABEL(.L_80484100, 0x80484100) //this is a jump label
/*80484100 00480F00*/ PPC::Runtime::ASM::lmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80484104 00480F04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80484108 00480F08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x38);
/*8048410C 00480F0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80484110 00480F10*/ PPC::Runtime::ASM::blr();
}