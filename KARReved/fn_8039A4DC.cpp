//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80391B1C.hpp"
#include "fn_80391C1C.hpp"



void fn_8039A4DC(PPC::Runtime::GCContext* context)
{
/*8039A4DC 003972DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039A4E0 003972E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039A4E4 003972E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A4E8 003972E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A4EC 003972EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A4F0 003972F0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8039A4F4 003972F4*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8039A4F8 003972F8*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8039A4FC 003972FC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A500 00397300*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A504 00397304*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8039A508 00397308*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A50C 0039730C*/ PPC::Runtime::ASM::bctrl();
/*8039A510 00397310*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039A514 00397314*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A518 00397318*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A51C 0039731C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8039A520 00397320*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A524 00397324*/ PPC::Runtime::ASM::bctrl();
/*8039A528 00397328*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039A52C 0039732C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8039A530 00397330*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*8039A534 00397334*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8039A538 00397338*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A53C 0039733C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A540 00397340*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A544 00397344*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039A548 00397348*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039A54C 0039734C*/ PPC::Runtime::ASM::blr();
}