//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D6D88.hpp"
#include "fn_800D6724.hpp"



void fn_800F6274(PPC::Runtime::GCContext* context)
{
/*800F6274 000F3074*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F6278 000F3078*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F627C 000F307C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F6280 000F3080*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F6284 000F3084*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*800F6288 000F3088*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*800F628C 000F308C*/ PPC::Runtime::ASM::beq(.L_800F62AC);
/*800F6290 000F3090*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F6294 000F3094*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x1c);
/*800F6298 000F3098*/ PPC::Runtime::ASM::addi(context->r7, context->r3, 0x64);
/*800F629C 000F309C*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x54);
/*800F62A0 000F30A0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0xc);
/*800F62A4 000F30A4*/ PPC::Runtime::ASM::bl(fn_800D6D88);
/*800F62A8 000F30A8*/ PPC::Runtime::ASM::b(.L_800F62B4);
RUNTIME_PPC_JUMP_LABEL(.L_800F62AC, 0x800F62AC) //this is a jump label
/*800F62AC 000F30AC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1c);
/*800F62B0 000F30B0*/ PPC::Runtime::ASM::bl(fn_800D6724);
RUNTIME_PPC_JUMP_LABEL(.L_800F62B4, 0x800F62B4) //this is a jump label
/*800F62B4 000F30B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F62B8 000F30B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F62BC 000F30BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F62C0 000F30C0*/ PPC::Runtime::ASM::blr();
}