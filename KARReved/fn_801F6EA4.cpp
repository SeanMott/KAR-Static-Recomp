//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D93A0.hpp"
#include "fn_801F620C.hpp"



void fn_801F6EA4(PPC::Runtime::GCContext* context)
{
/*801F6EA4 001F3CA4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801F6EA8 001F3CA8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F6EAC 001F3CAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801F6EB0 001F3CB0*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801F6EB4 001F3CB4*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801F6EB8 001F3CB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F6EBC 001F3CBC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F6EC0 001F3CC0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801F6EC4 001F3CC4*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r3));
/*801F6EC8 001F3CC8*/ PPC::Runtime::ASM::bl(fn_801D93A0);
/*801F6ECC 001F3CCC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F6ED0 001F3CD0*/ PPC::Runtime::ASM::beq(.L_801F6EF0);
/*801F6ED4 001F3CD4*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f31);
/*801F6ED8 001F3CD8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x654, context->r31));
/*801F6EDC 001F3CDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801F6EE0 001F3CE0*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801F6EE4 001F3CE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x874, context->r31));
/*801F6EE8 001F3CE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F6EEC 001F3CEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x878, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801F6EF0, 0x801F6EF0) //this is a jump label
/*801F6EF0 001F3CF0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801F6EF4 001F3CF4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F6EF8 001F3CF8*/ PPC::Runtime::ASM::bl(fn_801F620C);
/*801F6EFC 001F3CFC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801F6F00 001F3D00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801F6F04 001F3D04*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801F6F08 001F3D08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F6F0C 001F3D0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F6F10 001F3D10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801F6F14 001F3D14*/ PPC::Runtime::ASM::blr();
}