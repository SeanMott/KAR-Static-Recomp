//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801546D0.hpp"



void fn_801344A0(PPC::Runtime::GCContext* context)
{
/*801344A0 001312A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801344A4 001312A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801344A8 001312A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801344AC 001312AC*/ PPC::Runtime::ASM::bl(fn_801546D0);
/*801344B0 001312B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801344B4 001312B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801344B8 001312B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801344BC 001312BC*/ PPC::Runtime::ASM::blr();
}