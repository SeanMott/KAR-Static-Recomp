//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80049E24.hpp"
#include "fn_80049E24.hpp"



void fn_80007AF0(PPC::Runtime::GCContext* context)
{
/*80007AF0 000048F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80007AF4 000048F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80007AF8 000048F8*/ PPC::Runtime::ASM::lis(context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_HighBit);
/*80007AFC 000048FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80007B00 00004900*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80007B04 00004904*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80007B08 00004908*/ PPC::Runtime::ASM::addi(context->r31, context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_LowBit);
/*80007B0C 0000490C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80007B10 00004910*/ PPC::Runtime::ASM::addi(context->r30, context->r31, 0xd50);
/*80007B14 00004914*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80007B18 00004918*/ PPC::Runtime::ASM::li(context->r29, 0x1);
/*80007B1C 0000491C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80007B20 00004920*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80007B24 00004924*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd50, context->r31));
/*80007B28 00004928*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd54, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80007B2C, 0x80007B2C) //this is a jump label
/*80007B2C 0000492C*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r28, 24);
/*80007B30 00004930*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80007B34 00004934*/ PPC::Runtime::ASM::bl(fn_80049E24);
/*80007B38 00004938*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80007B3C 0000493C*/ PPC::Runtime::ASM::beq(.L_80007B70);
/*80007B40 00004940*/ PPC::Runtime::ASM::srawi(context->r4, context->r28, 5);
/*80007B44 00004944*/ PPC::Runtime::ASM::slwi(context->r0, context->r28, 27);
/*80007B48 00004948*/ PPC::Runtime::ASM::srwi(context->r3, context->r28, 31);
/*80007B4C 0000494C*/ PPC::Runtime::ASM::addze(context->r4, context->r4);
/*80007B50 00004950*/ PPC::Runtime::ASM::subf(context->r0, context->r3, context->r0);
/*80007B54 00004954*/ PPC::Runtime::ASM::slwi(context->r5, context->r4, 2);
/*80007B58 00004958*/ PPC::Runtime::ASM::rotlwi(context->r0, context->r0, 5);
/*80007B5C 0000495C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r30, context->r5);
/*80007B60 00004960*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*80007B64 00004964*/ PPC::Runtime::ASM::slw(context->r0, context->r29, context->r0);
/*80007B68 00004968*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*80007B6C 0000496C*/ PPC::Runtime::ASM::stwx(context->r0, context->r30, context->r5);
RUNTIME_PPC_JUMP_LABEL(.L_80007B70, 0x80007B70) //this is a jump label
/*80007B70 00004970*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80007B74 00004974*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x2e);
/*80007B78 00004978*/ PPC::Runtime::ASM::blt(.L_80007B2C);
/*80007B7C 0000497C*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80007B80 00004980*/ PPC::Runtime::ASM::li(context->r29, 0x1);
/*80007B84 00004984*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80007B88 00004988*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80007B8C, 0x80007B8C) //this is a jump label
/*80007B8C 0000498C*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r28, 24);
/*80007B90 00004990*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80007B94 00004994*/ PPC::Runtime::ASM::bl(fn_80049E24);
/*80007B98 00004998*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80007B9C 0000499C*/ PPC::Runtime::ASM::beq(.L_80007BD4);
/*80007BA0 000049A0*/ PPC::Runtime::ASM::srawi(context->r3, context->r28, 5);
/*80007BA4 000049A4*/ PPC::Runtime::ASM::slwi(context->r0, context->r28, 27);
/*80007BA8 000049A8*/ PPC::Runtime::ASM::addze(context->r4, context->r3);
/*80007BAC 000049AC*/ PPC::Runtime::ASM::srwi(context->r3, context->r28, 31);
/*80007BB0 000049B0*/ PPC::Runtime::ASM::slwi(context->r4, context->r4, 2);
/*80007BB4 000049B4*/ PPC::Runtime::ASM::subf(context->r0, context->r3, context->r0);
/*80007BB8 000049B8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x8);
/*80007BBC 000049BC*/ PPC::Runtime::ASM::rotlwi(context->r0, context->r0, 5);
/*80007BC0 000049C0*/ PPC::Runtime::ASM::lwzx(context->r4, context->r30, context->r5);
/*80007BC4 000049C4*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*80007BC8 000049C8*/ PPC::Runtime::ASM::slw(context->r0, context->r29, context->r0);
/*80007BCC 000049CC*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*80007BD0 000049D0*/ PPC::Runtime::ASM::stwx(context->r0, context->r30, context->r5);
RUNTIME_PPC_JUMP_LABEL(.L_80007BD4, 0x80007BD4) //this is a jump label
/*80007BD4 000049D4*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80007BD8 000049D8*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x2c);
/*80007BDC 000049DC*/ PPC::Runtime::ASM::blt(.L_80007B8C);
/*80007BE0 000049E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1510, context->r31));
/*80007BE4 000049E4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80007BE8 000049E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80007BEC 000049EC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*80007BF0 000049F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80007BF4 000049F4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80007BF8 000049F8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80007BFC 000049FC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80007C00 00004A00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80007C04 00004A04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80007C08 00004A08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80007C0C 00004A0C*/ PPC::Runtime::ASM::blr();
}