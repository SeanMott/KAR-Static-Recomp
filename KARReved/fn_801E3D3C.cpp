//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CCAD8.hpp"
#include "fn_80062CA4.hpp"



void fn_801E3D3C(PPC::Runtime::GCContext* context)
{
/*801E3D3C 001E0B3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801E3D40 001E0B40*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E3D44 001E0B44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801E3D48 001E0B48*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801E3D4C 001E0B4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801E3D50 001E0B50*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E3D54 001E0B54*/ PPC::Runtime::ASM::bl(fn_801CCAD8);
/*801E3D58 001E0B58*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801E3D5C 001E0B5C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801E3D60 001E0B60*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801E3D64 001E0B64*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x41c, context->r31));
/*801E3D68 001E0B68*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E3D6C 001E0B6C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x434, context->r31));
/*801E3D70 001E0B70*/ PPC::Runtime::ASM::fmuls(context->f2, context->f1, context->f4);
/*801E3D74 001E0B74*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x418, context->r31));
/*801E3D78 001E0B78*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801E3D7C 001E0B7C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f4);
/*801E3D80 001E0B80*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x430, context->r31));
/*801E3D84 001E0B84*/ PPC::Runtime::ASM::fmadds(context->f2, context->f3, context->f5, context->f2);
/*801E3D88 001E0B88*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f5, context->f0);
/*801E3D8C 001E0B8C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x420, context->r31));
/*801E3D90 001E0B90*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801E3D94 001E0B94*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x438, context->r31));
/*801E3D98 001E0B98*/ PPC::Runtime::ASM::fmadds(context->f2, context->f3, context->f4, context->f2);
/*801E3D9C 001E0B9C*/ PPC::Runtime::ASM::fmadds(context->f1, context->f1, context->f4, context->f0);
/*801E3DA0 001E0BA0*/ PPC::Runtime::ASM::fabs(context->f3, context->f2);
/*801E3DA4 001E0BA4*/ PPC::Runtime::ASM::fabs(context->f0, context->f1);
/*801E3DA8 001E0BA8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f3, context->f0);
/*801E3DAC 001E0BAC*/ PPC::Runtime::ASM::ble(.L_801E3DCC);
/*801E3DB0 001E0BB0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1DA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E3DB4 001E0BB4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f0);
/*801E3DB8 001E0BB8*/ PPC::Runtime::ASM::ble(.L_801E3DC4);
/*801E3DBC 001E0BBC*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*801E3DC0 001E0BC0*/ PPC::Runtime::ASM::b(.L_801E3DE4);
RUNTIME_PPC_JUMP_LABEL(.L_801E3DC4, 0x801E3DC4) //this is a jump label
/*801E3DC4 001E0BC4*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*801E3DC8 001E0BC8*/ PPC::Runtime::ASM::b(.L_801E3DE4);
RUNTIME_PPC_JUMP_LABEL(.L_801E3DCC, 0x801E3DCC) //this is a jump label
/*801E3DCC 001E0BCC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1DA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E3DD0 001E0BD0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801E3DD4 001E0BD4*/ PPC::Runtime::ASM::ble(.L_801E3DE0);
/*801E3DD8 001E0BD8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801E3DDC 001E0BDC*/ PPC::Runtime::ASM::b(.L_801E3DE4);
RUNTIME_PPC_JUMP_LABEL(.L_801E3DE0, 0x801E3DE0) //this is a jump label
/*801E3DE0 001E0BE0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801E3DE4, 0x801E3DE4) //this is a jump label
/*801E3DE4 001E0BE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r31));
/*801E3DE8 001E0BE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801E3DEC 001E0BEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801E3DF0 001E0BF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E3DF4 001E0BF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801E3DF8 001E0BF8*/ PPC::Runtime::ASM::blr();
}