//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FD6B0.hpp"
#include "fn_80200D10.hpp"
#include "fn_8021CF80.hpp"



void fn_8021CCA8(PPC::Runtime::GCContext* context)
{
/*8021CCA8 00219AA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8021CCAC 00219AAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021CCB0 00219AB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021CCB4 00219AB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021CCB8 00219AB8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8021CCBC 00219ABC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2fc, context->r3));
/*8021CCC0 00219AC0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r3));
/*8021CCC4 00219AC4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8021CCC8 00219AC8*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*8021CCCC 00219ACC*/ PPC::Runtime::ASM::bne(.L_8021CD04);
/*8021CCD0 00219AD0*/ PPC::Runtime::ASM::bl(fn_801FD6B0);
/*8021CCD4 00219AD4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r31));
/*8021CCD8 00219AD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8021CCDC 00219ADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r31));
/*8021CCE0 00219AE0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8, context->r31));
/*8021CCE4 00219AE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2fc, context->r31));
/*8021CCE8 00219AE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb50, context->r31));
/*8021CCEC 00219AEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r31));
/*8021CCF0 00219AF0*/ PPC::Runtime::ASM::bl(fn_80200D10);
/*8021CCF4 00219AF4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8021CCF8 00219AF8*/ PPC::Runtime::ASM::beq(.L_8021CD04);
/*8021CCFC 00219AFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8021CD00 00219B00*/ PPC::Runtime::ASM::bl(fn_8021CF80);
RUNTIME_PPC_JUMP_LABEL(.L_8021CD04, 0x8021CD04) //this is a jump label
/*8021CD04 00219B04*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb56, context->r31));
/*8021CD08 00219B08*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8021CD0C 00219B0C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb56, context->r31));
/*8021CD10 00219B10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021CD14 00219B14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021CD18 00219B18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8021CD1C 00219B1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021CD20 00219B20*/ PPC::Runtime::ASM::blr();
}