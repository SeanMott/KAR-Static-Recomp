//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80170F28(PPC::Runtime::GCContext* context)
{
/*80170F28 0016DD28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80170F2C 0016DD2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80170F30 0016DD30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80170F34 0016DD34*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80170F38 0016DD38*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80170F3C 0016DD3C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80170F40 0016DD40*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80170F44 0016DD44*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80170F48 0016DD48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc50, context->r3));
/*80170F4C 0016DD4C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80170F50 0016DD50*/ PPC::Runtime::ASM::beq(.L_80170F7C);
/*80170F54 0016DD54*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80170F58 0016DD58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80170F5C 0016DD5C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*80170F60 0016DD60*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*80170F64 0016DD64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*80170F68 0016DD68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*80170F6C 0016DD6C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80170F70 0016DD70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80170F74 0016DD74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r4));
/*80170F78 0016DD78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80170F7C, 0x80170F7C) //this is a jump label
/*80170F7C 0016DD7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80170F80 0016DD80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80170F84 0016DD84*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80170F88 0016DD88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80170F8C 0016DD8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80170F90 0016DD90*/ PPC::Runtime::ASM::blr();
}