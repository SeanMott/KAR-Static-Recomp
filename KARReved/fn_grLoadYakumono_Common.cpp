//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_lbLoadArchive.hpp"



void fn_grLoadYakumono_Common(PPC::Runtime::GCContext* context)
{
/*800F8254 000F5054*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F8258 000F5058*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F825C 000F505C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F8260 000F5060*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD6C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F8264 000F5064*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F8268 000F5068*/ PPC::Runtime::ASM::bne(.L_800F8290);
/*800F826C 000F506C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_992 @ Get_MemoryOffset_HighBit);
/*800F8270 000F5070*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_994 @ Get_MemoryOffset_HighBit);
/*800F8274 000F5074*/ PPC::Runtime::ASM::addi(context->r4, context->r3, MemoryOffset_992 @ Get_MemoryOffset_LowBit);
/*800F8278 000F5078*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800F827C 000F507C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, MemoryOffset_994 @ Get_MemoryOffset_LowBit);
/*800F8280 000F5080*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F8284 000F5084*/ PPC::Runtime::ASM::li(context->r5, STRUCT_BYTE4_COUNT_1805DD6C0 @ Get_MemoryOffset_SDA21);
/*800F8288 000F5088*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800F828C 000F508C*/ PPC::Runtime::ASM::bl(fn_lbLoadArchive);
RUNTIME_PPC_JUMP_LABEL(.L_800F8290, 0x800F8290) //this is a jump label
/*800F8290 000F5090*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F8294 000F5094*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F8298 000F5098*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F829C 000F509C*/ PPC::Runtime::ASM::blr();
}