//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80325354.hpp"
#include "fn_803253C0.hpp"



void fn_802AFCF4(PPC::Runtime::GCContext* context)
{
/*802AFCF4 002ACAF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AFCF8 002ACAF8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AFCFC 002ACAFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AFD00 002ACB00*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*802AFD04 002ACB04*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802AFD08 002ACB08*/ PPC::Runtime::ASM::beq(.L_802AFD3C);
/*802AFD0C 002ACB0C*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*802AFD10 002ACB10*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AFD14 002ACB14*/ PPC::Runtime::ASM::li(context->r5, lbl_805D800C @ Get_MemoryOffset_SDA21);
/*802AFD18 002ACB18*/ PPC::Runtime::ASM::li(context->r6, lbl_805D7F20 @ Get_MemoryOffset_SDA21);
/*802AFD1C 002ACB1C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*802AFD20 002ACB20*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*802AFD24 002ACB24*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802AFD28 002ACB28*/ PPC::Runtime::ASM::bl(fn_8039A7BC);
/* 802AFD2C 002ACB2C  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*802AFD30 002ACB30*/ PPC::Runtime::ASM::beq(.L_802AFD3C);
/*802AFD34 002ACB34*/ PPC::Runtime::ASM::bl(fn_80325354);
/*802AFD38 002ACB38*/ PPC::Runtime::ASM::bl(fn_803253C0);
RUNTIME_PPC_JUMP_LABEL(.L_802AFD3C, 0x802AFD3C) //this is a jump label
/*802AFD3C 002ACB3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AFD40 002ACB40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AFD44 002ACB44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AFD48 002ACB48*/ PPC::Runtime::ASM::blr();
}