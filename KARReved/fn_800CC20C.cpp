//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5B94.hpp"
#include "fn_800B5AF0.hpp"
#include "fn_800B5B44.hpp"
#include "fn_8000AF5C.hpp"
#include "fn_cameraControlThink.hpp"



void fn_800CC20C(PPC::Runtime::GCContext* context)
{
/*800CC20C 000C900C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800CC210 000C9010*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CC214 000C9014*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CC218 000C9018*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800CC21C 000C901C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800CC220 000C9020*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800CC224 000C9024*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800CC228 000C9028*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r3));
/*800CC22C 000C902C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa9, context->r4));
/* 800CC230 000C9030  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800CC234 000C9034*/ PPC::Runtime::ASM::bne(.L_800CC278);
/*800CC238 000C9038*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r30));
/*800CC23C 000C903C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800CC240 000C9040*/ PPC::Runtime::ASM::bl(fn_800B5B94);
/*800CC244 000C9044*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800CC248 000C9048*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800CC24C 000C904C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x234, context->r3));
/*800CC250 000C9050*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r3));
/*800CC254 000C9054*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x1);
/*800CC258 000C9058*/ PPC::Runtime::ASM::bge(.L_800CC268);
/*800CC25C 000C905C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800CC260 000C9060*/ PPC::Runtime::ASM::bl(fn_800B5AF0);
/*800CC264 000C9064*/ PPC::Runtime::ASM::b(.L_800CC270);
RUNTIME_PPC_JUMP_LABEL(.L_800CC268, 0x800CC268) //this is a jump label
/*800CC268 000C9068*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800CC26C 000C906C*/ PPC::Runtime::ASM::bl(fn_800B5B44);
RUNTIME_PPC_JUMP_LABEL(.L_800CC270, 0x800CC270) //this is a jump label
/*800CC270 000C9070*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800CC274 000C9074*/ PPC::Runtime::ASM::b(.L_800CC2E4);
RUNTIME_PPC_JUMP_LABEL(.L_800CC278, 0x800CC278) //this is a jump label
/*800CC278 000C9078*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x17c, context->r30));
/*800CC27C 000C907C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/* 800CC280 000C9080  54 00 F7 FF */ extrwi. context->r0 , context->r0 , 1 , 29
/*800CC284 000C9084*/ PPC::Runtime::ASM::bne(.L_800CC2E0);
/*800CC288 000C9088*/ PPC::Runtime::ASM::bl(fn_8000AF5C);
/*800CC28C 000C908C*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*800CC290 000C9090*/ PPC::Runtime::ASM::bne(.L_800CC2E0);
/*800CC294 000C9094*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800CC298 000C9098*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF528 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CC29C 000C909C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800CC2A0 000C90A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800CC2A4 000C90A4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x234, context->r4));
/*800CC2A8 000C90A8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800CC2AC 000C90AC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800CC2B0 000C90B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x354, context->r6));
/*800CC2B4 000C90B4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*800CC2B8 000C90B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CC2BC 000C90BC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r6));
/*800CC2C0 000C90C0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CC2C4 000C90C4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35c, context->r6));
/*800CC2C8 000C90C8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800CC2CC 000C90CC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x360, context->r6));
/*800CC2D0 000C90D0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CC2D4 000C90D4*/ PPC::Runtime::ASM::bl(fn_cameraControlThink);
/*800CC2D8 000C90D8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CC2DC 000C90DC*/ PPC::Runtime::ASM::b(.L_800CC2E4);
RUNTIME_PPC_JUMP_LABEL(.L_800CC2E0, 0x800CC2E0) //this is a jump label
/*800CC2E0 000C90E0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800CC2E4, 0x800CC2E4) //this is a jump label
/*800CC2E4 000C90E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CC2E8 000C90E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800CC2EC 000C90EC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800CC2F0 000C90F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CC2F4 000C90F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800CC2F8 000C90F8*/ PPC::Runtime::ASM::blr();
}