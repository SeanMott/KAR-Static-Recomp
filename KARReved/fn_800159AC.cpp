//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000FCB0.hpp"
#include "fn_8000A1D8.hpp"
#include "fn_800132B8.hpp"
#include "fn_800155D4.hpp"



void fn_800159AC(PPC::Runtime::GCContext* context)
{
/*800159AC 000127AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800159B0 000127B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800159B4 000127B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800159B8 000127B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800159BC 000127BC*/ PPC::Runtime::ASM::bl(fn_8000FCB0);
/*800159C0 000127C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800159C4 000127C4*/ PPC::Runtime::ASM::bl(fn_8000A1D8);
/*800159C8 000127C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800159CC 000127CC*/ PPC::Runtime::ASM::beq(.L_800159EC);
/*800159D0 000127D0*/ PPC::Runtime::ASM::bl(fn_800132B8);
/*800159D4 000127D4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*800159D8 000127D8*/ PPC::Runtime::ASM::divwu(context->r0, context->r3, context->r4);
/*800159DC 000127DC*/ PPC::Runtime::ASM::mullw(context->r0, context->r0, context->r4);
/*800159E0 000127E0*/ PPC::Runtime::ASM::subf.(context->r0, context->r0, context->r3);
/*800159E4 000127E4*/ PPC::Runtime::ASM::bne(.L_800159EC);
/*800159E8 000127E8*/ PPC::Runtime::ASM::bl(fn_800155D4);
RUNTIME_PPC_JUMP_LABEL(.L_800159EC, 0x800159EC) //this is a jump label
/*800159EC 000127EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800159F0 000127F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800159F4 000127F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800159F8 000127F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800159FC 000127FC*/ PPC::Runtime::ASM::blr();
}