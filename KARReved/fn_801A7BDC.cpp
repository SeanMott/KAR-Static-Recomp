//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801A7BDC(PPC::Runtime::GCContext* context)
{
/*801A7BDC 001A49DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A7BE0 001A49E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801A7BE4 001A49E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801A7BE8 001A49E8*/ PPC::Runtime::ASM::bne(.L_801A7C44);
/*801A7BEC 001A49EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r3));
/*801A7BF0 001A49F0*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*801A7BF4 001A49F4*/ PPC::Runtime::ASM::beq(.L_801A7C44);
/*801A7BF8 001A49F8*/ PPC::Runtime::ASM::xoris(context->r0, context->r4, 0x8000);
/*801A7BFC 001A49FC*/ PPC::Runtime::ASM::lis(context->r4, 0x4330);
/*801A7C00 001A4A00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A7C04 001A4A04*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x826, context->r3));
/*801A7C08 001A4A08*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A7C0C 001A4A0C*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E1338 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/* 801A7C10 001A4A10  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801A7C14 001A4A14*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A7C18 001A4A18*/ PPC::Runtime::ASM::fsubs(context->f1, context->f0, context->f1);
/*801A7C1C 001A4A1C*/ PPC::Runtime::ASM::beq(.L_801A7C2C);
/*801A7C20 001A4A20*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r3));
/*801A7C24 001A4A24*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x160, context->r4));
/*801A7C28 001A4A28*/ PPC::Runtime::ASM::b(.L_801A7C30);
RUNTIME_PPC_JUMP_LABEL(.L_801A7C2C, 0x801A7C2C) //this is a jump label
/*801A7C2C 001A4A2C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E132C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_801A7C30, 0x801A7C30) //this is a jump label
/*801A7C30 001A4A30*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*801A7C34 001A4A34*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f0);
/*801A7C38 001A4A38*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A7C3C 001A4A3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A7C40 001A4A40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_801A7C44, 0x801A7C44) //this is a jump label
/*801A7C44 001A4A44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r3));
/*801A7C48 001A4A48*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*801A7C4C 001A4A4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A7C50 001A4A50*/ PPC::Runtime::ASM::xoris(context->r0, context->r4, 0x8000);
/*801A7C54 001A4A54*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E1338 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A7C58 001A4A58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A7C5C 001A4A5C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1330 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A7C60 001A4A60*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A7C64 001A4A64*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f1);
/*801A7C68 001A4A68*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f0);
/*801A7C6C 001A4A6C*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f0);
/*801A7C70 001A4A70*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A7C74 001A4A74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A7C78 001A4A78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x920, context->r3));
/*801A7C7C 001A4A7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A7C80 001A4A80*/ PPC::Runtime::ASM::blr();
}