//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800AEC18.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AEBDC.hpp"
#include "fn_800AEBDC.hpp"
#include "fn_800ABA74.hpp"



void fn_debug_openSoundTest(PPC::Runtime::GCContext* context)
{
/*800ADB24 000AA924*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADB28 000AA928*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADB2C 000AA92C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADB30 000AA930*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADB34 000AA934*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADB38 000AA938*/ PPC::Runtime::ASM::bl(fn_800AEC18);
/*800ADB3C 000AA93C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*800ADB40 000AA940*/ PPC::Runtime::ASM::bne(.L_800ADB78);
/*800ADB44 000AA944*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADB48 000AA948*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADB4C 000AA94C*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADB50 000AA950*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_33_MaybeSoundMenu @ Get_MemoryOffset_HighBit);
/*800ADB54 000AA954*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADB58 000AA958*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_33_MaybeSoundMenu @ Get_MemoryOffset_LowBit);
/*800ADB5C 000AA95C*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADB60 000AA960*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADB64 000AA964*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADB68 000AA968*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADB6C 000AA96C*/ PPC::Runtime::ASM::lis(context->r4, fn_800AEBDC @ Get_MemoryOffset_HighBit);
/*800ADB70 000AA970*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AEBDC @ Get_MemoryOffset_LowBit);
/*800ADB74 000AA974*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADB78, 0x800ADB78) //this is a jump label
/*800ADB78 000AA978*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADB7C 000AA97C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADB80 000AA980*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADB84 000AA984*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADB88 000AA988*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADB8C 000AA98C*/ PPC::Runtime::ASM::blr();
}