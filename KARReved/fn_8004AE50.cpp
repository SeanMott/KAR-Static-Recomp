//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8003D5F0.hpp"
#include "fn_gmGetClearcheckerType0Ptr.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_8022EB88.hpp"
#include "fn_802306D4.hpp"



void fn_8004AE50(PPC::Runtime::GCContext* context)
{
/*8004AE50 00047C50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8004AE54 00047C54*/ PPC::Runtime::ASM::mflr(context->r0);
/*8004AE58 00047C58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8004AE5C 00047C5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8004AE60 00047C60*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8004AE64 00047C64*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004AE68 00047C68*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8004AE6C 00047C6C*/ PPC::Runtime::ASM::bl(fn_8003D5F0);
/*8004AE70 00047C70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8004AE74 00047C74*/ PPC::Runtime::ASM::bl(fn_gmGetClearcheckerType0Ptr);
/*8004AE78 00047C78*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8004AE7C 00047C7C*/ PPC::Runtime::ASM::extsb(context->r31, context->r31);
/*8004AE80 00047C80*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*8004AE84 00047C84*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8004AE88, 0x8004AE88) //this is a jump label
/*8004AE88 00047C88*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8004AE8C 00047C8C*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*8004AE90 00047C90*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8004AE94 00047C94*/ PPC::Runtime::ASM::beq(.L_8004AEA8);
/*8004AE98 00047C98*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8004AE9C 00047C9C*/ PPC::Runtime::ASM::bne(.L_8004AEC0);
/*8004AEA0 00047CA0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*8004AEA4 00047CA4*/ PPC::Runtime::ASM::bne(.L_8004AEC0);
RUNTIME_PPC_JUMP_LABEL(.L_8004AEA8, 0x8004AEA8) //this is a jump label
/*8004AEA8 00047CA8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8004AEAC 00047CAC*/ PPC::Runtime::ASM::bl(fn_8022EB88);
/*8004AEB0 00047CB0*/ PPC::Runtime::ASM::add(context->r28, context->r28, context->r3);
/*8004AEB4 00047CB4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8004AEB8 00047CB8*/ PPC::Runtime::ASM::bl(fn_802306D4);
/*8004AEBC 00047CBC*/ PPC::Runtime::ASM::add(context->r28, context->r28, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8004AEC0, 0x8004AEC0) //this is a jump label
/*8004AEC0 00047CC0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8004AEC4 00047CC4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x5);
/*8004AEC8 00047CC8*/ PPC::Runtime::ASM::blt(.L_8004AE88);
/*8004AECC 00047CCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r30));
/*8004AED0 00047CD0*/ PPC::Runtime::ASM::add(context->r28, context->r28, context->r0);
/*8004AED4 00047CD4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8004AED8 00047CD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8004AEDC 00047CDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8004AEE0 00047CE0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004AEE4 00047CE4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8004AEE8 00047CE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8004AEEC 00047CEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004AEF0 00047CF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8004AEF4 00047CF4*/ PPC::Runtime::ASM::blr();
}