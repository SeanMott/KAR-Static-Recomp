//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138BA4.hpp"



void fn_80154874(PPC::Runtime::GCContext* context)
{
/*80154874 00151674*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80154878 00151678*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015487C 0015167C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80154880 00151680*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80154884 00151684*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80154888 00151688*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015488C 0015168C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80154890 00151690*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80154894 00151694*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80154898 00151698*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015489C 0015169C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801548A0 001516A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x618, context->r3));
/*801548A4 001516A4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801548A8 001516A8*/ PPC::Runtime::ASM::beq(.L_801548C4);
/*801548AC 001516AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801548B0 001516B0*/ PPC::Runtime::ASM::extsb(context->r4, context->r31);
/*801548B4 001516B4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0758 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801548B8 001516B8*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b, context->r3));
/*801548BC 001516BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*801548C0 001516C0*/ PPC::Runtime::ASM::bl(fn_80138BA4);
RUNTIME_PPC_JUMP_LABEL(.L_801548C4, 0x801548C4) //this is a jump label
/*801548C4 001516C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801548C8 001516C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801548CC 001516CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801548D0 001516D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801548D4 001516D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801548D8 001516D8*/ PPC::Runtime::ASM::blr();
}