//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_8009EEC8.hpp"



void fn_8009F094(PPC::Runtime::GCContext* context)
{
/*8009F094 0009BE94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8009F098 0009BE98*/ PPC::Runtime::ASM::mflr(context->r0);
/*8009F09C 0009BE9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009F0A0 0009BEA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/* 8009F0A4 0009BEA4  7C BF 2B 79 */ mr. context->r31 , context->r5
/*8009F0A8 0009BEA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009F0AC 0009BEAC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8009F0B0 0009BEB0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009F0B4 0009BEB4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8009F0B8 0009BEB8*/ PPC::Runtime::ASM::bne(.L_8009F15C);
/*8009F0BC 0009BEBC*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*8009F0C0 0009BEC0*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8009F0C4 0009BEC4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009F0C8 0009BEC8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009F0CC 0009BECC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009F0D0 0009BED0*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*8009F0D4 0009BED4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8009F0D8 0009BED8*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009F0DC 0009BEDC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009F0E0 0009BEE0*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009F0E4 0009BEE4*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8009F0E8 0009BEE8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009F0EC 0009BEEC*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009F0F0 0009BEF0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009F0F4 0009BEF4*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*8009F0F8 0009BEF8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8009F0FC 0009BEFC*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009F100 0009BF00*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009F104 0009BF04*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009F108 0009BF08*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*8009F10C 0009BF0C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8009F110 0009BF10*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*8009F114 0009BF14*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009F118 0009BF18*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009F11C 0009BF1C*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*8009F120 0009BF20*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009F124 0009BF24*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8009F128 0009BF28*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*8009F12C 0009BF2C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009F130 0009BF30*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009F134 0009BF34*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*8009F138 0009BF38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009F13C 0009BF3C*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*8009F140 0009BF40*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8009F144 0009BF44*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*8009F148 0009BF48*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_638 @ Get_MemoryOffset_HighBit);
/*8009F14C 0009BF4C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8009F150 0009BF50*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_638 @ Get_MemoryOffset_LowBit);
/*8009F154 0009BF54*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8009F158 0009BF58*/ PPC::Runtime::ASM::bl(fn_8009EEC8);
RUNTIME_PPC_JUMP_LABEL(.L_8009F15C, 0x8009F15C) //this is a jump label
/*8009F15C 0009BF5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009F160 0009BF60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009F164 0009BF64*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009F168 0009BF68*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009F16C 0009BF6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8009F170 0009BF70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8009F174 0009BF74*/ PPC::Runtime::ASM::blr();
}