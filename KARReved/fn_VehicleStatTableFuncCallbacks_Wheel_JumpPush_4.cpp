//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801F8558.hpp"
#include "fn_801CF60C.hpp"
#include "fn_checkMachineStuck.hpp"
#include "fn_801D0BE4.hpp"
#include "fn_801D0C08.hpp"
#include "fn_801D2D2C.hpp"
#include "fn_801E6848.hpp"
#include "fn_801E3E48.hpp"
#include "fn_801F7D54.hpp"
#include "fn_801F8874.hpp"
#include "fn_801FA0B8.hpp"
#include "fn_801FAE30.hpp"



void fn_VehicleStatTableFuncCallbacks_Wheel_JumpPush_4(PPC::Runtime::GCContext* context)
{
/*801FAD78 001F7B78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FAD7C 001F7B7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FAD80 001F7B80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FAD84 001F7B84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FAD88 001F7B88*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FAD8C 001F7B8C*/ PPC::Runtime::ASM::bl(fn_801F8558);
/*801FAD90 001F7B90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD94 001F7B94*/ PPC::Runtime::ASM::bl(fn_801CF60C);
/*801FAD98 001F7B98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD9C 001F7B9C*/ PPC::Runtime::ASM::bl(fn_checkMachineStuck);
/*801FADA0 001F7BA0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FADA4 001F7BA4*/ PPC::Runtime::ASM::bne(.L_801FAE1C);
/*801FADA8 001F7BA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FADAC 001F7BAC*/ PPC::Runtime::ASM::bl(fn_801D0BE4);
/*801FADB0 001F7BB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FADB4 001F7BB4*/ PPC::Runtime::ASM::bl(fn_801D0C08);
/*801FADB8 001F7BB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FADBC 001F7BBC*/ PPC::Runtime::ASM::bl(fn_801D2D2C);
/*801FADC0 001F7BC0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FADC4 001F7BC4*/ PPC::Runtime::ASM::bne(.L_801FAE1C);
/*801FADC8 001F7BC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FADCC 001F7BCC*/ PPC::Runtime::ASM::bl(fn_801E6848);
/*801FADD0 001F7BD0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FADD4 001F7BD4*/ PPC::Runtime::ASM::bne(.L_801FAE1C);
/*801FADD8 001F7BD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FADDC 001F7BDC*/ PPC::Runtime::ASM::bl(fn_801E3E48);
/*801FADE0 001F7BE0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FADE4 001F7BE4*/ PPC::Runtime::ASM::beq(.L_801FAE10);
/*801FADE8 001F7BE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/* 801FADEC 001F7BEC  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*801FADF0 001F7BF0*/ PPC::Runtime::ASM::beq(.L_801FAE04);
/*801FADF4 001F7BF4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FADF8 001F7BF8*/ PPC::Runtime::ASM::bl(fn_801F7D54);
/*801FADFC 001F7BFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAE00 001F7C00*/ PPC::Runtime::ASM::bl(fn_801F8874);
RUNTIME_PPC_JUMP_LABEL(.L_801FAE04, 0x801FAE04) //this is a jump label
/*801FAE04 001F7C04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAE08 001F7C08*/ PPC::Runtime::ASM::bl(fn_801FA0B8);
/*801FAE0C 001F7C0C*/ PPC::Runtime::ASM::b(.L_801FAE1C);
RUNTIME_PPC_JUMP_LABEL(.L_801FAE10, 0x801FAE10) //this is a jump label
/*801FAE10 001F7C10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAE14 001F7C14*/ PPC::Runtime::ASM::bl(fn_801FAE30);
/*801FAE18 001F7C18*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801FAE1C, 0x801FAE1C) //this is a jump label
/*801FAE1C 001F7C1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FAE20 001F7C20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FAE24 001F7C24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FAE28 001F7C28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FAE2C 001F7C2C*/ PPC::Runtime::ASM::blr();
}