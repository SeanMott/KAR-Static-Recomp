//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_CObjMtxIsDirty.hpp"
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_WObjGetPosition.hpp"
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_WObjGetPosition.hpp"
#include "fn_PSVECSubtract.hpp"
#include "fn_PSVECNormalize.hpp"
#include "fn_PSVECDotProduct.hpp"
#include "fn_C_MTXLookAt.hpp"
#include "fn_PSMTXMultVecSR.hpp"
#include "fn_atan2?.hpp"



void fn_80401BA0(PPC::Runtime::GCContext* context)
{
/*80401BA0 003FE9A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*80401BA4 003FE9A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80401BA8 003FE9A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*80401BAC 003FE9AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*80401BB0 003FE9B0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80401BB4 003FE9B4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/* 80401BB8 003FE9B8  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80401BBC 003FE9BC*/ PPC::Runtime::ASM::beq(.L_80401BD8);
/*80401BC0 003FE9C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*80401BC4 003FE9C4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80401BC8 003FE9C8*/ PPC::Runtime::ASM::beq(.L_80401BD8);
/*80401BCC 003FE9CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*80401BD0 003FE9D0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80401BD4 003FE9D4*/ PPC::Runtime::ASM::bne(.L_80401BE0);
RUNTIME_PPC_JUMP_LABEL(.L_80401BD8, 0x80401BD8) //this is a jump label
/*80401BD8 003FE9D8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80401BDC 003FE9DC*/ PPC::Runtime::ASM::b(.L_80401CF8);
RUNTIME_PPC_JUMP_LABEL(.L_80401BE0, 0x80401BE0) //this is a jump label
/*80401BE0 003FE9E0*/ PPC::Runtime::ASM::bl(fn_HSD_CObjMtxIsDirty);
/*80401BE4 003FE9E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80401BE8 003FE9E8*/ PPC::Runtime::ASM::bne(.L_80401C0C);
/*80401BEC 003FE9EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r30));
/*80401BF0 003FE9F0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80401BF4 003FE9F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r30));
/*80401BF8 003FE9F8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80401BFC 003FE9FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80401C00 003FEA00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r30));
/*80401C04 003FEA04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80401C08 003FEA08*/ PPC::Runtime::ASM::b(.L_80401CF8);
RUNTIME_PPC_JUMP_LABEL(.L_80401C0C, 0x80401C0C) //this is a jump label
/*80401C0C 003FEA0C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80401C10 003FEA10*/ PPC::Runtime::ASM::bne(.L_80401C24);
/*80401C14 003FEA14*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_540 @ Get_MemoryOffset_SDA21);
/*80401C18 003FEA18*/ PPC::Runtime::ASM::li(context->r4, 0x309);
/*80401C1C 003FEA1C*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_539 @ Get_MemoryOffset_SDA21);
/*80401C20 003FEA20*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80401C24, 0x80401C24) //this is a jump label
/*80401C24 003FEA24*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80401C28 003FEA28*/ PPC::Runtime::ASM::bne(.L_80401C3C);
/*80401C2C 003FEA2C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_540 @ Get_MemoryOffset_SDA21);
/*80401C30 003FEA30*/ PPC::Runtime::ASM::li(context->r4, 0x2d9);
/*80401C34 003FEA34*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_539 @ Get_MemoryOffset_SDA21);
/*80401C38 003FEA38*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80401C3C, 0x80401C3C) //this is a jump label
/*80401C3C 003FEA3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*80401C40 003FEA40*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80401C44 003FEA44*/ PPC::Runtime::ASM::bl(fn_HSD_WObjGetPosition);
/*80401C48 003FEA48*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80401C4C 003FEA4C*/ PPC::Runtime::ASM::bne(.L_80401C60);
/*80401C50 003FEA50*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_540 @ Get_MemoryOffset_SDA21);
/*80401C54 003FEA54*/ PPC::Runtime::ASM::li(context->r4, 0x2f1);
/*80401C58 003FEA58*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_539 @ Get_MemoryOffset_SDA21);
/*80401C5C 003FEA5C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80401C60, 0x80401C60) //this is a jump label
/*80401C60 003FEA60*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80401C64 003FEA64*/ PPC::Runtime::ASM::bne(.L_80401C78);
/*80401C68 003FEA68*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_540 @ Get_MemoryOffset_SDA21);
/*80401C6C 003FEA6C*/ PPC::Runtime::ASM::li(context->r4, 0x2c1);
/*80401C70 003FEA70*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_539 @ Get_MemoryOffset_SDA21);
/*80401C74 003FEA74*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80401C78, 0x80401C78) //this is a jump label
/*80401C78 003FEA78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*80401C7C 003FEA7C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*80401C80 003FEA80*/ PPC::Runtime::ASM::bl(fn_HSD_WObjGetPosition);
/*80401C84 003FEA84*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*80401C88 003FEA88*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80401C8C 003FEA8C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x20);
/*80401C90 003FEA90*/ PPC::Runtime::ASM::bl(fn_PSVECSubtract);
/*80401C94 003FEA94*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80401C98 003FEA98*/ PPC::Runtime::ASM::lis(context->r3, StructValues_Float_8 @ Get_MemoryOffset_HighBit);
/*80401C9C 003FEA9C*/ PPC::Runtime::ASM::lfs(context->f1, StructValues_Float_8 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80401CA0 003FEAA0*/ PPC::Runtime::ASM::fabs(context->f0, context->f0);
/*80401CA4 003FEAA4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*80401CA8 003FEAA8*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*80401CAC 003FEAAC*/ PPC::Runtime::ASM::bne(.L_80401CE0);
/*80401CB0 003FEAB0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80401CB4 003FEAB4*/ PPC::Runtime::ASM::fabs(context->f0, context->f0);
/*80401CB8 003FEAB8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*80401CBC 003FEABC*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*80401CC0 003FEAC0*/ PPC::Runtime::ASM::bne(.L_80401CE0);
/*80401CC4 003FEAC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80401CC8 003FEAC8*/ PPC::Runtime::ASM::fabs(context->f0, context->f0);
/*80401CCC 003FEACC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*80401CD0 003FEAD0*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*80401CD4 003FEAD4*/ PPC::Runtime::ASM::bne(.L_80401CE0);
/*80401CD8 003FEAD8*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*80401CDC 003FEADC*/ PPC::Runtime::ASM::b(.L_80401CF0);
RUNTIME_PPC_JUMP_LABEL(.L_80401CE0, 0x80401CE0) //this is a jump label
/*80401CE0 003FEAE0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*80401CE4 003FEAE4*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80401CE8 003FEAE8*/ PPC::Runtime::ASM::bl(fn_PSVECNormalize);
/*80401CEC 003FEAEC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80401CF0, 0x80401CF0) //this is a jump label
/*80401CF0 003FEAF0*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*80401CF4 003FEAF4*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 5);
RUNTIME_PPC_JUMP_LABEL(.L_80401CF8, 0x80401CF8) //this is a jump label
/*80401CF8 003FEAF8*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*80401CFC 003FEAFC*/ PPC::Runtime::ASM::bne(.L_80401D08);
/*80401D00 003FEB00*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5A58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80401D04 003FEB04*/ PPC::Runtime::ASM::b(.L_80401DA4);
RUNTIME_PPC_JUMP_LABEL(.L_80401D08, 0x80401D08) //this is a jump label
/*80401D08 003FEB08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80401D0C 003FEB0C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*80401D10 003FEB10*/ PPC::Runtime::ASM::bl(fn_PSVECDotProduct);
/*80401D14 003FEB14*/ PPC::Runtime::ASM::fabs(context->f1, context->f1);
/*80401D18 003FEB18*/ PPC::Runtime::ASM::lis(context->r3, StructValues_Float_8 @ Get_MemoryOffset_HighBit);
/*80401D1C 003FEB1C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E5A5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80401D20 003FEB20*/ PPC::Runtime::ASM::lfs(context->f0, StructValues_Float_8 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80401D24 003FEB24*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
/*80401D28 003FEB28*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*80401D2C 003FEB2C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80401D30 003FEB30*/ PPC::Runtime::ASM::bge(.L_80401D3C);
/*80401D34 003FEB34*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5A58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80401D38 003FEB38*/ PPC::Runtime::ASM::b(.L_80401DA4);
RUNTIME_PPC_JUMP_LABEL(.L_80401D3C, 0x80401D3C) //this is a jump label
/*80401D3C 003FEB3C*/ PPC::Runtime::ASM::lis(context->r3, lbl_805033C0 @ Get_MemoryOffset_HighBit);
/*80401D40 003FEB40*/ PPC::Runtime::ASM::lis(context->r5, lbl_805033CC @ Get_MemoryOffset_HighBit);
/*80401D44 003FEB44*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_805033C0 @ Get_MemoryOffset_LowBit);
/*80401D48 003FEB48*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x20);
/*80401D4C 003FEB4C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x38);
/*80401D50 003FEB50*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_805033CC @ Get_MemoryOffset_LowBit);
/*80401D54 003FEB54*/ PPC::Runtime::ASM::bl(fn_C_MTXLookAt);
/*80401D58 003FEB58*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80401D5C 003FEB5C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x38);
/*80401D60 003FEB60*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x2c);
/*80401D64 003FEB64*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVecSR);
/*80401D68 003FEB68*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80401D6C 003FEB6C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80401D70 003FEB70*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E5A58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80401D74 003FEB74*/ PPC::Runtime::ASM::fneg(context->f1, context->f1);
/*80401D78 003FEB78*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f2);
/*80401D7C 003FEB7C*/ PPC::Runtime::ASM::bne(.L_80401D9C);
/*80401D80 003FEB80*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80401D84 003FEB84*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80401D88 003FEB88*/ PPC::Runtime::ASM::bne(.L_80401D94);
/*80401D8C 003FEB8C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5A80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80401D90 003FEB90*/ PPC::Runtime::ASM::b(.L_80401DA4);
RUNTIME_PPC_JUMP_LABEL(.L_80401D94, 0x80401D94) //this is a jump label
/*80401D94 003FEB94*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5A84 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80401D98 003FEB98*/ PPC::Runtime::ASM::b(.L_80401DA4);
RUNTIME_PPC_JUMP_LABEL(.L_80401D9C, 0x80401D9C) //this is a jump label
/*80401D9C 003FEB9C*/ PPC::Runtime::ASM::bl(fn_atan2?);
/*80401DA0 003FEBA0*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
RUNTIME_PPC_JUMP_LABEL(.L_80401DA4, 0x80401DA4) //this is a jump label
/*80401DA4 003FEBA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*80401DA8 003FEBA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*80401DAC 003FEBAC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*80401DB0 003FEBB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80401DB4 003FEBB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*80401DB8 003FEBB8*/ PPC::Runtime::ASM::blr();
}