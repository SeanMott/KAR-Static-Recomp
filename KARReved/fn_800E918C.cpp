//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800E918C(PPC::Runtime::GCContext* context)
{
/*800E918C 000E5F8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E9190 000E5F90*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E9194 000E5F94*/ PPC::Runtime::ASM::lis(context->r6, MemoryOffset_960 @ Get_MemoryOffset_HighBit);
/*800E9198 000E5F98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E919C 000E5F9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E91A0 000E5FA0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800E91A4 000E5FA4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E91A8 000E5FA8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800E91AC 000E5FAC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E91B0 000E5FB0*/ PPC::Runtime::ASM::addi(context->r29, context->r6, MemoryOffset_960 @ Get_MemoryOffset_LowBit);
/*800E91B4 000E5FB4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E91B8 000E5FB8*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E91BC 000E5FBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800E91C0 000E5FC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800E91C4 000E5FC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800E91C8 000E5FC8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E91CC 000E5FCC*/ PPC::Runtime::ASM::bne(.L_800E91E0);
/*800E91D0 000E5FD0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E91D4 000E5FD4*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xe0);
/*800E91D8 000E5FD8*/ PPC::Runtime::ASM::li(context->r4, 0x129);
/*800E91DC 000E5FDC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E91E0, 0x800E91E0) //this is a jump label
/*800E91E0 000E5FE0*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E91E4 000E5FE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E91E8 000E5FE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E91EC 000E5FEC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E91F0 000E5FF0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800E91F4 000E5FF4*/ PPC::Runtime::ASM::bne(.L_800E9208);
/*800E91F8 000E5FF8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E91FC 000E5FFC*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x38);
/*800E9200 000E6000*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800E9204 000E6004*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E9208, 0x800E9208) //this is a jump label
/*800E9208 000E6008*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800E920C 000E600C*/ PPC::Runtime::ASM::xor(context->r0, context->r31, context->r0);
/*800E9210 000E6010*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800E9214 000E6014*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r31);
/*800E9218 000E6018*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800E921C 000E601C  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800E9220 000E6020*/ PPC::Runtime::ASM::beq(.L_800E9250);
/*800E9224 000E6024*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E9228 000E6028*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E922C 000E602C*/ PPC::Runtime::ASM::beq(.L_800E9238);
/*800E9230 000E6030*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E9234 000E6034*/ PPC::Runtime::ASM::b(.L_800E923C);
RUNTIME_PPC_JUMP_LABEL(.L_800E9238, 0x800E9238) //this is a jump label
/*800E9238 000E6038*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E923C, 0x800E923C) //this is a jump label
/*800E923C 000E603C*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r31);
/*800E9240 000E6040*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800E9244 000E6044*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800E9248 000E6048*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800E924C 000E604C*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800E9250, 0x800E9250) //this is a jump label
/*800E9250 000E6050*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E9254 000E6054*/ PPC::Runtime::ASM::bne(.L_800E9278);
/*800E9258 000E6058*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800E925C 000E605C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x48);
/*800E9260 000E6060*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800E9264 000E6064*/ PPC::Runtime::ASM::bl(OSReport);
/*800E9268 000E6068*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E926C 000E606C*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x58);
/*800E9270 000E6070*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800E9274 000E6074*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E9278, 0x800E9278) //this is a jump label
/*800E9278 000E6078*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E927C 000E607C*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*800E9280 000E6080*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*800E9284 000E6084*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800E9288 000E6088*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800E928C 000E608C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800E9290 000E6090*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E9294 000E6094*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800E9298 000E6098*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r0);
/*800E929C 000E609C*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*800E92A0 000E60A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E92A4 000E60A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E92A8 000E60A8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E92AC 000E60AC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E92B0 000E60B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E92B4 000E60B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E92B8 000E60B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E92BC 000E60BC*/ PPC::Runtime::ASM::blr();
}