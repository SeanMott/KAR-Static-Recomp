//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802ECB7C(PPC::Runtime::GCContext* context)
{
/*802ECB7C 002E997C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r3));
/*802ECB80 002E9980*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802ECB84 002E9984*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x15);
/* 802ECB88 002E9988  4D 81 00 20 */ bgtlr
/*802ECB8C 002E998C*/ PPC::Runtime::ASM::lis(context->r4, jumptable_804D849C @ Get_MemoryOffset_HighBit);
/*802ECB90 002E9990*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*802ECB94 002E9994*/ PPC::Runtime::ASM::addi(context->r4, context->r4, jumptable_804D849C @ Get_MemoryOffset_LowBit);
/*802ECB98 002E9998*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r0);
/*802ECB9C 002E999C*/ PPC::Runtime::ASM::mtctr(context->r0);
/*802ECBA0 002E99A0*/ PPC::Runtime::ASM::bctr();
/*802ECBA4 002E99A4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBA8 002E99A8*/ PPC::Runtime::ASM::blr();
/*802ECBAC 002E99AC*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*802ECBB0 002E99B0*/ PPC::Runtime::ASM::blr();
/*802ECBB4 002E99B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBB8 002E99B8*/ PPC::Runtime::ASM::blr();
/*802ECBBC 002E99BC*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*802ECBC0 002E99C0*/ PPC::Runtime::ASM::blr();
/*802ECBC4 002E99C4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBC8 002E99C8*/ PPC::Runtime::ASM::blr();
/*802ECBCC 002E99CC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBD0 002E99D0*/ PPC::Runtime::ASM::blr();
/*802ECBD4 002E99D4*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*802ECBD8 002E99D8*/ PPC::Runtime::ASM::blr();
/*802ECBDC 002E99DC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBE0 002E99E0*/ PPC::Runtime::ASM::blr();
/*802ECBE4 002E99E4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBE8 002E99E8*/ PPC::Runtime::ASM::blr();
/*802ECBEC 002E99EC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBF0 002E99F0*/ PPC::Runtime::ASM::blr();
/*802ECBF4 002E99F4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECBF8 002E99F8*/ PPC::Runtime::ASM::blr();
/*802ECBFC 002E99FC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECC00 002E9A00*/ PPC::Runtime::ASM::blr();
/*802ECC04 002E9A04*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802ECC08 002E9A08*/ PPC::Runtime::ASM::blr();
/*802ECC0C 002E9A0C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECC10 002E9A10*/ PPC::Runtime::ASM::blr();
/*802ECC14 002E9A14*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECC18 002E9A18*/ PPC::Runtime::ASM::blr();
/*802ECC1C 002E9A1C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802ECC20 002E9A20*/ PPC::Runtime::ASM::blr();
/*802ECC24 002E9A24*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*802ECC28 002E9A28*/ PPC::Runtime::ASM::blr();
/*802ECC2C 002E9A2C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECC30 002E9A30*/ PPC::Runtime::ASM::blr();
/*802ECC34 002E9A34*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802ECC38 002E9A38*/ PPC::Runtime::ASM::blr();
/*802ECC3C 002E9A3C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802ECC40 002E9A40*/ PPC::Runtime::ASM::blr();
/*802ECC44 002E9A44*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*802ECC48 002E9A48*/ PPC::Runtime::ASM::blr();
/*802ECC4C 002E9A4C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802ECC50 002E9A50*/ PPC::Runtime::ASM::blr();
}