//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802E26DC.hpp"



void fn_803032B0(PPC::Runtime::GCContext* context)
{
/*803032B0 003000B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803032B4 003000B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803032B8 003000B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803032BC 003000BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803032C0 003000C0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803032C4 003000C4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803032C8 003000C8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803032CC 003000CC*/ PPC::Runtime::ASM::bl(fn_802E26DC);
/*803032D0 003000D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803032D4 003000D4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x470, context->r3));
/*803032D8 003000D8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*803032DC 003000DC*/ PPC::Runtime::ASM::beq(.L_80303320);
/*803032E0 003000E0*/ PPC::Runtime::ASM::bne(.L_803032F4);
/*803032E4 003000E4*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*803032E8 003000E8*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*803032EC 003000EC*/ PPC::Runtime::ASM::li(context->r5, RandomStructBlob_63_WithNullValue @ Get_MemoryOffset_SDA21);
/*803032F0 003000F0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_803032F4, 0x803032F4) //this is a jump label
/*803032F4 003000F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*803032F8 003000F8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803032FC 003000FC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80303300 00300100*/ PPC::Runtime::ASM::bne(.L_80303310);
/*80303304 00300104*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80303308 00300108*/ PPC::Runtime::ASM::beq(.L_80303310);
/*8030330C 0030010C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80303310, 0x80303310) //this is a jump label
/* 80303310 00300110  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*80303314 00300114*/ PPC::Runtime::ASM::beq(.L_80303320);
/*80303318 00300118*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8030331C 0030011C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_80303320, 0x80303320) //this is a jump label
/*80303320 00300120*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80303324 00300124*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80303328 00300128*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x470, context->r3));
/*8030332C 0030012C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r3));
/*80303330 00300130*/ PPC::Runtime::ASM::addi(context->r29, context->r5, 0x44);
/*80303334 00300134*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/* 80303338 00300138  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8030333C 0030013C*/ PPC::Runtime::ASM::bne(.L_80303350);
/*80303340 00300140*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*80303344 00300144*/ PPC::Runtime::ASM::li(context->r4, 0x495);
/*80303348 00300148*/ PPC::Runtime::ASM::li(context->r5, RandomStructBlob_63_WithNullValue @ Get_MemoryOffset_SDA21);
/*8030334C 0030014C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80303350, 0x80303350) //this is a jump label
/*80303350 00300150*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80303354 00300154*/ PPC::Runtime::ASM::bne(.L_80303368);
/*80303358 00300158*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*8030335C 0030015C*/ PPC::Runtime::ASM::li(context->r4, 0x496);
/*80303360 00300160*/ PPC::Runtime::ASM::li(context->r5, String_ "mt" 4 @ Get_MemoryOffset_SDA21);
/*80303364 00300164*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80303368, 0x80303368) //this is a jump label
/*80303368 00300168*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8030336C 0030016C*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x44);
/*80303370 00300170*/ PPC::Runtime::ASM::bl(fn_PSMTXCopy);
/*80303374 00300174*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80303378 00300178*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8030337C 0030017C*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x380);
/*80303380 00300180*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80303384 00300184*/ PPC::Runtime::ASM::beq(.L_803033C8);
/*80303388 00300188*/ PPC::Runtime::ASM::bne(.L_8030339C);
/*8030338C 0030018C*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*80303390 00300190*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80303394 00300194*/ PPC::Runtime::ASM::li(context->r5, RandomStructBlob_63_WithNullValue @ Get_MemoryOffset_SDA21);
/*80303398 00300198*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8030339C, 0x8030339C) //this is a jump label
/*8030339C 0030019C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*803033A0 003001A0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803033A4 003001A4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*803033A8 003001A8*/ PPC::Runtime::ASM::bne(.L_803033B8);
/*803033AC 003001AC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*803033B0 003001B0*/ PPC::Runtime::ASM::beq(.L_803033B8);
/*803033B4 003001B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803033B8, 0x803033B8) //this is a jump label
/* 803033B8 003001B8  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*803033BC 003001BC*/ PPC::Runtime::ASM::bne(.L_803033C8);
/*803033C0 003001C0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803033C4 003001C4*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_803033C8, 0x803033C8) //this is a jump label
/*803033C8 003001C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803033CC 003001CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r3));
/*803033D0 003001D0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803033D4 003001D4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*803033D8 003001D8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*803033DC 003001DC*/ PPC::Runtime::ASM::bctrl();
/*803033E0 003001E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803033E4 003001E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803033E8 003001E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803033EC 003001EC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803033F0 003001F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803033F4 003001F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803033F8 003001F8*/ PPC::Runtime::ASM::blr();
}