//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019FE98.hpp"
#include "fn_startCharge.hpp"
#include "fn_ground_chargeAnimation.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_groundSpin2?.hpp"
#include "fn_doQuickSpin.hpp"



void fn_801AC344(PPC::Runtime::GCContext* context)
{
/*801AC344 001A9144*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AC348 001A9148*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AC34C 001A914C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AC350 001A9150*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AC354 001A9154*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AC358 001A9158*/ PPC::Runtime::ASM::bl(fn_8019FE98);
/*801AC35C 001A915C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AC360 001A9160*/ PPC::Runtime::ASM::bl(fn_startCharge);
/*801AC364 001A9164*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AC368 001A9168*/ PPC::Runtime::ASM::bne(.L_801AC3A0);
/*801AC36C 001A916C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AC370 001A9170*/ PPC::Runtime::ASM::bl(fn_ground_chargeAnimation);
/*801AC374 001A9174*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AC378 001A9178*/ PPC::Runtime::ASM::bne(.L_801AC3A0);
/*801AC37C 001A917C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AC380 001A9180*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801AC384 001A9184*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AC388 001A9188*/ PPC::Runtime::ASM::bl(fn_groundSpin2?);
/*801AC38C 001A918C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AC390 001A9190*/ PPC::Runtime::ASM::bne(.L_801AC3A0);
/*801AC394 001A9194*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AC398 001A9198*/ PPC::Runtime::ASM::bl(fn_doQuickSpin);
/*801AC39C 001A919C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801AC3A0, 0x801AC3A0) //this is a jump label
/*801AC3A0 001A91A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AC3A4 001A91A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AC3A8 001A91A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AC3AC 001A91AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AC3B0 001A91B0*/ PPC::Runtime::ASM::blr();
}