//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFA2C.hpp"



void fn_802EFD8C(PPC::Runtime::GCContext* context)
{
/*802EFD8C 002ECB8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802EFD90 002ECB90*/ PPC::Runtime::ASM::mflr(context->r0);
/*802EFD94 002ECB94*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*802EFD98 002ECB98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802EFD9C 002ECB9C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802EFDA0 002ECBA0*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*802EFDA4 002ECBA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802EFDA8 002ECBA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*802EFDAC 002ECBAC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802EFDB0 002ECBB0*/ PPC::Runtime::ASM::beq(.L_802EFDFC);
/*802EFDB4 002ECBB4*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*802EFDB8 002ECBB8*/ PPC::Runtime::ASM::beq(.L_802EFDFC);
/*802EFDBC 002ECBBC*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*802EFDC0 002ECBC0*/ PPC::Runtime::ASM::beq(.L_802EFDFC);
/*802EFDC4 002ECBC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*802EFDC8 002ECBC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*802EFDCC 002ECBCC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r5));
/*802EFDD0 002ECBD0*/ PPC::Runtime::ASM::b(.L_802EFDF4);
RUNTIME_PPC_JUMP_LABEL(.L_802EFDD4, 0x802EFDD4) //this is a jump label
/*802EFDD4 002ECBD4*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*802EFDD8 002ECBD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802EFDDC 002ECBDC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*802EFDE0 002ECBE0*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*802EFDE4 002ECBE4*/ PPC::Runtime::ASM::bl(fn_802EFA2C);
/*802EFDE8 002ECBE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*802EFDEC 002ECBEC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802EFDF0 002ECBF0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_802EFDF4, 0x802EFDF4) //this is a jump label
/*802EFDF4 002ECBF4*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*802EFDF8 002ECBF8*/ PPC::Runtime::ASM::bne(.L_802EFDD4);
RUNTIME_PPC_JUMP_LABEL(.L_802EFDFC, 0x802EFDFC) //this is a jump label
/*802EFDFC 002ECBFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802EFE00 002ECC00*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802EFE04 002ECC04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802EFE08 002ECC08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*802EFE0C 002ECC0C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802EFE10 002ECC10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802EFE14 002ECC14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802EFE18 002ECC18*/ PPC::Runtime::ASM::blr();
}