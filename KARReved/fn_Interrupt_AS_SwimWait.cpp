//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A24C8.hpp"
#include "fn_801BD2FC.hpp"
#include "fn_801BD07C.hpp"
#include "fn_Interrupt_CheckForJump.hpp"
#include "fn_801A234C.hpp"
#include "fn_801BAD18.hpp"



void fn_Interrupt_AS_SwimWait(PPC::Runtime::GCContext* context)
{
/*801BCF2C 001B9D2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BCF30 001B9D30*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BCF34 001B9D34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BCF38 001B9D38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BCF3C 001B9D3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BCF40 001B9D40*/ PPC::Runtime::ASM::bl(fn_801A24C8);
/*801BCF44 001B9D44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BCF48 001B9D48*/ PPC::Runtime::ASM::bl(fn_801BD2FC);
/*801BCF4C 001B9D4C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BCF50 001B9D50*/ PPC::Runtime::ASM::bne(.L_801BCF98);
/*801BCF54 001B9D54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BCF58 001B9D58*/ PPC::Runtime::ASM::bl(fn_801BD07C);
/*801BCF5C 001B9D5C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BCF60 001B9D60*/ PPC::Runtime::ASM::bne(.L_801BCF98);
/*801BCF64 001B9D64*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BCF68 001B9D68*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForJump);
/*801BCF6C 001B9D6C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BCF70 001B9D70*/ PPC::Runtime::ASM::bne(.L_801BCF98);
/*801BCF74 001B9D74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BCF78 001B9D78*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BCF7C 001B9D7C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r4));
/*801BCF80 001B9D80*/ PPC::Runtime::ASM::bl(fn_801A234C);
/*801BCF84 001B9D84*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BCF88 001B9D88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BCF8C 001B9D8C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x114, context->r4));
/*801BCF90 001B9D90*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r4));
/*801BCF94 001B9D94*/ PPC::Runtime::ASM::bl(fn_801BAD18);
RUNTIME_PPC_JUMP_LABEL(.L_801BCF98, 0x801BCF98) //this is a jump label
/*801BCF98 001B9D98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BCF9C 001B9D9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BCFA0 001B9DA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BCFA4 001B9DA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BCFA8 001B9DA8*/ PPC::Runtime::ASM::blr();
}