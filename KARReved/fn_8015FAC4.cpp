//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_8015FAC4(PPC::Runtime::GCContext* context)
{
/*8015FAC4 0015C8C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015FAC8 0015C8C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015FACC 0015C8CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015FAD0 0015C8D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015FAD4 0015C8D4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015FAD8 0015C8D8*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*8015FADC 0015C8DC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015FAE0 0015C8E0*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015FAE4 0015C8E4*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015FAE8, 0x8015FAE8) //this is a jump label
/*8015FAE8 0015C8E8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015FAEC 0015C8EC*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*8015FAF0 0015C8F0*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 3);
/*8015FAF4 0015C8F4*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*8015FAF8 0015C8F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r31));
/*8015FAFC 0015C8FC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015FB00 0015C900*/ PPC::Runtime::ASM::beq(.L_8015FB0C);
/*8015FB04 0015C904*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015FB08 0015C908*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015FB0C, 0x8015FB0C) //this is a jump label
/*8015FB0C 0015C90C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015FB10 0015C910*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*8015FB14 0015C914*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
/*8015FB18 0015C918*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015FB1C 0015C91C*/ PPC::Runtime::ASM::beq(.L_8015FB28);
/*8015FB20 0015C920*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015FB24 0015C924*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015FB28, 0x8015FB28) //this is a jump label
/*8015FB28 0015C928*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8015FB2C 0015C92C*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*8015FB30 0015C930*/ PPC::Runtime::ASM::blt(.L_8015FAE8);
/*8015FB34 0015C934*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015FB38 0015C938*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015FB3C 0015C93C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015FB40 0015C940*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015FB44 0015C944*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015FB48 0015C948*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015FB4C 0015C94C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015FB50 0015C950*/ PPC::Runtime::ASM::blr();
}