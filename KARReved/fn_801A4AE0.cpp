//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190FAC.hpp"
#include "fn_801A4C04.hpp"



void fn_801A4AE0(PPC::Runtime::GCContext* context)
{
/*801A4AE0 001A18E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A4AE4 001A18E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A4AE8 001A18E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4AEC 001A18EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A4AF0 001A18F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A4AF4 001A18F4*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD814 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A4AF8 001A18F8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r4));
/*801A4AFC 001A18FC*/ PPC::Runtime::ASM::bl(fn_80190FAC);
/*801A4B00 001A1900*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4a8, context->r31));
/*801A4B04 001A1904*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A4B08 001A1908*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801A4B0C 001A190C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801A4B10 001A1910*/ PPC::Runtime::ASM::bne(.L_801A4B1C);
/*801A4B14 001A1914*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A4B18 001A1918*/ PPC::Runtime::ASM::bl(fn_801A4C04);
RUNTIME_PPC_JUMP_LABEL(.L_801A4B1C, 0x801A4B1C) //this is a jump label
/*801A4B1C 001A191C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4B20 001A1920*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A4B24 001A1924*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A4B28 001A1928*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A4B2C 001A192C*/ PPC::Runtime::ASM::blr();
}