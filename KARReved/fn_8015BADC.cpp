//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015BADC(PPC::Runtime::GCContext* context)
{
/*8015BADC 001588DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015BAE0 001588E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015BAE4 001588E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015BAE8 001588E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015BAEC 001588EC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8015BAF0 001588F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015BAF4 001588F4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8015BAF8 001588F8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015BAFC 001588FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x87c, context->r3));
/*8015BB00 00158900*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015BB04 00158904*/ PPC::Runtime::ASM::beq(.L_8015BB30);
/*8015BB08 00158908*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8015BB0C 0015890C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8015BB10 00158910*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*8015BB14 00158914*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*8015BB18 00158918*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r4));
/*8015BB1C 0015891C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r4));
/*8015BB20 00158920*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8015BB24 00158924*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8015BB28 00158928*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r4));
/*8015BB2C 0015892C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015BB30, 0x8015BB30) //this is a jump label
/*8015BB30 00158930*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015BB34 00158934*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015BB38 00158938*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015BB3C 0015893C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015BB40 00158940*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015BB44 00158944*/ PPC::Runtime::ASM::blr();
}