//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800620E8(PPC::Runtime::GCContext* context)
{
/*800620E8 0005EEE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800620EC 0005EEEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800620F0 0005EEF0*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*800620F4 0005EEF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800620F8 0005EEF8*/ PPC::Runtime::ASM::addi(context->r5, context->r3, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*800620FC 0005EEFC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42, context->r5));
/* 80062100 0005EF00  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*80062104 0005EF04*/ PPC::Runtime::ASM::bne(.L_80062124);
/*80062108 0005EF08*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*8006210C 0005EF0C*/ PPC::Runtime::ASM::addis(context->r4, context->r5, 0x1);
/*80062110 0005EF10*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80062114 0005EF14*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r5));
/*80062118 0005EF18*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*8006211C 0005EF1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7484, context->r4));
/*80062120 0005EF20*/ PPC::Runtime::ASM::bl(fn_80445704);
RUNTIME_PPC_JUMP_LABEL(.L_80062124, 0x80062124) //this is a jump label
/*80062124 0005EF24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80062128 0005EF28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8006212C 0005EF2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80062130 0005EF30*/ PPC::Runtime::ASM::blr();
}