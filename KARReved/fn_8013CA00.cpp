//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8013CA00(PPC::Runtime::GCContext* context)
{
/*8013CA00 00139800*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8013CA04 00139804*/ PPC::Runtime::ASM::mflr(context->r0);
/*8013CA08 00139808*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8013CA0C 0013980C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8013CA10 00139810*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8013CA14 00139814*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8013CA18 00139818*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8013CA1C 0013981C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8013CA20 00139820*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8013CA24 00139824*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x28);
/*8013CA28 00139828*/ PPC::Runtime::ASM::slwi(context->r30, context->r0, 3);
/*8013CA2C 0013982C*/ PPC::Runtime::ASM::add(context->r31, context->r29, context->r30);
/*8013CA30 00139830*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*8013CA34 00139834*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8013CA38 00139838*/ PPC::Runtime::ASM::beq(.L_8013CA48);
/*8013CA3C 0013983C*/ PPC::Runtime::ASM::bl(fn_8044F350);
/*8013CA40 00139840*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8013CA44 00139844*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8013CA48, 0x8013CA48) //this is a jump label
/*8013CA48 00139848*/ PPC::Runtime::ASM::add(context->r30, context->r29, context->r30);
/*8013CA4C 0013984C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*8013CA50 00139850*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8013CA54 00139854*/ PPC::Runtime::ASM::beq(.L_8013CA64);
/*8013CA58 00139858*/ PPC::Runtime::ASM::bl(fn_8044F350);
/*8013CA5C 0013985C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8013CA60 00139860*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8013CA64, 0x8013CA64) //this is a jump label
/*8013CA64 00139864*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8013CA68 00139868*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8013CA6C 0013986C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8013CA70 00139870*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8013CA74 00139874*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8013CA78 00139878*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8013CA7C 0013987C*/ PPC::Runtime::ASM::blr();
}