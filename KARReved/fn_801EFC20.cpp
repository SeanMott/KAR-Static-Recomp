//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"
#include "fn_801C9DB8.hpp"



void fn_801EFC20(PPC::Runtime::GCContext* context)
{
/*801EFC20 001ECA20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EFC24 001ECA24*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EFC28 001ECA28*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EFC2C 001ECA2C*/ PPC::Runtime::ASM::li(context->r4, 0x12);
/*801EFC30 001ECA30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFC34 001ECA34*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801EFC38 001ECA38*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1F4C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EFC3C 001ECA3C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801EFC40 001ECA40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFC44 001ECA44*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EFC48 001ECA48*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801EFC4C 001ECA4C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFC50 001ECA50*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801EFC54 001ECA54*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*801EFC58 001ECA58*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFC5C 001ECA5C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFC60 001ECA60*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFC64 001ECA64*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 31, 31);
/*801EFC68 001ECA68*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFC6C 001ECA6C*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801EFC70 001ECA70*/ PPC::Runtime::ASM::extrwi(context->r0, context->r4, 2, 26);
/*801EFC74 001ECA74*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801EFC78 001ECA78*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 4, 26, 27);
/*801EFC7C 001ECA7C*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801EFC80 001ECA80*/ PPC::Runtime::ASM::bl(fn_801C9DB8);
/*801EFC84 001ECA84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFC88 001ECA88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFC8C 001ECA8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EFC90 001ECA90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EFC94 001ECA94*/ PPC::Runtime::ASM::blr();
}