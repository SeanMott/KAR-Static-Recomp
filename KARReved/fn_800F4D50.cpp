//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F8784.hpp"



void fn_800F4D50(PPC::Runtime::GCContext* context)
{
/*800F4D50 000F1B50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800F4D54 000F1B54*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F4D58 000F1B58*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800F4D5C 000F1B5C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF7E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4D60 000F1B60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F4D64 000F1B64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800F4D68 000F1B68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F4D6C 000F1B6C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800F4D70 000F1B70*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F4D74 000F1B74*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800F4D78 000F1B78*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4D7C 000F1B7C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 7, 24, 24);
/*800F4D80 000F1B80*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4D84 000F1B84*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4D88 000F1B88*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 6, 25, 25);
/*800F4D8C 000F1B8C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4D90 000F1B90*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4D94 000F1B94*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 4, 27, 27);
/*800F4D98 000F1B98*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4D9C 000F1B9C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4DA0 000F1BA0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 3, 28, 28);
/*800F4DA4 000F1BA4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4DA8 000F1BA8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r31));
/*800F4DAC 000F1BAC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r31));
/*800F4DB0 000F1BB0*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*800F4DB4 000F1BB4*/ PPC::Runtime::ASM::beq(.L_800F4DD0);
/*800F4DB8 000F1BB8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_979 @ Get_MemoryOffset_HighBit);
/*800F4DBC 000F1BBC*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_981 @ Get_MemoryOffset_HighBit);
/*800F4DC0 000F1BC0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_979 @ Get_MemoryOffset_LowBit);
/*800F4DC4 000F1BC4*/ PPC::Runtime::ASM::li(context->r4, 0x17b);
/*800F4DC8 000F1BC8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_981 @ Get_MemoryOffset_LowBit);
/*800F4DCC 000F1BCC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4DD0, 0x800F4DD0) //this is a jump label
/*800F4DD0 000F1BD0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF7E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4DD4 000F1BD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F4DD8 000F1BD8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF7E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4DDC 000F1BDC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800F4DE0 000F1BE0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F4DE4 000F1BE4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800F4DE8 000F1BE8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F4DEC 000F1BEC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F4DF0 000F1BF0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F4DF4 000F1BF4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4DF8 000F1BF8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F4DFC 000F1BFC*/ PPC::Runtime::ASM::bl(fn_800F8784);
/*800F4E00 000F1C00*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800F4E04 000F1C04*/ PPC::Runtime::ASM::lis(context->r3, StructWithStructs_80 @ Get_MemoryOffset_HighBit);
/*800F4E08 000F1C08*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0, context->r31));
/*800F4E0C 000F1C0C*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*800F4E10 000F1C10*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF7E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4E14 000F1C14*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800F4E18 000F1C18*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithStructs_80 @ Get_MemoryOffset_LowBit);
/*800F4E1C 000F1C1C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r31));
/*800F4E20 000F1C20*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
/*800F4E24 000F1C24*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r31));
/*800F4E28 000F1C28*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r31));
/*800F4E2C 000F1C2C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r31));
/*800F4E30 000F1C30*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r31));
/*800F4E34 000F1C34*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x108, context->r31));
/*800F4E38 000F1C38*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r31));
/*800F4E3C 000F1C3C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800F4E40 000F1C40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*800F4E44 000F1C44*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*800F4E48 000F1C48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r31));
/*800F4E4C 000F1C4C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*800F4E50 000F1C50*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800F4E54 000F1C54*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 2);
/*800F4E58 000F1C58*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800F4E5C 000F1C5C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F4E60 000F1C60*/ PPC::Runtime::ASM::beq(.L_800F4E78);
/*800F4E64 000F1C64*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x46);
/*800F4E68 000F1C68*/ PPC::Runtime::ASM::bge(.L_800F4E78);
/*800F4E6C 000F1C6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F4E70 000F1C70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r31));
/*800F4E74 000F1C74*/ PPC::Runtime::ASM::b(.L_800F4E80);
RUNTIME_PPC_JUMP_LABEL(.L_800F4E78, 0x800F4E78) //this is a jump label
/*800F4E78 000F1C78*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800F4E7C 000F1C7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800F4E80, 0x800F4E80) //this is a jump label
/*800F4E80 000F1C80*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800F4E84 000F1C84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4, context->r31));
/*800F4E88 000F1C88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*800F4E8C 000F1C8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800F4E90 000F1C90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F4E94 000F1C94*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F4E98 000F1C98*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800F4E9C 000F1C9C*/ PPC::Runtime::ASM::blr();
}