//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_HSD_JObjSetupMatrixSub.hpp"
#include "fn_PSMTXMultVec.hpp"



void fn_HSD_WObjSetPositionX(PPC::Runtime::GCContext* context)
{
/*8041ABF4 004179F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041ABF8 004179F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041ABFC 004179FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041AC00 00417A00*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041AC04 00417A04*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8041AC08 00417A08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041AC0C 00417A0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/* 8041AC10 00417A10  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8041AC14 00417A14*/ PPC::Runtime::ASM::beq(.L_8041ACAC);
/*8041AC18 00417A18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/* 8041AC1C 00417A1C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8041AC20 00417A20*/ PPC::Runtime::ASM::beq(.L_8041AC9C);
/*8041AC24 00417A24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*8041AC28 00417A28*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8041AC2C 00417A2C*/ PPC::Runtime::ASM::beq(.L_8041AC90);
/*8041AC30 00417A30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8041AC34 00417A34*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8041AC38 00417A38*/ PPC::Runtime::ASM::beq(.L_8041AC90);
/*8041AC3C 00417A3C*/ PPC::Runtime::ASM::beq(.L_8041AC80);
/*8041AC40 00417A40*/ PPC::Runtime::ASM::bne(.L_8041AC54);
/*8041AC44 00417A44*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_497 @ Get_MemoryOffset_SDA21);
/*8041AC48 00417A48*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8041AC4C 00417A4C*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_496 @ Get_MemoryOffset_SDA21);
/*8041AC50 00417A50*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041AC54, 0x8041AC54) //this is a jump label
/*8041AC54 00417A54*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8041AC58 00417A58*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8041AC5C 00417A5C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8041AC60 00417A60*/ PPC::Runtime::ASM::bne(.L_8041AC70);
/*8041AC64 00417A64*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8041AC68 00417A68*/ PPC::Runtime::ASM::beq(.L_8041AC70);
/*8041AC6C 00417A6C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8041AC70, 0x8041AC70) //this is a jump label
/*8041AC70 00417A70*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8041AC74 00417A74*/ PPC::Runtime::ASM::beq(.L_8041AC80);
/*8041AC78 00417A78*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041AC7C 00417A7C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_8041AC80, 0x8041AC80) //this is a jump label
/*8041AC80 00417A80*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0xc);
/*8041AC84 00417A84*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*8041AC88 00417A88*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*8041AC8C 00417A8C*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
RUNTIME_PPC_JUMP_LABEL(.L_8041AC90, 0x8041AC90) //this is a jump label
/*8041AC90 00417A90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8041AC94 00417A94*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r0, 1);
/*8041AC98 00417A98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8041AC9C, 0x8041AC9C) //this is a jump label
/*8041AC9C 00417A9C*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8041ACA0 00417AA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8041ACA4 00417AA4*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x2);
/*8041ACA8 00417AA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8041ACAC, 0x8041ACAC) //this is a jump label
/*8041ACAC 00417AAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041ACB0 00417AB0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041ACB4 00417AB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041ACB8 00417AB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8041ACBC 00417ABC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041ACC0 00417AC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041ACC4 00417AC4*/ PPC::Runtime::ASM::blr();
}