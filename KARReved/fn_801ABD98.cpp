//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801ABB48.hpp"
#include "fn_801B4E2C.hpp"
#include "fn_801B8078.hpp"



void fn_801ABD98(PPC::Runtime::GCContext* context)
{
/*801ABD98 001A8B98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ABD9C 001A8B9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ABDA0 001A8BA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ABDA4 001A8BA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ABDA8 001A8BA8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801ABDAC 001A8BAC*/ PPC::Runtime::ASM::bl(fn_801ABB48);
/*801ABDB0 001A8BB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ABDB4 001A8BB4*/ PPC::Runtime::ASM::bl(fn_801B4E2C);
/*801ABDB8 001A8BB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ABDBC 001A8BBC*/ PPC::Runtime::ASM::bne(.L_801ABDCC);
/*801ABDC0 001A8BC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ABDC4 001A8BC4*/ PPC::Runtime::ASM::bl(fn_801B8078);
/*801ABDC8 001A8BC8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801ABDCC, 0x801ABDCC) //this is a jump label
/*801ABDCC 001A8BCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ABDD0 001A8BD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ABDD4 001A8BD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ABDD8 001A8BD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ABDDC 001A8BDC*/ PPC::Runtime::ASM::blr();
}