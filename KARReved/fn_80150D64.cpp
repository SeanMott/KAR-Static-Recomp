//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80150208.hpp"



void fn_80150D64(PPC::Runtime::GCContext* context)
{
/*80150D64 0014DB64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80150D68 0014DB68*/ PPC::Runtime::ASM::mflr(context->r0);
/*80150D6C 0014DB6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80150D70 0014DB70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80150D74 0014DB74*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80150D78 0014DB78*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80150D7C 0014DB7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80150D80 0014DB80*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80150D84 0014DB84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80150D88 0014DB88*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80150D8C 0014DB8C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15, context->r3));
/*80150D90 0014DB90*/ PPC::Runtime::ASM::bl(fn_80150208);
/*80150D94 0014DB94*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80150D98 0014DB98*/ PPC::Runtime::ASM::bne(.L_80150DAC);
/*80150D9C 0014DB9C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6768 @ Get_MemoryOffset_SDA21);
/*80150DA0 0014DBA0*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80150DA4 0014DBA4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6770 @ Get_MemoryOffset_SDA21);
/*80150DA8 0014DBA8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80150DAC, 0x80150DAC) //this is a jump label
/*80150DAC 0014DBAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80150DB0 0014DBB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80150DB4 0014DBB4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80150DB8 0014DBB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80150DBC 0014DBBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80150DC0 0014DBC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80150DC4 0014DBC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80150DC8 0014DBC8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80150DCC 0014DBCC*/ PPC::Runtime::ASM::bne(.L_80150E18);
/*80150DD0 0014DBD0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80150DD4 0014DBD4*/ PPC::Runtime::ASM::beq(.L_80150E18);
/*80150DD8 0014DBD8*/ PPC::Runtime::ASM::bne(.L_80150DEC);
/*80150DDC 0014DBDC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6768 @ Get_MemoryOffset_SDA21);
/*80150DE0 0014DBE0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80150DE4 0014DBE4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6770 @ Get_MemoryOffset_SDA21);
/*80150DE8 0014DBE8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80150DEC, 0x80150DEC) //this is a jump label
/*80150DEC 0014DBEC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80150DF0 0014DBF0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80150DF4 0014DBF4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80150DF8 0014DBF8*/ PPC::Runtime::ASM::bne(.L_80150E08);
/*80150DFC 0014DBFC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80150E00 0014DC00*/ PPC::Runtime::ASM::beq(.L_80150E08);
/*80150E04 0014DC04*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80150E08, 0x80150E08) //this is a jump label
/*80150E08 0014DC08*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80150E0C 0014DC0C*/ PPC::Runtime::ASM::bne(.L_80150E18);
/*80150E10 0014DC10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80150E14 0014DC14*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80150E18, 0x80150E18) //this is a jump label
/*80150E18 0014DC18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80150E1C 0014DC1C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80150E20 0014DC20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80150E24 0014DC24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80150E28 0014DC28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80150E2C 0014DC2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80150E30 0014DC30*/ PPC::Runtime::ASM::blr();
}