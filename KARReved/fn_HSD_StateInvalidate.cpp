//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_HSD_StateInvalidate(PPC::Runtime::GCContext* context)
{
/*803F898C 003F578C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803F8990 003F5790*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F8994 003F5794*/ PPC::Runtime::ASM::lis(context->r4, lbl_80502420 @ Get_MemoryOffset_HighBit);
/*803F8998 003F5798*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F899C 003F579C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803F89A0 003F57A0*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80502420 @ Get_MemoryOffset_LowBit);
/*803F89A4 003F57A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803F89A8 003F57A8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803F89AC 003F57AC*/ PPC::Runtime::ASM::b(.L_803F89C8);
RUNTIME_PPC_JUMP_LABEL(.L_803F89B0, 0x803F89B0) //this is a jump label
/*803F89B0 003F57B0*/ PPC::Runtime::ASM::and.(context->r0, context->r30, context->r0);
/*803F89B4 003F57B4*/ PPC::Runtime::ASM::beq(.L_803F89C4);
/*803F89B8 003F57B8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803F89BC 003F57BC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*803F89C0 003F57C0*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_803F89C4, 0x803F89C4) //this is a jump label
/*803F89C4 003F57C4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x8);
RUNTIME_PPC_JUMP_LABEL(.L_803F89C8, 0x803F89C8) //this is a jump label
/*803F89C8 003F57C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803F89CC 003F57CC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803F89D0 003F57D0*/ PPC::Runtime::ASM::bne(.L_803F89B0);
/*803F89D4 003F57D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F89D8 003F57D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803F89DC 003F57DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803F89E0 003F57E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F89E4 003F57E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803F89E8 003F57E8*/ PPC::Runtime::ASM::blr();
}