//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA1D0.hpp"
#include "fn_800E9F50.hpp"
#include "fn_800EA084.hpp"



void fn_800FA98C(PPC::Runtime::GCContext* context)
{
/*800FA98C 000F778C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FA990 000F7790*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FA994 000F7794*/ PPC::Runtime::ASM::addi(context->r6, context->r4, 0x44);
/*800FA998 000F7798*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FA99C 000F779C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FA9A0 000F77A0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800FA9A4 000F77A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FA9A8 000F77A8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA9AC 000F77AC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800FA9B0 000F77B0*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800FA9B4 000F77B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r4));
/*800FA9B8 000F77B8*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FA9BC 000F77BC*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800FA9C0 000F77C0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FA9C4 000F77C4*/ PPC::Runtime::ASM::ble(.L_800FAA00);
RUNTIME_PPC_JUMP_LABEL(.L_800FA9C8, 0x800FA9C8) //this is a jump label
/*800FA9C8 000F77C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r6));
/*800FA9CC 000F77CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r6));
/*800FA9D0 000F77D0*/ PPC::Runtime::ASM::mulli(context->r3, context->r3, 0x140);
/*800FA9D4 000F77D4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r5));
/*800FA9D8 000F77D8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x24);
/*800FA9DC 000F77DC*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800FA9E0 000F77E0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x24);
/*800FA9E4 000F77E4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r0);
/*800FA9E8 000F77E8*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800FA9EC 000F77EC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x18);
/*800FA9F0 000F77F0*/ PPC::Runtime::ASM::bne(.L_800FA9F8);
/*800FA9F4 000F77F4*/ PPC::Runtime::ASM::addi(context->r28, context->r6, 0x60);
RUNTIME_PPC_JUMP_LABEL(.L_800FA9F8, 0x800FA9F8) //this is a jump label
/*800FA9F8 000F77F8*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x20);
/*800FA9FC 000F77FC*/ PPC::Runtime::ASM::bdnz(.L_800FA9C8);
RUNTIME_PPC_JUMP_LABEL(.L_800FAA00, 0x800FAA00) //this is a jump label
/*800FAA00 000F7800*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800FAA04 000F7804*/ PPC::Runtime::ASM::beq(.L_800FAA68);
/*800FAA08 000F7808*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800FAA0C 000F780C*/ PPC::Runtime::ASM::mr(context->r30, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_800FAA10, 0x800FAA10) //this is a jump label
/*800FAA10 000F7810*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x134);
/*800FAA14 000F7814*/ PPC::Runtime::ASM::bl(fn_800EA1D0);
/*800FAA18 000F7818*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FAA1C 000F781C*/ PPC::Runtime::ASM::bne(.L_800FAA58);
/*800FAA20 000F7820*/ PPC::Runtime::ASM::mulli(context->r30, context->r29, 0x14);
/*800FAA24 000F7824*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FAA28 000F7828*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800FAA2C 000F782C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800FAA30 000F7830*/ PPC::Runtime::ASM::add(context->r4, context->r31, context->r30);
/*800FAA34 000F7834*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r6));
/*800FAA38 000F7838*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r4));
/*800FAA3C 000F783C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r6));
/*800FAA40 000F7840*/ PPC::Runtime::ASM::bl(fn_800E9F50);
/*800FAA44 000F7844*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x134);
/*800FAA48 000F7848*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FAA4C 000F784C*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*800FAA50 000F7850*/ PPC::Runtime::ASM::bl(fn_800EA084);
/*800FAA54 000F7854*/ PPC::Runtime::ASM::b(.L_800FAA68);
RUNTIME_PPC_JUMP_LABEL(.L_800FAA58, 0x800FAA58) //this is a jump label
/*800FAA58 000F7858*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*800FAA5C 000F785C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x14);
/*800FAA60 000F7860*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*800FAA64 000F7864*/ PPC::Runtime::ASM::blt(.L_800FAA10);
RUNTIME_PPC_JUMP_LABEL(.L_800FAA68, 0x800FAA68) //this is a jump label
/*800FAA68 000F7868*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FAA6C 000F786C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FAA70 000F7870*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FAA74 000F7874*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FAA78 000F7878*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800FAA7C 000F787C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FAA80 000F7880*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FAA84 000F7884*/ PPC::Runtime::ASM::blr();
}