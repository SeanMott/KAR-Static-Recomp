//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_802181AC(PPC::Runtime::GCContext* context)
{
/*802181AC 00214FAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802181B0 00214FB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802181B4 00214FB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802181B8 00214FB8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802181BC 00214FBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802181C0 00214FC0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802181C4 00214FC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*802181C8 00214FC8*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*802181CC 00214FCC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2660 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802181D0 00214FD0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802181D4 00214FD4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2664 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802181D8 00214FD8*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*802181DC 00214FDC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802181E0 00214FE0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802181E4 00214FE4*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*802181E8 00214FE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802181EC 00214FEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802181F0 00214FF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802181F4 00214FF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802181F8 00214FF8*/ PPC::Runtime::ASM::blr();
}