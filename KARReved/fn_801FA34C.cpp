//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FA3C8.hpp"



void fn_801FA34C(PPC::Runtime::GCContext* context)
{
/*801FA34C 001F714C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FA350 001F7150*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FA354 001F7154*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA358 001F7158*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA35C 001F715C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FA360 001F7160*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA364 001F7164*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x664, context->r3));
/*801FA368 001F7168*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15c, context->r4));
/*801FA36C 001F716C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801FA370 001F7170*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801FA374 001F7174*/ PPC::Runtime::ASM::bne(.L_801FA394);
/*801FA378 001F7178*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x354);
/*801FA37C 001F717C*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801FA380 001F7180*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E21A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA384 001F7184*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801FA388 001F7188*/ PPC::Runtime::ASM::bge(.L_801FA394);
/*801FA38C 001F718C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801FA390 001F7190*/ PPC::Runtime::ASM::b(.L_801FA398);
RUNTIME_PPC_JUMP_LABEL(.L_801FA394, 0x801FA394) //this is a jump label
/*801FA394 001F7194*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801FA398, 0x801FA398) //this is a jump label
/*801FA398 001F7198*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801FA39C 001F719C*/ PPC::Runtime::ASM::beq(.L_801FA3B0);
/*801FA3A0 001F71A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA3A4 001F71A4*/ PPC::Runtime::ASM::bl(fn_801FA3C8);
/*801FA3A8 001F71A8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801FA3AC 001F71AC*/ PPC::Runtime::ASM::b(.L_801FA3B4);
RUNTIME_PPC_JUMP_LABEL(.L_801FA3B0, 0x801FA3B0) //this is a jump label
/*801FA3B0 001F71B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801FA3B4, 0x801FA3B4) //this is a jump label
/*801FA3B4 001F71B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA3B8 001F71B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA3BC 001F71BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FA3C0 001F71C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FA3C4 001F71C4*/ PPC::Runtime::ASM::blr();
}