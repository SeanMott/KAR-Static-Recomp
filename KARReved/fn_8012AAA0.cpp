//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012AAA0(PPC::Runtime::GCContext* context)
{
/*8012AAA0 001278A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012AAA4 001278A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012AAA8 001278A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012AAAC 001278AC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8012AAB0 001278B0*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*8012AAB4 001278B4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012AAB8 001278B8*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0xd64);
/*8012AABC 001278BC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*8012AAC0 001278C0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8012AAC4, 0x8012AAC4) //this is a jump label
/*8012AAC4 001278C4*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*8012AAC8 001278C8*/ PPC::Runtime::ASM::mr(context->r30, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_8012AACC, 0x8012AACC) //this is a jump label
/*8012AACC 001278CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8012AAD0 001278D0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012AAD4 001278D4*/ PPC::Runtime::ASM::beq(.L_8012AAE0);
/*8012AAD8 001278D8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012AADC 001278DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012AAE0, 0x8012AAE0) //this is a jump label
/*8012AAE0 001278E0*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*8012AAE4 001278E4*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8012AAE8 001278E8*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x8);
/*8012AAEC 001278EC*/ PPC::Runtime::ASM::blt(.L_8012AACC);
/*8012AAF0 001278F0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8012AAF4 001278F4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x20);
/*8012AAF8 001278F8*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*8012AAFC 001278FC*/ PPC::Runtime::ASM::blt(.L_8012AAC4);
/*8012AB00 00127900*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8012AB04 00127904*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8012AB08 00127908*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012AB0C 0012790C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012AB10 00127910*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012AB14 00127914*/ PPC::Runtime::ASM::blr();
}