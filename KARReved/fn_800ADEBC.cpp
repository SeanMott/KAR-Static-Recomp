//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800ABA74.hpp"



void fn_800ADEBC(PPC::Runtime::GCContext* context)
{
/*800ADEBC 000AACBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADEC0 000AACC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADEC4 000AACC4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADEC8 000AACC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADECC 000AACCC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADED0 000AACD0*/ PPC::Runtime::ASM::bne(.L_800ADF08);
/*800ADED4 000AACD4*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADED8 000AACD8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADEDC 000AACDC*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADEE0 000AACE0*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_29_SomethingToDoWithStadiums @ Get_MemoryOffset_HighBit);
/*800ADEE4 000AACE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADEE8 000AACE8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_29_SomethingToDoWithStadiums @ Get_MemoryOffset_LowBit);
/*800ADEEC 000AACEC*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADEF0 000AACF0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADEF4 000AACF4*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADEF8 000AACF8*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADEFC 000AACFC*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD5BC @ Get_MemoryOffset_HighBit);
/*800ADF00 000AAD00*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD5BC @ Get_MemoryOffset_LowBit);
/*800ADF04 000AAD04*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADF08, 0x800ADF08) //this is a jump label
/*800ADF08 000AAD08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADF0C 000AAD0C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADF10 000AAD10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADF14 000AAD14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADF18 000AAD18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADF1C 000AAD1C*/ PPC::Runtime::ASM::blr();
}