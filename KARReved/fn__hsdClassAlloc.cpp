//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hsdAllocMemPiece.hpp"



void fn__hsdClassAlloc(PPC::Runtime::GCContext* context)
{
/*80420AFC 0041D8FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80420B00 0041D900*/ PPC::Runtime::ASM::mflr(context->r0);
/*80420B04 0041D904*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80420B08 0041D908*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80420B0C 0041D90C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80420B10 0041D910*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80420B14 0041D914*/ PPC::Runtime::ASM::bl(fn_hsdAllocMemPiece);
/*80420B18 0041D918*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80420B1C 0041D91C*/ PPC::Runtime::ASM::beq(.L_80420B40);
/*80420B20 0041D920*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*80420B24 0041D924*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*80420B28 0041D928*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*80420B2C 0041D92C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*80420B30 0041D930*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*80420B34 0041D934*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*80420B38 0041D938*/ PPC::Runtime::ASM::ble(.L_80420B40);
/*80420B3C 0041D93C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80420B40, 0x80420B40) //this is a jump label
/*80420B40 0041D940*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80420B44 0041D944*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80420B48 0041D948*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80420B4C 0041D94C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80420B50 0041D950*/ PPC::Runtime::ASM::blr();
}