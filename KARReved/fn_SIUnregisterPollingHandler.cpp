//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_SIEnablePollingInterrupt.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_SIUnregisterPollingHandler(PPC::Runtime::GCContext* context)
{
/*803E8F6C 003E5D6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E8F70 003E5D70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E8F74 003E5D74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803E8F78 003E5D78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E8F7C 003E5D7C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E8F80 003E5D80*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803E8F84 003E5D84*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E8F88 003E5D88*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_18056E8C8 @ Get_MemoryOffset_HighBit);
/*803E8F8C 003E5D8C*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*803E8F90 003E5D90*/ PPC::Runtime::ASM::addi(context->r5, context->r4, STRUCT_BYTE4_COUNT_18056E8C8 @ Get_MemoryOffset_LowBit);
/*803E8F94 003E5D94*/ PPC::Runtime::ASM::mtctr(context->r0);
/*803E8F98 003E5D98*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E8F9C 003E5D9C*/ PPC::Runtime::ASM::addi(context->r3, context->r5, 0x0);
/*803E8FA0 003E5DA0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803E8FA4, 0x803E8FA4) //this is a jump label
/*803E8FA4 003E5DA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803E8FA8 003E5DA8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r30);
/*803E8FAC 003E5DAC*/ PPC::Runtime::ASM::bne(.L_803E9030);
/*803E8FB0 003E5DB0*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E8C8 @ Get_MemoryOffset_HighBit);
/*803E8FB4 003E5DB4*/ PPC::Runtime::ASM::slwi(context->r4, context->r4, 2);
/*803E8FB8 003E5DB8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E8C8 @ Get_MemoryOffset_LowBit);
/*803E8FBC 003E5DBC*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*803E8FC0 003E5DC0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E8FC4 003E5DC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803E8FC8 003E5DC8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E8FCC 003E5DCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803E8FD0 003E5DD0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E8FD4 003E5DD4*/ PPC::Runtime::ASM::bne(.L_803E9010);
/*803E8FD8 003E5DD8*/ PPC::Runtime::ASM::addi(context->r3, context->r5, 0x4);
/*803E8FDC 003E5DDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*803E8FE0 003E5DE0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803E8FE4 003E5DE4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E8FE8 003E5DE8*/ PPC::Runtime::ASM::bne(.L_803E9010);
/*803E8FEC 003E5DEC*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803E8FF0 003E5DF0*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*803E8FF4 003E5DF4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E8FF8 003E5DF8*/ PPC::Runtime::ASM::bne(.L_803E9010);
/*803E8FFC 003E5DFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803E9000 003E5E00*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*803E9004 003E5E04*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E9008 003E5E08*/ PPC::Runtime::ASM::bne(.L_803E9010);
/*803E900C 003E5E0C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_803E9010, 0x803E9010) //this is a jump label
/*803E9010 003E5E10*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x4);
/*803E9014 003E5E14*/ PPC::Runtime::ASM::bne(.L_803E9020);
/*803E9018 003E5E18*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803E901C 003E5E1C*/ PPC::Runtime::ASM::bl(fn_SIEnablePollingInterrupt);
RUNTIME_PPC_JUMP_LABEL(.L_803E9020, 0x803E9020) //this is a jump label
/*803E9020 003E5E20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E9024 003E5E24*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E9028 003E5E28*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803E902C 003E5E2C*/ PPC::Runtime::ASM::b(.L_803E9048);
RUNTIME_PPC_JUMP_LABEL(.L_803E9030, 0x803E9030) //this is a jump label
/*803E9030 003E5E30*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*803E9034 003E5E34*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
/*803E9038 003E5E38*/ PPC::Runtime::ASM::bdnz(.L_803E8FA4);
/*803E903C 003E5E3C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E9040 003E5E40*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E9044 003E5E44*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803E9048, 0x803E9048) //this is a jump label
/*803E9048 003E5E48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E904C 003E5E4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E9050 003E5E50*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E9054 003E5E54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803E9058 003E5E58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E905C 003E5E5C*/ PPC::Runtime::ASM::blr();
}