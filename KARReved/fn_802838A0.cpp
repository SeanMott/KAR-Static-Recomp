//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80283874.hpp"
#include "fn_80283874.hpp"
#include "fn_80283E18.hpp"
#include "fn_playerDies.hpp"
#include "fn_8005E6C8.hpp"
#include "fn_802839B8.hpp"
#include "fn_802839B8.hpp"
#include "fn_8000C964.hpp"



void fn_802838A0(PPC::Runtime::GCContext* context)
{
/*802838A0 002806A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802838A4 002806A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802838A8 002806A8*/ PPC::Runtime::ASM::li(context->r4, 0x1f);
/*802838AC 002806AC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802838B0 002806B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802838B4 002806B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802838B8 002806B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802838BC 002806BC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802838C0 002806C0*/ PPC::Runtime::ASM::li(context->r3, 0x21);
/*802838C4 002806C4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802838C8 002806C8*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/*802838CC 002806CC*/ PPC::Runtime::ASM::lis(context->r4, lbl_8055F760 @ Get_MemoryOffset_HighBit);
/*802838D0 002806D0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802838D4 002806D4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_8055F760 @ Get_MemoryOffset_LowBit);
/*802838D8 002806D8*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*802838DC 002806DC*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*802838E0 002806E0*/ PPC::Runtime::ASM::lis(context->r4, fn_80283874 @ Get_MemoryOffset_HighBit);
/*802838E4 002806E4*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*802838E8 002806E8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_80283874 @ Get_MemoryOffset_LowBit);
/*802838EC 002806EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802838F0 002806F0*/ PPC::Runtime::ASM::li(context->r4, 0x21);
/*802838F4 002806F4*/ PPC::Runtime::ASM::bl(fn_GObj_AddUserData);
/*802838F8 002806F8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*802838FC 002806FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80283900 00280700*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80283904 00280704*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80283908 00280708*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028390C 0028070C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r29));
/*80283910 00280710*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80283914 00280714*/ PPC::Runtime::ASM::bl(fn_80283E18);
/*80283918 00280718*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8028391C 0028071C*/ PPC::Runtime::ASM::li(context->r4, 0x1c);
/*80283920 00280720*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80283924 00280724*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80283928 00280728*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8028392C 0028072C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80283930 00280730*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r29));
/*80283934 00280734*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r29));
/*80283938 00280738*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*8028393C 0028073C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80283940 00280740*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80283944 00280744*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*80283948 00280748*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r29));
/*8028394C 0028074C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r29));
/*80283950 00280750*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*80283954 00280754*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r29));
/*80283958 00280758*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*8028395C 0028075C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*80283960 00280760*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r29));
/*80283964 00280764*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r29));
/*80283968 00280768*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*8028396C 0028076C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r29));
/*80283970 00280770*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r29));
/*80283974 00280774*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r29));
/*80283978 00280778*/ PPC::Runtime::ASM::bl(fn_playerDies);
/*8028397C 0028077C*/ PPC::Runtime::ASM::bl(fn_8005E6C8);
/*80283980 00280780*/ PPC::Runtime::ASM::lis(context->r4, fn_802839B8 @ Get_MemoryOffset_HighBit);
/*80283984 00280784*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80283988 00280788*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_802839B8 @ Get_MemoryOffset_LowBit);
/*8028398C 0028078C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80283990 00280790*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*80283994 00280794*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80283998 00280798*/ PPC::Runtime::ASM::bl(fn_8000C964);
/*8028399C 0028079C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802839A0 002807A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802839A4 002807A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802839A8 002807A8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802839AC 002807AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802839B0 002807B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802839B4 002807B4*/ PPC::Runtime::ASM::blr();
}