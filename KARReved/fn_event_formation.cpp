//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DFE84.hpp"
#include "fn_800EE660.hpp"
#include "fn_80114154.hpp"
#include "fn_801DFDF8.hpp"
#include "fn_801140E4.hpp"



void fn_event_formation(PPC::Runtime::GCContext* context)
{
/*80111D0C 0010EB0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80111D10 0010EB10*/ PPC::Runtime::ASM::mflr(context->r0);
/*80111D14 0010EB14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80111D18 0010EB18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80111D1C 0010EB1C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80111D20 0010EB20*/ PPC::Runtime::ASM::bl(fn_801DFE84);
/*80111D24 0010EB24*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80111D28 0010EB28*/ PPC::Runtime::ASM::beq(.L_80111D3C);
/*80111D2C 0010EB2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80111D30 0010EB30*/ PPC::Runtime::ASM::bl(fn_800EE660);
/*80111D34 0010EB34*/ PPC::Runtime::ASM::bl(fn_80114154);
/*80111D38 0010EB38*/ PPC::Runtime::ASM::b(.L_80111D54);
RUNTIME_PPC_JUMP_LABEL(.L_80111D3C, 0x80111D3C) //this is a jump label
/*80111D3C 0010EB3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*80111D40 0010EB40*/ PPC::Runtime::ASM::bl(fn_801DFDF8);
/*80111D44 0010EB44*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80111D48 0010EB48*/ PPC::Runtime::ASM::beq(.L_80111D54);
/*80111D4C 0010EB4C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*80111D50 0010EB50*/ PPC::Runtime::ASM::bl(fn_801140E4);
RUNTIME_PPC_JUMP_LABEL(.L_80111D54, 0x80111D54) //this is a jump label
/*80111D54 0010EB54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80111D58 0010EB58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80111D5C 0010EB5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80111D60 0010EB60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80111D64 0010EB64*/ PPC::Runtime::ASM::blr();
}