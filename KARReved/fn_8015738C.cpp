//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138AB0.hpp"
#include "fn_80138B10.hpp"



void fn_8015738C(PPC::Runtime::GCContext* context)
{
/*8015738C 0015418C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80157390 00154190*/ PPC::Runtime::ASM::mflr(context->r0);
/*80157394 00154194*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80157398 00154198*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015739C 0015419C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801573A0 001541A0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801573A4 001541A4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801573A8 001541A8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801573AC 001541AC*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*801573B0 001541B0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x6f8);
/*801573B4 001541B4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801573B8 001541B8*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*801573BC 001541BC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801573C0 001541C0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*801573C4 001541C4*/ PPC::Runtime::ASM::beq(.L_80157400);
/*801573C8 001541C8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*801573CC 001541CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801573D0 001541D0*/ PPC::Runtime::ASM::bl(fn_80138AB0);
/*801573D4 001541D4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801573D8 001541D8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801573DC 001541DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*801573E0 001541E0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*801573E4 001541E4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E07D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801573E8 001541E8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E07D4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801573EC 001541EC*/ PPC::Runtime::ASM::bl(fn_80138B10);
/*801573F0 001541F0*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*801573F4 001541F4*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*801573F8 001541F8*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r29));
/*801573FC 001541FC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_80157400, 0x80157400) //this is a jump label
/*80157400 00154200*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80157404 00154204*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80157408 00154208*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015740C 0015420C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80157410 00154210*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80157414 00154214*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80157418 00154218*/ PPC::Runtime::ASM::blr();
}