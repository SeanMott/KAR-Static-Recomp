//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_firecrackerLogic_NotPressedA.hpp"
#include "fn_801B5DEC.hpp"
#include "fn_firecrackerLogic_NotPressedA.hpp"
#include "fn_801B5DCC.hpp"
#include "fn_801B5DEC.hpp"
#include "fn_801B5DCC.hpp"



void fn_801B5E34(PPC::Runtime::GCContext* context)
{
/*801B5E34 001B2C34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B5E38 001B2C38*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B5E3C 001B2C3C*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E1670 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B5E40 001B2C40*/ PPC::Runtime::ASM::li(context->r4, 0x44);
/*801B5E44 001B2C44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B5E48 001B2C48*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B5E4C 001B2C4C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B5E50 001B2C50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B5E54 001B2C54*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B5E58 001B2C58*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa24, context->r3));
/*801B5E5C 001B2C5C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r3));
/*801B5E60 001B2C60*/ PPC::Runtime::ASM::fmuls(context->f1, context->f0, context->f2);
/*801B5E64 001B2C64*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B5E68 001B2C68*/ PPC::Runtime::ASM::lis(context->r3, fn_firecrackerLogic_NotPressedA @ Get_MemoryOffset_HighBit);
/*801B5E6C 001B2C6C*/ PPC::Runtime::ASM::lis(context->r4, fn_801B5DEC @ Get_MemoryOffset_HighBit);
/*801B5E70 001B2C70*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_firecrackerLogic_NotPressedA @ Get_MemoryOffset_LowBit);
/*801B5E74 001B2C74*/ PPC::Runtime::ASM::lis(context->r3, fn_801B5DCC @ Get_MemoryOffset_HighBit);
/*801B5E78 001B2C78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7d0, context->r31));
/*801B5E7C 001B2C7C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801B5DEC @ Get_MemoryOffset_LowBit);
/*801B5E80 001B2C80*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B5DCC @ Get_MemoryOffset_LowBit);
/*801B5E84 001B2C84*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B5E88 001B2C88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B5E8C 001B2C8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B5E90 001B2C90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B5E94 001B2C94*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B5E98 001B2C98*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B5E9C 001B2C9C*/ PPC::Runtime::ASM::blr();
}