//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80205F60.hpp"



void fn_8020FCBC(PPC::Runtime::GCContext* context)
{
/*8020FCBC 0020CABC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020FCC0 0020CAC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020FCC4 0020CAC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020FCC8 0020CAC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020FCCC 0020CACC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020FCD0 0020CAD0*/ PPC::Runtime::ASM::bl(fn_80205F60);
/*8020FCD4 0020CAD4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8, context->r31));
/*8020FCD8 0020CAD8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x550, context->r31));
/*8020FCDC 0020CADC*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*8020FCE0 0020CAE0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8, context->r31));
/*8020FCE4 0020CAE4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2fc, context->r31));
/*8020FCE8 0020CAE8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x554, context->r31));
/*8020FCEC 0020CAEC*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*8020FCF0 0020CAF0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2fc, context->r31));
/*8020FCF4 0020CAF4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r31));
/*8020FCF8 0020CAF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x558, context->r31));
/*8020FCFC 0020CAFC*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*8020FD00 0020CB00*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r31));
/*8020FD04 0020CB04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020FD08 0020CB08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020FD0C 0020CB0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020FD10 0020CB10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020FD14 0020CB14*/ PPC::Runtime::ASM::blr();
}