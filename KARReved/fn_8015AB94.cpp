//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_JObj_GetWorldPosition.hpp"



void fn_8015AB94(PPC::Runtime::GCContext* context)
{
/*8015AB94 00157994*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015AB98 00157998*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015AB9C 0015799C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015ABA0 001579A0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8015ABA4 001579A4*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*8015ABA8 001579A8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8015ABAC 001579AC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8015ABB0 001579B0*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8015ABB4 001579B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r28));
/*8015ABB8 001579B8*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x4c);
/*8015ABBC 001579BC*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*8015ABC0 001579C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*8015ABC4 001579C4*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x58);
/*8015ABC8 001579C8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8015ABCC 001579CC*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*8015ABD0 001579D0*/ PPC::Runtime::ASM::mr(context->r27, context->r28);
/*8015ABD4 001579D4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015ABD8, 0x8015ABD8) //this is a jump label
/*8015ABD8 001579D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*8015ABDC 001579DC*/ PPC::Runtime::ASM::addi(context->r29, context->r28, 0x64);
/*8015ABE0 001579E0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8015ABE4 001579E4*/ PPC::Runtime::ASM::bne(.L_8015ABF8);
/*8015ABE8 001579E8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6920 @ Get_MemoryOffset_SDA21);
/*8015ABEC 001579EC*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*8015ABF0 001579F0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6928 @ Get_MemoryOffset_SDA21);
/*8015ABF4 001579F4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8015ABF8, 0x8015ABF8) //this is a jump label
/*8015ABF8 001579F8*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8015ABFC 001579FC*/ PPC::Runtime::ASM::bne(.L_8015AC14);
/*8015AC00 00157A00*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1250 @ Get_MemoryOffset_HighBit);
/*8015AC04 00157A04*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6920 @ Get_MemoryOffset_SDA21);
/*8015AC08 00157A08*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1250 @ Get_MemoryOffset_LowBit);
/*8015AC0C 00157A0C*/ PPC::Runtime::ASM::li(context->r4, 0x3e5);
/*8015AC10 00157A10*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8015AC14, 0x8015AC14) //this is a jump label
/*8015AC14 00157A14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*8015AC18 00157A18*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*8015AC1C 00157A1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r30));
/*8015AC20 00157A20*/ PPC::Runtime::ASM::cmpwi(context->r31, 0xd);
/*8015AC24 00157A24*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0xc);
/*8015AC28 00157A28*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*8015AC2C 00157A2C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8015AC30 00157A30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8015AC34 00157A34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r30));
/*8015AC38 00157A38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8015AC3C 00157A3C*/ PPC::Runtime::ASM::ble(.L_8015ABD8);
/*8015AC40 00157A40*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*8015AC44 00157A44*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8015AC48 00157A48*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8015AC4C 00157A4C*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*8015AC50 00157A50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015AC54 00157A54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015AC58 00157A58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015AC5C 00157A5C*/ PPC::Runtime::ASM::blr();
}