//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80489224.hpp"
#include "fn_804876A0.hpp"
#include "fn_804876A0.hpp"
#include "fn_OSCreateThread.hpp"
#include "fn_OSResumeThread.hpp"



void fn_80487B58(PPC::Runtime::GCContext* context)
{
/*80487B58 00484958*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80487B5C 0048495C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80487B60 00484960*/ PPC::Runtime::ASM::lis(context->r5, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*80487B64 00484964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80487B68 00484968*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80487B6C 0048496C*/ PPC::Runtime::ASM::addi(context->r31, context->r5, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*80487B70 00484970*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80487B74 00484974*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*80487B78 00484978*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80487B7C 0048497C*/ PPC::Runtime::ASM::beq(.L_80487BF4);
/*80487B80 00484980*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80487B84 00484984*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80487B88 00484988*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*80487B8C 0048498C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
/*80487B90 00484990*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80487B94 00484994*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*80487B98 00484998*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80487B9C 0048499C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80487BA0 004849A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*80487BA4 004849A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*80487BA8 004849A8*/ PPC::Runtime::ASM::bl(fn_80489224);
/*80487BAC 004849AC*/ PPC::Runtime::ASM::lis(context->r4, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*80487BB0 004849B0*/ PPC::Runtime::ASM::lis(context->r3, fn_804876A0 @ Get_MemoryOffset_HighBit);
/*80487BB4 004849B4*/ PPC::Runtime::ASM::addi(context->r9, context->r4, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*80487BB8 004849B8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80487BBC 004849BC*/ PPC::Runtime::ASM::addis(context->r6, context->r9, 0x1);
/*80487BC0 004849C0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r9));
/*80487BC4 004849C4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x7bd8, context->r6));
/*80487BC8 004849C8*/ PPC::Runtime::ASM::addi(context->r30, context->r9, 0x110);
/*80487BCC 004849CC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn_804876A0 @ Get_MemoryOffset_LowBit);
/*80487BD0 004849D0*/ PPC::Runtime::ASM::add(context->r6, context->r9, context->r7);
/*80487BD4 004849D4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80487BD8 004849D8*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*80487BDC 004849DC*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x428);
/*80487BE0 004849E0*/ PPC::Runtime::ASM::bl(fn_OSCreateThread);
/*80487BE4 004849E4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80487BE8 004849E8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80487BEC 004849EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*80487BF0 004849F0*/ PPC::Runtime::ASM::bl(fn_OSResumeThread);
RUNTIME_PPC_JUMP_LABEL(.L_80487BF4, 0x80487BF4) //this is a jump label
/*80487BF4 004849F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80487BF8 004849F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80487BFC 004849FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80487C00 00484A00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80487C04 00484A04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80487C08 00484A08*/ PPC::Runtime::ASM::blr();
}