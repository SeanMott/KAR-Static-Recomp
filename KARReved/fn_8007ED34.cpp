//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800AB5A4.hpp"
#include "fn_800AB4C0.hpp"
#include "fn_dbPutString.hpp"



void fn_8007ED34(PPC::Runtime::GCContext* context)
{
/*8007ED34 0007BB34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8007ED38 0007BB38*/ PPC::Runtime::ASM::mflr(context->r0);
/*8007ED3C 0007BB3C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180552DD8 @ Get_MemoryOffset_HighBit);
/*8007ED40 0007BB40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007ED44 0007BB44*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180552DD8 @ Get_MemoryOffset_LowBit);
/*8007ED48 0007BB48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8007ED4C 0007BB4C*/ PPC::Runtime::ASM::bl(fn_800AB5A4);
/*8007ED50 0007BB50*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180552DD8 @ Get_MemoryOffset_HighBit);
/*8007ED54 0007BB54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8007ED58 0007BB58*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180552DD8 @ Get_MemoryOffset_LowBit);
/*8007ED5C 0007BB5C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8007ED60 0007BB60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8007ED64 0007BB64*/ PPC::Runtime::ASM::bl(fn_800AB4C0);
/*8007ED68 0007BB68*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180552DD8 @ Get_MemoryOffset_HighBit);
/*8007ED6C 0007BB6C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180552DD8 @ Get_MemoryOffset_LowBit);
/*8007ED70 0007BB70*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/* 8007ED74 0007BB74  54 00 D7 BF */ extrwi. context->r0 , context->r0 , 2 , 24
/*8007ED78 0007BB78*/ PPC::Runtime::ASM::beq(.L_8007ED80);
/*8007ED7C 0007BB7C*/ PPC::Runtime::ASM::b(.L_8007ED98);
RUNTIME_PPC_JUMP_LABEL(.L_8007ED80, 0x8007ED80) //this is a jump label
/*8007ED80 0007BB80*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1sp_Gm_Timeclear @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007ED84 0007BB84*/ PPC::Runtime::ASM::li(context->r4, lbl_805D546C @ Get_MemoryOffset_SDA21);
/*8007ED88 0007BB88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8007ED8C 0007BB8C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8007ED90 0007BB90*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8007ED94 0007BB94*/ PPC::Runtime::ASM::bl(fn_dbPutString);
RUNTIME_PPC_JUMP_LABEL(.L_8007ED98, 0x8007ED98) //this is a jump label
/*8007ED98 0007BB98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007ED9C 0007BB9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007EDA0 0007BBA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8007EDA4 0007BBA4*/ PPC::Runtime::ASM::blr();
}