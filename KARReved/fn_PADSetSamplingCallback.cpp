//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_SamplingHandler.hpp"
#include "fn_SamplingHandler.hpp"
#include "fn_SIRegisterPollingHandler.hpp"
#include "fn_SamplingHandler.hpp"
#include "fn_SamplingHandler.hpp"
#include "fn_SIUnregisterPollingHandler.hpp"



void fn_PADSetSamplingCallback(PPC::Runtime::GCContext* context)
{
/*803DD68C 003DA48C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DD690 003DA490*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803DD694 003DA494*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DD698 003DA498*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803DD69C 003DA49C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DD6A0 003DA4A0*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1805DDF5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DD6A4 003DA4A4*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DDF5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DD6A8 003DA4A8*/ PPC::Runtime::ASM::beq(.L_803DD6BC);
/*803DD6AC 003DA4AC*/ PPC::Runtime::ASM::lis(context->r3, fn_SamplingHandler @ Get_MemoryOffset_HighBit);
/*803DD6B0 003DA4B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_SamplingHandler @ Get_MemoryOffset_LowBit);
/*803DD6B4 003DA4B4*/ PPC::Runtime::ASM::bl(fn_SIRegisterPollingHandler);
/*803DD6B8 003DA4B8*/ PPC::Runtime::ASM::b(.L_803DD6C8);
RUNTIME_PPC_JUMP_LABEL(.L_803DD6BC, 0x803DD6BC) //this is a jump label
/*803DD6BC 003DA4BC*/ PPC::Runtime::ASM::lis(context->r3, fn_SamplingHandler @ Get_MemoryOffset_HighBit);
/*803DD6C0 003DA4C0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_SamplingHandler @ Get_MemoryOffset_LowBit);
/*803DD6C4 003DA4C4*/ PPC::Runtime::ASM::bl(fn_SIUnregisterPollingHandler);
RUNTIME_PPC_JUMP_LABEL(.L_803DD6C8, 0x803DD6C8) //this is a jump label
/*803DD6C8 003DA4C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803DD6CC 003DA4CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DD6D0 003DA4D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DD6D4 003DA4D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803DD6D8 003DA4D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DD6DC 003DA4DC*/ PPC::Runtime::ASM::blr();
}