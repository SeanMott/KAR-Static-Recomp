//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80172C3C(PPC::Runtime::GCContext* context)
{
/*80172C3C 0016FA3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80172C40 0016FA40*/ PPC::Runtime::ASM::mflr(context->r0);
/*80172C44 0016FA44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80172C48 0016FA48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80172C4C 0016FA4C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80172C50 0016FA50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80172C54 0016FA54*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80172C58 0016FA58*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80172C5C 0016FA5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcac, context->r3));
/*80172C60 0016FA60*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80172C64 0016FA64*/ PPC::Runtime::ASM::beq(.L_80172C90);
/*80172C68 0016FA68*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80172C6C 0016FA6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80172C70 0016FA70*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*80172C74 0016FA74*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*80172C78 0016FA78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r4));
/*80172C7C 0016FA7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r4));
/*80172C80 0016FA80*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80172C84 0016FA84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80172C88 0016FA88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r4));
/*80172C8C 0016FA8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80172C90, 0x80172C90) //this is a jump label
/*80172C90 0016FA90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80172C94 0016FA94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80172C98 0016FA98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80172C9C 0016FA9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80172CA0 0016FAA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80172CA4 0016FAA4*/ PPC::Runtime::ASM::blr();
}