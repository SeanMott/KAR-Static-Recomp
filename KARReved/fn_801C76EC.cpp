//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D6C50.hpp"



void fn_801C76EC(PPC::Runtime::GCContext* context)
{
/*801C76EC 001C44EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C76F0 001C44F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C76F4 001C44F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C76F8 001C44F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C76FC 001C44FC*/ PPC::Runtime::ASM::bl(fn_801D6C50);
/*801C7700 001C4500*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C7704 001C4504*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C7708 001C4508*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C770C 001C450C*/ PPC::Runtime::ASM::blr();
}