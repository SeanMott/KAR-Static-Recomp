//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005E7D8.hpp"
#include "fn_802230A0.hpp"
#include "fn_ability_Ice_end.hpp"
#include "fn_revertKirbyModel?.hpp"



void fn_abilityTimer_Ice_remove(PPC::Runtime::GCContext* context)
{
/*801B48A0 001B16A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B48A4 001B16A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B48A8 001B16A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B48AC 001B16AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B48B0 001B16B0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B48B4 001B16B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r3));
/*801B48B8 001B16B8*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*801B48BC 001B16BC*/ PPC::Runtime::ASM::beq(.L_801B48C4);
/*801B48C0 001B16C0*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
RUNTIME_PPC_JUMP_LABEL(.L_801B48C4, 0x801B48C4) //this is a jump label
/*801B48C4 001B16C4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801B48C8 001B16C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B48CC 001B16CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801B48D0 001B16D0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801B48D4 001B16D4*/ PPC::Runtime::ASM::beq(.L_801B48E4);
/*801B48D8 001B16D8*/ PPC::Runtime::ASM::bl(fn_802230A0);
/*801B48DC 001B16DC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B48E0 001B16E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B48E4, 0x801B48E4) //this is a jump label
/*801B48E4 001B16E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B48E8 001B16E8*/ PPC::Runtime::ASM::bl(fn_ability_Ice_end);
/*801B48EC 001B16EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B48F0 001B16F0*/ PPC::Runtime::ASM::bl(fn_revertKirbyModel?);
/*801B48F4 001B16F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B48F8 001B16F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B48FC 001B16FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B4900 001B1700*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B4904 001B1704*/ PPC::Runtime::ASM::blr();
}