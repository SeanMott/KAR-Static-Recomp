//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80054798.hpp"



void fn_801DC134(PPC::Runtime::GCContext* context)
{
/*801DC134 001D8F34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*801DC138 001D8F38*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DC13C 001D8F3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801DC140 001D8F40*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801DC144 001D8F44*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801DC148 001D8F48*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801DC14C 001D8F4C*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801DC150 001D8F50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DC154 001D8F54*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DC158 001D8F58*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801DC15C 001D8F5C*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*801DC160 001D8F60*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*801DC164 001D8F64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f0, context->r3));
/*801DC168 001D8F68*/ PPC::Runtime::ASM::bl(fn_80054798);
/*801DC16C 001D8F6C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DC170 001D8F70*/ PPC::Runtime::ASM::beq(.L_801DC180);
/*801DC174 001D8F74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f0, context->r30));
/*801DC178 001D8F78*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*801DC17C 001D8F7C*/ PPC::Runtime::ASM::b(.L_801DC194);
RUNTIME_PPC_JUMP_LABEL(.L_801DC180, 0x801DC180) //this is a jump label
/*801DC180 001D8F80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x36c);
/*801DC184 001D8F84*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801DC188 001D8F88*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7fc, context->r30));
/*801DC18C 001D8F8C*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801DC190 001D8F90*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7fc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801DC194, 0x801DC194) //this is a jump label
/*801DC194 001D8F94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f0, context->r30));
/*801DC198 001D8F98*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801DC19C 001D8F9C*/ PPC::Runtime::ASM::bne(.L_801DC1B0);
/*801DC1A0 001D8FA0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7020 @ Get_MemoryOffset_SDA21);
/*801DC1A4 001D8FA4*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*801DC1A8 001D8FA8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7028 @ Get_MemoryOffset_SDA21);
/*801DC1AC 001D8FAC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DC1B0, 0x801DC1B0) //this is a jump label
/*801DC1B0 001D8FB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*801DC1B4 001D8FB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*801DC1B8 001D8FB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DC1BC 001D8FBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*801DC1C0 001D8FC0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f4, context->r30));
/*801DC1C4 001D8FC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DC1C8 001D8FC8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x758, context->r30));
/*801DC1CC 001D8FCC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
/*801DC1D0 001D8FD0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1C2C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DC1D4 001D8FD4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801DC1D8 001D8FD8*/ PPC::Runtime::ASM::fcmpu(cr0, context->f2, context->f0);
/*801DC1DC 001D8FDC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f30, context->f1);
/*801DC1E0 001D8FE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DC1E4 001D8FE4*/ PPC::Runtime::ASM::beq(.L_801DC1F4);
/*801DC1E8 001D8FE8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x63c, context->r30));
/*801DC1EC 001D8FEC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f0);
/*801DC1F0 001D8FF0*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_801DC1F4, 0x801DC1F4) //this is a jump label
/*801DC1F4 001D8FF4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x800, context->r30));
/*801DC1F8 001D8FF8*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f0);
/*801DC1FC 001D8FFC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f31);
/*801DC200 001D9000*/ PPC::Runtime::ASM::ble(.L_801DC20C);
/*801DC204 001D9004*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*801DC208 001D9008*/ PPC::Runtime::ASM::b(.L_801DC21C);
RUNTIME_PPC_JUMP_LABEL(.L_801DC20C, 0x801DC20C) //this is a jump label
/*801DC20C 001D900C*/ PPC::Runtime::ASM::fneg(context->f0, context->f31);
/*801DC210 001D9010*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801DC214 001D9014*/ PPC::Runtime::ASM::bge(.L_801DC21C);
/*801DC218 001D9018*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_801DC21C, 0x801DC21C) //this is a jump label
/*801DC21C 001D901C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x800, context->r30));
/*801DC220 001D9020*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801DC224 001D9024*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x800, context->r30));
/*801DC228 001D9028*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801DC22C 001D902C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801DC230 001D9030*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801DC234 001D9034*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801DC238 001D9038*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DC23C 001D903C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801DC240 001D9040*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DC244 001D9044*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DC248 001D9048*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*801DC24C 001D904C*/ PPC::Runtime::ASM::blr();
}