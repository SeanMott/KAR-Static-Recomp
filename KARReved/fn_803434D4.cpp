//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80342E98.hpp"



void fn_803434D4(PPC::Runtime::GCContext* context)
{
/*803434D4 003402D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803434D8 003402D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803434DC 003402DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803434E0 003402E0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803434E4 003402E4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803434E8 003402E8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x58);
/*803434EC 003402EC*/ PPC::Runtime::ASM::bl(fn_80342E98);
/*803434F0 003402F0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x100);
/*803434F4 003402F4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r31));
/*803434F8 003402F8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*803434FC 003402FC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80343500 00340300*/ PPC::Runtime::ASM::bctrl();
/*80343504 00340304*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80343508 00340308*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8034350C 0034030C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80343510 00340310*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80343514 00340314*/ PPC::Runtime::ASM::blr();
}