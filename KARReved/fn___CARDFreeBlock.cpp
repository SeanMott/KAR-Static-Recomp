//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___CARDUpdateFatBlock.hpp"



void fn___CARDFreeBlock(PPC::Runtime::GCContext* context)
{
/*803E48A8 003E16A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E48AC 003E16AC*/ PPC::Runtime::ASM::mulli(context->r7, context->r3, 0x110);
/*803E48B0 003E16B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E48B4 003E16B4*/ PPC::Runtime::ASM::lis(context->r6, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E48B8 003E16B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*803E48BC 003E16BC*/ PPC::Runtime::ASM::addi(context->r0, context->r6, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E48C0 003E16C0*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r7);
/*803E48C4 003E16C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*803E48C8 003E16C8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803E48CC 003E16CC*/ PPC::Runtime::ASM::bne(.L_803E48D8);
/*803E48D0 003E16D0*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E48D4 003E16D4*/ PPC::Runtime::ASM::b(.L_803E4934);
RUNTIME_PPC_JUMP_LABEL(.L_803E48D8, 0x803E48D8) //this is a jump label
/*803E48D8 003E16D8*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r9));
/*803E48DC 003E16DC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803E48E0 003E16E0*/ PPC::Runtime::ASM::b(.L_803E4920);
RUNTIME_PPC_JUMP_LABEL(.L_803E48E4, 0x803E48E4) //this is a jump label
/*803E48E4 003E16E4*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r4, 16);
/*803E48E8 003E16E8*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x5);
/*803E48EC 003E16EC*/ PPC::Runtime::ASM::blt(.L_803E48FC);
/*803E48F0 003E16F0*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r9));
/*803E48F4 003E16F4*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*803E48F8 003E16F8*/ PPC::Runtime::ASM::blt(.L_803E4904);
RUNTIME_PPC_JUMP_LABEL(.L_803E48FC, 0x803E48FC) //this is a jump label
/*803E48FC 003E16FC*/ PPC::Runtime::ASM::li(context->r3, -0x6);
/*803E4900 003E1700*/ PPC::Runtime::ASM::b(.L_803E4934);
RUNTIME_PPC_JUMP_LABEL(.L_803E4904, 0x803E4904) //this is a jump label
/*803E4904 003E1704*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 1);
/*803E4908 003E1708*/ PPC::Runtime::ASM::add(context->r6, context->r8, context->r0);
/*803E490C 003E170C*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*803E4910 003E1710*/ PPC::Runtime::ASM::sth(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*803E4914 003E1714*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r8));
/*803E4918 003E1718*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x1);
/*803E491C 003E171C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_803E4920, 0x803E4920) //this is a jump label
/*803E4920 003E1720*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r4, 16);
/*803E4924 003E1724*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*803E4928 003E1728*/ PPC::Runtime::ASM::bne(.L_803E48E4);
/*803E492C 003E172C*/ PPC::Runtime::ASM::mr(context->r4, context->r8);
/*803E4930 003E1730*/ PPC::Runtime::ASM::bl(fn___CARDUpdateFatBlock);
RUNTIME_PPC_JUMP_LABEL(.L_803E4934, 0x803E4934) //this is a jump label
/*803E4934 003E1734*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803E4938 003E1738*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*803E493C 003E173C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E4940 003E1740*/ PPC::Runtime::ASM::blr();
}