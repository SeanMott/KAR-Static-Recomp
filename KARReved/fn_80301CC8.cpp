//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802DF900.hpp"
#include "fn_80301DCC.hpp"



void fn_80301CC8(PPC::Runtime::GCContext* context)
{
/*80301CC8 002FEAC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*80301CCC 002FEACC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80301CD0 002FEAD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80301CD4 002FEAD4*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80301CD8 002FEAD8*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*80301CDC 002FEADC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80301CE0 002FEAE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80301CE4 002FEAE4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80301CE8 002FEAE8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80301CEC 002FEAEC*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80301CF0 002FEAF0*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*80301CF4 002FEAF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80301CF8 002FEAF8*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*80301CFC 002FEAFC*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80301D00 002FEB00*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*80301D04 002FEB04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r3));
/*80301D08 002FEB08*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x5);
/*80301D0C 002FEB0C*/ PPC::Runtime::ASM::bne(.L_80301D20);
/*80301D10 002FEB10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x520, context->r3));
/*80301D14 002FEB14*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80301D18 002FEB18*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80301D1C 002FEB1C*/ PPC::Runtime::ASM::bl(fn_8038D158);
RUNTIME_PPC_JUMP_LABEL(.L_80301D20, 0x80301D20) //this is a jump label
/*80301D20 002FEB20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80301D24 002FEB24*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80301D28 002FEB28*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80301D2C 002FEB2C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80301D30 002FEB30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80301D34 002FEB34*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*80301D38 002FEB38*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80301D3C 002FEB3C*/ PPC::Runtime::ASM::bl(fn_802DF900);
/*80301D40 002FEB40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*80301D44 002FEB44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r3));
/*80301D48 002FEB48*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80301D4C 002FEB4C*/ PPC::Runtime::ASM::bne(.L_80301DA4);
/*80301D50 002FEB50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x520, context->r3));
/*80301D54 002FEB54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80301D58 002FEB58*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*80301D5C 002FEB5C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80301D60 002FEB60*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80301D64 002FEB64*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDB60 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80301D68 002FEB68*/ PPC::Runtime::ASM::li(context->r5, MineMgr_HandleOfSomething @ Get_MemoryOffset_SDA21);
/*80301D6C 002FEB6C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r8));
/*80301D70 002FEB70*/ PPC::Runtime::ASM::li(context->r6, HandleOfKind_15 @ Get_MemoryOffset_SDA21);
/*80301D74 002FEB74*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r8));
/*80301D78 002FEB78*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80301D7C 002FEB7C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r8));
/*80301D80 002FEB80*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80301D84 002FEB84*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80301D88 002FEB88*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80301D8C 002FEB8C*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*80301D90 002FEB90*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*80301D94 002FEB94*/ PPC::Runtime::ASM::bl(fn_80301DCC);
/*80301D98 002FEB98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*80301D9C 002FEB9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80301DA0 002FEBA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_80301DA4, 0x80301DA4) //this is a jump label
/*80301DA4 002FEBA4*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*80301DA8 002FEBA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80301DAC 002FEBAC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80301DB0 002FEBB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80301DB4 002FEBB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80301DB8 002FEBB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80301DBC 002FEBBC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80301DC0 002FEBC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80301DC4 002FEBC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80301DC8 002FEBC8*/ PPC::Runtime::ASM::blr();
}