//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062A80.hpp"



void fn_8007D718(PPC::Runtime::GCContext* context)
{
/*8007D718 0007A518*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*8007D71C 0007A51C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8007D720 0007A520*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8007D724 0007A524*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*8007D728 0007A528*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8007D72C 0007A52C*/ PPC::Runtime::ASM::bne(cr1, .L_8007D750);
/*8007D730 0007A530*/ PPC::Runtime::ASM::stfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8007D734 0007A534*/ PPC::Runtime::ASM::stfd(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8007D738 0007A538*/ PPC::Runtime::ASM::stfd(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8007D73C 0007A53C*/ PPC::Runtime::ASM::stfd(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*8007D740 0007A540*/ PPC::Runtime::ASM::stfd(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8007D744 0007A544*/ PPC::Runtime::ASM::stfd(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*8007D748 0007A548*/ PPC::Runtime::ASM::stfd(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*8007D74C 0007A54C*/ PPC::Runtime::ASM::stfd(context->f8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_8007D750, 0x8007D750) //this is a jump label
/*8007D750 0007A550*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8007D754 0007A554*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8007D758 0007A558*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8007D75C 0007A55C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007D760 0007A560*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8007D764 0007A564*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8007D768 0007A568*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8007D76C 0007A56C*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8007D770 0007A570*/ PPC::Runtime::ASM::bl(fn_AIStopDMA);
/*8007D774 0007A574*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8007D778 0007A578*/ PPC::Runtime::ASM::bl(fn_AIRegisterDMACallback);
/*8007D77C 0007A57C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8007D780 0007A580*/ PPC::Runtime::ASM::bl(fn_HSD_VISetUserPreRetraceCallback);
/*8007D784 0007A584*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8007D788 0007A588*/ PPC::Runtime::ASM::bl(fn_HSD_VISetUserPostRetraceCallback);
/*8007D78C 0007A58C*/ PPC::Runtime::ASM::bl(fn_80062A80);
/*8007D790 0007A590*/ PPC::Runtime::ASM::lis(context->r4, String_ "DATE_Aug_18_2003__TIME_16:53:5" Get_MemoryOffset_HighBit);
/*8007D794 0007A594*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5428 @ Get_MemoryOffset_SDA21);
/*8007D798 0007A598*/ PPC::Runtime::ASM::addi(context->r4, context->r4, String_ "DATE_Aug_18_2003__TIME_16:53:5" Get_MemoryOffset_LowBit);
/*8007D79C 0007A59C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8007D7A0 0007A5A0*/ PPC::Runtime::ASM::bl(OSReport);
/*8007D7A4 0007A5A4*/ PPC::Runtime::ASM::lis(context->r4, UNK_128Bytes @ Get_MemoryOffset_HighBit);
/*8007D7A8 0007A5A8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5428 @ Get_MemoryOffset_SDA21);
/*8007D7AC 0007A5AC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, UNK_128Bytes @ Get_MemoryOffset_LowBit);
/*8007D7B0 0007A5B0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8007D7B4 0007A5B4*/ PPC::Runtime::ASM::bl(OSReport);
/*8007D7B8 0007A5B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007D7BC 0007A5BC*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*8007D7C0 0007A5C0*/ PPC::Runtime::ASM::bl(fn_8043A778);
/*8007D7C4 0007A5C4*/ PPC::Runtime::ASM::li(context->r3, 0x1388);
/*8007D7C8 0007A5C8*/ PPC::Runtime::ASM::bl(fn_8043FFB4);
/*8007D7CC 0007A5CC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1DbLevel @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007D7D0 0007A5D0*/ PPC::Runtime::ASM::bl(fn_8043FFAC);
/*8007D7D4 0007A5D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007D7D8 0007A5D8*/ PPC::Runtime::ASM::bl(fn_8043FD28);
/*8007D7DC 0007A5DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8007D7E0 0007A5E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*8007D7E4 0007A5E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007D7E8 0007A5E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*8007D7EC 0007A5EC*/ PPC::Runtime::ASM::blr();
}