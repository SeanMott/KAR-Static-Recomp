//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn__HSD_MemAlloc.hpp"
#include "fn_HSD_SListAppend.hpp"
#include "fn_HSD_SListPrepend.hpp"



void fn_804397B4(PPC::Runtime::GCContext* context)
{
/*804397B4 004365B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*804397B8 004365B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*804397BC 004365BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804397C0 004365C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804397C4 004365C4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*804397C8 004365C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*804397CC 004365CC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*804397D0 004365D0*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE3F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*804397D4 004365D4*/ PPC::Runtime::ASM::b(.L_804397FC);
RUNTIME_PPC_JUMP_LABEL(.L_804397D8, 0x804397D8) //this is a jump label
/*804397D8 004365D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*804397DC 004365DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*804397E0 004365E0*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*804397E4 004365E4*/ PPC::Runtime::ASM::beq(.L_8043983C);
/*804397E8 004365E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*804397EC 004365EC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x80);
/*804397F0 004365F0*/ PPC::Runtime::ASM::bgt(.L_804397F8);
/*804397F4 004365F4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
RUNTIME_PPC_JUMP_LABEL(.L_804397F8, 0x804397F8) //this is a jump label
/*804397F8 004365F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_804397FC, 0x804397FC) //this is a jump label
/*804397FC 004365FC*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*80439800 00436600*/ PPC::Runtime::ASM::bne(.L_804397D8);
/*80439804 00436604*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*80439808 00436608*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*8043980C 0043660C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80439810 00436610*/ PPC::Runtime::ASM::li(context->r0, 0x80);
/*80439814 00436614*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80439818 00436618*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8043981C 0043661C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80439820 00436620*/ PPC::Runtime::ASM::beq(.L_80439830);
/*80439824 00436624*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80439828 00436628*/ PPC::Runtime::ASM::bl(fn_HSD_SListAppend);
/*8043982C 0043662C*/ PPC::Runtime::ASM::b(.L_8043983C);
RUNTIME_PPC_JUMP_LABEL(.L_80439830, 0x80439830) //this is a jump label
/*80439830 00436630*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE3F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80439834 00436634*/ PPC::Runtime::ASM::bl(fn_HSD_SListPrepend);
/*80439838 00436638*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DE3F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8043983C, 0x8043983C) //this is a jump label
/*8043983C 0043663C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80439840 00436640*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80439844 00436644*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80439848 00436648*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8043984C 0043664C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80439850 00436650*/ PPC::Runtime::ASM::blr();
}