//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A47E8.hpp"
#include "fn_801A4F24.hpp"



void fn_801A4E68(PPC::Runtime::GCContext* context)
{
/*801A4E68 001A1C68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A4E6C 001A1C6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A4E70 001A1C70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4E74 001A1C74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A4E78 001A1C78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A4E7C 001A1C7C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A4E80 001A1C80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*801A4E84 001A1C84*/ PPC::Runtime::ASM::bl(fn_801A47E8);
/*801A4E88 001A1C88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*801A4E8C 001A1C8C*/ PPC::Runtime::ASM::cmpw(context->r31, context->r0);
/*801A4E90 001A1C90*/ PPC::Runtime::ASM::beq(.L_801A4E9C);
/*801A4E94 001A1C94*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A4E98 001A1C98*/ PPC::Runtime::ASM::bl(fn_801A4F24);
RUNTIME_PPC_JUMP_LABEL(.L_801A4E9C, 0x801A4E9C) //this is a jump label
/*801A4E9C 001A1C9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4EA0 001A1CA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A4EA4 001A1CA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A4EA8 001A1CA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A4EAC 001A1CAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A4EB0 001A1CB0*/ PPC::Runtime::ASM::blr();
}