//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80259C88(PPC::Runtime::GCContext* context)
{
/*80259C88 00256A88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80259C8C 00256A8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80259C90 00256A90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80259C94 00256A94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80259C98 00256A98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80259C9C 00256A9C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80259CA0 00256AA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80259CA4 00256AA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259CA8 00256AA8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80259CAC 00256AAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259CB0 00256AB0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259CB4 00256AB4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80259CB8 00256AB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259CBC 00256ABC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259CC0 00256AC0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80259CC4 00256AC4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259CC8 00256AC8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80259CCC 00256ACC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259CD0 00256AD0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259CD4 00256AD4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80259CD8 00256AD8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259CDC 00256ADC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80259CE0 00256AE0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80259CE4 00256AE4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80259CE8 00256AE8*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80259CEC 00256AEC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259CF0 00256AF0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80259CF4 00256AF4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80259CF8 00256AF8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80259CFC 00256AFC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80259D00 00256B00*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80259D04 00256B04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80259D08 00256B08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80259D0C 00256B0C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80259D10 00256B10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80259D14 00256B14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80259D18 00256B18*/ PPC::Runtime::ASM::blr();
}