//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D864.hpp"



void fn_8005DE3C(PPC::Runtime::GCContext* context)
{
/*8005DE3C 0005AC3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005DE40 0005AC40*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005DE44 0005AC44*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8005DE48 0005AC48*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8005DE4C 0005AC4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DE50 0005AC50*/ PPC::Runtime::ASM::bl(fn_8005D864);
/*8005DE54 0005AC54*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005DE58 0005AC58*/ PPC::Runtime::ASM::beq(.L_8005DEC0);
/*8005DE5C 0005AC5C*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xb8);
/*8005DE60 0005AC60*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005DE64 0005AC64*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8005DE68 0005AC68*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005DE6C 0005AC6C*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r6);
/*8005DE70 0005AC70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8005DE74 0005AC74*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x33c);
/*8005DE78 0005AC78*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DE7C 0005AC7C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*8005DE80 0005AC80*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DE84 0005AC84*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DE88 0005AC88*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 3, 28, 28);
/*8005DE8C 0005AC8C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DE90 0005AC90*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DE94 0005AC94*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 2, 29, 29);
/*8005DE98 0005AC98*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DE9C 0005AC9C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DEA0 0005ACA0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 1, 30, 30);
/*8005DEA4 0005ACA4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DEA8 0005ACA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DEAC 0005ACAC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 4, 27, 27);
/*8005DEB0 0005ACB0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DEB4 0005ACB4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
/*8005DEB8 0005ACB8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*8005DEBC 0005ACBC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8005DEC0, 0x8005DEC0) //this is a jump label
/*8005DEC0 0005ACC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DEC4 0005ACC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005DEC8 0005ACC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005DECC 0005ACCC*/ PPC::Runtime::ASM::blr();
}