//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8014F838(PPC::Runtime::GCContext* context)
{
/*8014F838 0014C638*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8014F83C 0014C63C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014F840 0014C640*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014F844 0014C644*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014F848 0014C648*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8014F84C 0014C64C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8014F850 0014C650*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8014F854 0014C654*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014F858 0014C658*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
/*8014F85C 0014C65C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8014F860 0014C660*/ PPC::Runtime::ASM::beq(.L_8014F88C);
/*8014F864 0014C664*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8014F868 0014C668*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8014F86C 0014C66C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x38);
/*8014F870 0014C670*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*8014F874 0014C674*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*8014F878 0014C678*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r4));
/*8014F87C 0014C67C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8014F880 0014C680*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8014F884 0014C684*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*8014F888 0014C688*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8014F88C, 0x8014F88C) //this is a jump label
/*8014F88C 0014C68C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014F890 0014C690*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014F894 0014C694*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8014F898 0014C698*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014F89C 0014C69C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8014F8A0 0014C6A0*/ PPC::Runtime::ASM::blr();
}