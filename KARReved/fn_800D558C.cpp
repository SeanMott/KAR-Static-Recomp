//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801119A4.hpp"
#include "fn_8010D200.hpp"



void fn_800D558C(PPC::Runtime::GCContext* context)
{
/*800D558C 000D238C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D5590 000D2390*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D5594 000D2394*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5598 000D2398*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D559C 000D239C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D55A0 000D23A0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800D55A4 000D23A4*/ PPC::Runtime::ASM::bl(fn_801119A4);
/*800D55A8 000D23A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D55AC 000D23AC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800D55B0 000D23B0*/ PPC::Runtime::ASM::beq(.L_800D55C8);
/*800D55B4 000D23B4*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D55B8 000D23B8*/ PPC::Runtime::ASM::bl(fn_8010D200);
/*800D55BC 000D23BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800D55C0 000D23C0*/ PPC::Runtime::ASM::beq(.L_800D55C8);
/*800D55C4 000D23C4*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D55C8, 0x800D55C8) //this is a jump label
/*800D55C8 000D23C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D55CC 000D23CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D55D0 000D23D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D55D4 000D23D4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D55D8 000D23D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D55DC 000D23DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D55E0 000D23E0*/ PPC::Runtime::ASM::blr();
}