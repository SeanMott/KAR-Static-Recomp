//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8043A010.hpp"
#include "fn_8043A010.hpp"
#include "fn_804285AC.hpp"
#include "fn_804285AC.hpp"



void fn_8043A15C(PPC::Runtime::GCContext* context)
{
/*8043A15C 00436F5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8043A160 00436F60*/ PPC::Runtime::ASM::mflr(context->r0);
/*8043A164 00436F64*/ PPC::Runtime::ASM::lis(context->r4, lbl_8058D198 @ Get_MemoryOffset_HighBit);
/*8043A168 00436F68*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8043A16C 00436F6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8043A170 00436F70*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_8058D198 @ Get_MemoryOffset_LowBit);
/*8043A174 00436F74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8043A178 00436F78*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8043A17C 00436F7C*/ PPC::Runtime::ASM::extrwi(context->r31, context->r4, 1, 25);
/*8043A180 00436F80*/ PPC::Runtime::ASM::beq(.L_8043A1A0);
/*8043A184 00436F84*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8043A188 00436F88*/ PPC::Runtime::ASM::lis(context->r3, fn_8043A010 @ Get_MemoryOffset_HighBit);
/*8043A18C 00436F8C*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 6, 25, 25);
/*8043A190 00436F90*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8043A194 00436F94*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_8043A010 @ Get_MemoryOffset_LowBit);
/*8043A198 00436F98*/ PPC::Runtime::ASM::bl(fn_804285AC);
/*8043A19C 00436F9C*/ PPC::Runtime::ASM::b(.L_8043A1B4);
RUNTIME_PPC_JUMP_LABEL(.L_8043A1A0, 0x8043A1A0) //this is a jump label
/*8043A1A0 00436FA0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8043A1A4 00436FA4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8043A1A8 00436FA8*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 6, 25, 25);
/*8043A1AC 00436FAC*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8043A1B0 00436FB0*/ PPC::Runtime::ASM::bl(fn_804285AC);
RUNTIME_PPC_JUMP_LABEL(.L_8043A1B4, 0x8043A1B4) //this is a jump label
/*8043A1B4 00436FB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8043A1B8 00436FB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8043A1BC 00436FBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8043A1C0 00436FC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8043A1C4 00436FC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8043A1C8 00436FC8*/ PPC::Runtime::ASM::blr();
}