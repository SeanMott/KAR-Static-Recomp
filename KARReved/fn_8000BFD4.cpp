//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000BFD4(PPC::Runtime::GCContext* context)
{
/*8000BFD4 00008DD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000BFD8 00008DD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000BFDC 00008DDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BFE0 00008DE0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BFE4 00008DE4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8000BFE8 00008DE8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BFEC 00008DEC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000BFF0 00008DF0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BFF4 00008DF4*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8000BFF8 00008DF8*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x9);
/*8000BFFC 00008DFC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0xd25);
/*8000C000 00008E00*/ PPC::Runtime::ASM::stbx(context->r31, context->r3, context->r0);
/*8000C004 00008E04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000C008 00008E08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000C00C 00008E0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000C010 00008E10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000C014 00008E14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000C018 00008E18*/ PPC::Runtime::ASM::blr();
}