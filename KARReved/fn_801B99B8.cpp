//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A2CEC.hpp"
#include "fn_801BCCB8.hpp"
#include "fn_AS_Wait2?.hpp"
#include "fn_801BAF14.hpp"
#include "fn_AS_DeadWait.hpp"
#include "fn_80191170.hpp"
#include "fn_801A4850.hpp"



void fn_801B99B8(PPC::Runtime::GCContext* context)
{
/*801B99B8 001B67B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B99BC 001B67BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B99C0 001B67C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B99C4 001B67C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B99C8 001B67C8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B99CC 001B67CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa41, context->r3));
/*801B99D0 001B67D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801B99D4 001B67D4*/ PPC::Runtime::ASM::beq(.L_801B9A20);
/*801B99D8 001B67D8*/ PPC::Runtime::ASM::bge(.L_801B9A40);
/*801B99DC 001B67DC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B99E0 001B67E0*/ PPC::Runtime::ASM::bge(.L_801B99E8);
/*801B99E4 001B67E4*/ PPC::Runtime::ASM::b(.L_801B9A40);
RUNTIME_PPC_JUMP_LABEL(.L_801B99E8, 0x801B99E8) //this is a jump label
/*801B99E8 001B67E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r31));
/*801B99EC 001B67EC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B99F0 001B67F0*/ PPC::Runtime::ASM::bne(.L_801B9A18);
/*801B99F4 001B67F4*/ PPC::Runtime::ASM::bl(fn_801A2CEC);
/*801B99F8 001B67F8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B99FC 001B67FC*/ PPC::Runtime::ASM::beq(.L_801B9A0C);
/*801B9A00 001B6800*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B9A04 001B6804*/ PPC::Runtime::ASM::bl(fn_801BCCB8);
/*801B9A08 001B6808*/ PPC::Runtime::ASM::b(.L_801B9A40);
RUNTIME_PPC_JUMP_LABEL(.L_801B9A0C, 0x801B9A0C) //this is a jump label
/*801B9A0C 001B680C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B9A10 001B6810*/ PPC::Runtime::ASM::bl(fn_AS_Wait2?);
/*801B9A14 001B6814*/ PPC::Runtime::ASM::b(.L_801B9A40);
RUNTIME_PPC_JUMP_LABEL(.L_801B9A18, 0x801B9A18) //this is a jump label
/*801B9A18 001B6818*/ PPC::Runtime::ASM::bl(fn_801BAF14);
/*801B9A1C 001B681C*/ PPC::Runtime::ASM::b(.L_801B9A40);
RUNTIME_PPC_JUMP_LABEL(.L_801B9A20, 0x801B9A20) //this is a jump label
/*801B9A20 001B6820*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r31));
/*801B9A24 001B6824*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B9A28 001B6828*/ PPC::Runtime::ASM::bne(.L_801B9A34);
/*801B9A2C 001B682C*/ PPC::Runtime::ASM::bl(fn_AS_DeadWait);
/*801B9A30 001B6830*/ PPC::Runtime::ASM::b(.L_801B9A40);
RUNTIME_PPC_JUMP_LABEL(.L_801B9A34, 0x801B9A34) //this is a jump label
/*801B9A34 001B6834*/ PPC::Runtime::ASM::bl(fn_80191170);
/*801B9A38 001B6838*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B9A3C 001B683C*/ PPC::Runtime::ASM::bl(fn_801A4850);
RUNTIME_PPC_JUMP_LABEL(.L_801B9A40, 0x801B9A40) //this is a jump label
/*801B9A40 001B6840*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B9A44 001B6844*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B9A48 001B6848*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B9A4C 001B684C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B9A50 001B6850*/ PPC::Runtime::ASM::blr();
}