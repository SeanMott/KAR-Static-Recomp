//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__begin_critical_region.hpp"
#include "fn_803B4068.hpp"
#include "__end_critical_region.hpp"



void fseek(PPC::Runtime::GCContext* context)
{
/*803B3FFC 003B0DFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803B4000 003B0E00*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B4004 003B0E04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B4008 003B0E08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B400C 003B0E0C*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*803B4010 003B0E10*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B4014 003B0E14*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*803B4018 003B0E18*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B401C 003B0E1C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803B4020 003B0E20*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803B4024 003B0E24*/ PPC::Runtime::ASM::bl(__begin_critical_region);
/*803B4028 003B0E28*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803B402C 003B0E2C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*803B4030 003B0E30*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*803B4034 003B0E34*/ PPC::Runtime::ASM::bl(fn_803B4068);
/*803B4038 003B0E38*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*803B403C 003B0E3C*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803B4040 003B0E40*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803B4044 003B0E44*/ PPC::Runtime::ASM::bl(__end_critical_region);
/*803B4048 003B0E48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B404C 003B0E4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803B4050 003B0E50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B4054 003B0E54*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B4058 003B0E58*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B405C 003B0E5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B4060 003B0E60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803B4064 003B0E64*/ PPC::Runtime::ASM::blr();
}