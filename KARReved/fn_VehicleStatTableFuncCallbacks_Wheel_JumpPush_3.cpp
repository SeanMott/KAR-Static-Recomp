//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D8B4C.hpp"
#include "fn_801F62D4.hpp"
#include "fn_801F6F18.hpp"
#include "fn_801F6F4C.hpp"
#include "fn_801D8FDC.hpp"
#include "fn_801DA6A8.hpp"
#include "fn_801F7A48.hpp"
#include "fn_801F77E0.hpp"
#include "fn_accelerateWheelie.hpp"



void fn_VehicleStatTableFuncCallbacks_Wheel_JumpPush_3(PPC::Runtime::GCContext* context)
{
/*801FACE0 001F7AE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FACE4 001F7AE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FACE8 001F7AE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FACEC 001F7AEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FACF0 001F7AF0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FACF4 001F7AF4*/ PPC::Runtime::ASM::bl(fn_801D8B4C);
/*801FACF8 001F7AF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FACFC 001F7AFC*/ PPC::Runtime::ASM::bl(fn_801F62D4);
/*801FAD00 001F7B00*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD04 001F7B04*/ PPC::Runtime::ASM::bl(fn_801F6F18);
/*801FAD08 001F7B08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD0C 001F7B0C*/ PPC::Runtime::ASM::bl(fn_801F6F4C);
/*801FAD10 001F7B10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD14 001F7B14*/ PPC::Runtime::ASM::bl(fn_801D8FDC);
/*801FAD18 001F7B18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD1C 001F7B1C*/ PPC::Runtime::ASM::bl(fn_801DA6A8);
/*801FAD20 001F7B20*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801FAD24 001F7B24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD28 001F7B28*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x768, context->r31));
/*801FAD2C 001F7B2C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r4));
/*801FAD30 001F7B30*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801FAD34 001F7B34*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x330, context->r31));
/*801FAD38 001F7B38*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x76c, context->r31));
/*801FAD3C 001F7B3C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801FAD40 001F7B40*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x334, context->r31));
/*801FAD44 001F7B44*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x770, context->r31));
/*801FAD48 001F7B48*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801FAD4C 001F7B4C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x338, context->r31));
/*801FAD50 001F7B50*/ PPC::Runtime::ASM::bl(fn_801F7A48);
/*801FAD54 001F7B54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD58 001F7B58*/ PPC::Runtime::ASM::bl(fn_801F77E0);
/*801FAD5C 001F7B5C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FAD60 001F7B60*/ PPC::Runtime::ASM::bl(fn_accelerateWheelie);
/*801FAD64 001F7B64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FAD68 001F7B68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FAD6C 001F7B6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FAD70 001F7B70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FAD74 001F7B74*/ PPC::Runtime::ASM::blr();
}