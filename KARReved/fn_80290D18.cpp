//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80290D18(PPC::Runtime::GCContext* context)
{
/*80290D18 0028DB18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80290D1C 0028DB1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80290D20 0028DB20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80290D24 0028DB24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80290D28 0028DB28  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80290D2C 0028DB2C*/ PPC::Runtime::ASM::beq(.L_80290D50);
/*80290D30 0028DB30*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BE454 @ Get_MemoryOffset_HighBit);
/*80290D34 0028DB34*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*80290D38 0028DB38*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BE454 @ Get_MemoryOffset_LowBit);
/*80290D3C 0028DB3C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80290D40 0028DB40*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80290D44 0028DB44*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBEC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80290D48 0028DB48*/ PPC::Runtime::ASM::ble(.L_80290D50);
/*80290D4C 0028DB4C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80290D50, 0x80290D50) //this is a jump label
/*80290D50 0028DB50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80290D54 0028DB54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80290D58 0028DB58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80290D5C 0028DB5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80290D60 0028DB60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80290D64 0028DB64*/ PPC::Runtime::ASM::blr();
}