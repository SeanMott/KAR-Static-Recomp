//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D78B4.hpp"
#include "fn_80062CA4.hpp"



void fn_800F9F78(PPC::Runtime::GCContext* context)
{
/*800F9F78 000F6D78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F9F7C 000F6D7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9F80 000F6D80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9F84 000F6D84*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800F9F88 000F6D88*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800F9F8C 000F6D8C*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F9F90 000F6D90*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800F9F94 000F6D94*/ PPC::Runtime::ASM::mulli(context->r0, context->r27, 0x140);
/*800F9F98 000F6D98*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800F9F9C 000F6D9C*/ PPC::Runtime::ASM::addi(context->r31, context->r6, 0x54);
/*800F9FA0 000F6DA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r6));
/*800F9FA4 000F6DA4*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800F9FA8 000F6DA8*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800F9FAC 000F6DAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800F9FB0 000F6DB0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F9FB4 000F6DB4*/ PPC::Runtime::ASM::beq(.L_800FA014);
/*800F9FB8 000F6DB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9FBC 000F6DBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800F9FC0 000F6DC0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x10);
/*800F9FC4 000F6DC4*/ PPC::Runtime::ASM::beq(.L_800F9FE0);
/*800F9FC8 000F6DC8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_997 @ Get_MemoryOffset_HighBit);
/*800F9FCC 000F6DCC*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_998 @ Get_MemoryOffset_HighBit);
/*800F9FD0 000F6DD0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_997 @ Get_MemoryOffset_LowBit);
/*800F9FD4 000F6DD4*/ PPC::Runtime::ASM::li(context->r4, 0xab);
/*800F9FD8 000F6DD8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_998 @ Get_MemoryOffset_LowBit);
/*800F9FDC 000F6DDC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F9FE0, 0x800F9FE0) //this is a jump label
/*800F9FE0 000F6DE0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800F9FE4 000F6DE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9FE8 000F6DE8*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800F9FEC 000F6DEC*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800F9FF0 000F6DF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800F9FF4 000F6DF4*/ PPC::Runtime::ASM::bl(fn_800D78B4);
/*800F9FF8 000F6DF8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800F9FFC 000F6DFC*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800FA000 000F6E00*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*800FA004 000F6E04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800FA008 000F6E08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800FA00C 000F6E0C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FA010 000F6E10*/ PPC::Runtime::ASM::b(.L_800FA02C);
RUNTIME_PPC_JUMP_LABEL(.L_800FA014, 0x800FA014) //this is a jump label
/*800FA014 000F6E14*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FA018 000F6E18*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800FA01C 000F6E1C*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800FA020 000F6E20*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800FA024 000F6E24*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800FA028 000F6E28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800FA02C, 0x800FA02C) //this is a jump label
/*800FA02C 000F6E2C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FA030 000F6E30*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800FA034 000F6E34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FA038 000F6E38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FA03C 000F6E3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FA040 000F6E40*/ PPC::Runtime::ASM::blr();
}