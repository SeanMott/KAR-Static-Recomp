//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801F07D4(PPC::Runtime::GCContext* context)
{
/*801F07D4 001ED5D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F07D8 001ED5D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F07DC 001ED5DC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F88 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F07E0 001ED5E0*/ PPC::Runtime::ASM::li(context->r4, 0x17);
/*801F07E4 001ED5E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F07E8 001ED5E8*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801F07EC 001ED5EC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1F8C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F07F0 001ED5F0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801F07F4 001ED5F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F07F8 001ED5F8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F07FC 001ED5FC*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801F0800 001ED600*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F0804 001ED604*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F0808 001ED608*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*801F080C 001ED60C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F0810 001ED610*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F0814 001ED614*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801F0818 001ED618*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F081C 001ED61C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801F0820 001ED620*/ PPC::Runtime::ASM::extrwi(context->r0, context->r3, 2, 26);
/*801F0824 001ED624*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801F0828 001ED628*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 4, 26, 27);
/*801F082C 001ED62C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801F0830 001ED630*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0834 001ED634*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F0838 001ED638*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F083C 001ED63C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F0840 001ED640*/ PPC::Runtime::ASM::blr();
}