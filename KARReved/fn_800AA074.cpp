//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007A4C8.hpp"
#include "fn_8007A38C.hpp"
#include "fn_8007A420.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"



void fn_800AA074(PPC::Runtime::GCContext* context)
{
/*800AA074 000A6E74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800AA078 000A6E78*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AA07C 000A6E7C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AA080 000A6E80*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_657 @ Get_MemoryOffset_HighBit);
/*800AA084 000A6E84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800AA088 000A6E88*/ PPC::Runtime::ASM::addi(context->r9, context->r4, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AA08C 000A6E8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800AA090 000A6E90*/ PPC::Runtime::ASM::addi(context->r31, context->r5, MemoryOffset_657 @ Get_MemoryOffset_LowBit);
/*800AA094 000A6E94*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*800AA098 000A6E98*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800AA09C 000A6E9C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800AA0A0 000A6EA0*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800AA0A4 000A6EA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f54, context->r9));
/*800AA0A8 000A6EA8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*800AA0AC 000A6EAC*/ PPC::Runtime::ASM::beq(.L_800AA1E8);
/*800AA0B0 000A6EB0*/ PPC::Runtime::ASM::bge(.L_800AA0CC);
/*800AA0B4 000A6EB4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800AA0B8 000A6EB8*/ PPC::Runtime::ASM::beq(.L_800AA1A4);
/*800AA0BC 000A6EBC*/ PPC::Runtime::ASM::bge(.L_800AA1C0);
/*800AA0C0 000A6EC0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800AA0C4 000A6EC4*/ PPC::Runtime::ASM::bge(.L_800AA0DC);
/*800AA0C8 000A6EC8*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA0CC, 0x800AA0CC) //this is a jump label
/*800AA0CC 000A6ECC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*800AA0D0 000A6ED0*/ PPC::Runtime::ASM::beq(.L_800AA25C);
/*800AA0D4 000A6ED4*/ PPC::Runtime::ASM::bge(.L_800AA284);
/*800AA0D8 000A6ED8*/ PPC::Runtime::ASM::b(.L_800AA230);
RUNTIME_PPC_JUMP_LABEL(.L_800AA0DC, 0x800AA0DC) //this is a jump label
/*800AA0DC 000A6EDC*/ PPC::Runtime::ASM::bl(fn_8007A4C8);
/*800AA0E0 000A6EE0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x10);
/*800AA0E4 000A6EE4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x14);
/*800AA0E8 000A6EE8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800AA0EC 000A6EEC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800AA0F0 000A6EF0*/ PPC::Runtime::ASM::bl(fn_8007A38C);
/*800AA0F4 000A6EF4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*800AA0F8 000A6EF8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x24);
/*800AA0FC 000A6EFC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800AA100 000A6F00*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800AA104 000A6F04*/ PPC::Runtime::ASM::bl(fn_8007A420);
/*800AA108 000A6F08*/ PPC::Runtime::ASM::lbz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800AA10C 000A6F0C*/ PPC::Runtime::ASM::clrlwi(context->r29, context->r3, 24);
/*800AA110 000A6F10*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AA114 000A6F14*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800AA118 000A6F18*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r1));
/*800AA11C 000A6F1C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*800AA120 000A6F20*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r1));
/*800AA124 000A6F24*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA128 000A6F28*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA12C 000A6F2C*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800AA130 000A6F30*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800AA134 000A6F34*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11, context->r1));
/*800AA138 000A6F38*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x14);
/*800AA13C 000A6F3C*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r1));
/*800AA140 000A6F40*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AA144 000A6F44*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AA148 000A6F48*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/* 800AA14C 000A6F4C  4C C6 32 42 */ crset context->cr1eq
/*800AA150 000A6F50*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA154 000A6F54*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800AA158 000A6F58*/ PPC::Runtime::ASM::beq(.L_800AA190);
/*800AA15C 000A6F5C*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800AA160 000A6F60*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800AA164 000A6F64*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x21, context->r1));
/*800AA168 000A6F68*/ PPC::Runtime::ASM::mr(context->r9, context->r30);
/*800AA16C 000A6F6C*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r1));
/*800AA170 000A6F70*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x3c);
/*800AA174 000A6F74*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23, context->r1));
/*800AA178 000A6F78*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800AA17C 000A6F7C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800AA180 000A6F80*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/* 800AA184 000A6F84  4C C6 32 42 */ crset context->cr1eq
/*800AA188 000A6F88*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA18C 000A6F8C*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA190, 0x800AA190) //this is a jump label
/*800AA190 000A6F90*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800AA194 000A6F94*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x70);
/*800AA198 000A6F98*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA19C 000A6F9C*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA1A0 000A6FA0*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA1A4, 0x800AA1A4) //this is a jump label
/*800AA1A4 000A6FA4*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f5c, context->r9));
/*800AA1A8 000A6FA8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x88);
/*800AA1AC 000A6FAC*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f5d, context->r9));
/*800AA1B0 000A6FB0*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f5e, context->r9));
/*800AA1B4 000A6FB4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA1B8 000A6FB8*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA1BC 000A6FBC*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA1C0, 0x800AA1C0) //this is a jump label
/*800AA1C0 000A6FC0*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f60, context->r9));
/*800AA1C4 000A6FC4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x9c);
/*800AA1C8 000A6FC8*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f61, context->r9));
/*800AA1CC 000A6FCC*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f62, context->r9));
/*800AA1D0 000A6FD0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f64, context->r9));
/*800AA1D4 000A6FD4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f68, context->r9));
/*800AA1D8 000A6FD8*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f6c, context->r9));
/* 800AA1DC 000A6FDC  4C C6 32 42 */ crset context->cr1eq
/*800AA1E0 000A6FE0*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA1E4 000A6FE4*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA1E8, 0x800AA1E8) //this is a jump label
/*800AA1E8 000A6FE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8d, context->r9));
/* 800AA1EC 000A6FEC  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*800AA1F0 000A6FF0*/ PPC::Runtime::ASM::beq(.L_800AA220);
/*800AA1F4 000A6FF4*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f70, context->r9));
/*800AA1F8 000A6FF8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xc4);
/*800AA1FC 000A6FFC*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f71, context->r9));
/*800AA200 000A7000*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f72, context->r9));
/*800AA204 000A7004*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f73, context->r9));
/*800AA208 000A7008*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f74, context->r9));
/*800AA20C 000A700C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f78, context->r9));
/*800AA210 000A7010*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f7c, context->r9));
/* 800AA214 000A7014  4C C6 32 42 */ crset context->cr1eq
/*800AA218 000A7018*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA21C 000A701C*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA220, 0x800AA220) //this is a jump label
/*800AA220 000A7020*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x70);
/*800AA224 000A7024*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA228 000A7028*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA22C 000A702C*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA230, 0x800AA230) //this is a jump label
/*800AA230 000A7030*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f58, context->r9));
/*800AA234 000A7034*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800AA238 000A7038*/ PPC::Runtime::ASM::bne(.L_800AA24C);
/*800AA23C 000A703C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xf4);
/*800AA240 000A7040*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA244 000A7044*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA248 000A7048*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA24C, 0x800AA24C) //this is a jump label
/*800AA24C 000A704C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x100);
/*800AA250 000A7050*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA254 000A7054*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA258 000A7058*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA25C, 0x800AA25C) //this is a jump label
/*800AA25C 000A705C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8d, context->r9));
/* 800AA260 000A7060  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*800AA264 000A7064*/ PPC::Runtime::ASM::beq(.L_800AA278);
/*800AA268 000A7068*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x10c);
/*800AA26C 000A706C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA270 000A7070*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA274 000A7074*/ PPC::Runtime::ASM::b(.L_800AA284);
RUNTIME_PPC_JUMP_LABEL(.L_800AA278, 0x800AA278) //this is a jump label
/*800AA278 000A7078*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x11c);
/*800AA27C 000A707C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA280 000A7080*/ PPC::Runtime::ASM::bl(fn_dbPutString);
RUNTIME_PPC_JUMP_LABEL(.L_800AA284, 0x800AA284) //this is a jump label
/*800AA284 000A7084*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800AA288 000A7088*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800AA28C 000A708C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*800AA290 000A7090*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800AA294 000A7094*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800AA298 000A7098*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AA29C 000A709C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800AA2A0 000A70A0*/ PPC::Runtime::ASM::blr();
}