//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DC118.hpp"
#include "fn_800DC118.hpp"
#include "fn_800DBF84.hpp"
#include "fn_800DBF84.hpp"
#include "fn_grGetStageScale.hpp"
#include "fn_800DC17C.hpp"



void fn_800DBFA8(PPC::Runtime::GCContext* context)
{
/*800DBFA8 000D8DA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800DBFAC 000D8DAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DBFB0 000D8DB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800DBFB4 000D8DB4*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800DBFB8 000D8DB8*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800DBFBC 000D8DBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DBFC0 000D8DC0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DBFC4 000D8DC4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800DBFC8 000D8DC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800DBFCC 000D8DCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
/*800DBFD0 000D8DD0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800DBFD4 000D8DD4*/ PPC::Runtime::ASM::bne(.L_800DBFE4);
/*800DBFD8 000D8DD8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800DBFDC 000D8DDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r31));
/*800DBFE0 000D8DE0*/ PPC::Runtime::ASM::b(.L_800DC0F8);
RUNTIME_PPC_JUMP_LABEL(.L_800DBFE4, 0x800DBFE4) //this is a jump label
/*800DBFE4 000D8DE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800DBFE8 000D8DE8*/ PPC::Runtime::ASM::li(context->r3, 0x1e);
/*800DBFEC 000D8DEC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800DBFF0 000D8DF0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800DBFF4 000D8DF4*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/*800DBFF8 000D8DF8*/ PPC::Runtime::ASM::lis(context->r4, lbl_805575B0 @ Get_MemoryOffset_HighBit);
/*800DBFFC 000D8DFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r31));
/*800DC000 000D8E00*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_805575B0 @ Get_MemoryOffset_LowBit);
/*800DC004 000D8E04*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*800DC008 000D8E08*/ PPC::Runtime::ASM::lis(context->r4, fn_800DC118 @ Get_MemoryOffset_HighBit);
/*800DC00C 000D8E0C*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*800DC010 000D8E10*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_800DC118 @ Get_MemoryOffset_LowBit);
/*800DC014 000D8E14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r31));
/*800DC018 000D8E18*/ PPC::Runtime::ASM::li(context->r4, 0x1e);
/*800DC01C 000D8E1C*/ PPC::Runtime::ASM::bl(fn_GObj_AddUserData);
/*800DC020 000D8E20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800DC024 000D8E24*/ PPC::Runtime::ASM::bl(fn_HSD_FogLoadDesc);
/*800DC028 000D8E28*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800DC02C 000D8E2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r31));
/*800DC030 000D8E30*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*800DC034 000D8E34*/ PPC::Runtime::ASM::lbz(context->r4, SkipAddress_31 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800DC038 000D8E38*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800DC03C 000D8E3C*/ PPC::Runtime::ASM::bl(fn_GObj_AddObject);
/*800DC040 000D8E40*/ PPC::Runtime::ASM::lis(context->r4, fn_800DBF84 @ Get_MemoryOffset_HighBit);
/*800DC044 000D8E44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x168, context->r31));
/*800DC048 000D8E48*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800DBF84 @ Get_MemoryOffset_LowBit);
/*800DC04C 000D8E4C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800DC050 000D8E50*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*800DC054 000D8E54*/ PPC::Runtime::ASM::bl(fn_GObj_AddGXLink);
/*800DC058 000D8E58*/ PPC::Runtime::ASM::bl(fn_grGetStageScale);
/*800DC05C 000D8E5C*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800DC060 000D8E60*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800DC064 000D8E64*/ PPC::Runtime::ASM::beq(.L_800DC070);
/*800DC068 000D8E68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800DC06C 000D8E6C*/ PPC::Runtime::ASM::b(.L_800DC074);
RUNTIME_PPC_JUMP_LABEL(.L_800DC070, 0x800DC070) //this is a jump label
/*800DC070 000D8E70*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800DC074, 0x800DC074) //this is a jump label
/*800DC074 000D8E74*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800DC078 000D8E78*/ PPC::Runtime::ASM::beq(.L_800DC090);
/*800DC07C 000D8E7C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_934 @ Get_MemoryOffset_HighBit);
/*800DC080 000D8E80*/ PPC::Runtime::ASM::li(context->r3, String_ "grfog." Get_MemoryOffset_SDA21);
/*800DC084 000D8E84*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_934 @ Get_MemoryOffset_LowBit);
/*800DC088 000D8E88*/ PPC::Runtime::ASM::li(context->r4, 0x1b);
/*800DC08C 000D8E8C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DC090, 0x800DC090) //this is a jump label
/*800DC090 000D8E90*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800DC094 000D8E94*/ PPC::Runtime::ASM::beq(.L_800DC0A0);
/*800DC098 000D8E98*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800DC09C 000D8E9C*/ PPC::Runtime::ASM::b(.L_800DC0A4);
RUNTIME_PPC_JUMP_LABEL(.L_800DC0A0, 0x800DC0A0) //this is a jump label
/*800DC0A0 000D8EA0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF690 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800DC0A4, 0x800DC0A4) //this is a jump label
/*800DC0A4 000D8EA4*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800DC0A8 000D8EA8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f31, context->f0);
/*800DC0AC 000D8EAC*/ PPC::Runtime::ASM::beq(.L_800DC0B4);
/*800DC0B0 000D8EB0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800DC0B4, 0x800DC0B4) //this is a jump label
/*800DC0B4 000D8EB4*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800DC0B8 000D8EB8*/ PPC::Runtime::ASM::beq(.L_800DC0C4);
/*800DC0BC 000D8EBC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800DC0C0 000D8EC0*/ PPC::Runtime::ASM::b(.L_800DC0C8);
RUNTIME_PPC_JUMP_LABEL(.L_800DC0C4, 0x800DC0C4) //this is a jump label
/*800DC0C4 000D8EC4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF690 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800DC0C8, 0x800DC0C8) //this is a jump label
/*800DC0C8 000D8EC8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800DC0CC 000D8ECC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f31, context->f0);
/*800DC0D0 000D8ED0*/ PPC::Runtime::ASM::beq(.L_800DC0D8);
/*800DC0D4 000D8ED4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800DC0D8, 0x800DC0D8) //this is a jump label
/*800DC0D8 000D8ED8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800DC0DC 000D8EDC*/ PPC::Runtime::ASM::bl(fn_8041B4E4);
/*800DC0E0 000D8EE0*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800DC0E4 000D8EE4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DC0E8 000D8EE8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800DC0EC 000D8EEC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23c, context->r4));
/*800DC0F0 000D8EF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800DC0F4 000D8EF4*/ PPC::Runtime::ASM::bl(fn_800DC17C);
RUNTIME_PPC_JUMP_LABEL(.L_800DC0F8, 0x800DC0F8) //this is a jump label
/*800DC0F8 000D8EF8*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800DC0FC 000D8EFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800DC100 000D8F00*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800DC104 000D8F04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DC108 000D8F08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DC10C 000D8F0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DC110 000D8F10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800DC114 000D8F14*/ PPC::Runtime::ASM::blr();
}