//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800EEA5C(PPC::Runtime::GCContext* context)
{
/*800EEA5C 000EB85C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EEA60 000EB860*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EEA64 000EB864*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EEA68 000EB868*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800EEA6C 000EB86C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r4));
/*800EEA70 000EB870*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800EEA74 000EB874*/ PPC::Runtime::ASM::beq(.L_800EEA80);
/*800EEA78 000EB878*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800EEA7C 000EB87C*/ PPC::Runtime::ASM::b(.L_800EEA84);
RUNTIME_PPC_JUMP_LABEL(.L_800EEA80, 0x800EEA80) //this is a jump label
/*800EEA80 000EB880*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800EEA84, 0x800EEA84) //this is a jump label
/*800EEA84 000EB884*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EEA88 000EB888*/ PPC::Runtime::ASM::beq(.L_800EEA94);
/*800EEA8C 000EB88C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70c, context->r3));
/*800EEA90 000EB890*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800EEA94, 0x800EEA94) //this is a jump label
/*800EEA94 000EB894*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EEA98 000EB898*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EEA9C 000EB89C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EEAA0 000EB8A0*/ PPC::Runtime::ASM::blr();
}