//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114EEC.hpp"



void fn_801265B8(PPC::Runtime::GCContext* context)
{
/*801265B8 001233B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801265BC 001233BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801265C0 001233C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801265C4 001233C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801265C8 001233C8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801265CC 001233CC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801265D0 001233D0*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*801265D4 001233D4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801265D8 001233D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb60, context->r3));
/*801265DC 001233DC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801265E0 001233E0*/ PPC::Runtime::ASM::beq(.L_801265E8);
/*801265E4 001233E4*/ PPC::Runtime::ASM::bl(fn_80114EEC);
RUNTIME_PPC_JUMP_LABEL(.L_801265E8, 0x801265E8) //this is a jump label
/*801265E8 001233E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801265EC 001233EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801265F0 001233F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801265F4 001233F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801265F8 001233F8*/ PPC::Runtime::ASM::blr();
}