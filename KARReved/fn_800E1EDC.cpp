//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800E1EDC(PPC::Runtime::GCContext* context)
{
/*800E1EDC 000DECDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800E1EE0 000DECE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E1EE4 000DECE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E1EE8 000DECE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E1EEC 000DECEC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800E1EF0 000DECF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*800E1EF4 000DECF4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E1EF8 000DECF8*/ PPC::Runtime::ASM::bgt(.L_800E1F14);
/*800E1EFC 000DECFC*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "grrangespline." Get_MemoryOffset_HighBit);
/*800E1F00 000DED00*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_947 @ Get_MemoryOffset_HighBit);
/*800E1F04 000DED04*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "grrangespline." Get_MemoryOffset_LowBit);
/*800E1F08 000DED08*/ PPC::Runtime::ASM::li(context->r4, 0xc1);
/*800E1F0C 000DED0C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_947 @ Get_MemoryOffset_LowBit);
/*800E1F10 000DED10*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E1F14, 0x800E1F14) //this is a jump label
/*800E1F14 000DED14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*800E1F18 000DED18*/ PPC::Runtime::ASM::lis(context->r3, lbl_805575DC @ Get_MemoryOffset_HighBit);
/*800E1F1C 000DED1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805575DC @ Get_MemoryOffset_LowBit);
/*800E1F20 000DED20*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*800E1F24 000DED24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*800E1F28 000DED28*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800E1F2C 000DED2C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r31, context->r0);
/*800E1F30 000DED30*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*800E1F34 000DED34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E1F38 000DED38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E1F3C 000DED3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E1F40 000DED40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800E1F44 000DED44*/ PPC::Runtime::ASM::blr();
}