//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80328CC0.hpp"
#include "fn_80328D2C.hpp"



void fn_802AFC9C(PPC::Runtime::GCContext* context)
{
/*802AFC9C 002ACA9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AFCA0 002ACAA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AFCA4 002ACAA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AFCA8 002ACAA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*802AFCAC 002ACAAC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802AFCB0 002ACAB0*/ PPC::Runtime::ASM::beq(.L_802AFCE4);
/*802AFCB4 002ACAB4*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*802AFCB8 002ACAB8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AFCBC 002ACABC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D800C @ Get_MemoryOffset_SDA21);
/*802AFCC0 002ACAC0*/ PPC::Runtime::ASM::li(context->r6, lbl_805D7F20 @ Get_MemoryOffset_SDA21);
/*802AFCC4 002ACAC4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*802AFCC8 002ACAC8*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*802AFCCC 002ACACC*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802AFCD0 002ACAD0*/ PPC::Runtime::ASM::bl(fn_8039A7BC);
/* 802AFCD4 002ACAD4  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*802AFCD8 002ACAD8*/ PPC::Runtime::ASM::beq(.L_802AFCE4);
/*802AFCDC 002ACADC*/ PPC::Runtime::ASM::bl(fn_80328CC0);
/*802AFCE0 002ACAE0*/ PPC::Runtime::ASM::bl(fn_80328D2C);
RUNTIME_PPC_JUMP_LABEL(.L_802AFCE4, 0x802AFCE4) //this is a jump label
/*802AFCE4 002ACAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AFCE8 002ACAE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AFCEC 002ACAEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AFCF0 002ACAF0*/ PPC::Runtime::ASM::blr();
}