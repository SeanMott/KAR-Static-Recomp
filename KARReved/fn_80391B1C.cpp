//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80391B1C(PPC::Runtime::GCContext* context)
{
/*80391B1C 0038E91C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80391B20 0038E920*/ PPC::Runtime::ASM::mflr(context->r0);
/*80391B24 0038E924*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80391B28 0038E928*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*80391B2C 0038E92C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80391B30 0038E930*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*80391B34 0038E934*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80391B38 0038E938*/ PPC::Runtime::ASM::bl(fn_GXSetBlendMode);
/*80391B3C 0038E93C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80391B40 0038E940*/ PPC::Runtime::ASM::bl(fn_GXSetNumTexGens);
/*80391B44 0038E944*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*80391B48 0038E948*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80391B4C 0038E94C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80391B50 0038E950*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80391B54 0038E954*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80391B58 0038E958*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*80391B5C 0038E95C*/ PPC::Runtime::ASM::li(context->r9, 0x2);
/*80391B60 0038E960*/ PPC::Runtime::ASM::bl(fn_GXSetChanCtrl);
/*80391B64 0038E964*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80391B68 0038E968*/ PPC::Runtime::ASM::bl(fn_GXSetNumChans);
/*80391B6C 0038E96C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80391B70 0038E970*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80391B74 0038E974*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80391B78 0038E978*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*80391B7C 0038E97C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80391B80 0038E980*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*80391B84 0038E984*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*80391B88 0038E988*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80391B8C 0038E98C*/ PPC::Runtime::ASM::bl(fn_GXSetNumTevStages);
/*80391B90 0038E990*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80391B94 0038E994*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80391B98 0038E998*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80391B9C 0038E99C*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*80391BA0 0038E9A0*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*80391BA4 0038E9A4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80391BA8 0038E9A8*/ PPC::Runtime::ASM::li(context->r4, 0xf);
/*80391BAC 0038E9AC*/ PPC::Runtime::ASM::li(context->r5, 0xf);
/*80391BB0 0038E9B0*/ PPC::Runtime::ASM::li(context->r6, 0xc);
/*80391BB4 0038E9B4*/ PPC::Runtime::ASM::li(context->r7, 0x8);
/*80391BB8 0038E9B8*/ PPC::Runtime::ASM::bl(fn_GXSetTevColorIn);
/*80391BBC 0038E9BC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80391BC0 0038E9C0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80391BC4 0038E9C4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80391BC8 0038E9C8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80391BCC 0038E9CC*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*80391BD0 0038E9D0*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*80391BD4 0038E9D4*/ PPC::Runtime::ASM::bl(fn_GXSetTevColorOp);
/*80391BD8 0038E9D8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80391BDC 0038E9DC*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*80391BE0 0038E9E0*/ PPC::Runtime::ASM::li(context->r5, 0x7);
/*80391BE4 0038E9E4*/ PPC::Runtime::ASM::li(context->r6, 0x6);
/*80391BE8 0038E9E8*/ PPC::Runtime::ASM::li(context->r7, 0x4);
/*80391BEC 0038E9EC*/ PPC::Runtime::ASM::bl(fn_GXSetTevAlphaIn);
/*80391BF0 0038E9F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80391BF4 0038E9F4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80391BF8 0038E9F8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80391BFC 0038E9FC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80391C00 0038EA00*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*80391C04 0038EA04*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*80391C08 0038EA08*/ PPC::Runtime::ASM::bl(fn_GXSetTevAlphaOp);
/*80391C0C 0038EA0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80391C10 0038EA10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80391C14 0038EA14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80391C18 0038EA18*/ PPC::Runtime::ASM::blr();
}