//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025E118(PPC::Runtime::GCContext* context)
{
/*8025E118 0025AF18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E11C 0025AF1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E120 0025AF20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E124 0025AF24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E128 0025AF28*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025E12C 0025AF2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E130 0025AF30*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025E134 0025AF34*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E138 0025AF38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E13C 0025AF3C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F0C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E140 0025AF40*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025E144 0025AF44*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E148 0025AF48*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E14C 0025AF4C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E150 0025AF50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E154 0025AF54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E158 0025AF58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E15C 0025AF5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E160 0025AF60*/ PPC::Runtime::ASM::blr();
}