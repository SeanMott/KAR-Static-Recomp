//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802889EC.hpp"



void fn_8028744C(PPC::Runtime::GCContext* context)
{
/*8028744C 0028424C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80287450 00284250*/ PPC::Runtime::ASM::mflr(context->r0);
/*80287454 00284254*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80287458 00284258*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028745C 0028425C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80287460 00284260*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BBE90 @ Get_MemoryOffset_HighBit);
/*80287464 00284264*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80287468 00284268*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BBE90 @ Get_MemoryOffset_LowBit);
/*8028746C 0028426C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*80287470 00284270*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*80287474 00284274*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80287478 00284278*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8028747C 0028427C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80287480 00284280*/ PPC::Runtime::ASM::beq(.L_8028748C);
/*80287484 00284284*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BBE84 @ Get_MemoryOffset_HighBit);
/*80287488 00284288*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BBE84 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_8028748C, 0x8028748C) //this is a jump label
/*8028748C 0028428C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80287490 00284290*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80287494 00284294*/ PPC::Runtime::ASM::beq(.L_802874C4);
/*80287498 00284298*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028749C 0028429C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802874A0 002842A0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D74B0 @ Get_MemoryOffset_SDA21);
/*802874A4 002842A4*/ PPC::Runtime::ASM::li(context->r6, lbl_805D74A8 @ Get_MemoryOffset_SDA21);
/*802874A8 002842A8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*802874AC 002842AC*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*802874B0 002842B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*802874B4 002842B4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*802874B8 002842B8*/ PPC::Runtime::ASM::bl(fn_802889EC);
/*802874BC 002842BC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*802874C0 002842C0*/ PPC::Runtime::ASM::b(.L_802874C8);
RUNTIME_PPC_JUMP_LABEL(.L_802874C4, 0x802874C4) //this is a jump label
/*802874C4 002842C4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_802874C8, 0x802874C8) //this is a jump label
/*802874C8 002842C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*802874CC 002842CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802874D0 002842D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802874D4 002842D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802874D8 002842D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802874DC 002842DC*/ PPC::Runtime::ASM::blr();
}