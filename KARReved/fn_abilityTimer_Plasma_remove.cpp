//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005EA20.hpp"
#include "fn_8005D64C.hpp"
#include "fn_abilityTimer_Plasma_removeEffect.hpp"
#include "fn_randomAbility_removeGlow.hpp"
#include "fn_ability_Plasma_end.hpp"
#include "fn_revertKirbyModel?.hpp"



void fn_abilityTimer_Plasma_remove(PPC::Runtime::GCContext* context)
{
/*801B2868 001AF668*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B286C 001AF66C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B2870 001AF670*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B2874 001AF674*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B2878 001AF678*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B287C 001AF67C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B2880 001AF680*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c8, context->r3));
/*801B2884 001AF684*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0c, context->r3));
/*801B2888 001AF688*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B288C 001AF68C*/ PPC::Runtime::ASM::beq(.L_801B28A8);
/*801B2890 001AF690*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801B2894 001AF694*/ PPC::Runtime::ASM::bl(fn_8005EA20);
/*801B2898 001AF698*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0c, context->r31));
/*801B289C 001AF69C*/ PPC::Runtime::ASM::bl(fn_8005D64C);
/*801B28A0 001AF6A0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B28A4 001AF6A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B28A8, 0x801B28A8) //this is a jump label
/*801B28A8 001AF6A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B28AC 001AF6AC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B28B0 001AF6B0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B28B4 001AF6B4*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r5);
/*801B28B8 001AF6B8*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r5);
/*801B28BC 001AF6BC*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*801B28C0 001AF6C0*/ PPC::Runtime::ASM::beq(.L_801B28C8);
/*801B28C4 001AF6C4*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Plasma_removeEffect);
RUNTIME_PPC_JUMP_LABEL(.L_801B28C8, 0x801B28C8) //this is a jump label
/*801B28C8 001AF6C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B28CC 001AF6CC*/ PPC::Runtime::ASM::li(context->r4, 0x25);
/*801B28D0 001AF6D0*/ PPC::Runtime::ASM::bl(fn_randomAbility_removeGlow);
/*801B28D4 001AF6D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B28D8 001AF6D8*/ PPC::Runtime::ASM::bl(fn_ability_Plasma_end);
/*801B28DC 001AF6DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B28E0 001AF6E0*/ PPC::Runtime::ASM::bl(fn_revertKirbyModel?);
/*801B28E4 001AF6E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B28E8 001AF6E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B28EC 001AF6EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B28F0 001AF6F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B28F4 001AF6F4*/ PPC::Runtime::ASM::blr();
}