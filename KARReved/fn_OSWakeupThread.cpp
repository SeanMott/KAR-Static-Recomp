//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "SelectThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_OSWakeupThread(PPC::Runtime::GCContext* context)
{
/*803DAB7C 003D797C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DAB80 003D7980*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DAB84 003D7984*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803DAB88 003D7988*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DAB8C 003D798C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803DAB90 003D7990*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803DAB94 003D7994*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803DAB98 003D7998*/ PPC::Runtime::ASM::lis(context->r4, RunQueue_8056D958 @ Get_MemoryOffset_HighBit);
/*803DAB9C 003D799C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803DABA0 003D79A0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, RunQueue_8056D958 @ Get_MemoryOffset_LowBit);
/*803DABA4 003D79A4*/ PPC::Runtime::ASM::b(.L_803DAC40);
RUNTIME_PPC_JUMP_LABEL(.L_803DABA8, 0x803DABA8) //this is a jump label
/*803DABA8 003D79A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r6));
/*803DABAC 003D79AC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803DABB0 003D79B0*/ PPC::Runtime::ASM::bne(.L_803DABC0);
/*803DABB4 003D79B4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803DABB8 003D79B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803DABBC 003D79BC*/ PPC::Runtime::ASM::b(.L_803DABC8);
RUNTIME_PPC_JUMP_LABEL(.L_803DABC0, 0x803DABC0) //this is a jump label
/*803DABC0 003D79C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803DABC4 003D79C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803DABC8, 0x803DABC8) //this is a jump label
/*803DABC8 003D79C8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803DABCC 003D79CC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803DABD0 003D79D0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c8, context->r6));
/*803DABD4 003D79D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r6));
/*803DABD8 003D79D8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803DABDC 003D79DC*/ PPC::Runtime::ASM::bgt(.L_803DAC40);
/*803DABE0 003D79E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d0, context->r6));
/*803DABE4 003D79E4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*803DABE8 003D79E8*/ PPC::Runtime::ASM::add(context->r0, context->r5, context->r0);
/*803DABEC 003D79EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r6));
/*803DABF0 003D79F0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r6));
/*803DABF4 003D79F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803DABF8 003D79F8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803DABFC 003D79FC*/ PPC::Runtime::ASM::bne(.L_803DAC08);
/*803DAC00 003D7A00*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803DAC04 003D7A04*/ PPC::Runtime::ASM::b(.L_803DAC0C);
RUNTIME_PPC_JUMP_LABEL(.L_803DAC08, 0x803DAC08) //this is a jump label
/*803DAC08 003D7A08*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803DAC0C, 0x803DAC0C) //this is a jump label
/*803DAC0C 003D7A0C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r6));
/*803DAC10 003D7A10*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803DAC14 003D7A14*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803DAC18 003D7A18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r6));
/*803DAC1C 003D7A1C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r6));
/*803DAC20 003D7A20*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803DAC24 003D7A24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d0, context->r6));
/*803DAC28 003D7A28*/ PPC::Runtime::ASM::lwz(context->r4, RunQueueBits_805DDF28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DAC2C 003D7A2C*/ PPC::Runtime::ASM::subfic(context->r0, context->r0, 0x1f);
/*803DAC30 003D7A30*/ PPC::Runtime::ASM::slw(context->r0, context->r3, context->r0);
/*803DAC34 003D7A34*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*803DAC38 003D7A38*/ PPC::Runtime::ASM::stw(context->r0, RunQueueBits_805DDF28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DAC3C 003D7A3C*/ PPC::Runtime::ASM::stw(context->r3, RunQueueHint_805DDF2C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803DAC40, 0x803DAC40) //this is a jump label
/*803DAC40 003D7A40*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803DAC44 003D7A44*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*803DAC48 003D7A48*/ PPC::Runtime::ASM::bne(.L_803DABA8);
/*803DAC4C 003D7A4C*/ PPC::Runtime::ASM::lwz(context->r0, RunQueueHint_805DDF2C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DAC50 003D7A50*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803DAC54 003D7A54*/ PPC::Runtime::ASM::beq(.L_803DAC60);
/*803DAC58 003D7A58*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803DAC5C 003D7A5C*/ PPC::Runtime::ASM::bl(SelectThread);
RUNTIME_PPC_JUMP_LABEL(.L_803DAC60, 0x803DAC60) //this is a jump label
/*803DAC60 003D7A60*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803DAC64 003D7A64*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803DAC68 003D7A68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DAC6C 003D7A6C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DAC70 003D7A70*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803DAC74 003D7A74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803DAC78 003D7A78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DAC7C 003D7A7C*/ PPC::Runtime::ASM::blr();
}