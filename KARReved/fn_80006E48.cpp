//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"



void fn_80006E48(PPC::Runtime::GCContext* context)
{
/*80006E48 00003C48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80006E4C 00003C4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80006E50 00003C50*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80006E54 00003C54*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*80006E58 00003C58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80006E5C 00003C5C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80006E60 00003C60*/ PPC::Runtime::ASM::lis(context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_HighBit);
/*80006E64 00003C64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80006E68 00003C68*/ PPC::Runtime::ASM::addi(context->r3, context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_LowBit);
/*80006E6C 00003C6C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80006E70 00003C70*/ PPC::Runtime::ASM::mulli(context->r30, context->r0, 0x3);
/*80006E74 00003C74*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80006E78 00003C78*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0xbb8);
/*80006E7C 00003C7C*/ PPC::Runtime::ASM::add(context->r31, context->r29, context->r30);
/*80006E80 00003C80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80006E84 00003C84*/ PPC::Runtime::ASM::bl(memset);
/*80006E88 00003C88*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80006E8C 00003C8C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80006E90 00003C90*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80006E94 00003C94*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/*80006E98 00003C98*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r31));
/*80006E9C 00003C9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80006EA0 00003CA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80006EA4 00003CA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80006EA8 00003CA8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80006EAC 00003CAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80006EB0 00003CB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80006EB4 00003CB4*/ PPC::Runtime::ASM::blr();
}