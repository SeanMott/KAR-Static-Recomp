//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8000ED50(PPC::Runtime::GCContext* context)
{
/*8000ED50 0000BB50*/ PPC::Runtime::ASM::mulli(context->r3, context->r3, 0x30);
/*8000ED54 0000BB54*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000ED58 0000BB58*/ PPC::Runtime::ASM::li(context->r6, 0x1100);
/*8000ED5C 0000BB5C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000ED60 0000BB60*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r3);
/*8000ED64 0000BB64*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000ED68 0000BB68*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000ED6C 0000BB6C*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000ED70 0000BB70*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000ED74 0000BB74*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000ED78 0000BB78*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000ED7C 0000BB7C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000ED80 0000BB80*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000ED84 0000BB84*/ PPC::Runtime::ASM::beq(.L_8000ED94);
/*8000ED88 0000BB88*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000ED8C 0000BB8C*/ PPC::Runtime::ASM::ori(context->r5, context->r8, 0x1);
/*8000ED90 0000BB90*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8000ED94, 0x8000ED94) //this is a jump label
/*8000ED94 0000BB94*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000ED98 0000BB98*/ PPC::Runtime::ASM::li(context->r5, 0x1100);
/*8000ED9C 0000BB9C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r9));
/*8000EDA0 0000BBA0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EDA4 0000BBA4*/ PPC::Runtime::ASM::lwzu(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r9));
/*8000EDA8 0000BBA8*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r5);
/*8000EDAC 0000BBAC*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000EDB0 0000BBB0*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000EDB4 0000BBB4*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EDB8 0000BBB8*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000EDBC 0000BBBC*/ PPC::Runtime::ASM::beq(.L_8000EDCC);
/*8000EDC0 0000BBC0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000EDC4 0000BBC4*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x1);
/*8000EDC8 0000BBC8*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000EDCC, 0x8000EDCC) //this is a jump label
/*8000EDCC 0000BBCC*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000EDD0 0000BBD0*/ PPC::Runtime::ASM::li(context->r5, 0x1100);
/*8000EDD4 0000BBD4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r9));
/*8000EDD8 0000BBD8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EDDC 0000BBDC*/ PPC::Runtime::ASM::lwzu(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*8000EDE0 0000BBE0*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r5);
/*8000EDE4 0000BBE4*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000EDE8 0000BBE8*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000EDEC 0000BBEC*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EDF0 0000BBF0*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000EDF4 0000BBF4*/ PPC::Runtime::ASM::beq(.L_8000EE04);
/*8000EDF8 0000BBF8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000EDFC 0000BBFC*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x1);
/*8000EE00 0000BC00*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000EE04, 0x8000EE04) //this is a jump label
/*8000EE04 0000BC04*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r3);
/*8000EE08 0000BC08*/ PPC::Runtime::ASM::li(context->r0, 0x1100);
/*8000EE0C 0000BC0C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r8));
/*8000EE10 0000BC10*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000EE14 0000BC14*/ PPC::Runtime::ASM::lwzu(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r8));
/*8000EE18 0000BC18*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r0);
/*8000EE1C 0000BC1C*/ PPC::Runtime::ASM::and(context->r0, context->r7, context->r6);
/*8000EE20 0000BC20*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000EE24 0000BC24*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r6);
/*8000EE28 0000BC28*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000EE2C 0000BC2C*/ PPC::Runtime::ASM::beq(.L_8000EE3C);
/*8000EE30 0000BC30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*8000EE34 0000BC34*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*8000EE38 0000BC38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_8000EE3C, 0x8000EE3C) //this is a jump label
/*8000EE3C 0000BC3C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000EE40 0000BC40*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000EE44 0000BC44*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000EE48 0000BC48*/ PPC::Runtime::ASM::li(context->r0, 0x200);
/*8000EE4C 0000BC4C*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r6);
/*8000EE50 0000BC50*/ PPC::Runtime::ASM::lis(context->r8, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000EE54 0000BC54*/ PPC::Runtime::ASM::and(context->r0, context->r7, context->r0);
/*8000EE58 0000BC58*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r6);
/*8000EE5C 0000BC5C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000EE60 0000BC60*/ PPC::Runtime::ASM::or.(context->r5, context->r0, context->r5);
/*8000EE64 0000BC64*/ PPC::Runtime::ASM::addi(context->r0, context->r8, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000EE68 0000BC68*/ PPC::Runtime::ASM::beq(.L_8000EE88);
/*8000EE6C 0000BC6C*/ PPC::Runtime::ASM::add(context->r7, context->r0, context->r3);
/*8000EE70 0000BC70*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8000EE74 0000BC74*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*8000EE78 0000BC78*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*8000EE7C 0000BC7C*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x2);
/*8000EE80 0000BC80*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000EE84 0000BC84*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8000EE88, 0x8000EE88) //this is a jump label
/*8000EE88 0000BC88*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000EE8C 0000BC8C*/ PPC::Runtime::ASM::li(context->r5, 0x200);
/*8000EE90 0000BC90*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r9));
/*8000EE94 0000BC94*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EE98 0000BC98*/ PPC::Runtime::ASM::lwzu(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r9));
/*8000EE9C 0000BC9C*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r5);
/*8000EEA0 0000BCA0*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000EEA4 0000BCA4*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000EEA8 0000BCA8*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EEAC 0000BCAC*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000EEB0 0000BCB0*/ PPC::Runtime::ASM::beq(.L_8000EEC0);
/*8000EEB4 0000BCB4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000EEB8 0000BCB8*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x2);
/*8000EEBC 0000BCBC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000EEC0, 0x8000EEC0) //this is a jump label
/*8000EEC0 0000BCC0*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000EEC4 0000BCC4*/ PPC::Runtime::ASM::li(context->r5, 0x200);
/*8000EEC8 0000BCC8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r9));
/*8000EECC 0000BCCC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EED0 0000BCD0*/ PPC::Runtime::ASM::lwzu(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*8000EED4 0000BCD4*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r5);
/*8000EED8 0000BCD8*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000EEDC 0000BCDC*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000EEE0 0000BCE0*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EEE4 0000BCE4*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000EEE8 0000BCE8*/ PPC::Runtime::ASM::beq(.L_8000EEF8);
/*8000EEEC 0000BCEC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000EEF0 0000BCF0*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x2);
/*8000EEF4 0000BCF4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000EEF8, 0x8000EEF8) //this is a jump label
/*8000EEF8 0000BCF8*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r3);
/*8000EEFC 0000BCFC*/ PPC::Runtime::ASM::li(context->r0, 0x200);
/*8000EF00 0000BD00*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r8));
/*8000EF04 0000BD04*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000EF08 0000BD08*/ PPC::Runtime::ASM::lwzu(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r8));
/*8000EF0C 0000BD0C*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r0);
/*8000EF10 0000BD10*/ PPC::Runtime::ASM::and(context->r0, context->r7, context->r6);
/*8000EF14 0000BD14*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000EF18 0000BD18*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r6);
/*8000EF1C 0000BD1C*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000EF20 0000BD20*/ PPC::Runtime::ASM::beq(.L_8000EF30);
/*8000EF24 0000BD24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*8000EF28 0000BD28*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x2);
/*8000EF2C 0000BD2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_8000EF30, 0x8000EF30) //this is a jump label
/*8000EF30 0000BD30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000EF34 0000BD34*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EF38 0000BD38*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000EF3C 0000BD3C*/ PPC::Runtime::ASM::li(context->r8, 0x1060);
/*8000EF40 0000BD40*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r0);
/*8000EF44 0000BD44*/ PPC::Runtime::ASM::lis(context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000EF48 0000BD48*/ PPC::Runtime::ASM::and(context->r0, context->r8, context->r6);
/*8000EF4C 0000BD4C*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r8);
/*8000EF50 0000BD50*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EF54 0000BD54*/ PPC::Runtime::ASM::or.(context->r5, context->r0, context->r5);
/*8000EF58 0000BD58*/ PPC::Runtime::ASM::addi(context->r0, context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000EF5C 0000BD5C*/ PPC::Runtime::ASM::bne(.L_8000EF7C);
/*8000EF60 0000BD60*/ PPC::Runtime::ASM::add(context->r7, context->r0, context->r3);
/*8000EF64 0000BD64*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8000EF68 0000BD68*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*8000EF6C 0000BD6C*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*8000EF70 0000BD70*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x4);
/*8000EF74 0000BD74*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000EF78 0000BD78*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8000EF7C, 0x8000EF7C) //this is a jump label
/*8000EF7C 0000BD7C*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000EF80 0000BD80*/ PPC::Runtime::ASM::li(context->r8, 0x1060);
/*8000EF84 0000BD84*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r9));
/*8000EF88 0000BD88*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EF8C 0000BD8C*/ PPC::Runtime::ASM::lwzu(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r9));
/*8000EF90 0000BD90*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r8);
/*8000EF94 0000BD94*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r7);
/*8000EF98 0000BD98*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r8);
/*8000EF9C 0000BD9C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EFA0 0000BDA0*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000EFA4 0000BDA4*/ PPC::Runtime::ASM::bne(.L_8000EFB4);
/*8000EFA8 0000BDA8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000EFAC 0000BDAC*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x4);
/*8000EFB0 0000BDB0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000EFB4, 0x8000EFB4) //this is a jump label
/*8000EFB4 0000BDB4*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000EFB8 0000BDB8*/ PPC::Runtime::ASM::li(context->r8, 0x1060);
/*8000EFBC 0000BDBC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r10));
/*8000EFC0 0000BDC0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000EFC4 0000BDC4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000EFC8 0000BDC8*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r8);
/*8000EFCC 0000BDCC*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r7);
/*8000EFD0 0000BDD0*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r8);
/*8000EFD4 0000BDD4*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EFD8 0000BDD8*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000EFDC 0000BDDC*/ PPC::Runtime::ASM::bne(.L_8000F010);
/*8000EFE0 0000BDE0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*8000EFE4 0000BDE4*/ PPC::Runtime::ASM::addi(context->r9, context->r10, 0x8);
/*8000EFE8 0000BDE8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r10));
/*8000EFEC 0000BDEC*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r7);
/*8000EFF0 0000BDF0*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r8);
/*8000EFF4 0000BDF4*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000EFF8 0000BDF8*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000EFFC 0000BDFC*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F000 0000BE00*/ PPC::Runtime::ASM::beq(.L_8000F010);
/*8000F004 0000BE04*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000F008 0000BE08*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x4);
/*8000F00C 0000BE0C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000F010, 0x8000F010) //this is a jump label
/*8000F010 0000BE10*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F014 0000BE14*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F018 0000BE18*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r10));
/*8000F01C 0000BE1C*/ PPC::Runtime::ASM::li(context->r8, 0x1060);
/*8000F020 0000BE20*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r5);
/*8000F024 0000BE24*/ PPC::Runtime::ASM::and(context->r6, context->r8, context->r6);
/*8000F028 0000BE28*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r8);
/*8000F02C 0000BE2C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F030 0000BE30*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F034 0000BE34*/ PPC::Runtime::ASM::bne(.L_8000F06C);
/*8000F038 0000BE38*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r3);
/*8000F03C 0000BE3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r6));
/*8000F040 0000BE40*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r6));
/*8000F044 0000BE44*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x18);
/*8000F048 0000BE48*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r7);
/*8000F04C 0000BE4C*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r8);
/*8000F050 0000BE50*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F054 0000BE54*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r7);
/*8000F058 0000BE58*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000F05C 0000BE5C*/ PPC::Runtime::ASM::beq(.L_8000F06C);
/*8000F060 0000BE60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8000F064 0000BE64*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x4);
/*8000F068 0000BE68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8000F06C, 0x8000F06C) //this is a jump label
/*8000F06C 0000BE6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000F070 0000BE70*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F074 0000BE74*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000F078 0000BE78*/ PPC::Runtime::ASM::li(context->r8, 0x1160);
/*8000F07C 0000BE7C*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r0);
/*8000F080 0000BE80*/ PPC::Runtime::ASM::lis(context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000F084 0000BE84*/ PPC::Runtime::ASM::and(context->r0, context->r8, context->r6);
/*8000F088 0000BE88*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r8);
/*8000F08C 0000BE8C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F090 0000BE90*/ PPC::Runtime::ASM::or.(context->r5, context->r0, context->r5);
/*8000F094 0000BE94*/ PPC::Runtime::ASM::addi(context->r0, context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000F098 0000BE98*/ PPC::Runtime::ASM::bne(.L_8000F0B8);
/*8000F09C 0000BE9C*/ PPC::Runtime::ASM::add(context->r7, context->r0, context->r3);
/*8000F0A0 0000BEA0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8000F0A4 0000BEA4*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*8000F0A8 0000BEA8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*8000F0AC 0000BEAC*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x8);
/*8000F0B0 0000BEB0*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000F0B4 0000BEB4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8000F0B8, 0x8000F0B8) //this is a jump label
/*8000F0B8 0000BEB8*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000F0BC 0000BEBC*/ PPC::Runtime::ASM::li(context->r8, 0x1160);
/*8000F0C0 0000BEC0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r9));
/*8000F0C4 0000BEC4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F0C8 0000BEC8*/ PPC::Runtime::ASM::lwzu(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r9));
/*8000F0CC 0000BECC*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r8);
/*8000F0D0 0000BED0*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r7);
/*8000F0D4 0000BED4*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r8);
/*8000F0D8 0000BED8*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F0DC 0000BEDC*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F0E0 0000BEE0*/ PPC::Runtime::ASM::bne(.L_8000F0F0);
/*8000F0E4 0000BEE4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000F0E8 0000BEE8*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x8);
/*8000F0EC 0000BEEC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000F0F0, 0x8000F0F0) //this is a jump label
/*8000F0F0 0000BEF0*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F0F4 0000BEF4*/ PPC::Runtime::ASM::li(context->r8, 0x1160);
/*8000F0F8 0000BEF8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r10));
/*8000F0FC 0000BEFC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F100 0000BF00*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F104 0000BF04*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r8);
/*8000F108 0000BF08*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r7);
/*8000F10C 0000BF0C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r8);
/*8000F110 0000BF10*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F114 0000BF14*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F118 0000BF18*/ PPC::Runtime::ASM::bne(.L_8000F14C);
/*8000F11C 0000BF1C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*8000F120 0000BF20*/ PPC::Runtime::ASM::addi(context->r9, context->r10, 0x8);
/*8000F124 0000BF24*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r10));
/*8000F128 0000BF28*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r7);
/*8000F12C 0000BF2C*/ PPC::Runtime::ASM::and(context->r6, context->r6, context->r8);
/*8000F130 0000BF30*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F134 0000BF34*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F138 0000BF38*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F13C 0000BF3C*/ PPC::Runtime::ASM::beq(.L_8000F14C);
/*8000F140 0000BF40*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000F144 0000BF44*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x8);
/*8000F148 0000BF48*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000F14C, 0x8000F14C) //this is a jump label
/*8000F14C 0000BF4C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F150 0000BF50*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F154 0000BF54*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r10));
/*8000F158 0000BF58*/ PPC::Runtime::ASM::li(context->r8, 0x1160);
/*8000F15C 0000BF5C*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r5);
/*8000F160 0000BF60*/ PPC::Runtime::ASM::and(context->r6, context->r8, context->r6);
/*8000F164 0000BF64*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r8);
/*8000F168 0000BF68*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F16C 0000BF6C*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F170 0000BF70*/ PPC::Runtime::ASM::bne(.L_8000F1A8);
/*8000F174 0000BF74*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r3);
/*8000F178 0000BF78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r6));
/*8000F17C 0000BF7C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r6));
/*8000F180 0000BF80*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x18);
/*8000F184 0000BF84*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r7);
/*8000F188 0000BF88*/ PPC::Runtime::ASM::and(context->r5, context->r5, context->r8);
/*8000F18C 0000BF8C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F190 0000BF90*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r7);
/*8000F194 0000BF94*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000F198 0000BF98*/ PPC::Runtime::ASM::beq(.L_8000F1A8);
/*8000F19C 0000BF9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8000F1A0 0000BFA0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x8);
/*8000F1A4 0000BFA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8000F1A8, 0x8000F1A8) //this is a jump label
/*8000F1A8 0000BFA8*/ PPC::Runtime::ASM::lis(context->r5, 0x1);
/*8000F1AC 0000BFAC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000F1B0 0000BFB0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000F1B4 0000BFB4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x8);
/*8000F1B8 0000BFB8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F1BC 0000BFBC*/ PPC::Runtime::ASM::lis(context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000F1C0 0000BFC0*/ PPC::Runtime::ASM::and(context->r5, context->r6, context->r7);
/*8000F1C4 0000BFC4*/ PPC::Runtime::ASM::and(context->r0, context->r8, context->r0);
/*8000F1C8 0000BFC8*/ PPC::Runtime::ASM::xor(context->r6, context->r0, context->r7);
/*8000F1CC 0000BFCC*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F1D0 0000BFD0*/ PPC::Runtime::ASM::addi(context->r0, context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000F1D4 0000BFD4*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F1D8 0000BFD8*/ PPC::Runtime::ASM::beq(.L_8000F1F8);
/*8000F1DC 0000BFDC*/ PPC::Runtime::ASM::add(context->r7, context->r0, context->r3);
/*8000F1E0 0000BFE0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8000F1E4 0000BFE4*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*8000F1E8 0000BFE8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*8000F1EC 0000BFEC*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x10);
/*8000F1F0 0000BFF0*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000F1F4 0000BFF4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8000F1F8, 0x8000F1F8) //this is a jump label
/*8000F1F8 0000BFF8*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F1FC 0000BFFC*/ PPC::Runtime::ASM::lis(context->r5, 0x1);
/*8000F200 0000C000*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r10));
/*8000F204 0000C004*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F208 0000C008*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r10));
/*8000F20C 0000C00C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x8);
/*8000F210 0000C010*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000F214 0000C014*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x10);
/*8000F218 0000C018*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000F21C 0000C01C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F220 0000C020*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F224 0000C024*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F228 0000C028*/ PPC::Runtime::ASM::beq(.L_8000F238);
/*8000F22C 0000C02C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F230 0000C030*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x10);
/*8000F234 0000C034*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
RUNTIME_PPC_JUMP_LABEL(.L_8000F238, 0x8000F238) //this is a jump label
/*8000F238 0000C038*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F23C 0000C03C*/ PPC::Runtime::ASM::lis(context->r5, 0x1);
/*8000F240 0000C040*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*8000F244 0000C044*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F248 0000C048*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r10));
/*8000F24C 0000C04C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x8);
/*8000F250 0000C050*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000F254 0000C054*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x8);
/*8000F258 0000C058*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000F25C 0000C05C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F260 0000C060*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F264 0000C064*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F268 0000C068*/ PPC::Runtime::ASM::beq(.L_8000F278);
/*8000F26C 0000C06C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F270 0000C070*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x10);
/*8000F274 0000C074*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
RUNTIME_PPC_JUMP_LABEL(.L_8000F278, 0x8000F278) //this is a jump label
/*8000F278 0000C078*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r3);
/*8000F27C 0000C07C*/ PPC::Runtime::ASM::lis(context->r5, 0x1);
/*8000F280 0000C080*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r8));
/*8000F284 0000C084*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000F288 0000C088*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r8));
/*8000F28C 0000C08C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x8);
/*8000F290 0000C090*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r6);
/*8000F294 0000C094*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x18);
/*8000F298 0000C098*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r5);
/*8000F29C 0000C09C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000F2A0 0000C0A0*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r6);
/*8000F2A4 0000C0A4*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000F2A8 0000C0A8*/ PPC::Runtime::ASM::beq(.L_8000F2B8);
/*8000F2AC 0000C0AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*8000F2B0 0000C0B0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x10);
/*8000F2B4 0000C0B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_8000F2B8, 0x8000F2B8) //this is a jump label
/*8000F2B8 0000C0B8*/ PPC::Runtime::ASM::lis(context->r5, 0x2);
/*8000F2BC 0000C0BC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000F2C0 0000C0C0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000F2C4 0000C0C4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x4);
/*8000F2C8 0000C0C8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F2CC 0000C0CC*/ PPC::Runtime::ASM::lis(context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000F2D0 0000C0D0*/ PPC::Runtime::ASM::and(context->r5, context->r6, context->r7);
/*8000F2D4 0000C0D4*/ PPC::Runtime::ASM::and(context->r0, context->r8, context->r0);
/*8000F2D8 0000C0D8*/ PPC::Runtime::ASM::xor(context->r6, context->r0, context->r7);
/*8000F2DC 0000C0DC*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F2E0 0000C0E0*/ PPC::Runtime::ASM::addi(context->r0, context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000F2E4 0000C0E4*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F2E8 0000C0E8*/ PPC::Runtime::ASM::beq(.L_8000F308);
/*8000F2EC 0000C0EC*/ PPC::Runtime::ASM::add(context->r7, context->r0, context->r3);
/*8000F2F0 0000C0F0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8000F2F4 0000C0F4*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*8000F2F8 0000C0F8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*8000F2FC 0000C0FC*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x20);
/*8000F300 0000C100*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000F304 0000C104*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8000F308, 0x8000F308) //this is a jump label
/*8000F308 0000C108*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F30C 0000C10C*/ PPC::Runtime::ASM::lis(context->r5, 0x2);
/*8000F310 0000C110*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r10));
/*8000F314 0000C114*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F318 0000C118*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r10));
/*8000F31C 0000C11C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x4);
/*8000F320 0000C120*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000F324 0000C124*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x10);
/*8000F328 0000C128*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000F32C 0000C12C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F330 0000C130*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F334 0000C134*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F338 0000C138*/ PPC::Runtime::ASM::beq(.L_8000F348);
/*8000F33C 0000C13C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F340 0000C140*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x20);
/*8000F344 0000C144*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
RUNTIME_PPC_JUMP_LABEL(.L_8000F348, 0x8000F348) //this is a jump label
/*8000F348 0000C148*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F34C 0000C14C*/ PPC::Runtime::ASM::lis(context->r5, 0x2);
/*8000F350 0000C150*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*8000F354 0000C154*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F358 0000C158*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r10));
/*8000F35C 0000C15C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x4);
/*8000F360 0000C160*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000F364 0000C164*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x8);
/*8000F368 0000C168*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000F36C 0000C16C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F370 0000C170*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F374 0000C174*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F378 0000C178*/ PPC::Runtime::ASM::beq(.L_8000F388);
/*8000F37C 0000C17C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F380 0000C180*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x20);
/*8000F384 0000C184*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
RUNTIME_PPC_JUMP_LABEL(.L_8000F388, 0x8000F388) //this is a jump label
/*8000F388 0000C188*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r3);
/*8000F38C 0000C18C*/ PPC::Runtime::ASM::lis(context->r5, 0x2);
/*8000F390 0000C190*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r8));
/*8000F394 0000C194*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000F398 0000C198*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r8));
/*8000F39C 0000C19C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
/*8000F3A0 0000C1A0*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r6);
/*8000F3A4 0000C1A4*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x18);
/*8000F3A8 0000C1A8*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r5);
/*8000F3AC 0000C1AC*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000F3B0 0000C1B0*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r6);
/*8000F3B4 0000C1B4*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000F3B8 0000C1B8*/ PPC::Runtime::ASM::beq(.L_8000F3C8);
/*8000F3BC 0000C1BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*8000F3C0 0000C1C0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x20);
/*8000F3C4 0000C1C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_8000F3C8, 0x8000F3C8) //this is a jump label
/*8000F3C8 0000C1C8*/ PPC::Runtime::ASM::lis(context->r5, 0x4);
/*8000F3CC 0000C1CC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000F3D0 0000C1D0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000F3D4 0000C1D4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x1);
/*8000F3D8 0000C1D8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F3DC 0000C1DC*/ PPC::Runtime::ASM::lis(context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000F3E0 0000C1E0*/ PPC::Runtime::ASM::and(context->r5, context->r6, context->r7);
/*8000F3E4 0000C1E4*/ PPC::Runtime::ASM::and(context->r0, context->r8, context->r0);
/*8000F3E8 0000C1E8*/ PPC::Runtime::ASM::xor(context->r6, context->r0, context->r7);
/*8000F3EC 0000C1EC*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F3F0 0000C1F0*/ PPC::Runtime::ASM::addi(context->r0, context->r9, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000F3F4 0000C1F4*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F3F8 0000C1F8*/ PPC::Runtime::ASM::beq(.L_8000F418);
/*8000F3FC 0000C1FC*/ PPC::Runtime::ASM::add(context->r7, context->r0, context->r3);
/*8000F400 0000C200*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8000F404 0000C204*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*8000F408 0000C208*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*8000F40C 0000C20C*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0x40);
/*8000F410 0000C210*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000F414 0000C214*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8000F418, 0x8000F418) //this is a jump label
/*8000F418 0000C218*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F41C 0000C21C*/ PPC::Runtime::ASM::lis(context->r5, 0x4);
/*8000F420 0000C220*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r10));
/*8000F424 0000C224*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F428 0000C228*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r10));
/*8000F42C 0000C22C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x1);
/*8000F430 0000C230*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000F434 0000C234*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x10);
/*8000F438 0000C238*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000F43C 0000C23C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F440 0000C240*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F444 0000C244*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F448 0000C248*/ PPC::Runtime::ASM::beq(.L_8000F458);
/*8000F44C 0000C24C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F450 0000C250*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x40);
/*8000F454 0000C254*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
RUNTIME_PPC_JUMP_LABEL(.L_8000F458, 0x8000F458) //this is a jump label
/*8000F458 0000C258*/ PPC::Runtime::ASM::add(context->r10, context->r0, context->r3);
/*8000F45C 0000C25C*/ PPC::Runtime::ASM::lis(context->r5, 0x4);
/*8000F460 0000C260*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*8000F464 0000C264*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8000F468 0000C268*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r10));
/*8000F46C 0000C26C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x1);
/*8000F470 0000C270*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r7);
/*8000F474 0000C274*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x8);
/*8000F478 0000C278*/ PPC::Runtime::ASM::and(context->r6, context->r9, context->r6);
/*8000F47C 0000C27C*/ PPC::Runtime::ASM::xor(context->r6, context->r6, context->r7);
/*8000F480 0000C280*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r7);
/*8000F484 0000C284*/ PPC::Runtime::ASM::or.(context->r5, context->r6, context->r5);
/*8000F488 0000C288*/ PPC::Runtime::ASM::beq(.L_8000F498);
/*8000F48C 0000C28C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*8000F490 0000C290*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x40);
/*8000F494 0000C294*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
RUNTIME_PPC_JUMP_LABEL(.L_8000F498, 0x8000F498) //this is a jump label
/*8000F498 0000C298*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r3);
/*8000F49C 0000C29C*/ PPC::Runtime::ASM::lis(context->r5, 0x4);
/*8000F4A0 0000C2A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r8));
/*8000F4A4 0000C2A4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000F4A8 0000C2A8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r8));
/*8000F4AC 0000C2AC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*8000F4B0 0000C2B0*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r6);
/*8000F4B4 0000C2B4*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x18);
/*8000F4B8 0000C2B8*/ PPC::Runtime::ASM::and(context->r5, context->r7, context->r5);
/*8000F4BC 0000C2BC*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000F4C0 0000C2C0*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r6);
/*8000F4C4 0000C2C4*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*8000F4C8 0000C2C8*/ PPC::Runtime::ASM::beq(.L_8000F4D8);
/*8000F4CC 0000C2CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*8000F4D0 0000C2D0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x40);
/*8000F4D4 0000C2D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
RUNTIME_PPC_JUMP_LABEL(.L_8000F4D8, 0x8000F4D8) //this is a jump label
/*8000F4D8 0000C2D8*/ PPC::Runtime::ASM::lis(context->r5, 0x8);
/*8000F4DC 0000C2DC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8000F4E0 0000C2E0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000F4E4 0000C2E4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x2);
/*8000F4E8 0000C2E8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000F4EC 0000C2EC*/ PPC::Runtime::ASM::lis(context->r8, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_HighBit);
/*8000F4F0 0000C2F0*/ PPC::Runtime::ASM::and(context->r0, context->r4, context->r0);
/*8000F4F4 0000C2F4*/ PPC::Runtime::ASM::and(context->r4, context->r7, context->r6);
/*8000F4F8 0000C2F8*/ PPC::Runtime::ASM::xor(context->r5, context->r0, context->r6);
/*8000F4FC 0000C2FC*/ PPC::Runtime::ASM::addi(context->r0, context->r8, STRUCT_BYTE4_COUNT_180537000 @ Get_MemoryOffset_LowBit);
/*8000F500 0000C300*/ PPC::Runtime::ASM::xor(context->r4, context->r4, context->r6);
/*8000F504 0000C304*/ PPC::Runtime::ASM::or.(context->r4, context->r5, context->r4);
/*8000F508 0000C308*/ PPC::Runtime::ASM::beq(.L_8000F528);
/*8000F50C 0000C30C*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r3);
/*8000F510 0000C310*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8000F514 0000C314*/ PPC::Runtime::ASM::mr(context->r4, context->r6);
/*8000F518 0000C318*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*8000F51C 0000C31C*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x80);
/*8000F520 0000C320*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000F524 0000C324*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8000F528, 0x8000F528) //this is a jump label
/*8000F528 0000C328*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000F52C 0000C32C*/ PPC::Runtime::ASM::lis(context->r4, 0x8);
/*8000F530 0000C330*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r9));
/*8000F534 0000C334*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000F538 0000C338*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r9));
/*8000F53C 0000C33C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x2);
/*8000F540 0000C340*/ PPC::Runtime::ASM::and(context->r4, context->r7, context->r6);
/*8000F544 0000C344*/ PPC::Runtime::ASM::addi(context->r9, context->r9, 0x10);
/*8000F548 0000C348*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r5);
/*8000F54C 0000C34C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000F550 0000C350*/ PPC::Runtime::ASM::xor(context->r4, context->r4, context->r6);
/*8000F554 0000C354*/ PPC::Runtime::ASM::or.(context->r4, context->r5, context->r4);
/*8000F558 0000C358*/ PPC::Runtime::ASM::beq(.L_8000F568);
/*8000F55C 0000C35C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000F560 0000C360*/ PPC::Runtime::ASM::ori(context->r4, context->r4, 0x80);
/*8000F564 0000C364*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000F568, 0x8000F568) //this is a jump label
/*8000F568 0000C368*/ PPC::Runtime::ASM::add(context->r9, context->r0, context->r3);
/*8000F56C 0000C36C*/ PPC::Runtime::ASM::lis(context->r4, 0x8);
/*8000F570 0000C370*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*8000F574 0000C374*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000F578 0000C378*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r9));
/*8000F57C 0000C37C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x2);
/*8000F580 0000C380*/ PPC::Runtime::ASM::and(context->r4, context->r7, context->r6);
/*8000F584 0000C384*/ PPC::Runtime::ASM::addi(context->r9, context->r9, 0x8);
/*8000F588 0000C388*/ PPC::Runtime::ASM::and(context->r5, context->r8, context->r5);
/*8000F58C 0000C38C*/ PPC::Runtime::ASM::xor(context->r5, context->r5, context->r6);
/*8000F590 0000C390*/ PPC::Runtime::ASM::xor(context->r4, context->r4, context->r6);
/*8000F594 0000C394*/ PPC::Runtime::ASM::or.(context->r4, context->r5, context->r4);
/*8000F598 0000C398*/ PPC::Runtime::ASM::beq(.L_8000F5A8);
/*8000F59C 0000C39C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*8000F5A0 0000C3A0*/ PPC::Runtime::ASM::ori(context->r4, context->r4, 0x80);
/*8000F5A4 0000C3A4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
RUNTIME_PPC_JUMP_LABEL(.L_8000F5A8, 0x8000F5A8) //this is a jump label
/*8000F5A8 0000C3A8*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r3);
/*8000F5AC 0000C3AC*/ PPC::Runtime::ASM::lis(context->r3, 0x8);
/*8000F5B0 0000C3B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r6));
/*8000F5B4 0000C3B4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8000F5B8 0000C3B8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r6));
/*8000F5BC 0000C3BC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x2);
/*8000F5C0 0000C3C0*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*8000F5C4 0000C3C4*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x18);
/*8000F5C8 0000C3C8*/ PPC::Runtime::ASM::and(context->r3, context->r5, context->r3);
/*8000F5CC 0000C3CC*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r4);
/*8000F5D0 0000C3D0*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r4);
/*8000F5D4 0000C3D4*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*8000F5D8 0000C3D8*/ PPC::Runtime::ASM::beqlr();
/*8000F5DC 0000C3DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8000F5E0 0000C3E0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x80);
/*8000F5E4 0000C3E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8000F5E8 0000C3E8*/ PPC::Runtime::ASM::blr();
}