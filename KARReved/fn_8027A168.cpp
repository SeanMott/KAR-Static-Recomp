//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_getRuleNum.hpp"
#include "fn_80277C84.hpp"
#include "fn_80277C84.hpp"
#include "fn_80277C84.hpp"



void fn_8027A168(PPC::Runtime::GCContext* context)
{
/*8027A168 00276F68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8027A16C 00276F6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8027A170 00276F70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8027A174 00276F74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027A178 00276F78*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8027A17C 00276F7C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8027A180 00276F80*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8027A184 00276F84*/ PPC::Runtime::ASM::bl(fn_getRuleNum);
/*8027A188 00276F88*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8027A18C 00276F8C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*8027A190 00276F90*/ PPC::Runtime::ASM::bne(.L_8027A1C4);
/*8027A194 00276F94*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*8027A198 00276F98*/ PPC::Runtime::ASM::beq(.L_8027A1B0);
/*8027A19C 00276F9C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8027A1A0 00276FA0*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8027A1A4 00276FA4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8027A1A8 00276FA8*/ PPC::Runtime::ASM::bl(fn_80277C84);
/*8027A1AC 00276FAC*/ PPC::Runtime::ASM::b(.L_8027A1DC);
RUNTIME_PPC_JUMP_LABEL(.L_8027A1B0, 0x8027A1B0) //this is a jump label
/*8027A1B0 00276FB0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8027A1B4 00276FB4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8027A1B8 00276FB8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8027A1BC 00276FBC*/ PPC::Runtime::ASM::bl(fn_80277C84);
/*8027A1C0 00276FC0*/ PPC::Runtime::ASM::b(.L_8027A1DC);
RUNTIME_PPC_JUMP_LABEL(.L_8027A1C4, 0x8027A1C4) //this is a jump label
/*8027A1C4 00276FC4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*8027A1C8 00276FC8*/ PPC::Runtime::ASM::beq(.L_8027A1DC);
/*8027A1CC 00276FCC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8027A1D0 00276FD0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8027A1D4 00276FD4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8027A1D8 00276FD8*/ PPC::Runtime::ASM::bl(fn_80277C84);
RUNTIME_PPC_JUMP_LABEL(.L_8027A1DC, 0x8027A1DC) //this is a jump label
/*8027A1DC 00276FDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8027A1E0 00276FE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027A1E4 00276FE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8027A1E8 00276FE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8027A1EC 00276FEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8027A1F0 00276FF0*/ PPC::Runtime::ASM::blr();
}