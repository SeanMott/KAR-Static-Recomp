//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_UnlockSram.hpp"



void fn_OSGetSoundMode(PPC::Runtime::GCContext* context)
{
/*803D9590 003D6390*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D9594 003D6394*/ PPC::Runtime::ASM::lis(context->r3, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D9598 003D6398*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D959C 003D639C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803D95A0 003D63A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D95A4 003D63A4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D95A8 003D63A8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D95AC 003D63AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*803D95B0 003D63B0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*803D95B4 003D63B4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D95B8 003D63B8*/ PPC::Runtime::ASM::beq(.L_803D95C8);
/*803D95BC 003D63BC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D95C0 003D63C0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803D95C4 003D63C4*/ PPC::Runtime::ASM::b(.L_803D95D4);
RUNTIME_PPC_JUMP_LABEL(.L_803D95C8, 0x803D95C8) //this is a jump label
/*803D95C8 003D63C8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803D95CC 003D63CC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D95D0 003D63D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D95D4, 0x803D95D4) //this is a jump label
/*803D95D4 003D63D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D95D8 003D63D8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 29, 29);
/*803D95DC 003D63DC*/ PPC::Runtime::ASM::beq(.L_803D95E8);
/*803D95E0 003D63E0*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*803D95E4 003D63E4*/ PPC::Runtime::ASM::b(.L_803D95EC);
RUNTIME_PPC_JUMP_LABEL(.L_803D95E8, 0x803D95E8) //this is a jump label
/*803D95E8 003D63E8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803D95EC, 0x803D95EC) //this is a jump label
/*803D95EC 003D63EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D95F0 003D63F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803D95F4 003D63F4*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
/*803D95F8 003D63F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803D95FC 003D63FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D9600 003D6400*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D9604 003D6404*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803D9608 003D6408*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D960C 003D640C*/ PPC::Runtime::ASM::blr();
}