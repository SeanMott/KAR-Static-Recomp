//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025FBE8(PPC::Runtime::GCContext* context)
{
/*8025FBE8 0025C9E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025FBEC 0025C9EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025FBF0 0025C9F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FBF4 0025C9F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FBF8 0025C9F8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025FBFC 0025C9FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025FC00 0025CA00*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025FC04 0025CA04*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FC08 0025CA08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FC0C 0025CA0C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FC10 0025CA10*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025FC14 0025CA14*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025FC18 0025CA18*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025FC1C 0025CA1C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025FC20 0025CA20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FC24 0025CA24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FC28 0025CA28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025FC2C 0025CA2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025FC30 0025CA30*/ PPC::Runtime::ASM::blr();
}