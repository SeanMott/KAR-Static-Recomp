//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800E1E2C(PPC::Runtime::GCContext* context)
{
/*800E1E2C 000DEC2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E1E30 000DEC30*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E1E34 000DEC34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E1E38 000DEC38*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E1E3C 000DEC3C*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800E1E40 000DEC40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E1E44 000DEC44*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*800E1E48 000DEC48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E1E4C 000DEC4C*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800E1E50 000DEC50*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E1E54 000DEC54*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800E1E58 000DEC58*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E1E5C 000DEC5C*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800E1E60 000DEC60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*800E1E64 000DEC64*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xa);
/*800E1E68 000DEC68*/ PPC::Runtime::ASM::blt(.L_800E1E84);
/*800E1E6C 000DEC6C*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "grrangespline." Get_MemoryOffset_HighBit);
/*800E1E70 000DEC70*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_946 @ Get_MemoryOffset_HighBit);
/*800E1E74 000DEC74*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "grrangespline." Get_MemoryOffset_LowBit);
/*800E1E78 000DEC78*/ PPC::Runtime::ASM::li(context->r4, 0xb2);
/*800E1E7C 000DEC7C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_946 @ Get_MemoryOffset_LowBit);
/*800E1E80 000DEC80*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E1E84, 0x800E1E84) //this is a jump label
/*800E1E84 000DEC84*/ PPC::Runtime::ASM::lis(context->r3, lbl_805575DC @ Get_MemoryOffset_HighBit);
/*800E1E88 000DEC88*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805575DC @ Get_MemoryOffset_LowBit);
/*800E1E8C 000DEC8C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*800E1E90 000DEC90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800E1E94 000DEC94*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800E1E98 000DEC98*/ PPC::Runtime::ASM::stwx(context->r3, context->r28, context->r0);
/*800E1E9C 000DEC9C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800E1EA0 000DECA0*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E1EA4 000DECA4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800E1EA8 000DECA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E1EAC 000DECAC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800E1EB0 000DECB0*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*800E1EB4 000DECB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800E1EB8 000DECB8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E1EBC 000DECBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E1EC0 000DECC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E1EC4 000DECC4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E1EC8 000DECC8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E1ECC 000DECCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E1ED0 000DECD0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E1ED4 000DECD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E1ED8 000DECD8*/ PPC::Runtime::ASM::blr();
}