//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F87E4.hpp"
#include "fn_8018C598.hpp"



void fn_800F83E8(PPC::Runtime::GCContext* context)
{
/*800F83E8 000F51E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F83EC 000F51EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F83F0 000F51F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F83F4 000F51F4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800F83F8 000F51F8*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800F83FC 000F51FC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800F8400 000F5200*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F8404 000F5204*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800F8408 000F5208*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800F840C 000F520C*/ PPC::Runtime::ASM::beq(.L_800F846C);
/*800F8410 000F5210*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800F8414 000F5214*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800F8418 000F5218*/ PPC::Runtime::ASM::b(.L_800F8450);
RUNTIME_PPC_JUMP_LABEL(.L_800F841C, 0x800F841C) //this is a jump label
/*800F841C 000F521C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F8420 000F5220*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F8424 000F5224*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r27));
/*800F8428 000F5228*/ PPC::Runtime::ASM::add(context->r28, context->r0, context->r31);
/*800F842C 000F522C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800F8430 000F5230*/ PPC::Runtime::ASM::bl(fn_800F87E4);
/*800F8434 000F5234*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*800F8438 000F5238*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r27));
/*800F843C 000F523C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800F8440 000F5240*/ PPC::Runtime::ASM::addi(context->r6, context->r28, 0x4);
/*800F8444 000F5244*/ PPC::Runtime::ASM::bl(fn_8018C598);
/*800F8448 000F5248*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x18);
/*800F844C 000F524C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800F8450, 0x800F8450) //this is a jump label
/*800F8450 000F5250*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800F8454 000F5254*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800F8458 000F5258*/ PPC::Runtime::ASM::blt(.L_800F841C);
/*800F845C 000F525C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r27));
/*800F8460 000F5260*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F8464 000F5264*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*800F8468 000F5268*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_800F846C, 0x800F846C) //this is a jump label
/*800F846C 000F526C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800F8470 000F5270*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800F8474 000F5274*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F8478 000F5278*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F847C 000F527C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F8480 000F5280*/ PPC::Runtime::ASM::blr();
}