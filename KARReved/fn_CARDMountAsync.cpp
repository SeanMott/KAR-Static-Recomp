//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_EXIGetState.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn___CARDDefaultApiCallback.hpp"
#include "fn___CARDDefaultApiCallback.hpp"
#include "fn___CARDExtHandler.hpp"
#include "fn___CARDExtHandler.hpp"
#include "fn_EXIAttach.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_EXISetExiCallback.hpp"
#include "fn_OSCancelAlarm.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn___CARDMountCallback.hpp"
#include "fn___CARDMountCallback.hpp"
#include "fn___CARDUnlockedHandler.hpp"
#include "fn___CARDUnlockedHandler.hpp"
#include "EXILock.hpp"
#include "fn_DoMount.hpp"



void fn_CARDMountAsync(PPC::Runtime::GCContext* context)
{
/*803E634C 003E314C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E6350 003E3150*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E6354 003E3154*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803E6358 003E3158*/ PPC::Runtime::ASM::stmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 803E635C 003E315C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*803E6360 003E3160*/ PPC::Runtime::ASM::addi(context->r26, context->r4, 0x0);
/*803E6364 003E3164*/ PPC::Runtime::ASM::addi(context->r27, context->r5, 0x0);
/*803E6368 003E3168*/ PPC::Runtime::ASM::addi(context->r29, context->r6, 0x0);
/*803E636C 003E316C*/ PPC::Runtime::ASM::blt(.L_803E6378);
/*803E6370 003E3170*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x2);
/*803E6374 003E3174*/ PPC::Runtime::ASM::blt(.L_803E6380);
RUNTIME_PPC_JUMP_LABEL(.L_803E6378, 0x803E6378) //this is a jump label
/*803E6378 003E3178*/ PPC::Runtime::ASM::li(context->r3, -0x80);
/*803E637C 003E317C*/ PPC::Runtime::ASM::b(.L_803E64D8);
RUNTIME_PPC_JUMP_LABEL(.L_803E6380, 0x803E6380) //this is a jump label
/*803E6380 003E3180*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803E6384 003E3184*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30e3, context->r3));
/*803E6388 003E3188*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 24, 24);
/*803E638C 003E318C*/ PPC::Runtime::ASM::beq(.L_803E6398);
/*803E6390 003E3190*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E6394 003E3194*/ PPC::Runtime::ASM::b(.L_803E64D8);
RUNTIME_PPC_JUMP_LABEL(.L_803E6398, 0x803E6398) //this is a jump label
/*803E6398 003E3198*/ PPC::Runtime::ASM::mulli(context->r4, context->r30, 0x110);
/*803E639C 003E319C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E63A0 003E31A0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E63A4 003E31A4*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*803E63A8 003E31A8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E63AC 003E31AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803E63B0 003E31B0*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*803E63B4 003E31B4*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*803E63B8 003E31B8*/ PPC::Runtime::ASM::bne(.L_803E63CC);
/*803E63BC 003E31BC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803E63C0 003E31C0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E63C4 003E31C4*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*803E63C8 003E31C8*/ PPC::Runtime::ASM::b(.L_803E64D8);
RUNTIME_PPC_JUMP_LABEL(.L_803E63CC, 0x803E63CC) //this is a jump label
/*803E63CC 003E31CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803E63D0 003E31D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803E63D4 003E31D4*/ PPC::Runtime::ASM::bne(.L_803E63F8);
/*803E63D8 003E31D8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803E63DC 003E31DC*/ PPC::Runtime::ASM::bl(fn_EXIGetState);
/*803E63E0 003E31E0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 28, 28);
/*803E63E4 003E31E4*/ PPC::Runtime::ASM::beq(.L_803E63F8);
/*803E63E8 003E31E8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803E63EC 003E31EC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E63F0 003E31F0*/ PPC::Runtime::ASM::li(context->r3, -0x2);
/*803E63F4 003E31F4*/ PPC::Runtime::ASM::b(.L_803E64D8);
RUNTIME_PPC_JUMP_LABEL(.L_803E63F8, 0x803E63F8) //this is a jump label
/*803E63F8 003E31F8*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*803E63FC 003E31FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803E6400 003E3200*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*803E6404 003E3204*/ PPC::Runtime::ASM::stw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*803E6408 003E3208*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r31));
/*803E640C 003E320C*/ PPC::Runtime::ASM::beq(.L_803E6418);
/*803E6410 003E3210*/ PPC::Runtime::ASM::mr(context->r0, context->r29);
/*803E6414 003E3214*/ PPC::Runtime::ASM::b(.L_803E6420);
RUNTIME_PPC_JUMP_LABEL(.L_803E6418, 0x803E6418) //this is a jump label
/*803E6418 003E3218*/ PPC::Runtime::ASM::lis(context->r3, fn___CARDDefaultApiCallback @ Get_MemoryOffset_HighBit);
/*803E641C 003E321C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn___CARDDefaultApiCallback @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_803E6420, 0x803E6420) //this is a jump label
/*803E6420 003E3220*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r31));
/*803E6424 003E3224*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E6428 003E3228*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r31));
/*803E642C 003E322C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803E6430 003E3230*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803E6434 003E3234*/ PPC::Runtime::ASM::bne(.L_803E6468);
/*803E6438 003E3238*/ PPC::Runtime::ASM::lis(context->r3, fn___CARDExtHandler @ Get_MemoryOffset_HighBit);
/*803E643C 003E323C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn___CARDExtHandler @ Get_MemoryOffset_LowBit);
/*803E6440 003E3240*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803E6444 003E3244*/ PPC::Runtime::ASM::bl(fn_EXIAttach);
/*803E6448 003E3248*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E644C 003E324C*/ PPC::Runtime::ASM::bne(.L_803E6468);
/*803E6450 003E3250*/ PPC::Runtime::ASM::li(context->r0, -0x3);
/*803E6454 003E3254*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803E6458 003E3258*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803E645C 003E325C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E6460 003E3260*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E6464 003E3264*/ PPC::Runtime::ASM::b(.L_803E64D8);
RUNTIME_PPC_JUMP_LABEL(.L_803E6468, 0x803E6468) //this is a jump label
/*803E6468 003E3268*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*803E646C 003E326C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*803E6470 003E3270*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803E6474 003E3274*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803E6478 003E3278*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803E647C 003E327C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E6480 003E3280*/ PPC::Runtime::ASM::bl(fn_EXISetExiCallback);
/*803E6484 003E3284*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xe0);
/*803E6488 003E3288*/ PPC::Runtime::ASM::bl(fn_OSCancelAlarm);
/*803E648C 003E328C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r31));
/*803E6490 003E3290*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803E6494 003E3294*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r31));
/*803E6498 003E3298*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E649C 003E329C*/ PPC::Runtime::ASM::lis(context->r3, fn___CARDMountCallback @ Get_MemoryOffset_HighBit);
/*803E64A0 003E32A0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn___CARDMountCallback @ Get_MemoryOffset_LowBit);
/*803E64A4 003E32A4*/ PPC::Runtime::ASM::lis(context->r3, fn___CARDUnlockedHandler @ Get_MemoryOffset_HighBit);
/*803E64A8 003E32A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r31));
/*803E64AC 003E32AC*/ PPC::Runtime::ASM::addi(context->r5, context->r3, fn___CARDUnlockedHandler @ Get_MemoryOffset_LowBit);
/*803E64B0 003E32B0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803E64B4 003E32B4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E64B8 003E32B8*/ PPC::Runtime::ASM::bl(EXILock);
/*803E64BC 003E32BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E64C0 003E32C0*/ PPC::Runtime::ASM::bne(.L_803E64CC);
/*803E64C4 003E32C4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803E64C8 003E32C8*/ PPC::Runtime::ASM::b(.L_803E64D8);
RUNTIME_PPC_JUMP_LABEL(.L_803E64CC, 0x803E64CC) //this is a jump label
/*803E64CC 003E32CC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r31));
/*803E64D0 003E32D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803E64D4 003E32D4*/ PPC::Runtime::ASM::bl(fn_DoMount);
RUNTIME_PPC_JUMP_LABEL(.L_803E64D8, 0x803E64D8) //this is a jump label
/*803E64D8 003E32D8*/ PPC::Runtime::ASM::lmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E64DC 003E32DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803E64E0 003E32E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803E64E4 003E32E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E64E8 003E32E8*/ PPC::Runtime::ASM::blr();
}