//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802854CC.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802854CC.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802854CC.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_80285130.hpp"



void fn_802A2258(PPC::Runtime::GCContext* context)
{
/*802A2258 0029F058*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A225C 0029F05C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A2260 0029F060*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A2264 0029F064*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A2268 0029F068*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A226C 0029F06C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A2270 0029F070  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A2274 0029F074*/ PPC::Runtime::ASM::beq(.L_802A234C);
/*802A2278 0029F078*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C42D0 @ Get_MemoryOffset_HighBit);
/*802A227C 0029F07C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x24a8);
/*802A2280 0029F080*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C42D0 @ Get_MemoryOffset_LowBit);
/*802A2284 0029F084*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2288 0029F088*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A228C 0029F08C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A2290 0029F090*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A2294 0029F094*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A2298 0029F098*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A229C 0029F09C*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A22A0 0029F0A0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x211c);
/*802A22A4 0029F0A4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22A8 0029F0A8*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A22AC 0029F0AC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2018);
/*802A22B0 0029F0B0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22B4 0029F0B4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A22B8 0029F0B8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1c8c);
/*802A22BC 0029F0BC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22C0 0029F0C0*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A22C4 0029F0C4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1b88);
/*802A22C8 0029F0C8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22CC 0029F0CC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A22D0 0029F0D0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x17fc);
/*802A22D4 0029F0D4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22D8 0029F0D8*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A22DC 0029F0DC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1470);
/*802A22E0 0029F0E0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22E4 0029F0E4*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A22E8 0029F0E8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10e4);
/*802A22EC 0029F0EC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22F0 0029F0F0*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A22F4 0029F0F4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xfe0);
/*802A22F8 0029F0F8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A22FC 0029F0FC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A2300 0029F100*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xc54);
/*802A2304 0029F104*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2308 0029F108*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A230C 0029F10C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A2310 0029F110*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2314 0029F114*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A2318 0029F118*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x53c);
/*802A231C 0029F11C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2320 0029F120*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A2324 0029F124*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1b0);
/*802A2328 0029F128*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A232C 0029F12C*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A2330 0029F130*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A2334 0029F134*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A2338 0029F138*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A233C 0029F13C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A2340 0029F140*/ PPC::Runtime::ASM::ble(.L_802A234C);
/*802A2344 0029F144*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A2348 0029F148*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A234C, 0x802A234C) //this is a jump label
/*802A234C 0029F14C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A2350 0029F150*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A2354 0029F154*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A2358 0029F158*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A235C 0029F15C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A2360 0029F160*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A2364 0029F164*/ PPC::Runtime::ASM::blr();
}