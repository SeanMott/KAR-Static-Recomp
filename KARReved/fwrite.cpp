//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__begin_critical_region.hpp"
#include "__fwrite.hpp"
#include "__end_critical_region.hpp"



void fwrite(PPC::Runtime::GCContext* context)
{
/*803B3BE8 003B09E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803B3BEC 003B09EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B3BF0 003B09F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B3BF4 003B09F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B3BF8 003B09F8*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*803B3BFC 003B09FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B3C00 003B0A00*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*803B3C04 003B0A04*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B3C08 003B0A08*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*803B3C0C 003B0A0C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803B3C10 003B0A10*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*803B3C14 003B0A14*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803B3C18 003B0A18*/ PPC::Runtime::ASM::bl(__begin_critical_region);
/*803B3C1C 003B0A1C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803B3C20 003B0A20*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*803B3C24 003B0A24*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*803B3C28 003B0A28*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*803B3C2C 003B0A2C*/ PPC::Runtime::ASM::bl(__fwrite);
/*803B3C30 003B0A30*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*803B3C34 003B0A34*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803B3C38 003B0A38*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803B3C3C 003B0A3C*/ PPC::Runtime::ASM::bl(__end_critical_region);
/*803B3C40 003B0A40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B3C44 003B0A44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803B3C48 003B0A48*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B3C4C 003B0A4C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B3C50 003B0A50*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B3C54 003B0A54*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803B3C58 003B0A58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B3C5C 003B0A5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803B3C60 003B0A60*/ PPC::Runtime::ASM::blr();
}