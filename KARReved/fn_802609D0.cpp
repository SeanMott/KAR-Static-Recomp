//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_802609D0(PPC::Runtime::GCContext* context)
{
/*802609D0 0025D7D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802609D4 0025D7D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802609D8 0025D7D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802609DC 0025D7DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802609E0 0025D7E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802609E4 0025D7E4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802609E8 0025D7E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802609EC 0025D7EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802609F0 0025D7F0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*802609F4 0025D7F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802609F8 0025D7F8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802609FC 0025D7FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80260A00 0025D800*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260A04 0025D804*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260A08 0025D808*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80260A0C 0025D80C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260A10 0025D810*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80260A14 0025D814*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260A18 0025D818*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260A1C 0025D81C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80260A20 0025D820*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260A24 0025D824*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80260A28 0025D828*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80260A2C 0025D82C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F84 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260A30 0025D830*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80260A34 0025D834*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260A38 0025D838*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260A3C 0025D83C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80260A40 0025D840*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80260A44 0025D844*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80260A48 0025D848*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80260A4C 0025D84C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260A50 0025D850*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260A54 0025D854*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260A58 0025D858*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80260A5C 0025D85C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80260A60 0025D860*/ PPC::Runtime::ASM::blr();
}