//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80261840.hpp"
#include "fn_80261840.hpp"
#include "fn_80255438.hpp"



void fn_dWorldQuickStep(PPC::Runtime::GCContext* context)
{
/*80261990 0025E790*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80261994 0025E794*/ PPC::Runtime::ASM::mflr(context->r0);
/*80261998 0025E798*/ PPC::Runtime::ASM::lis(context->r4, fn_80261840 @ Get_MemoryOffset_HighBit);
/*8026199C 0025E79C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802619A0 0025E7A0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80261840 @ Get_MemoryOffset_LowBit);
/*802619A4 0025E7A4*/ PPC::Runtime::ASM::bl(fn_80255438);
/*802619A8 0025E7A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802619AC 0025E7AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802619B0 0025E7B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802619B4 0025E7B4*/ PPC::Runtime::ASM::blr();
}