//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80159FB0(PPC::Runtime::GCContext* context)
{
/*80159FB0 00156DB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80159FB4 00156DB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80159FB8 00156DB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80159FBC 00156DBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80159FC0 00156DC0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80159FC4 00156DC4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80159FC8 00156DC8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80159FCC 00156DCC*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80159FD0 00156DD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e0, context->r3));
/*80159FD4 00156DD4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80159FD8 00156DD8*/ PPC::Runtime::ASM::beq(.L_8015A004);
/*80159FDC 00156DDC*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80159FE0 00156DE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80159FE4 00156DE4*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x38);
/*80159FE8 00156DE8*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*80159FEC 00156DEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r4));
/*80159FF0 00156DF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*80159FF4 00156DF4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80159FF8 00156DF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80159FFC 00156DFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*8015A000 00156E00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015A004, 0x8015A004) //this is a jump label
/*8015A004 00156E04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015A008 00156E08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015A00C 00156E0C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015A010 00156E10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015A014 00156E14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015A018 00156E18*/ PPC::Runtime::ASM::blr();
}