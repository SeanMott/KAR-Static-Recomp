//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015CA20(PPC::Runtime::GCContext* context)
{
/*8015CA20 00159820*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015CA24 00159824*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015CA28 00159828*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015CA2C 0015982C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015CA30 00159830*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015CA34 00159834*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015CA38 00159838*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015CA3C 0015983C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015CA40, 0x8015CA40) //this is a jump label
/*8015CA40 00159840*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015CA44 00159844*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015CA48 00159848*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015CA4C 0015984C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8015CA50 00159850*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x860, context->r30));
/*8015CA54 00159854*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015CA58 00159858*/ PPC::Runtime::ASM::beq(.L_8015CA64);
/*8015CA5C 0015985C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015CA60 00159860*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x860, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015CA64, 0x8015CA64) //this is a jump label
/*8015CA64 00159864*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015CA68 00159868*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015CA6C 0015986C*/ PPC::Runtime::ASM::blt(.L_8015CA40);
/*8015CA70 00159870*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015CA74 00159874*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015CA78 00159878*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015CA7C 0015987C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015CA80 00159880*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015CA84 00159884*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015CA88 00159888*/ PPC::Runtime::ASM::blr();
}