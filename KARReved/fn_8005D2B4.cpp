//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005C6DC.hpp"



void fn_8005D2B4(PPC::Runtime::GCContext* context)
{
/*8005D2B4 0005A0B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005D2B8 0005A0B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005D2BC 0005A0BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D2C0 0005A0C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D2C4 0005A0C4*/ PPC::Runtime::ASM::bl(fn_8005C6DC);
/*8005D2C8 0005A0C8*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005D2CC 0005A0CC*/ PPC::Runtime::ASM::bne(.L_8005D2D8);
/*8005D2D0 0005A0D0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8005D2D4 0005A0D4*/ PPC::Runtime::ASM::b(.L_8005D320);
RUNTIME_PPC_JUMP_LABEL(.L_8005D2D8, 0x8005D2D8) //this is a jump label
/*8005D2D8 0005A0D8*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005D2DC 0005A0DC*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*8005D2E0 0005A0E0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005D2E4 0005A0E4*/ PPC::Runtime::ASM::li(context->r0, 0x5);
/*8005D2E8 0005A0E8*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r3);
/*8005D2EC 0005A0EC*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x22);
/*8005D2F0 0005A0F0*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43, context->r5));
/*8005D2F4 0005A0F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D2F8 0005A0F8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8005D2FC 0005A0FC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a1, context->r5));
/*8005D300 0005A100*/ PPC::Runtime::ASM::bl(fn_80444984);
/*8005D304 0005A104*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8005D308 0005A108*/ PPC::Runtime::ASM::bne(.L_8005D320);
/*8005D30C 0005A10C*/ PPC::Runtime::ASM::lis(context->r3, String_lbaudio.c @ Get_MemoryOffset_HighBit);
/*8005D310 0005A110*/ PPC::Runtime::ASM::li(context->r4, 0x6aa);
/*8005D314 0005A114*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_lbaudio.c @ Get_MemoryOffset_LowBit);
/*8005D318 0005A118*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*8005D31C 0005A11C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005D320, 0x8005D320) //this is a jump label
/*8005D320 0005A120*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D324 0005A124*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D328 0005A128*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D32C 0005A12C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005D330 0005A130*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005D334 0005A134*/ PPC::Runtime::ASM::blr();
}