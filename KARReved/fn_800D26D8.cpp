//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7A50.hpp"
#include "fn_800EA084.hpp"



void fn_800D26D8(PPC::Runtime::GCContext* context)
{
/*800D26D8 000CF4D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D26DC 000CF4DC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D26E0 000CF4E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D26E4 000CF4E4*/ PPC::Runtime::ASM::mulli(context->r0, context->r3, 0x140);
/*800D26E8 000CF4E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D26EC 000CF4EC*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D26F0 000CF4F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r4));
/*800D26F4 000CF4F4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800D26F8 000CF4F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800D26FC 000CF4FC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800D2700 000CF500*/ PPC::Runtime::ASM::beq(.L_800D273C);
/*800D2704 000CF504*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D2708 000CF508*/ PPC::Runtime::ASM::bl(fn_800F7A50);
/*800D270C 000CF50C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800D2710 000CF510*/ PPC::Runtime::ASM::beq(.L_800D273C);
/*800D2714 000CF514*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800D2718 000CF518*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800D271C 000CF51C*/ PPC::Runtime::ASM::beq(.L_800D273C);
/*800D2720 000CF520*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800D2724 000CF524*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800D2728 000CF528*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D272C 000CF52C*/ PPC::Runtime::ASM::beq(.L_800D273C);
/*800D2730 000CF530*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x118);
/*800D2734 000CF534*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800D2738 000CF538*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_800D273C, 0x800D273C) //this is a jump label
/*800D273C 000CF53C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2740 000CF540*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D2744 000CF544*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D2748 000CF548*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D274C 000CF54C*/ PPC::Runtime::ASM::blr();
}