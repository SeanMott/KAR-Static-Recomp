//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__global_destructor_chain.hpp"
#include "__global_destructor_chain.hpp"



void __destroy_global_chain(PPC::Runtime::GCContext* context)
{
/*803AD168 003A9F68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803AD16C 003A9F6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803AD170 003A9F70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AD174 003A9F74*/ PPC::Runtime::ASM::b(.L_803AD194);
RUNTIME_PPC_JUMP_LABEL(.L_803AD178, 0x803AD178) //this is a jump label
/*803AD178 003A9F78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803AD17C 003A9F7C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*803AD180 003A9F80*/ PPC::Runtime::ASM::stw(context->r0, __global_destructor_chain @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803AD184 003A9F84*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803AD188 003A9F88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803AD18C 003A9F8C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*803AD190 003A9F90*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_803AD194, 0x803AD194) //this is a jump label
/*803AD194 003A9F94*/ PPC::Runtime::ASM::lwz(context->r3, __global_destructor_chain @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803AD198 003A9F98*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803AD19C 003A9F9C*/ PPC::Runtime::ASM::bne(.L_803AD178);
/*803AD1A0 003A9FA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AD1A4 003A9FA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803AD1A8 003A9FA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803AD1AC 003A9FAC*/ PPC::Runtime::ASM::blr();
}