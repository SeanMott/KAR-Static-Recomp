//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_FuncWithAJumpTable_15.hpp"
#include "fn_80048370.hpp"
#include "fn_800483C0.hpp"
#include "fn_8004840C.hpp"
#include "fn_80048440.hpp"
#include "fn_80048490.hpp"
#include "fn_800484D8.hpp"
#include "fn_80048514.hpp"
#include "fn_80048548.hpp"
#include "fn_8004857C.hpp"
#include "fn_800485B0.hpp"
#include "fn_80048600.hpp"
#include "fn_80048644.hpp"
#include "fn_80048678.hpp"
#include "fn_800486AC.hpp"
#include "fn_800486E0.hpp"
#include "fn_80048714.hpp"
#include "fn_80048748.hpp"
#include "fn_8004877C.hpp"
#include "fn_800487AC.hpp"
#include "fn_80048800.hpp"
#include "fn_80048854.hpp"
#include "fn_80048888.hpp"
#include "fn_800488B8.hpp"
#include "fn_FuncWithAJumpTable_16.hpp"
#include "fn_80048A24.hpp"
#include "fn_80048A70.hpp"
#include "fn_80048A98.hpp"
#include "fn_80048AD4.hpp"



void fn_FuncWithAJumpTable_12(PPC::Runtime::GCContext* context)
{
/*80047A08 00044808*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80047A0C 0004480C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80047A10 00044810*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80047A14 00044814*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80047A18 00044818*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r3));
/*80047A1C 0004481C*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80047A20 00044820*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1c);
/*80047A24 00044824*/ PPC::Runtime::ASM::bgt(.L_80047B28);
/*80047A28 00044828*/ PPC::Runtime::ASM::lis(context->r3, FuncWithAJumpTable_12_JumpTable_80496FBC @ Get_MemoryOffset_HighBit);
/*80047A2C 0004482C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80047A30 00044830*/ PPC::Runtime::ASM::addi(context->r3, context->r3, FuncWithAJumpTable_12_JumpTable_80496FBC @ Get_MemoryOffset_LowBit);
/*80047A34 00044834*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80047A38 00044838*/ PPC::Runtime::ASM::mtctr(context->r0);
/*80047A3C 0004483C*/ PPC::Runtime::ASM::bctr();
/*80047A40 00044840*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_15);
/*80047A44 00044844*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A48 00044848*/ PPC::Runtime::ASM::bl(fn_80048370);
/*80047A4C 0004484C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A50 00044850*/ PPC::Runtime::ASM::bl(fn_800483C0);
/*80047A54 00044854*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A58 00044858*/ PPC::Runtime::ASM::bl(fn_8004840C);
/*80047A5C 0004485C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A60 00044860*/ PPC::Runtime::ASM::bl(fn_80048440);
/*80047A64 00044864*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A68 00044868*/ PPC::Runtime::ASM::bl(fn_80048490);
/*80047A6C 0004486C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A70 00044870*/ PPC::Runtime::ASM::bl(fn_800484D8);
/*80047A74 00044874*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A78 00044878*/ PPC::Runtime::ASM::bl(fn_80048514);
/*80047A7C 0004487C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A80 00044880*/ PPC::Runtime::ASM::bl(fn_80048548);
/*80047A84 00044884*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A88 00044888*/ PPC::Runtime::ASM::bl(fn_8004857C);
/*80047A8C 0004488C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A90 00044890*/ PPC::Runtime::ASM::bl(fn_800485B0);
/*80047A94 00044894*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047A98 00044898*/ PPC::Runtime::ASM::bl(fn_80048600);
/*80047A9C 0004489C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AA0 000448A0*/ PPC::Runtime::ASM::bl(fn_80048644);
/*80047AA4 000448A4*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AA8 000448A8*/ PPC::Runtime::ASM::bl(fn_80048678);
/*80047AAC 000448AC*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AB0 000448B0*/ PPC::Runtime::ASM::bl(fn_800486AC);
/*80047AB4 000448B4*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AB8 000448B8*/ PPC::Runtime::ASM::bl(fn_800486E0);
/*80047ABC 000448BC*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AC0 000448C0*/ PPC::Runtime::ASM::bl(fn_80048714);
/*80047AC4 000448C4*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AC8 000448C8*/ PPC::Runtime::ASM::bl(fn_80048748);
/*80047ACC 000448CC*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AD0 000448D0*/ PPC::Runtime::ASM::bl(fn_8004877C);
/*80047AD4 000448D4*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AD8 000448D8*/ PPC::Runtime::ASM::bl(fn_800487AC);
/*80047ADC 000448DC*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AE0 000448E0*/ PPC::Runtime::ASM::bl(fn_80048800);
/*80047AE4 000448E4*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AE8 000448E8*/ PPC::Runtime::ASM::bl(fn_80048854);
/*80047AEC 000448EC*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AF0 000448F0*/ PPC::Runtime::ASM::bl(fn_80048888);
/*80047AF4 000448F4*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047AF8 000448F8*/ PPC::Runtime::ASM::bl(fn_800488B8);
/*80047AFC 000448FC*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047B00 00044900*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_16);
/*80047B04 00044904*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047B08 00044908*/ PPC::Runtime::ASM::bl(fn_80048A24);
/*80047B0C 0004490C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047B10 00044910*/ PPC::Runtime::ASM::bl(fn_80048A70);
/*80047B14 00044914*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047B18 00044918*/ PPC::Runtime::ASM::bl(fn_80048A98);
/*80047B1C 0004491C*/ PPC::Runtime::ASM::b(.L_80047B3C);
/*80047B20 00044920*/ PPC::Runtime::ASM::bl(fn_80048AD4);
/*80047B24 00044924*/ PPC::Runtime::ASM::b(.L_80047B3C);
RUNTIME_PPC_JUMP_LABEL(.L_80047B28, 0x80047B28) //this is a jump label
/*80047B28 00044928*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_157 @ Get_MemoryOffset_HighBit);
/*80047B2C 0004492C*/ PPC::Runtime::ASM::li(context->r4, 0x122);
/*80047B30 00044930*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_157 @ Get_MemoryOffset_LowBit);
/*80047B34 00044934*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51B0 @ Get_MemoryOffset_SDA21);
/*80047B38 00044938*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80047B3C, 0x80047B3C) //this is a jump label
/*80047B3C 0004493C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80047B40 00044940*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80047B44 00044944*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80047B48 00044948*/ PPC::Runtime::ASM::blr();
}