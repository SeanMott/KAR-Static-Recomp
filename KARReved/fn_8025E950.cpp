//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025E950(PPC::Runtime::GCContext* context)
{
/*8025E950 0025B750*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E954 0025B754*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E958 0025B758*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E95C 0025B75C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E960 0025B760*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025E964 0025B764*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E968 0025B768*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025E96C 0025B76C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E970 0025B770*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E974 0025B774*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E978 0025B778*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025E97C 0025B77C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E980 0025B780*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E984 0025B784*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E988 0025B788*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E98C 0025B78C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E990 0025B790*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E994 0025B794*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E998 0025B798*/ PPC::Runtime::ASM::blr();
}