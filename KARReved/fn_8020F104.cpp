//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_8020F104(PPC::Runtime::GCContext* context)
{
/*8020F104 0020BF04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020F108 0020BF08*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020F10C 0020BF0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020F110 0020BF10*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8020F114 0020BF14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020F118 0020BF18*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020F11C 0020BF1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*8020F120 0020BF20*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*8020F124 0020BF24*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2500 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020F128 0020BF28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8020F12C 0020BF2C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2504 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020F130 0020BF30*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*8020F134 0020BF34*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8020F138 0020BF38*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8020F13C 0020BF3C*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*8020F140 0020BF40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020F144 0020BF44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020F148 0020BF48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020F14C 0020BF4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020F150 0020BF50*/ PPC::Runtime::ASM::blr();
}