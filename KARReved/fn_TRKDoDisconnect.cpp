//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "fn_803C2388.hpp"
#include "fn_TRKConstructEvent.hpp"
#include "fn_TRKPostEvent.hpp"



void fn_TRKDoDisconnect(PPC::Runtime::GCContext* context)
{
/*803BF654 003BC454*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*803BF658 003BC458*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BF65C 003BC45C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056B858 @ Get_MemoryOffset_HighBit);
/*803BF660 003BC460*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BF664 003BC464*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*803BF668 003BC468*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_18056B858 @ Get_MemoryOffset_LowBit);
/*803BF66C 003BC46C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BF670 003BC470*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*803BF674 003BC474*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803BF678 003BC478*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803BF67C 003BC47C*/ PPC::Runtime::ASM::bl(memset);
/*803BF680 003BC480*/ PPC::Runtime::ASM::li(context->r3, 0x80);
/*803BF684 003BC484*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BF688 003BC488*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BF68C 003BC48C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BF690 003BC490*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*803BF694 003BC494*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*803BF698 003BC498*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BF69C 003BC49C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BF6A0 003BC4A0*/ PPC::Runtime::ASM::bl(fn_803C2388);
/*803BF6A4 003BC4A4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803BF6A8 003BC4A8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803BF6AC 003BC4AC*/ PPC::Runtime::ASM::bl(fn_TRKConstructEvent);
/*803BF6B0 003BC4B0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803BF6B4 003BC4B4*/ PPC::Runtime::ASM::bl(fn_TRKPostEvent);
/*803BF6B8 003BC4B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*803BF6BC 003BC4BC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803BF6C0 003BC4C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BF6C4 003BC4C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*803BF6C8 003BC4C8*/ PPC::Runtime::ASM::blr();
}