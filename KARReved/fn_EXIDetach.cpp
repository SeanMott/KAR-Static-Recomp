//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "__OSMaskInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_EXIDetach(PPC::Runtime::GCContext* context)
{
/*803EAB04 003E7904*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EAB08 003E7908*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EAB0C 003E790C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803EAB10 003E7910*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EAB14 003E7914*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EAB18 003E7918*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EAB1C 003E791C*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803EAB20 003E7920*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EAB24 003E7924*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EAB28 003E7928*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EAB2C 003E792C*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*803EAB30 003E7930*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EAB34 003E7934*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803EAB38 003E7938*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAB3C 003E793C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*803EAB40 003E7940*/ PPC::Runtime::ASM::bne(.L_803EAB54);
/*803EAB44 003E7944*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EAB48 003E7948*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAB4C 003E794C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EAB50 003E7950*/ PPC::Runtime::ASM::b(.L_803EABA4);
RUNTIME_PPC_JUMP_LABEL(.L_803EAB54, 0x803EAB54) //this is a jump label
/*803EAB54 003E7954*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAB58 003E7958*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 27);
/*803EAB5C 003E795C*/ PPC::Runtime::ASM::beq(.L_803EAB7C);
/*803EAB60 003E7960*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803EAB64 003E7964*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803EAB68 003E7968*/ PPC::Runtime::ASM::bne(.L_803EAB7C);
/*803EAB6C 003E796C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EAB70 003E7970*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAB74 003E7974*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EAB78 003E7978*/ PPC::Runtime::ASM::b(.L_803EABA4);
RUNTIME_PPC_JUMP_LABEL(.L_803EAB7C, 0x803EAB7C) //this is a jump label
/*803EAB7C 003E797C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAB80 003E7980*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 29, 27);
/*803EAB84 003E7984*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EAB88 003E7988*/ PPC::Runtime::ASM::lis(context->r3, 0x50);
/*803EAB8C 003E798C*/ PPC::Runtime::ASM::mulli(context->r0, context->r29, 0x3);
/*803EAB90 003E7990*/ PPC::Runtime::ASM::srw(context->r3, context->r3, context->r0);
/*803EAB94 003E7994*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
/*803EAB98 003E7998*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EAB9C 003E799C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EABA0 003E79A0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EABA4, 0x803EABA4) //this is a jump label
/*803EABA4 003E79A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803EABA8 003E79A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EABAC 003E79AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EABB0 003E79B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EABB4 003E79B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803EABB8 003E79B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EABBC 003E79BC*/ PPC::Runtime::ASM::blr();
}