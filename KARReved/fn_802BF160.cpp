//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8030D510.hpp"
#include "fn_8030D51C.hpp"



void fn_802BF160(PPC::Runtime::GCContext* context)
{
/*802BF160 002BBF60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802BF164 002BBF64*/ PPC::Runtime::ASM::mflr(context->r0);
/*802BF168 002BBF68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802BF16C 002BBF6C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*802BF170 002BBF70*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802BF174 002BBF74*/ PPC::Runtime::ASM::beq(.L_802BF1A8);
/*802BF178 002BBF78*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*802BF17C 002BBF7C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802BF180 002BBF80*/ PPC::Runtime::ASM::li(context->r5, lbl_805D89F8 @ Get_MemoryOffset_SDA21);
/*802BF184 002BBF84*/ PPC::Runtime::ASM::li(context->r6, lbl_805D8898 @ Get_MemoryOffset_SDA21);
/*802BF188 002BBF88*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*802BF18C 002BBF8C*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*802BF190 002BBF90*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802BF194 002BBF94*/ PPC::Runtime::ASM::bl(fn_8039A7BC);
/* 802BF198 002BBF98  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*802BF19C 002BBF9C*/ PPC::Runtime::ASM::beq(.L_802BF1A8);
/*802BF1A0 002BBFA0*/ PPC::Runtime::ASM::bl(fn_8030D510);
/*802BF1A4 002BBFA4*/ PPC::Runtime::ASM::bl(fn_8030D51C);
RUNTIME_PPC_JUMP_LABEL(.L_802BF1A8, 0x802BF1A8) //this is a jump label
/*802BF1A8 002BBFA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802BF1AC 002BBFAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802BF1B0 002BBFB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802BF1B4 002BBFB4*/ PPC::Runtime::ASM::blr();
}