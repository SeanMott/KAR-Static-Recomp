//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A4740.hpp"
#include "fn_801A4740.hpp"
#include "fn_801A2AA4.hpp"
#include "fn_801A4694.hpp"
#include "fn_801A4694.hpp"
#include "fn_801A2B0C.hpp"



void fn_801A47E8(PPC::Runtime::GCContext* context)
{
/*801A47E8 001A15E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A47EC 001A15EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A47F0 001A15F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A47F4 001A15F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r3));
/*801A47F8 001A15F8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801A47FC 001A15FC*/ PPC::Runtime::ASM::bne(.L_801A4810);
/*801A4800 001A1600*/ PPC::Runtime::ASM::lis(context->r4, fn_801A4740 @ Get_MemoryOffset_HighBit);
/*801A4804 001A1604*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801A4740 @ Get_MemoryOffset_LowBit);
/*801A4808 001A1608*/ PPC::Runtime::ASM::bl(fn_801A2AA4);
/*801A480C 001A160C*/ PPC::Runtime::ASM::b(.L_801A481C);
RUNTIME_PPC_JUMP_LABEL(.L_801A4810, 0x801A4810) //this is a jump label
/*801A4810 001A1610*/ PPC::Runtime::ASM::lis(context->r4, fn_801A4694 @ Get_MemoryOffset_HighBit);
/*801A4814 001A1614*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801A4694 @ Get_MemoryOffset_LowBit);
/*801A4818 001A1618*/ PPC::Runtime::ASM::bl(fn_801A2B0C);
RUNTIME_PPC_JUMP_LABEL(.L_801A481C, 0x801A481C) //this is a jump label
/*801A481C 001A161C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4820 001A1620*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A4824 001A1624*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A4828 001A1628*/ PPC::Runtime::ASM::blr();
}