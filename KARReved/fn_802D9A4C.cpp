//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFFB8.hpp"



void fn_802D9A4C(PPC::Runtime::GCContext* context)
{
/*802D9A4C 002D684C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802D9A50 002D6850*/ PPC::Runtime::ASM::mflr(context->r0);
/*802D9A54 002D6854*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802D9A58 002D6858*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802D9A5C 002D685C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802D9A60 002D6860*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*802D9A64 002D6864*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 802D9A68 002D6868  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*802D9A6C 002D686C*/ PPC::Runtime::ASM::beq(.L_802D9B0C);
/*802D9A70 002D6870*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1FEC @ Get_MemoryOffset_HighBit);
/*802D9A74 002D6874*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802D9A78 002D6878*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804D1FEC @ Get_MemoryOffset_LowBit);
/*802D9A7C 002D687C*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*802D9A80 002D6880*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*802D9A84 002D6884*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*802D9A88 002D6888*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4c, context->r3));
/*802D9A8C 002D688C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*802D9A90 002D6890*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc4, context->r31));
/*802D9A94 002D6894*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
/*802D9A98 002D6898*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802D9A9C 002D689C*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*802D9AA0 002D68A0*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc8, context->r31));
/*802D9AA4 002D68A4*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*802D9AA8 002D68A8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E3780 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D9AAC 002D68AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbcc, context->r31));
/*802D9AB0 002D68B0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbd8, context->r31));
/*802D9AB4 002D68B4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbd4, context->r31));
/*802D9AB8 002D68B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbd0, context->r31));
/*802D9ABC 002D68BC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbdc, context->r31));
/*802D9AC0 002D68C0*/ PPC::Runtime::ASM::beq(.L_802D9AFC);
/*802D9AC4 002D68C4*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D6F5C @ Get_MemoryOffset_HighBit);
/*802D9AC8 002D68C8*/ PPC::Runtime::ASM::lis(context->r3, String_ "AC_RUN_LOO" 1 @ Get_MemoryOffset_HighBit);
/*802D9ACC 002D68CC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804D6F5C @ Get_MemoryOffset_LowBit);
/*802D9AD0 002D68D0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802D9AD4 002D68D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*802D9AD8 002D68D8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, String_ "AC_RUN_LOO" 1 @ Get_MemoryOffset_LowBit);
/*802D9ADC 002D68DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*802D9AE0 002D68E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*802D9AE4 002D68E4*/ PPC::Runtime::ASM::bl(fn_802EFFB8);
/*802D9AE8 002D68E8*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*802D9AEC 002D68EC*/ PPC::Runtime::ASM::beq(.L_802D9AFC);
/*802D9AF0 002D68F0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*802D9AF4 002D68F4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*802D9AF8 002D68F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_802D9AFC, 0x802D9AFC) //this is a jump label
/*802D9AFC 002D68FC*/ PPC::Runtime::ASM::extsh.(context->r0, context->r30);
/*802D9B00 002D6900*/ PPC::Runtime::ASM::ble(.L_802D9B0C);
/*802D9B04 002D6904*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*802D9B08 002D6908*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802D9B0C, 0x802D9B0C) //this is a jump label
/*802D9B0C 002D690C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802D9B10 002D6910*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*802D9B14 002D6914*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802D9B18 002D6918*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802D9B1C 002D691C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D9B20 002D6920*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802D9B24 002D6924*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802D9B28 002D6928*/ PPC::Runtime::ASM::blr();
}