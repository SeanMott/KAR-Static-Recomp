//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DA3C0.hpp"
#include "fn_801EB898.hpp"



void fn_801EDB48(PPC::Runtime::GCContext* context)
{
/*801EDB48 001EA948*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801EDB4C 001EA94C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EDB50 001EA950*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801EDB54 001EA954*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801EDB58 001EA958*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801EDB5C 001EA95C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801EDB60 001EA960*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EDB64 001EA964*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801EDB68 001EA968*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r3));
/*801EDB6C 001EA96C*/ PPC::Runtime::ASM::bl(fn_801DA3C0);
/*801EDB70 001EA970*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EDB74 001EA974*/ PPC::Runtime::ASM::beq(.L_801EDB94);
/*801EDB78 001EA978*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f31);
/*801EDB7C 001EA97C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x654, context->r31));
/*801EDB80 001EA980*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*801EDB84 001EA984*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801EDB88 001EA988*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x874, context->r31));
/*801EDB8C 001EA98C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EDB90 001EA990*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x878, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801EDB94, 0x801EDB94) //this is a jump label
/*801EDB94 001EA994*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801EDB98 001EA998*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EDB9C 001EA99C*/ PPC::Runtime::ASM::bl(fn_801EB898);
/*801EDBA0 001EA9A0*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801EDBA4 001EA9A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801EDBA8 001EA9A8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801EDBAC 001EA9AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801EDBB0 001EA9B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EDBB4 001EA9B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801EDBB8 001EA9B8*/ PPC::Runtime::ASM::blr();
}