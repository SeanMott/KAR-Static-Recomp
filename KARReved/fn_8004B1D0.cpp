//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetClearcheckerType0Ptr.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_8000979C.hpp"



void fn_8004B1D0(PPC::Runtime::GCContext* context)
{
/*8004B1D0 00047FD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8004B1D4 00047FD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8004B1D8 00047FD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004B1DC 00047FDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8004B1E0 00047FE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8004B1E4 00047FE4*/ PPC::Runtime::ASM::bl(fn_gmGetClearcheckerType0Ptr);
/*8004B1E8 00047FE8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r3));
/*8004B1EC 00047FEC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8004B1F0, 0x8004B1F0) //this is a jump label
/*8004B1F0 00047FF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8004B1F4 00047FF4*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*8004B1F8 00047FF8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8004B1FC 00047FFC*/ PPC::Runtime::ASM::bne(.L_8004B214);
/*8004B200 00048000*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8004B204 00048004*/ PPC::Runtime::ASM::bl(fn_8000979C);
/*8004B208 00048008*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8004B20C 0004800C*/ PPC::Runtime::ASM::beq(.L_8004B214);
/*8004B210 00048010*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8004B214, 0x8004B214) //this is a jump label
/*8004B214 00048014*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*8004B218 00048018*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8004B21C 0004801C*/ PPC::Runtime::ASM::blt(.L_8004B1F0);
/*8004B220 00048020*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004B224 00048024*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8004B228 00048028*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8004B22C 0004802C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8004B230 00048030*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004B234 00048034*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8004B238 00048038*/ PPC::Runtime::ASM::blr();
}