//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029198C(PPC::Runtime::GCContext* context)
{
/*8029198C 0028E78C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80291990 0028E790*/ PPC::Runtime::ASM::mflr(context->r0);
/*80291994 0028E794*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291998 0028E798*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8029199C 0028E79C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*802919A0 0028E7A0*/ PPC::Runtime::ASM::beq(.L_802919C4);
/*802919A4 0028E7A4*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BCE74 @ Get_MemoryOffset_HighBit);
/*802919A8 0028E7A8*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*802919AC 0028E7AC*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BCE74 @ Get_MemoryOffset_LowBit);
/*802919B0 0028E7B0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802919B4 0028E7B4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802919B8 0028E7B8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802919BC 0028E7BC*/ PPC::Runtime::ASM::ble(.L_802919C4);
/*802919C0 0028E7C0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802919C4, 0x802919C4) //this is a jump label
/*802919C4 0028E7C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802919C8 0028E7C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802919CC 0028E7CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802919D0 0028E7D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802919D4 0028E7D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802919D8 0028E7D8*/ PPC::Runtime::ASM::blr();
}