//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025D3B0(PPC::Runtime::GCContext* context)
{
/*8025D3B0 0025A1B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025D3B4 0025A1B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025D3B8 0025A1B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D3BC 0025A1BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D3C0 0025A1C0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D3C4 0025A1C4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025D3C8 0025A1C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025D3CC 0025A1CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D3D0 0025A1D0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025D3D4 0025A1D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D3D8 0025A1D8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D3DC 0025A1DC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025D3E0 0025A1E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D3E4 0025A1E4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D3E8 0025A1E8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025D3EC 0025A1EC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D3F0 0025A1F0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025D3F4 0025A1F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D3F8 0025A1F8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D3FC 0025A1FC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025D400 0025A200*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D404 0025A204*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025D408 0025A208*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025D40C 0025A20C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EE4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D410 0025A210*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025D414 0025A214*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D418 0025A218*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D41C 0025A21C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025D420 0025A220*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025D424 0025A224*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025D428 0025A228*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025D42C 0025A22C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D430 0025A230*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D434 0025A234*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D438 0025A238*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025D43C 0025A23C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025D440 0025A240*/ PPC::Runtime::ASM::blr();
}