//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DE77C.hpp"



void fn_800D51FC(PPC::Runtime::GCContext* context)
{
/*800D51FC 000D1FFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D5200 000D2000*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D5204 000D2004*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5208 000D2008*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D520C 000D200C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D5210 000D2010*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r3));
/*800D5214 000D2014*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800D5218 000D2018*/ PPC::Runtime::ASM::bne(.L_800D5230);
/*800D521C 000D201C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_899 @ Get_MemoryOffset_HighBit);
/*800D5220 000D2020*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D5224 000D2024*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_899 @ Get_MemoryOffset_LowBit);
/*800D5228 000D2028*/ PPC::Runtime::ASM::li(context->r4, 0xd89);
/*800D522C 000D202C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D5230, 0x800D5230) //this is a jump label
/*800D5230 000D2030*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D5234 000D2034*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800D5238 000D2038*/ PPC::Runtime::ASM::bl(fn_800DE77C);
/*800D523C 000D203C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5240 000D2040*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D5244 000D2044*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D5248 000D2048*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D524C 000D204C*/ PPC::Runtime::ASM::blr();
}