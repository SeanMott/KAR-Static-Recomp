//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028F8A0(PPC::Runtime::GCContext* context)
{
/*8028F8A0 0028C6A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8028F8A4 0028C6A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028F8A8 0028C6A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028F8AC 0028C6AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8028F8B0 0028C6B0  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8028F8B4 0028C6B4*/ PPC::Runtime::ASM::beq(.L_8028F8D8);
/*8028F8B8 0028C6B8*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BE304 @ Get_MemoryOffset_HighBit);
/*8028F8BC 0028C6BC*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*8028F8C0 0028C6C0*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BE304 @ Get_MemoryOffset_LowBit);
/*8028F8C4 0028C6C4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028F8C8 0028C6C8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8028F8CC 0028C6CC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBD4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028F8D0 0028C6D0*/ PPC::Runtime::ASM::ble(.L_8028F8D8);
/*8028F8D4 0028C6D4*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028F8D8, 0x8028F8D8) //this is a jump label
/*8028F8D8 0028C6D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028F8DC 0028C6DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8028F8E0 0028C6E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028F8E4 0028C6E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028F8E8 0028C6E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028F8EC 0028C6EC*/ PPC::Runtime::ASM::blr();
}