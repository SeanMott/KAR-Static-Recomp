//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018C3B4.hpp"
#include "fn_801D7E38.hpp"



void fn_801D6F64(PPC::Runtime::GCContext* context)
{
/*801D6F64 001D3D64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D6F68 001D3D68*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D6F6C 001D3D6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D6F70 001D3D70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D6F74 001D3D74*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801D6F78 001D3D78*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x400);
/*801D6F7C 001D3D7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r3));
/*801D6F80 001D3D80*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0x774);
/*801D6F84 001D3D84*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x310, context->r31));
/*801D6F88 001D3D88*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x754, context->r31));
/*801D6F8C 001D3D8C*/ PPC::Runtime::ASM::bl(fn_8018C3B4);
/*801D6F90 001D3D90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D6F94 001D3D94*/ PPC::Runtime::ASM::bl(fn_801D7E38);
/*801D6F98 001D3D98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D6F9C 001D3D9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D6FA0 001D3DA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D6FA4 001D3DA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D6FA8 001D3DA8*/ PPC::Runtime::ASM::blr();
}