//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801DB154(PPC::Runtime::GCContext* context)
{
/*801DB154 001D7F54*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801DB158 001D7F58*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DB15C 001D7F5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DB160 001D7F60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DB164 001D7F64*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801DB168 001D7F68*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc10, context->r3));
/*801DB16C 001D7F6C*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801DB170 001D7F70*/ PPC::Runtime::ASM::beq(.L_801DB17C);
/*801DB174 001D7F74*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801DB178 001D7F78*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801DB17C, 0x801DB17C) //this is a jump label
/*801DB17C 001D7F7C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc38, context->r31));
/*801DB180 001D7F80*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801DB184 001D7F84*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801DB188 001D7F88*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc38, context->r31));
/*801DB18C 001D7F8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DB190 001D7F90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DB194 001D7F94*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DB198 001D7F98*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801DB19C 001D7F9C*/ PPC::Runtime::ASM::blr();
}