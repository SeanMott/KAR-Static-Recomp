//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80413FF0(PPC::Runtime::GCContext* context)
{
/*80413FF0 00410DF0*/ PPC::Runtime::ASM::lis(context->r4, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_HighBit);
/*80413FF4 00410DF4*/ PPC::Runtime::ASM::lis(context->r3, lbl_80503F08 @ Get_MemoryOffset_HighBit);
/*80413FF8 00410DF8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_LowBit);
/*80413FFC 00410DFC*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*80414000 00410E00*/ PPC::Runtime::ASM::addi(context->r10, context->r4, 0x110);
/*80414004 00410E04*/ PPC::Runtime::ASM::addi(context->r5, context->r3, lbl_80503F08 @ Get_MemoryOffset_LowBit);
/*80414008 00410E08*/ PPC::Runtime::ASM::li(context->r4, 0x8);
RUNTIME_PPC_JUMP_LABEL(.L_8041400C, 0x8041400C) //this is a jump label
/*8041400C 00410E0C*/ PPC::Runtime::ASM::li(context->r8, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80414010, 0x80414010) //this is a jump label
/*80414010 00410E10*/ PPC::Runtime::ASM::subi(context->r7, context->r10, 0x4);
/*80414014 00410E14*/ PPC::Runtime::ASM::subi(context->r6, context->r5, 0x4);
/*80414018 00410E18*/ PPC::Runtime::ASM::mtctr(context->r4);
RUNTIME_PPC_JUMP_LABEL(.L_8041401C, 0x8041401C) //this is a jump label
/*8041401C 00410E1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*80414020 00410E20*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r6));
/*80414024 00410E24*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*80414028 00410E28*/ PPC::Runtime::ASM::stwu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r7));
/*8041402C 00410E2C*/ PPC::Runtime::ASM::bdnz(.L_8041401C);
/*80414030 00410E30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*80414034 00410E34*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*80414038 00410E38*/ PPC::Runtime::ASM::cmpwi(context->r8, 0x4);
/*8041403C 00410E3C*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x44);
/*80414040 00410E40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*80414044 00410E44*/ PPC::Runtime::ASM::blt(.L_80414010);
/*80414048 00410E48*/ PPC::Runtime::ASM::addi(context->r9, context->r9, 0x1);
/*8041404C 00410E4C*/ PPC::Runtime::ASM::cmpwi(context->r9, 0x4);
/*80414050 00410E50*/ PPC::Runtime::ASM::blt(.L_8041400C);
/*80414054 00410E54*/ PPC::Runtime::ASM::blr();
}