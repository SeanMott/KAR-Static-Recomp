//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5B44.hpp"



void fn_800BAB04(PPC::Runtime::GCContext* context)
{
/*800BAB04 000B7904*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800BAB08 000B7908*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BAB0C 000B790C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800BAB10 000B7910*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BAB14 000B7914*/ PPC::Runtime::ASM::blt(.L_800BAB20);
/*800BAB18 000B7918*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800BAB1C 000B791C*/ PPC::Runtime::ASM::blt(.L_800BAB28);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB20, 0x800BAB20) //this is a jump label
/*800BAB20 000B7920*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BAB24 000B7924*/ PPC::Runtime::ASM::b(.L_800BAB3C);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB28, 0x800BAB28) //this is a jump label
/*800BAB28 000B7928*/ PPC::Runtime::ASM::lis(context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BAB2C 000B792C*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800BAB30 000B7930*/ PPC::Runtime::ASM::addi(context->r3, context->r5, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BAB34 000B7934*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800BAB38 000B7938*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800BAB3C, 0x800BAB3C) //this is a jump label
/*800BAB3C 000B793C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BAB40 000B7940*/ PPC::Runtime::ASM::beq(.L_800BAB4C);
/*800BAB44 000B7944*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BAB48 000B7948*/ PPC::Runtime::ASM::b(.L_800BAB50);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB4C, 0x800BAB4C) //this is a jump label
/*800BAB4C 000B794C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB50, 0x800BAB50) //this is a jump label
/*800BAB50 000B7950*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BAB54 000B7954*/ PPC::Runtime::ASM::beq(.L_800BAB60);
/*800BAB58 000B7958*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800BAB5C 000B795C*/ PPC::Runtime::ASM::b(.L_800BAB64);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB60, 0x800BAB60) //this is a jump label
/*800BAB60 000B7960*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BAB64, 0x800BAB64) //this is a jump label
/*800BAB64 000B7964*/ PPC::Runtime::ASM::bl(fn_800B5B44);
/*800BAB68 000B7968*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BAB6C 000B796C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BAB70 000B7970*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800BAB74 000B7974*/ PPC::Runtime::ASM::blr();
}