//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018D850.hpp"
#include "fn_8018CCD0.hpp"
#include "fn_800F5944.hpp"



void fn_800F5284(PPC::Runtime::GCContext* context)
{
/*800F5284 000F2084*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F5288 000F2088*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F528C 000F208C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F5290 000F2090*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F5294 000F2094*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F5298 000F2098*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F529C 000F209C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F52A0 000F20A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*800F52A4 000F20A4*/ PPC::Runtime::ASM::bl(fn_8018D850);
/*800F52A8 000F20A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*800F52AC 000F20AC*/ PPC::Runtime::ASM::bl(fn_8018CCD0);
/*800F52B0 000F20B0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F52B4 000F20B4*/ PPC::Runtime::ASM::bl(fn_800F5944);
/*800F52B8 000F20B8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r31));
/*800F52BC 000F20BC*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800F52C0 000F20C0*/ PPC::Runtime::ASM::beq(.L_800F52D0);
/*800F52C4 000F20C4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F52C8 000F20C8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800F52CC 000F20CC*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800F52D0, 0x800F52D0) //this is a jump label
/*800F52D0 000F20D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F52D4 000F20D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F52D8 000F20D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F52DC 000F20DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F52E0 000F20E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F52E4 000F20E4*/ PPC::Runtime::ASM::blr();
}