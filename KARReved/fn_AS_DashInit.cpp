//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_80195588.hpp"
#include "fn_801A2D80.hpp"
#include "fn_801A2FE8.hpp"
#include "fn_801BD3AC.hpp"
#include "fn_801BD3AC.hpp"
#include "fn_801A304C.hpp"



void fn_AS_DashInit(PPC::Runtime::GCContext* context)
{
/*801BC86C 001B966C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BC870 001B9670*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BC874 001B9674*/ PPC::Runtime::ASM::lis(context->r4, lbl_804AF808 @ Get_MemoryOffset_HighBit);
/*801BC878 001B9678*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E17E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BC87C 001B967C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BC880 001B9680*/ PPC::Runtime::ASM::addi(context->r7, context->r4, lbl_804AF808 @ Get_MemoryOffset_LowBit);
/*801BC884 001B9684*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801BC888 001B9688*/ PPC::Runtime::ASM::li(context->r4, 0x78);
/*801BC88C 001B968C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BC890 001B9690*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BC894 001B9694*/ PPC::Runtime::ASM::li(context->r6, 0x100);
/*801BC898 001B9698*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d8, context->r3));
/*801BC89C 001B969C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9e0, context->r3));
/*801BC8A0 001B96A0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d8, context->r3));
/*801BC8A4 001B96A4*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 2, 24);
/*801BC8A8 001B96A8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r3));
/*801BC8AC 001B96AC*/ PPC::Runtime::ASM::add(context->r0, context->r8, context->r0);
/*801BC8B0 001B96B0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801BC8B4 001B96B4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r5));
/*801BC8B8 001B96B8*/ PPC::Runtime::ASM::lwzx(context->r5, context->r7, context->r0);
/*801BC8BC 001B96BC*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801BC8C0 001B96C0*/ PPC::Runtime::ASM::lis(context->r4, 0x2);
/*801BC8C4 001B96C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E17E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BC8C8 001B96C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC8CC 001B96CC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x3e);
/*801BC8D0 001B96D0*/ PPC::Runtime::ASM::bl(fn_80195588);
/*801BC8D4 001B96D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC8D8 001B96D8*/ PPC::Runtime::ASM::bl(fn_801A2D80);
/*801BC8DC 001B96DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC8E0 001B96E0*/ PPC::Runtime::ASM::bl(fn_801A2FE8);
/*801BC8E4 001B96E4*/ PPC::Runtime::ASM::lis(context->r4, fn_801BD3AC @ Get_MemoryOffset_HighBit);
/*801BC8E8 001B96E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC8EC 001B96EC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801BD3AC @ Get_MemoryOffset_LowBit);
/*801BC8F0 001B96F0*/ PPC::Runtime::ASM::bl(fn_801A304C);
/*801BC8F4 001B96F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BC8F8 001B96F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BC8FC 001B96FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BC900 001B9700*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BC904 001B9704*/ PPC::Runtime::ASM::blr();
}