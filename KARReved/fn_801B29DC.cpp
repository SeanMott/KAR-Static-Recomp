//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019BFB4.hpp"



void fn_801B29DC(PPC::Runtime::GCContext* context)
{
/*801B29DC 001AF7DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B29E0 001AF7E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B29E4 001AF7E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B29E8 001AF7E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r3));
/*801B29EC 001AF7EC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*801B29F0 001AF7F0*/ PPC::Runtime::ASM::bne(.L_801B2A38);
/*801B29F4 001AF7F4*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa14, context->r3));
/*801B29F8 001AF7F8*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*801B29FC 001AF7FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801B2A00 001AF800*/ PPC::Runtime::ASM::extsb(context->r0, context->r4);
/*801B2A04 001AF804*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E1588 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B2A08 001AF808*/ PPC::Runtime::ASM::xoris(context->r0, context->r0, 0x8000);
/*801B2A0C 001AF80C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1584 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B2A10 001AF810*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B2A14 001AF814*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801B2A18 001AF818*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f1);
/*801B2A1C 001AF81C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f2, context->f0);
/*801B2A20 001AF820*/ PPC::Runtime::ASM::bne(.L_801B2A38);
/*801B2A24 001AF824*/ PPC::Runtime::ASM::li(context->r4, 0x25);
/*801B2A28 001AF828*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B2A2C 001AF82C*/ PPC::Runtime::ASM::bl(fn_8019BFB4);
/*801B2A30 001AF830*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801B2A34 001AF834*/ PPC::Runtime::ASM::b(.L_801B2A3C);
RUNTIME_PPC_JUMP_LABEL(.L_801B2A38, 0x801B2A38) //this is a jump label
/*801B2A38 001AF838*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801B2A3C, 0x801B2A3C) //this is a jump label
/*801B2A3C 001AF83C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B2A40 001AF840*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B2A44 001AF844*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B2A48 001AF848*/ PPC::Runtime::ASM::blr();
}