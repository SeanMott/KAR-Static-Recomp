//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000A0F8.hpp"
#include "fn_chooseEvent.hpp"



void fn_checkEventTimer(PPC::Runtime::GCContext* context)
{
/*800EE270 000EB070*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EE274 000EB074*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EE278 000EB078*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE27C 000EB07C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EE280 000EB080*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800EE284 000EB084*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800EE288 000EB088*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE28C 000EB08C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE290 000EB090*/ PPC::Runtime::ASM::bl(fn_8000A0F8);
/*800EE294 000EB094*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800EE298 000EB098*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*800EE29C 000EB09C*/ PPC::Runtime::ASM::blt(.L_800EE310);
/*800EE2A0 000EB0A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EE2A4 000EB0A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800EE2A8 000EB0A8*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*800EE2AC 000EB0AC*/ PPC::Runtime::ASM::blt(.L_800EE310);
/*800EE2B0 000EB0B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EE2B4 000EB0B4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE2B8 000EB0B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800EE2BC 000EB0BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800EE2C0 000EB0C0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800EE2C4 000EB0C4*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800EE2C8 000EB0C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800EE2CC 000EB0CC*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*800EE2D0 000EB0D0*/ PPC::Runtime::ASM::blt(.L_800EE308);
/*800EE2D4 000EB0D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EE2D8 000EB0D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE2DC 000EB0DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EE2E0 000EB0E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800EE2E4 000EB0E4*/ PPC::Runtime::ASM::subf(context->r3, context->r3, context->r0);
/*800EE2E8 000EB0E8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*800EE2EC 000EB0EC*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800EE2F0 000EB0F0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EE2F4 000EB0F4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800EE2F8 000EB0F8*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r3);
/*800EE2FC 000EB0FC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800EE300 000EB100*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EE304 000EB104*/ PPC::Runtime::ASM::b(.L_800EE310);
RUNTIME_PPC_JUMP_LABEL(.L_800EE308, 0x800EE308) //this is a jump label
/*800EE308 000EB108*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800EE30C 000EB10C*/ PPC::Runtime::ASM::bl(fn_chooseEvent);
RUNTIME_PPC_JUMP_LABEL(.L_800EE310, 0x800EE310) //this is a jump label
/*800EE310 000EB110*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE314 000EB114*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EE318 000EB118*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800EE31C 000EB11C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EE320 000EB120*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EE324 000EB124*/ PPC::Runtime::ASM::blr();
}