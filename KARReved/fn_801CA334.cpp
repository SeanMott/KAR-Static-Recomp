//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DD17C.hpp"
#include "fn_801D5CA0.hpp"



void fn_801CA334(PPC::Runtime::GCContext* context)
{
/*801CA334 001C7134*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CA338 001C7138*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CA33C 001C713C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CA340 001C7140*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CA344 001C7144*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801CA348 001C7148*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r3));
/* 801CA34C 001C714C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801CA350 001C7150*/ PPC::Runtime::ASM::bne(.L_801CA3E4);
/*801CA354 001C7154*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r31));
/* 801CA358 001C7158  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801CA35C 001C715C*/ PPC::Runtime::ASM::bne(.L_801CA3E4);
/*801CA360 001C7160*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x794, context->r31));
/*801CA364 001C7164*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CA368 001C7168*/ PPC::Runtime::ASM::bne(.L_801CA3E4);
/*801CA36C 001C716C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CA370 001C7170*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1A08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CA374 001C7174*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f2);
/*801CA378 001C7178*/ PPC::Runtime::ASM::bge(.L_801CA3B0);
/*801CA37C 001C717C*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801CA380 001C7180*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CA384 001C7184*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CA388 001C7188*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f2);
/*801CA38C 001C718C*/ PPC::Runtime::ASM::ble(.L_801CA3B0);
/*801CA390 001C7190*/ PPC::Runtime::ASM::fmr(context->f1, context->f2);
/*801CA394 001C7194*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CA398 001C7198*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801CA39C 001C719C*/ PPC::Runtime::ASM::bl(fn_801DD17C);
/*801CA3A0 001C71A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801CA3A4 001C71A4*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*801CA3A8 001C71A8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801CA3AC 001C71AC*/ PPC::Runtime::ASM::bl(fn_801D5CA0);
RUNTIME_PPC_JUMP_LABEL(.L_801CA3B0, 0x801CA3B0) //this is a jump label
/*801CA3B0 001C71B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CA3B4 001C71B4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801CA3B8 001C71B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801CA3BC 001C71BC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x798, context->r31));
/*801CA3C0 001C71C0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CA3C4 001C71C4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 6, 25, 25);
/*801CA3C8 001C71C8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CA3CC 001C71CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CA3D0 001C71D0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*801CA3D4 001C71D4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CA3D8 001C71D8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CA3DC 001C71DC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*801CA3E0 001C71E0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801CA3E4, 0x801CA3E4) //this is a jump label
/*801CA3E4 001C71E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CA3E8 001C71E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CA3EC 001C71EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CA3F0 001C71F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CA3F4 001C71F4*/ PPC::Runtime::ASM::blr();
}