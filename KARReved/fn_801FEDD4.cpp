//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018CB04.hpp"
#include "fn_802041B0.hpp"



void fn_801FEDD4(PPC::Runtime::GCContext* context)
{
/*801FEDD4 001FBBD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FEDD8 001FBBD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FEDDC 001FBBDC*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801FEDE0 001FBBE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FEDE4 001FBBE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FEDE8 001FBBE8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FEDEC 001FBBEC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801FEDF0 001FBBF0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb08, context->r31));
/*801FEDF4 001FBBF4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*801FEDF8 001FBBF8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb08, context->r31));
/*801FEDFC 001FBBFC*/ PPC::Runtime::ASM::ble(.L_801FEE08);
/*801FEE00 001FBC00*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa7c, context->r31));
/*801FEE04 001FBC04*/ PPC::Runtime::ASM::b(.L_801FEE0C);
RUNTIME_PPC_JUMP_LABEL(.L_801FEE08, 0x801FEE08) //this is a jump label
/*801FEE08 001FBC08*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa7c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801FEE0C, 0x801FEE0C) //this is a jump label
/*801FEE0C 001FBC0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r31));
/*801FEE10 001FBC10*/ PPC::Runtime::ASM::bl(fn_8018CB04);
/*801FEE14 001FBC14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801FEE18 001FBC18*/ PPC::Runtime::ASM::bl(fn_802041B0);
/*801FEE1C 001FBC1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FEE20 001FBC20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FEE24 001FBC24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FEE28 001FBC28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FEE2C 001FBC2C*/ PPC::Runtime::ASM::blr();
}