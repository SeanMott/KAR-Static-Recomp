//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___sinit_ParticleSystem_cpp.hpp"
#include "fn_rdLoadCommon.hpp"
#include "fn_801906A4.hpp"
#include "fn_801901EC.hpp"
#include "fn_801937CC.hpp"



void fn_8018DD14(PPC::Runtime::GCContext* context)
{
/*8018DD14 0018AB14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8018DD18 0018AB18*/ PPC::Runtime::ASM::mflr(context->r0);
/*8018DD1C 0018AB1C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559E38 @ Get_MemoryOffset_HighBit);
/*8018DD20 0018AB20*/ PPC::Runtime::ASM::li(context->r4, 0xaa0);
/*8018DD24 0018AB24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018DD28 0018AB28*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DD2C 0018AB2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018DD30 0018AB30*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80559E38 @ Get_MemoryOffset_LowBit);
/*8018DD34 0018AB34*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8018DD38 0018AB38*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DD3C 0018AB3C*/ PPC::Runtime::ASM::bl(fn___sinit_ParticleSystem_cpp);
/*8018DD40 0018AB40*/ PPC::Runtime::ASM::bl(fn_rdLoadCommon);
/*8018DD44 0018AB44*/ PPC::Runtime::ASM::bl(fn_801906A4);
/*8018DD48 0018AB48*/ PPC::Runtime::ASM::bl(fn_801901EC);
/*8018DD4C 0018AB4C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*8018DD50 0018AB50*/ PPC::Runtime::ASM::li(context->r4, 0x320);
/*8018DD54 0018AB54*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DD58 0018AB58*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DD5C 0018AB5C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x58);
/*8018DD60 0018AB60*/ PPC::Runtime::ASM::li(context->r4, 0x118);
/*8018DD64 0018AB64*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DD68 0018AB68*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DD6C 0018AB6C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x84);
/*8018DD70 0018AB70*/ PPC::Runtime::ASM::li(context->r4, 0x168);
/*8018DD74 0018AB74*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DD78 0018AB78*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DD7C 0018AB7C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xb0);
/*8018DD80 0018AB80*/ PPC::Runtime::ASM::li(context->r4, 0x80);
/*8018DD84 0018AB84*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DD88 0018AB88*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DD8C 0018AB8C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xdc);
/*8018DD90 0018AB90*/ PPC::Runtime::ASM::li(context->r4, 0xc8);
/*8018DD94 0018AB94*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DD98 0018AB98*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DD9C 0018AB9C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x108);
/*8018DDA0 0018ABA0*/ PPC::Runtime::ASM::li(context->r4, 0x28);
/*8018DDA4 0018ABA4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8018DDA8 0018ABA8*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*8018DDAC 0018ABAC*/ PPC::Runtime::ASM::bl(fn_801937CC);
/*8018DDB0 0018ABB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018DDB4 0018ABB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018DDB8 0018ABB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8018DDBC 0018ABBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8018DDC0 0018ABC0*/ PPC::Runtime::ASM::blr();
}