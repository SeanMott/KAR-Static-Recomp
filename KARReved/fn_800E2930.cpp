//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E1A04.hpp"
#include "fn_800E2458.hpp"
#include "fn_800E20A4.hpp"



void fn_800E2930(PPC::Runtime::GCContext* context)
{
/*800E2930 000DF730*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E2934 000DF734*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E2938 000DF738*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E293C 000DF73C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800E2940 000DF740*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800E2944 000DF744*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800E2948 000DF748*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_FLOAT_4 @ Get_MemoryOffset_HighBit);
/*800E294C 000DF74C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E2950 000DF750*/ PPC::Runtime::ASM::addi(context->r31, context->r4, STRUCT_FLOAT_4 @ Get_MemoryOffset_LowBit);
/*800E2954 000DF754*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800E2958 000DF758*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E295C 000DF75C*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*800E2960 000DF760*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r28));
/*800E2964 000DF764*/ PPC::Runtime::ASM::beq(.L_800E2AA8);
/*800E2968 000DF768*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800E296C 000DF76C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*800E2970 000DF770*/ PPC::Runtime::ASM::bgt(.L_800E2984);
/*800E2974 000DF774*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*800E2978 000DF778*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x18c);
/*800E297C 000DF77C*/ PPC::Runtime::ASM::li(context->r4, 0x189);
/*800E2980 000DF780*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E2984, 0x800E2984) //this is a jump label
/*800E2984 000DF784*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800E2988 000DF788*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800E298C 000DF78C*/ PPC::Runtime::ASM::b(.L_800E2A84);
RUNTIME_PPC_JUMP_LABEL(.L_800E2990, 0x800E2990) //this is a jump label
/*800E2990 000DF790*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r28));
/*800E2994 000DF794*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x0);
/*800E2998 000DF798*/ PPC::Runtime::ASM::bne(.L_800E29AC);
/*800E299C 000DF79C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x48);
/*800E29A0 000DF7A0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x54);
/*800E29A4 000DF7A4*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800E29A8 000DF7A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E29AC, 0x800E29AC) //this is a jump label
/*800E29AC 000DF7AC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800E29B0 000DF7B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800E29B4 000DF7B4*/ PPC::Runtime::ASM::blt(.L_800E29C8);
/*800E29B8 000DF7B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800E29BC 000DF7BC*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800E29C0 000DF7C0*/ PPC::Runtime::ASM::bge(.L_800E29C8);
/*800E29C4 000DF7C4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E29C8, 0x800E29C8) //this is a jump label
/*800E29C8 000DF7C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E29CC 000DF7CC*/ PPC::Runtime::ASM::bne(.L_800E29E0);
/*800E29D0 000DF7D0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x48);
/*800E29D4 000DF7D4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x60);
/*800E29D8 000DF7D8*/ PPC::Runtime::ASM::li(context->r4, 0x1e);
/*800E29DC 000DF7DC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E29E0, 0x800E29E0) //this is a jump label
/*800E29E0 000DF7E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800E29E4 000DF7E4*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r30);
/*800E29E8 000DF7E8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800E29EC 000DF7EC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E29F0 000DF7F0*/ PPC::Runtime::ASM::beq(.L_800E2A04);
/*800E29F4 000DF7F4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*800E29F8 000DF7F8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1a4);
/*800E29FC 000DF7FC*/ PPC::Runtime::ASM::li(context->r4, 0x18d);
/*800E2A00 000DF800*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E2A04, 0x800E2A04) //this is a jump label
/*800E2A04 000DF804*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r28));
/*800E2A08 000DF808*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x0);
/*800E2A0C 000DF80C*/ PPC::Runtime::ASM::bne(.L_800E2A20);
/*800E2A10 000DF810*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x48);
/*800E2A14 000DF814*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x54);
/*800E2A18 000DF818*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800E2A1C 000DF81C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E2A20, 0x800E2A20) //this is a jump label
/*800E2A20 000DF820*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800E2A24 000DF824*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800E2A28 000DF828*/ PPC::Runtime::ASM::blt(.L_800E2A3C);
/*800E2A2C 000DF82C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800E2A30 000DF830*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800E2A34 000DF834*/ PPC::Runtime::ASM::bge(.L_800E2A3C);
/*800E2A38 000DF838*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E2A3C, 0x800E2A3C) //this is a jump label
/*800E2A3C 000DF83C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E2A40 000DF840*/ PPC::Runtime::ASM::bne(.L_800E2A54);
/*800E2A44 000DF844*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x48);
/*800E2A48 000DF848*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x60);
/*800E2A4C 000DF84C*/ PPC::Runtime::ASM::li(context->r4, 0x1e);
/*800E2A50 000DF850*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E2A54, 0x800E2A54) //this is a jump label
/*800E2A54 000DF854*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800E2A58 000DF858*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x4);
/*800E2A5C 000DF85C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800E2A60 000DF860*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800E2A64 000DF864*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E2A68 000DF868*/ PPC::Runtime::ASM::beq(.L_800E2A7C);
/*800E2A6C 000DF86C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*800E2A70 000DF870*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1dc);
/*800E2A74 000DF874*/ PPC::Runtime::ASM::li(context->r4, 0x18e);
/*800E2A78 000DF878*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E2A7C, 0x800E2A7C) //this is a jump label
/*800E2A7C 000DF87C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x18);
/*800E2A80 000DF880*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E2A84, 0x800E2A84) //this is a jump label
/*800E2A84 000DF884*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800E2A88 000DF888*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800E2A8C 000DF88C*/ PPC::Runtime::ASM::blt(.L_800E2990);
/*800E2A90 000DF890*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E2A94 000DF894*/ PPC::Runtime::ASM::bl(fn_800E1A04);
/*800E2A98 000DF898*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E2A9C 000DF89C*/ PPC::Runtime::ASM::bl(fn_800E2458);
/*800E2AA0 000DF8A0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E2AA4 000DF8A4*/ PPC::Runtime::ASM::bl(fn_800E20A4);
RUNTIME_PPC_JUMP_LABEL(.L_800E2AA8, 0x800E2AA8) //this is a jump label
/*800E2AA8 000DF8A8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800E2AAC 000DF8AC*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800E2AB0 000DF8B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E2AB4 000DF8B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E2AB8 000DF8B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E2ABC 000DF8BC*/ PPC::Runtime::ASM::blr();
}