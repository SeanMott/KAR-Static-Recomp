//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "SetExiInterruptMask.hpp"
#include "OSRestoreInterrupts.hpp"



void EXILock(PPC::Runtime::GCContext* context)
{
/*803EB380 003E8180*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EB384 003E8184*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EB388 003E8188*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803EB38C 003E818C*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EB390 003E8190*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*803EB394 003E8194*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x0);
/*803EB398 003E8198*/ PPC::Runtime::ASM::addi(context->r28, context->r5, 0x0);
/*803EB39C 003E819C*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EB3A0 003E81A0*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EB3A4 003E81A4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EB3A8 003E81A8*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r4);
/*803EB3AC 003E81AC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EB3B0 003E81B0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803EB3B4 003E81B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EB3B8 003E81B8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 27);
/*803EB3BC 003E81BC*/ PPC::Runtime::ASM::beq(.L_803EB438);
/*803EB3C0 003E81C0*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*803EB3C4 003E81C4*/ PPC::Runtime::ASM::beq(.L_803EB428);
/*803EB3C8 003E81C8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EB3CC 003E81CC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*803EB3D0 003E81D0*/ PPC::Runtime::ASM::mtctr(context->r4);
/*803EB3D4 003E81D4*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*803EB3D8 003E81D8*/ PPC::Runtime::ASM::ble(.L_803EB400);
RUNTIME_PPC_JUMP_LABEL(.L_803EB3DC, 0x803EB3DC) //this is a jump label
/*803EB3DC 003E81DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*803EB3E0 003E81E0*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*803EB3E4 003E81E4*/ PPC::Runtime::ASM::bne(.L_803EB3F8);
/*803EB3E8 003E81E8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EB3EC 003E81EC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EB3F0 003E81F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB3F4 003E81F4*/ PPC::Runtime::ASM::b(.L_803EB460);
RUNTIME_PPC_JUMP_LABEL(.L_803EB3F8, 0x803EB3F8) //this is a jump label
/*803EB3F8 003E81F8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x8);
/*803EB3FC 003E81FC*/ PPC::Runtime::ASM::bdnz(.L_803EB3DC);
RUNTIME_PPC_JUMP_LABEL(.L_803EB400, 0x803EB400) //this is a jump label
/*803EB400 003E8200*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*803EB404 003E8204*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*803EB408 003E8208*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*803EB40C 003E820C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*803EB410 003E8210*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*803EB414 003E8214*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*803EB418 003E8218*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*803EB41C 003E821C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*803EB420 003E8220*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*803EB424 003E8224*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_803EB428, 0x803EB428) //this is a jump label
/*803EB428 003E8228*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EB42C 003E822C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EB430 003E8230*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB434 003E8234*/ PPC::Runtime::ASM::b(.L_803EB460);
RUNTIME_PPC_JUMP_LABEL(.L_803EB438, 0x803EB438) //this is a jump label
/*803EB438 003E8238*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EB43C 003E823C*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x10);
/*803EB440 003E8240*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EB444 003E8244*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*803EB448 003E8248*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803EB44C 003E824C*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803EB450 003E8250*/ PPC::Runtime::ASM::bl(SetExiInterruptMask);
/*803EB454 003E8254*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EB458 003E8258*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EB45C 003E825C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EB460, 0x803EB460) //this is a jump label
/*803EB460 003E8260*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803EB464 003E8264*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EB468 003E8268*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803EB46C 003E826C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EB470 003E8270*/ PPC::Runtime::ASM::blr();
}