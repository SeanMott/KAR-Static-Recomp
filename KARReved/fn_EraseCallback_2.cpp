//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_WriteCallback_2.hpp"
#include "fn_WriteCallback_2.hpp"
#include "fn___CARDWrite.hpp"
#include "fn___CARDPutControlBlock.hpp"



void fn_EraseCallback_2(PPC::Runtime::GCContext* context)
{
/*803E4AC8 003E18C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E4ACC 003E18CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E4AD0 003E18D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803E4AD4 003E18D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E4AD8 003E18D8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E4ADC 003E18DC*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E4AE0 003E18E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E4AE4 003E18E4*/ PPC::Runtime::ASM::mulli(context->r5, context->r31, 0x110);
/*803E4AE8 003E18E8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E4AEC 003E18EC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/* 803E4AF0 003E18F0  7C 9D 23 79 */ mr. context->r29 , context->r4
/*803E4AF4 003E18F4*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r5);
/*803E4AF8 003E18F8*/ PPC::Runtime::ASM::blt(.L_803E4B34);
/*803E4AFC 003E18FC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r30));
/*803E4B00 003E1900*/ PPC::Runtime::ASM::lis(context->r3, fn_WriteCallback_2 @ Get_MemoryOffset_HighBit);
/*803E4B04 003E1904*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r30));
/*803E4B08 003E1908*/ PPC::Runtime::ASM::addi(context->r7, context->r3, fn_WriteCallback_2 @ Get_MemoryOffset_LowBit);
/*803E4B0C 003E190C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803E4B10 003E1910*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r5);
/*803E4B14 003E1914*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 13);
/*803E4B18 003E1918*/ PPC::Runtime::ASM::mullw(context->r4, context->r3, context->r0);
/*803E4B1C 003E191C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x0);
/*803E4B20 003E1920*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803E4B24 003E1924*/ PPC::Runtime::ASM::li(context->r5, 0x2000);
/*803E4B28 003E1928*/ PPC::Runtime::ASM::bl(fn___CARDWrite);
/* 803E4B2C 003E192C  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*803E4B30 003E1930*/ PPC::Runtime::ASM::bge(.L_803E4B74);
RUNTIME_PPC_JUMP_LABEL(.L_803E4B34, 0x803E4B34) //this is a jump label
/*803E4B34 003E1934*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r30));
/*803E4B38 003E1938*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E4B3C 003E193C*/ PPC::Runtime::ASM::bne(.L_803E4B4C);
/*803E4B40 003E1940*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803E4B44 003E1944*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*803E4B48 003E1948*/ PPC::Runtime::ASM::bl(fn___CARDPutControlBlock);
RUNTIME_PPC_JUMP_LABEL(.L_803E4B4C, 0x803E4B4C) //this is a jump label
/*803E4B4C 003E194C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r30));
/*803E4B50 003E1950*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E4B54 003E1954*/ PPC::Runtime::ASM::mr(context->r12, context->r0);
/*803E4B58 003E1958*/ PPC::Runtime::ASM::beq(.L_803E4B74);
/*803E4B5C 003E195C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E4B60 003E1960*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E4B64 003E1964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r30));
/*803E4B68 003E1968*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803E4B6C 003E196C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/* 803E4B70 003E1970  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E4B74, 0x803E4B74) //this is a jump label
/*803E4B74 003E1974*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803E4B78 003E1978*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E4B7C 003E197C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E4B80 003E1980*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E4B84 003E1984*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803E4B88 003E1988*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E4B8C 003E198C*/ PPC::Runtime::ASM::blr();
}