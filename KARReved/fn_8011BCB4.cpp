//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_80112050.hpp"
#include "fn_80059520.hpp"



void fn_8011BCB4(PPC::Runtime::GCContext* context)
{
/*8011BCB4 00118AB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011BCB8 00118AB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011BCBC 00118ABC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011BCC0 00118AC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011BCC4 00118AC4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011BCC8 00118AC8*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011BCCC 00118ACC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011BCD0 00118AD0*/ PPC::Runtime::ASM::bl(fn_80112050);
/*8011BCD4 00118AD4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1062 @ Get_MemoryOffset_HighBit);
/*8011BCD8 00118AD8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8011BCDC 00118ADC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1062 @ Get_MemoryOffset_LowBit);
/*8011BCE0 00118AE0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8011BCE4 00118AE4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x26c);
/*8011BCE8 00118AE8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8011BCEC 00118AEC*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8011BCF0 00118AF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011BCF4 00118AF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011BCF8 00118AF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011BCFC 00118AFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011BD00 00118B00*/ PPC::Runtime::ASM::blr();
}