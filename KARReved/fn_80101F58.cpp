//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7AD0.hpp"
#include "fn_800547E0.hpp"
#include "fn_800D7AD0.hpp"
#include "fn_killWhispy.hpp"
#include "fn_801023E8.hpp"



void fn_80101F58(PPC::Runtime::GCContext* context)
{
/*80101F58 000FED58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80101F5C 000FED5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80101F60 000FED60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80101F64 000FED64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80101F68 000FED68*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80101F6C 000FED6C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80101F70 000FED70*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80101F74 000FED74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80101F78 000FED78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r30));
/*80101F7C 000FED7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80101F80 000FED80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80101F84 000FED84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80101F88 000FED88*/ PPC::Runtime::ASM::ble(.L_80101FAC);
/*80101F8C 000FED8C*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*80101F90 000FED90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r30));
/*80101F94 000FED94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r30));
/*80101F98 000FED98*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80101F9C 000FED9C*/ PPC::Runtime::ASM::bgt(.L_80101FAC);
/*80101FA0 000FEDA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*80101FA4 000FEDA4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80101FA8 000FEDA8*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
RUNTIME_PPC_JUMP_LABEL(.L_80101FAC, 0x80101FAC) //this is a jump label
/*80101FAC 000FEDAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80101FB0 000FEDB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r30));
/*80101FB4 000FEDB4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*80101FB8 000FEDB8*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*80101FBC 000FEDBC*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*80101FC0 000FEDC0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80101FC4 000FEDC4*/ PPC::Runtime::ASM::bne(.L_80102018);
/*80101FC8 000FEDC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80101FCC 000FEDCC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80101FD0 000FEDD0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80101FD4 000FEDD4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*80101FD8 000FEDD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80101FDC 000FEDDC*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
/*80101FE0 000FEDE0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF95C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101FE4 000FEDE4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80101FE8 000FEDE8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*80101FEC 000FEDEC*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*80101FF0 000FEDF0*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*80101FF4 000FEDF4*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*80101FF8 000FEDF8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80101FFC 000FEDFC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80102000 000FEE00*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*80102004 000FEE04*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80102008 000FEE08*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010200C 000FEE0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*80102010 000FEE10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r30));
/*80102014 000FEE14*/ PPC::Runtime::ASM::bl(fn_801023E8);
RUNTIME_PPC_JUMP_LABEL(.L_80102018, 0x80102018) //this is a jump label
/*80102018 000FEE18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010201C 000FEE1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80102020 000FEE20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80102024 000FEE24*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80102028 000FEE28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010202C 000FEE2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80102030 000FEE30*/ PPC::Runtime::ASM::blr();
}