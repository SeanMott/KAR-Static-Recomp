//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8034D1F8.hpp"



void fn_803053B4(PPC::Runtime::GCContext* context)
{
/*803053B4 003021B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803053B8 003021B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803053BC 003021BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803053C0 003021C0*/ PPC::Runtime::ASM::bl(fn_8034D1F8);
/*803053C4 003021C4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r3));
/*803053C8 003021C8*/ PPC::Runtime::ASM::bl(fn___cvt_fp2unsigned);
/*803053CC 003021CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803053D0 003021D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803053D4 003021D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803053D8 003021D8*/ PPC::Runtime::ASM::blr();
}