//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80212D88(PPC::Runtime::GCContext* context)
{
/*80212D88 0020FB88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80212D8C 0020FB8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80212D90 0020FB90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80212D94 0020FB94*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80212D98 0020FB98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80212D9C 0020FB9C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80212DA0 0020FBA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80212DA4 0020FBA4*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80212DA8 0020FBA8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2578 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80212DAC 0020FBAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80212DB0 0020FBB0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E257C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80212DB4 0020FBB4*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80212DB8 0020FBB8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80212DBC 0020FBBC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80212DC0 0020FBC0*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80212DC4 0020FBC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80212DC8 0020FBC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80212DCC 0020FBCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80212DD0 0020FBD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80212DD4 0020FBD4*/ PPC::Runtime::ASM::blr();
}