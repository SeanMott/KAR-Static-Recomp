//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EE6CC.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_8022D5C8.hpp"



void fn_event_runAmok_start(PPC::Runtime::GCContext* context)
{
/*80110F88 0010DD88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80110F8C 0010DD8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80110F90 0010DD90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80110F94 0010DD94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80110F98 0010DD98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80110F9C 0010DD9C*/ PPC::Runtime::ASM::bl(fn_800EE6CC);
/*80110FA0 0010DDA0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80110FA4 0010DDA4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80110FA8, 0x80110FA8) //this is a jump label
/*80110FA8 0010DDA8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80110FAC 0010DDAC*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*80110FB0 0010DDB0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80110FB4 0010DDB4*/ PPC::Runtime::ASM::beq(.L_80110FC0);
/*80110FB8 0010DDB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*80110FBC 0010DDBC*/ PPC::Runtime::ASM::bne(.L_80110FCC);
RUNTIME_PPC_JUMP_LABEL(.L_80110FC0, 0x80110FC0) //this is a jump label
/*80110FC0 0010DDC0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80110FC4 0010DDC4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80110FC8 0010DDC8*/ PPC::Runtime::ASM::bl(fn_8022D5C8);
RUNTIME_PPC_JUMP_LABEL(.L_80110FCC, 0x80110FCC) //this is a jump label
/*80110FCC 0010DDCC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80110FD0 0010DDD0*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x5);
/*80110FD4 0010DDD4*/ PPC::Runtime::ASM::blt(.L_80110FA8);
/*80110FD8 0010DDD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80110FDC 0010DDDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80110FE0 0010DDE0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80110FE4 0010DDE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80110FE8 0010DDE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80110FEC 0010DDEC*/ PPC::Runtime::ASM::blr();
}