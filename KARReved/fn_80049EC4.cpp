//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetClearcheckerTypeP.hpp"



void fn_80049EC4(PPC::Runtime::GCContext* context)
{
/*80049EC4 00046CC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80049EC8 00046CC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80049ECC 00046CCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80049ED0 00046CD0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80049ED4 00046CD4*/ PPC::Runtime::ASM::bl(_savegpr_23);
/*80049ED8 00046CD8*/ PPC::Runtime::ASM::lis(context->r7, MemoryOffset_169 @ Get_MemoryOffset_HighBit);
/*80049EDC 00046CDC*/ PPC::Runtime::ASM::mr(context->r24, context->r3);
/*80049EE0 00046CE0*/ PPC::Runtime::ASM::mr(context->r23, context->r4);
/*80049EE4 00046CE4*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80049EE8 00046CE8*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*80049EEC 00046CEC*/ PPC::Runtime::ASM::addi(context->r27, context->r7, MemoryOffset_169 @ Get_MemoryOffset_LowBit);
/*80049EF0 00046CF0*/ PPC::Runtime::ASM::bl(fn_gmGetClearcheckerTypeP);
/*80049EF4 00046CF4*/ PPC::Runtime::ASM::clrlwi(context->r28, context->r23, 24);
/*80049EF8 00046CF8*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r28);
/*80049EFC 00046CFC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*80049F00 00046D00*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 29, 30);
/*80049F04 00046D04*/ PPC::Runtime::ASM::beq(.L_80049FAC);
/*80049F08 00046D08*/ PPC::Runtime::ASM::clrlwi(context->r26, context->r24, 24);
/*80049F0C 00046D0C*/ PPC::Runtime::ASM::clrlslwi(context->r29, context->r24, 24, 2);
/*80049F10 00046D10*/ PPC::Runtime::ASM::addi(context->r25, context->r27, 0x174);
/*80049F14 00046D14*/ PPC::Runtime::ASM::li(context->r23, 0x0);
/*80049F18 00046D18*/ PPC::Runtime::ASM::li(context->r24, String_ "PeriodAndOtherGeneralOperator" Get_MemoryOffset_SDA21);
/*80049F1C 00046D1C*/ PPC::Runtime::ASM::b(.L_80049F78);
RUNTIME_PPC_JUMP_LABEL(.L_80049F20, 0x80049F20) //this is a jump label
/*80049F20 00046D20*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x3);
/*80049F24 00046D24*/ PPC::Runtime::ASM::blt(.L_80049F48);
/*80049F28 00046D28*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*80049F2C 00046D2C*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x180);
/*80049F30 00046D30*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80049F34 00046D34*/ PPC::Runtime::ASM::bl(OSReport);
/*80049F38 00046D38*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x19c);
/*80049F3C 00046D3C*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*80049F40 00046D40*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D4 @ Get_MemoryOffset_SDA21);
/*80049F44 00046D44*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049F48, 0x80049F48) //this is a jump label
/*80049F48 00046D48*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r23, 24);
/*80049F4C 00046D4C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r25, context->r29);
/*80049F50 00046D50*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3);
/*80049F54 00046D54*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*80049F58 00046D58*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*80049F5C 00046D5C*/ PPC::Runtime::ASM::cmplw(context->r28, context->r0);
/*80049F60 00046D60*/ PPC::Runtime::ASM::bne(.L_80049F74);
/*80049F64 00046D64*/ PPC::Runtime::ASM::stb(context->r23, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80049F68 00046D68*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r3));
/*80049F6C 00046D6C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80049F70 00046D70*/ PPC::Runtime::ASM::b(.L_80049FB4);
RUNTIME_PPC_JUMP_LABEL(.L_80049F74, 0x80049F74) //this is a jump label
/*80049F74 00046D74*/ PPC::Runtime::ASM::addi(context->r23, context->r23, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80049F78, 0x80049F78) //this is a jump label
/*80049F78 00046D78*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x3);
/*80049F7C 00046D7C*/ PPC::Runtime::ASM::blt(.L_80049FA0);
/*80049F80 00046D80*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*80049F84 00046D84*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x180);
/*80049F88 00046D88*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80049F8C 00046D8C*/ PPC::Runtime::ASM::bl(OSReport);
/*80049F90 00046D90*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x19c);
/*80049F94 00046D94*/ PPC::Runtime::ASM::li(context->r4, 0x41);
/*80049F98 00046D98*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D4 @ Get_MemoryOffset_SDA21);
/*80049F9C 00046D9C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049FA0, 0x80049FA0) //this is a jump label
/*80049FA0 00046DA0*/ PPC::Runtime::ASM::lbzx(context->r0, context->r24, context->r26);
/*80049FA4 00046DA4*/ PPC::Runtime::ASM::cmpw(context->r23, context->r0);
/*80049FA8 00046DA8*/ PPC::Runtime::ASM::blt(.L_80049F20);
RUNTIME_PPC_JUMP_LABEL(.L_80049FAC, 0x80049FAC) //this is a jump label
/*80049FAC 00046DAC*/ PPC::Runtime::ASM::li(context->r0, 0xff);
/*80049FB0 00046DB0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80049FB4, 0x80049FB4) //this is a jump label
/*80049FB4 00046DB4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80049FB8 00046DB8*/ PPC::Runtime::ASM::bl(_restgpr_23);
/*80049FBC 00046DBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80049FC0 00046DC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80049FC4 00046DC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80049FC8 00046DC8*/ PPC::Runtime::ASM::blr();
}