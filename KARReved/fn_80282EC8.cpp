//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80065A80.hpp"
#include "fn_80065B7C.hpp"
#include "fn_80065E00.hpp"
#include "fn_8005FC08.hpp"



void fn_80282EC8(PPC::Runtime::GCContext* context)
{
/*80282EC8 0027FCC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80282ECC 0027FCCC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80282ED0 0027FCD0*/ PPC::Runtime::ASM::lis(context->r4, lbl_8055F480 @ Get_MemoryOffset_HighBit);
/*80282ED4 0027FCD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80282ED8 0027FCD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80282EDC 0027FCDC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_8055F480 @ Get_MemoryOffset_LowBit);
/*80282EE0 0027FCE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80282EE4 0027FCE4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80282EE8 0027FCE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r31));
/*80282EEC 0027FCEC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80282EF0 0027FCF0*/ PPC::Runtime::ASM::bne(.L_80282F20);
/*80282EF4 0027FCF4*/ PPC::Runtime::ASM::li(context->r3, 0x20);
/*80282EF8 0027FCF8*/ PPC::Runtime::ASM::bl(fn_80065A80);
/*80282EFC 0027FCFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r31));
/*80282F00 0027FD00*/ PPC::Runtime::ASM::li(context->r4, 0x15);
/*80282F04 0027FD04*/ PPC::Runtime::ASM::bl(fn_80065B7C);
/*80282F08 0027FD08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r31));
/*80282F0C 0027FD0C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80282F10 0027FD10*/ PPC::Runtime::ASM::bl(fn_80065E00);
/*80282F14 0027FD14*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80282F18 0027FD18*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80282F1C 0027FD1C*/ PPC::Runtime::ASM::bl(fn_8005FC08);
RUNTIME_PPC_JUMP_LABEL(.L_80282F20, 0x80282F20) //this is a jump label
/*80282F20 0027FD20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80282F24 0027FD24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80282F28 0027FD28*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80282F2C 0027FD2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80282F30 0027FD30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80282F34 0027FD34*/ PPC::Runtime::ASM::blr();
}