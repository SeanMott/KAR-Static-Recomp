//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7954.hpp"
#include "fn_800F7870.hpp"
#include "fn_8010DC98.hpp"



void fn_8010DB9C(PPC::Runtime::GCContext* context)
{
/*8010DB9C 0010A99C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8010DBA0 0010A9A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010DBA4 0010A9A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010DBA8 0010A9A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010DBAC 0010A9AC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010DBB0 0010A9B0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010DBB4 0010A9B4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8010DBB8 0010A9B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*8010DBBC 0010A9BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*8010DBC0 0010A9C0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8010DBC4 0010A9C4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*8010DBC8 0010A9C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8010DBCC 0010A9CC*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010DBD0 0010A9D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8010DBD4 0010A9D4*/ PPC::Runtime::ASM::addi(context->r3, context->r5, 0x54);
/*8010DBD8 0010A9D8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*8010DBDC 0010A9DC*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*8010DBE0 0010A9E0*/ PPC::Runtime::ASM::bl(fn_800D7954);
/*8010DBE4 0010A9E4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*8010DBE8 0010A9E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8010DBEC 0010A9EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*8010DBF0 0010A9F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r3));
/*8010DBF4 0010A9F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8010DBF8 0010A9F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8010DBFC 0010A9FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8010DC00 0010AA00*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*8010DC04 0010AA04*/ PPC::Runtime::ASM::bgt(.L_8010DC20);
/*8010DC08 0010AA08*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakuwhispywoods." Get_MemoryOffset_HighBit);
/*8010DC0C 0010AA0C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_1037 @ Get_MemoryOffset_HighBit);
/*8010DC10 0010AA10*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakuwhispywoods." Get_MemoryOffset_LowBit);
/*8010DC14 0010AA14*/ PPC::Runtime::ASM::li(context->r4, 0x61);
/*8010DC18 0010AA18*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_1037 @ Get_MemoryOffset_LowBit);
/*8010DC1C 0010AA1C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8010DC20, 0x8010DC20) //this is a jump label
/*8010DC20 0010AA20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8010DC24 0010AA24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010DC28 0010AA28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*8010DC2C 0010AA2C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8010DC30 0010AA30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8010DC34 0010AA34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8010DC38 0010AA38*/ PPC::Runtime::ASM::subf(context->r3, context->r3, context->r0);
/*8010DC3C 0010AA3C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*8010DC40 0010AA40*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8010DC44 0010AA44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8010DC48 0010AA48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8010DC4C 0010AA4C*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*8010DC50 0010AA50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*8010DC54 0010AA54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8010DC58 0010AA58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8010DC5C 0010AA5C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8010DC60 0010AA60*/ PPC::Runtime::ASM::beq(.L_8010DC74);
/*8010DC64 0010AA64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8010DC68 0010AA68*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010DC6C 0010AA6C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8010DC70 0010AA70*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_8010DC74, 0x8010DC74) //this is a jump label
/*8010DC74 0010AA74*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010DC78 0010AA78*/ PPC::Runtime::ASM::bl(fn_8010DC98);
/*8010DC7C 0010AA7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010DC80 0010AA80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010DC84 0010AA84*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010DC88 0010AA88*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010DC8C 0010AA8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010DC90 0010AA90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8010DC94 0010AA94*/ PPC::Runtime::ASM::blr();
}