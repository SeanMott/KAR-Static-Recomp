//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_IPMulticastLeave.hpp"



void fn_IPClose(PPC::Runtime::GCContext* context)
{
/*80482524 0047F324*/ PPC::Runtime::ASM::mflr(context->r0);
/*80482528 0047F328*/ PPC::Runtime::ASM::lis(context->r4, lbl_805C2A18 @ Get_MemoryOffset_HighBit);
/*8048252C 0047F32C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80482530 0047F330*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*80482534 0047F334*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80482538 0047F338*/ PPC::Runtime::ASM::addi(context->r30, context->r4, lbl_805C2A18 @ Get_MemoryOffset_LowBit);
/*8048253C 0047F33C*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*80482540 0047F340*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80482544 0047F344*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80482548, 0x80482548) //this is a jump label
/*80482548 0047F348*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r27));
/*8048254C 0047F34C*/ PPC::Runtime::ASM::slw(context->r29, context->r31, context->r28);
/*80482550 0047F350*/ PPC::Runtime::ASM::and.(context->r0, context->r0, context->r29);
/*80482554 0047F354*/ PPC::Runtime::ASM::beq(.L_80482570);
/*80482558 0047F358*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*8048255C 0047F35C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x4);
/*80482560 0047F360*/ PPC::Runtime::ASM::bl(fn_IPMulticastLeave);
/*80482564 0047F364*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r27));
/*80482568 0047F368*/ PPC::Runtime::ASM::andc(context->r0, context->r0, context->r29);
/*8048256C 0047F36C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_80482570, 0x80482570) //this is a jump label
/*80482570 0047F370*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80482574 0047F374*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*80482578 0047F378*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x38);
/*8048257C 0047F37C*/ PPC::Runtime::ASM::blt(.L_80482548);
/*80482580 0047F380*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80482584 0047F384*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80482588 0047F388*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8048258C 0047F38C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*80482590 0047F390*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80482594 0047F394*/ PPC::Runtime::ASM::blr();
}