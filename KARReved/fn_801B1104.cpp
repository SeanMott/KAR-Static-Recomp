//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801A1728.hpp"
#include "fn_801B0FF4.hpp"
#include "fn_801A8454.hpp"



void fn_801B1104(PPC::Runtime::GCContext* context)
{
/*801B1104 001ADF04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B1108 001ADF08*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B110C 001ADF0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B1110 001ADF10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B1114 001ADF14*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B1118 001ADF18*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801B111C 001ADF1C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B1120 001ADF20*/ PPC::Runtime::ASM::beq(.L_801B113C);
/*801B1124 001ADF24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B1128 001ADF28*/ PPC::Runtime::ASM::bl(fn_801A1728);
/*801B112C 001ADF2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B1130 001ADF30*/ PPC::Runtime::ASM::bl(fn_801B0FF4);
/*801B1134 001ADF34*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B1138 001ADF38*/ PPC::Runtime::ASM::bl(fn_801A8454);
RUNTIME_PPC_JUMP_LABEL(.L_801B113C, 0x801B113C) //this is a jump label
/*801B113C 001ADF3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B1140 001ADF40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B1144 001ADF44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B1148 001ADF48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B114C 001ADF4C*/ PPC::Runtime::ASM::blr();
}