//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000ECF0.hpp"
#include "fn_8000ED10.hpp"
#include "fn_8000ED30.hpp"
#include "fn_80061690.hpp"
#include "fn_80132618.hpp"
#include "fn_CSS_playerQuit.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_80132130.hpp"
#include "fn_80132150.hpp"
#include "fn_80132214.hpp"
#include "fn_80132234.hpp"
#include "fn_80132678.hpp"
#include "fn_80061620.hpp"



void fn_80017050(PPC::Runtime::GCContext* context)
{
/*80017050 00013E50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80017054 00013E54*/ PPC::Runtime::ASM::mflr(context->r0);
/*80017058 00013E58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8001705C 00013E5C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80017060 00013E60*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*80017064 00013E64*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80017068 00013E68*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8001706C 00013E6C*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*80017070 00013E70*/ PPC::Runtime::ASM::bl(fn_8000ECF0);
/*80017074 00013E74*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80017078 00013E78*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8001707C 00013E7C*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*80017080 00013E80*/ PPC::Runtime::ASM::bl(fn_8000ED10);
/*80017084 00013E84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80017088 00013E88*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8001708C 00013E8C*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*80017090 00013E90*/ PPC::Runtime::ASM::bl(fn_8000ED30);
/*80017094 00013E94*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3d, context->r28));
/*80017098 00013E98*/ PPC::Runtime::ASM::extsb.(context->r0, context->r6);
/*8001709C 00013E9C*/ PPC::Runtime::ASM::bne(.L_800172CC);
/*800170A0 00013EA0*/ PPC::Runtime::ASM::li(context->r0, 0x1160);
/*800170A4 00013EA4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800170A8 00013EA8*/ PPC::Runtime::ASM::and(context->r0, context->r29, context->r0);
/*800170AC 00013EAC*/ PPC::Runtime::ASM::and(context->r4, context->r27, context->r5);
/*800170B0 00013EB0*/ PPC::Runtime::ASM::xor(context->r3, context->r0, context->r5);
/*800170B4 00013EB4*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r5);
/*800170B8 00013EB8*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*800170BC 00013EBC*/ PPC::Runtime::ASM::beq(.L_800170EC);
/*800170C0 00013EC0*/ PPC::Runtime::ASM::bl(fn_80061690);
/*800170C4 00013EC4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800170C8 00013EC8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800170CC 00013ECC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r28));
/*800170D0 00013ED0*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r28));
/*800170D4 00013ED4*/ PPC::Runtime::ASM::bl(fn_80132618);
/*800170D8 00013ED8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800170DC 00013EDC*/ PPC::Runtime::ASM::li(context->r0, 0x5);
/*800170E0 00013EE0*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3d, context->r28));
/*800170E4 00013EE4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r28));
/*800170E8 00013EE8*/ PPC::Runtime::ASM::b(.L_800174E4);
RUNTIME_PPC_JUMP_LABEL(.L_800170EC, 0x800170EC) //this is a jump label
/*800170EC 00013EEC*/ PPC::Runtime::ASM::li(context->r3, 0x200);
/*800170F0 00013EF0*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r5);
/*800170F4 00013EF4*/ PPC::Runtime::ASM::and(context->r3, context->r29, context->r3);
/*800170F8 00013EF8*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r5);
/*800170FC 00013EFC*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*80017100 00013F00*/ PPC::Runtime::ASM::beq(.L_80017220);
/*80017104 00013F04*/ PPC::Runtime::ASM::bl(fn_CSS_playerQuit);
/*80017108 00013F08*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8001710C 00013F0C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x30);
/*80017110 00013F10*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_152 @ Get_MemoryOffset_HighBit);
/*80017114 00013F14*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3));
/*80017118 00013F18*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_153 @ Get_MemoryOffset_HighBit);
/*8001711C 00013F1C*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r30));
/*80017120 00013F20*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_152 @ Get_MemoryOffset_LowBit);
/*80017124 00013F24*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80017128 00013F28*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_153 @ Get_MemoryOffset_LowBit);
/*8001712C 00013F2C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3);
/*80017130 00013F30*/ PPC::Runtime::ASM::extsb(context->r4, context->r6);
/*80017134 00013F34*/ PPC::Runtime::ASM::add(context->r4, context->r30, context->r4);
/*80017138 00013F38*/ PPC::Runtime::ASM::lbz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r4));
/*8001713C 00013F3C*/ PPC::Runtime::ASM::lbzx(context->r4, context->r5, context->r0);
/*80017140 00013F40*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80017144 00013F44*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r30));
/*80017148 00013F48*/ PPC::Runtime::ASM::slwi(context->r31, context->r0, 2);
/*8001714C 00013F4C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80017150 00013F50*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80017154 00013F54*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x18);
/*80017158 00013F58*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8001715C 00013F5C*/ PPC::Runtime::ASM::lbzx(context->r0, context->r3, context->r31);
/*80017160 00013F60*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r30));
/*80017164 00013F64*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80017168 00013F68*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r30));
/*8001716C 00013F6C*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80017170 00013F70*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3);
/*80017174 00013F74*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r0);
/*80017178 00013F78*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r4));
/*8001717C 00013F7C*/ PPC::Runtime::ASM::bl(fn_80132130);
/*80017180 00013F80*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*80017184 00013F84*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_153 @ Get_MemoryOffset_HighBit);
/*80017188 00013F88*/ PPC::Runtime::ASM::mr(context->r25, context->r26);
/*8001718C 00013F8C*/ PPC::Runtime::ASM::addi(context->r27, context->r3, MemoryOffset_153 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_80017190, 0x80017190) //this is a jump label
/*80017190 00013F90*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80017194 00013F94*/ PPC::Runtime::ASM::extsb(context->r4, context->r26);
/*80017198 00013F98*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r30));
/*8001719C 00013F9C*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*800171A0 00013FA0*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x18);
/*800171A4 00013FA4*/ PPC::Runtime::ASM::add(context->r0, context->r27, context->r0);
/*800171A8 00013FA8*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r25);
/*800171AC 00013FAC*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800171B0 00013FB0*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r6));
/*800171B4 00013FB4*/ PPC::Runtime::ASM::bl(fn_80132150);
/*800171B8 00013FB8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r30));
/*800171BC 00013FBC*/ PPC::Runtime::ASM::extsb(context->r4, context->r26);
/*800171C0 00013FC0*/ PPC::Runtime::ASM::bl(fn_80132214);
/*800171C4 00013FC4*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
/*800171C8 00013FC8*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x4);
/*800171CC 00013FCC*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x6);
/*800171D0 00013FD0*/ PPC::Runtime::ASM::blt(.L_80017190);
/*800171D4 00013FD4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800171D8 00013FD8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_153 @ Get_MemoryOffset_HighBit);
/*800171DC 00013FDC*/ PPC::Runtime::ASM::addi(context->r5, context->r3, MemoryOffset_153 @ Get_MemoryOffset_LowBit);
/*800171E0 00013FE0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r30));
/*800171E4 00013FE4*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*800171E8 00013FE8*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800171EC 00013FEC*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x18);
/*800171F0 00013FF0*/ PPC::Runtime::ASM::add(context->r0, context->r5, context->r0);
/*800171F4 00013FF4*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r31);
/*800171F8 00013FF8*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r5));
/*800171FC 00013FFC*/ PPC::Runtime::ASM::bl(fn_80132234);
/*80017200 00014000*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37, context->r28));
/*80017204 00014004*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32, context->r28));
/*80017208 00014008*/ PPC::Runtime::ASM::bl(fn_80132678);
/*8001720C 0001400C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80017210 00014010*/ PPC::Runtime::ASM::li(context->r0, 0xa);
/*80017214 00014014*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33, context->r28));
/*80017218 00014018*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r28));
/*8001721C 0001401C*/ PPC::Runtime::ASM::b(.L_800174E4);
RUNTIME_PPC_JUMP_LABEL(.L_80017220, 0x80017220) //this is a jump label
/*80017220 00014020*/ PPC::Runtime::ASM::lis(context->r3, 0x1);
/*80017224 00014024*/ PPC::Runtime::ASM::and(context->r4, context->r31, context->r5);
/*80017228 00014028*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x8);
/*8001722C 0001402C*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
/*80017230 00014030*/ PPC::Runtime::ASM::and(context->r3, context->r30, context->r0);
/*80017234 00014034*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r5);
/*80017238 00014038*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r5);
/*8001723C 0001403C*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*80017240 00014040*/ PPC::Runtime::ASM::beq(.L_80017264);
/*80017244 00014044*/ PPC::Runtime::ASM::extsb.(context->r0, context->r6);
/*80017248 00014048*/ PPC::Runtime::ASM::ble(.L_80017258);
/*8001724C 0001404C*/ PPC::Runtime::ASM::subi(context->r0, context->r6, 0x1);
/*80017250 00014050*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
/*80017254 00014054*/ PPC::Runtime::ASM::b(.L_8001729C);
RUNTIME_PPC_JUMP_LABEL(.L_80017258, 0x80017258) //this is a jump label
/*80017258 00014058*/ PPC::Runtime::ASM::li(context->r0, 0x6);
/*8001725C 0001405C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
/*80017260 00014060*/ PPC::Runtime::ASM::b(.L_8001729C);
RUNTIME_PPC_JUMP_LABEL(.L_80017264, 0x80017264) //this is a jump label
/*80017264 00014064*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*80017268 00014068*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r5);
/*8001726C 0001406C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*80017270 00014070*/ PPC::Runtime::ASM::and(context->r3, context->r30, context->r3);
/*80017274 00014074*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r5);
/*80017278 00014078*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*8001727C 0001407C*/ PPC::Runtime::ASM::beq(.L_8001729C);
/*80017280 00014080*/ PPC::Runtime::ASM::extsb(context->r0, context->r6);
/*80017284 00014084*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x6);
/*80017288 00014088*/ PPC::Runtime::ASM::bge(.L_80017298);
/*8001728C 0001408C*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x1);
/*80017290 00014090*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
/*80017294 00014094*/ PPC::Runtime::ASM::b(.L_8001729C);
RUNTIME_PPC_JUMP_LABEL(.L_80017298, 0x80017298) //this is a jump label
/*80017298 00014098*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_8001729C, 0x8001729C) //this is a jump label
/*8001729C 0001409C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
/*800172A0 000140A0*/ PPC::Runtime::ASM::extsb(context->r3, context->r6);
/*800172A4 000140A4*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*800172A8 000140A8*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*800172AC 000140AC*/ PPC::Runtime::ASM::beq(.L_800174E4);
/*800172B0 000140B0*/ PPC::Runtime::ASM::bl(fn_80061620);
/*800172B4 000140B4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3b, context->r28));
/*800172B8 000140B8*/ PPC::Runtime::ASM::li(context->r4, "String" -7 ""@sda21
/* 800172BC 000140BC  7C 60 07 74 */	extsb r0, r3
/* 800172C0 000140C0  7C 84 00 AE */	lbzx r4, r4, r0
/* 800172C4 000140C4  48 11 B3 09 */	bl fn_801325CC
/* 800172C8 000140C8  48 00 02 1C */	b .L_800174E4
.L_800172CC:
/* 800172CC 000140CC  38 00 11 60 */	li r0, 0x1160
/* 800172D0 000140D0  38 A0 00 00 */	li r5, 0x0
/* 800172D4 000140D4  7F A0 00 38 */	and r0, r29, r0
/* 800172D8 000140D8  7F 64 28 38 */	and r4, r27, r5
/* 800172DC 000140DC  7C 03 2A 78 */	xor r3, r0, r5
/* 800172E0 000140E0  7C 80 2A 78 */	xor r0, r4, r5
/* 800172E4 000140E4  7C 60 03 79 */	or. r0, r3, r0
/* 800172E8 000140E8  41 82 01 18 */	beq .L_80017400
/* 800172EC 000140EC  88 1C 00 3C */	lbz r0, 0x3c(r28)
/* 800172F0 000140F0  7C 00 07 75 */	extsb. r0, r0
/* 800172F4 000140F4  40 82 00 F0 */	bne .L_800173E4
/* 800172F8 000140F8  7C C0 07 74 */	extsb r0, r6
/* 800172FC 000140FC  2C 00 00 01 */	cmpwi r0, 0x1
/* 80017300 00014100  40 82 00 44 */	bne .L_80017344
/* 80017304 00014104  88 1C 00 3B */	lbz r0, 0x3b(r28)
/* 80017308 00014108  2C 00 00 06 */	cmpwi r0, 0x6
/* 8001730C 0001410C  40 82 00 38 */	bne .L_80017344
/* 80017310 00014110  3C 60 00 01 */	lis r3, 0x1
/* 80017314 00014114  38 63 00 0D */	addi r3, r3, 0xd
/* 80017318 00014118  48 04 A2 D9 */	bl fn_800615F0
/* 8001731C 0001411C  38 00 00 01 */	li r0, 0x1
/* 80017320 00014120  38 60 00 01 */	li r3, 0x1
/* 80017324 00014124  98 1C 00 3C */	stb r0, 0x3c(r28)
/* 80017328 00014128  88 9C 00 3C */	lbz r4, 0x3c(r28)
/* 8001732C 0001412C  48 11 B3 0D */	bl fn_80132638
/* 80017330 00014130  38 60 00 02 */	li r3, 0x2
/* 80017334 00014134  38 00 00 05 */	li r0, 0x5
/* 80017338 00014138  98 7C 00 3D */	stb r3, 0x3d(r28)
/* 8001733C 0001413C  98 1C 00 30 */	stb r0, 0x30(r28)
/* 80017340 00014140  48 00 01 A4 */	b .L_800174E4
.L_80017344:
/* 80017344 00014144  88 1C 00 3B */	lbz r0, 0x3b(r28)
/* 80017348 00014148  2C 00 00 06 */	cmpwi r0, 0x6
/* 8001734C 0001414C  40 82 00 14 */	bne .L_80017360
/* 80017350 00014150  3C 60 00 01 */	lis r3, 0x1
/* 80017354 00014154  38 63 00 0C */	addi r3, r3, 0xc
/* 80017358 00014158  48 04 A2 99 */	bl fn_800615F0
/* 8001735C 0001415C  48 00 00 10 */	b .L_8001736C
.L_80017360:
/* 80017360 00014160  3C 60 00 01 */	lis r3, 0x1
/* 80017364 00014164  38 63 00 0B */	addi r3, r3, 0xb
/* 80017368 00014168  48 04 A2 89 */	bl fn_800615F0
.L_8001736C:
/* 8001736C 0001416C  88 1C 00 3B */	lbz r0, 0x3b(r28)
/* 80017370 00014170  7C 00 07 74 */	extsb r0, r0
/* 80017374 00014174  28 00 00 06 */	cmplwi r0, 0x6
/* 80017378 00014178  41 81 00 50 */	bgt .L_800173C8
/* 8001737C 0001417C  3C 60 80 49 */	lis r3, jumptable_80496598@ha
/* 80017380 00014180  54 00 10 3A */	slwi r0, r0, 2
/* 80017384 00014184  38 63 65 98 */	addi r3, r3, jumptable_80496598@l
/* 80017388 00014188  7C 03 00 2E */	lwzx r0, r3, r0
/* 8001738C 0001418C  7C 09 03 A6 */	mtctr r0
/* 80017390 00014190  4E 80 04 20 */	bctr
/* 80017394 00014194  4B FF 04 AD */	bl fn_80007840
/* 80017398 00014198  48 00 00 30 */	b .L_800173C8
/* 8001739C 0001419C  4B FF 04 E9 */	bl fn_80007884
/* 800173A0 000141A0  48 00 00 28 */	b .L_800173C8
/* 800173A4 000141A4  4B FF 05 41 */	bl fn_800078E4
/* 800173A8 000141A8  48 00 00 20 */	b .L_800173C8
/* 800173AC 000141AC  4B FF 05 BD */	bl fn_hwDeactivateStudio
/* 800173B0 000141B0  48 00 00 18 */	b .L_800173C8
/* 800173B4 000141B4  48 02 A3 8D */	bl fn_80041740
/* 800173B8 000141B8  48 00 00 10 */	b .L_800173C8
/* 800173BC 000141BC  4B FF 05 CD */	bl fn_salStartAi
/* 800173C0 000141C0  48 00 00 08 */	b .L_800173C8
/* 800173C4 000141C4  4B FF 05 E5 */	bl fn_800079A8
.L_800173C8:
/* 800173C8 000141C8  48 06 15 C9 */	bl fn_debug_memCard_reqSave
/* 800173CC 000141CC  48 11 B2 8D */	bl fn_80132658
/* 800173D0 000141D0  38 60 00 00 */	li r3, 0x0
/* 800173D4 000141D4  38 00 00 05 */	li r0, 0x5
/* 800173D8 000141D8  98 7C 00 3D */	stb r3, 0x3d(r28)
/* 800173DC 000141DC  98 1C 00 30 */	stb r0, 0x30(r28)
/* 800173E0 000141E0  48 00 01 04 */	b .L_800174E4
.L_800173E4:
/* 800173E4 000141E4  48 04 A2 E5 */	bl fn_CSS_playerQuit
/* 800173E8 000141E8  48 11 B2 71 */	bl fn_80132658
/* 800173EC 000141EC  38 60 00 00 */	li r3, 0x0
/* 800173F0 000141F0  38 00 00 05 */	li r0, 0x5
/* 800173F4 000141F4  98 7C 00 3D */	stb r3, 0x3d(r28)
/* 800173F8 000141F8  98 1C 00 30 */	stb r0, 0x30(r28)
/* 800173FC 000141FC  48 00 00 E8 */	b .L_800174E4
.L_80017400:
/* 80017400 00014200  38 60 02 00 */	li r3, 0x200
/* 80017404 00014204  7C 80 2A 78 */	xor r0, r4, r5
/* 80017408 00014208  7F A3 18 38 */	and r3, r29, r3
/* 8001740C 0001420C  7C 63 2A 78 */	xor r3, r3, r5
/* 80017410 00014210  7C 60 03 79 */	or. r0, r3, r0
/* 80017414 00014214  41 82 00 20 */	beq .L_80017434
/* 80017418 00014218  48 04 A2 B1 */	bl fn_CSS_playerQuit
/* 8001741C 0001421C  48 11 B2 3D */	bl fn_80132658
/* 80017420 00014220  38 60 00 00 */	li r3, 0x0
/* 80017424 00014224  38 00 00 05 */	li r0, 0x5
/* 80017428 00014228  98 7C 00 3D */	stb r3, 0x3d(r28)
/* 8001742C 0001422C  98 1C 00 30 */	stb r0, 0x30(r28)
/* 80017430 00014230  48 00 00 B4 */	b .L_800174E4
.L_80017434:
/* 80017434 00014234  3C 60 00 04 */	lis r3, 0x4
/* 80017438 00014238  7F E4 28 38 */	and r4, r31, r5
/* 8001743C 0001423C  38 03 00 01 */	addi r0, r3, 0x1
/* 80017440 00014240  88 DC 00 3C */	lbz r6, 0x3c(r28)
/* 80017444 00014244  7F C3 00 38 */	and r3, r30, r0
/* 80017448 00014248  7C 80 2A 78 */	xor r0, r4, r5
/* 8001744C 0001424C  7C 63 2A 78 */	xor r3, r3, r5
/* 80017450 00014250  7C 60 03 79 */	or. r0, r3, r0
/* 80017454 00014254  41 82 00 18 */	beq .L_8001746C
/* 80017458 00014258  7C C0 07 74 */	extsb r0, r6
/* 8001745C 0001425C  2C 00 00 01 */	cmpwi r0, 0x1
/* 80017460 00014260  40 82 00 38 */	bne .L_80017498
/* 80017464 00014264  98 BC 00 3C */	stb r5, 0x3c(r28)
/* 80017468 00014268  48 00 00 30 */	b .L_80017498
.L_8001746C:
/* 8001746C 0001426C  3C 60 00 08 */	lis r3, 0x8
/* 80017470 00014270  7C 80 2A 78 */	xor r0, r4, r5
/* 80017474 00014274  38 63 00 02 */	addi r3, r3, 0x2
/* 80017478 00014278  7F C3 18 38 */	and r3, r30, r3
/* 8001747C 0001427C  7C 63 2A 78 */	xor r3, r3, r5
/* 80017480 00014280  7C 60 03 79 */	or. r0, r3, r0
/* 80017484 00014284  41 82 00 14 */	beq .L_80017498
/* 80017488 00014288  7C C0 07 75 */	extsb. r0, r6
/* 8001748C 0001428C  40 82 00 0C */	bne .L_80017498
/* 80017490 00014290  38 00 00 01 */	li r0, 0x1
/* 80017494 00014294  98 1C 00 3C */	stb r0, 0x3c(r28)
.L_80017498:
/* 80017498 00014298  88 1C 00 3C */	lbz r0, 0x3c(r28)
/* 8001749C 0001429C  7C C3 07 74 */	extsb r3, r6
/* 800174A0 000142A0  7C 00 07 74 */	extsb r0, r0
/* 800174A4 000142A4  7C 03 00 00 */	cmpw r3, r0
/* 800174A8 000142A8  41 82 00 3C */	beq .L_800174E4
/* 800174AC 000142AC  48 04 A1 75 */	bl fn_80061620
/* 800174B0 000142B0  88 1C 00 3D */	lbz r0, 0x3d(r28)
/* 800174B4 000142B4  7C 00 07 74 */	extsb r0, r0
/* 800174B8 000142B8  2C 00 00 01 */	cmpwi r0, 0x1
/* 800174BC 000142BC  40 82 00 14 */	bne .L_800174D0
/* 800174C0 000142C0  88 9C 00 3C */	lbz r4, 0x3c(r28)
/* 800174C4 000142C4  38 60 00 00 */	li r3, 0x0
/* 800174C8 000142C8  48 11 B1 71 */	bl fn_80132638
/* 800174CC 000142CC  48 00 00 18 */	b .L_800174E4
.L_800174D0:
/* 800174D0 000142D0  2C 00 00 02 */	cmpwi r0, 0x2
/* 800174D4 000142D4  40 82 00 10 */	bne .L_800174E4
/* 800174D8 000142D8  88 9C 00 3C */	lbz r4, 0x3c(r28)
/* 800174DC 000142DC  38 60 00 01 */	li r3, 0x1
/* 800174E0 000142E0  48 11 B1 59 */	bl fn_80132638
.L_800174E4:
/* 800174E4 000142E4  39 61 00 30 */	addi r11, r1, 0x30
/* 800174E8 000142E8  48 39 66 B1 */	bl _restgpr_25
/* 800174EC 000142EC  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800174F0 000142F0  7C 08 03 A6 */	mtlr r0
/* 800174F4 000142F4  38 21 00 30 */	addi r1, r1, 0x30
/* 800174F8 000142F8  4E 80 00 20 */	blr");
}