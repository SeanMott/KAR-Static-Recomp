//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_UpdateOrigin.hpp"
#include "fn_SIGetResponse.hpp"
#include "fn_SISetCommand.hpp"
#include "fn_SIEnablePolling.hpp"
#include "memset.hpp"
#include "fn_PADTypeAndStatusCallback.hpp"
#include "fn_PADTypeAndStatusCallback.hpp"
#include "fn_SIGetTypeAsync.hpp"



void fn_PADOriginCallback(PPC::Runtime::GCContext* context)
{
/*803DBE10 003D8C10*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DBE14 003D8C14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/* 803DBE18 003D8C18  54 80 07 3F */ clrlwi. context->r0 , context->r4 , 28
/*803DBE1C 003D8C1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803DBE20 003D8C20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803DBE24 003D8C24*/ PPC::Runtime::ASM::bne(.L_803DBE6C);
/*803DBE28 003D8C28*/ PPC::Runtime::ASM::lwz(context->r3, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE2C 003D8C2C*/ PPC::Runtime::ASM::bl(fn_UpdateOrigin);
/*803DBE30 003D8C30*/ PPC::Runtime::ASM::lwz(context->r31, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE34 003D8C34*/ PPC::Runtime::ASM::lis(context->r0, 0x8000);
/*803DBE38 003D8C38*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDF44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE3C 003D8C3C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x1c);
/*803DBE40 003D8C40*/ PPC::Runtime::ASM::srw(context->r0, context->r0, context->r31);
/*803DBE44 003D8C44*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803DBE48 003D8C48*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE4C 003D8C4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803DBE50 003D8C50*/ PPC::Runtime::ASM::bl(fn_SIGetResponse);
/*803DBE54 003D8C54*/ PPC::Runtime::ASM::lwz(context->r0, StructValues_31 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE58 003D8C58*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803DBE5C 003D8C5C*/ PPC::Runtime::ASM::oris(context->r4, context->r0, 0x40);
/*803DBE60 003D8C60*/ PPC::Runtime::ASM::bl(fn_SISetCommand);
/*803DBE64 003D8C64*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDF44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE68 003D8C68*/ PPC::Runtime::ASM::bl(fn_SIEnablePolling);
RUNTIME_PPC_JUMP_LABEL(.L_803DBE6C, 0x803DBE6C) //this is a jump label
/*803DBE6C 003D8C6C*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DDF48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE70 003D8C70*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r5);
/*803DBE74 003D8C74*/ PPC::Runtime::ASM::stw(context->r0, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE78 003D8C78*/ PPC::Runtime::ASM::lwz(context->r4, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE7C 003D8C7C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x20);
/*803DBE80 003D8C80*/ PPC::Runtime::ASM::beq(.L_803DBEC0);
/*803DBE84 003D8C84*/ PPC::Runtime::ASM::lis(context->r0, 0x8000);
/*803DBE88 003D8C88*/ PPC::Runtime::ASM::srw(context->r0, context->r0, context->r4);
/*803DBE8C 003D8C8C*/ PPC::Runtime::ASM::andc(context->r0, context->r5, context->r0);
/*803DBE90 003D8C90*/ PPC::Runtime::ASM::mulli(context->r4, context->r4, 0xc);
/*803DBE94 003D8C94*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBE98 003D8C98*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056E360 @ Get_MemoryOffset_HighBit);
/*803DBE9C 003D8C9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_8056E360 @ Get_MemoryOffset_LowBit);
/*803DBEA0 003D8CA0*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*803DBEA4 003D8CA4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803DBEA8 003D8CA8*/ PPC::Runtime::ASM::li(context->r5, 0xc);
/*803DBEAC 003D8CAC*/ PPC::Runtime::ASM::bl(memset);
/*803DBEB0 003D8CB0*/ PPC::Runtime::ASM::lis(context->r4, fn_PADTypeAndStatusCallback @ Get_MemoryOffset_HighBit);
/*803DBEB4 003D8CB4*/ PPC::Runtime::ASM::lwz(context->r3, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBEB8 003D8CB8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_PADTypeAndStatusCallback @ Get_MemoryOffset_LowBit);
/*803DBEBC 003D8CBC*/ PPC::Runtime::ASM::bl(fn_SIGetTypeAsync);
RUNTIME_PPC_JUMP_LABEL(.L_803DBEC0, 0x803DBEC0) //this is a jump label
/*803DBEC0 003D8CC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803DBEC4 003D8CC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803DBEC8 003D8CC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803DBECC 003D8CCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DBED0 003D8CD0*/ PPC::Runtime::ASM::blr();
}