//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_OSExitThread.hpp"



void fn_80488A28(PPC::Runtime::GCContext* context)
{
/*80488A28 00485828*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80488A2C 0048582C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80488A30 00485830*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80488A34 00485834*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80488A38 00485838*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80488A3C 0048583C*/ PPC::Runtime::ASM::lis(context->r4, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*80488A40 00485840*/ PPC::Runtime::ASM::addi(context->r4, context->r4, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*80488A44 00485844*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x108, context->r4));
/*80488A48 00485848*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80488A4C 0048584C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*80488A50 00485850*/ PPC::Runtime::ASM::bne(.L_80488A5C);
/*80488A54 00485854*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80488A58 00485858*/ PPC::Runtime::ASM::bl(fn_OSExitThread);
RUNTIME_PPC_JUMP_LABEL(.L_80488A5C, 0x80488A5C) //this is a jump label
/*80488A5C 0048585C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80488A60 00485860*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80488A64 00485864*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80488A68 00485868*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80488A6C 0048586C*/ PPC::Runtime::ASM::blr();
}