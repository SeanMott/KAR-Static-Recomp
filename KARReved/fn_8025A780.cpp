//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025A780(PPC::Runtime::GCContext* context)
{
/*8025A780 00257580*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025A784 00257584*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025A788 00257588*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A78C 0025758C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A790 00257590*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025A794 00257594*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025A798 00257598*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025A79C 0025759C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A7A0 002575A0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025A7A4 002575A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A7A8 002575A8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A7AC 002575AC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025A7B0 002575B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A7B4 002575B4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A7B8 002575B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025A7BC 002575BC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A7C0 002575C0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025A7C4 002575C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A7C8 002575C8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A7CC 002575CC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025A7D0 002575D0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A7D4 002575D4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025A7D8 002575D8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025A7DC 002575DC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E64 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A7E0 002575E0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025A7E4 002575E4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A7E8 002575E8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E60 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A7EC 002575EC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025A7F0 002575F0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025A7F4 002575F4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025A7F8 002575F8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025A7FC 002575FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A800 00257600*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A804 00257604*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025A808 00257608*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025A80C 0025760C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025A810 00257610*/ PPC::Runtime::ASM::blr();
}