//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"
#include "fn_checkIfGettingOffBike.hpp"



void fn_801B64D8(PPC::Runtime::GCContext* context)
{
/*801B64D8 001B32D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801B64DC 001B32DC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B64E0 001B32E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801B64E4 001B32E4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801B64E8 001B32E8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801B64EC 001B32EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801B64F0 001B32F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B64F4 001B32F4*/ PPC::Runtime::ASM::bl(fn_80190948);
/*801B64F8 001B32F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801B64FC 001B32FC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801B6500 001B3300*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801B6504 001B3304*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B6508 001B3308*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801B650C 001B330C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B6510 001B3310*/ PPC::Runtime::ASM::bl(fn_checkIfGettingOffBike);
/*801B6514 001B3314*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B6518 001B3318*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801B651C 001B331C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801B6520 001B3320*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B6524 001B3324*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801B6528 001B3328*/ PPC::Runtime::ASM::blr();
}