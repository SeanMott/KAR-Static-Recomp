//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E3D3C.hpp"
#include "fn_801E3DFC.hpp"
#include "fn_chargeLogic?.hpp"
#include "fn_801CF5D0.hpp"
#include "fn_801CCAD8.hpp"
#include "fn_80062CA4.hpp"
#include "fn_801C992C.hpp"
#include "fn_801DD29C.hpp"
#include "fn_800CEC44.hpp"
#include "fn_801D3940.hpp"
#include "fn_801CEE0C.hpp"



void fn_801EFE10(PPC::Runtime::GCContext* context)
{
/*801EFE10 001ECC10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EFE14 001ECC14*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EFE18 001ECC18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFE1C 001ECC1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFE20 001ECC20*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EFE24 001ECC24*/ PPC::Runtime::ASM::bl(fn_801E3D3C);
/*801EFE28 001ECC28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFE2C 001ECC2C*/ PPC::Runtime::ASM::bl(fn_801E3DFC);
/*801EFE30 001ECC30*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r31));
/*801EFE34 001ECC34*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0F58 @ Get_MemoryOffset_HighBit);
/*801EFE38 001ECC38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb24, context->r31));
/*801EFE3C 001ECC3C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0F58 @ Get_MemoryOffset_LowBit);
/*801EFE40 001ECC40*/ PPC::Runtime::ASM::slwi(context->r4, context->r4, 3);
/*801EFE44 001ECC44*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EFE48 001ECC48*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*801EFE4C 001ECC4C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801EFE50 001ECC50*/ PPC::Runtime::ASM::lwzx(context->r5, context->r3, context->r0);
/*801EFE54 001ECC54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFE58 001ECC58*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1F54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EFE5C 001ECC5C*/ PPC::Runtime::ASM::li(context->r4, 0x13);
/*801EFE60 001ECC60*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801EFE64 001ECC64*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801EFE68 001ECC68*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFE6C 001ECC6C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EFE70 001ECC70*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*801EFE74 001ECC74*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFE78 001ECC78*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFE7C 001ECC7C*/ PPC::Runtime::ASM::bl(fn_801CF5D0);
/*801EFE80 001ECC80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFE84 001ECC84*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x1b48);
/*801EFE88 001ECC88*/ PPC::Runtime::ASM::bl(fn_801CCAD8);
/*801EFE8C 001ECC8C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1b48);
/*801EFE90 001ECC90*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801EFE94 001ECC94*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801EFE98 001ECC98*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801EFE9C 001ECC9C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFEA0 001ECCA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b54, context->r31));
/*801EFEA4 001ECCA4*/ PPC::Runtime::ASM::bl(fn_801C992C);
/*801EFEA8 001ECCA8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x734, context->r31));
/*801EFEAC 001ECCAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFEB0 001ECCB0*/ PPC::Runtime::ASM::bl(fn_801DD29C);
/*801EFEB4 001ECCB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x734, context->r31));
/*801EFEB8 001ECCB8*/ PPC::Runtime::ASM::bl(fn_800CEC44);
/*801EFEBC 001ECCBC*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*801EFEC0 001ECCC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFEC4 001ECCC4*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*801EFEC8 001ECCC8*/ PPC::Runtime::ASM::bl(fn_801D3940);
/*801EFECC 001ECCCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EFED0 001ECCD0*/ PPC::Runtime::ASM::bl(fn_801CEE0C);
/*801EFED4 001ECCD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFED8 001ECCD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFEDC 001ECCDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EFEE0 001ECCE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EFEE4 001ECCE4*/ PPC::Runtime::ASM::blr();
}