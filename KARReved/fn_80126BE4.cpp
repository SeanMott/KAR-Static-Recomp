//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80126BE4(PPC::Runtime::GCContext* context)
{
/*80126BE4 001239E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80126BE8 001239E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80126BEC 001239EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80126BF0 001239F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80126BF4 001239F4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80126BF8 001239F8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80126BFC 001239FC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80126C00 00123A00*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xb54);
/*80126C04 00123A04*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80126C08 00123A08*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80126C0C, 0x80126C0C) //this is a jump label
/*80126C0C 00123A0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80126C10 00123A10*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80126C14 00123A14*/ PPC::Runtime::ASM::beq(.L_80126C20);
/*80126C18 00123A18*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80126C1C 00123A1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80126C20, 0x80126C20) //this is a jump label
/*80126C20 00123A20*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80126C24 00123A24*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80126C28 00123A28*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80126C2C 00123A2C*/ PPC::Runtime::ASM::blt(.L_80126C0C);
/*80126C30 00123A30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80126C34 00123A34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80126C38 00123A38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80126C3C 00123A3C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80126C40 00123A40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80126C44 00123A44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80126C48 00123A48*/ PPC::Runtime::ASM::blr();
}