//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022DEC8(PPC::Runtime::GCContext* context)
{
/*8022DEC8 0022ACC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022DECC 0022ACCC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022DED0 0022ACD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022DED4 0022ACD4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022DED8 0022ACD8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022DEDC 0022ACDC*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8022DEE0 0022ACE0*/ PPC::Runtime::ASM::blt(.L_8022DEFC);
/*8022DEE4 0022ACE4*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022DEE8 0022ACE8*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022DEEC 0022ACEC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022DEF0 0022ACF0*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*8022DEF4 0022ACF4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022DEF8 0022ACF8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022DEFC, 0x8022DEFC) //this is a jump label
/*8022DEFC 0022ACFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022DF00 0022AD00*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022DF04 0022AD04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022DF08 0022AD08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x844, context->r3));
/*8022DF0C 0022AD0C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022DF10 0022AD10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022DF14 0022AD14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022DF18 0022AD18*/ PPC::Runtime::ASM::blr();
}