//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80078D7C.hpp"



void fn_80078BEC(PPC::Runtime::GCContext* context)
{
/*80078BEC 000759EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80078BF0 000759F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80078BF4 000759F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80078BF8 000759F8*/ PPC::Runtime::ASM::bl(fn_80078D7C);
/*80078BFC 000759FC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80078C00 00075A00*/ PPC::Runtime::ASM::beq(.L_80078C0C);
/*80078C04 00075A04*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*80078C08 00075A08*/ PPC::Runtime::ASM::b(.L_80078C2C);
RUNTIME_PPC_JUMP_LABEL(.L_80078C0C, 0x80078C0C) //this is a jump label
/*80078C0C 00075A0C*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_1805528F8 @ Get_MemoryOffset_HighBit);
/*80078C10 00075A10*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80078C14 00075A14*/ PPC::Runtime::ASM::addi(context->r5, context->r4, STRUCT_BYTE4_COUNT_1805528F8 @ Get_MemoryOffset_LowBit);
/*80078C18 00075A18*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_553 @ Get_MemoryOffset_HighBit);
/*80078C1C 00075A1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r5));
/*80078C20 00075A20*/ PPC::Runtime::ASM::addi(context->r4, context->r3, MemoryOffset_553 @ Get_MemoryOffset_LowBit);
/*80078C24 00075A24*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80078C28 00075A28*/ PPC::Runtime::ASM::bl(fn_8045A238);
RUNTIME_PPC_JUMP_LABEL(.L_80078C2C, 0x80078C2C) //this is a jump label
/*80078C2C 00075A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80078C30 00075A30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80078C34 00075A34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80078C38 00075A38*/ PPC::Runtime::ASM::blr();
}