//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80260C18.hpp"
#include "fn_80260C18.hpp"
#include "fn_80255438.hpp"



void fn_80260D68(PPC::Runtime::GCContext* context)
{
/*80260D68 0025DB68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80260D6C 0025DB6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80260D70 0025DB70*/ PPC::Runtime::ASM::lis(context->r4, fn_80260C18 @ Get_MemoryOffset_HighBit);
/*80260D74 0025DB74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260D78 0025DB78*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80260C18 @ Get_MemoryOffset_LowBit);
/*80260D7C 0025DB7C*/ PPC::Runtime::ASM::bl(fn_80255438);
/*80260D80 0025DB80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260D84 0025DB84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80260D88 0025DB88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80260D8C 0025DB8C*/ PPC::Runtime::ASM::blr();
}