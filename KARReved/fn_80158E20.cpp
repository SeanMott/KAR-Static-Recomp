//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80158E20(PPC::Runtime::GCContext* context)
{
/*80158E20 00155C20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80158E24 00155C24*/ PPC::Runtime::ASM::mflr(context->r0);
/*80158E28 00155C28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80158E2C 00155C2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80158E30 00155C30*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80158E34 00155C34*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80158E38 00155C38*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80158E3C 00155C3C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80158E40, 0x80158E40) //this is a jump label
/*80158E40 00155C40*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80158E44 00155C44*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80158E48 00155C48*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80158E4C 00155C4C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80158E50 00155C50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x760, context->r30));
/*80158E54 00155C54*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80158E58 00155C58*/ PPC::Runtime::ASM::beq(.L_80158E64);
/*80158E5C 00155C5C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80158E60 00155C60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x760, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80158E64, 0x80158E64) //this is a jump label
/*80158E64 00155C64*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80158E68 00155C68*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80158E6C 00155C6C*/ PPC::Runtime::ASM::blt(.L_80158E40);
/*80158E70 00155C70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80158E74 00155C74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80158E78 00155C78*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80158E7C 00155C7C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80158E80 00155C80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80158E84 00155C84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80158E88 00155C88*/ PPC::Runtime::ASM::blr();
}