//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800EBE44(PPC::Runtime::GCContext* context)
{
/*800EBE44 000E8C44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800EBE48 000E8C48*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EBE4C 000E8C4C*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*800EBE50 000E8C50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800EBE54 000E8C54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800EBE58 000E8C58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800EBE5C 000E8C5C*/ PPC::Runtime::ASM::li(context->r30, -0x1);
/*800EBE60 000E8C60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EBE64 000E8C64*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EBE68 000E8C68*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800EBE6C 000E8C6C*/ PPC::Runtime::ASM::bne(.L_800EBE78);
/*800EBE70 000E8C70*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*800EBE74 000E8C74*/ PPC::Runtime::ASM::b(.L_800EBF54);
RUNTIME_PPC_JUMP_LABEL(.L_800EBE78, 0x800EBE78) //this is a jump label
/*800EBE78 000E8C78*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xc);
/*800EBE7C 000E8C7C*/ PPC::Runtime::ASM::bgt(.L_800EBEC4);
/*800EBE80 000E8C80*/ PPC::Runtime::ASM::lis(context->r4, jumptable_804A5290 @ Get_MemoryOffset_HighBit);
/*800EBE84 000E8C84*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800EBE88 000E8C88*/ PPC::Runtime::ASM::addi(context->r3, context->r4, jumptable_804A5290 @ Get_MemoryOffset_LowBit);
/*800EBE8C 000E8C8C*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800EBE90 000E8C90*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800EBE94 000E8C94*/ PPC::Runtime::ASM::bctr();
/*800EBE98 000E8C98*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800EBE9C 000E8C9C*/ PPC::Runtime::ASM::b(.L_800EBEC4);
/*800EBEA0 000E8CA0*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*800EBEA4 000E8CA4*/ PPC::Runtime::ASM::b(.L_800EBEC4);
/*800EBEA8 000E8CA8*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*800EBEAC 000E8CAC*/ PPC::Runtime::ASM::b(.L_800EBEC4);
/*800EBEB0 000E8CB0*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*800EBEB4 000E8CB4*/ PPC::Runtime::ASM::b(.L_800EBEC4);
/*800EBEB8 000E8CB8*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800EBEBC 000E8CBC*/ PPC::Runtime::ASM::b(.L_800EBEC4);
/*800EBEC0 000E8CC0*/ PPC::Runtime::ASM::li(context->r6, 0x5);
RUNTIME_PPC_JUMP_LABEL(.L_800EBEC4, 0x800EBEC4) //this is a jump label
/*800EBEC4 000E8CC4*/ PPC::Runtime::ASM::cmpwi(context->r6, -0x1);
/*800EBEC8 000E8CC8*/ PPC::Runtime::ASM::beq(.L_800EBF50);
/*800EBECC 000E8CCC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800EBED0 000E8CD0*/ PPC::Runtime::ASM::slwi(context->r31, context->r6, 1);
/*800EBED4 000E8CD4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800EBED8 000E8CD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*800EBEDC 000E8CDC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*800EBEE0 000E8CE0*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800EBEE4 000E8CE4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EBEE8 000E8CE8*/ PPC::Runtime::ASM::ble(.L_800EBF08);
RUNTIME_PPC_JUMP_LABEL(.L_800EBEEC, 0x800EBEEC) //this is a jump label
/*800EBEEC 000E8CEC*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x4);
/*800EBEF0 000E8CF0*/ PPC::Runtime::ASM::lhax(context->r4, context->r31, context->r0);
/*800EBEF4 000E8CF4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*800EBEF8 000E8CF8*/ PPC::Runtime::ASM::beq(.L_800EBF00);
/*800EBEFC 000E8CFC*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
RUNTIME_PPC_JUMP_LABEL(.L_800EBF00, 0x800EBF00) //this is a jump label
/*800EBF00 000E8D00*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x10);
/*800EBF04 000E8D04*/ PPC::Runtime::ASM::bdnz(.L_800EBEEC);
RUNTIME_PPC_JUMP_LABEL(.L_800EBF08, 0x800EBF08) //this is a jump label
/*800EBF08 000E8D08*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800EBF0C 000E8D0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*800EBF10 000E8D10*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800EBF14 000E8D14*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*800EBF18 000E8D18*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800EBF1C 000E8D1C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EBF20 000E8D20*/ PPC::Runtime::ASM::ble(.L_800EBF50);
RUNTIME_PPC_JUMP_LABEL(.L_800EBF24, 0x800EBF24) //this is a jump label
/*800EBF24 000E8D24*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x4);
/*800EBF28 000E8D28*/ PPC::Runtime::ASM::lhax(context->r4, context->r31, context->r0);
/*800EBF2C 000E8D2C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*800EBF30 000E8D30*/ PPC::Runtime::ASM::beq(.L_800EBF48);
/*800EBF34 000E8D34*/ PPC::Runtime::ASM::add(context->r6, context->r6, context->r4);
/*800EBF38 000E8D38*/ PPC::Runtime::ASM::cmpw(context->r3, context->r6);
/*800EBF3C 000E8D3C*/ PPC::Runtime::ASM::bge(.L_800EBF48);
/*800EBF40 000E8D40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800EBF44 000E8D44*/ PPC::Runtime::ASM::b(.L_800EBF50);
RUNTIME_PPC_JUMP_LABEL(.L_800EBF48, 0x800EBF48) //this is a jump label
/*800EBF48 000E8D48*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x10);
/*800EBF4C 000E8D4C*/ PPC::Runtime::ASM::bdnz(.L_800EBF24);
RUNTIME_PPC_JUMP_LABEL(.L_800EBF50, 0x800EBF50) //this is a jump label
/*800EBF50 000E8D50*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_800EBF54, 0x800EBF54) //this is a jump label
/*800EBF54 000E8D54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800EBF58 000E8D58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800EBF5C 000E8D5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800EBF60 000E8D60*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EBF64 000E8D64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EBF68 000E8D68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800EBF6C 000E8D6C*/ PPC::Runtime::ASM::blr();
}