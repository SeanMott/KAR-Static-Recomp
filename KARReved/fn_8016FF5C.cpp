//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8016FF5C(PPC::Runtime::GCContext* context)
{
/*8016FF5C 0016CD5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016FF60 0016CD60*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016FF64 0016CD64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016FF68 0016CD68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016FF6C 0016CD6C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8016FF70 0016CD70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016FF74 0016CD74*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016FF78 0016CD78*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8016FF7C, 0x8016FF7C) //this is a jump label
/*8016FF7C 0016CD7C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8016FF80 0016CD80*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8016FF84 0016CD84*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8016FF88 0016CD88*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8016FF8C 0016CD8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbf0, context->r30));
/*8016FF90 0016CD90*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8016FF94 0016CD94*/ PPC::Runtime::ASM::beq(.L_8016FFA0);
/*8016FF98 0016CD98*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8016FF9C 0016CD9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbf0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8016FFA0, 0x8016FFA0) //this is a jump label
/*8016FFA0 0016CDA0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8016FFA4 0016CDA4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8016FFA8 0016CDA8*/ PPC::Runtime::ASM::blt(.L_8016FF7C);
/*8016FFAC 0016CDAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016FFB0 0016CDB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016FFB4 0016CDB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016FFB8 0016CDB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016FFBC 0016CDBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016FFC0 0016CDC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016FFC4 0016CDC4*/ PPC::Runtime::ASM::blr();
}