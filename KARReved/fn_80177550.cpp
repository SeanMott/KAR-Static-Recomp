//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80172C3C.hpp"
#include "fn_80172CA8.hpp"



void fn_80177550(PPC::Runtime::GCContext* context)
{
/*80177550 00174350*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80177554 00174354*/ PPC::Runtime::ASM::mflr(context->r0);
/*80177558 00174358*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8017755C 0017435C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80177560 00174360*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80177564 00174364*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80177568 00174368*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8017756C 0017436C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80177570 00174370*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80177574 00174374*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r30));
/*80177578 00174378*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8017757C 0017437C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80177580 00174380*/ PPC::Runtime::ASM::bgt(.L_80177594);
/*80177584 00174384*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80177588 00174388*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8017758C 0017438C*/ PPC::Runtime::ASM::bl(fn_80172C3C);
/*80177590 00174390*/ PPC::Runtime::ASM::b(.L_801775A0);
RUNTIME_PPC_JUMP_LABEL(.L_80177594, 0x80177594) //this is a jump label
/*80177594 00174394*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80177598 00174398*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8017759C 0017439C*/ PPC::Runtime::ASM::bl(fn_80172CA8);
RUNTIME_PPC_JUMP_LABEL(.L_801775A0, 0x801775A0) //this is a jump label
/*801775A0 001743A0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801775A4 001743A4*/ PPC::Runtime::ASM::bne(.L_801775B8);
/*801775A8 001743A8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6D28 @ Get_MemoryOffset_SDA21);
/*801775AC 001743AC*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*801775B0 001743B0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6D30 @ Get_MemoryOffset_SDA21);
/*801775B4 001743B4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801775B8, 0x801775B8) //this is a jump label
/*801775B8 001743B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801775BC 001743BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801775C0 001743C0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*801775C4 001743C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*801775C8 001743C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801775CC 001743CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*801775D0 001743D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801775D4 001743D4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*801775D8 001743D8*/ PPC::Runtime::ASM::bne(.L_80177624);
/*801775DC 001743DC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801775E0 001743E0*/ PPC::Runtime::ASM::beq(.L_80177624);
/*801775E4 001743E4*/ PPC::Runtime::ASM::bne(.L_801775F8);
/*801775E8 001743E8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6D28 @ Get_MemoryOffset_SDA21);
/*801775EC 001743EC*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801775F0 001743F0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6D30 @ Get_MemoryOffset_SDA21);
/*801775F4 001743F4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801775F8, 0x801775F8) //this is a jump label
/*801775F8 001743F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801775FC 001743FC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80177600 00174400*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80177604 00174404*/ PPC::Runtime::ASM::bne(.L_80177614);
/*80177608 00174408*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8017760C 0017440C*/ PPC::Runtime::ASM::beq(.L_80177614);
/*80177610 00174410*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80177614, 0x80177614) //this is a jump label
/*80177614 00174414*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80177618 00174418*/ PPC::Runtime::ASM::bne(.L_80177624);
/*8017761C 0017441C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80177620 00174420*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80177624, 0x80177624) //this is a jump label
/*80177624 00174424*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80177628 00174428*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8017762C 0017442C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80177630 00174430*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80177634 00174434*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80177638 00174438*/ PPC::Runtime::ASM::blr();
}