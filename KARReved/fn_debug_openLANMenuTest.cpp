//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AFD78.hpp"
#include "fn_800AFD78.hpp"
#include "fn_800ABA74.hpp"



void fn_debug_openLANMenuTest(PPC::Runtime::GCContext* context)
{
/*800ADD84 000AAB84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADD88 000AAB88*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADD8C 000AAB8C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADD90 000AAB90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADD94 000AAB94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADD98 000AAB98*/ PPC::Runtime::ASM::bne(.L_800ADDD0);
/*800ADD9C 000AAB9C*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADDA0 000AABA0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADDA4 000AABA4*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADDA8 000AABA8*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_39_SomethingToDoWithLoadingTheLANMenu @ Get_MemoryOffset_HighBit);
/*800ADDAC 000AABAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADDB0 000AABB0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_39_SomethingToDoWithLoadingTheLANMenu @ Get_MemoryOffset_LowBit);
/*800ADDB4 000AABB4*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADDB8 000AABB8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADDBC 000AABBC*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADDC0 000AABC0*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADDC4 000AABC4*/ PPC::Runtime::ASM::lis(context->r4, fn_800AFD78 @ Get_MemoryOffset_HighBit);
/*800ADDC8 000AABC8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AFD78 @ Get_MemoryOffset_LowBit);
/*800ADDCC 000AABCC*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADDD0, 0x800ADDD0) //this is a jump label
/*800ADDD0 000AABD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADDD4 000AABD4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADDD8 000AABD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADDDC 000AABDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADDE0 000AABE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADDE4 000AABE4*/ PPC::Runtime::ASM::blr();
}