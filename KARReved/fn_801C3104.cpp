//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019FE98.hpp"
#include "fn_801C2268.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_801C3F40.hpp"



void fn_801C3104(PPC::Runtime::GCContext* context)
{
/*801C3104 001BFF04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C3108 001BFF08*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C310C 001BFF0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3110 001BFF10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3114 001BFF14*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C3118 001BFF18*/ PPC::Runtime::ASM::bl(fn_8019FE98);
/*801C311C 001BFF1C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3120 001BFF20*/ PPC::Runtime::ASM::bl(fn_801C2268);
/*801C3124 001BFF24*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C3128 001BFF28*/ PPC::Runtime::ASM::bne(.L_801C3140);
/*801C312C 001BFF2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3130 001BFF30*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801C3134 001BFF34*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3138 001BFF38*/ PPC::Runtime::ASM::bl(fn_801C3F40);
/*801C313C 001BFF3C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801C3140, 0x801C3140) //this is a jump label
/*801C3140 001BFF40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3144 001BFF44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3148 001BFF48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C314C 001BFF4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C3150 001BFF50*/ PPC::Runtime::ASM::blr();
}