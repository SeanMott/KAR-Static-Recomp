//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F6438.hpp"
#include "fn_800F645C.hpp"
#include "fn_80082838.hpp"
#include "fn_800D1D98.hpp"



void fn_800F6570(PPC::Runtime::GCContext* context)
{
/*800F6570 000F3370*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800F6574 000F3374*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F6578 000F3378*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F657C 000F337C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F6580 000F3380*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800F6584 000F3384*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F6588 000F3388*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*800F658C 000F338C*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F6590 000F3390*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800F6594 000F3394*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r29));
/*800F6598 000F3398*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800F659C 000F339C*/ PPC::Runtime::ASM::mr(context->r27, context->r6);
/*800F65A0 000F33A0*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/* 800F65A4 000F33A4  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*800F65A8 000F33A8*/ PPC::Runtime::ASM::bne(.L_800F6614);
/*800F65AC 000F33AC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x727, context->r30));
/* 800F65B0 000F33B0  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*800F65B4 000F33B4*/ PPC::Runtime::ASM::beq(.L_800F6614);
/*800F65B8 000F33B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800F65BC 000F33BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800F65C0 000F33C0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F65C4 000F33C4*/ PPC::Runtime::ASM::beq(.L_800F6614);
/*800F65C8 000F33C8*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*800F65CC 000F33CC*/ PPC::Runtime::ASM::bne(.L_800F65F4);
/*800F65D0 000F33D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x71c, context->r30));
/* 800F65D4 000F33D4  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800F65D8 000F33D8*/ PPC::Runtime::ASM::beq(.L_800F65E4);
/*800F65DC 000F33DC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F65E0 000F33E0*/ PPC::Runtime::ASM::bl(fn_800F6438);
RUNTIME_PPC_JUMP_LABEL(.L_800F65E4, 0x800F65E4) //this is a jump label
/*800F65E4 000F33E4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F65E8 000F33E8*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*800F65EC 000F33EC*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*800F65F0 000F33F0*/ PPC::Runtime::ASM::bl(fn_800F645C);
RUNTIME_PPC_JUMP_LABEL(.L_800F65F4, 0x800F65F4) //this is a jump label
/*800F65F4 000F33F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r25));
/*800F65F8 000F33F8*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F65FC 000F33FC*/ PPC::Runtime::ASM::bl(fn_LooseBallAnims_GetDesperationInfo_TakeParam_UnsignedInt);
/*800F6600 000F3400*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*800F6604 000F3404*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F6608 000F3408*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F660C 000F340C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800F6610 000F3410*/ PPC::Runtime::ASM::bl(fn_8040A7B8);
RUNTIME_PPC_JUMP_LABEL(.L_800F6614, 0x800F6614) //this is a jump label
/*800F6614 000F3414*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x725, context->r30));
/* 800F6618 000F3418  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*800F661C 000F341C*/ PPC::Runtime::ASM::beq(.L_800F6638);
/*800F6620 000F3420*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r29));
/*800F6624 000F3424*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800F6628 000F3428*/ PPC::Runtime::ASM::bl(fn_80082838);
/*800F662C 000F342C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800F6630 000F3430*/ PPC::Runtime::ASM::beq(.L_800F6638);
/*800F6634 000F3434*/ PPC::Runtime::ASM::li(context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800F6638, 0x800F6638) //this is a jump label
/*800F6638 000F3438*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x0);
/*800F663C 000F343C*/ PPC::Runtime::ASM::beq(.L_800F6654);
/*800F6640 000F3440*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*800F6644 000F3444*/ PPC::Runtime::ASM::bl(fn_HSD_StateInvalidate);
/*800F6648 000F3448*/ PPC::Runtime::ASM::bl(fn_HSD_StateInitTev);
/*800F664C 000F344C*/ PPC::Runtime::ASM::bl(fn_HSD_ClearVtxDesc);
/*800F6650 000F3450*/ PPC::Runtime::ASM::bl(fn_800D1D98);
RUNTIME_PPC_JUMP_LABEL(.L_800F6654, 0x800F6654) //this is a jump label
/*800F6654 000F3454*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F6658 000F3458*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800F665C 000F345C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F6660 000F3460*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F6664 000F3464*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800F6668 000F3468*/ PPC::Runtime::ASM::blr();
}