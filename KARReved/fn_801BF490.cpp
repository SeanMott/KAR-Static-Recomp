//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_8019FCA0.hpp"
#include "fn_801BE1C0.hpp"
#include "fn_801BE1DC.hpp"



void fn_801BF490(PPC::Runtime::GCContext* context)
{
/*801BF490 001BC290*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BF494 001BC294*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BF498 001BC298*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1880 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BF49C 001BC29C*/ PPC::Runtime::ASM::li(context->r4, 0x23);
/*801BF4A0 001BC2A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF4A4 001BC2A4*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801BF4A8 001BC2A8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801BF4AC 001BC2AC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1884 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BF4B0 001BC2B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF4B4 001BC2B4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BF4B8 001BC2B8*/ PPC::Runtime::ASM::li(context->r6, 0x40);
/*801BF4BC 001BC2BC*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801BF4C0 001BC2C0*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*801BF4C4 001BC2C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF4C8 001BC2C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x464, context->r31));
/*801BF4CC 001BC2CC*/ PPC::Runtime::ASM::bl(fn_8019FCA0);
/*801BF4D0 001BC2D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF4D4 001BC2D4*/ PPC::Runtime::ASM::bl(fn_801BE1C0);
/*801BF4D8 001BC2D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF4DC 001BC2DC*/ PPC::Runtime::ASM::bl(fn_801BE1DC);
/*801BF4E0 001BC2E0*/ PPC::Runtime::ASM::li(context->r0, 0xfe);
/*801BF4E4 001BC2E4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa41, context->r31));
/*801BF4E8 001BC2E8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa40, context->r31));
/*801BF4EC 001BC2EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF4F0 001BC2F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF4F4 001BC2F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BF4F8 001BC2F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BF4FC 001BC2FC*/ PPC::Runtime::ASM::blr();
}