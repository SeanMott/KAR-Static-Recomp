//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "fn_OSWakeupThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_803D798C(PPC::Runtime::GCContext* context)
{
/*803D798C 003D478C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D7990 003D4790*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D7994 003D4794*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803D7998 003D4798*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D799C 003D479C*/ PPC::Runtime::ASM::addi(context->r31, context->r5, 0x0);
/*803D79A0 003D47A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D79A4 003D47A4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D79A8 003D47A8*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*803D79AC 003D47AC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D79B0 003D47B0*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*803D79B4 003D47B4*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D79B8 003D47B8*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803D79BC 003D47BC*/ PPC::Runtime::ASM::clrlwi(context->r31, context->r31, 31);
/*803D79C0 003D47C0*/ PPC::Runtime::ASM::b(.L_803D79E4);
RUNTIME_PPC_JUMP_LABEL(.L_803D79C4, 0x803D79C4) //this is a jump label
/*803D79C4 003D47C4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803D79C8 003D47C8*/ PPC::Runtime::ASM::bne(.L_803D79DC);
/*803D79CC 003D47CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803D79D0 003D47D0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D79D4 003D47D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D79D8 003D47D8*/ PPC::Runtime::ASM::b(.L_803D7A34);
RUNTIME_PPC_JUMP_LABEL(.L_803D79DC, 0x803D79DC) //this is a jump label
/*803D79DC 003D47DC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803D79E0 003D47E0*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_803D79E4, 0x803D79E4) //this is a jump label
/*803D79E4 003D47E4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*803D79E8 003D47E8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*803D79EC 003D47EC*/ PPC::Runtime::ASM::cmpw(context->r6, context->r4);
/*803D79F0 003D47F0*/ PPC::Runtime::ASM::ble(.L_803D79C4);
/*803D79F4 003D47F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*803D79F8 003D47F8*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x8);
/*803D79FC 003D47FC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*803D7A00 003D4800*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r4);
/*803D7A04 003D4804*/ PPC::Runtime::ASM::divw(context->r0, context->r4, context->r6);
/*803D7A08 003D4808*/ PPC::Runtime::ASM::mullw(context->r0, context->r0, context->r6);
/*803D7A0C 003D480C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r4);
/*803D7A10 003D4810*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*803D7A14 003D4814*/ PPC::Runtime::ASM::stwx(context->r29, context->r5, context->r0);
/*803D7A18 003D4818*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*803D7A1C 003D481C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*803D7A20 003D4820*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*803D7A24 003D4824*/ PPC::Runtime::ASM::bl(fn_OSWakeupThread);
/*803D7A28 003D4828*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803D7A2C 003D482C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D7A30 003D4830*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803D7A34, 0x803D7A34) //this is a jump label
/*803D7A34 003D4834*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803D7A38 003D4838*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D7A3C 003D483C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D7A40 003D4840*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D7A44 003D4844*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D7A48 003D4848*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803D7A4C 003D484C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D7A50 003D4850*/ PPC::Runtime::ASM::blr();
}