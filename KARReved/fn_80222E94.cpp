//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005EA20.hpp"
#include "fn_8005D64C.hpp"
#include "fn_8005E08C.hpp"



void fn_80222E94(PPC::Runtime::GCContext* context)
{
/*80222E94 0021FC94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80222E98 0021FC98*/ PPC::Runtime::ASM::mflr(context->r0);
/*80222E9C 0021FC9C*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*80222EA0 0021FCA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80222EA4 0021FCA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80222EA8 0021FCA8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80222EAC 0021FCAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r3));
/*80222EB0 0021FCB0*/ PPC::Runtime::ASM::bl(fn_8005EA20);
/*80222EB4 0021FCB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r31));
/*80222EB8 0021FCB8*/ PPC::Runtime::ASM::bl(fn_8005D64C);
/*80222EBC 0021FCBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*80222EC0 0021FCC0*/ PPC::Runtime::ASM::bl(fn_8005E08C);
/*80222EC4 0021FCC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80222EC8 0021FCC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80222ECC 0021FCCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80222ED0 0021FCD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80222ED4 0021FCD4*/ PPC::Runtime::ASM::blr();
}