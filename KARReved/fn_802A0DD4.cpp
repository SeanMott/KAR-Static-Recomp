//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80290D68.hpp"
#include "fn_8028C010.hpp"
#include "fn_8029E334.hpp"



void fn_802A0DD4(PPC::Runtime::GCContext* context)
{
/*802A0DD4 0029DBD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802A0DD8 0029DBD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A0DDC 0029DBDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/* 802A0DE0 0029DBE0  54 80 06 3F */ clrlwi. context->r0 , context->r4 , 24
/*802A0DE4 0029DBE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802A0DE8 0029DBE8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802A0DEC 0029DBEC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*802A0DF0 0029DBF0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A0DF4 0029DBF4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*802A0DF8 0029DBF8*/ PPC::Runtime::ASM::beq(.L_802A0E40);
/*802A0DFC 0029DBFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r29));
/*802A0E00 0029DC00*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A0E04 0029DC04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r29));
/*802A0E08 0029DC08*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802A0E0C 0029DC0C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*802A0E10 0029DC10*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802A0E14 0029DC14*/ PPC::Runtime::ASM::bctrl();
/*802A0E18 0029DC18*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x78);
/*802A0E1C 0029DC1C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A0E20 0029DC20*/ PPC::Runtime::ASM::bl(fn_80290D68);
/*802A0E24 0029DC24*/ PPC::Runtime::ASM::addic.(context->r3, context->r29, 0x78);
/*802A0E28 0029DC28*/ PPC::Runtime::ASM::beq(.L_802A0E58);
/*802A0E2C 0029DC2C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802A0E30 0029DC30*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*802A0E34 0029DC34*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*802A0E38 0029DC38*/ PPC::Runtime::ASM::bl(fn_8028C010);
/*802A0E3C 0029DC3C*/ PPC::Runtime::ASM::b(.L_802A0E58);
RUNTIME_PPC_JUMP_LABEL(.L_802A0E40, 0x802A0E40) //this is a jump label
/*802A0E40 0029DC40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r29));
/*802A0E44 0029DC44*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A0E48 0029DC48*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802A0E4C 0029DC4C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*802A0E50 0029DC50*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802A0E54 0029DC54*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_802A0E58, 0x802A0E58) //this is a jump label
/*802A0E58 0029DC58*/ PPC::Runtime::ASM::addic.(context->r3, context->r29, 0xa90);
/*802A0E5C 0029DC5C*/ PPC::Runtime::ASM::beq(.L_802A0E6C);
/*802A0E60 0029DC60*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*802A0E64 0029DC64*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x78);
/*802A0E68 0029DC68*/ PPC::Runtime::ASM::bl(fn_8029E334);
RUNTIME_PPC_JUMP_LABEL(.L_802A0E6C, 0x802A0E6C) //this is a jump label
/*802A0E6C 0029DC6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802A0E70 0029DC70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802A0E74 0029DC74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802A0E78 0029DC78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A0E7C 0029DC7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A0E80 0029DC80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802A0E84 0029DC84*/ PPC::Runtime::ASM::blr();
}