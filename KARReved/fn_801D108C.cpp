//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8027B524.hpp"
#include "fn_8027B534.hpp"



void fn_801D108C(PPC::Runtime::GCContext* context)
{
/*801D108C 001CDE8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D1090 001CDE90*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D1094 001CDE94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D1098 001CDE98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc37, context->r3));
/* 801D109C 001CDE9C  54 00 F7 FF */ extrwi. context->r0 , context->r0 , 1 , 29
/*801D10A0 001CDEA0*/ PPC::Runtime::ASM::beq(.L_801D10BC);
/*801D10A4 001CDEA4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r3));
/* 801D10A8 001CDEA8  54 00 FF FF */ extrwi. context->r0 , context->r0 , 1 , 30
/*801D10AC 001CDEAC*/ PPC::Runtime::ASM::beq(.L_801D10BC);
/*801D10B0 001CDEB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x674, context->r3));
/*801D10B4 001CDEB4*/ PPC::Runtime::ASM::bl(fn_8027B524);
/*801D10B8 001CDEB8*/ PPC::Runtime::ASM::b(.L_801D10C4);
RUNTIME_PPC_JUMP_LABEL(.L_801D10BC, 0x801D10BC) //this is a jump label
/*801D10BC 001CDEBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x674, context->r3));
/*801D10C0 001CDEC0*/ PPC::Runtime::ASM::bl(fn_8027B534);
RUNTIME_PPC_JUMP_LABEL(.L_801D10C4, 0x801D10C4) //this is a jump label
/*801D10C4 001CDEC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D10C8 001CDEC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D10CC 001CDECC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D10D0 001CDED0*/ PPC::Runtime::ASM::blr();
}