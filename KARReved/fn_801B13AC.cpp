//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801B1420.hpp"
#include "fn_abilityTimer_Bomb_remove.hpp"



void fn_801B13AC(PPC::Runtime::GCContext* context)
{
/*801B13AC 001AE1AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B13B0 001AE1B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B13B4 001AE1B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B13B8 001AE1B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B13BC 001AE1BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B13C0 001AE1C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r3));
/*801B13C4 001AE1C4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801B13C8 001AE1C8*/ PPC::Runtime::ASM::beq(.L_801B13D0);
/*801B13CC 001AE1CC*/ PPC::Runtime::ASM::bl(fn_801B1420);
RUNTIME_PPC_JUMP_LABEL(.L_801B13D0, 0x801B13D0) //this is a jump label
/*801B13D0 001AE1D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B13D4 001AE1D4*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Bomb_remove);
/*801B13D8 001AE1D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B13DC 001AE1DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B13E0 001AE1E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B13E4 001AE1E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B13E8 001AE1E8*/ PPC::Runtime::ASM::blr();
}