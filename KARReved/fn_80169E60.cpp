//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80167EF8.hpp"



void fn_80169E60(PPC::Runtime::GCContext* context)
{
/*80169E60 00166C60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80169E64 00166C64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80169E68 00166C68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80169E6C 00166C6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80169E70 00166C70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80169E74 00166C74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80169E78 00166C78*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80169E7C 00166C7C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80169E80 00166C80*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80169E84 00166C84*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80169E88 00166C88*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80169E8C 00166C8C*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x4);
/*80169E90 00166C90*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*80169E94 00166C94*/ PPC::Runtime::ASM::bl(fn_80167EF8);
/*80169E98 00166C98*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80169E9C 00166C9C*/ PPC::Runtime::ASM::bne(.L_80169EB0);
/*80169EA0 00166CA0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B68 @ Get_MemoryOffset_SDA21);
/*80169EA4 00166CA4*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80169EA8 00166CA8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B70 @ Get_MemoryOffset_SDA21);
/*80169EAC 00166CAC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80169EB0, 0x80169EB0) //this is a jump label
/*80169EB0 00166CB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80169EB4 00166CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80169EB8 00166CB8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80169EBC 00166CBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80169EC0 00166CC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80169EC4 00166CC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80169EC8 00166CC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80169ECC 00166CCC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80169ED0 00166CD0*/ PPC::Runtime::ASM::bne(.L_80169F1C);
/*80169ED4 00166CD4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80169ED8 00166CD8*/ PPC::Runtime::ASM::beq(.L_80169F1C);
/*80169EDC 00166CDC*/ PPC::Runtime::ASM::bne(.L_80169EF0);
/*80169EE0 00166CE0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B68 @ Get_MemoryOffset_SDA21);
/*80169EE4 00166CE4*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80169EE8 00166CE8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B70 @ Get_MemoryOffset_SDA21);
/*80169EEC 00166CEC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80169EF0, 0x80169EF0) //this is a jump label
/*80169EF0 00166CF0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80169EF4 00166CF4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80169EF8 00166CF8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80169EFC 00166CFC*/ PPC::Runtime::ASM::bne(.L_80169F0C);
/*80169F00 00166D00*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80169F04 00166D04*/ PPC::Runtime::ASM::beq(.L_80169F0C);
/*80169F08 00166D08*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80169F0C, 0x80169F0C) //this is a jump label
/*80169F0C 00166D0C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80169F10 00166D10*/ PPC::Runtime::ASM::bne(.L_80169F1C);
/*80169F14 00166D14*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80169F18 00166D18*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80169F1C, 0x80169F1C) //this is a jump label
/*80169F1C 00166D1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80169F20 00166D20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80169F24 00166D24*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80169F28 00166D28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80169F2C 00166D2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80169F30 00166D30*/ PPC::Runtime::ASM::blr();
}