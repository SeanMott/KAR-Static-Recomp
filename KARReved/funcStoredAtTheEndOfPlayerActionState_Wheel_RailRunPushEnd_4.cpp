//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E6FB8.hpp"
#include "funcStoredAtTheStartOfPlayerActionState_Wheel_RailChange_1.hpp"



void funcStoredAtTheEndOfPlayerActionState_Wheel_RailRunPushEnd_4(PPC::Runtime::GCContext* context)
{
/*801F9BC4 001F69C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F9BC8 001F69C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F9BCC 001F69CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F9BD0 001F69D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F9BD4 001F69D4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F9BD8 001F69D8*/ PPC::Runtime::ASM::bl(fn_801E6FB8);
/*801F9BDC 001F69DC*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801F9BE0 001F69E0*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*801F9BE4 001F69E4*/ PPC::Runtime::ASM::beq(.L_801F9BF8);
/*801F9BE8 001F69E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F9BEC 001F69EC*/ PPC::Runtime::ASM::bl(funcStoredAtTheStartOfPlayerActionState_Wheel_RailChange_1);
/*801F9BF0 001F69F0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F9BF4 001F69F4*/ PPC::Runtime::ASM::b(.L_801F9BFC);
RUNTIME_PPC_JUMP_LABEL(.L_801F9BF8, 0x801F9BF8) //this is a jump label
/*801F9BF8 001F69F8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801F9BFC, 0x801F9BFC) //this is a jump label
/*801F9BFC 001F69FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F9C00 001F6A00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F9C04 001F6A04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F9C08 001F6A08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F9C0C 001F6A0C*/ PPC::Runtime::ASM::blr();
}