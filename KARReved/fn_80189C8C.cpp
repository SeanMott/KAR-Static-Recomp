//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_JObj_GetWorldPosition.hpp"



void fn_80189C8C(PPC::Runtime::GCContext* context)
{
/*80189C8C 00186A8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80189C90 00186A90*/ PPC::Runtime::ASM::mflr(context->r0);
/*80189C94 00186A94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80189C98 00186A98*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80189C9C 00186A9C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80189CA0 00186AA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80189CA4 00186AA4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80189CA8 00186AA8*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*80189CAC 00186AAC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/* 80189CB0 00186AB0  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80189CB4 00186AB4*/ PPC::Runtime::ASM::beq(.L_80189CCC);
/*80189CB8 00186AB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80189CBC 00186ABC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x28);
/*80189CC0 00186AC0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80189CC4 00186AC4*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*80189CC8 00186AC8*/ PPC::Runtime::ASM::b(.L_80189CE4);
RUNTIME_PPC_JUMP_LABEL(.L_80189CCC, 0x80189CCC) //this is a jump label
/*80189CCC 00186ACC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*80189CD0 00186AD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*80189CD4 00186AD4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80189CD8 00186AD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80189CDC 00186ADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*80189CE0 00186AE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80189CE4, 0x80189CE4) //this is a jump label
/*80189CE4 00186AE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80189CE8 00186AE8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x4);
/*80189CEC 00186AEC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1c);
/*80189CF0 00186AF0*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*80189CF4 00186AF4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*80189CF8 00186AF8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f31);
/*80189CFC 00186AFC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*80189D00 00186B00*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80189D04 00186B04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80189D08 00186B08*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80189D0C 00186B0C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80189D10 00186B10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80189D14 00186B14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80189D18 00186B18*/ PPC::Runtime::ASM::blr();
}