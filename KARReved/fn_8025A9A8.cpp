//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025A9A8(PPC::Runtime::GCContext* context)
{
/*8025A9A8 002577A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025A9AC 002577AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025A9B0 002577B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A9B4 002577B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A9B8 002577B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025A9BC 002577BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025A9C0 002577C0*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025A9C4 002577C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A9C8 002577C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A9CC 002577CC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A9D0 002577D0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025A9D4 002577D4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025A9D8 002577D8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025A9DC 002577DC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025A9E0 002577E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A9E4 002577E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A9E8 002577E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025A9EC 002577EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025A9F0 002577F0*/ PPC::Runtime::ASM::blr();
}