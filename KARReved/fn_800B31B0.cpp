//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B2C6C.hpp"



void fn_800B31B0(PPC::Runtime::GCContext* context)
{
/*800B31B0 000AFFB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B31B4 000AFFB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B31B8 000AFFB8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800B31BC 000AFFBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B31C0 000AFFC0*/ PPC::Runtime::ASM::bl(fn_800B2C6C);
/*800B31C4 000AFFC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B31C8 000AFFC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B31CC 000AFFCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B31D0 000AFFD0*/ PPC::Runtime::ASM::blr();
}