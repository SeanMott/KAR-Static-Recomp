//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015E020(PPC::Runtime::GCContext* context)
{
/*8015E020 0015AE20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015E024 0015AE24*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015E028 0015AE28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E02C 0015AE2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015E030 0015AE30*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015E034 0015AE34*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015E038 0015AE38*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8015E03C 0015AE3C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015E040 0015AE40*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*8015E044 0015AE44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8ac, context->r31));
/*8015E048 0015AE48*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015E04C 0015AE4C*/ PPC::Runtime::ASM::beq(.L_8015E05C);
/*8015E050 0015AE50*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015E054 0015AE54*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8015E058 0015AE58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8ac, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015E05C, 0x8015E05C) //this is a jump label
/*8015E05C 0015AE5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E060 0015AE60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015E064 0015AE64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015E068 0015AE68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015E06C 0015AE6C*/ PPC::Runtime::ASM::blr();
}