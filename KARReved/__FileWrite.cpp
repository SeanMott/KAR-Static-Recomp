//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fwrite.hpp"



void __FileWrite(PPC::Runtime::GCContext* context)
{
/*803B4ECC 003B1CCC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803B4ED0 003B1CD0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B4ED4 003B1CD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B4ED8 003B1CD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B4EDC 003B1CDC*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*803B4EE0 003B1CE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803B4EE4 003B1CE4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803B4EE8 003B1CE8*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*803B4EEC 003B1CEC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803B4EF0 003B1CF0*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*803B4EF4 003B1CF4*/ PPC::Runtime::ASM::bl(fwrite);
/*803B4EF8 003B1CF8*/ PPC::Runtime::ASM::cmplw(context->r31, context->r3);
/*803B4EFC 003B1CFC*/ PPC::Runtime::ASM::bne(.L_803B4F08);
/*803B4F00 003B1D00*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803B4F04 003B1D04*/ PPC::Runtime::ASM::b(.L_803B4F0C);
RUNTIME_PPC_JUMP_LABEL(.L_803B4F08, 0x803B4F08) //this is a jump label
/*803B4F08 003B1D08*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803B4F0C, 0x803B4F0C) //this is a jump label
/*803B4F0C 003B1D0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B4F10 003B1D10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B4F14 003B1D14*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803B4F18 003B1D18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B4F1C 003B1D1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803B4F20 003B1D20*/ PPC::Runtime::ASM::blr();
}