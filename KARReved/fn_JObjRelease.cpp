//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_IDGetDataFromTable.hpp"
#include "fn_HSD_IDRemoveByIDFromTable.hpp"
#include "fn_HSD_VecFree.hpp"
#include "fn_HSD_MtxFree.hpp"



void fn_JObjRelease(PPC::Runtime::GCContext* context)
{
/*8040E1A8 0040AFA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8040E1AC 0040AFAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040E1B0 0040AFB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040E1B4 0040AFB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040E1B8 0040AFB8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8040E1BC 0040AFBC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8040E1C0 0040AFC0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r4));
/*8040E1C4 0040AFC4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8040E1C8 0040AFC8*/ PPC::Runtime::ASM::bctrl();
/*8040E1CC 0040AFCC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r31));
/*8040E1D0 0040AFD0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040E1D4 0040AFD4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040E1D8 0040AFD8*/ PPC::Runtime::ASM::bl(fn_HSD_IDGetDataFromTable);
/*8040E1DC 0040AFDC*/ PPC::Runtime::ASM::cmplw(context->r3, context->r31);
/*8040E1E0 0040AFE0*/ PPC::Runtime::ASM::bne(.L_8040E1F0);
/*8040E1E4 0040AFE4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r31));
/*8040E1E8 0040AFE8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040E1EC 0040AFEC*/ PPC::Runtime::ASM::bl(fn_HSD_IDRemoveByIDFromTable);
RUNTIME_PPC_JUMP_LABEL(.L_8040E1F0, 0x8040E1F0) //this is a jump label
/*8040E1F0 0040AFF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*8040E1F4 0040AFF4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8040E1F8 0040AFF8*/ PPC::Runtime::ASM::beq(.L_8040E200);
/*8040E1FC 0040AFFC*/ PPC::Runtime::ASM::bl(fn_HSD_VecFree);
RUNTIME_PPC_JUMP_LABEL(.L_8040E200, 0x8040E200) //this is a jump label
/*8040E200 0040B000*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*8040E204 0040B004*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8040E208 0040B008*/ PPC::Runtime::ASM::beq(.L_8040E210);
/*8040E20C 0040B00C*/ PPC::Runtime::ASM::bl(fn_HSD_MtxFree);
RUNTIME_PPC_JUMP_LABEL(.L_8040E210, 0x8040E210) //this is a jump label
/*8040E210 0040B010*/ PPC::Runtime::ASM::lis(context->r4, lbl_805037C8 @ Get_MemoryOffset_HighBit);
/*8040E214 0040B014*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8040E218 0040B018*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_805037C8 @ Get_MemoryOffset_LowBit);
/*8040E21C 0040B01C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8040E220 0040B020*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*8040E224 0040B024*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8040E228 0040B028*/ PPC::Runtime::ASM::bctrl();
/*8040E22C 0040B02C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040E230 0040B030*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040E234 0040B034*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040E238 0040B038*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8040E23C 0040B03C*/ PPC::Runtime::ASM::blr();
}