//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F4F0C.hpp"
#include "fn_800F4F0C.hpp"
#include "fn_800F4D50.hpp"
#include "fn_800F666C.hpp"
#include "fn_800F72CC.hpp"
#include "fn_800F5798.hpp"
#include "fn_800F7308.hpp"
#include "fn_800F73FC.hpp"
#include "fn_800F6274.hpp"
#include "fn_800F77DC.hpp"
#include "fn_800F6394.hpp"
#include "fn_800F8484.hpp"
#include "fn_800F5284.hpp"
#include "fn_800F5284.hpp"
#include "fn_800F52E8.hpp"
#include "fn_800F52E8.hpp"
#include "fn_800F5340.hpp"
#include "fn_800F5340.hpp"
#include "fn_800F5374.hpp"
#include "fn_800F5374.hpp"
#include "fn_800F53A8.hpp"
#include "fn_800F53A8.hpp"
#include "fn_800F53FC.hpp"
#include "fn_800F53FC.hpp"
#include "fn_800F5454.hpp"
#include "fn_800F5454.hpp"
#include "fn_800F4EA0.hpp"
#include "fn_800F4430.hpp"
#include "fn_800F4430.hpp"



void fn_800F4B20(PPC::Runtime::GCContext* context)
{
/*800F4B20 000F1920*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800F4B24 000F1924*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F4B28 000F1928*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F4B2C 000F192C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F4B30 000F1930*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800F4B34 000F1934*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*800F4B38 000F1938*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_978 @ Get_MemoryOffset_HighBit);
/*800F4B3C 000F193C*/ PPC::Runtime::ASM::cmpwi(context->r25, 0x10);
/*800F4B40 000F1940*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800F4B44 000F1944*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_978 @ Get_MemoryOffset_LowBit);
/*800F4B48 000F1948*/ PPC::Runtime::ASM::blt(.L_800F4B5C);
/*800F4B4C 000F194C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x3c);
/*800F4B50 000F1950*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x184);
/*800F4B54 000F1954*/ PPC::Runtime::ASM::li(context->r4, 0x14e);
/*800F4B58 000F1958*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4B5C, 0x800F4B5C) //this is a jump label
/*800F4B5C 000F195C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6C4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4B60 000F1960*/ PPC::Runtime::ASM::slwi(context->r0, context->r25, 2);
/*800F4B64 000F1964*/ PPC::Runtime::ASM::lwz(context->r26, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4B68 000F1968*/ PPC::Runtime::ASM::lwzx(context->r28, context->r3, context->r0);
/*800F4B6C 000F196C*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800F4B70 000F1970*/ PPC::Runtime::ASM::bne(.L_800F4B94);
/*800F4B74 000F1974*/ PPC::Runtime::ASM::mr(context->r4, context->r25);
/*800F4B78 000F1978*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xe8);
/*800F4B7C 000F197C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800F4B80 000F1980*/ PPC::Runtime::ASM::bl(OSReport);
/*800F4B84 000F1984*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x3c);
/*800F4B88 000F1988*/ PPC::Runtime::ASM::li(context->r4, 0xc0);
/*800F4B8C 000F198C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D61A8 @ Get_MemoryOffset_SDA21);
/*800F4B90 000F1990*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4B94, 0x800F4B94) //this is a jump label
/*800F4B94 000F1994*/ PPC::Runtime::ASM::li(context->r3, 0xf);
/*800F4B98 000F1998*/ PPC::Runtime::ASM::li(context->r4, 0x8);
/*800F4B9C 000F199C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800F4BA0 000F19A0*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/*800F4BA4 000F19A4*/ PPC::Runtime::ASM::lis(context->r4, lbl_80557584 @ Get_MemoryOffset_HighBit);
/*800F4BA8 000F19A8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F4BAC 000F19AC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_80557584 @ Get_MemoryOffset_LowBit);
/*800F4BB0 000F19B0*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*800F4BB4 000F19B4*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*800F4BB8 000F19B8*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800F4BBC 000F19BC*/ PPC::Runtime::ASM::lis(context->r4, fn_800F4F0C @ Get_MemoryOffset_HighBit);
/*800F4BC0 000F19C0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_800F4F0C @ Get_MemoryOffset_LowBit);
/*800F4BC4 000F19C4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4BC8 000F19C8*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*800F4BCC 000F19CC*/ PPC::Runtime::ASM::mr(context->r6, context->r27);
/*800F4BD0 000F19D0*/ PPC::Runtime::ASM::bl(fn_GObj_AddUserData);
/*800F4BD4 000F19D4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6fc, context->r26));
/*800F4BD8 000F19D8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4BDC 000F19DC*/ PPC::Runtime::ASM::mr(context->r4, context->r25);
/*800F4BE0 000F19E0*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800F4BE4 000F19E4*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x1);
/*800F4BE8 000F19E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6fc, context->r26));
/*800F4BEC 000F19EC*/ PPC::Runtime::ASM::bl(fn_800F4D50);
/*800F4BF0 000F19F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4BF4 000F19F4*/ PPC::Runtime::ASM::bl(fn_800F666C);
/*800F4BF8 000F19F8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4BFC 000F19FC*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800F4C00 000F1A00*/ PPC::Runtime::ASM::bl(fn_800F72CC);
/*800F4C04 000F1A04*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4C08 000F1A08*/ PPC::Runtime::ASM::bl(fn_800F5798);
/*800F4C0C 000F1A0C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4C10 000F1A10*/ PPC::Runtime::ASM::bl(fn_800F7308);
/*800F4C14 000F1A14*/ PPC::Runtime::ASM::cmpwi(context->r29, -0x1);
/*800F4C18 000F1A18*/ PPC::Runtime::ASM::beq(.L_800F4C30);
/*800F4C1C 000F1A1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r26));
/*800F4C20 000F1A20*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 3);
/*800F4C24 000F1A24*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800F4C28 000F1A28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r27));
/*800F4C2C 000F1A2C*/ PPC::Runtime::ASM::b(.L_800F4C38);
RUNTIME_PPC_JUMP_LABEL(.L_800F4C30, 0x800F4C30) //this is a jump label
/*800F4C30 000F1A30*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800F4C34 000F1A34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_800F4C38, 0x800F4C38) //this is a jump label
/*800F4C38 000F1A38*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4C3C 000F1A3C*/ PPC::Runtime::ASM::bl(fn_800F73FC);
/*800F4C40 000F1A40*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4C44 000F1A44*/ PPC::Runtime::ASM::bl(fn_800F6274);
/*800F4C48 000F1A48*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4C4C 000F1A4C*/ PPC::Runtime::ASM::bl(fn_800F77DC);
/*800F4C50 000F1A50*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4C54 000F1A54*/ PPC::Runtime::ASM::bl(fn_800F6394);
/*800F4C58 000F1A58*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4C5C 000F1A5C*/ PPC::Runtime::ASM::bl(fn_800F8484);
/*800F4C60 000F1A60*/ PPC::Runtime::ASM::lis(context->r4, fn_800F5284 @ Get_MemoryOffset_HighBit);
/*800F4C64 000F1A64*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4C68 000F1A68*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F5284 @ Get_MemoryOffset_LowBit);
/*800F4C6C 000F1A6C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800F4C70 000F1A70*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4C74 000F1A74*/ PPC::Runtime::ASM::lis(context->r4, fn_800F52E8 @ Get_MemoryOffset_HighBit);
/*800F4C78 000F1A78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4C7C 000F1A7C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F52E8 @ Get_MemoryOffset_LowBit);
/*800F4C80 000F1A80*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*800F4C84 000F1A84*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4C88 000F1A88*/ PPC::Runtime::ASM::lis(context->r4, fn_800F5340 @ Get_MemoryOffset_HighBit);
/*800F4C8C 000F1A8C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4C90 000F1A90*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F5340 @ Get_MemoryOffset_LowBit);
/*800F4C94 000F1A94*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*800F4C98 000F1A98*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4C9C 000F1A9C*/ PPC::Runtime::ASM::lis(context->r4, fn_800F5374 @ Get_MemoryOffset_HighBit);
/*800F4CA0 000F1AA0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4CA4 000F1AA4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F5374 @ Get_MemoryOffset_LowBit);
/*800F4CA8 000F1AA8*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*800F4CAC 000F1AAC*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4CB0 000F1AB0*/ PPC::Runtime::ASM::lis(context->r4, fn_800F53A8 @ Get_MemoryOffset_HighBit);
/*800F4CB4 000F1AB4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4CB8 000F1AB8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F53A8 @ Get_MemoryOffset_LowBit);
/*800F4CBC 000F1ABC*/ PPC::Runtime::ASM::li(context->r5, 0x7);
/*800F4CC0 000F1AC0*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4CC4 000F1AC4*/ PPC::Runtime::ASM::lis(context->r4, fn_800F53FC @ Get_MemoryOffset_HighBit);
/*800F4CC8 000F1AC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4CCC 000F1ACC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F53FC @ Get_MemoryOffset_LowBit);
/*800F4CD0 000F1AD0*/ PPC::Runtime::ASM::li(context->r5, 0x9);
/*800F4CD4 000F1AD4*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4CD8 000F1AD8*/ PPC::Runtime::ASM::lis(context->r4, fn_800F5454 @ Get_MemoryOffset_HighBit);
/*800F4CDC 000F1ADC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4CE0 000F1AE0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F5454 @ Get_MemoryOffset_LowBit);
/*800F4CE4 000F1AE4*/ PPC::Runtime::ASM::li(context->r5, 0xa);
/*800F4CE8 000F1AE8*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*800F4CEC 000F1AEC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4CF0 000F1AF0*/ PPC::Runtime::ASM::bl(fn_800F4EA0);
/*800F4CF4 000F1AF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*800F4CF8 000F1AF8*/ PPC::Runtime::ASM::addi(context->r0, context->r1, 0xc);
/*800F4CFC 000F1AFC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800F4D00 000F1B00*/ PPC::Runtime::ASM::lis(context->r4, fn_800F4430 @ Get_MemoryOffset_HighBit);
/*800F4D04 000F1B04*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4D08 000F1B08*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800F4430 @ Get_MemoryOffset_LowBit);
/*800F4D0C 000F1B0C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800F4D10 000F1B10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F4D14 000F1B14*/ PPC::Runtime::ASM::bl(fn_HSD_JObjWalkTree);
/*800F4D18 000F1B18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4D1C 000F1B1C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800F4D20 000F1B20*/ PPC::Runtime::ASM::bne(.L_800F4D34);
/*800F4D24 000F1B24*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x3c);
/*800F4D28 000F1B28*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x128);
/*800F4D2C 000F1B2C*/ PPC::Runtime::ASM::li(context->r4, 0x15c);
/*800F4D30 000F1B30*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4D34, 0x800F4D34) //this is a jump label
/*800F4D34 000F1B34*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F4D38 000F1B38*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F4D3C 000F1B3C*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800F4D40 000F1B40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F4D44 000F1B44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F4D48 000F1B48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800F4D4C 000F1B4C*/ PPC::Runtime::ASM::blr();
}