//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8013B9A8.hpp"



void fn_80133450(PPC::Runtime::GCContext* context)
{
/*80133450 00130250*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80133454 00130254*/ PPC::Runtime::ASM::mflr(context->r0);
/*80133458 00130258*/ PPC::Runtime::ASM::lis(context->r6, StructValues_89_0xFFsAndOtherValues @ Get_MemoryOffset_HighBit);
/*8013345C 0013025C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80133460 00130260*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80133464 00130264*/ PPC::Runtime::ASM::mulli(context->r7, context->r0, 0x50);
/*80133468 00130268*/ PPC::Runtime::ASM::extsb(context->r3, context->r4);
/*8013346C 0013026C*/ PPC::Runtime::ASM::addi(context->r4, context->r6, StructValues_89_0xFFsAndOtherValues @ Get_MemoryOffset_LowBit);
/*80133470 00130270*/ PPC::Runtime::ASM::extsb(context->r0, context->r5);
/*80133474 00130274*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r7);
/*80133478 00130278*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 4);
/*8013347C 0013027C*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r3);
/*80133480 00130280*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80133484 00130284*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80133488 00130288*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8013348C 0013028C*/ PPC::Runtime::ASM::bl(fn_8013B9A8);
/*80133490 00130290*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80133494 00130294*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80133498 00130298*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8013349C 0013029C*/ PPC::Runtime::ASM::blr();
}