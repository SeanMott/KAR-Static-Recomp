//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hsdNew.hpp"
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_8041B58C.hpp"



void fn_HSD_FogAdjLoadDesc(PPC::Runtime::GCContext* context)
{
/*8041B510 00418310*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8041B514 00418314*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041B518 00418318*/ PPC::Runtime::ASM::lis(context->r4, lbl_805042B0 @ Get_MemoryOffset_HighBit);
/*8041B51C 0041831C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041B520 00418320*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041B524 00418324*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8041B528 00418328*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8041B52C 0041832C*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_805042B0 @ Get_MemoryOffset_LowBit);
/*8041B530 00418330*/ PPC::Runtime::ASM::bl(fn_hsdNew);
/* 8041B534 00418334  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8041B538 00418338*/ PPC::Runtime::ASM::bne(.L_8041B54C);
/*8041B53C 0041833C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_495 @ Get_MemoryOffset_SDA21);
/*8041B540 00418340*/ PPC::Runtime::ASM::li(context->r4, 0x12d);
/*8041B544 00418344*/ PPC::Runtime::ASM::li(context->r5, String_ "ad" Get_MemoryOffset_SDA21);
/*8041B548 00418348*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041B54C, 0x8041B54C) //this is a jump label
/*8041B54C 0041834C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8041B550 00418350*/ PPC::Runtime::ASM::bne(.L_8041B564);
/*8041B554 00418354*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_495 @ Get_MemoryOffset_SDA21);
/*8041B558 00418358*/ PPC::Runtime::ASM::li(context->r4, 0x13d);
/*8041B55C 0041835C*/ PPC::Runtime::ASM::li(context->r5, String_ "ad" Get_MemoryOffset_SDA21);
/*8041B560 00418360*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041B564, 0x8041B564) //this is a jump label
/*8041B564 00418364*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041B568 00418368*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8041B56C 0041836C*/ PPC::Runtime::ASM::bl(fn_8041B58C);
/*8041B570 00418370*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041B574 00418374*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041B578 00418378*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041B57C 0041837C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8041B580 00418380*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041B584 00418384*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8041B588 00418388*/ PPC::Runtime::ASM::blr();
}