//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80166660(PPC::Runtime::GCContext* context)
{
/*80166660 00163460*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80166664 00163464*/ PPC::Runtime::ASM::mflr(context->r0);
/*80166668 00163468*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016666C 0016346C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80166670 00163470*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80166674 00163474*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80166678 00163478*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016667C 0016347C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80166680, 0x80166680) //this is a jump label
/*80166680 00163480*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80166684 00163484*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80166688 00163488*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8016668C 0016348C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80166690 00163490*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r30));
/*80166694 00163494*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80166698 00163498*/ PPC::Runtime::ASM::beq(.L_801666A4);
/*8016669C 0016349C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801666A0 001634A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801666A4, 0x801666A4) //this is a jump label
/*801666A4 001634A4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801666A8 001634A8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x5);
/*801666AC 001634AC*/ PPC::Runtime::ASM::blt(.L_80166680);
/*801666B0 001634B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801666B4 001634B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801666B8 001634B8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801666BC 001634BC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801666C0 001634C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801666C4 001634C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801666C8 001634C8*/ PPC::Runtime::ASM::blr();
}