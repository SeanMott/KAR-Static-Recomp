//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80015E10(PPC::Runtime::GCContext* context)
{
/*80015E10 00012C10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80015E14 00012C14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80015E18 00012C18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015E1C 00012C1C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80015E20 00012C20*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*80015E24 00012C24*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4e, context->r3));
/*80015E28 00012C28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015E2C 00012C2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80015E30 00012C30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80015E34 00012C34*/ PPC::Runtime::ASM::blr();
}