//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D7E5C.hpp"



void fn_801E32C4(PPC::Runtime::GCContext* context)
{
/*801E32C4 001E00C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E32C8 001E00C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E32CC 001E00CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E32D0 001E00D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x754, context->r3));
/*801E32D4 001E00D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801E32D8 001E00D8*/ PPC::Runtime::ASM::bne(.L_801E32E8);
/*801E32DC 001E00DC*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E32E0 001E00E0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r4));
/*801E32E4 001E00E4*/ PPC::Runtime::ASM::bl(fn_801D7E5C);
RUNTIME_PPC_JUMP_LABEL(.L_801E32E8, 0x801E32E8) //this is a jump label
/*801E32E8 001E00E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E32EC 001E00EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E32F0 001E00F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E32F4 001E00F4*/ PPC::Runtime::ASM::blr();
}