//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DD6C0.hpp"
#include "fn_800D790C.hpp"
#include "fn_800D7940.hpp"



void fn_800D5250(PPC::Runtime::GCContext* context)
{
/*800D5250 000D2050*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D5254 000D2054*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D5258 000D2058*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D525C 000D205C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D5260 000D2060*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D5264 000D2064*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5268 000D2068*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800D526C 000D206C*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800D5270 000D2070*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D5274 000D2074*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800D5278 000D2078*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D527C 000D207C*/ PPC::Runtime::ASM::addi(context->r31, context->r5, 0x54);
/*800D5280 000D2080*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D5284 000D2084*/ PPC::Runtime::ASM::bl(fn_800DD6C0);
/*800D5288 000D2088*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800D528C 000D208C*/ PPC::Runtime::ASM::cmpwi(context->r30, -0x1);
/*800D5290 000D2090*/ PPC::Runtime::ASM::beq(.L_800D52C0);
/*800D5294 000D2094*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D5298 000D2098*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D529C 000D209C*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800D52A0 000D20A0*/ PPC::Runtime::ASM::bl(fn_800D790C);
/*800D52A4 000D20A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D52A8 000D20A8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D52AC 000D20AC*/ PPC::Runtime::ASM::bl(fn_800D7940);
/*800D52B0 000D20B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D52B4 000D20B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800D52B8 000D20B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800D52BC 000D20BC*/ PPC::Runtime::ASM::b(.L_800D52C4);
RUNTIME_PPC_JUMP_LABEL(.L_800D52C0, 0x800D52C0) //this is a jump label
/*800D52C0 000D20C0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D52C4, 0x800D52C4) //this is a jump label
/*800D52C4 000D20C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D52C8 000D20C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D52CC 000D20CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D52D0 000D20D0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D52D4 000D20D4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D52D8 000D20D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D52DC 000D20DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D52E0 000D20E0*/ PPC::Runtime::ASM::blr();
}