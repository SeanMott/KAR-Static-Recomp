//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A9764(PPC::Runtime::GCContext* context)
{
/*802A9764 002A6564*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A9768 002A6568*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A976C 002A656C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A9770 002A6570*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A9774 002A6574*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A9778 002A6578*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A977C 002A657C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A9780 002A6580*/ PPC::Runtime::ASM::beq(.L_802A9828);
/*802A9784 002A6584*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C1B08 @ Get_MemoryOffset_HighBit);
/*802A9788 002A6588*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A978C 002A658C*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C1B08 @ Get_MemoryOffset_LowBit);
/*802A9790 002A6590*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9794 002A6594*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A9798 002A6598*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A979C 002A659C*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A97A0 002A65A0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A97A4 002A65A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A97A8 002A65A8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97AC 002A65AC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A97B0 002A65B0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97B4 002A65B4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97B8 002A65B8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A97BC 002A65BC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97C0 002A65C0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97C4 002A65C4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A97C8 002A65C8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97CC 002A65CC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97D0 002A65D0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A97D4 002A65D4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97D8 002A65D8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97DC 002A65DC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A97E0 002A65E0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97E4 002A65E4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97E8 002A65E8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A97EC 002A65EC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97F0 002A65F0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A97F4 002A65F4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A97F8 002A65F8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A97FC 002A65FC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9800 002A6600*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A9804 002A6604*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9808 002A6608*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A980C 002A660C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A9810 002A6610*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A9814 002A6614*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A9818 002A6618*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A981C 002A661C*/ PPC::Runtime::ASM::ble(.L_802A9828);
/*802A9820 002A6620*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A9824 002A6624*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A9828, 0x802A9828) //this is a jump label
/*802A9828 002A6628*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A982C 002A662C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A9830 002A6630*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A9834 002A6634*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A9838 002A6638*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A983C 002A663C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A9840 002A6640*/ PPC::Runtime::ASM::blr();
}