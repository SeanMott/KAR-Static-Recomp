//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005523C.hpp"
#include "fn_800550F4.hpp"
#include "fn_800550BC.hpp"



void fn_800DBE48(PPC::Runtime::GCContext* context)
{
/*800DBE48 000D8C48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800DBE4C 000D8C4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DBE50 000D8C50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800DBE54 000D8C54*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800DBE58 000D8C58*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800DBE5C 000D8C5C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800DBE60 000D8C60*/ PPC::Runtime::ASM::bl(_savegpr_21);
/*800DBE64 000D8C64*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800DBE68 000D8C68*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800DBE6C 000D8C6C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800DBE70 000D8C70*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800DBE74 000D8C74*/ PPC::Runtime::ASM::lis(context->r26, 0x1);
/*800DBE78 000D8C78*/ PPC::Runtime::ASM::b(.L_800DBF58);
RUNTIME_PPC_JUMP_LABEL(.L_800DBE7C, 0x800DBE7C) //this is a jump label
/*800DBE7C 000D8C7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DBE80 000D8C80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800DBE84 000D8C84*/ PPC::Runtime::ASM::add(context->r29, context->r0, context->r31);
/*800DBE88 000D8C88*/ PPC::Runtime::ASM::lwz(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800DBE8C 000D8C8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800DBE90 000D8C90*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800DBE94 000D8C94*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r25));
/*800DBE98 000D8C98*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x14);
/*800DBE9C 000D8C9C*/ PPC::Runtime::ASM::cmpwi(context->r24, 0x0);
/*800DBEA0 000D8CA0*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800DBEA4 000D8CA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800DBEA8 000D8CA8*/ PPC::Runtime::ASM::add(context->r23, context->r3, context->r0);
/*800DBEAC 000D8CAC*/ PPC::Runtime::ASM::bne(.L_800DBEC8);
/*800DBEB0 000D8CB0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_932 @ Get_MemoryOffset_HighBit);
/*800DBEB4 000D8CB4*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_933 @ Get_MemoryOffset_HighBit);
/*800DBEB8 000D8CB8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_932 @ Get_MemoryOffset_LowBit);
/*800DBEBC 000D8CBC*/ PPC::Runtime::ASM::li(context->r4, 0x5f);
/*800DBEC0 000D8CC0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_933 @ Get_MemoryOffset_LowBit);
/*800DBEC4 000D8CC4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DBEC8, 0x800DBEC8) //this is a jump label
/*800DBEC8 000D8CC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r25));
/*800DBECC 000D8CCC*/ PPC::Runtime::ASM::slwi(context->r21, context->r24, 3);
/*800DBED0 000D8CD0*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r21);
/*800DBED4 000D8CD4*/ PPC::Runtime::ASM::lwz(context->r22, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800DBED8 000D8CD8*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800DBEDC 000D8CDC*/ PPC::Runtime::ASM::mr(context->r3, context->r22);
/*800DBEE0 000D8CE0*/ PPC::Runtime::ASM::bl(fn_HSD_JObjRemoveAnimAll);
/*800DBEE4 000D8CE4*/ PPC::Runtime::ASM::mr(context->r3, context->r22);
/*800DBEE8 000D8CE8*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*800DBEEC 000D8CEC*/ PPC::Runtime::ASM::bl(fn_8005523C);
/*800DBEF0 000D8CF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r25));
/*800DBEF4 000D8CF4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r23));
/*800DBEF8 000D8CF8*/ PPC::Runtime::ASM::lwzx(context->r22, context->r3, context->r21);
/*800DBEFC 000D8CFC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r23));
/*800DBF00 000D8D00*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r23));
/*800DBF04 000D8D04*/ PPC::Runtime::ASM::mr(context->r3, context->r22);
/*800DBF08 000D8D08*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAddAnimAll);
/*800DBF0C 000D8D0C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF688 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800DBF10 000D8D10*/ PPC::Runtime::ASM::mr(context->r3, context->r22);
/*800DBF14 000D8D14*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*800DBF18 000D8D18*/ PPC::Runtime::ASM::mr(context->r3, context->r22);
/*800DBF1C 000D8D1C*/ PPC::Runtime::ASM::subi(context->r4, context->r26, 0x1);
/*800DBF20 000D8D20*/ PPC::Runtime::ASM::bl(fn_800550F4);
/*800DBF24 000D8D24*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800DBF28 000D8D28*/ PPC::Runtime::ASM::mr(context->r3, context->r22);
/*800DBF2C 000D8D2C*/ PPC::Runtime::ASM::subi(context->r4, context->r26, 0x1);
/*800DBF30 000D8D30*/ PPC::Runtime::ASM::bl(fn_800550BC);
/*800DBF34 000D8D34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800DBF38 000D8D38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800DBF3C 000D8D3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800DBF40 000D8D40*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800DBF44 000D8D44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800DBF48 000D8D48*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800DBF4C 000D8D4C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*800DBF50 000D8D50*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0xc);
/*800DBF54 000D8D54*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DBF58, 0x800DBF58) //this is a jump label
/*800DBF58 000D8D58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800DBF5C 000D8D5C*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*800DBF60 000D8D60*/ PPC::Runtime::ASM::blt(.L_800DBE7C);
/*800DBF64 000D8D64*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800DBF68 000D8D68*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800DBF6C 000D8D6C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800DBF70 000D8D70*/ PPC::Runtime::ASM::bl(_restgpr_21);
/*800DBF74 000D8D74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800DBF78 000D8D78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DBF7C 000D8D7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800DBF80 000D8D80*/ PPC::Runtime::ASM::blr();
}