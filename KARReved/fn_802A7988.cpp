//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A7988(PPC::Runtime::GCContext* context)
{
/*802A7988 002A4788*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A798C 002A478C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A7990 002A4790*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A7994 002A4794*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A7998 002A4798*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A799C 002A479C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A79A0 002A47A0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A79A4 002A47A4*/ PPC::Runtime::ASM::beq(.L_802A7B24);
/*802A79A8 002A47A8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C2800 @ Get_MemoryOffset_HighBit);
/*802A79AC 002A47AC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1c14);
/*802A79B0 002A47B0*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C2800 @ Get_MemoryOffset_LowBit);
/*802A79B4 002A47B4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A79B8 002A47B8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A79BC 002A47BC*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A79C0 002A47C0*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A79C4 002A47C4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A79C8 002A47C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A79CC 002A47CC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A79D0 002A47D0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1b10);
/*802A79D4 002A47D4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A79D8 002A47D8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A79DC 002A47DC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1a0c);
/*802A79E0 002A47E0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A79E4 002A47E4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A79E8 002A47E8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1908);
/*802A79EC 002A47EC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A79F0 002A47F0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A79F4 002A47F4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1804);
/*802A79F8 002A47F8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A79FC 002A47FC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A00 002A4800*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1700);
/*802A7A04 002A4804*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A08 002A4808*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A0C 002A480C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x15fc);
/*802A7A10 002A4810*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A14 002A4814*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A18 002A4818*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x14f8);
/*802A7A1C 002A481C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A20 002A4820*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A24 002A4824*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x13f4);
/*802A7A28 002A4828*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A2C 002A482C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A30 002A4830*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x12f0);
/*802A7A34 002A4834*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A38 002A4838*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A3C 002A483C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x11ec);
/*802A7A40 002A4840*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A44 002A4844*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A48 002A4848*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10e8);
/*802A7A4C 002A484C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A50 002A4850*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A54 002A4854*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xfe4);
/*802A7A58 002A4858*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A5C 002A485C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A60 002A4860*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xee0);
/*802A7A64 002A4864*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A68 002A4868*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A6C 002A486C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A7A70 002A4870*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A74 002A4874*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A78 002A4878*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A7A7C 002A487C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A80 002A4880*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A84 002A4884*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A7A88 002A4888*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A8C 002A488C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A90 002A4890*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A7A94 002A4894*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7A98 002A4898*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7A9C 002A489C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A7AA0 002A48A0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AA4 002A48A4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AA8 002A48A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A7AAC 002A48AC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AB0 002A48B0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AB4 002A48B4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A7AB8 002A48B8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7ABC 002A48BC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AC0 002A48C0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A7AC4 002A48C4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AC8 002A48C8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7ACC 002A48CC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A7AD0 002A48D0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AD4 002A48D4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AD8 002A48D8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A7ADC 002A48DC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AE0 002A48E0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AE4 002A48E4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A7AE8 002A48E8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AEC 002A48EC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AF0 002A48F0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A7AF4 002A48F4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7AF8 002A48F8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7AFC 002A48FC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A7B00 002A4900*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7B04 002A4904*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7B08 002A4908*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A7B0C 002A490C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A7B10 002A4910*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A7B14 002A4914*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A7B18 002A4918*/ PPC::Runtime::ASM::ble(.L_802A7B24);
/*802A7B1C 002A491C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A7B20 002A4920*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A7B24, 0x802A7B24) //this is a jump label
/*802A7B24 002A4924*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A7B28 002A4928*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A7B2C 002A492C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A7B30 002A4930*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A7B34 002A4934*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A7B38 002A4938*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A7B3C 002A493C*/ PPC::Runtime::ASM::blr();
}