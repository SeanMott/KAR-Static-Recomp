//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"
#include "fn_8011582C.hpp"



void fn_8012EA90(PPC::Runtime::GCContext* context)
{
/*8012EA90 0012B890*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012EA94 0012B894*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012EA98 0012B898*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012EA9C 0012B89C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012EAA0 0012B8A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012EAA4 0012B8A4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012EAA8 0012B8A8*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012EAAC 0012B8AC*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xcb8);
/*8012EAB0 0012B8B0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8012EAB4 0012B8B4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8012EAB8, 0x8012EAB8) //this is a jump label
/*8012EAB8 0012B8B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*8012EABC 0012B8BC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012EAC0 0012B8C0*/ PPC::Runtime::ASM::beq(.L_8012EACC);
/*8012EAC4 0012B8C4*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012EAC8 0012B8C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012EACC, 0x8012EACC) //this is a jump label
/*8012EACC 0012B8CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8012EAD0 0012B8D0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012EAD4 0012B8D4*/ PPC::Runtime::ASM::beq(.L_8012EAE0);
/*8012EAD8 0012B8D8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012EADC 0012B8DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012EAE0, 0x8012EAE0) //this is a jump label
/*8012EAE0 0012B8E0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8012EAE4 0012B8E4*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8012EAE8 0012B8E8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8012EAEC 0012B8EC*/ PPC::Runtime::ASM::blt(.L_8012EAB8);
/*8012EAF0 0012B8F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012EAF4 0012B8F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012EAF8 0012B8F8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012EAFC 0012B8FC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012EB00 0012B900*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012EB04 0012B904*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012EB08 0012B908*/ PPC::Runtime::ASM::blr();
}