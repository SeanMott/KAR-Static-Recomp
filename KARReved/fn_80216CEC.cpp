//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80216CEC(PPC::Runtime::GCContext* context)
{
/*80216CEC 00213AEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80216CF0 00213AF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80216CF4 00213AF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80216CF8 00213AF8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80216CFC 00213AFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80216D00 00213B00*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80216D04 00213B04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80216D08 00213B08*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80216D0C 00213B0C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2628 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80216D10 00213B10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80216D14 00213B14*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2610 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80216D18 00213B18*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80216D1C 00213B1C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80216D20 00213B20*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80216D24 00213B24*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80216D28 00213B28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80216D2C 00213B2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80216D30 00213B30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80216D34 00213B34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80216D38 00213B38*/ PPC::Runtime::ASM::blr();
}