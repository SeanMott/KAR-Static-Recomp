//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005F034.hpp"



void fn_801DD3EC(PPC::Runtime::GCContext* context)
{
/*801DD3EC 001DA1EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801DD3F0 001DA1F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DD3F4 001DA1F4*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*801DD3F8 001DA1F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DD3FC 001DA1FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801DD400 001DA200*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r5));
/*801DD404 001DA204*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD844 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DD408 001DA208*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*801DD40C 001DA20C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x94);
/*801DD410 001DA210*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r5));
/*801DD414 001DA214*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r3);
/*801DD418 001DA218*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801DD41C 001DA21C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r3));
/*801DD420 001DA220*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801DD424 001DA224*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801DD428 001DA228*/ PPC::Runtime::ASM::bne(.L_801DD470);
/*801DD42C 001DA22C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r3));
/*801DD430 001DA230*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801DD434 001DA234*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801DD438 001DA238*/ PPC::Runtime::ASM::bne(.L_801DD444);
/*801DD43C 001DA23C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801DD440 001DA240*/ PPC::Runtime::ASM::b(.L_801DD460);
RUNTIME_PPC_JUMP_LABEL(.L_801DD444, 0x801DD444) //this is a jump label
/*801DD444 001DA244*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r3));
/*801DD448 001DA248*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801DD44C 001DA24C*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801DD450 001DA250*/ PPC::Runtime::ASM::bne(.L_801DD45C);
/*801DD454 001DA254*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*801DD458 001DA258*/ PPC::Runtime::ASM::b(.L_801DD460);
RUNTIME_PPC_JUMP_LABEL(.L_801DD45C, 0x801DD45C) //this is a jump label
/*801DD45C 001DA25C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_801DD460, 0x801DD460) //this is a jump label
/*801DD460 001DA260*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84c, context->r5));
/*801DD464 001DA264*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*801DD468 001DA268*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x844, context->r5));
/*801DD46C 001DA26C*/ PPC::Runtime::ASM::bl(fn_8005F034);
RUNTIME_PPC_JUMP_LABEL(.L_801DD470, 0x801DD470) //this is a jump label
/*801DD470 001DA270*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DD474 001DA274*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DD478 001DA278*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801DD47C 001DA27C*/ PPC::Runtime::ASM::blr();
}