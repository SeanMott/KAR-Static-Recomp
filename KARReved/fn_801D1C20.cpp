//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D1E68.hpp"
#include "fn_801D1D80.hpp"



void fn_801D1C20(PPC::Runtime::GCContext* context)
{
/*801D1C20 001CEA20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801D1C24 001CEA24*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D1C28 001CEA28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D1C2C 001CEA2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D1C30 001CEA30*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*801D1C34 001CEA34*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D1C38 001CEA38*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801D1C3C 001CEA3C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D1C40 001CEA40*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801D1C44 001CEA44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801D1C48 001CEA48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801D1C4C 001CEA4C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0xc);
/*801D1C50 001CEA50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x678, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_801D1C54, 0x801D1C54) //this is a jump label
/*801D1C54 001CEA54*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x67c);
/*801D1C58 001CEA58*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801D1C5C 001CEA5C*/ PPC::Runtime::ASM::stbx(context->r31, context->r29, context->r0);
/*801D1C60 001CEA60*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x678);
/*801D1C64 001CEA64*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x304);
/*801D1C68 001CEA68*/ PPC::Runtime::ASM::bl(fn_801D1E68);
/*801D1C6C 001CEA6C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*801D1C70 001CEA70*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x6);
/*801D1C74 001CEA74*/ PPC::Runtime::ASM::blt(.L_801D1C54);
/*801D1C78 001CEA78*/ PPC::Runtime::ASM::mr(context->r6, context->r29);
/*801D1C7C 001CEA7C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801D1C80 001CEA80*/ PPC::Runtime::ASM::li(context->r5, -0x2);
/*801D1C84 001CEA84*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*801D1C88 001CEA88*/ PPC::Runtime::ASM::b(.L_801D1C9C);
RUNTIME_PPC_JUMP_LABEL(.L_801D1C8C, 0x801D1C8C) //this is a jump label
/*801D1C8C 001CEA8C*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x685, context->r6));
/*801D1C90 001CEA90*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x1);
/*801D1C94 001CEA94*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x684, context->r6));
/*801D1C98 001CEA98*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x2);
RUNTIME_PPC_JUMP_LABEL(.L_801D1C9C, 0x801D1C9C) //this is a jump label
/*801D1C9C 001CEA9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x678, context->r29));
/*801D1CA0 001CEAA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801D1CA4 001CEAA4*/ PPC::Runtime::ASM::cmpw(context->r7, context->r0);
/*801D1CA8 001CEAA8*/ PPC::Runtime::ASM::blt(.L_801D1C8C);
/*801D1CAC 001CEAAC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801D1CB0 001CEAB0*/ PPC::Runtime::ASM::bl(fn_801D1D80);
/*801D1CB4 001CEAB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D1CB8 001CEAB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D1CBC 001CEABC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D1CC0 001CEAC0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D1CC4 001CEAC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D1CC8 001CEAC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801D1CCC 001CEACC*/ PPC::Runtime::ASM::blr();
}