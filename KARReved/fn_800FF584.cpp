//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_800FF584(PPC::Runtime::GCContext* context)
{
/*800FF584 000FC384*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FF588 000FC388*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FF58C 000FC38C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FF590 000FC390*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800FF594 000FC394*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FF598 000FC398*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*800FF59C 000FC39C*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800FF5A0 000FC3A0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FF5A4 000FC3A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FF5A8 000FC3A8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FF5AC 000FC3AC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FF5B0 000FC3B0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FF5B4 000FC3B4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*800FF5B8 000FC3B8*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FF5BC 000FC3BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FF5C0 000FC3C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FF5C4 000FC3C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FF5C8 000FC3C8*/ PPC::Runtime::ASM::blr();
}