//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015E070(PPC::Runtime::GCContext* context)
{
/*8015E070 0015AE70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015E074 0015AE74*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015E078 0015AE78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015E07C 0015AE7C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015E080 0015AE80*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015E084 0015AE84*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015E088 0015AE88*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E08C 0015AE8C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015E090, 0x8015E090) //this is a jump label
/*8015E090 0015AE90*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015E094 0015AE94*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015E098 0015AE98*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015E09C 0015AE9C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8015E0A0 0015AEA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8ac, context->r30));
/*8015E0A4 0015AEA4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015E0A8 0015AEA8*/ PPC::Runtime::ASM::beq(.L_8015E0B4);
/*8015E0AC 0015AEAC*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015E0B0 0015AEB0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8ac, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015E0B4, 0x8015E0B4) //this is a jump label
/*8015E0B4 0015AEB4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015E0B8 0015AEB8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015E0BC 0015AEBC*/ PPC::Runtime::ASM::blt(.L_8015E090);
/*8015E0C0 0015AEC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015E0C4 0015AEC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015E0C8 0015AEC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015E0CC 0015AECC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E0D0 0015AED0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015E0D4 0015AED4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015E0D8 0015AED8*/ PPC::Runtime::ASM::blr();
}