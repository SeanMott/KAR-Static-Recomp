//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetTevColorS10(PPC::Runtime::GCContext* context)
{
/*803CEDAC 003CBBAC*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r4));
/*803CEDB0 003CBBB0*/ PPC::Runtime::ASM::slwi(context->r9, context->r3, 1);
/*803CEDB4 003CBBB4*/ PPC::Runtime::ASM::lha(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CEDB8 003CBBB8*/ PPC::Runtime::ASM::addi(context->r8, context->r9, 0xe0);
/*803CEDBC 003CBBBC*/ PPC::Runtime::ASM::clrlslwi(context->r10, context->r0, 21, 12);
/*803CEDC0 003CBBC0*/ PPC::Runtime::ASM::rlwimi(context->r10, context->r5, 0, 21, 31);
/*803CEDC4 003CBBC4*/ PPC::Runtime::ASM::lha(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803CEDC8 003CBBC8*/ PPC::Runtime::ASM::lha(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803CEDCC 003CBBCC*/ PPC::Runtime::ASM::slwi(context->r8, context->r8, 24);
/*803CEDD0 003CBBD0*/ PPC::Runtime::ASM::li(context->r5, 0x61);
/*803CEDD4 003CBBD4*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CEDD8 003CBBD8*/ PPC::Runtime::ASM::lis(context->r4, 0xcc01);
/*803CEDDC 003CBBDC*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEDE0 003CBBE0*/ PPC::Runtime::ASM::rlwimi(context->r8, context->r10, 0, 9, 31);
/*803CEDE4 003CBBE4*/ PPC::Runtime::ASM::addi(context->r0, context->r9, 0xe1);
/*803CEDE8 003CBBE8*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEDEC 003CBBEC*/ PPC::Runtime::ASM::clrlslwi(context->r8, context->r6, 21, 12);
/*803CEDF0 003CBBF0*/ PPC::Runtime::ASM::slwi(context->r6, context->r0, 24);
/*803CEDF4 003CBBF4*/ PPC::Runtime::ASM::rlwimi(context->r8, context->r7, 0, 21, 31);
/*803CEDF8 003CBBF8*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEDFC 003CBBFC*/ PPC::Runtime::ASM::rlwimi(context->r6, context->r8, 0, 9, 31);
/*803CEE00 003CBC00*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE04 003CBC04*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CEE08 003CBC08*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE0C 003CBC0C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE10 003CBC10*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE14 003CBC14*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE18 003CBC18*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CEE1C 003CBC1C*/ PPC::Runtime::ASM::blr();
}