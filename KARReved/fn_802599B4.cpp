//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_802599B4(PPC::Runtime::GCContext* context)
{
/*802599B4 002567B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802599B8 002567B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802599BC 002567BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802599C0 002567C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802599C4 002567C4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802599C8 002567C8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802599CC 002567CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802599D0 002567D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802599D4 002567D4*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*802599D8 002567D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802599DC 002567DC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802599E0 002567E0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*802599E4 002567E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802599E8 002567E8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802599EC 002567EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*802599F0 002567F0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802599F4 002567F4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*802599F8 002567F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802599FC 002567FC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259A00 00256800*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80259A04 00256804*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259A08 00256808*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80259A0C 0025680C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80259A10 00256810*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E3C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80259A14 00256814*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80259A18 00256818*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259A1C 0025681C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80259A20 00256820*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80259A24 00256824*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80259A28 00256828*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80259A2C 0025682C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80259A30 00256830*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80259A34 00256834*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80259A38 00256838*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80259A3C 0025683C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80259A40 00256840*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80259A44 00256844*/ PPC::Runtime::ASM::blr();
}