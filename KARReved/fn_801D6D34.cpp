//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018DBA0.hpp"
#include "fn_801E0C08.hpp"



void fn_801D6D34(PPC::Runtime::GCContext* context)
{
/*801D6D34 001D3B34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801D6D38 001D3B38*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D6D3C 001D3B3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D6D40 001D3B40*/ PPC::Runtime::ASM::mr(context->r0, context->r5);
/*801D6D44 001D3B44*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D6D48 001D3B48*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*801D6D4C 001D3B4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D6D50 001D3B50*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*801D6D54 001D3B54*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D6D58 001D3B58*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*801D6D5C 001D3B5C*/ PPC::Runtime::ASM::mr(context->r6, context->r0);
/*801D6D60 001D3B60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D6D64 001D3B64*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801D6D68 001D3B68*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*801D6D6C 001D3B6C*/ PPC::Runtime::ASM::mr(context->r7, context->r30);
/*801D6D70 001D3B70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801D6D74 001D3B74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801D6D78 001D3B78*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x69c, context->r31));
/*801D6D7C 001D3B7C*/ PPC::Runtime::ASM::bl(fn_8018DBA0);
/*801D6D80 001D3B80*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*801D6D84 001D3B84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D6D88 001D3B88*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*801D6D8C 001D3B8C*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*801D6D90 001D3B90*/ PPC::Runtime::ASM::bl(fn_801E0C08);
/*801D6D94 001D3B94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D6D98 001D3B98*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D6D9C 001D3B9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D6DA0 001D3BA0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D6DA4 001D3BA4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D6DA8 001D3BA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D6DAC 001D3BAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801D6DB0 001D3BB0*/ PPC::Runtime::ASM::blr();
}