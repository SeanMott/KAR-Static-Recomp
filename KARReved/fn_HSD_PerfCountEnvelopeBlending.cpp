//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"



void fn_HSD_PerfCountEnvelopeBlending(PPC::Runtime::GCContext* context)
{
/*8041BBB4 004189B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8041BBB8 004189B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041BBBC 004189BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BBC0 004189C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041BBC4 004189C4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8041BBC8 004189C8*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x20);
/*8041BBCC 004189CC*/ PPC::Runtime::ASM::blt(.L_8041BBE0);
/*8041BBD0 004189D0*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_493 @ Get_MemoryOffset_SDA21);
/*8041BBD4 004189D4*/ PPC::Runtime::ASM::li(context->r4, 0xa4);
/*8041BBD8 004189D8*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_492 @ Get_MemoryOffset_SDA21);
/*8041BBDC 004189DC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041BBE0, 0x8041BBE0) //this is a jump label
/*8041BBE0 004189E0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80504418 @ Get_MemoryOffset_HighBit);
/*8041BBE4 004189E4*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*8041BBE8 004189E8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80504418 @ Get_MemoryOffset_LowBit);
/*8041BBEC 004189EC*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*8041BBF0 004189F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*8041BBF4 004189F4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8041BBF8 004189F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*8041BBFC 004189FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041BC00 00418A00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BC04 00418A04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041BC08 00418A08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8041BC0C 00418A0C*/ PPC::Runtime::ASM::blr();
}