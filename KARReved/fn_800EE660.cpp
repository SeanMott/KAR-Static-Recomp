//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062004.hpp"
#include "fn_SidelineExplodableManager_GetNumExplodables_TakeNoParam.hpp"



void fn_800EE660(PPC::Runtime::GCContext* context)
{
/*800EE660 000EB460*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EE664 000EB464*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EE668 000EB468*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*800EE66C 000EB46C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE670 000EB470*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800EE674 000EB474*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE678 000EB478*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800EE67C 000EB47C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800EE680 000EB480*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800EE684 000EB484*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE688 000EB488*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800EE68C 000EB48C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800EE690 000EB490*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0xc);
/*800EE694 000EB494*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*800EE698 000EB498*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x9);
/*800EE69C 000EB49C*/ PPC::Runtime::ASM::lbzx(context->r0, context->r4, context->r0);
/*800EE6A0 000EB4A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800EE6A4 000EB4A4*/ PPC::Runtime::ASM::beq(.L_800EE6B4);
/*800EE6A8 000EB4A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r5));
/*800EE6AC 000EB4AC*/ PPC::Runtime::ASM::bl(fn_80062004);
/*800EE6B0 000EB4B0*/ PPC::Runtime::ASM::bl(fn_SidelineExplodableManager_GetNumExplodables_TakeNoParam);
RUNTIME_PPC_JUMP_LABEL(.L_800EE6B4, 0x800EE6B4) //this is a jump label
/*800EE6B4 000EB4B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE6B8 000EB4B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EE6BC 000EB4BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EE6C0 000EB4C0*/ PPC::Runtime::ASM::blr();
}