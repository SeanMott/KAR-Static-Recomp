//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"



void fn_800E7B4C(PPC::Runtime::GCContext* context)
{
/*800E7B4C 000E494C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800E7B50 000E4950*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E7B54 000E4954*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800E7B58 000E4958*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800E7B5C 000E495C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*800E7B60 000E4960*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800E7B64 000E4964*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800E7B68 000E4968*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E7B6C 000E496C*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800E7B70 000E4970*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800E7B74 000E4974*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*800E7B78 000E4978*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800E7B7C 000E497C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x14);
/*800E7B80 000E4980*/ PPC::Runtime::ASM::bl(fn_803D22F4);
/*800E7B84 000E4984*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800E7B88 000E4988*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f4);
/*800E7B8C 000E498C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800E7B90 000E4990*/ PPC::Runtime::ASM::bne(.L_800E7C24);
/*800E7B94 000E4994*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*800E7B98 000E4998*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800E7B9C 000E499C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*800E7BA0 000E49A0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800E7BA4 000E49A4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E7BA8 000E49A8*/ PPC::Runtime::ASM::fsubs(context->f3, context->f0, context->f5);
/*800E7BAC 000E49AC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*800E7BB0 000E49B0*/ PPC::Runtime::ASM::fsubs(context->f0, context->f2, context->f0);
/*800E7BB4 000E49B4*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f3);
/*800E7BB8 000E49B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E7BBC 000E49BC*/ PPC::Runtime::ASM::fdivs(context->f2, context->f1, context->f4);
/*800E7BC0 000E49C0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E7BC4 000E49C4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*800E7BC8 000E49C8*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*800E7BCC 000E49CC*/ PPC::Runtime::ASM::fadds(context->f31, context->f5, context->f2);
/*800E7BD0 000E49D0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E7BD4 000E49D4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800E7BD8 000E49D8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*800E7BDC 000E49DC*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*800E7BE0 000E49E0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E7BE4 000E49E4*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*800E7BE8 000E49E8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF744 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E7BEC 000E49EC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800E7BF0 000E49F0*/ PPC::Runtime::ASM::bge(.L_800E7C08);
/*800E7BF4 000E49F4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF748 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E7BF8 000E49F8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800E7BFC 000E49FC*/ PPC::Runtime::ASM::ble(.L_800E7C08);
/*800E7C00 000E4A00*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800E7C04 000E4A04*/ PPC::Runtime::ASM::b(.L_800E7C0C);
RUNTIME_PPC_JUMP_LABEL(.L_800E7C08, 0x800E7C08) //this is a jump label
/*800E7C08 000E4A08*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E7C0C, 0x800E7C0C) //this is a jump label
/*800E7C0C 000E4A0C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E7C10 000E4A10*/ PPC::Runtime::ASM::bne(.L_800E7C1C);
/*800E7C14 000E4A14*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800E7C18 000E4A18*/ PPC::Runtime::ASM::b(.L_800E7C28);
RUNTIME_PPC_JUMP_LABEL(.L_800E7C1C, 0x800E7C1C) //this is a jump label
/*800E7C1C 000E4A1C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF73C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E7C20 000E4A20*/ PPC::Runtime::ASM::b(.L_800E7C28);
RUNTIME_PPC_JUMP_LABEL(.L_800E7C24, 0x800E7C24) //this is a jump label
/*800E7C24 000E4A24*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF73C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800E7C28, 0x800E7C28) //this is a jump label
/*800E7C28 000E4A28*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*800E7C2C 000E4A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800E7C30 000E4A30*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800E7C34 000E4A34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800E7C38 000E4A38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800E7C3C 000E4A3C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E7C40 000E4A40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E7C44 000E4A44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800E7C48 000E4A48*/ PPC::Runtime::ASM::blr();
}