//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"
#include "fn_80062CA4.hpp"



void fn_80103AAC(PPC::Runtime::GCContext* context)
{
/*80103AAC 001008AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*80103AB0 001008B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80103AB4 001008B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*80103AB8 001008B8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*80103ABC 001008BC*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*80103AC0 001008C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80103AC4 001008C4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80103AC8 001008C8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80103ACC 001008CC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80103AD0 001008D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80103AD4 001008D4*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80103AD8 001008D8*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80103ADC 001008DC*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*80103AE0 001008E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80103AE4 001008E4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r4));
/*80103AE8 001008E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80103AEC 001008EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80103AF0 001008F0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*80103AF4 001008F4*/ PPC::Runtime::ASM::lwzx(context->r31, context->r4, context->r0);
/*80103AF8 001008F8*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80103AFC 001008FC*/ PPC::Runtime::ASM::bne(.L_80103B10);
/*80103B00 00100900*/ PPC::Runtime::ASM::li(context->r3, lbl_805D62D0 @ Get_MemoryOffset_SDA21);
/*80103B04 00100904*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*80103B08 00100908*/ PPC::Runtime::ASM::li(context->r5, lbl_805D62D8 @ Get_MemoryOffset_SDA21);
/*80103B0C 0010090C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80103B10, 0x80103B10) //this is a jump label
/*80103B10 00100910*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80103B14 00100914*/ PPC::Runtime::ASM::beq(.L_80103B58);
/*80103B18 00100918*/ PPC::Runtime::ASM::bne(.L_80103B2C);
/*80103B1C 0010091C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D62D0 @ Get_MemoryOffset_SDA21);
/*80103B20 00100920*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80103B24 00100924*/ PPC::Runtime::ASM::li(context->r5, lbl_805D62D8 @ Get_MemoryOffset_SDA21);
/*80103B28 00100928*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80103B2C, 0x80103B2C) //this is a jump label
/*80103B2C 0010092C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80103B30 00100930*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80103B34 00100934*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80103B38 00100938*/ PPC::Runtime::ASM::bne(.L_80103B48);
/*80103B3C 0010093C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80103B40 00100940*/ PPC::Runtime::ASM::beq(.L_80103B48);
/*80103B44 00100944*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80103B48, 0x80103B48) //this is a jump label
/*80103B48 00100948*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80103B4C 0010094C*/ PPC::Runtime::ASM::beq(.L_80103B58);
/*80103B50 00100950*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80103B54 00100954*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_80103B58, 0x80103B58) //this is a jump label
/*80103B58 00100958*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x44);
/*80103B5C 0010095C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*80103B60 00100960*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80103B64 00100964*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80103B68 00100968*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80103B6C 0010096C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80103B70 00100970*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80103B74 00100974*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*80103B78 00100978*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80103B7C 0010097C*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*80103B80 00100980*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80103B84 00100984*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80103B88 00100988*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80103B8C 0010098C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*80103B90 00100990*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80103B94 00100994*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80103B98 00100998*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*80103B9C 0010099C*/ PPC::Runtime::ASM::fmadds(context->f1, context->f2, context->f1, context->f0);
/*80103BA0 001009A0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF998 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80103BA4 001009A4*/ PPC::Runtime::ASM::fmadds(context->f1, context->f4, context->f3, context->f1);
/*80103BA8 001009A8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80103BAC 001009AC*/ PPC::Runtime::ASM::bge(.L_80103C30);
/*80103BB0 001009B0*/ PPC::Runtime::ASM::fabs(context->f31, context->f1);
/*80103BB4 001009B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80103BB8 001009B8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*80103BBC 001009BC*/ PPC::Runtime::ASM::bl(fn_HSD_MtxGetTranslate);
/*80103BC0 001009C0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80103BC4 001009C4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*80103BC8 001009C8*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80103BCC 001009CC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80103BD0 001009D0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80103BD4 001009D4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80103BD8 001009D8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80103BDC 001009DC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80103BE0 001009E0*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*80103BE4 001009E4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*80103BE8 001009E8*/ PPC::Runtime::ASM::frsp(context->f1, context->f31);
/*80103BEC 001009EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80103BF0 001009F0*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80103BF4 001009F4*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80103BF8 001009F8*/ PPC::Runtime::ASM::fsubs(context->f2, context->f2, context->f0);
/*80103BFC 001009FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80103C00 00100A00*/ PPC::Runtime::ASM::fsubs(context->f3, context->f4, context->f3);
/*80103C04 00100A04*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*80103C08 00100A08*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80103C0C 00100A0C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f0);
/*80103C10 00100A10*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80103C14 00100A14*/ PPC::Runtime::ASM::fsubs(context->f4, context->f5, context->f4);
/*80103C18 00100A18*/ PPC::Runtime::ASM::fmadds(context->f2, context->f3, context->f2, context->f0);
/*80103C1C 00100A1C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80103C20 00100A20*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*80103C24 00100A24*/ PPC::Runtime::ASM::fmadds(context->f2, context->f4, context->f3, context->f2);
/*80103C28 00100A28*/ PPC::Runtime::ASM::fmadds(context->f0, context->f2, context->f1, context->f0);
/*80103C2C 00100A2C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80103C30, 0x80103C30) //this is a jump label
/*80103C30 00100A30*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*80103C34 00100A34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*80103C38 00100A38*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*80103C3C 00100A3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80103C40 00100A40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80103C44 00100A44*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80103C48 00100A48*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80103C4C 00100A4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80103C50 00100A50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*80103C54 00100A54*/ PPC::Runtime::ASM::blr();
}