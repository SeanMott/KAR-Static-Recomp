//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029A354(PPC::Runtime::GCContext* context)
{
/*8029A354 00297154*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029A358 00297158*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029A35C 0029715C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A360 00297160*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A364 00297164*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A368 00297168*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029A36C 0029716C*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029A370 00297170*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029A374 00297174*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A378 00297178*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A37C 0029717C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029A380 00297180*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A384 00297184*/ PPC::Runtime::ASM::bctrl();
/*8029A388 00297188*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029A38C 0029718C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A390 00297190*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A394 00297194*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029A398 00297198*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A39C 0029719C*/ PPC::Runtime::ASM::bctrl();
/*8029A3A0 002971A0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029A3A4 002971A4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029A3A8 002971A8*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8029A3AC 002971AC*/ PPC::Runtime::ASM::li(context->r5, 0x9);
/*8029A3B0 002971B0*/ PPC::Runtime::ASM::li(context->r7, 0x2);
/*8029A3B4 002971B4*/ PPC::Runtime::ASM::bl(fn_80391C70);
/*8029A3B8 002971B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A3BC 002971BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A3C0 002971C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A3C4 002971C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029A3C8 002971C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029A3CC 002971CC*/ PPC::Runtime::ASM::blr();
}