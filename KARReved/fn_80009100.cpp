//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80009094.hpp"
#include "fn_80009094.hpp"
#include "fn_800989FC.hpp"
#include "fn_800989FC.hpp"



void fn_80009100(PPC::Runtime::GCContext* context)
{
/*80009100 00005F00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80009104 00005F04*/ PPC::Runtime::ASM::mflr(context->r0);
/*80009108 00005F08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000910C 00005F0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80009110 00005F10*/ PPC::Runtime::ASM::bl(fn_80440744);
/* 80009114 00005F14  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80009118 00005F18*/ PPC::Runtime::ASM::beq(.L_80009134);
/*8000911C 00005F1C*/ PPC::Runtime::ASM::lis(context->r3, fn_80009094 @ Get_MemoryOffset_HighBit);
/*80009120 00005F20*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_80009094 @ Get_MemoryOffset_LowBit);
/*80009124 00005F24*/ PPC::Runtime::ASM::bl(fn_804397B4);
/*80009128 00005F28*/ PPC::Runtime::ASM::lis(context->r3, fn_800989FC @ Get_MemoryOffset_HighBit);
/*8000912C 00005F2C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_800989FC @ Get_MemoryOffset_LowBit);
/*80009130 00005F30*/ PPC::Runtime::ASM::bl(fn_804397B4);
RUNTIME_PPC_JUMP_LABEL(.L_80009134, 0x80009134) //this is a jump label
/*80009134 00005F34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80009138 00005F38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8000913C 00005F3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80009140 00005F40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80009144 00005F44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80009148 00005F48*/ PPC::Runtime::ASM::blr();
}