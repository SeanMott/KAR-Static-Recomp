//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_803A9ED0(PPC::Runtime::GCContext* context)
{
/*803A9ED0 003A6CD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803A9ED4 003A6CD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803A9ED8 003A6CD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803A9EDC 003A6CDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803A9EE0 003A6CE0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803A9EE4 003A6CE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*803A9EE8 003A6CE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803A9EEC 003A6CEC*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*803A9EF0 003A6CF0*/ PPC::Runtime::ASM::beq(.L_803A9F14);
/*803A9EF4 003A6CF4*/ PPC::Runtime::ASM::bl(strlen);
/*803A9EF8 003A6CF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803A9EFC 003A6CFC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803A9F00 003A6D00*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r3);
/*803A9F04 003A6D04*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x1, context->r4));
/*803A9F08 003A6D08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803A9F0C 003A6D0C*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r3);
/*803A9F10 003A6D10*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x2, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803A9F14, 0x803A9F14) //this is a jump label
/*803A9F14 003A6D14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803A9F18 003A6D18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803A9F1C 003A6D1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803A9F20 003A6D20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803A9F24 003A6D24*/ PPC::Runtime::ASM::blr();
}