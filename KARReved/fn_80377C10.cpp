//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80377C10(PPC::Runtime::GCContext* context)
{
/*80377C10 00374A10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80377C14 00374A14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80377C18 00374A18*/ PPC::Runtime::ASM::lis(context->r4, lbl_804F20F0 @ Get_MemoryOffset_HighBit);
/*80377C1C 00374A1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80377C20 00374A20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80377C24 00374A24*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_804F20F0 @ Get_MemoryOffset_LowBit);
/*80377C28 00374A28*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80377C2C 00374A2C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80377C30 00374A30*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80377C34 00374A34*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*80377C38 00374A38*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80377C3C 00374A3C*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80377C40, 0x80377C40) //this is a jump label
/*80377C40 00374A40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80377C44 00374A44*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80377C48 00374A48*/ PPC::Runtime::ASM::bl(fn_strcmp);
/*80377C4C 00374A4C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80377C50 00374A50*/ PPC::Runtime::ASM::beq(.L_80377C64);
/*80377C54 00374A54*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80377C58 00374A58*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x10);
/*80377C5C 00374A5C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x16);
/*80377C60 00374A60*/ PPC::Runtime::ASM::blt(.L_80377C40);
RUNTIME_PPC_JUMP_LABEL(.L_80377C64, 0x80377C64) //this is a jump label
/*80377C64 00374A64*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F20F0 @ Get_MemoryOffset_HighBit);
/*80377C68 00374A68*/ PPC::Runtime::ASM::slwi(context->r4, context->r30, 4);
/*80377C6C 00374A6C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F20F0 @ Get_MemoryOffset_LowBit);
/*80377C70 00374A70*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*80377C74 00374A74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80377C78 00374A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80377C7C 00374A7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80377C80 00374A80*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*80377C84 00374A84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80377C88 00374A88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80377C8C 00374A8C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80377C90 00374A90*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80377C94 00374A94*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80377C98 00374A98*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80377C9C 00374A9C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80377CA0 00374AA0*/ PPC::Runtime::ASM::blr();
}