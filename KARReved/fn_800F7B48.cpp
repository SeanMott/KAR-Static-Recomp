//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F7B48(PPC::Runtime::GCContext* context)
{
/*800F7B48 000F4948*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F7B4C 000F494C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7B50 000F4950*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7B54 000F4954*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*800F7B58 000F4958*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7B5C 000F495C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7B60 000F4960*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800F7B64 000F4964*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F7B68 000F4968*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r3));
/*800F7B6C 000F496C*/ PPC::Runtime::ASM::lwzx(context->r31, context->r3, context->r0);
/*800F7B70 000F4970*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F7B74 000F4974*/ PPC::Runtime::ASM::bne(.L_800F7B88);
/*800F7B78 000F4978*/ PPC::Runtime::ASM::li(context->r3, lbl_805D61F8 @ Get_MemoryOffset_SDA21);
/*800F7B7C 000F497C*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*800F7B80 000F4980*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6200 @ Get_MemoryOffset_SDA21);
/*800F7B84 000F4984*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F7B88, 0x800F7B88) //this is a jump label
/*800F7B88 000F4988*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F7B8C 000F498C*/ PPC::Runtime::ASM::beq(.L_800F7BD0);
/*800F7B90 000F4990*/ PPC::Runtime::ASM::bne(.L_800F7BA4);
/*800F7B94 000F4994*/ PPC::Runtime::ASM::li(context->r3, lbl_805D61F8 @ Get_MemoryOffset_SDA21);
/*800F7B98 000F4998*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*800F7B9C 000F499C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6200 @ Get_MemoryOffset_SDA21);
/*800F7BA0 000F49A0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F7BA4, 0x800F7BA4) //this is a jump label
/*800F7BA4 000F49A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800F7BA8 000F49A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F7BAC 000F49AC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*800F7BB0 000F49B0*/ PPC::Runtime::ASM::bne(.L_800F7BC0);
/*800F7BB4 000F49B4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*800F7BB8 000F49B8*/ PPC::Runtime::ASM::beq(.L_800F7BC0);
/*800F7BBC 000F49BC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800F7BC0, 0x800F7BC0) //this is a jump label
/*800F7BC0 000F49C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800F7BC4 000F49C4*/ PPC::Runtime::ASM::beq(.L_800F7BD0);
/*800F7BC8 000F49C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F7BCC 000F49CC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_800F7BD0, 0x800F7BD0) //this is a jump label
/*800F7BD0 000F49D0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800F7BD4 000F49D4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*800F7BD8 000F49D8*/ PPC::Runtime::ASM::bl(fn_HSD_MtxGetTranslate);
/*800F7BDC 000F49DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7BE0 000F49E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7BE4 000F49E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7BE8 000F49E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7BEC 000F49EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7BF0 000F49F0*/ PPC::Runtime::ASM::blr();
}