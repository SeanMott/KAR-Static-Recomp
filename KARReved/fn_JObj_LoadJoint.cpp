//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hsdSearchClassInfo.hpp"
#include "fn_HSD_JObjAlloc.hpp"
#include "fn_hsdNew.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_JObjResolveRefsAll.hpp"



void fn_JObj_LoadJoint(PPC::Runtime::GCContext* context)
{
/*8040AFE8 00407DE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8040AFEC 00407DEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040AFF0 00407DF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040AFF4 00407DF4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040AFF8 00407DF8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8040AFFC 00407DFC  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8040B000 00407E00*/ PPC::Runtime::ASM::bne(.L_8040B00C);
/*8040B004 00407E04*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8040B008 00407E08*/ PPC::Runtime::ASM::b(.L_8040B068);
RUNTIME_PPC_JUMP_LABEL(.L_8040B00C, 0x8040B00C) //this is a jump label
/*8040B00C 00407E0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8040B010 00407E10*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8040B014 00407E14*/ PPC::Runtime::ASM::beq(.L_8040B024);
/*8040B018 00407E18*/ PPC::Runtime::ASM::bl(fn_hsdSearchClassInfo);
/*8040B01C 00407E1C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8040B020 00407E20*/ PPC::Runtime::ASM::bne(.L_8040B030);
RUNTIME_PPC_JUMP_LABEL(.L_8040B024, 0x8040B024) //this is a jump label
/*8040B024 00407E24*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAlloc);
/*8040B028 00407E28*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8040B02C 00407E2C*/ PPC::Runtime::ASM::b(.L_8040B04C);
RUNTIME_PPC_JUMP_LABEL(.L_8040B030, 0x8040B030) //this is a jump label
/*8040B030 00407E30*/ PPC::Runtime::ASM::bl(fn_hsdNew);
/* 8040B034 00407E34  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8040B038 00407E38*/ PPC::Runtime::ASM::bne(.L_8040B04C);
/*8040B03C 00407E3C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_529 @ Get_MemoryOffset_SDA21);
/*8040B040 00407E40*/ PPC::Runtime::ASM::li(context->r4, 0x3d5);
/*8040B044 00407E44*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_530 @ Get_MemoryOffset_SDA21);
/*8040B048 00407E48*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040B04C, 0x8040B04C) //this is a jump label
/*8040B04C 00407E4C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8040B050 00407E50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8040B054 00407E54*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8040B058 00407E58*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040B05C 00407E5C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r6));
/*8040B060 00407E60*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8040B064 00407E64*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8040B068, 0x8040B068) //this is a jump label
/*8040B068 00407E68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8040B06C 00407E6C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8040B070 00407E70*/ PPC::Runtime::ASM::bl(fn_HSD_JObjResolveRefsAll);
/*8040B074 00407E74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040B078 00407E78*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8040B07C 00407E7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040B080 00407E80*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8040B084 00407E84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040B088 00407E88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8040B08C 00407E8C*/ PPC::Runtime::ASM::blr();
}