//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSAllocFromArenaLo.hpp"
#include "fn_HSD_Panic.hpp"



void fn_8040FE90(PPC::Runtime::GCContext* context)
{
/*8040FE90 0040CC90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8040FE94 0040CC94*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040FE98 0040CC98*/ PPC::Runtime::ASM::li(context->r4, 0x20);
/*8040FE9C 0040CC9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040FEA0 0040CCA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040FEA4 0040CCA4*/ PPC::Runtime::ASM::bl(fn_OSAllocFromArenaLo);
/* 8040FEA8 0040CCA8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8040FEAC 0040CCAC*/ PPC::Runtime::ASM::bne(.L_8040FEC8);
/*8040FEB0 0040CCB0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80503C60 @ Get_MemoryOffset_HighBit);
/*8040FEB4 0040CCB4*/ PPC::Runtime::ASM::lis(context->r5, lbl_80503C94 @ Get_MemoryOffset_HighBit);
/*8040FEB8 0040CCB8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80503C60 @ Get_MemoryOffset_LowBit);
/*8040FEBC 0040CCBC*/ PPC::Runtime::ASM::li(context->r4, 0x107);
/*8040FEC0 0040CCC0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_80503C94 @ Get_MemoryOffset_LowBit);
/*8040FEC4 0040CCC4*/ PPC::Runtime::ASM::bl(fn_HSD_Panic);
RUNTIME_PPC_JUMP_LABEL(.L_8040FEC8, 0x8040FEC8) //this is a jump label
/*8040FEC8 0040CCC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040FECC 0040CCCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8040FED0 0040CCD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040FED4 0040CCD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040FED8 0040CCD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8040FEDC 0040CCDC*/ PPC::Runtime::ASM::blr();
}