//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DF068.hpp"



void fn_800DF4EC(PPC::Runtime::GCContext* context)
{
/*800DF4EC 000DC2EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800DF4F0 000DC2F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DF4F4 000DC2F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DF4F8 000DC2F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DF4FC 000DC2FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DF500 000DC300*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DF504 000DC304*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r3));
/*800DF508 000DC308*/ PPC::Runtime::ASM::li(context->r3, 0x320);
/*800DF50C 000DC30C*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DF510 000DC310*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800DF514 000DC314*/ PPC::Runtime::ASM::li(context->r3, 0xc8);
/*800DF518 000DC318*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*800DF51C 000DC31C*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DF520 000DC320*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800DF524 000DC324*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800DF528 000DC328*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800DF52C 000DC32C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800DF530 000DC330*/ PPC::Runtime::ASM::mr(context->r8, context->r30);
/*800DF534 000DC334*/ PPC::Runtime::ASM::mr(context->r6, context->r29);
/*800DF538 000DC338*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DF53C 000DC33C*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x8);
/*800DF540 000DC340*/ PPC::Runtime::ASM::addi(context->r9, context->r31, 0x24);
/*800DF544 000DC344*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800DF548 000DC348*/ PPC::Runtime::ASM::lwz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800DF54C 000DC34C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800DF550 000DC350*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800DF554 000DC354*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800DF558 000DC358*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r0);
/*800DF55C 000DC35C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800DF560 000DC360*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x4, context->r4));
/*800DF564 000DC364*/ PPC::Runtime::ASM::slwi(context->r4, context->r5, 3);
/*800DF568 000DC368*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800DF56C 000DC36C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r10, context->r4);
/*800DF570 000DC370*/ PPC::Runtime::ASM::add(context->r5, context->r10, context->r0);
/*800DF574 000DC374*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800DF578 000DC378*/ PPC::Runtime::ASM::bl(fn_800DF068);
/*800DF57C 000DC37C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800DF580 000DC380*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 3);
/*800DF584 000DC384*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DF588 000DC388*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*800DF58C 000DC38C*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800DF590 000DC390*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*800DF594 000DC394*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800DF598 000DC398*/ PPC::Runtime::ASM::b(.L_800DF5C0);
RUNTIME_PPC_JUMP_LABEL(.L_800DF59C, 0x800DF59C) //this is a jump label
/*800DF59C 000DC39C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*800DF5A0 000DC3A0*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*800DF5A4 000DC3A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800DF5A8 000DC3A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800DF5AC 000DC3AC*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r6);
/*800DF5B0 000DC3B0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x8);
/*800DF5B4 000DC3B4*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x8);
/*800DF5B8 000DC3B8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800DF5BC 000DC3BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800DF5C0, 0x800DF5C0) //this is a jump label
/*800DF5C0 000DC3C0*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800DF5C4 000DC3C4*/ PPC::Runtime::ASM::cmpw(context->r8, context->r7);
/*800DF5C8 000DC3C8*/ PPC::Runtime::ASM::blt(.L_800DF59C);
/*800DF5CC 000DC3CC*/ PPC::Runtime::ASM::li(context->r10, 0x0);
/*800DF5D0 000DC3D0*/ PPC::Runtime::ASM::mr(context->r6, context->r10);
/*800DF5D4 000DC3D4*/ PPC::Runtime::ASM::b(.L_800DF630);
RUNTIME_PPC_JUMP_LABEL(.L_800DF5D8, 0x800DF5D8) //this is a jump label
/*800DF5D8 000DC3D8*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*800DF5DC 000DC3DC*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x4);
/*800DF5E0 000DC3E0*/ PPC::Runtime::ASM::li(context->r11, 0x0);
/*800DF5E4 000DC3E4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800DF5E8 000DC3E8*/ PPC::Runtime::ASM::lwzx(context->r9, context->r8, context->r0);
/*800DF5EC 000DC3EC*/ PPC::Runtime::ASM::mtctr(context->r9);
/*800DF5F0 000DC3F0*/ PPC::Runtime::ASM::cmpwi(context->r9, 0x0);
/*800DF5F4 000DC3F4*/ PPC::Runtime::ASM::ble(.L_800DF620);
RUNTIME_PPC_JUMP_LABEL(.L_800DF5F8, 0x800DF5F8) //this is a jump label
/*800DF5F8 000DC3F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800DF5FC 000DC3FC*/ PPC::Runtime::ASM::lwzx(context->r3, context->r8, context->r6);
/*800DF600 000DC400*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800DF604 000DC404*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r5);
/*800DF608 000DC408*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r5);
/*800DF60C 000DC40C*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*800DF610 000DC410*/ PPC::Runtime::ASM::bne(.L_800DF620);
/*800DF614 000DC414*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
/*800DF618 000DC418*/ PPC::Runtime::ASM::addi(context->r11, context->r11, 0x1);
/*800DF61C 000DC41C*/ PPC::Runtime::ASM::bdnz(.L_800DF5F8);
RUNTIME_PPC_JUMP_LABEL(.L_800DF620, 0x800DF620) //this is a jump label
/*800DF620 000DC420*/ PPC::Runtime::ASM::cmpw(context->r11, context->r9);
/*800DF624 000DC424*/ PPC::Runtime::ASM::beq(.L_800DF638);
/*800DF628 000DC428*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x8);
/*800DF62C 000DC42C*/ PPC::Runtime::ASM::addi(context->r10, context->r10, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DF630, 0x800DF630) //this is a jump label
/*800DF630 000DC430*/ PPC::Runtime::ASM::cmpw(context->r10, context->r7);
/*800DF634 000DC434*/ PPC::Runtime::ASM::blt(.L_800DF5D8);
RUNTIME_PPC_JUMP_LABEL(.L_800DF638, 0x800DF638) //this is a jump label
/*800DF638 000DC438*/ PPC::Runtime::ASM::cmpw(context->r10, context->r7);
/*800DF63C 000DC43C*/ PPC::Runtime::ASM::bne(.L_800DF658);
/*800DF640 000DC440*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_942 @ Get_MemoryOffset_HighBit);
/*800DF644 000DC444*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_944 @ Get_MemoryOffset_HighBit);
/*800DF648 000DC448*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_942 @ Get_MemoryOffset_LowBit);
/*800DF64C 000DC44C*/ PPC::Runtime::ASM::li(context->r4, 0x190);
/*800DF650 000DC450*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_944 @ Get_MemoryOffset_LowBit);
/*800DF654 000DC454*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DF658, 0x800DF658) //this is a jump label
/*800DF658 000DC458*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800DF65C 000DC45C*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*800DF660 000DC460*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800DF664 000DC464*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*800DF668 000DC468*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DF66C 000DC46C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DF670 000DC470*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DF674 000DC474*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DF678 000DC478*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DF67C 000DC47C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800DF680 000DC480*/ PPC::Runtime::ASM::blr();
}