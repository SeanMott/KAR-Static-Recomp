//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801EDDB0.hpp"
#include "fn_801CEE98.hpp"
#include "fn_801D34E4.hpp"



void fn_VehicleStatTableFuncCallbacks_Star_BreakDown_4(PPC::Runtime::GCContext* context)
{
/*801F02A8 001ED0A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F02AC 001ED0AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F02B0 001ED0B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F02B4 001ED0B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F02B8 001ED0B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F02BC 001ED0BC*/ PPC::Runtime::ASM::bl(fn_801EDDB0);
/*801F02C0 001ED0C0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r31));
/* 801F02C4 001ED0C4  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801F02C8 001ED0C8*/ PPC::Runtime::ASM::beq(.L_801F02D8);
/*801F02CC 001ED0CC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F64 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F02D0 001ED0D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F02D4 001ED0D4*/ PPC::Runtime::ASM::bl(fn_801CEE98);
RUNTIME_PPC_JUMP_LABEL(.L_801F02D8, 0x801F02D8) //this is a jump label
/*801F02D8 001ED0D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F02DC 001ED0DC*/ PPC::Runtime::ASM::bl(fn_801D34E4);
/*801F02E0 001ED0E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F02E4 001ED0E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F02E8 001ED0E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F02EC 001ED0EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F02F0 001ED0F0*/ PPC::Runtime::ASM::blr();
}