//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022CBF4.hpp"



void fn_80190BC4(PPC::Runtime::GCContext* context)
{
/*80190BC4 0018D9C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80190BC8 0018D9C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80190BCC 0018D9CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80190BD0 0018D9D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80190BD4 0018D9D4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80190BD8 0018D9D8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80190BDC 0018D9DC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80190BE0 0018D9E0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80190BE4 0018D9E4*/ PPC::Runtime::ASM::bl(fn_8022CBF4);
/*80190BE8 0018D9E8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80190BEC 0018D9EC*/ PPC::Runtime::ASM::beq(.L_80190BFC);
/*80190BF0 0018D9F0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r30));
/*80190BF4 0018D9F4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80190BF8 0018D9F8*/ PPC::Runtime::ASM::bl(fn_HSD_PadRumbleRemoveId);
RUNTIME_PPC_JUMP_LABEL(.L_80190BFC, 0x80190BFC) //this is a jump label
/*80190BFC 0018D9FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80190C00 0018DA00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80190C04 0018DA04*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80190C08 0018DA08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80190C0C 0018DA0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80190C10 0018DA10*/ PPC::Runtime::ASM::blr();
}