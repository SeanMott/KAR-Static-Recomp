//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_menu_getCurrentMenuID.hpp"
#include "fn_renderPauseHUD_renderStatChart.hpp"
#include "fn_getTrialFlag.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80117DE8.hpp"
#include "fn_8011878C.hpp"
#include "fn_801191A0.hpp"
#include "fn_8011F8A8.hpp"
#include "fn_801202CC.hpp"
#include "fn_801196EC.hpp"
#include "fn_80119DB4.hpp"
#include "fn_8011EF70.hpp"
#include "fn_8011C3B4.hpp"
#include "fn_8011C7D0.hpp"
#include "fn_8011DCAC.hpp"
#include "fn_8011E3B8.hpp"
#include "fn_80124844.hpp"
#include "fn_80124BD4.hpp"
#include "fn_80125390.hpp"
#include "fn_80122DD8.hpp"
#include "fn_8012322C.hpp"
#include "fn_801237E4.hpp"
#include "fn_80125E7C.hpp"
#include "fn_80125780.hpp"
#include "fn_80125940.hpp"
#include "fn_80123C90.hpp"
#include "fn_80123FE0.hpp"
#include "fn_801244D4.hpp"
#include "fn_8012A56C.hpp"
#include "fn_80130CFC.hpp"
#include "fn_801284F8.hpp"
#include "fn_80128AFC.hpp"
#include "fn_80129108.hpp"
#include "fn_menu_getCurrentMenuID.hpp"
#include "fn_renderPauseHUD_renderStatChart.hpp"
#include "fn_getTrialFlag.hpp"
#include "fn_8011A374.hpp"
#include "fn_8011AC3C.hpp"
#include "fn_8011B678.hpp"
#include "fn_8011BCB4.hpp"
#include "fn_8011BFF4.hpp"
#include "fn_8011CC3C.hpp"
#include "fn_801250D0.hpp"
#include "fn_8012122C.hpp"
#include "fn_80126390.hpp"
#include "fn_801267EC.hpp"
#include "fn_80128244.hpp"
#include "fn_8012A104.hpp"
#include "fn_801299C8.hpp"
#include "fn_8012D6F8.hpp"
#include "fn_menu_getCurrentMenuID.hpp"
#include "fn_8003D5F0.hpp"
#include "fn_8012979C.hpp"
#include "fn_8003D5F0.hpp"
#include "fn_80129D90.hpp"
#include "fn_80129F30.hpp"
#include "fn_getTrialFlag.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80121AD8.hpp"
#include "fn_801226E8.hpp"
#include "fn_80126D40.hpp"
#include "fn_801277F0.hpp"
#include "fn_80127E94.hpp"
#include "fn_8012B39C.hpp"
#include "fn_801169C8.hpp"
#include "fn_801168E8.hpp"
#include "fn_8000AD48.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_80059818.hpp"
#include "fn_8011CF88.hpp"
#include "fn_80130980.hpp"
#include "fn_80130B2C.hpp"
#include "fn_80131008.hpp"
#include "fn_8012B9BC.hpp"
#include "fn_8012C7E4.hpp"
#include "fn_8012DE70.hpp"
#include "fn_8012EB94.hpp"
#include "fn_8012EE4C.hpp"
#include "fn_8012F27C.hpp"
#include "fn_8012F744.hpp"
#include "fn_8012FA34.hpp"
#include "fn_8012FF38.hpp"
#include "fn_80130574.hpp"



void fn_80112CAC(PPC::Runtime::GCContext* context)
{
/*80112CAC 0010FAAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80112CB0 0010FAB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80112CB4 0010FAB4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1045 @ Get_MemoryOffset_HighBit);
/*80112CB8 0010FAB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80112CBC 0010FABC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80112CC0 0010FAC0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_1045 @ Get_MemoryOffset_LowBit);
/*80112CC4 0010FAC4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80112CC8 0010FAC8*/ PPC::Runtime::ASM::li(context->r30, STRUCT_BYTE4_COUNT_1805DD76C @ Get_MemoryOffset_SDA21);
/*80112CCC 0010FACC*/ PPC::Runtime::ASM::bl(fn_menu_getCurrentMenuID);
/*80112CD0 0010FAD0*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112CD4 0010FAD4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x6);
/*80112CD8 0010FAD8*/ PPC::Runtime::ASM::bne(.L_80112D4C);
/*80112CDC 0010FADC*/ PPC::Runtime::ASM::bl(fn_renderPauseHUD_renderStatChart);
/*80112CE0 0010FAE0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80112CE4 0010FAE4*/ PPC::Runtime::ASM::bne(.L_80112D4C);
/*80112CE8 0010FAE8*/ PPC::Runtime::ASM::bl(fn_getTrialFlag);
/*80112CEC 0010FAEC*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112CF0 0010FAF0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112CF4 0010FAF4*/ PPC::Runtime::ASM::bne(.L_80112D4C);
/*80112CF8 0010FAF8*/ PPC::Runtime::ASM::lis(context->r3, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80112CFC 0010FAFC*/ PPC::Runtime::ASM::lbz(context->r0, lbl_805578B8 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80112D00 0010FB00*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80112D04 0010FB04*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80112D08 0010FB08*/ PPC::Runtime::ASM::beq(.L_80112D2C);
/*80112D0C 0010FB0C*/ PPC::Runtime::ASM::bge(.L_80112D3C);
/*80112D10 0010FB10*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112D14 0010FB14*/ PPC::Runtime::ASM::bge(.L_80112D1C);
/*80112D18 0010FB18*/ PPC::Runtime::ASM::b(.L_80112D3C);
RUNTIME_PPC_JUMP_LABEL(.L_80112D1C, 0x80112D1C) //this is a jump label
/*80112D1C 0010FB1C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80112D20 0010FB20*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xc);
/*80112D24 0010FB24*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112D28 0010FB28*/ PPC::Runtime::ASM::b(.L_80112D9C);
RUNTIME_PPC_JUMP_LABEL(.L_80112D2C, 0x80112D2C) //this is a jump label
/*80112D2C 0010FB2C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80112D30 0010FB30*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x18);
/*80112D34 0010FB34*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112D38 0010FB38*/ PPC::Runtime::ASM::b(.L_80112D9C);
RUNTIME_PPC_JUMP_LABEL(.L_80112D3C, 0x80112D3C) //this is a jump label
/*80112D3C 0010FB3C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80112D40 0010FB40*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x24);
/*80112D44 0010FB44*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112D48 0010FB48*/ PPC::Runtime::ASM::b(.L_80112D9C);
RUNTIME_PPC_JUMP_LABEL(.L_80112D4C, 0x80112D4C) //this is a jump label
/*80112D4C 0010FB4C*/ PPC::Runtime::ASM::lis(context->r3, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80112D50 0010FB50*/ PPC::Runtime::ASM::lbz(context->r0, lbl_805578B8 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80112D54 0010FB54*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80112D58 0010FB58*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80112D5C 0010FB5C*/ PPC::Runtime::ASM::beq(.L_80112D80);
/*80112D60 0010FB60*/ PPC::Runtime::ASM::bge(.L_80112D90);
/*80112D64 0010FB64*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112D68 0010FB68*/ PPC::Runtime::ASM::bge(.L_80112D70);
/*80112D6C 0010FB6C*/ PPC::Runtime::ASM::b(.L_80112D90);
RUNTIME_PPC_JUMP_LABEL(.L_80112D70, 0x80112D70) //this is a jump label
/*80112D70 0010FB70*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80112D74 0010FB74*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x30);
/*80112D78 0010FB78*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112D7C 0010FB7C*/ PPC::Runtime::ASM::b(.L_80112D9C);
RUNTIME_PPC_JUMP_LABEL(.L_80112D80, 0x80112D80) //this is a jump label
/*80112D80 0010FB80*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80112D84 0010FB84*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x3c);
/*80112D88 0010FB88*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112D8C 0010FB8C*/ PPC::Runtime::ASM::b(.L_80112D9C);
RUNTIME_PPC_JUMP_LABEL(.L_80112D90, 0x80112D90) //this is a jump label
/*80112D90 0010FB90*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80112D94 0010FB94*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*80112D98 0010FB98*/ PPC::Runtime::ASM::bl(fn_80059818);
RUNTIME_PPC_JUMP_LABEL(.L_80112D9C, 0x80112D9C) //this is a jump label
/*80112D9C 0010FB9C*/ PPC::Runtime::ASM::bl(fn_80117DE8);
/*80112DA0 0010FBA0*/ PPC::Runtime::ASM::bl(fn_8011878C);
/*80112DA4 0010FBA4*/ PPC::Runtime::ASM::bl(fn_801191A0);
/*80112DA8 0010FBA8*/ PPC::Runtime::ASM::bl(fn_8011F8A8);
/*80112DAC 0010FBAC*/ PPC::Runtime::ASM::bl(fn_801202CC);
/*80112DB0 0010FBB0*/ PPC::Runtime::ASM::bl(fn_801196EC);
/*80112DB4 0010FBB4*/ PPC::Runtime::ASM::bl(fn_80119DB4);
/*80112DB8 0010FBB8*/ PPC::Runtime::ASM::bl(fn_8011EF70);
/*80112DBC 0010FBBC*/ PPC::Runtime::ASM::bl(fn_8011C3B4);
/*80112DC0 0010FBC0*/ PPC::Runtime::ASM::bl(fn_8011C7D0);
/*80112DC4 0010FBC4*/ PPC::Runtime::ASM::bl(fn_8011DCAC);
/*80112DC8 0010FBC8*/ PPC::Runtime::ASM::bl(fn_8011E3B8);
/*80112DCC 0010FBCC*/ PPC::Runtime::ASM::bl(fn_80124844);
/*80112DD0 0010FBD0*/ PPC::Runtime::ASM::bl(fn_80124BD4);
/*80112DD4 0010FBD4*/ PPC::Runtime::ASM::bl(fn_80125390);
/*80112DD8 0010FBD8*/ PPC::Runtime::ASM::bl(fn_80122DD8);
/*80112DDC 0010FBDC*/ PPC::Runtime::ASM::bl(fn_8012322C);
/*80112DE0 0010FBE0*/ PPC::Runtime::ASM::bl(fn_801237E4);
/*80112DE4 0010FBE4*/ PPC::Runtime::ASM::bl(fn_80125E7C);
/*80112DE8 0010FBE8*/ PPC::Runtime::ASM::bl(fn_80125780);
/*80112DEC 0010FBEC*/ PPC::Runtime::ASM::bl(fn_80125940);
/*80112DF0 0010FBF0*/ PPC::Runtime::ASM::bl(fn_80123C90);
/*80112DF4 0010FBF4*/ PPC::Runtime::ASM::bl(fn_80123FE0);
/*80112DF8 0010FBF8*/ PPC::Runtime::ASM::bl(fn_801244D4);
/*80112DFC 0010FBFC*/ PPC::Runtime::ASM::bl(fn_8012A56C);
/*80112E00 0010FC00*/ PPC::Runtime::ASM::bl(fn_80130CFC);
/*80112E04 0010FC04*/ PPC::Runtime::ASM::bl(fn_801284F8);
/*80112E08 0010FC08*/ PPC::Runtime::ASM::bl(fn_80128AFC);
/*80112E0C 0010FC0C*/ PPC::Runtime::ASM::bl(fn_80129108);
/*80112E10 0010FC10*/ PPC::Runtime::ASM::bl(fn_menu_getCurrentMenuID);
/*80112E14 0010FC14*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112E18 0010FC18*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x6);
/*80112E1C 0010FC1C*/ PPC::Runtime::ASM::bne(.L_80112E3C);
/*80112E20 0010FC20*/ PPC::Runtime::ASM::bl(fn_renderPauseHUD_renderStatChart);
/*80112E24 0010FC24*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80112E28 0010FC28*/ PPC::Runtime::ASM::bne(.L_80112E3C);
/*80112E2C 0010FC2C*/ PPC::Runtime::ASM::bl(fn_getTrialFlag);
/*80112E30 0010FC30*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112E34 0010FC34*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112E38 0010FC38*/ PPC::Runtime::ASM::beq(.L_80112E74);
RUNTIME_PPC_JUMP_LABEL(.L_80112E3C, 0x80112E3C) //this is a jump label
/*80112E3C 0010FC3C*/ PPC::Runtime::ASM::bl(fn_8011A374);
/*80112E40 0010FC40*/ PPC::Runtime::ASM::bl(fn_8011AC3C);
/*80112E44 0010FC44*/ PPC::Runtime::ASM::bl(fn_8011B678);
/*80112E48 0010FC48*/ PPC::Runtime::ASM::bl(fn_8011BCB4);
/*80112E4C 0010FC4C*/ PPC::Runtime::ASM::bl(fn_8011BFF4);
/*80112E50 0010FC50*/ PPC::Runtime::ASM::bl(fn_8011CC3C);
/*80112E54 0010FC54*/ PPC::Runtime::ASM::bl(fn_801250D0);
/*80112E58 0010FC58*/ PPC::Runtime::ASM::bl(fn_8012122C);
/*80112E5C 0010FC5C*/ PPC::Runtime::ASM::bl(fn_80126390);
/*80112E60 0010FC60*/ PPC::Runtime::ASM::bl(fn_801267EC);
/*80112E64 0010FC64*/ PPC::Runtime::ASM::bl(fn_80128244);
/*80112E68 0010FC68*/ PPC::Runtime::ASM::bl(fn_8012A104);
/*80112E6C 0010FC6C*/ PPC::Runtime::ASM::bl(fn_801299C8);
/*80112E70 0010FC70*/ PPC::Runtime::ASM::bl(fn_8012D6F8);
RUNTIME_PPC_JUMP_LABEL(.L_80112E74, 0x80112E74) //this is a jump label
/*80112E74 0010FC74*/ PPC::Runtime::ASM::bl(fn_menu_getCurrentMenuID);
/*80112E78 0010FC78*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112E7C 0010FC7C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*80112E80 0010FC80*/ PPC::Runtime::ASM::bne(.L_80112EB0);
/*80112E84 0010FC84*/ PPC::Runtime::ASM::bl(fn_8003D5F0);
/*80112E88 0010FC88*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112E8C 0010FC8C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80112E90 0010FC90*/ PPC::Runtime::ASM::bne(.L_80112E98);
/*80112E94 0010FC94*/ PPC::Runtime::ASM::bl(fn_8012979C);
RUNTIME_PPC_JUMP_LABEL(.L_80112E98, 0x80112E98) //this is a jump label
/*80112E98 0010FC98*/ PPC::Runtime::ASM::bl(fn_8003D5F0);
/*80112E9C 0010FC9C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112EA0 0010FCA0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112EA4 0010FCA4*/ PPC::Runtime::ASM::bne(.L_80112EB0);
/*80112EA8 0010FCA8*/ PPC::Runtime::ASM::bl(fn_80129D90);
/*80112EAC 0010FCAC*/ PPC::Runtime::ASM::bl(fn_80129F30);
RUNTIME_PPC_JUMP_LABEL(.L_80112EB0, 0x80112EB0) //this is a jump label
/*80112EB0 0010FCB0*/ PPC::Runtime::ASM::bl(fn_getTrialFlag);
/*80112EB4 0010FCB4*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112EB8 0010FCB8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112EBC 0010FCBC*/ PPC::Runtime::ASM::bne(.L_80112F34);
/*80112EC0 0010FCC0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x54);
/*80112EC4 0010FCC4*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD768 @ Get_MemoryOffset_SDA21);
/*80112EC8 0010FCC8*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112ECC 0010FCCC*/ PPC::Runtime::ASM::lis(context->r4, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80112ED0 0010FCD0*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD764 @ Get_MemoryOffset_SDA21);
/*80112ED4 0010FCD4*/ PPC::Runtime::ASM::lbz(context->r0, lbl_805578B8 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*80112ED8 0010FCD8*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80112EDC 0010FCDC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80112EE0 0010FCE0*/ PPC::Runtime::ASM::beq(.L_80112F00);
/*80112EE4 0010FCE4*/ PPC::Runtime::ASM::bge(.L_80112F0C);
/*80112EE8 0010FCE8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112EEC 0010FCEC*/ PPC::Runtime::ASM::bge(.L_80112EF4);
/*80112EF0 0010FCF0*/ PPC::Runtime::ASM::b(.L_80112F0C);
RUNTIME_PPC_JUMP_LABEL(.L_80112EF4, 0x80112EF4) //this is a jump label
/*80112EF4 0010FCF4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x60);
/*80112EF8 0010FCF8*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112EFC 0010FCFC*/ PPC::Runtime::ASM::b(.L_80112F14);
RUNTIME_PPC_JUMP_LABEL(.L_80112F00, 0x80112F00) //this is a jump label
/*80112F00 0010FD00*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x6c);
/*80112F04 0010FD04*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112F08 0010FD08*/ PPC::Runtime::ASM::b(.L_80112F14);
RUNTIME_PPC_JUMP_LABEL(.L_80112F0C, 0x80112F0C) //this is a jump label
/*80112F0C 0010FD0C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x78);
/*80112F10 0010FD10*/ PPC::Runtime::ASM::bl(fn_80059818);
RUNTIME_PPC_JUMP_LABEL(.L_80112F14, 0x80112F14) //this is a jump label
/*80112F14 0010FD14*/ PPC::Runtime::ASM::bl(fn_80121AD8);
/*80112F18 0010FD18*/ PPC::Runtime::ASM::bl(fn_801226E8);
/*80112F1C 0010FD1C*/ PPC::Runtime::ASM::bl(fn_80126D40);
/*80112F20 0010FD20*/ PPC::Runtime::ASM::bl(fn_801277F0);
/*80112F24 0010FD24*/ PPC::Runtime::ASM::bl(fn_80127E94);
/*80112F28 0010FD28*/ PPC::Runtime::ASM::bl(fn_8012B39C);
/*80112F2C 0010FD2C*/ PPC::Runtime::ASM::bl(fn_801169C8);
/*80112F30 0010FD30*/ PPC::Runtime::ASM::bl(fn_801168E8);
RUNTIME_PPC_JUMP_LABEL(.L_80112F34, 0x80112F34) //this is a jump label
/*80112F34 0010FD34*/ PPC::Runtime::ASM::bl(fn_8000AD48);
/*80112F38 0010FD38*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80112F3C 0010FD3C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112F40 0010FD40*/ PPC::Runtime::ASM::bne(.L_80112FD0);
/*80112F44 0010FD44*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x84);
/*80112F48 0010FD48*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD760 @ Get_MemoryOffset_SDA21);
/*80112F4C 0010FD4C*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112F50 0010FD50*/ PPC::Runtime::ASM::lis(context->r4, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80112F54 0010FD54*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD75C @ Get_MemoryOffset_SDA21);
/*80112F58 0010FD58*/ PPC::Runtime::ASM::lbz(context->r0, lbl_805578B8 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*80112F5C 0010FD5C*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80112F60 0010FD60*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80112F64 0010FD64*/ PPC::Runtime::ASM::beq(.L_80112F84);
/*80112F68 0010FD68*/ PPC::Runtime::ASM::bge(.L_80112F90);
/*80112F6C 0010FD6C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80112F70 0010FD70*/ PPC::Runtime::ASM::bge(.L_80112F78);
/*80112F74 0010FD74*/ PPC::Runtime::ASM::b(.L_80112F90);
RUNTIME_PPC_JUMP_LABEL(.L_80112F78, 0x80112F78) //this is a jump label
/*80112F78 0010FD78*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x90);
/*80112F7C 0010FD7C*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112F80 0010FD80*/ PPC::Runtime::ASM::b(.L_80112F98);
RUNTIME_PPC_JUMP_LABEL(.L_80112F84, 0x80112F84) //this is a jump label
/*80112F84 0010FD84*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x9c);
/*80112F88 0010FD88*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80112F8C 0010FD8C*/ PPC::Runtime::ASM::b(.L_80112F98);
RUNTIME_PPC_JUMP_LABEL(.L_80112F90, 0x80112F90) //this is a jump label
/*80112F90 0010FD90*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xa8);
/*80112F94 0010FD94*/ PPC::Runtime::ASM::bl(fn_80059818);
RUNTIME_PPC_JUMP_LABEL(.L_80112F98, 0x80112F98) //this is a jump label
/*80112F98 0010FD98*/ PPC::Runtime::ASM::bl(fn_8011CF88);
/*80112F9C 0010FD9C*/ PPC::Runtime::ASM::bl(fn_80130980);
/*80112FA0 0010FDA0*/ PPC::Runtime::ASM::bl(fn_80130B2C);
/*80112FA4 0010FDA4*/ PPC::Runtime::ASM::bl(fn_80131008);
/*80112FA8 0010FDA8*/ PPC::Runtime::ASM::bl(fn_8012B9BC);
/*80112FAC 0010FDAC*/ PPC::Runtime::ASM::bl(fn_8012C7E4);
/*80112FB0 0010FDB0*/ PPC::Runtime::ASM::bl(fn_8012DE70);
/*80112FB4 0010FDB4*/ PPC::Runtime::ASM::bl(fn_8012EB94);
/*80112FB8 0010FDB8*/ PPC::Runtime::ASM::bl(fn_8012EE4C);
/*80112FBC 0010FDBC*/ PPC::Runtime::ASM::bl(fn_8012F27C);
/*80112FC0 0010FDC0*/ PPC::Runtime::ASM::bl(fn_8012F744);
/*80112FC4 0010FDC4*/ PPC::Runtime::ASM::bl(fn_8012FA34);
/*80112FC8 0010FDC8*/ PPC::Runtime::ASM::bl(fn_8012FF38);
/*80112FCC 0010FDCC*/ PPC::Runtime::ASM::bl(fn_80130574);
RUNTIME_PPC_JUMP_LABEL(.L_80112FD0, 0x80112FD0) //this is a jump label
/*80112FD0 0010FDD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80112FD4 0010FDD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80112FD8 0010FDD8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80112FDC 0010FDDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80112FE0 0010FDE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80112FE4 0010FDE4*/ PPC::Runtime::ASM::blr();
}