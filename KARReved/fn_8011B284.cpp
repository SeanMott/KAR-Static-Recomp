//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114F04.hpp"



void fn_8011B284(PPC::Runtime::GCContext* context)
{
/*8011B284 00118084*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011B288 00118088*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011B28C 0011808C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011B290 00118090*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011B294 00118094*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8011B298 00118098*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8011B29C 0011809C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8011B2A0 001180A0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011B2A4 001180A4*/ PPC::Runtime::ASM::mulli(context->r4, context->r30, 0xc);
/*8011B2A8 001180A8*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*8011B2AC 001180AC*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*8011B2B0 001180B0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8011B2B4 001180B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23c, context->r3));
/*8011B2B8 001180B8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011B2BC 001180BC*/ PPC::Runtime::ASM::beq(.L_8011B2C4);
/*8011B2C0 001180C0*/ PPC::Runtime::ASM::bl(fn_80114F04);
RUNTIME_PPC_JUMP_LABEL(.L_8011B2C4, 0x8011B2C4) //this is a jump label
/*8011B2C4 001180C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011B2C8 001180C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011B2CC 001180CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8011B2D0 001180D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011B2D4 001180D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011B2D8 001180D8*/ PPC::Runtime::ASM::blr();
}