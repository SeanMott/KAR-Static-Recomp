//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801EE1C0.hpp"
#include "fn_801EDD00.hpp"
#include "fn_801EE1F4.hpp"
#include "fn_801CDF84.hpp"
#include "fn_801D0498.hpp"
#include "fn_801EE9C8.hpp"
#include "fn_801D34E4.hpp"
#include "fn_801EE544.hpp"
#include "fn_801EE4C0.hpp"
#include "fn_801DC3B8.hpp"



void fn_VehicleStatTableFuncCallbacks_Star_WaitRun_4(PPC::Runtime::GCContext* context)
{
/*801EE94C 001EB74C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EE950 001EB750*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EE954 001EB754*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EE958 001EB758*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EE95C 001EB75C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EE960 001EB760*/ PPC::Runtime::ASM::bl(fn_801EE1C0);
/*801EE964 001EB764*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE968 001EB768*/ PPC::Runtime::ASM::bl(fn_801EDD00);
/*801EE96C 001EB76C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE970 001EB770*/ PPC::Runtime::ASM::bl(fn_801EE1F4);
/*801EE974 001EB774*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE978 001EB778*/ PPC::Runtime::ASM::bl(fn_801CDF84);
/*801EE97C 001EB77C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE980 001EB780*/ PPC::Runtime::ASM::bl(fn_801D0498);
/*801EE984 001EB784*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE988 001EB788*/ PPC::Runtime::ASM::bl(fn_801EE9C8);
/*801EE98C 001EB78C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EE990 001EB790*/ PPC::Runtime::ASM::bne(.L_801EE9B4);
/*801EE994 001EB794*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE998 001EB798*/ PPC::Runtime::ASM::bl(fn_801D34E4);
/*801EE99C 001EB79C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE9A0 001EB7A0*/ PPC::Runtime::ASM::bl(fn_801EE544);
/*801EE9A4 001EB7A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE9A8 001EB7A8*/ PPC::Runtime::ASM::bl(fn_801EE4C0);
/*801EE9AC 001EB7AC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EE9B0 001EB7B0*/ PPC::Runtime::ASM::bl(fn_801DC3B8);
RUNTIME_PPC_JUMP_LABEL(.L_801EE9B4, 0x801EE9B4) //this is a jump label
/*801EE9B4 001EB7B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EE9B8 001EB7B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EE9BC 001EB7BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EE9C0 001EB7C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EE9C4 001EB7C4*/ PPC::Runtime::ASM::blr();
}