//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_groundMovement.hpp"
#include "fn_startCharge.hpp"
#include "fn_ground_chargeAnimation.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_groundSpin2?.hpp"
#include "fn_doQuickSpin.hpp"



void fn_groundControl(PPC::Runtime::GCContext* context)
{
/*801AB300 001A8100*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AB304 001A8104*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AB308 001A8108*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AB30C 001A810C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AB310 001A8110*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AB314 001A8114*/ PPC::Runtime::ASM::bl(fn_groundMovement);
/*801AB318 001A8118*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB31C 001A811C*/ PPC::Runtime::ASM::bl(fn_startCharge);
/*801AB320 001A8120*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AB324 001A8124*/ PPC::Runtime::ASM::bne(.L_801AB35C);
/*801AB328 001A8128*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB32C 001A812C*/ PPC::Runtime::ASM::bl(fn_ground_chargeAnimation);
/*801AB330 001A8130*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AB334 001A8134*/ PPC::Runtime::ASM::bne(.L_801AB35C);
/*801AB338 001A8138*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB33C 001A813C*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801AB340 001A8140*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB344 001A8144*/ PPC::Runtime::ASM::bl(fn_groundSpin2?);
/*801AB348 001A8148*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AB34C 001A814C*/ PPC::Runtime::ASM::bne(.L_801AB35C);
/*801AB350 001A8150*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB354 001A8154*/ PPC::Runtime::ASM::bl(fn_doQuickSpin);
/*801AB358 001A8158*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801AB35C, 0x801AB35C) //this is a jump label
/*801AB35C 001A815C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AB360 001A8160*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AB364 001A8164*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AB368 001A8168*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AB36C 001A816C*/ PPC::Runtime::ASM::blr();
}