//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A88B8(PPC::Runtime::GCContext* context)
{
/*802A88B8 002A56B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A88BC 002A56BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A88C0 002A56C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A88C4 002A56C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A88C8 002A56C8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A88CC 002A56CC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A88D0 002A56D0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A88D4 002A56D4*/ PPC::Runtime::ASM::beq(.L_802A8A24);
/*802A88D8 002A56D8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C2184 @ Get_MemoryOffset_HighBit);
/*802A88DC 002A56DC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1804);
/*802A88E0 002A56E0*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C2184 @ Get_MemoryOffset_LowBit);
/*802A88E4 002A56E4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A88E8 002A56E8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A88EC 002A56EC*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A88F0 002A56F0*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A88F4 002A56F4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A88F8 002A56F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A88FC 002A56FC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8900 002A5700*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1700);
/*802A8904 002A5704*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8908 002A5708*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A890C 002A570C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x15fc);
/*802A8910 002A5710*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8914 002A5714*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8918 002A5718*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x14f8);
/*802A891C 002A571C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8920 002A5720*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8924 002A5724*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x13f4);
/*802A8928 002A5728*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A892C 002A572C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8930 002A5730*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x12f0);
/*802A8934 002A5734*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8938 002A5738*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A893C 002A573C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x11ec);
/*802A8940 002A5740*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8944 002A5744*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8948 002A5748*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10e8);
/*802A894C 002A574C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8950 002A5750*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8954 002A5754*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xfe4);
/*802A8958 002A5758*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A895C 002A575C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8960 002A5760*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xee0);
/*802A8964 002A5764*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8968 002A5768*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A896C 002A576C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A8970 002A5770*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8974 002A5774*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8978 002A5778*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A897C 002A577C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8980 002A5780*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8984 002A5784*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A8988 002A5788*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A898C 002A578C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8990 002A5790*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A8994 002A5794*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8998 002A5798*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A899C 002A579C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A89A0 002A57A0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89A4 002A57A4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89A8 002A57A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A89AC 002A57AC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89B0 002A57B0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89B4 002A57B4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A89B8 002A57B8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89BC 002A57BC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89C0 002A57C0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A89C4 002A57C4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89C8 002A57C8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89CC 002A57CC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A89D0 002A57D0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89D4 002A57D4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89D8 002A57D8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A89DC 002A57DC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89E0 002A57E0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89E4 002A57E4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A89E8 002A57E8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89EC 002A57EC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89F0 002A57F0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A89F4 002A57F4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A89F8 002A57F8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A89FC 002A57FC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A8A00 002A5800*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8A04 002A5804*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8A08 002A5808*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A8A0C 002A580C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A8A10 002A5810*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A8A14 002A5814*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A8A18 002A5818*/ PPC::Runtime::ASM::ble(.L_802A8A24);
/*802A8A1C 002A581C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A8A20 002A5820*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A8A24, 0x802A8A24) //this is a jump label
/*802A8A24 002A5824*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A8A28 002A5828*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A8A2C 002A582C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A8A30 002A5830*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A8A34 002A5834*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A8A38 002A5838*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A8A3C 002A583C*/ PPC::Runtime::ASM::blr();
}