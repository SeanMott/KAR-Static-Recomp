//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8008A8D0(PPC::Runtime::GCContext* context)
{
/*8008A8D0 000876D0*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_1805530C8 @ Get_MemoryOffset_HighBit);
/*8008A8D4 000876D4*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*8008A8D8 000876D8*/ PPC::Runtime::ASM::addi(context->r5, context->r3, STRUCT_BYTE4_COUNT_1805530C8 @ Get_MemoryOffset_LowBit);
/*8008A8DC 000876DC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8008A8E0 000876E0*/ PPC::Runtime::ASM::mtctr(context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_8008A8E4, 0x8008A8E4) //this is a jump label
/*8008A8E4 000876E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8008A8E8 000876E8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*8008A8EC 000876EC*/ PPC::Runtime::ASM::beq(.L_8008A938);
/*8008A8F0 000876F0*/ PPC::Runtime::ASM::bge(.L_8008A974);
/*8008A8F4 000876F4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8008A8F8 000876F8*/ PPC::Runtime::ASM::beq(.L_8008A900);
/*8008A8FC 000876FC*/ PPC::Runtime::ASM::b(.L_8008A974);
RUNTIME_PPC_JUMP_LABEL(.L_8008A900, 0x8008A900) //this is a jump label
/*8008A900 00087700*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r6, 24);
/*8008A904 00087704*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18058B0E4 @ Get_MemoryOffset_HighBit);
/*8008A908 00087708*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x44);
/*8008A90C 0008770C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18058B0E4 @ Get_MemoryOffset_LowBit);
/*8008A910 00087710*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*8008A914 00087714*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8008A918 00087718*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 20, 20);
/*8008A91C 0008771C*/ PPC::Runtime::ASM::beq(.L_8008A974);
/*8008A920 00087720*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8008A924 00087724*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*8008A928 00087728*/ PPC::Runtime::ASM::beq(.L_8008A974);
/*8008A92C 0008772C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8008A930 00087730*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8008A934 00087734*/ PPC::Runtime::ASM::b(.L_8008A974);
RUNTIME_PPC_JUMP_LABEL(.L_8008A938, 0x8008A938) //this is a jump label
/*8008A938 00087738*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r6, 24);
/*8008A93C 0008773C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18058B0E4 @ Get_MemoryOffset_HighBit);
/*8008A940 00087740*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x44);
/*8008A944 00087744*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_18058B0E4 @ Get_MemoryOffset_LowBit);
/*8008A948 00087748*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*8008A94C 0008774C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 23, 23);
/*8008A950 00087750*/ PPC::Runtime::ASM::beq(.L_8008A960);
/*8008A954 00087754*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*8008A958 00087758*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8008A95C 0008775C*/ PPC::Runtime::ASM::b(.L_8008A974);
RUNTIME_PPC_JUMP_LABEL(.L_8008A960, 0x8008A960) //this is a jump label
/*8008A960 00087760*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 22, 22);
/*8008A964 00087764*/ PPC::Runtime::ASM::beq(.L_8008A974);
/*8008A968 00087768*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8008A96C 0008776C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8008A970 00087770*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8008A974, 0x8008A974) //this is a jump label
/*8008A974 00087774*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x1);
/*8008A978 00087778*/ PPC::Runtime::ASM::bdnz(.L_8008A8E4);
/*8008A97C 0008777C*/ PPC::Runtime::ASM::blr();
}