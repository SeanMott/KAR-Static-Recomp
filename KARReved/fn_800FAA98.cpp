//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F48CC.hpp"
#include "fn_800FAAE0.hpp"



void fn_800FAA98(PPC::Runtime::GCContext* context)
{
/*800FAA98 000F7898*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FAA9C 000F789C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FAAA0 000F78A0*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*800FAAA4 000F78A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FAAA8 000F78A8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FAAAC 000F78AC*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800FAAB0 000F78B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FAAB4 000F78B4*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800FAAB8 000F78B8*/ PPC::Runtime::ASM::bl(fn_800F48CC);
/*800FAABC 000F78BC*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800FAAC0 000F78C0*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800FAAC4 000F78C4*/ PPC::Runtime::ASM::bl(fn_800FAAE0);
/*800FAAC8 000F78C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FAACC 000F78CC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FAAD0 000F78D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FAAD4 000F78D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FAAD8 000F78D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FAADC 000F78DC*/ PPC::Runtime::ASM::blr();
}