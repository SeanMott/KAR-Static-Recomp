//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801388A8.hpp"
#include "fn_8014D3A0.hpp"
#include "fn_8014D3A0.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"



void fn_8014D3F0(PPC::Runtime::GCContext* context)
{
/*8014D3F0 0014A1F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8014D3F4 0014A1F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014D3F8 0014A1F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014D3FC 0014A1FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014D400 0014A200*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014D404 0014A204*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014D408 0014A208*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014D40C 0014A20C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8014D410 0014A210*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x440, context->r3));
/*8014D414 0014A214*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014D418 0014A218*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014D41C 0014A21C*/ PPC::Runtime::ASM::bl(fn_801388A8);
/*8014D420 0014A220*/ PPC::Runtime::ASM::lis(context->r4, fn_8014D3A0 @ Get_MemoryOffset_HighBit);
/*8014D424 0014A224*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8014D428 0014A228*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8014D42C 0014A22C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8014D430 0014A230*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8014D3A0 @ Get_MemoryOffset_LowBit);
/*8014D434 0014A234*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*8014D438 0014A238*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0600 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014D43C 0014A23C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8014D440 0014A240*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x440, context->r31));
/*8014D444 0014A244*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*8014D448 0014A248*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8014D44C 0014A24C*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*8014D450 0014A250*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8014D454 0014A254*/ PPC::Runtime::ASM::li(context->r4, 0x21);
/*8014D458 0014A258*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*8014D45C 0014A25C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x444, context->r31));
/*8014D460 0014A260*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014D464 0014A264*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014D468 0014A268*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014D46C 0014A26C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014D470 0014A270*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014D474 0014A274*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8014D478 0014A278*/ PPC::Runtime::ASM::blr();
}