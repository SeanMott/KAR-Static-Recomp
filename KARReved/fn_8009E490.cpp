//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_8009E29C.hpp"



void fn_8009E490(PPC::Runtime::GCContext* context)
{
/*8009E490 0009B290*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8009E494 0009B294*/ PPC::Runtime::ASM::mflr(context->r0);
/*8009E498 0009B298*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009E49C 0009B29C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/* 8009E4A0 0009B2A0  7C BF 2B 79 */ mr. context->r31 , context->r5
/*8009E4A4 0009B2A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009E4A8 0009B2A8*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8009E4AC 0009B2AC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009E4B0 0009B2B0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8009E4B4 0009B2B4*/ PPC::Runtime::ASM::bne(.L_8009E558);
/*8009E4B8 0009B2B8*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*8009E4BC 0009B2BC*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8009E4C0 0009B2C0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009E4C4 0009B2C4*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009E4C8 0009B2C8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009E4CC 0009B2CC*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*8009E4D0 0009B2D0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8009E4D4 0009B2D4*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009E4D8 0009B2D8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009E4DC 0009B2DC*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009E4E0 0009B2E0*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8009E4E4 0009B2E4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009E4E8 0009B2E8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009E4EC 0009B2EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009E4F0 0009B2F0*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*8009E4F4 0009B2F4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8009E4F8 0009B2F8*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009E4FC 0009B2FC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009E500 0009B300*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009E504 0009B304*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*8009E508 0009B308*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8009E50C 0009B30C*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*8009E510 0009B310*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009E514 0009B314*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009E518 0009B318*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*8009E51C 0009B31C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009E520 0009B320*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8009E524 0009B324*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*8009E528 0009B328*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009E52C 0009B32C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009E530 0009B330*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*8009E534 0009B334*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009E538 0009B338*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*8009E53C 0009B33C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8009E540 0009B340*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*8009E544 0009B344*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_635 @ Get_MemoryOffset_HighBit);
/*8009E548 0009B348*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8009E54C 0009B34C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_635 @ Get_MemoryOffset_LowBit);
/*8009E550 0009B350*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8009E554 0009B354*/ PPC::Runtime::ASM::bl(fn_8009E29C);
RUNTIME_PPC_JUMP_LABEL(.L_8009E558, 0x8009E558) //this is a jump label
/*8009E558 0009B358*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009E55C 0009B35C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009E560 0009B360*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009E564 0009B364*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009E568 0009B368*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8009E56C 0009B36C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8009E570 0009B370*/ PPC::Runtime::ASM::blr();
}