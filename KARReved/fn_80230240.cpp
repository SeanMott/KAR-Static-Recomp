//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_80230240(PPC::Runtime::GCContext* context)
{
/*80230240 0022D040*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80230244 0022D044*/ PPC::Runtime::ASM::mflr(context->r0);
/*80230248 0022D048*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8023024C 0022D04C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80230250 0022D050*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80230254 0022D054*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*80230258 0022D058*/ PPC::Runtime::ASM::blt(.L_80230274);
/*8023025C 0022D05C*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*80230260 0022D060*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*80230264 0022D064*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*80230268 0022D068*/ PPC::Runtime::ASM::li(context->r4, 0x615);
/*8023026C 0022D06C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*80230270 0022D070*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80230274, 0x80230274) //this is a jump label
/*80230274 0022D074*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80230278 0022D078*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8023027C 0022D07C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80230280 0022D080*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x850, context->r3));
/*80230284 0022D084*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80230288 0022D088*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8023028C 0022D08C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80230290 0022D090*/ PPC::Runtime::ASM::blr();
}