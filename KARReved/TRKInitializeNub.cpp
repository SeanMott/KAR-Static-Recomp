//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "MWTRACE.hpp"
#include "usr_put_initialize.hpp"
#include "TRKInitializeEventQueue.hpp"
#include "TRKInitializeMessageBuffers.hpp"
#include "TRKInitializeDispatcher.hpp"
#include "InitializeProgramEndTrap.hpp"
#include "TRKInitializeSerialHandler.hpp"
#include "TRKInitializeTarget.hpp"
#include "TRKInitializeIntDrivenUART.hpp"
#include "TRKTargetSetInputPendingPtr.hpp"



void TRKInitializeNub(PPC::Runtime::GCContext* context)
{
/*803BD99C 003BA79C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803BD9A0 003BA7A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BD9A4 003BA7A4*/ PPC::Runtime::ASM::li(context->r5, 0x12);
/*803BD9A8 003BA7A8*/ PPC::Runtime::ASM::li(context->r4, 0x34);
/*803BD9AC 003BA7AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BD9B0 003BA7B0*/ PPC::Runtime::ASM::li(context->r3, 0x56);
/*803BD9B4 003BA7B4*/ PPC::Runtime::ASM::li(context->r0, 0x78);
/*803BD9B8 003BA7B8*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803BD9BC 003BA7BC*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BD9C0 003BA7C0*/ PPC::Runtime::ASM::lis(context->r5, gTRKBigEndian @ Get_MemoryOffset_HighBit);
/*803BD9C4 003BA7C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BD9C8 003BA7C8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803BD9CC 003BA7CC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BD9D0 003BA7D0*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r1));
/*803BD9D4 003BA7D4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r1));
/*803BD9D8 003BA7D8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb, context->r1));
/*803BD9DC 003BA7DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BD9E0 003BA7E0*/ PPC::Runtime::ASM::stwu(context->r6, gTRKBigEndian @ Get_MemoryOffset_LowBit ( context->r5 ));
/*803BD9E4 003BA7E4*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x1234);
/*803BD9E8 003BA7E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x5678);
/*803BD9EC 003BA7EC*/ PPC::Runtime::ASM::bne(.L_803BD9F8);
/*803BD9F0 003BA7F0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803BD9F4 003BA7F4*/ PPC::Runtime::ASM::b(.L_803BDA10);
RUNTIME_PPC_JUMP_LABEL(.L_803BD9F8, 0x803BD9F8) //this is a jump label
/*803BD9F8 003BA7F8*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x7856);
/*803BD9FC 003BA7FC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x3412);
/*803BDA00 003BA800*/ PPC::Runtime::ASM::bne(.L_803BDA0C);
/*803BDA04 003BA804*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803BDA08 003BA808*/ PPC::Runtime::ASM::b(.L_803BDA10);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA0C, 0x803BDA0C) //this is a jump label
/*803BDA0C 003BA80C*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA10, 0x803BDA10) //this is a jump label
/*803BDA10 003BA810*/ PPC::Runtime::ASM::lis(context->r3, AT_154_8048BC1C @ Get_MemoryOffset_HighBit);
/*803BDA14 003BA814*/ PPC::Runtime::ASM::addi(context->r4, context->r3, AT_154_8048BC1C @ Get_MemoryOffset_LowBit);
/*803BDA18 003BA818*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803BDA1C 003BA81C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803BDA20 003BA820*/ PPC::Runtime::ASM::bl(MWTRACE);
/*803BDA24 003BA824*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA28 003BA828*/ PPC::Runtime::ASM::bne(.L_803BDA30);
/*803BDA2C 003BA82C*/ PPC::Runtime::ASM::bl(usr_put_initialize);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA30, 0x803BDA30) //this is a jump label
/*803BDA30 003BA830*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA34 003BA834*/ PPC::Runtime::ASM::bne(.L_803BDA40);
/*803BDA38 003BA838*/ PPC::Runtime::ASM::bl(TRKInitializeEventQueue);
/*803BDA3C 003BA83C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA40, 0x803BDA40) //this is a jump label
/*803BDA40 003BA840*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA44 003BA844*/ PPC::Runtime::ASM::bne(.L_803BDA50);
/*803BDA48 003BA848*/ PPC::Runtime::ASM::bl(TRKInitializeMessageBuffers);
/*803BDA4C 003BA84C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA50, 0x803BDA50) //this is a jump label
/*803BDA50 003BA850*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA54 003BA854*/ PPC::Runtime::ASM::bne(.L_803BDA60);
/*803BDA58 003BA858*/ PPC::Runtime::ASM::bl(TRKInitializeDispatcher);
/*803BDA5C 003BA85C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA60, 0x803BDA60) //this is a jump label
/*803BDA60 003BA860*/ PPC::Runtime::ASM::bl(InitializeProgramEndTrap);
/*803BDA64 003BA864*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA68 003BA868*/ PPC::Runtime::ASM::bne(.L_803BDA74);
/*803BDA6C 003BA86C*/ PPC::Runtime::ASM::bl(TRKInitializeSerialHandler);
/*803BDA70 003BA870*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA74, 0x803BDA74) //this is a jump label
/*803BDA74 003BA874*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA78 003BA878*/ PPC::Runtime::ASM::bne(.L_803BDA84);
/*803BDA7C 003BA87C*/ PPC::Runtime::ASM::bl(TRKInitializeTarget);
/*803BDA80 003BA880*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BDA84, 0x803BDA84) //this is a jump label
/*803BDA84 003BA884*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BDA88 003BA888*/ PPC::Runtime::ASM::bne(.L_803BDACC);
/*803BDA8C 003BA88C*/ PPC::Runtime::ASM::lis(context->r3, gTRKInputPendingPtr @ Get_MemoryOffset_HighBit);
/*803BDA90 003BA890*/ PPC::Runtime::ASM::lis(context->r5, 0x1);
/*803BDA94 003BA894*/ PPC::Runtime::ASM::addi(context->r6, context->r3, gTRKInputPendingPtr @ Get_MemoryOffset_LowBit);
/*803BDA98 003BA898*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803BDA9C 003BA89C*/ PPC::Runtime::ASM::subi(context->r3, context->r5, 0x1f00);
/*803BDAA0 003BA8A0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803BDAA4 003BA8A4*/ PPC::Runtime::ASM::bl(TRKInitializeIntDrivenUART);
/*803BDAA8 003BA8A8*/ PPC::Runtime::ASM::lis(context->r4, gTRKInputPendingPtr @ Get_MemoryOffset_HighBit);
/*803BDAAC 003BA8AC*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*803BDAB0 003BA8B0*/ PPC::Runtime::ASM::addi(context->r3, context->r4, gTRKInputPendingPtr @ Get_MemoryOffset_LowBit);
/*803BDAB4 003BA8B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803BDAB8 003BA8B8*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*803BDABC 003BA8BC*/ PPC::Runtime::ASM::bl(TRKTargetSetInputPendingPtr);
/*803BDAC0 003BA8C0*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*803BDAC4 003BA8C4*/ PPC::Runtime::ASM::beq(.L_803BDACC);
/*803BDAC8 003BA8C8*/ PPC::Runtime::ASM::mr(context->r31, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_803BDACC, 0x803BDACC) //this is a jump label
/*803BDACC 003BA8CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BDAD0 003BA8D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803BDAD4 003BA8D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BDAD8 003BA8D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BDADC 003BA8DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BDAE0 003BA8E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803BDAE4 003BA8E4*/ PPC::Runtime::ASM::blr();
}