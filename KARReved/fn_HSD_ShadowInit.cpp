//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_GXSetTexCopySrc.hpp"
#include "fn_GXSetTexCopyDst.hpp"



void fn_HSD_ShadowInit(PPC::Runtime::GCContext* context)
{
/*8041D15C 00419F5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8041D160 00419F60*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041D164 00419F64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041D168 00419F68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8041D16C 00419F6C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8041D170 00419F70*/ PPC::Runtime::ASM::bne(.L_8041D188);
/*8041D174 00419F74*/ PPC::Runtime::ASM::lis(context->r3, lbl_80504528 @ Get_MemoryOffset_HighBit);
/*8041D178 00419F78*/ PPC::Runtime::ASM::li(context->r4, 0xf5);
/*8041D17C 00419F7C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80504528 @ Get_MemoryOffset_LowBit);
/*8041D180 00419F80*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_487 @ Get_MemoryOffset_SDA21);
/*8041D184 00419F84*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041D188, 0x8041D188) //this is a jump label
/*8041D188 00419F88*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8041D18C 00419F8C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8041D190 00419F90*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8041D194 00419F94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r5));
/*8041D198 00419F98*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8041D19C 00419F9C*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*8041D1A0 00419FA0*/ PPC::Runtime::ASM::bl(fn_GXSetTexCopySrc);
/*8041D1A4 00419FA4*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8041D1A8 00419FA8*/ PPC::Runtime::ASM::li(context->r5, 0x20);
/*8041D1AC 00419FAC*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*8041D1B0 00419FB0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8041D1B4 00419FB4*/ PPC::Runtime::ASM::bl(fn_GXSetTexCopyDst);
/*8041D1B8 00419FB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041D1BC 00419FBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041D1C0 00419FC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041D1C4 00419FC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8041D1C8 00419FC8*/ PPC::Runtime::ASM::blr();
}