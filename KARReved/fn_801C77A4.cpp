//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CAA08.hpp"



void fn_801C77A4(PPC::Runtime::GCContext* context)
{
/*801C77A4 001C45A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C77A8 001C45A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C77AC 001C45AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C77B0 001C45B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C77B4 001C45B4*/ PPC::Runtime::ASM::bl(fn_801CAA08);
/*801C77B8 001C45B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C77BC 001C45BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C77C0 001C45C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C77C4 001C45C4*/ PPC::Runtime::ASM::blr();
}