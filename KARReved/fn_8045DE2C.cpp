//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8045C958.hpp"



void fn_8045DE2C(PPC::Runtime::GCContext* context)
{
/*8045DE2C 0045AC2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8045DE30 0045AC30*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045DE34 0045AC34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DE38 0045AC38*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8045DE3C 0045AC3C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE58C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8045DE40 0045AC40*/ PPC::Runtime::ASM::bl(fn_8045C958);
/*8045DE44 0045AC44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DE48 0045AC48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045DE4C 0045AC4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045DE50 0045AC50*/ PPC::Runtime::ASM::blr();
}