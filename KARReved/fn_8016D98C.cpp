//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8016D24C.hpp"



void fn_8016D98C(PPC::Runtime::GCContext* context)
{
/*8016D98C 0016A78C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016D990 0016A790*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016D994 0016A794*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016D998 0016A798*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016D99C 0016A79C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016D9A0 0016A7A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8016D9A4 0016A7A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8016D9A8 0016A7A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016D9AC 0016A7AC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8016D9B0 0016A7B0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8016D9B4 0016A7B4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8016D9B8 0016A7B8*/ PPC::Runtime::ASM::bl(fn_8016D24C);
/*8016D9BC 0016A7BC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016D9C0 0016A7C0*/ PPC::Runtime::ASM::bne(.L_8016D9D4);
/*8016D9C4 0016A7C4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6BC0 @ Get_MemoryOffset_SDA21);
/*8016D9C8 0016A7C8*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8016D9CC 0016A7CC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6BC8 @ Get_MemoryOffset_SDA21);
/*8016D9D0 0016A7D0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016D9D4, 0x8016D9D4) //this is a jump label
/*8016D9D4 0016A7D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8016D9D8 0016A7D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8016D9DC 0016A7DC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8016D9E0 0016A7E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8016D9E4 0016A7E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8016D9E8 0016A7E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8016D9EC 0016A7EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016D9F0 0016A7F0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8016D9F4 0016A7F4*/ PPC::Runtime::ASM::bne(.L_8016DA40);
/*8016D9F8 0016A7F8*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016D9FC 0016A7FC*/ PPC::Runtime::ASM::beq(.L_8016DA40);
/*8016DA00 0016A800*/ PPC::Runtime::ASM::bne(.L_8016DA14);
/*8016DA04 0016A804*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6BC0 @ Get_MemoryOffset_SDA21);
/*8016DA08 0016A808*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8016DA0C 0016A80C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6BC8 @ Get_MemoryOffset_SDA21);
/*8016DA10 0016A810*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016DA14, 0x8016DA14) //this is a jump label
/*8016DA14 0016A814*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016DA18 0016A818*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8016DA1C 0016A81C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8016DA20 0016A820*/ PPC::Runtime::ASM::bne(.L_8016DA30);
/*8016DA24 0016A824*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8016DA28 0016A828*/ PPC::Runtime::ASM::beq(.L_8016DA30);
/*8016DA2C 0016A82C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8016DA30, 0x8016DA30) //this is a jump label
/*8016DA30 0016A830*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8016DA34 0016A834*/ PPC::Runtime::ASM::bne(.L_8016DA40);
/*8016DA38 0016A838*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016DA3C 0016A83C*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8016DA40, 0x8016DA40) //this is a jump label
/*8016DA40 0016A840*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016DA44 0016A844*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016DA48 0016A848*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016DA4C 0016A84C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016DA50 0016A850*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016DA54 0016A854*/ PPC::Runtime::ASM::blr();
}