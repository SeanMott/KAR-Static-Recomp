//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSGetConsoleType.hpp"
#include "fn_InitializeUART.hpp"
#include "fn_WriteUARTN.hpp"
#include "fn_803C27BC.hpp"



void fn___write_console(PPC::Runtime::GCContext* context)
{
/*803B98B4 003B66B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803B98B8 003B66B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B98BC 003B66BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B98C0 003B66C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B98C4 003B66C4*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*803B98C8 003B66C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B98CC 003B66CC*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*803B98D0 003B66D0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B98D4 003B66D4*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*803B98D8 003B66D8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803B98DC 003B66DC*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*803B98E0 003B66E0*/ PPC::Runtime::ASM::bl(fn_OSGetConsoleType);
/*803B98E4 003B66E4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 2, 2);
/*803B98E8 003B66E8*/ PPC::Runtime::ASM::bne(.L_803B994C);
/*803B98EC 003B66EC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDCE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803B98F0 003B66F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803B98F4 003B66F4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803B98F8 003B66F8*/ PPC::Runtime::ASM::bne(.L_803B9918);
/*803B98FC 003B66FC*/ PPC::Runtime::ASM::lis(context->r3, 0x1);
/*803B9900 003B6700*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x1f00);
/*803B9904 003B6704*/ PPC::Runtime::ASM::bl(fn_InitializeUART);
/*803B9908 003B6708*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803B990C 003B670C*/ PPC::Runtime::ASM::bne(.L_803B9918);
/*803B9910 003B6710*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803B9914 003B6714*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDCE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803B9918, 0x803B9918) //this is a jump label
/*803B9918 003B6718*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803B991C 003B671C*/ PPC::Runtime::ASM::beq(.L_803B9928);
/*803B9920 003B6720*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803B9924 003B6724*/ PPC::Runtime::ASM::b(.L_803B9964);
RUNTIME_PPC_JUMP_LABEL(.L_803B9928, 0x803B9928) //this is a jump label
/*803B9928 003B6728*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803B992C 003B672C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803B9930 003B6730*/ PPC::Runtime::ASM::bl(fn_WriteUARTN);
/*803B9934 003B6734*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803B9938 003B6738*/ PPC::Runtime::ASM::beq(.L_803B994C);
/*803B993C 003B673C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803B9940 003B6740*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803B9944 003B6744*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803B9948 003B6748*/ PPC::Runtime::ASM::b(.L_803B9964);
RUNTIME_PPC_JUMP_LABEL(.L_803B994C, 0x803B994C) //this is a jump label
/*803B994C 003B674C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803B9950 003B6750*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*803B9954 003B6754*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*803B9958 003B6758*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*803B995C 003B675C*/ PPC::Runtime::ASM::bl(fn_803C27BC);
/*803B9960 003B6760*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803B9964, 0x803B9964) //this is a jump label
/*803B9964 003B6764*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B9968 003B6768*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B996C 003B676C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B9970 003B6770*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B9974 003B6774*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803B9978 003B6778*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B997C 003B677C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803B9980 003B6780*/ PPC::Runtime::ASM::blr();
}