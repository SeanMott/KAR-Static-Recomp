//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80153658(PPC::Runtime::GCContext* context)
{
/*80153658 00150458*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015365C 0015045C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80153660 00150460*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80153664 00150464*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80153668 00150468*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015366C 0015046C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80153670 00150470*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80153674 00150474*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80153678, 0x80153678) //this is a jump label
/*80153678 00150478*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015367C 0015047C*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80153680 00150480*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80153684 00150484*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80153688 00150488*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c0, context->r30));
/*8015368C 0015048C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80153690 00150490*/ PPC::Runtime::ASM::beq(.L_8015369C);
/*80153694 00150494*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80153698 00150498*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015369C, 0x8015369C) //this is a jump label
/*8015369C 0015049C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801536A0 001504A0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*801536A4 001504A4*/ PPC::Runtime::ASM::blt(.L_80153678);
/*801536A8 001504A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801536AC 001504AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801536B0 001504B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801536B4 001504B4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801536B8 001504B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801536BC 001504BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801536C0 001504C0*/ PPC::Runtime::ASM::blr();
}