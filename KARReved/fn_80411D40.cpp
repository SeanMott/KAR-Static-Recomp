//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_PADRead.hpp"
#include "OSGetTick.hpp"
#include "OSGetTick.hpp"



void fn_80411D40(PPC::Runtime::GCContext* context)
{
/*80411D40 0040EB40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80411D44 0040EB44*/ PPC::Runtime::ASM::mflr(context->r0);
/*80411D48 0040EB48*/ PPC::Runtime::ASM::lis(context->r4, lbl_8058B080 @ Get_MemoryOffset_HighBit);
/*80411D4C 0040EB4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80411D50 0040EB50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80411D54 0040EB54*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_8058B080 @ Get_MemoryOffset_LowBit);
/*80411D58 0040EB58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80411D5C 0040EB5C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80411D60 0040EB60*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80411D64 0040EB64*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80411D68 0040EB68*/ PPC::Runtime::ASM::bl(fn_PADRead);
/*80411D6C 0040EB6C*/ PPC::Runtime::ASM::lis(context->r4, lbl_8058B080 @ Get_MemoryOffset_HighBit);
/*80411D70 0040EB70*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r28));
/*80411D74 0040EB74*/ PPC::Runtime::ASM::mr(context->r30, context->r28);
/*80411D78 0040EB78*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80411D7C 0040EB7C*/ PPC::Runtime::ASM::addi(context->r29, context->r4, lbl_8058B080 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_80411D80, 0x80411D80) //this is a jump label
/*80411D80 0040EB80*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r30));
/*80411D84 0040EB84*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80411D88 0040EB88*/ PPC::Runtime::ASM::bne(.L_80411E3C);
/*80411D8C 0040EB8C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80411D90 0040EB90*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1600);
/*80411D94 0040EB94*/ PPC::Runtime::ASM::bne(.L_80411E34);
/*80411D98 0040EB98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*80411D9C 0040EB9C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80411DA0 0040EBA0*/ PPC::Runtime::ASM::beq(.L_80411DCC);
/*80411DA4 0040EBA4*/ PPC::Runtime::ASM::bge(.L_80411E3C);
/*80411DA8 0040EBA8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80411DAC 0040EBAC*/ PPC::Runtime::ASM::bge(.L_80411DB8);
/*80411DB0 0040EBB0*/ PPC::Runtime::ASM::b(.L_80411E3C);
/*80411DB4 0040EBB4*/ PPC::Runtime::ASM::b(.L_80411E3C);
RUNTIME_PPC_JUMP_LABEL(.L_80411DB8, 0x80411DB8) //this is a jump label
/*80411DB8 0040EBB8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80411DBC 0040EBBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*80411DC0 0040EBC0*/ PPC::Runtime::ASM::bl(OSGetTick);
/*80411DC4 0040EBC4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r29));
/*80411DC8 0040EBC8*/ PPC::Runtime::ASM::b(.L_80411E3C);
RUNTIME_PPC_JUMP_LABEL(.L_80411DCC, 0x80411DCC) //this is a jump label
/*80411DCC 0040EBCC*/ PPC::Runtime::ASM::bl(OSGetTick);
/*80411DD0 0040EBD0*/ PPC::Runtime::ASM::lis(context->r4, 0x8000);
/*80411DD4 0040EBD4*/ PPC::Runtime::ASM::lis(context->r5, 0x4330);
/*80411DD8 0040EBD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r4));
/*80411DDC 0040EBDC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r29));
/*80411DE0 0040EBE0*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 2);
/*80411DE4 0040EBE4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80411DE8 0040EBE8*/ PPC::Runtime::ASM::subf(context->r3, context->r4, context->r3);
/*80411DEC 0040EBEC*/ PPC::Runtime::ASM::lfd(context->f3, STRUCT_DOUBLE_COUNT_1805E5B88 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80411DF0 0040EBF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80411DF4 0040EBF4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5B80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80411DF8 0040EBF8*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80411DFC 0040EBFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80411E00 0040EC00*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f3);
/*80411E04 0040EC04*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80411E08 0040EC08*/ PPC::Runtime::ASM::lfd(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80411E0C 0040EC0C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*80411E10 0040EC10*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f3);
/*80411E14 0040EC14*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80411E18 0040EC18*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80411E1C 0040EC1C*/ PPC::Runtime::ASM::bne(.L_80411E3C);
/*80411E20 0040EC20*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80411E24 0040EC24*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80411E28 0040EC28*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5b, context->r31));
/*80411E2C 0040EC2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*80411E30 0040EC30*/ PPC::Runtime::ASM::b(.L_80411E3C);
RUNTIME_PPC_JUMP_LABEL(.L_80411E34, 0x80411E34) //this is a jump label
/*80411E34 0040EC34*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80411E38 0040EC38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_80411E3C, 0x80411E3C) //this is a jump label
/*80411E3C 0040EC3C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80411E40 0040EC40*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x8);
/*80411E44 0040EC44*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*80411E48 0040EC48*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0xc);
/*80411E4C 0040EC4C*/ PPC::Runtime::ASM::blt(.L_80411D80);
/*80411E50 0040EC50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80411E54 0040EC54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80411E58 0040EC58*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80411E5C 0040EC5C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80411E60 0040EC60*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80411E64 0040EC64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80411E68 0040EC68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80411E6C 0040EC6C*/ PPC::Runtime::ASM::blr();
}