//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025B24C(PPC::Runtime::GCContext* context)
{
/*8025B24C 0025804C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025B250 00258050*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025B254 00258054*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B258 00258058*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B25C 0025805C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025B260 00258060*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025B264 00258064*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025B268 00258068*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B26C 0025806C*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025B270 00258070*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B274 00258074*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025B278 00258078*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025B27C 0025807C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B280 00258080*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B284 00258084*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025B288 00258088*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025B28C 0025808C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025B290 00258090*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B294 00258094*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B298 00258098*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025B29C 0025809C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025B2A0 002580A0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025B2A4 002580A4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025B2A8 002580A8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E84 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B2AC 002580AC*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025B2B0 002580B0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B2B4 002580B4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B2B8 002580B8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025B2BC 002580BC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025B2C0 002580C0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025B2C4 002580C4*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025B2C8 002580C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B2CC 002580CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B2D0 002580D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025B2D4 002580D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025B2D8 002580D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025B2DC 002580DC*/ PPC::Runtime::ASM::blr();
}