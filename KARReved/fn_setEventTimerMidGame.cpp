//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800620E8.hpp"



void fn_setEventTimerMidGame(PPC::Runtime::GCContext* context)
{
/*800EE50C 000EB30C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EE510 000EB310*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EE514 000EB314*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_44_CT_EventFunctions @ Get_MemoryOffset_HighBit);
/*800EE518 000EB318*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE51C 000EB31C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_44_CT_EventFunctions @ Get_MemoryOffset_LowBit);
/*800EE520 000EB320*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EE524 000EB324*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800EE528 000EB328*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800EE52C 000EB32C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800EE530 000EB330*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE534 000EB334*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x14);
/*800EE538 000EB338*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800EE53C 000EB33C*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*800EE540 000EB340*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800EE544 000EB344*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800EE548 000EB348*/ PPC::Runtime::ASM::beq(.L_800EE554);
/*800EE54C 000EB34C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800EE550 000EB350*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800EE554, 0x800EE554) //this is a jump label
/*800EE554 000EB354*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EE558 000EB358*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*800EE55C 000EB35C*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*800EE560 000EB360*/ PPC::Runtime::ASM::blt(.L_800EE5F4);
/*800EE564 000EB364*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800EE568 000EB368*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_44_CT_EventFunctions @ Get_MemoryOffset_HighBit);
/*800EE56C 000EB36C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithFuncPtrs_44_CT_EventFunctions @ Get_MemoryOffset_LowBit);
/*800EE570 000EB370*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x14);
/*800EE574 000EB374*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800EE578 000EB378*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800EE57C 000EB37C*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800EE580 000EB380*/ PPC::Runtime::ASM::beq(.L_800EE590);
/*800EE584 000EB384*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800EE588 000EB388*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800EE58C 000EB38C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800EE590, 0x800EE590) //this is a jump label
/*800EE590 000EB390*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EE594 000EB394*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800EE598 000EB398*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE59C 000EB39C*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0xc);
/*800EE5A0 000EB3A0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*800EE5A4 000EB3A4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x9);
/*800EE5A8 000EB3A8*/ PPC::Runtime::ASM::lbzx(context->r0, context->r4, context->r0);
/*800EE5AC 000EB3AC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800EE5B0 000EB3B0*/ PPC::Runtime::ASM::beq(.L_800EE5B8);
/*800EE5B4 000EB3B4*/ PPC::Runtime::ASM::bl(fn_800620E8);
RUNTIME_PPC_JUMP_LABEL(.L_800EE5B8, 0x800EE5B8) //this is a jump label
/*800EE5B8 000EB3B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EE5BC 000EB3BC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EE5C0 000EB3C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EE5C4 000EB3C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800EE5C8 000EB3C8*/ PPC::Runtime::ASM::subf(context->r3, context->r3, context->r0);
/*800EE5CC 000EB3CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*800EE5D0 000EB3D0*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800EE5D4 000EB3D4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EE5D8 000EB3D8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800EE5DC 000EB3DC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800EE5E0 000EB3E0*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r3);
/*800EE5E4 000EB3E4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800EE5E8 000EB3E8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800EE5EC 000EB3EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800EE5F0 000EB3F0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800EE5F4, 0x800EE5F4) //this is a jump label
/*800EE5F4 000EB3F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE5F8 000EB3F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EE5FC 000EB3FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800EE600 000EB400*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EE604 000EB404*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EE608 000EB408*/ PPC::Runtime::ASM::blr();
}