//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80391B1C.hpp"
#include "fn_80391C1C.hpp"



void fn_8039A298(PPC::Runtime::GCContext* context)
{
/*8039A298 00397098*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039A29C 0039709C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039A2A0 003970A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A2A4 003970A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A2A8 003970A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A2AC 003970AC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8039A2B0 003970B0*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8039A2B4 003970B4*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8039A2B8 003970B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A2BC 003970BC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A2C0 003970C0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8039A2C4 003970C4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A2C8 003970C8*/ PPC::Runtime::ASM::bctrl();
/*8039A2CC 003970CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039A2D0 003970D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A2D4 003970D4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A2D8 003970D8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8039A2DC 003970DC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A2E0 003970E0*/ PPC::Runtime::ASM::bctrl();
/*8039A2E4 003970E4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039A2E8 003970E8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8039A2EC 003970EC*/ PPC::Runtime::ASM::li(context->r5, 0xe);
/*8039A2F0 003970F0*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8039A2F4 003970F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A2F8 003970F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A2FC 003970FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A300 00397100*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039A304 00397104*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039A308 00397108*/ PPC::Runtime::ASM::blr();
}