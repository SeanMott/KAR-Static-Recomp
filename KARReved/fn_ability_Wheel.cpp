//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801918BC.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801AF638.hpp"



void fn_ability_Wheel(PPC::Runtime::GCContext* context)
{
/*801AF950 001AC750*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AF954 001AC754*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AF958 001AC758*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AF95C 001AC75C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AF960 001AC760*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AF964 001AC764*/ PPC::Runtime::ASM::bl(fn_801918BC);
/*801AF968 001AC768*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E14A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AF96C 001AC76C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AF970 001AC770*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E14AC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AF974 001AC774*/ PPC::Runtime::ASM::li(context->r4, 0x41);
/*801AF978 001AC778*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801AF97C 001AC77C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801AF980 001AC780*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801AF984 001AC784*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801AF988 001AC788*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AF98C 001AC78C*/ PPC::Runtime::ASM::bl(fn_801AF638);
/*801AF990 001AC790*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AF994 001AC794*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AF998 001AC798*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AF99C 001AC79C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AF9A0 001AC7A0*/ PPC::Runtime::ASM::blr();
}