//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800BAD8C.hpp"



void fn_80206D90(PPC::Runtime::GCContext* context)
{
/*80206D90 00203B90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80206D94 00203B94*/ PPC::Runtime::ASM::mflr(context->r0);
/*80206D98 00203B98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80206D9C 00203B9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80206DA0 00203BA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80206DA4 00203BA4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80206DA8 00203BA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80206DAC 00203BAC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80206DB0 00203BB0*/ PPC::Runtime::ASM::bne(.L_80206DD8);
/*80206DB4 00203BB4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1338 @ Get_MemoryOffset_HighBit);
/*80206DB8 00203BB8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1338 @ Get_MemoryOffset_LowBit);
/*80206DBC 00203BBC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80206DC0 00203BC0*/ PPC::Runtime::ASM::bl(OSReport);
/*80206DC4 00203BC4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1339 @ Get_MemoryOffset_HighBit);
/*80206DC8 00203BC8*/ PPC::Runtime::ASM::li(context->r4, 0x6d);
/*80206DCC 00203BCC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1339 @ Get_MemoryOffset_LowBit);
/*80206DD0 00203BD0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D715C @ Get_MemoryOffset_SDA21);
/*80206DD4 00203BD4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80206DD8, 0x80206DD8) //this is a jump label
/*80206DD8 00203BD8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80206DDC 00203BDC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80206DE0 00203BE0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x2f8);
/*80206DE4 00203BE4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80206DE8 00203BE8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*80206DEC 00203BEC*/ PPC::Runtime::ASM::bl(fn_800BAD8C);
/*80206DF0 00203BF0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E236C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80206DF4 00203BF4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80206DF8 00203BF8*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80206DFC 00203BFC*/ PPC::Runtime::ASM::mfcr(context->r0);
/*80206E00 00203C00*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 2);
/*80206E04 00203C04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80206E08 00203C08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80206E0C 00203C0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80206E10 00203C10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80206E14 00203C14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80206E18 00203C18*/ PPC::Runtime::ASM::blr();
}