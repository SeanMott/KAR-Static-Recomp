//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8020AC20(PPC::Runtime::GCContext* context)
{
/*8020AC20 00207A20*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x5d4);
/*8020AC24 00207A24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5f0, context->r3));
/*8020AC28 00207A28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r5));
/*8020AC2C 00207A2C*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*8020AC30 00207A30*/ PPC::Runtime::ASM::ble(.L_8020ACC4);
/*8020AC34 00207A34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8020AC38 00207A38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r5));
/*8020AC3C 00207A3C*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x18);
/*8020AC40 00207A40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r5));
/*8020AC44 00207A44*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r4);
/*8020AC48 00207A48*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r4));
/*8020AC4C 00207A4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r4));
/*8020AC50 00207A50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r5));
/*8020AC54 00207A54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r4));
/*8020AC58 00207A58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8020AC5C 00207A5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r5));
/*8020AC60 00207A60*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x18);
/*8020AC64 00207A64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r5));
/*8020AC68 00207A68*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r4);
/*8020AC6C 00207A6C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4, context->r4));
/*8020AC70 00207A70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r4));
/*8020AC74 00207A74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r5));
/*8020AC78 00207A78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r4));
/*8020AC7C 00207A7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8020AC80 00207A80*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8020AC84 00207A84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8020AC88 00207A88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*8020AC8C 00207A8C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x10);
/*8020AC90 00207A90*/ PPC::Runtime::ASM::ble(.L_8020AC9C);
/*8020AC94 00207A94*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8020AC98 00207A98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8020AC9C, 0x8020AC9C) //this is a jump label
/*8020AC9C 00207A9C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8020ACA0 00207AA0*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*8020ACA4 00207AA4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r5));
/*8020ACA8 00207AA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r5));
/*8020ACAC 00207AAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r5));
/*8020ACB0 00207AB0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x8);
/* 8020ACB4 00207AB4  4C 81 00 20 */ blelr
/*8020ACB8 00207AB8*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*8020ACBC 00207ABC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r5));
/*8020ACC0 00207AC0*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_8020ACC4, 0x8020ACC4) //this is a jump label
/*8020ACC4 00207AC4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8020ACC8 00207AC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r5));
/*8020ACCC 00207ACC*/ PPC::Runtime::ASM::blr();
}