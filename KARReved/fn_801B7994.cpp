//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_groundMovement.hpp"
#include "fn_startCharge.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_groundSpin2?.hpp"
#include "fn_801B4D60.hpp"



void fn_801B7994(PPC::Runtime::GCContext* context)
{
/*801B7994 001B4794*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B7998 001B4798*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B799C 001B479C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B79A0 001B47A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B79A4 001B47A4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B79A8 001B47A8*/ PPC::Runtime::ASM::bl(fn_groundMovement);
/*801B79AC 001B47AC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B79B0 001B47B0*/ PPC::Runtime::ASM::bl(fn_startCharge);
/*801B79B4 001B47B4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B79B8 001B47B8*/ PPC::Runtime::ASM::bne(.L_801B79E0);
/*801B79BC 001B47BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B79C0 001B47C0*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801B79C4 001B47C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B79C8 001B47C8*/ PPC::Runtime::ASM::bl(fn_groundSpin2?);
/*801B79CC 001B47CC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B79D0 001B47D0*/ PPC::Runtime::ASM::bne(.L_801B79E0);
/*801B79D4 001B47D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B79D8 001B47D8*/ PPC::Runtime::ASM::bl(fn_801B4D60);
/*801B79DC 001B47DC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801B79E0, 0x801B79E0) //this is a jump label
/*801B79E0 001B47E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B79E4 001B47E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B79E8 001B47E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B79EC 001B47EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B79F0 001B47F0*/ PPC::Runtime::ASM::blr();
}