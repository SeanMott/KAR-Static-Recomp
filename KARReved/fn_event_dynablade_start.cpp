//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254144.hpp"
#include "fn_800ED784.hpp"
#include "fn_800EE6EC.hpp"
#include "fn_800EE708.hpp"



void fn_event_dynablade_start(PPC::Runtime::GCContext* context)
{
/*80110184 0010CF84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80110188 0010CF88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011018C 0010CF8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80110190 0010CF90*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80110194 0010CF94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80110198 0010CF98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011019C 0010CF9C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801101A0 0010CFA0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801101A4 0010CFA4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD720 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801101A8 0010CFA8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD718 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801101AC 0010CFAC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD71C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801101B0 0010CFB0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD724 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801101B4 0010CFB4*/ PPC::Runtime::ASM::bl(fn_80254144);
/*801101B8 0010CFB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801101BC 0010CFBC*/ PPC::Runtime::ASM::bl(fn_800ED784);
/*801101C0 0010CFC0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557820 @ Get_MemoryOffset_HighBit);
/*801101C4 0010CFC4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*801101C8 0010CFC8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80557820 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_801101CC, 0x801101CC) //this is a jump label
/*801101CC 0010CFCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801101D0 0010CFD0*/ PPC::Runtime::ASM::bl(fn_800EE6EC);
/*801101D4 0010CFD4*/ PPC::Runtime::ASM::add(context->r0, context->r29, context->r3);
/*801101D8 0010CFD8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801101DC 0010CFDC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x14);
/*801101E0 0010CFE0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801101E4 0010CFE4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*801101E8 0010CFE8*/ PPC::Runtime::ASM::blt(.L_801101CC);
/*801101EC 0010CFEC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801101F0 0010CFF0*/ PPC::Runtime::ASM::bl(fn_800EE708);
/*801101F4 0010CFF4*/ PPC::Runtime::ASM::lis(context->r4, lbl_80557820 @ Get_MemoryOffset_HighBit);
/*801101F8 0010CFF8*/ PPC::Runtime::ASM::subi(context->r29, context->r3, 0x1);
/*801101FC 0010CFFC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80557820 @ Get_MemoryOffset_LowBit);
/*80110200 0010D000*/ PPC::Runtime::ASM::add(context->r30, context->r31, context->r29);
/*80110204 0010D004*/ PPC::Runtime::ASM::b(.L_80110228);
RUNTIME_PPC_JUMP_LABEL(.L_80110208, 0x80110208) //this is a jump label
/*80110208 0010D008*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x1);
/*8011020C 0010D00C*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*80110210 0010D010*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80110214 0010D014*/ PPC::Runtime::ASM::subi(context->r29, context->r29, 0x1);
/*80110218 0010D018*/ PPC::Runtime::ASM::lbzx(context->r0, context->r31, context->r3);
/*8011021C 0010D01C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80110220 0010D020*/ PPC::Runtime::ASM::subi(context->r30, context->r30, 0x1);
/*80110224 0010D024*/ PPC::Runtime::ASM::stbx(context->r4, context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80110228, 0x80110228) //this is a jump label
/*80110228 0010D028*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x1);
/*8011022C 0010D02C*/ PPC::Runtime::ASM::bgt(.L_80110208);
/*80110230 0010D030*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80110234 0010D034*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80110238 0010D038*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011023C 0010D03C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80110240 0010D040*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80110244 0010D044*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80110248 0010D048*/ PPC::Runtime::ASM::blr();
}