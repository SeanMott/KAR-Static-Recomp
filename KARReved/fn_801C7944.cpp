//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"



void fn_801C7944(PPC::Runtime::GCContext* context)
{
/*801C7944 001C4744*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C7948 001C4748*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C794C 001C474C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C7950 001C4750*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C7954 001C4754*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C7958 001C4758*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801C795C 001C475C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C7960 001C4760*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x460, context->r3));
/*801C7964 001C4764*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r3));
/*801C7968 001C4768*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*801C796C 001C476C*/ PPC::Runtime::ASM::lwzx(context->r31, context->r3, context->r0);
/*801C7970 001C4770*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801C7974 001C4774*/ PPC::Runtime::ASM::bne(.L_801C7988);
/*801C7978 001C4778*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6FB8 @ Get_MemoryOffset_SDA21);
/*801C797C 001C477C*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*801C7980 001C4780*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6FC0 @ Get_MemoryOffset_SDA21);
/*801C7984 001C4784*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801C7988, 0x801C7988) //this is a jump label
/*801C7988 001C4788*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801C798C 001C478C*/ PPC::Runtime::ASM::beq(.L_801C79D0);
/*801C7990 001C4790*/ PPC::Runtime::ASM::bne(.L_801C79A4);
/*801C7994 001C4794*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6FB8 @ Get_MemoryOffset_SDA21);
/*801C7998 001C4798*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801C799C 001C479C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6FC0 @ Get_MemoryOffset_SDA21);
/*801C79A0 001C47A0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801C79A4, 0x801C79A4) //this is a jump label
/*801C79A4 001C47A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801C79A8 001C47A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801C79AC 001C47AC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*801C79B0 001C47B0*/ PPC::Runtime::ASM::bne(.L_801C79C0);
/*801C79B4 001C47B4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*801C79B8 001C47B8*/ PPC::Runtime::ASM::beq(.L_801C79C0);
/*801C79BC 001C47BC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801C79C0, 0x801C79C0) //this is a jump label
/*801C79C0 001C47C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C79C4 001C47C4*/ PPC::Runtime::ASM::beq(.L_801C79D0);
/*801C79C8 001C47C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C79CC 001C47CC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_801C79D0, 0x801C79D0) //this is a jump label
/*801C79D0 001C47D0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*801C79D4 001C47D4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801C79D8 001C47D8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801C79DC 001C47DC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801C79E0 001C47E0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r31));
/*801C79E4 001C47E4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801C79E8 001C47E8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801C79EC 001C47EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801C79F0 001C47F0*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801C79F4 001C47F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C79F8 001C47F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C79FC 001C47FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C7A00 001C4800*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C7A04 001C4804*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C7A08 001C4808*/ PPC::Runtime::ASM::blr();
}