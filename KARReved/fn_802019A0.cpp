//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802019A0(PPC::Runtime::GCContext* context)
{
/*802019A0 001FE7A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802019A4 001FE7A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802019A8 001FE7A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802019AC 001FE7AC*/ PPC::Runtime::ASM::subi(context->r0, context->r5, 0x19);
/*802019B0 001FE7B0*/ PPC::Runtime::ASM::mulli(context->r6, context->r0, 0xc);
/*802019B4 001FE7B4*/ PPC::Runtime::ASM::lis(context->r5, StructWithFuncPtrs_171 @ Get_MemoryOffset_HighBit);
/*802019B8 001FE7B8*/ PPC::Runtime::ASM::addi(context->r0, context->r5, StructWithFuncPtrs_171 @ Get_MemoryOffset_LowBit);
/*802019BC 001FE7BC*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r6);
/*802019C0 001FE7C0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*802019C4 001FE7C4*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*802019C8 001FE7C8*/ PPC::Runtime::ASM::beq(.L_802019D8);
/*802019CC 001FE7CC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802019D0 001FE7D0*/ PPC::Runtime::ASM::bctrl();
/*802019D4 001FE7D4*/ PPC::Runtime::ASM::b(.L_802019EC);
RUNTIME_PPC_JUMP_LABEL(.L_802019D8, 0x802019D8) //this is a jump label
/*802019D8 001FE7D8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*802019DC 001FE7DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*802019E0 001FE7E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*802019E4 001FE7E4*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*802019E8 001FE7E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_802019EC, 0x802019EC) //this is a jump label
/*802019EC 001FE7EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802019F0 001FE7F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802019F4 001FE7F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802019F8 001FE7F8*/ PPC::Runtime::ASM::blr();
}