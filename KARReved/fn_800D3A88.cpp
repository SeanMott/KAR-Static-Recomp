//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D3A88(PPC::Runtime::GCContext* context)
{
/*800D3A88 000D0888*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D3A8C 000D088C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D3A90 000D0890*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D3A94 000D0894*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3A98 000D0898*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3A9C 000D089C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800D3AA0 000D08A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3AA4 000D08A4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800D3AA8 000D08A8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3AAC 000D08AC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D3AB0 000D08B0*/ PPC::Runtime::ASM::addi(context->r28, context->r5, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D3AB4 000D08B4*/ PPC::Runtime::ASM::lwz(context->r29, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3AB8 000D08B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r29));
/*800D3ABC 000D08BC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D3AC0 000D08C0*/ PPC::Runtime::ASM::bne(.L_800D3AD4);
/*800D3AC4 000D08C4*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x68);
/*800D3AC8 000D08C8*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x66c);
/*800D3ACC 000D08CC*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D3AD0 000D08D0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3AD4, 0x800D3AD4) //this is a jump label
/*800D3AD4 000D08D4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D3AD8 000D08D8*/ PPC::Runtime::ASM::xor(context->r0, context->r30, context->r0);
/*800D3ADC 000D08DC*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3AE0 000D08E0*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r30);
/*800D3AE4 000D08E4*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D3AE8 000D08E8  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D3AEC 000D08EC*/ PPC::Runtime::ASM::beq(.L_800D3B1C);
/*800D3AF0 000D08F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r29));
/*800D3AF4 000D08F4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D3AF8 000D08F8*/ PPC::Runtime::ASM::beq(.L_800D3B04);
/*800D3AFC 000D08FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D3B00 000D0900*/ PPC::Runtime::ASM::b(.L_800D3B08);
RUNTIME_PPC_JUMP_LABEL(.L_800D3B04, 0x800D3B04) //this is a jump label
/*800D3B04 000D0904*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3B08, 0x800D3B08) //this is a jump label
/*800D3B08 000D0908*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r30);
/*800D3B0C 000D090C*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3B10 000D0910*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D3B14 000D0914*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D3B18 000D0918*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D3B1C, 0x800D3B1C) //this is a jump label
/*800D3B1C 000D091C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3B20 000D0920*/ PPC::Runtime::ASM::bne(.L_800D3B44);
/*800D3B24 000D0924*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D3B28 000D0928*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x67c);
/*800D3B2C 000D092C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D3B30 000D0930*/ PPC::Runtime::ASM::bl(OSReport);
/*800D3B34 000D0934*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x68);
/*800D3B38 000D0938*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x68c);
/*800D3B3C 000D093C*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D3B40 000D0940*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3B44, 0x800D3B44) //this is a jump label
/*800D3B44 000D0944*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r29));
/*800D3B48 000D0948*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*800D3B4C 000D094C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3B50 000D0950*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800D3B54 000D0954*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800D3B58 000D0958*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D3B5C 000D095C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800D3B60 000D0960*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800D3B64 000D0964*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*800D3B68 000D0968*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800D3B6C 000D096C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3B70 000D0970*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3B74 000D0974*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3B78 000D0978*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D3B7C 000D097C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3B80 000D0980*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D3B84 000D0984*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D3B88 000D0988*/ PPC::Runtime::ASM::blr();
}