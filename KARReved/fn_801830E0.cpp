//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_801830E0(PPC::Runtime::GCContext* context)
{
/*801830E0 0017FEE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801830E4 0017FEE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801830E8 0017FEE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801830EC 0017FEEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801830F0 0017FEF0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801830F4 0017FEF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x114c, context->r3));
/*801830F8 0017FEF8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801830FC 0017FEFC*/ PPC::Runtime::ASM::beq(.L_80183118);
/*80183100 0017FF00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80183104 0017FF04*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0E5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80183108 0017FF08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8018310C 0017FF0C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*80183110 0017FF10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80183114 0017FF14*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
RUNTIME_PPC_JUMP_LABEL(.L_80183118, 0x80183118) //this is a jump label
/*80183118 0017FF18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018311C 0017FF1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80183120 0017FF20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80183124 0017FF24*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80183128 0017FF28*/ PPC::Runtime::ASM::blr();
}