//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800ABA74.hpp"



void fn_800AE594(PPC::Runtime::GCContext* context)
{
/*800AE594 000AB394*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AE598 000AB398*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AE59C 000AB39C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AE5A0 000AB3A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE5A4 000AB3A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE5A8 000AB3A8*/ PPC::Runtime::ASM::bne(.L_800AE5E0);
/*800AE5AC 000AB3AC*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE5B0 000AB3B0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE5B4 000AB3B4*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800AE5B8 000AB3B8*/ PPC::Runtime::ASM::lis(context->r4, StructWithStructs_58 @ Get_MemoryOffset_HighBit);
/*800AE5BC 000AB3BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AE5C0 000AB3C0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithStructs_58 @ Get_MemoryOffset_LowBit);
/*800AE5C4 000AB3C4*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800AE5C8 000AB3C8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800AE5CC 000AB3CC*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800AE5D0 000AB3D0*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE5D4 000AB3D4*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD5BC @ Get_MemoryOffset_HighBit);
/*800AE5D8 000AB3D8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD5BC @ Get_MemoryOffset_LowBit);
/*800AE5DC 000AB3DC*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800AE5E0, 0x800AE5E0) //this is a jump label
/*800AE5E0 000AB3E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE5E4 000AB3E4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AE5E8 000AB3E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE5EC 000AB3EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AE5F0 000AB3F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AE5F4 000AB3F4*/ PPC::Runtime::ASM::blr();
}