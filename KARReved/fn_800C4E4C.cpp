//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800C3510.hpp"



void fn_800C4E4C(PPC::Runtime::GCContext* context)
{
/*800C4E4C 000C1C4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800C4E50 000C1C50*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C4E54 000C1C54*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_28 @ Get_MemoryOffset_HighBit);
/*800C4E58 000C1C58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800C4E5C 000C1C5C*/ PPC::Runtime::ASM::addi(context->r7, context->r5, MemoryOffset_28 @ Get_MemoryOffset_LowBit);
/*800C4E60 000C1C60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800C4E64 000C1C64*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800C4E68 000C1C68*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r4));
/*800C4E6C 000C1C6C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800C4E70 000C1C70*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/* 800C4E74 000C1C74  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*800C4E78 000C1C78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r7));
/*800C4E7C 000C1C7C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C4E80 000C1C80*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C4E84 000C1C84*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800C4E88 000C1C88*/ PPC::Runtime::ASM::bne(.L_800C4E98);
/*800C4E8C 000C1C8C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C4E90 000C1C90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C4E94 000C1C94*/ PPC::Runtime::ASM::b(.L_800C4EB4);
RUNTIME_PPC_JUMP_LABEL(.L_800C4E98, 0x800C4E98) //this is a jump label
/*800C4E98 000C1C98*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800C4E9C 000C1C9C*/ PPC::Runtime::ASM::bl(fn_800C3510);
/*800C4EA0 000C1CA0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*800C4EA4 000C1CA4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C4EA8 000C1CA8*/ PPC::Runtime::ASM::bne(.L_800C4EB4);
/*800C4EAC 000C1CAC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C4EB0 000C1CB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800C4EB4, 0x800C4EB4) //this is a jump label
/*800C4EB4 000C1CB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C4EB8 000C1CB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C4EBC 000C1CBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800C4EC0 000C1CC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800C4EC4 000C1CC4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800C4EC8 000C1CC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800C4ECC 000C1CCC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800C4ED0 000C1CD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800C4ED4 000C1CD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C4ED8 000C1CD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800C4EDC 000C1CDC*/ PPC::Runtime::ASM::blr();
}