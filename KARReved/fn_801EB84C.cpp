//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DC574.hpp"



void fn_801EB84C(PPC::Runtime::GCContext* context)
{
/*801EB84C 001E864C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EB850 001E8650*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EB854 001E8654*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EB858 001E8658*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EB85C 001E865C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EB860 001E8660*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r3));
/* 801EB864 001E8664  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801EB868 001E8668*/ PPC::Runtime::ASM::beq(.L_801EB884);
/*801EB86C 001E866C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801EB870 001E8670*/ PPC::Runtime::ASM::bl(fn_801DC574);
/*801EB874 001E8674*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
/*801EB878 001E8678*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801EB87C 001E867C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801EB880 001E8680*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801EB884, 0x801EB884) //this is a jump label
/*801EB884 001E8684*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EB888 001E8688*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EB88C 001E868C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EB890 001E8690*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EB894 001E8694*/ PPC::Runtime::ASM::blr();
}