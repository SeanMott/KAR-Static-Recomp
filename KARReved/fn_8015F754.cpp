//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015F754(PPC::Runtime::GCContext* context)
{
/*8015F754 0015C554*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015F758 0015C558*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015F75C 0015C55C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015F760 0015C560*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015F764 0015C564*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015F768 0015C568*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015F76C 0015C56C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F770 0015C570*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015F774, 0x8015F774) //this is a jump label
/*8015F774 0015C574*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015F778 0015C578*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015F77C 0015C57C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015F780 0015C580*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8015F784 0015C584*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x904, context->r30));
/*8015F788 0015C588*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015F78C 0015C58C*/ PPC::Runtime::ASM::beq(.L_8015F798);
/*8015F790 0015C590*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015F794 0015C594*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x904, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015F798, 0x8015F798) //this is a jump label
/*8015F798 0015C598*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015F79C 0015C59C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015F7A0 0015C5A0*/ PPC::Runtime::ASM::blt(.L_8015F774);
/*8015F7A4 0015C5A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015F7A8 0015C5A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015F7AC 0015C5AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015F7B0 0015C5B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F7B4 0015C5B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015F7B8 0015C5B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015F7BC 0015C5BC*/ PPC::Runtime::ASM::blr();
}