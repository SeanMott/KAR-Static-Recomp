//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80475590.hpp"
#include "fn_80475590.hpp"
#include "fn_TCPCloseAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_TCPClose(PPC::Runtime::GCContext* context)
{
/*80476904 00473704*/ PPC::Runtime::ASM::mflr(context->r0);
/*80476908 00473708*/ PPC::Runtime::ASM::lis(context->r4, fn_80475590 @ Get_MemoryOffset_HighBit);
/*8047690C 0047370C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80476910 00473710*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_80475590 @ Get_MemoryOffset_LowBit);
/*80476914 00473714*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*80476918 00473718*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047691C 0047371C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*80476920 00473720*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80476924 00473724*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*80476928 00473728*/ PPC::Runtime::ASM::bl(fn_TCPCloseAsync);
/*8047692C 0047372C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80476930 00473730*/ PPC::Runtime::ASM::bge(.L_80476938);
/*80476934 00473734*/ PPC::Runtime::ASM::b(.L_80476964);
RUNTIME_PPC_JUMP_LABEL(.L_80476938, 0x80476938) //this is a jump label
/*80476938 00473738*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8047693C 0047373C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80476940 00473740*/ PPC::Runtime::ASM::b(.L_8047694C);
RUNTIME_PPC_JUMP_LABEL(.L_80476944, 0x80476944) //this is a jump label
/*80476944 00473744*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*80476948 00473748*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_8047694C, 0x8047694C) //this is a jump label
/*8047694C 0047374C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80476950 00473750*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80476954 00473754*/ PPC::Runtime::ASM::beq(.L_80476944);
/*80476958 00473758*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8047695C 0047375C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80476960 00473760*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_80476964, 0x80476964) //this is a jump label
/*80476964 00473764*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80476968 00473768*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047696C 0047376C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80476970 00473770*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*80476974 00473774*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80476978 00473778*/ PPC::Runtime::ASM::blr();
}