//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022F150(PPC::Runtime::GCContext* context)
{
/*8022F150 0022BF50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022F154 0022BF54*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022F158 0022BF58*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*8022F15C 0022BF5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022F160 0022BF60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022F164 0022BF64*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8022F168 0022BF68*/ PPC::Runtime::ASM::beq(.L_8022F188);
/*8022F16C 0022BF6C*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022F170 0022BF70*/ PPC::Runtime::ASM::subfic(context->r0, context->r31, 0xf);
/*8022F174 0022BF74*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8022F178 0022BF78*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37a, context->r3));
/*8022F17C 0022BF7C*/ PPC::Runtime::ASM::slw(context->r0, context->r4, context->r0);
/*8022F180 0022BF80*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*8022F184 0022BF84*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37a, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8022F188, 0x8022F188) //this is a jump label
/*8022F188 0022BF88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022F18C 0022BF8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022F190 0022BF90*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022F194 0022BF94*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022F198 0022BF98*/ PPC::Runtime::ASM::blr();
}