//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__OSSaveFPUContext.hpp"
#include "__OSLoadFPUContext.hpp"



void OSSwitchFPUContext(PPC::Runtime::GCContext* context)
{
/*803D4AF0 003D18F0*/ PPC::Runtime::ASM::mfmsr(context->r5);
/*803D4AF4 003D18F4*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x2000);
/*803D4AF8 003D18F8*/ PPC::Runtime::ASM::mtmsr(context->r5);
/*803D4AFC 003D18FC*/ PPC::Runtime::ASM::isync();
/*803D4B00 003D1900*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r4));
/*803D4B04 003D1904*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x2000);
/*803D4B08 003D1908*/ PPC::Runtime::ASM::mtsrr1(context->r5);
/*803D4B0C 003D190C*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803D4B10 003D1910*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r3));
/*803D4B14 003D1914*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r3));
/*803D4B18 003D1918*/ PPC::Runtime::ASM::cmpw(context->r5, context->r4);
/*803D4B1C 003D191C*/ PPC::Runtime::ASM::beq(.L_803D4B30);
/*803D4B20 003D1920*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*803D4B24 003D1924*/ PPC::Runtime::ASM::beq(.L_803D4B2C);
/*803D4B28 003D1928*/ PPC::Runtime::ASM::bl(__OSSaveFPUContext);
RUNTIME_PPC_JUMP_LABEL(.L_803D4B2C, 0x803D4B2C) //this is a jump label
/*803D4B2C 003D192C*/ PPC::Runtime::ASM::bl(__OSLoadFPUContext);
RUNTIME_PPC_JUMP_LABEL(.L_803D4B30, 0x803D4B30) //this is a jump label
/*803D4B30 003D1930*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r4));
/*803D4B34 003D1934*/ PPC::Runtime::ASM::mtcrf(255, context->r3);
/*803D4B38 003D1938*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r4));
/*803D4B3C 003D193C*/ PPC::Runtime::ASM::mtlr(context->r3);
/*803D4B40 003D1940*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x198, context->r4));
/*803D4B44 003D1944*/ PPC::Runtime::ASM::mtsrr0(context->r3);
/*803D4B48 003D1948*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*803D4B4C 003D194C*/ PPC::Runtime::ASM::mtctr(context->r3);
/*803D4B50 003D1950*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r4));
/*803D4B54 003D1954*/ PPC::Runtime::ASM::mtxer(context->r3);
/*803D4B58 003D1958*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a2, context->r4));
/*803D4B5C 003D195C*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 31, 29);
/*803D4B60 003D1960*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a2, context->r4));
/*803D4B64 003D1964*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*803D4B68 003D1968*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*803D4B6C 003D196C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*803D4B70 003D1970*/ PPC::Runtime::ASM::rfi();
}