//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F4ACC(PPC::Runtime::GCContext* context)
{
/*800F4ACC 000F18CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F4AD0 000F18D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F4AD4 000F18D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F4AD8 000F18D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4ADC 000F18DC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F4AE0 000F18E0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x10);
/*800F4AE4 000F18E4*/ PPC::Runtime::ASM::blt(.L_800F4B00);
/*800F4AE8 000F18E8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_979 @ Get_MemoryOffset_HighBit);
/*800F4AEC 000F18EC*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_980 @ Get_MemoryOffset_HighBit);
/*800F4AF0 000F18F0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_979 @ Get_MemoryOffset_LowBit);
/*800F4AF4 000F18F4*/ PPC::Runtime::ASM::li(context->r4, 0x14e);
/*800F4AF8 000F18F8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_980 @ Get_MemoryOffset_LowBit);
/*800F4AFC 000F18FC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4B00, 0x800F4B00) //this is a jump label
/*800F4B00 000F1900*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6C4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4B04 000F1904*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*800F4B08 000F1908*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800F4B0C 000F190C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4B10 000F1910*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F4B14 000F1914*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F4B18 000F1918*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F4B1C 000F191C*/ PPC::Runtime::ASM::blr();
}