//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8027A0E4.hpp"
#include "fn_801918BC.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_ability_ChangeSpeedometerDesign.hpp"
#include "fn_801B13AC.hpp"
#include "fn_801B138C.hpp"
#include "fn_801B13AC.hpp"
#include "fn_801B138C.hpp"
#include "fn_ability_Bomb_giveHat.hpp"
#include "fn_801A7BDC.hpp"



void fn_ability_Bomb(PPC::Runtime::GCContext* context)
{
/*801B11D4 001ADFD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B11D8 001ADFD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B11DC 001ADFDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B11E0 001ADFE0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B11E4 001ADFE4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B11E8 001ADFE8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801B11EC 001ADFEC*/ PPC::Runtime::ASM::bl(fn_8027A0E4);
/*801B11F0 001ADFF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B11F4 001ADFF4*/ PPC::Runtime::ASM::bl(fn_801918BC);
/*801B11F8 001ADFF8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E14E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B11FC 001ADFFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B1200 001AE000*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E14E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B1204 001AE004*/ PPC::Runtime::ASM::li(context->r4, 0x3b);
/*801B1208 001AE008*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B120C 001AE00C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B1210 001AE010*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B1214 001AE014*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B1218 001AE018*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B121C 001AE01C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*801B1220 001AE020*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801B1224 001AE024*/ PPC::Runtime::ASM::bl(fn_ability_ChangeSpeedometerDesign);
/*801B1228 001AE028*/ PPC::Runtime::ASM::lis(context->r4, fn_801B13AC @ Get_MemoryOffset_HighBit);
/*801B122C 001AE02C*/ PPC::Runtime::ASM::lis(context->r3, fn_801B138C @ Get_MemoryOffset_HighBit);
/*801B1230 001AE030*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801B13AC @ Get_MemoryOffset_LowBit);
/*801B1234 001AE034*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B1238 001AE038*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B123C 001AE03C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn_801B138C @ Get_MemoryOffset_LowBit);
/*801B1240 001AE040*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B1244 001AE044*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B1248 001AE048*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B124C 001AE04C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B1250 001AE050*/ PPC::Runtime::ASM::bl(fn_ability_Bomb_giveHat);
/*801B1254 001AE054*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B1258 001AE058*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801B125C 001AE05C*/ PPC::Runtime::ASM::bl(fn_801A7BDC);
/*801B1260 001AE060*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B1264 001AE064*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B1268 001AE068*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B126C 001AE06C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B1270 001AE070*/ PPC::Runtime::ASM::blr();
}