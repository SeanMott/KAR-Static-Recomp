//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A250(PPC::Runtime::GCContext* context)
{
/*8000A250 00007050*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A254 00007054*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A258 00007058*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A25C 0000705C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A260 00007060*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa6, context->r3));
/*8000A264 00007064*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 26);
/*8000A268 00007068*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A26C 0000706C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A270 00007070*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A274 00007074*/ PPC::Runtime::ASM::blr();
}