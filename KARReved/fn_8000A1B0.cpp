//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A1B0(PPC::Runtime::GCContext* context)
{
/*8000A1B0 00006FB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A1B4 00006FB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A1B8 00006FB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A1BC 00006FBC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A1C0 00006FC0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A1C4 00006FC4*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 28);
/*8000A1C8 00006FC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A1CC 00006FCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A1D0 00006FD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A1D4 00006FD4*/ PPC::Runtime::ASM::blr();
}