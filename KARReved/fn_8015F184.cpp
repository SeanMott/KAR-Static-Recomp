//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015F184(PPC::Runtime::GCContext* context)
{
/*8015F184 0015BF84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015F188 0015BF88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015F18C 0015BF8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F190 0015BF90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015F194 0015BF94*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8015F198 0015BF98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015F19C 0015BF9C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8015F1A0 0015BFA0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015F1A4 0015BFA4*/ PPC::Runtime::ASM::extsb(context->r4, context->r30);
/*8015F1A8 0015BFA8*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8015F1AC 0015BFAC*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x900);
/*8015F1B0 0015BFB0*/ PPC::Runtime::ASM::slwi(context->r3, context->r4, 2);
/*8015F1B4 0015BFB4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015F1B8 0015BFB8*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r3);
/*8015F1BC 0015BFBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8015F1C0 0015BFC0*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r0);
/*8015F1C4 0015BFC4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8015F1C8 0015BFC8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015F1CC 0015BFCC*/ PPC::Runtime::ASM::beq(.L_8015F1E0);
/*8015F1D0 0015BFD0*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8015F1D4 0015BFD4*/ PPC::Runtime::ASM::bne(.L_8015F1DC);
/*8015F1D8 0015BFD8*/ PPC::Runtime::ASM::b(.L_8015F1E0);
RUNTIME_PPC_JUMP_LABEL(.L_8015F1DC, 0x8015F1DC) //this is a jump label
/*8015F1DC 0015BFDC*/ PPC::Runtime::ASM::bl(fn_80429BAC);
RUNTIME_PPC_JUMP_LABEL(.L_8015F1E0, 0x8015F1E0) //this is a jump label
/*8015F1E0 0015BFE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F1E4 0015BFE4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015F1E8 0015BFE8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015F1EC 0015BFEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015F1F0 0015BFF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015F1F4 0015BFF4*/ PPC::Runtime::ASM::blr();
}