//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8003EA40.hpp"



void fn_8000AF14(PPC::Runtime::GCContext* context)
{
/*8000AF14 00007D14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000AF18 00007D18*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000AF1C 00007D1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AF20 00007D20*/ PPC::Runtime::ASM::bl(fn_8003EA40);
/*8000AF24 00007D24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AF28 00007D28*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r3));
/*8000AF2C 00007D2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AF30 00007D30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000AF34 00007D34*/ PPC::Runtime::ASM::blr();
}