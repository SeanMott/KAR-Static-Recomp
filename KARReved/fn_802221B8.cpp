//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D1860.hpp"



void fn_802221B8(PPC::Runtime::GCContext* context)
{
/*802221B8 0021EFB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802221BC 0021EFBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802221C0 0021EFC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802221C4 0021EFC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802221C8 0021EFC8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802221CC 0021EFCC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*802221D0 0021EFD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*802221D4 0021EFD4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*802221D8 0021EFD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r3));
/*802221DC 0021EFDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/* 802221E0 0021EFE0  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*802221E4 0021EFE4*/ PPC::Runtime::ASM::bne(.L_802221FC);
/*802221E8 0021EFE8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B44C0 @ Get_MemoryOffset_HighBit);
/*802221EC 0021EFEC*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 8 @ Get_MemoryOffset_SDA21);
/*802221F0 0021EFF0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B44C0 @ Get_MemoryOffset_LowBit);
/*802221F4 0021EFF4*/ PPC::Runtime::ASM::li(context->r4, 0x94);
/*802221F8 0021EFF8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_802221FC, 0x802221FC) //this is a jump label
/*802221FC 0021EFFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80222200 0021F000*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80222204 0021F004*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80222208 0021F008*/ PPC::Runtime::ASM::bl(fn_800D1860);
/*8022220C 0021F00C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80222210 0021F010*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80222214 0021F014*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80222218 0021F018*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022221C 0021F01C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80222220 0021F020*/ PPC::Runtime::ASM::blr();
}