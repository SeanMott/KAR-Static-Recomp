//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7870.hpp"
#include "fn_800F7870.hpp"
#include "fn_800547E0.hpp"
#include "fn_killWhispy.hpp"
#include "fn_801016B8.hpp"
#include "fn_801016B8.hpp"



void fn_801015E0(PPC::Runtime::GCContext* context)
{
/*801015E0 000FE3E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801015E4 000FE3E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801015E8 000FE3E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801015EC 000FE3EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801015F0 000FE3F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801015F4 000FE3F4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801015F8 000FE3F8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801015FC 000FE3FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80101600 000FE400*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101604 000FE404*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80101608 000FE408*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8010160C 000FE40C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80101610 000FE410*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80101614 000FE414*/ PPC::Runtime::ASM::beq(.L_80101644);
/*80101618 000FE418*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8010161C 000FE41C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80101620 000FE420*/ PPC::Runtime::ASM::ble(.L_80101638);
/*80101624 000FE424*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80101628 000FE428*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8010162C 000FE42C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80101630 000FE430*/ PPC::Runtime::ASM::bl(fn_800F7870);
/*80101634 000FE434*/ PPC::Runtime::ASM::b(.L_80101644);
RUNTIME_PPC_JUMP_LABEL(.L_80101638, 0x80101638) //this is a jump label
/*80101638 000FE438*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8010163C 000FE43C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80101640 000FE440*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_80101644, 0x80101644) //this is a jump label
/*80101644 000FE444*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80101648 000FE448*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*8010164C 000FE44C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*80101650 000FE450*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*80101654 000FE454*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*80101658 000FE458*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8010165C 000FE45C*/ PPC::Runtime::ASM::bne(.L_8010169C);
/*80101660 000FE460*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80101664 000FE464*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80101668 000FE468*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF950 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010166C 000FE46C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*80101670 000FE470*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80101674 000FE474*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80101678 000FE478*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*8010167C 000FE47C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80101680 000FE480*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80101684 000FE484*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80101688 000FE488*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8010168C 000FE48C*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*80101690 000FE490*/ PPC::Runtime::ASM::lis(context->r3, fn_801016B8 @ Get_MemoryOffset_HighBit);
/*80101694 000FE494*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801016B8 @ Get_MemoryOffset_LowBit);
/*80101698 000FE498*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8010169C, 0x8010169C) //this is a jump label
/*8010169C 000FE49C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801016A0 000FE4A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801016A4 000FE4A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801016A8 000FE4A8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801016AC 000FE4AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801016B0 000FE4B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801016B4 000FE4B4*/ PPC::Runtime::ASM::blr();
}