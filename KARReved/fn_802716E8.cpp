//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80271790.hpp"
#include "fn_80271EB4.hpp"
#include "fn_802726FC.hpp"
#include "fn_80272888.hpp"
#include "fn_802735DC.hpp"
#include "fn_80272DD0.hpp"
#include "fn_80273228.hpp"
#include "fn_80273B48.hpp"
#include "fn_80271B24.hpp"



void fn_802716E8(PPC::Runtime::GCContext* context)
{
/*802716E8 0026E4E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802716EC 0026E4EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802716F0 0026E4F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802716F4 0026E4F4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802716F8 0026E4F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x778, context->r3));
/*802716FC 0026E4FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4));
/*80271700 0026E500*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*80271704 0026E504*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80271708 0026E508*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xa);
/*8027170C 0026E50C*/ PPC::Runtime::ASM::bgt(.L_8027177C);
/*80271710 0026E510*/ PPC::Runtime::ASM::lis(context->r4, jumptable_804B7A28 @ Get_MemoryOffset_HighBit);
/*80271714 0026E514*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80271718 0026E518*/ PPC::Runtime::ASM::addi(context->r4, context->r4, jumptable_804B7A28 @ Get_MemoryOffset_LowBit);
/*8027171C 0026E51C*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r0);
/*80271720 0026E520*/ PPC::Runtime::ASM::mtctr(context->r0);
/*80271724 0026E524*/ PPC::Runtime::ASM::bctr();
/*80271728 0026E528*/ PPC::Runtime::ASM::li(context->r3, lbl_805D73E8 @ Get_MemoryOffset_SDA21);
/*8027172C 0026E52C*/ PPC::Runtime::ASM::li(context->r4, 0x21f1);
/*80271730 0026E530*/ PPC::Runtime::ASM::li(context->r5, lbl_805D73F4 @ Get_MemoryOffset_SDA21);
/*80271734 0026E534*/ PPC::Runtime::ASM::bl(fn___assert);
/*80271738 0026E538*/ PPC::Runtime::ASM::b(.L_80271780);
/*8027173C 0026E53C*/ PPC::Runtime::ASM::bl(fn_80271790);
/*80271740 0026E540*/ PPC::Runtime::ASM::b(.L_80271780);
/*80271744 0026E544*/ PPC::Runtime::ASM::bl(fn_80271EB4);
/*80271748 0026E548*/ PPC::Runtime::ASM::b(.L_80271780);
/*8027174C 0026E54C*/ PPC::Runtime::ASM::bl(fn_802726FC);
/*80271750 0026E550*/ PPC::Runtime::ASM::b(.L_80271780);
/*80271754 0026E554*/ PPC::Runtime::ASM::bl(fn_80272888);
/*80271758 0026E558*/ PPC::Runtime::ASM::b(.L_80271780);
/*8027175C 0026E55C*/ PPC::Runtime::ASM::bl(fn_802735DC);
/*80271760 0026E560*/ PPC::Runtime::ASM::b(.L_80271780);
/*80271764 0026E564*/ PPC::Runtime::ASM::bl(fn_80272DD0);
/*80271768 0026E568*/ PPC::Runtime::ASM::b(.L_80271780);
/*8027176C 0026E56C*/ PPC::Runtime::ASM::bl(fn_80273228);
/*80271770 0026E570*/ PPC::Runtime::ASM::b(.L_80271780);
/*80271774 0026E574*/ PPC::Runtime::ASM::bl(fn_80273B48);
/*80271778 0026E578*/ PPC::Runtime::ASM::b(.L_80271780);
RUNTIME_PPC_JUMP_LABEL(.L_8027177C, 0x8027177C) //this is a jump label
/*8027177C 0026E57C*/ PPC::Runtime::ASM::bl(fn_80271B24);
RUNTIME_PPC_JUMP_LABEL(.L_80271780, 0x80271780) //this is a jump label
/*80271780 0026E580*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80271784 0026E584*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80271788 0026E588*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8027178C 0026E58C*/ PPC::Runtime::ASM::blr();
}