//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DBD18.hpp"
#include "fn_800DC640.hpp"



void fn_800CE618(PPC::Runtime::GCContext* context)
{
/*800CE618 000CB418*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800CE61C 000CB41C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CE620 000CB420*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CE624 000CB424*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CE628 000CB428*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CE62C 000CB42C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800CE630 000CB430*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800CE634 000CB434*/ PPC::Runtime::ASM::bl(fn_800DBD18);
/*800CE638 000CB438*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r31));
/*800CE63C 000CB43C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*800CE640 000CB440*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE644 000CB444*/ PPC::Runtime::ASM::bl(fn_800DC640);
/*800CE648 000CB448*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800CE64C 000CB44C*/ PPC::Runtime::ASM::lis(context->r3, StructWithStructs_79 @ Get_MemoryOffset_HighBit);
/*800CE650 000CB450*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithStructs_79 @ Get_MemoryOffset_LowBit);
/*800CE654 000CB454*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800CE658 000CB458*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800CE65C 000CB45C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800CE660 000CB460*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800CE664 000CB464*/ PPC::Runtime::ASM::beq(.L_800CE674);
/*800CE668 000CB468*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800CE66C 000CB46C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800CE670 000CB470*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800CE674, 0x800CE674) //this is a jump label
/*800CE674 000CB474*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CE678 000CB478*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CE67C 000CB47C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CE680 000CB480*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CE684 000CB484*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800CE688 000CB488*/ PPC::Runtime::ASM::blr();
}