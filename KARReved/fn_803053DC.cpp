//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8034D1F8.hpp"



void fn_803053DC(PPC::Runtime::GCContext* context)
{
/*803053DC 003021DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803053E0 003021E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803053E4 003021E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803053E8 003021E8*/ PPC::Runtime::ASM::bl(fn_8034D1F8);
/*803053EC 003021EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803053F0 003021F0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18c, context->r3));
/*803053F4 003021F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803053F8 003021F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803053FC 003021FC*/ PPC::Runtime::ASM::blr();
}