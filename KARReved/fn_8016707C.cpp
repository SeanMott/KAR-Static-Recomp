//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8016707C(PPC::Runtime::GCContext* context)
{
/*8016707C 00163E7C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80167080 00163E80*/ PPC::Runtime::ASM::mflr(context->r0);
/*80167084 00163E84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80167088 00163E88*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016708C 00163E8C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80167090 00163E90*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80167094 00163E94*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80167098 00163E98*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8016709C, 0x8016709C) //this is a jump label
/*8016709C 00163E9C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801670A0 00163EA0*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*801670A4 00163EA4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801670A8 00163EA8*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*801670AC 00163EAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r30));
/*801670B0 00163EB0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801670B4 00163EB4*/ PPC::Runtime::ASM::beq(.L_801670C0);
/*801670B8 00163EB8*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801670BC 00163EBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801670C0, 0x801670C0) //this is a jump label
/*801670C0 00163EC0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801670C4 00163EC4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*801670C8 00163EC8*/ PPC::Runtime::ASM::blt(.L_8016709C);
/*801670CC 00163ECC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801670D0 00163ED0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801670D4 00163ED4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801670D8 00163ED8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801670DC 00163EDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801670E0 00163EE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801670E4 00163EE4*/ PPC::Runtime::ASM::blr();
}