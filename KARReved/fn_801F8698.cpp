//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80236C40.hpp"



void fn_801F8698(PPC::Runtime::GCContext* context)
{
/*801F8698 001F5498*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F869C 001F549C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F86A0 001F54A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F86A4 001F54A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F86A8 001F54A8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F86AC 001F54AC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb9c, context->r3));
/*801F86B0 001F54B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb84, context->r3));
/*801F86B4 001F54B4*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801F86B8 001F54B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb9c, context->r3));
/*801F86BC 001F54BC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F86C0 001F54C0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb9c, context->r31));
/*801F86C4 001F54C4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0, context->r3));
/*801F86C8 001F54C8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801F86CC 001F54CC*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801F86D0 001F54D0*/ PPC::Runtime::ASM::bne(.L_801F86F8);
/*801F86D4 001F54D4*/ PPC::Runtime::ASM::addi(context->r7, context->r31, 0x3e8);
/*801F86D8 001F54D8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801F86DC 001F54DC*/ PPC::Runtime::ASM::li(context->r4, 0x4eab);
/*801F86E0 001F54E0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801F86E4 001F54E4*/ PPC::Runtime::ASM::li(context->r6, 0x64);
/*801F86E8 001F54E8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801F86EC 001F54EC*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801F86F0 001F54F0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E20E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F86F4 001F54F4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb9c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801F86F8, 0x801F86F8) //this is a jump label
/*801F86F8 001F54F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F86FC 001F54FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F8700 001F5500*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F8704 001F5504*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F8708 001F5508*/ PPC::Runtime::ASM::blr();
}