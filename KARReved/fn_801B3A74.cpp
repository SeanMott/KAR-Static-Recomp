//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_ability_Spike_changeNeedle.hpp"
#include "fn_801A9B08.hpp"
#include "fn_80195588.hpp"
#include "fn_80236C40.hpp"
#include "fn_801B3BD8.hpp"
#include "fn_8005E7D8.hpp"



void fn_801B3A74(PPC::Runtime::GCContext* context)
{
/*801B3A74 001B0874*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B3A78 001B0878*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B3A7C 001B087C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3A80 001B0880*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3A84 001B0884*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B3A88 001B0888*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r3));
/*801B3A8C 001B088C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801B3A90 001B0890*/ PPC::Runtime::ASM::beq(.L_801B3B30);
/*801B3A94 001B0894*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3d8, context->r31));
/*801B3A98 001B0898*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 23, 23);
/*801B3A9C 001B089C*/ PPC::Runtime::ASM::beq(.L_801B3B08);
/*801B3AA0 001B08A0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/* 801B3AA4 001B08A4  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801B3AA8 001B08A8*/ PPC::Runtime::ASM::bne(.L_801B3B30);
/*801B3AAC 001B08AC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801B3AB0 001B08B0*/ PPC::Runtime::ASM::bl(fn_ability_Spike_changeNeedle);
/*801B3AB4 001B08B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3AB8 001B08B8*/ PPC::Runtime::ASM::bl(fn_801A9B08);
/*801B3ABC 001B08BC*/ PPC::Runtime::ASM::lis(context->r4, 0x2);
/*801B3AC0 001B08C0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E15F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B3AC4 001B08C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3AC8 001B08C8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x5e);
/*801B3ACC 001B08CC*/ PPC::Runtime::ASM::bl(fn_80195588);
/*801B3AD0 001B08D0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B3AD4 001B08D4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801B3AD8 001B08D8*/ PPC::Runtime::ASM::li(context->r4, 0x2778);
/*801B3ADC 001B08DC*/ PPC::Runtime::ASM::li(context->r6, 0xcc);
/*801B3AE0 001B08E0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3AE4 001B08E4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B3AE8 001B08E8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3AEC 001B08EC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801B3AF0 001B08F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801B3AF4 001B08F4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43c, context->r31));
/*801B3AF8 001B08F8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r7));
/*801B3AFC 001B08FC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801B3B00 001B0900*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801B3B04 001B0904*/ PPC::Runtime::ASM::b(.L_801B3B30);
RUNTIME_PPC_JUMP_LABEL(.L_801B3B08, 0x801B3B08) //this is a jump label
/*801B3B08 001B0908*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/* 801B3B0C 001B090C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801B3B10 001B0910*/ PPC::Runtime::ASM::beq(.L_801B3B30);
/*801B3B14 001B0914*/ PPC::Runtime::ASM::bl(fn_801B3BD8);
/*801B3B18 001B0918*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B3B1C 001B091C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*801B3B20 001B0920*/ PPC::Runtime::ASM::beq(.L_801B3B28);
/*801B3B24 001B0924*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
RUNTIME_PPC_JUMP_LABEL(.L_801B3B28, 0x801B3B28) //this is a jump label
/*801B3B28 001B0928*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801B3B2C 001B092C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3B30, 0x801B3B30) //this is a jump label
/*801B3B30 001B0930*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3B34 001B0934*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3B38 001B0938*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B3B3C 001B093C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B3B40 001B0940*/ PPC::Runtime::ASM::blr();
}