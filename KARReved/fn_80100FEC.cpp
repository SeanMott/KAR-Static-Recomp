//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E86CC.hpp"
#include "fn_80101108.hpp"



void fn_80100FEC(PPC::Runtime::GCContext* context)
{
/*80100FEC 000FDDEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80100FF0 000FDDF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80100FF4 000FDDF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80100FF8 000FDDF8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80100FFC 000FDDFC*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*80101000 000FDE00*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80101004 000FDE04*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_84 @ Get_MemoryOffset_HighBit);
/*80101008 000FDE08*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8010100C 000FDE0C*/ PPC::Runtime::ASM::addi(context->r29, context->r3, StructWithFuncPtrs_84 @ Get_MemoryOffset_LowBit);
/*80101010 000FDE10*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*80101014 000FDE14*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*80101018 000FDE18*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*8010101C 000FDE1C*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80101020 000FDE20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80101024 000FDE24*/ PPC::Runtime::ASM::b(.L_80101044);
RUNTIME_PPC_JUMP_LABEL(.L_80101028, 0x80101028) //this is a jump label
/*80101028 000FDE28*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8010102C 000FDE2C*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*80101030 000FDE30*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80101034 000FDE34*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r28);
/*80101038 000FDE38*/ PPC::Runtime::ASM::bl(fn_800E86CC);
/*8010103C 000FDE3C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x4);
/*80101040 000FDE40*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80101044, 0x80101044) //this is a jump label
/*80101044 000FDE44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*80101048 000FDE48*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*8010104C 000FDE4C*/ PPC::Runtime::ASM::blt(.L_80101028);
/*80101050 000FDE50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80101054 000FDE54*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x7);
/*80101058 000FDE58*/ PPC::Runtime::ASM::ble(.L_8010106C);
/*8010105C 000FDE5C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x78);
/*80101060 000FDE60*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xa8);
/*80101064 000FDE64*/ PPC::Runtime::ASM::li(context->r4, 0x179);
/*80101068 000FDE68*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8010106C, 0x8010106C) //this is a jump label
/*8010106C 000FDE6C*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*80101070 000FDE70*/ PPC::Runtime::ASM::mr(context->r28, context->r27);
/*80101074 000FDE74*/ PPC::Runtime::ASM::mr(context->r27, context->r26);
RUNTIME_PPC_JUMP_LABEL(.L_80101078, 0x80101078) //this is a jump label
/*80101078 000FDE78*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8010107C 000FDE7C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r28));
/*80101080 000FDE80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80101084 000FDE84*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*80101088 000FDE88*/ PPC::Runtime::ASM::bge(.L_801010D4);
/*8010108C 000FDE8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80101090 000FDE90*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101094 000FDE94*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r27);
/*80101098 000FDE98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*8010109C 000FDE9C*/ PPC::Runtime::ASM::b(.L_801010B4);
RUNTIME_PPC_JUMP_LABEL(.L_801010A0, 0x801010A0) //this is a jump label
/*801010A0 000FDEA0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*801010A4 000FDEA4*/ PPC::Runtime::ASM::bne(.L_801010AC);
/*801010A8 000FDEA8*/ PPC::Runtime::ASM::b(.L_801010D0);
RUNTIME_PPC_JUMP_LABEL(.L_801010AC, 0x801010AC) //this is a jump label
/*801010AC 000FDEAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801010B0 000FDEB0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801010B4, 0x801010B4) //this is a jump label
/*801010B4 000FDEB4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801010B8 000FDEB8*/ PPC::Runtime::ASM::bne(.L_801010A0);
/*801010BC 000FDEBC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xd8);
/*801010C0 000FDEC0*/ PPC::Runtime::ASM::li(context->r4, 0x96c);
/*801010C4 000FDEC4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D62B0 @ Get_MemoryOffset_SDA21);
/*801010C8 000FDEC8*/ PPC::Runtime::ASM::bl(fn___assert);
/*801010CC 000FDECC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801010D0, 0x801010D0) //this is a jump label
/*801010D0 000FDED0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_801010D4, 0x801010D4) //this is a jump label
/*801010D4 000FDED4*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
/*801010D8 000FDED8*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*801010DC 000FDEDC*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x7);
/*801010E0 000FDEE0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x4);
/*801010E4 000FDEE4*/ PPC::Runtime::ASM::blt(.L_80101078);
/*801010E8 000FDEE8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801010EC 000FDEEC*/ PPC::Runtime::ASM::bl(fn_80101108);
/*801010F0 000FDEF0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*801010F4 000FDEF4*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*801010F8 000FDEF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801010FC 000FDEFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80101100 000FDF00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80101104 000FDF04*/ PPC::Runtime::ASM::blr();
}