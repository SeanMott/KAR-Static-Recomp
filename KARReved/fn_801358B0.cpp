//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8015DBA4.hpp"



void fn_801358B0(PPC::Runtime::GCContext* context)
{
/*801358B0 001326B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801358B4 001326B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801358B8 001326B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801358BC 001326BC*/ PPC::Runtime::ASM::bl(fn_8015DBA4);
/*801358C0 001326C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801358C4 001326C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801358C8 001326C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801358CC 001326CC*/ PPC::Runtime::ASM::blr();
}