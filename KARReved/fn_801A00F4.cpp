//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_801A00F4(PPC::Runtime::GCContext* context)
{
/*801A00F4 0019CEF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A00F8 0019CEF8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A00FC 0019CEFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A0100 0019CF00*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801A0104 0019CF04*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A0108 0019CF08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A010C 0019CF0C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A0110 0019CF10*/ PPC::Runtime::ASM::bl(fn_80190948);
/*801A0114 0019CF14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A0118 0019CF18*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A011C 0019CF1C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A0120 0019CF20*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A0124 0019CF24*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801A0128 0019CF28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A012C 0019CF2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A0130 0019CF30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A0134 0019CF34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A0138 0019CF38*/ PPC::Runtime::ASM::blr();
}