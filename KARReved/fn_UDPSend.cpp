//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80475590.hpp"
#include "fn_80475590.hpp"
#include "fn_TCPReceiveUrgExAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_UDPSend(PPC::Runtime::GCContext* context)
{
/*80476FB0 00473DB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80476FB4 00473DB4*/ PPC::Runtime::ASM::lis(context->r7, fn_80475590 @ Get_MemoryOffset_HighBit);
/*80476FB8 00473DB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80476FBC 00473DBC*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn_80475590 @ Get_MemoryOffset_LowBit);
/*80476FC0 00473DC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*80476FC4 00473DC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80476FC8 00473DC8*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x18);
/*80476FCC 00473DCC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80476FD0 00473DD0*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*80476FD4 00473DD4*/ PPC::Runtime::ASM::bl(fn_TCPReceiveUrgExAsync);
/*80476FD8 00473DD8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80476FDC 00473DDC*/ PPC::Runtime::ASM::bge(.L_80476FE4);
/*80476FE0 00473DE0*/ PPC::Runtime::ASM::b(.L_80477010);
RUNTIME_PPC_JUMP_LABEL(.L_80476FE4, 0x80476FE4) //this is a jump label
/*80476FE4 00473DE4*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80476FE8 00473DE8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80476FEC 00473DEC*/ PPC::Runtime::ASM::b(.L_80476FF8);
RUNTIME_PPC_JUMP_LABEL(.L_80476FF0, 0x80476FF0) //this is a jump label
/*80476FF0 00473DF0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*80476FF4 00473DF4*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_80476FF8, 0x80476FF8) //this is a jump label
/*80476FF8 00473DF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80476FFC 00473DFC*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80477000 00473E00*/ PPC::Runtime::ASM::beq(.L_80476FF0);
/*80477004 00473E04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80477008 00473E08*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8047700C 00473E0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_80477010, 0x80477010) //this is a jump label
/*80477010 00473E10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80477014 00473E14*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80477018 00473E18*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8047701C 00473E1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*80477020 00473E20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80477024 00473E24*/ PPC::Runtime::ASM::blr();
}