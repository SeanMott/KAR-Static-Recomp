//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80397C28.hpp"



void fn_803979A4(PPC::Runtime::GCContext* context)
{
/*803979A4 003947A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803979A8 003947A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803979AC 003947AC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803979B0 003947B0*/ PPC::Runtime::ASM::li(context->r5, lbl_805DC190 @ Get_MemoryOffset_SDA21);
/*803979B4 003947B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803979B8 003947B8*/ PPC::Runtime::ASM::li(context->r6, lbl_805DC188 @ Get_MemoryOffset_SDA21);
/*803979BC 003947BC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803979C0 003947C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803979C4 003947C4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803979C8 003947C8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803979CC 003947CC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDAAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803979D0 003947D0*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*803979D4 003947D4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803979D8 003947D8*/ PPC::Runtime::ASM::b(.L_80397A28);
RUNTIME_PPC_JUMP_LABEL(.L_803979DC, 0x803979DC) //this is a jump label
/*803979DC 003947DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803979E0 003947E0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803979E4 003947E4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r12));
/*803979E8 003947E8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*803979EC 003947EC*/ PPC::Runtime::ASM::bctrl();
/* 803979F0 003947F0  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*803979F4 003947F4*/ PPC::Runtime::ASM::beq(.L_80397A10);
/*803979F8 003947F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803979FC 003947FC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80397A00 00394800*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80397A04 00394804*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80397A08 00394808*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80397A0C 0039480C*/ PPC::Runtime::ASM::bl(fn_80397C28);
RUNTIME_PPC_JUMP_LABEL(.L_80397A10, 0x80397A10) //this is a jump label
/*80397A10 00394810*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80397A14 00394814*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80397A18 00394818*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r12));
/*80397A1C 0039481C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80397A20 00394820*/ PPC::Runtime::ASM::bctrl();
/*80397A24 00394824*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80397A28, 0x80397A28) //this is a jump label
/*80397A28 00394828*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80397A2C 0039482C*/ PPC::Runtime::ASM::bne(.L_803979DC);
/*80397A30 00394830*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80397A34 00394834*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80397A38 00394838*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80397A3C 0039483C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80397A40 00394840*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80397A44 00394844*/ PPC::Runtime::ASM::blr();
}