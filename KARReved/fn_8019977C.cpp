//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8019977C(PPC::Runtime::GCContext* context)
{
/*8019977C 0019657C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80199780 00196580*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80199784, 0x80199784) //this is a jump label
/*80199784 00196584*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80199788 00196588*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*8019978C 0019658C*/ PPC::Runtime::ASM::bge(.L_801997A8);
/*80199790 00196590*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 3);
/*80199794 00196594*/ PPC::Runtime::ASM::add(context->r5, context->r3, context->r0);
/*80199798 00196598*/ PPC::Runtime::ASM::mulli(context->r0, context->r4, 0xc);
/*8019979C 0019659C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*801997A0 001965A0*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*801997A4 001965A4*/ PPC::Runtime::ASM::b(.L_801997B8);
RUNTIME_PPC_JUMP_LABEL(.L_801997A8, 0x801997A8) //this is a jump label
/*801997A8 001965A8*/ PPC::Runtime::ASM::subf(context->r4, context->r0, context->r4);
/*801997AC 001965AC*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x8);
/*801997B0 001965B0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*801997B4 001965B4*/ PPC::Runtime::ASM::b(.L_80199784);
RUNTIME_PPC_JUMP_LABEL(.L_801997B8, 0x801997B8) //this is a jump label
/*801997B8 001965B8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r4));
/* 801997BC 001965BC  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*801997C0 001965C0*/ PPC::Runtime::ASM::beqlr();
/*801997C4 001965C4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r4));
/*801997C8 001965C8*/ PPC::Runtime::ASM::mr(context->r7, context->r3);
/*801997CC 001965CC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801997D0 001965D0*/ PPC::Runtime::ASM::extrwi(context->r6, context->r0, 10, 19);
RUNTIME_PPC_JUMP_LABEL(.L_801997D4, 0x801997D4) //this is a jump label
/*801997D4 001965D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*801997D8 001965D8*/ PPC::Runtime::ASM::cmpw(context->r6, context->r0);
/*801997DC 001965DC*/ PPC::Runtime::ASM::bge(.L_801997F4);
/*801997E0 001965E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 3);
/*801997E4 001965E4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801997E8 001965E8*/ PPC::Runtime::ASM::mulli(context->r0, context->r6, 0xc);
/*801997EC 001965EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801997F0 001965F0*/ PPC::Runtime::ASM::b(.L_80199804);
RUNTIME_PPC_JUMP_LABEL(.L_801997F4, 0x801997F4) //this is a jump label
/*801997F4 001965F4*/ PPC::Runtime::ASM::subf(context->r6, context->r0, context->r6);
/*801997F8 001965F8*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x8);
/*801997FC 001965FC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*80199800 00196600*/ PPC::Runtime::ASM::b(.L_801997D4);
RUNTIME_PPC_JUMP_LABEL(.L_80199804, 0x80199804) //this is a jump label
/*80199804 00196604*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80199808 00196608*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8019980C 0019660C*/ PPC::Runtime::ASM::blr();
}