//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007D604.hpp"



void fn_80094A88(PPC::Runtime::GCContext* context)
{
/*80094A88 00091888*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80094A8C 0009188C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80094A90 00091890*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80094A94 00091894*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80094A98 00091898*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80094A9C 0009189C*/ PPC::Runtime::ASM::bl(fn_8007D604);
/*80094AA0 000918A0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80094AA4 000918A4*/ PPC::Runtime::ASM::bne(.L_80094AB0);
/*80094AA8 000918A8*/ PPC::Runtime::ASM::lwz(context->r3, lbl_805D59B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80094AAC 000918AC*/ PPC::Runtime::ASM::b(.L_80094AC8);
RUNTIME_PPC_JUMP_LABEL(.L_80094AB0, 0x80094AB0) //this is a jump label
/*80094AB0 000918B0*/ PPC::Runtime::ASM::cmpwi(context->r31, -0x1);
/*80094AB4 000918B4*/ PPC::Runtime::ASM::bne(.L_80094AC0);
/*80094AB8 000918B8*/ PPC::Runtime::ASM::lwz(context->r3, lbl_805D59B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80094ABC 000918BC*/ PPC::Runtime::ASM::b(.L_80094AC8);
RUNTIME_PPC_JUMP_LABEL(.L_80094AC0, 0x80094AC0) //this is a jump label
/*80094AC0 000918C0*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*80094AC4 000918C4*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80094AC8, 0x80094AC8) //this is a jump label
/*80094AC8 000918C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80094ACC 000918CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80094AD0 000918D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80094AD4 000918D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80094AD8 000918D8*/ PPC::Runtime::ASM::blr();
}