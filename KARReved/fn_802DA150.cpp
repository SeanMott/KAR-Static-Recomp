//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802F39A0.hpp"



void fn_802DA150(PPC::Runtime::GCContext* context)
{
/*802DA150 002D6F50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802DA154 002D6F54*/ PPC::Runtime::ASM::mflr(context->r0);
/*802DA158 002D6F58*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802DA15C 002D6F5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802DA160 002D6F60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802DA164 002D6F64*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802DA168 002D6F68*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802DA16C 002D6F6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*802DA170 002D6F70*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802DA174 002D6F74*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*802DA178 002D6F78*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802DA17C 002D6F7C*/ PPC::Runtime::ASM::bctrl();
/*802DA180 002D6F80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r30));
/*802DA184 002D6F84*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*802DA188 002D6F88*/ PPC::Runtime::ASM::beq(.L_802DA1A8);
/*802DA18C 002D6F8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802DA190 002D6F90*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x80);
/*802DA194 002D6F94*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802DA198 002D6F98*/ PPC::Runtime::ASM::bl(fn_802F39A0);
/*802DA19C 002D6F9C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D2488 @ Get_MemoryOffset_HighBit);
/*802DA1A0 002D6FA0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D2488 @ Get_MemoryOffset_LowBit);
/*802DA1A4 002D6FA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_802DA1A8, 0x802DA1A8) //this is a jump label
/*802DA1A8 002D6FA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802DA1AC 002D6FAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802DA1B0 002D6FB0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802DA1B4 002D6FB4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802DA1B8 002D6FB8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802DA1BC 002D6FBC*/ PPC::Runtime::ASM::blr();
}