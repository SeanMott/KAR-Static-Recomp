//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80259190(PPC::Runtime::GCContext* context)
{
/*80259190 00255F90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80259194 00255F94*/ PPC::Runtime::ASM::mflr(context->r0);
/*80259198 00255F98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025919C 00255F9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802591A0 00255FA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802591A4 00255FA4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802591A8 00255FA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802591AC 00255FAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802591B0 00255FB0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*802591B4 00255FB4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802591B8 00255FB8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802591BC 00255FBC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*802591C0 00255FC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802591C4 00255FC4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802591C8 00255FC8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*802591CC 00255FCC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802591D0 00255FD0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*802591D4 00255FD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802591D8 00255FD8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802591DC 00255FDC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*802591E0 00255FE0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802591E4 00255FE4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*802591E8 00255FE8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802591EC 00255FEC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802591F0 00255FF0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802591F4 00255FF4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802591F8 00255FF8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802591FC 00255FFC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80259200 00256000*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80259204 00256004*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80259208 00256008*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025920C 0025600C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80259210 00256010*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80259214 00256014*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80259218 00256018*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025921C 0025601C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80259220 00256020*/ PPC::Runtime::ASM::blr();
}