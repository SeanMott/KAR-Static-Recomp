//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B71E4.hpp"
#include "fn_801B71C4.hpp"
#include "fn_801B71E4.hpp"
#include "fn_801B71C4.hpp"



void fn_801B7048(PPC::Runtime::GCContext* context)
{
/*801B7048 001B3E48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B704C 001B3E4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B7050 001B3E50*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E16B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7054 001B3E54*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*801B7058 001B3E58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B705C 001B3E5C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B7060 001B3E60*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B7064 001B3E64*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E16BC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7068 001B3E68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B706C 001B3E6C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B7070 001B3E70*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B7074 001B3E74*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B7078 001B3E78*/ PPC::Runtime::ASM::lis(context->r4, fn_801B71E4 @ Get_MemoryOffset_HighBit);
/*801B707C 001B3E7C*/ PPC::Runtime::ASM::lis(context->r3, fn_801B71C4 @ Get_MemoryOffset_HighBit);
/*801B7080 001B3E80*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801B71E4 @ Get_MemoryOffset_LowBit);
/*801B7084 001B3E84*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B7088 001B3E88*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B708C 001B3E8C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_801B71C4 @ Get_MemoryOffset_LowBit);
/*801B7090 001B3E90*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B7094 001B3E94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r31));
/*801B7098 001B3E98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B709C 001B3E9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B70A0 001B3EA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B70A4 001B3EA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B70A8 001B3EA8*/ PPC::Runtime::ASM::blr();
}