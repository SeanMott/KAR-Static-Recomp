//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7648.hpp"



void fn_800F62C4(PPC::Runtime::GCContext* context)
{
/*800F62C4 000F30C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F62C8 000F30C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F62CC 000F30CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F62D0 000F30D0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F62D4 000F30D4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*800F62D8 000F30D8*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800F62DC 000F30DC*/ PPC::Runtime::ASM::beq(.L_800F62E8);
/*800F62E0 000F30E0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1c);
/*800F62E4 000F30E4*/ PPC::Runtime::ASM::bl(fn_800D7648);
RUNTIME_PPC_JUMP_LABEL(.L_800F62E8, 0x800F62E8) //this is a jump label
/*800F62E8 000F30E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F62EC 000F30EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F62F0 000F30F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F62F4 000F30F4*/ PPC::Runtime::ASM::blr();
}