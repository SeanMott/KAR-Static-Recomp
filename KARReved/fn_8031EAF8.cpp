//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8037B33C.hpp"



void fn_8031EAF8(PPC::Runtime::GCContext* context)
{
/*8031EAF8 0031B8F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8031EAFC 0031B8FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8031EB00 0031B900*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031EB04 0031B904*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8031EB08 0031B908*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8031EB0C 0031B90C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8031EB10 0031B910  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8031EB14 0031B914*/ PPC::Runtime::ASM::beq(.L_8031EB9C);
/*8031EB18 0031B918*/ PPC::Runtime::ASM::lis(context->r4, lbl_804E0EA8 @ Get_MemoryOffset_HighBit);
/*8031EB1C 0031B91C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c);
/*8031EB20 0031B920*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804E0EA8 @ Get_MemoryOffset_LowBit);
/*8031EB24 0031B924*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*8031EB28 0031B928*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8031EB2C 0031B92C*/ PPC::Runtime::ASM::bl(fn_80384600);
/*8031EB30 0031B930*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x20);
/*8031EB34 0031B934*/ PPC::Runtime::ASM::beq(.L_8031EB78);
/*8031EB38 0031B938*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BDF70 @ Get_MemoryOffset_HighBit);
/*8031EB3C 0031B93C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*8031EB40 0031B940*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BDF70 @ Get_MemoryOffset_LowBit);
/*8031EB44 0031B944*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8031EB48 0031B948*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*8031EB4C 0031B94C*/ PPC::Runtime::ASM::bl(fn_8037B33C);
/*8031EB50 0031B950*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x20);
/*8031EB54 0031B954*/ PPC::Runtime::ASM::beq(.L_8031EB78);
/*8031EB58 0031B958*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BDF2C @ Get_MemoryOffset_HighBit);
/*8031EB5C 0031B95C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*8031EB60 0031B960*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BDF2C @ Get_MemoryOffset_LowBit);
/*8031EB64 0031B964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*8031EB68 0031B968*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*8031EB6C 0031B96C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r12));
/*8031EB70 0031B970*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8031EB74 0031B974*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8031EB78, 0x8031EB78) //this is a jump label
/*8031EB78 0031B978*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8031EB7C 0031B97C*/ PPC::Runtime::ASM::beq(.L_8031EB8C);
/*8031EB80 0031B980*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E0EB8 @ Get_MemoryOffset_HighBit);
/*8031EB84 0031B984*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804E0EB8 @ Get_MemoryOffset_LowBit);
/*8031EB88 0031B988*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8031EB8C, 0x8031EB8C) //this is a jump label
/*8031EB8C 0031B98C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8031EB90 0031B990*/ PPC::Runtime::ASM::ble(.L_8031EB9C);
/*8031EB94 0031B994*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8031EB98 0031B998*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8031EB9C, 0x8031EB9C) //this is a jump label
/*8031EB9C 0031B99C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031EBA0 0031B9A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8031EBA4 0031B9A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8031EBA8 0031B9A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8031EBAC 0031B9AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8031EBB0 0031B9B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8031EBB4 0031B9B4*/ PPC::Runtime::ASM::blr();
}