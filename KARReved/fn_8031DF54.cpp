//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8031DF54(PPC::Runtime::GCContext* context)
{
/*8031DF54 0031AD54*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8031DF58 0031AD58*/ PPC::Runtime::ASM::mflr(context->r0);
/*8031DF5C 0031AD5C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804E0E44 @ Get_MemoryOffset_HighBit);
/*8031DF60 0031AD60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8031DF64 0031AD64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8031DF68 0031AD68*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8031DF6C 0031AD6C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8031DF70 0031AD70*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8031DF74 0031AD74*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_804E0E44 @ Get_MemoryOffset_LowBit);
/*8031DF78 0031AD78*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8031DF7C 0031AD7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8031DF80 0031AD80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8031DF84 0031AD84*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031DF88 0031AD88*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8031DF8C 0031AD8C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8031DF90 0031AD90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r29));
/*8031DF94 0031AD94*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*8031DF98 0031AD98*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8031DF9C 0031AD9C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8031DFA0 0031ADA0*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*8031DFA4 0031ADA4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8031DFA8 0031ADA8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8031DFAC 0031ADAC*/ PPC::Runtime::ASM::b(.L_8031DFC4);
RUNTIME_PPC_JUMP_LABEL(.L_8031DFB0, 0x8031DFB0) //this is a jump label
/*8031DFB0 0031ADB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8031DFB4 0031ADB4*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*8031DFB8 0031ADB8*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*8031DFBC 0031ADBC*/ PPC::Runtime::ASM::nop();
/*8031DFC0 0031ADC0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8031DFC4, 0x8031DFC4) //this is a jump label
/*8031DFC4 0031ADC4*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*8031DFC8 0031ADC8*/ PPC::Runtime::ASM::bne(.L_8031DFB0);
/*8031DFCC 0031ADCC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8031DFD0 0031ADD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r29));
/*8031DFD4 0031ADD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r29));
/*8031DFD8 0031ADD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r29));
/*8031DFDC 0031ADDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r29));
/*8031DFE0 0031ADE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8031DFE4 0031ADE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8031DFE8 0031ADE8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8031DFEC 0031ADEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8031DFF0 0031ADF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8031DFF4 0031ADF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8031DFF8 0031ADF8*/ PPC::Runtime::ASM::blr();
}