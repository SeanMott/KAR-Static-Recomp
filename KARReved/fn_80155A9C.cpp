//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138AC8.hpp"
#include "fn_8013C484.hpp"
#include "fn_80138AB0.hpp"
#include "fn_8013C214.hpp"



void fn_80155A9C(PPC::Runtime::GCContext* context)
{
/*80155A9C 0015289C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80155AA0 001528A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80155AA4 001528A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80155AA8 001528A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80155AAC 001528AC*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*80155AB0 001528B0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80155AB4 001528B4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80155AB8 001528B8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155ABC 001528BC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80155AC0 001528C0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80155AC4 001528C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x680, context->r3));
/*80155AC8 001528C8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80155ACC 001528CC*/ PPC::Runtime::ASM::beq(.L_80155AFC);
/*80155AD0 001528D0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80155AD4 001528D4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*80155AD8 001528D8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*80155ADC 001528DC*/ PPC::Runtime::ASM::bne(.L_80155AEC);
/*80155AE0 001528E0*/ PPC::Runtime::ASM::bl(fn_80138AC8);
/*80155AE4 001528E4*/ PPC::Runtime::ASM::bl(fn_8013C484);
/*80155AE8 001528E8*/ PPC::Runtime::ASM::b(.L_80155AFC);
RUNTIME_PPC_JUMP_LABEL(.L_80155AEC, 0x80155AEC) //this is a jump label
/*80155AEC 001528EC*/ PPC::Runtime::ASM::bl(fn_80138AB0);
/*80155AF0 001528F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80155AF4 001528F4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80155AF8 001528F8*/ PPC::Runtime::ASM::bl(fn_8013C214);
RUNTIME_PPC_JUMP_LABEL(.L_80155AFC, 0x80155AFC) //this is a jump label
/*80155AFC 001528FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80155B00 00152900*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80155B04 00152904*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80155B08 00152908*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80155B0C 0015290C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80155B10 00152910*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80155B14 00152914*/ PPC::Runtime::ASM::blr();
}