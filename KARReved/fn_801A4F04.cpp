//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A4F24.hpp"



void fn_801A4F04(PPC::Runtime::GCContext* context)
{
/*801A4F04 001A1D04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A4F08 001A1D08*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A4F0C 001A1D0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4F10 001A1D10*/ PPC::Runtime::ASM::bl(fn_801A4F24);
/*801A4F14 001A1D14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A4F18 001A1D18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A4F1C 001A1D1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A4F20 001A1D20*/ PPC::Runtime::ASM::blr();
}