//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D5E34.hpp"



void fn_801CA294(PPC::Runtime::GCContext* context)
{
/*801CA294 001C7094*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CA298 001C7098*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CA29C 001C709C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801CA2A0 001C70A0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A00 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CA2A4 001C70A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CA2A8 001C70A8*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*801CA2AC 001C70AC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r3));
/*801CA2B0 001C70B0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 5, 26, 26);
/*801CA2B4 001C70B4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r3));
/*801CA2B8 001C70B8*/ PPC::Runtime::ASM::extrwi(context->r6, context->r0, 1, 26);
/*801CA2BC 001C70BC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801CA2C0 001C70C0*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r3));
/*801CA2C4 001C70C4*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r6, 4, 27, 27);
/*801CA2C8 001C70C8*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r3));
/*801CA2CC 001C70CC*/ PPC::Runtime::ASM::extrwi(context->r6, context->r5, 1, 27);
/*801CA2D0 001C70D0*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r3));
/*801CA2D4 001C70D4*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r6, 6, 25, 25);
/*801CA2D8 001C70D8*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r3));
/*801CA2DC 001C70DC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r3));
/*801CA2E0 001C70E0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x798, context->r3));
/*801CA2E4 001C70E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x790, context->r3));
/*801CA2E8 001C70E8*/ PPC::Runtime::ASM::bl(fn_801D5E34);
/*801CA2EC 001C70EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CA2F0 001C70F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CA2F4 001C70F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CA2F8 001C70F8*/ PPC::Runtime::ASM::blr();
}