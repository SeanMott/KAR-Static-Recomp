//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801F9688(PPC::Runtime::GCContext* context)
{
/*801F9688 001F6488*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F968C 001F648C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F9690 001F6490*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2158 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F9694 001F6494*/ PPC::Runtime::ASM::li(context->r4, 0x1a);
/*801F9698 001F6498*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F969C 001F649C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801F96A0 001F64A0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E215C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F96A4 001F64A4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801F96A8 001F64A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F96AC 001F64AC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F96B0 001F64B0*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801F96B4 001F64B4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F96B8 001F64B8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801F96BC 001F64BC*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 1, 30, 30);
/*801F96C0 001F64C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801F96C4 001F64C4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F96C8 001F64C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b98, context->r31));
/*801F96CC 001F64CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b94, context->r31));
/*801F96D0 001F64D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F96D4 001F64D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F96D8 001F64D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F96DC 001F64DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F96E0 001F64E0*/ PPC::Runtime::ASM::blr();
}