//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800E6BCC(PPC::Runtime::GCContext* context)
{
/*800E6BCC 000E39CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E6BD0 000E39D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E6BD4 000E39D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E6BD8 000E39D8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800E6BDC 000E39DC*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800E6BE0 000E39E0*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E6BE4 000E39E4*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800E6BE8 000E39E8*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800E6BEC 000E39EC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x178, context->r3));
/*800E6BF0 000E39F0*/ PPC::Runtime::ASM::mr(context->r30, context->r28);
/*800E6BF4 000E39F4*/ PPC::Runtime::ASM::mr(context->r29, context->r27);
/*800E6BF8 000E39F8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x170, context->r3));
/*800E6BFC 000E39FC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x174, context->r3));
/*800E6C00 000E3A00*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x188, context->r3));
/*800E6C04 000E3A04*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r3));
/*800E6C08 000E3A08*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x184, context->r3));
/*800E6C0C 000E3A0C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x198, context->r3));
/*800E6C10 000E3A10*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x190, context->r3));
/*800E6C14 000E3A14*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r3));
/*800E6C18 000E3A18*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a8, context->r3));
/*800E6C1C 000E3A1C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a0, context->r3));
/*800E6C20 000E3A20*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a4, context->r3));
/*800E6C24 000E3A24*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b8, context->r3));
/*800E6C28 000E3A28*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b0, context->r3));
/*800E6C2C 000E3A2C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4, context->r3));
/*800E6C30 000E3A30*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r3));
/*800E6C34 000E3A34*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c0, context->r3));
/*800E6C38 000E3A38*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c4, context->r3));
/*800E6C3C 000E3A3C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d8, context->r3));
/*800E6C40 000E3A40*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r3));
/*800E6C44 000E3A44*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d4, context->r3));
/*800E6C48 000E3A48*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e8, context->r3));
/*800E6C4C 000E3A4C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r3));
/*800E6C50 000E3A50*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r3));
/*800E6C54 000E3A54*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f8, context->r3));
/*800E6C58 000E3A58*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r3));
/*800E6C5C 000E3A5C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f4, context->r3));
/*800E6C60 000E3A60*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x208, context->r3));
/*800E6C64 000E3A64*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x200, context->r3));
/*800E6C68 000E3A68*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x204, context->r3));
/*800E6C6C 000E3A6C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20c, context->r3));
/*800E6C70 000E3A70*/ PPC::Runtime::ASM::b(.L_800E6CF0);
RUNTIME_PPC_JUMP_LABEL(.L_800E6C74, 0x800E6C74) //this is a jump label
/*800E6C74 000E3A74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*800E6C78 000E3A78*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r30);
/*800E6C7C 000E3A7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800E6C80 000E3A80*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800E6C84 000E3A84*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xb);
/*800E6C88 000E3A88*/ PPC::Runtime::ASM::bne(.L_800E6CE4);
/*800E6C8C 000E3A8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800E6C90 000E3A90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800E6C94 000E3A94*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 4);
/*800E6C98 000E3A98*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x16c);
/*800E6C9C 000E3A9C*/ PPC::Runtime::ASM::stwx(context->r28, context->r27, context->r0);
/*800E6CA0 000E3AA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800E6CA4 000E3AA4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800E6CA8 000E3AA8*/ PPC::Runtime::ASM::ble(.L_800E6CB4);
/*800E6CAC 000E3AAC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800E6CB0 000E3AB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x174, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800E6CB4, 0x800E6CB4) //this is a jump label
/*800E6CB4 000E3AB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20c, context->r27));
/*800E6CB8 000E3AB8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800E6CBC 000E3ABC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20c, context->r27));
/*800E6CC0 000E3AC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20c, context->r27));
/*800E6CC4 000E3AC4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xa);
/*800E6CC8 000E3AC8*/ PPC::Runtime::ASM::blt(.L_800E6CE4);
/*800E6CCC 000E3ACC*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "grairflow." Get_MemoryOffset_HighBit);
/*800E6CD0 000E3AD0*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_954 @ Get_MemoryOffset_HighBit);
/*800E6CD4 000E3AD4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "grairflow." Get_MemoryOffset_LowBit);
/*800E6CD8 000E3AD8*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*800E6CDC 000E3ADC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_954 @ Get_MemoryOffset_LowBit);
/*800E6CE0 000E3AE0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E6CE4, 0x800E6CE4) //this is a jump label
/*800E6CE4 000E3AE4*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x140);
/*800E6CE8 000E3AE8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x10);
/*800E6CEC 000E3AEC*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E6CF0, 0x800E6CF0) //this is a jump label
/*800E6CF0 000E3AF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*800E6CF4 000E3AF4*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800E6CF8 000E3AF8*/ PPC::Runtime::ASM::blt(.L_800E6C74);
/*800E6CFC 000E3AFC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800E6D00 000E3B00*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800E6D04 000E3B04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E6D08 000E3B08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E6D0C 000E3B0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E6D10 000E3B10*/ PPC::Runtime::ASM::blr();
}