//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_menu_getCurrentMenuID.hpp"
#include "fn_8007B624.hpp"
#include "fn_800769AC.hpp"
#include "fn_80047350.hpp"
#include "fn_80062978.hpp"
#include "fn_80078CF0.hpp"
#include "fn_memcard_StoreDefaultValues.hpp"
#include "fn_80131878.hpp"
#include "fn_8005A064.hpp"
#include "fn_8005E788.hpp"
#include "fn_8005E5D0.hpp"
#include "fn_800782CC.hpp"
#include "fn_800791F8.hpp"
#include "fn_80008270.hpp"
#include "fn_80008898.hpp"
#include "fn_menuGetNextMenuID.hpp"
#include "fn_menuGetNextMenuID.hpp"
#include "fn_menuGetNextMenuID.hpp"
#include "fn_80008220.hpp"



void fn_800063A8(PPC::Runtime::GCContext* context)
{
/*800063A8 000031A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800063AC 000031AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800063B0 000031B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800063B4 000031B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800063B8 000031B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800063BC 000031BC*/ PPC::Runtime::ASM::bl(fn_menu_getCurrentMenuID);
/*800063C0 000031C0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800063C4 000031C4*/ PPC::Runtime::ASM::clrlwi(context->r30, context->r3, 24);
/*800063C8 000031C8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD540 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800063CC 000031CC*/ PPC::Runtime::ASM::bl(fn_8007B624);
/*800063D0 000031D0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800063D4 000031D4*/ PPC::Runtime::ASM::beq(.L_800063E4);
/*800063D8 000031D8*/ PPC::Runtime::ASM::bl(fn_800769AC);
/*800063DC 000031DC*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*800063E0 000031E0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD540 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800063E4, 0x800063E4) //this is a jump label
/*800063E4 000031E4*/ PPC::Runtime::ASM::li(context->r31, STRUCT_BYTE4_COUNT_1805DD540 @ Get_MemoryOffset_SDA21);
/*800063E8 000031E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800063EC 000031EC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*800063F0 000031F0*/ PPC::Runtime::ASM::bne(.L_800063FC);
/*800063F4 000031F4*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*800063F8 000031F8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD540 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800063FC, 0x800063FC) //this is a jump label
/*800063FC 000031FC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0xd);
/*80006400 00003200*/ PPC::Runtime::ASM::bne(.L_80006418);
/*80006404 00003204*/ PPC::Runtime::ASM::bl(fn_80047350);
/*80006408 00003208*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8000640C 0000320C*/ PPC::Runtime::ASM::beq(.L_80006418);
/*80006410 00003210*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*80006414 00003214*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD540 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_80006418, 0x80006418) //this is a jump label
/*80006418 00003218*/ PPC::Runtime::ASM::bl(fn_80062978);
/*8000641C 0000321C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18058B0E4 @ Get_MemoryOffset_HighBit);
/*80006420 00003220*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80006424 00003224*/ PPC::Runtime::ASM::addi(context->r5, context->r3, STRUCT_BYTE4_COUNT_18058B0E4 @ Get_MemoryOffset_LowBit);
/*80006428 00003228*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8000642C 0000322C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80006430 00003230*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r5));
/*80006434 00003234*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r5));
/*80006438 00003238*/ PPC::Runtime::ASM::or(context->r30, context->r4, context->r0);
/*8000643C 0000323C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r5));
/*80006440 00003240*/ PPC::Runtime::ASM::or(context->r30, context->r30, context->r3);
/*80006444 00003244*/ PPC::Runtime::ASM::or(context->r30, context->r30, context->r0);
/*80006448 00003248*/ PPC::Runtime::ASM::bne(.L_80006450);
/*8000644C 0000324C*/ PPC::Runtime::ASM::bl(fn_80414058);
RUNTIME_PPC_JUMP_LABEL(.L_80006450, 0x80006450) //this is a jump label
/*80006450 00003250*/ PPC::Runtime::ASM::bl(fn_80078CF0);
/*80006454 00003254*/ PPC::Runtime::ASM::bl(fn_memcard_StoreDefaultValues);
/*80006458 00003258*/ PPC::Runtime::ASM::bl(fn_80131878);
/*8000645C 0000325C*/ PPC::Runtime::ASM::bl(fn_8005A064);
/*80006460 00003260*/ PPC::Runtime::ASM::bl(fn_8005E788);
/*80006464 00003264*/ PPC::Runtime::ASM::bl(fn_8005E5D0);
/*80006468 00003268*/ PPC::Runtime::ASM::bl(fn_800782CC);
/*8000646C 0000326C*/ PPC::Runtime::ASM::bl(fn_800791F8);
/*80006470 00003270*/ PPC::Runtime::ASM::bl(fn_80008270);
/*80006474 00003274*/ PPC::Runtime::ASM::bl(fn_80008898);
/*80006478 00003278*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD540 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000647C 0000327C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*80006480 00003280*/ PPC::Runtime::ASM::bne(.L_800064C4);
/*80006484 00003284*/ PPC::Runtime::ASM::bl(fn_VIGetDTVStatus);
/*80006488 00003288*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8000648C 0000328C*/ PPC::Runtime::ASM::beq(.L_800064B0);
/*80006490 00003290*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 22, 22);
/*80006494 00003294*/ PPC::Runtime::ASM::bne(.L_800064A4);
/*80006498 00003298*/ PPC::Runtime::ASM::bl(fn_OSGetProgressiveMode);
/*8000649C 0000329C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x1);
/*800064A0 000032A0*/ PPC::Runtime::ASM::bne(.L_800064B0);
RUNTIME_PPC_JUMP_LABEL(.L_800064A4, 0x800064A4) //this is a jump label
/*800064A4 000032A4*/ PPC::Runtime::ASM::li(context->r3, 0xd);
/*800064A8 000032A8*/ PPC::Runtime::ASM::bl(fn_menuGetNextMenuID);
/*800064AC 000032AC*/ PPC::Runtime::ASM::b(.L_800064CC);
RUNTIME_PPC_JUMP_LABEL(.L_800064B0, 0x800064B0) //this is a jump label
/*800064B0 000032B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800064B4 000032B4*/ PPC::Runtime::ASM::bl(fn_OSSetSoundMode2);
/*800064B8 000032B8*/ PPC::Runtime::ASM::li(context->r3, 0x12);
/*800064BC 000032BC*/ PPC::Runtime::ASM::bl(fn_menuGetNextMenuID);
/*800064C0 000032C0*/ PPC::Runtime::ASM::b(.L_800064CC);
RUNTIME_PPC_JUMP_LABEL(.L_800064C4, 0x800064C4) //this is a jump label
/*800064C4 000032C4*/ PPC::Runtime::ASM::li(context->r3, 0x12);
/*800064C8 000032C8*/ PPC::Runtime::ASM::bl(fn_menuGetNextMenuID);
RUNTIME_PPC_JUMP_LABEL(.L_800064CC, 0x800064CC) //this is a jump label
/*800064CC 000032CC*/ PPC::Runtime::ASM::bl(fn_80008220);
/*800064D0 000032D0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800064D4 000032D4*/ PPC::Runtime::ASM::bl(fn_HSD_VISetBlack);
/*800064D8 000032D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800064DC 000032DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800064E0 000032E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800064E4 000032E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800064E8 000032E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800064EC 000032EC*/ PPC::Runtime::ASM::blr();
}