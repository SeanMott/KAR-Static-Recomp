//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "OSReport.hpp"



void fn_80410384(PPC::Runtime::GCContext* context)
{
/*80410384 0040D184*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80410388 0040D188*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041038C 0040D18C*/ PPC::Runtime::ASM::lis(context->r5, lbl_80503C60 @ Get_MemoryOffset_HighBit);
/*80410390 0040D190*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80410394 0040D194*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80410398 0040D198*/ PPC::Runtime::ASM::addi(context->r31, context->r5, lbl_80503C60 @ Get_MemoryOffset_LowBit);
/*8041039C 0040D19C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*804103A0 0040D1A0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*804103A4 0040D1A4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804103A8 0040D1A8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*804103AC 0040D1AC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE2B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*804103B0 0040D1B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*804103B4 0040D1B4*/ PPC::Runtime::ASM::beq(.L_804103C8);
/*804103B8 0040D1B8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*804103BC 0040D1BC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x54);
/*804103C0 0040D1C0*/ PPC::Runtime::ASM::li(context->r4, 0x1ed);
/*804103C4 0040D1C4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804103C8, 0x804103C8) //this is a jump label
/*804103C8 0040D1C8*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*804103CC 0040D1CC*/ PPC::Runtime::ASM::bne(.L_804103D8);
/*804103D0 0040D1D0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*804103D4 0040D1D4*/ PPC::Runtime::ASM::bne(.L_804103E8);
RUNTIME_PPC_JUMP_LABEL(.L_804103D8, 0x804103D8) //this is a jump label
/*804103D8 0040D1D8*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*804103DC 0040D1DC*/ PPC::Runtime::ASM::beq(.L_804103F8);
/*804103E0 0040D1E0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*804103E4 0040D1E4*/ PPC::Runtime::ASM::bne(.L_804103F8);
RUNTIME_PPC_JUMP_LABEL(.L_804103E8, 0x804103E8) //this is a jump label
/*804103E8 0040D1E8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x70);
/*804103EC 0040D1EC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*804103F0 0040D1F0*/ PPC::Runtime::ASM::bl(OSReport);
/*804103F4 0040D1F4*/ PPC::Runtime::ASM::b(.L_80410400);
RUNTIME_PPC_JUMP_LABEL(.L_804103F8, 0x804103F8) //this is a jump label
/*804103F8 0040D1F8*/ PPC::Runtime::ASM::stw(context->r29, STRUCT_BYTE4_COUNT_1805DE298 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*804103FC 0040D1FC*/ PPC::Runtime::ASM::stw(context->r30, STRUCT_BYTE4_COUNT_1805DE29C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_80410400, 0x80410400) //this is a jump label
/*80410400 0040D200*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80410404 0040D204*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80410408 0040D208*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041040C 0040D20C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80410410 0040D210*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80410414 0040D214*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80410418 0040D218*/ PPC::Runtime::ASM::blr();
}