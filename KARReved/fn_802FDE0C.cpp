//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802FDE0C(PPC::Runtime::GCContext* context)
{
/*802FDE0C 002FAC0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802FDE10 002FAC10*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*802FDE14 002FAC14*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E3B08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802FDE18 002FAC18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*802FDE1C 002FAC1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802FDE20 002FAC20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r4));
/*802FDE24 002FAC24*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3));
/*802FDE28 002FAC28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802FDE2C 002FAC2C*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802FDE30 002FAC30*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f2);
/*802FDE34 002FAC34*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*802FDE38 002FAC38*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*802FDE3C 002FAC3C*/ PPC::Runtime::ASM::bne(.L_802FDE50);
/*802FDE40 002FAC40*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802FDE44 002FAC44*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802FDE48 002FAC48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r4));
/*802FDE4C 002FAC4C*/ PPC::Runtime::ASM::b(.L_802FDE54);
RUNTIME_PPC_JUMP_LABEL(.L_802FDE50, 0x802FDE50) //this is a jump label
/*802FDE50 002FAC50*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_802FDE54, 0x802FDE54) //this is a jump label
/*802FDE54 002FAC54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802FDE58 002FAC58*/ PPC::Runtime::ASM::blr();
}