//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8006720C(PPC::Runtime::GCContext* context)
{
/*8006720C 0006400C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80067210 00064010*/ PPC::Runtime::ASM::mflr(context->r0);
/*80067214 00064014*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80067218 00064018*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8006721C 0006401C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 80067220 00064020  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80067224 00064024*/ PPC::Runtime::ASM::beq(.L_800672A0);
/*80067228 00064028*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*8006722C 0006402C*/ PPC::Runtime::ASM::blt(.L_800672A0);
/*80067230 00064030*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x4);
/*80067234 00064034*/ PPC::Runtime::ASM::bge(.L_800672A0);
/*80067238 00064038*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_228 @ Get_MemoryOffset_HighBit);
/*8006723C 0006403C*/ PPC::Runtime::ASM::slwi(context->r31, context->r4, 3);
/*80067240 00064040*/ PPC::Runtime::ASM::addi(context->r0, context->r5, MemoryOffset_228 @ Get_MemoryOffset_LowBit);
/*80067244 00064044*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*80067248 00064048*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetViewport);
/*8006724C 0006404C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_229 @ Get_MemoryOffset_HighBit);
/*80067250 00064050*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80067254 00064054*/ PPC::Runtime::ASM::addi(context->r0, context->r4, MemoryOffset_229 @ Get_MemoryOffset_LowBit);
/*80067258 00064058*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*8006725C 0006405C*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetScissor);
/*80067260 00064060*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80067264 00064064*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80067268 00064068*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewportf);
/*8006726C 0006406C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80067270 00064070*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80067274 00064074*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80067278 00064078*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8006727C 0006407C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80067280 00064080*/ PPC::Runtime::ASM::fsubs(context->f3, context->f3, context->f0);
/*80067284 00064084*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEB24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80067288 00064088*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*8006728C 0006408C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DEB20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80067290 00064090*/ PPC::Runtime::ASM::fdivs(context->f1, context->f3, context->f1);
/*80067294 00064094*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f0);
/*80067298 00064098*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f0);
/*8006729C 0006409C*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetAspect);
RUNTIME_PPC_JUMP_LABEL(.L_800672A0, 0x800672A0) //this is a jump label
/*800672A0 000640A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800672A4 000640A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800672A8 000640A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800672AC 000640AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800672B0 000640B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800672B4 000640B4*/ PPC::Runtime::ASM::blr();
}