//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8027A08C.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_80231020.hpp"



void fn_801C3CAC(PPC::Runtime::GCContext* context)
{
/*801C3CAC 001C0AAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C3CB0 001C0AB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C3CB4 001C0AB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3CB8 001C0AB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3CBC 001C0ABC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C3CC0 001C0AC0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801C3CC4 001C0AC4*/ PPC::Runtime::ASM::bl(fn_8027A08C);
/*801C3CC8 001C0AC8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1998 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C3CCC 001C0ACC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3CD0 001C0AD0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E199C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C3CD4 001C0AD4*/ PPC::Runtime::ASM::li(context->r4, 0x33);
/*801C3CD8 001C0AD8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801C3CDC 001C0ADC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801C3CE0 001C0AE0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801C3CE4 001C0AE4*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801C3CE8 001C0AE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801C3CEC 001C0AEC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801C3CF0 001C0AF0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801C3CF4 001C0AF4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801C3CF8 001C0AF8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801C3CFC 001C0AFC*/ PPC::Runtime::ASM::bl(fn_80231020);
/*801C3D00 001C0B00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3D04 001C0B04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3D08 001C0B08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C3D0C 001C0B0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C3D10 001C0B10*/ PPC::Runtime::ASM::blr();
}