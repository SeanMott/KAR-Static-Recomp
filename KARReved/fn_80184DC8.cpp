//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80184DC8(PPC::Runtime::GCContext* context)
{
/*80184DC8 00181BC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80184DCC 00181BCC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80184DD0 00181BD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80184DD4 00181BD4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80184DD8 00181BD8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80184DDC 00181BDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1180, context->r3));
/*80184DE0 00181BE0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80184DE4 00181BE4*/ PPC::Runtime::ASM::beq(.L_80184E00);
/*80184DE8 00181BE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80184DEC 00181BEC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0EAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80184DF0 00181BF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80184DF4 00181BF4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*80184DF8 00181BF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80184DFC 00181BFC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
RUNTIME_PPC_JUMP_LABEL(.L_80184E00, 0x80184E00) //this is a jump label
/*80184E00 00181C00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80184E04 00181C04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80184E08 00181C08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80184E0C 00181C0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80184E10 00181C10*/ PPC::Runtime::ASM::blr();
}