//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B61F4.hpp"
#include "fn_800B2540.hpp"
#include "fn_800B0CDC.hpp"



void fn_800B297C(PPC::Runtime::GCContext* context)
{
/*800B297C 000AF77C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B2980 000AF780*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B2984 000AF784*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_40_DoesCameraStuffAndLoadingImages @ Get_MemoryOffset_HighBit);
/*800B2988 000AF788*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B298C 000AF78C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, StructWithFuncPtrs_40_DoesCameraStuffAndLoadingImages @ Get_MemoryOffset_LowBit);
/*800B2990 000AF790*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B2994 000AF794*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800B2998 000AF798*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800B299C 000AF79C*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r3));
/*800B29A0 000AF7A0*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x18);
/*800B29A4 000AF7A4*/ PPC::Runtime::ASM::extrwi(context->r4, context->r4, 1, 27);
/*800B29A8 000AF7A8*/ PPC::Runtime::ASM::add(context->r5, context->r5, context->r0);
/*800B29AC 000AF7AC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800B29B0 000AF7B0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800B29B4 000AF7B4*/ PPC::Runtime::ASM::bctrl();
/*800B29B8 000AF7B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800B29BC 000AF7BC*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_40_DoesCameraStuffAndLoadingImages @ Get_MemoryOffset_HighBit);
/*800B29C0 000AF7C0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, StructWithFuncPtrs_40_DoesCameraStuffAndLoadingImages @ Get_MemoryOffset_LowBit);
/*800B29C4 000AF7C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800B29C8 000AF7C8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x18);
/*800B29CC 000AF7CC*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*800B29D0 000AF7D0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*800B29D4 000AF7D4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800B29D8 000AF7D8*/ PPC::Runtime::ASM::bctrl();
/*800B29DC 000AF7DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800B29E0 000AF7E0*/ PPC::Runtime::ASM::bl(fn_800B61F4);
/*800B29E4 000AF7E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800B29E8 000AF7E8*/ PPC::Runtime::ASM::bl(fn_800B2540);
/*800B29EC 000AF7EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800B29F0 000AF7F0*/ PPC::Runtime::ASM::bl(fn_800B0CDC);
/*800B29F4 000AF7F4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*800B29F8 000AF7F8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B29FC 000AF7FC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r31));
/*800B2A00 000AF800*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*800B2A04 000AF804*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r31));
/*800B2A08 000AF808*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B2A0C 000AF80C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B2A10 000AF810*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B2A14 000AF814*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B2A18 000AF818*/ PPC::Runtime::ASM::blr();
}