//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSLockMutex.hpp"
#include "fn_OSUnlockMutex.hpp"



void fn_804533F0(PPC::Runtime::GCContext* context)
{
/*804533F0 004501F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*804533F4 004501F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*804533F8 004501F8*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_HighBit);
/*804533FC 004501FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80453400 00450200*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_LowBit);
/*80453404 00450204*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80453408 00450208*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x5a0);
/*8045340C 0045020C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80453410 00450210*/ PPC::Runtime::ASM::bl(fn_OSLockMutex);
/*80453414 00450214*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_HighBit);
/*80453418 00450218*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8045341C 0045021C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_LowBit);
/*80453420 00450220*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x59c, context->r4));
/*80453424 00450224*/ PPC::Runtime::ASM::bl(fn_OSUnlockMutex);
/*80453428 00450228*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045342C 0045022C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80453430 00450230*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80453434 00450234*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80453438 00450238*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045343C 0045023C*/ PPC::Runtime::ASM::blr();
}