//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018CF84.hpp"
#include "fn_801C8660.hpp"
#include "fn_8018D284.hpp"



void fn_80202070(PPC::Runtime::GCContext* context)
{
/*80202070 001FEE70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80202074 001FEE74*/ PPC::Runtime::ASM::mflr(context->r0);
/*80202078 001FEE78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020207C 001FEE7C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80202080 001FEE80*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80202084 001FEE84*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80202088 001FEE88*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8020208C 001FEE8C*/ PPC::Runtime::ASM::bl(fn_8018CF84);
/*80202090 001FEE90*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80202094 001FEE94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*80202098 001FEE98*/ PPC::Runtime::ASM::b(.L_802020B4);
RUNTIME_PPC_JUMP_LABEL(.L_8020209C, 0x8020209C) //this is a jump label
/*8020209C 001FEE9C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802020A0 001FEEA0*/ PPC::Runtime::ASM::bl(fn_801C8660);
/*802020A4 001FEEA4*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*802020A8 001FEEA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r30));
/*802020AC 001FEEAC*/ PPC::Runtime::ASM::bl(fn_8018D284);
/*802020B0 001FEEB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_802020B4, 0x802020B4) //this is a jump label
/*802020B4 001FEEB4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*802020B8 001FEEB8*/ PPC::Runtime::ASM::bne(.L_8020209C);
/*802020BC 001FEEBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802020C0 001FEEC0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802020C4 001FEEC4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802020C8 001FEEC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802020CC 001FEECC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802020D0 001FEED0*/ PPC::Runtime::ASM::blr();
}