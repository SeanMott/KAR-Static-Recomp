//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7954.hpp"
#include "fn_800F7870.hpp"
#include "fn_800F7870.hpp"
#include "fn_801013C8.hpp"



void fn_80101300(PPC::Runtime::GCContext* context)
{
/*80101300 000FE100*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80101304 000FE104*/ PPC::Runtime::ASM::mflr(context->r0);
/*80101308 000FE108*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010130C 000FE10C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80101310 000FE110*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80101314 000FE114*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80101318 000FE118*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8010131C 000FE11C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80101320 000FE120*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*80101324 000FE124*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80101328 000FE128*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*8010132C 000FE12C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80101330 000FE130*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101334 000FE134*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80101338 000FE138*/ PPC::Runtime::ASM::addi(context->r3, context->r5, 0x54);
/*8010133C 000FE13C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*80101340 000FE140*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*80101344 000FE144*/ PPC::Runtime::ASM::bl(fn_800D7954);
/*80101348 000FE148*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*8010134C 000FE14C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80101350 000FE150*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80101354 000FE154*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*80101358 000FE158*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r3));
/*8010135C 000FE15C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*80101360 000FE160*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80101364 000FE164*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80101368 000FE168*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8010136C 000FE16C*/ PPC::Runtime::ASM::beq(.L_801013A4);
/*80101370 000FE170*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80101374 000FE174*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80101378 000FE178*/ PPC::Runtime::ASM::ble(.L_80101394);
/*8010137C 000FE17C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80101380 000FE180*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80101384 000FE184*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80101388 000FE188*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8010138C 000FE18C*/ PPC::Runtime::ASM::bl(fn_800F7870);
/*80101390 000FE190*/ PPC::Runtime::ASM::b(.L_801013A4);
RUNTIME_PPC_JUMP_LABEL(.L_80101394, 0x80101394) //this is a jump label
/*80101394 000FE194*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80101398 000FE198*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010139C 000FE19C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801013A0 000FE1A0*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_801013A4, 0x801013A4) //this is a jump label
/*801013A4 000FE1A4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801013A8 000FE1A8*/ PPC::Runtime::ASM::bl(fn_801013C8);
/*801013AC 000FE1AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801013B0 000FE1B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801013B4 000FE1B4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801013B8 000FE1B8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801013BC 000FE1BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801013C0 000FE1C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801013C4 000FE1C4*/ PPC::Runtime::ASM::blr();
}