//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80379310.hpp"



void fn_80378E34(PPC::Runtime::GCContext* context)
{
/*80378E34 00375C34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80378E38 00375C38*/ PPC::Runtime::ASM::mflr(context->r0);
/*80378E3C 00375C3C*/ PPC::Runtime::ASM::xoris(context->r7, context->r6, 0x8000);
/*80378E40 00375C40*/ PPC::Runtime::ASM::lis(context->r6, 0x4330);
/*80378E44 00375C44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80378E48 00375C48*/ PPC::Runtime::ASM::mulli(context->r0, context->r5, 0x18);
/*80378E4C 00375C4C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_61 @ Get_MemoryOffset_HighBit);
/*80378E50 00375C50*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E4B40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80378E54 00375C54*/ PPC::Runtime::ASM::lwzu(context->r9, MemoryOffset_61 @ Get_MemoryOffset_LowBit ( context->r5 ));
/*80378E58 00375C58*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80378E5C 00375C5C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80378E60 00375C60*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80378E64 00375C64*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80378E68 00375C68*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*80378E6C 00375C6C*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80378E70 00375C70*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r5));
/*80378E74 00375C74*/ PPC::Runtime::ASM::lwz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r3));
/*80378E78 00375C78*/ PPC::Runtime::ASM::fsubs(context->f1, context->f0, context->f1);
/*80378E7C 00375C7C*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80378E80 00375C80*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80378E84 00375C84*/ PPC::Runtime::ASM::cmpw(context->r10, context->r0);
/*80378E88 00375C88*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80378E8C 00375C8C*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80378E90 00375C90*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80378E94 00375C94*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80378E98 00375C98*/ PPC::Runtime::ASM::beq(.L_80378EA4);
/*80378E9C 00375C9C*/ PPC::Runtime::ASM::cmpwi(context->r10, 0x3);
/*80378EA0 00375CA0*/ PPC::Runtime::ASM::bne(.L_80378EAC);
RUNTIME_PPC_JUMP_LABEL(.L_80378EA4, 0x80378EA4) //this is a jump label
/*80378EA4 00375CA4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E4B38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80378EA8 00375CA8*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_80378EAC, 0x80378EAC) //this is a jump label
/*80378EAC 00375CAC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r3));
/*80378EB0 00375CB0*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x1);
/*80378EB4 00375CB4*/ PPC::Runtime::ASM::beq(.L_80378EC0);
/*80378EB8 00375CB8*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*80378EBC 00375CBC*/ PPC::Runtime::ASM::bne(.L_80378ED8);
RUNTIME_PPC_JUMP_LABEL(.L_80378EC0, 0x80378EC0) //this is a jump label
/*80378EC0 00375CC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r3));
/*80378EC4 00375CC4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80378EC8 00375CC8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80378ECC 00375CCC*/ PPC::Runtime::ASM::lfsx(context->f0, context->r5, context->r0);
/*80378ED0 00375CD0*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
/*80378ED4 00375CD4*/ PPC::Runtime::ASM::b(.L_80378F24);
RUNTIME_PPC_JUMP_LABEL(.L_80378ED8, 0x80378ED8) //this is a jump label
/*80378ED8 00375CD8*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x2);
/*80378EDC 00375CDC*/ PPC::Runtime::ASM::beq(.L_80378EE8);
/*80378EE0 00375CE0*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*80378EE4 00375CE4*/ PPC::Runtime::ASM::bne(.L_80378F00);
RUNTIME_PPC_JUMP_LABEL(.L_80378EE8, 0x80378EE8) //this is a jump label
/*80378EE8 00375CE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/*80378EEC 00375CEC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80378EF0 00375CF0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80378EF4 00375CF4*/ PPC::Runtime::ASM::lfsx(context->f0, context->r5, context->r0);
/*80378EF8 00375CF8*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
/*80378EFC 00375CFC*/ PPC::Runtime::ASM::b(.L_80378F24);
RUNTIME_PPC_JUMP_LABEL(.L_80378F00, 0x80378F00) //this is a jump label
/*80378F00 00375D00*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x3);
/*80378F04 00375D04*/ PPC::Runtime::ASM::bne(.L_80378F24);
/*80378F08 00375D08*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r3));
/*80378F0C 00375D0C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*80378F10 00375D10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/*80378F14 00375D14*/ PPC::Runtime::ASM::add(context->r0, context->r6, context->r0);
/*80378F18 00375D18*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80378F1C 00375D1C*/ PPC::Runtime::ASM::lfsx(context->f0, context->r5, context->r0);
/*80378F20 00375D20*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_80378F24, 0x80378F24) //this is a jump label
/*80378F24 00375D24*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f1);
/*80378F28 00375D28*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80378F2C 00375D2C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80378F30 00375D30*/ PPC::Runtime::ASM::bl(fn_80379310);
/*80378F34 00375D34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80378F38 00375D38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80378F3C 00375D3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80378F40 00375D40*/ PPC::Runtime::ASM::blr();
}