//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80059D78(PPC::Runtime::GCContext* context)
{
/*80059D78 00056B78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80059D7C 00056B7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80059D80 00056B80*/ PPC::Runtime::ASM::lis(context->r4, StructOfOffsets_MightBeUsedInAudioFiles_1 @ Get_MemoryOffset_HighBit);
/*80059D84 00056B84*/ PPC::Runtime::ASM::lis(context->r3, 0x8);
/*80059D88 00056B88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80059D8C 00056B8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80059D90 00056B90*/ PPC::Runtime::ASM::addi(context->r31, context->r4, StructOfOffsets_MightBeUsedInAudioFiles_1 @ Get_MemoryOffset_LowBit);
/*80059D94 00056B94*/ PPC::Runtime::ASM::li(context->r4, 0x20);
/*80059D98 00056B98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80059D9C 00056B9C*/ PPC::Runtime::ASM::bl(fn_OSAllocFromArenaLo);
/* 80059DA0 00056BA0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80059DA4 00056BA4*/ PPC::Runtime::ASM::bne(.L_80059DC4);
/*80059DA8 00056BA8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xd68);
/*80059DAC 00056BAC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80059DB0 00056BB0*/ PPC::Runtime::ASM::bl(OSReport);
/*80059DB4 00056BB4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xd8c);
/*80059DB8 00056BB8*/ PPC::Runtime::ASM::li(context->r4, 0x13a);
/*80059DBC 00056BBC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*80059DC0 00056BC0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80059DC4, 0x80059DC4) //this is a jump label
/*80059DC4 00056BC4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80059DC8 00056BC8*/ PPC::Runtime::ASM::addis(context->r4, context->r30, 0x8);
/*80059DCC 00056BCC*/ PPC::Runtime::ASM::bl(fn_OSCreateHeap);
/*80059DD0 00056BD0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80059DD4 00056BD4*/ PPC::Runtime::ASM::stw(context->r3, lbl_805D528C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80059DD8 00056BD8*/ PPC::Runtime::ASM::bne(.L_80059DF8);
/*80059DDC 00056BDC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xd98);
/*80059DE0 00056BE0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80059DE4 00056BE4*/ PPC::Runtime::ASM::bl(OSReport);
/*80059DE8 00056BE8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xd8c);
/*80059DEC 00056BEC*/ PPC::Runtime::ASM::li(context->r4, 0x13e);
/*80059DF0 00056BF0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*80059DF4 00056BF4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80059DF8, 0x80059DF8) //this is a jump label
/*80059DF8 00056BF8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80059DFC 00056BFC*/ PPC::Runtime::ASM::bl(fn_AIInit);
/*80059E00 00056C00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80059E04 00056C04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80059E08 00056C08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80059E0C 00056C0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80059E10 00056C10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80059E14 00056C14*/ PPC::Runtime::ASM::blr();
}