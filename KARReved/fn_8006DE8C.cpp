//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006DCC0.hpp"



void fn_8006DE8C(PPC::Runtime::GCContext* context)
{
/*8006DE8C 0006AC8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8006DE90 0006AC90*/ PPC::Runtime::ASM::mflr(context->r0);
/*8006DE94 0006AC94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8006DE98 0006AC98*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8006DE9C 0006AC9C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8006DEA0 0006ACA0*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8006DEA4 0006ACA4*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8006DEA8 0006ACA8*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*8006DEAC 0006ACAC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DEC58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8006DEB0 0006ACB0*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*8006DEB4 0006ACB4*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*8006DEB8 0006ACB8*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*8006DEBC 0006ACBC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8006DEC0 0006ACC0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8006DEC4 0006ACC4*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8006DEC8 0006ACC8*/ PPC::Runtime::ASM::bl(fn_8006DCC0);
/*8006DECC 0006ACCC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8006DED0 0006ACD0*/ PPC::Runtime::ASM::beq(.L_8006DF50);
/*8006DED4 0006ACD4*/ PPC::Runtime::ASM::fmuls(context->f1, context->f31, context->f31);
/*8006DED8 0006ACD8*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*8006DEDC 0006ACDC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8006DEE0 0006ACE0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEC40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8006DEE4 0006ACE4*/ PPC::Runtime::ASM::fmadds(context->f4, context->f30, context->f30, context->f1);
/*8006DEE8 0006ACE8*/ PPC::Runtime::ASM::stfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*8006DEEC 0006ACEC*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*8006DEF0 0006ACF0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f4, context->f0);
/*8006DEF4 0006ACF4*/ PPC::Runtime::ASM::ble(.L_8006DF44);
/*8006DEF8 0006ACF8*/ PPC::Runtime::ASM::frsqrte(context->f1, context->f4);
/*8006DEFC 0006ACFC*/ PPC::Runtime::ASM::lfd(context->f3, STRUCT_DOUBLE_COUNT_1805DEC48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8006DF00 0006AD00*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805DEC50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8006DF04 0006AD04*/ PPC::Runtime::ASM::fmul(context->f0, context->f1, context->f1);
/*8006DF08 0006AD08*/ PPC::Runtime::ASM::fmul(context->f1, context->f3, context->f1);
/*8006DF0C 0006AD0C*/ PPC::Runtime::ASM::fnmsub(context->f0, context->f4, context->f0, context->f2);
/*8006DF10 0006AD10*/ PPC::Runtime::ASM::fmul(context->f1, context->f1, context->f0);
/*8006DF14 0006AD14*/ PPC::Runtime::ASM::fmul(context->f0, context->f1, context->f1);
/*8006DF18 0006AD18*/ PPC::Runtime::ASM::fmul(context->f1, context->f3, context->f1);
/*8006DF1C 0006AD1C*/ PPC::Runtime::ASM::fnmsub(context->f0, context->f4, context->f0, context->f2);
/*8006DF20 0006AD20*/ PPC::Runtime::ASM::fmul(context->f1, context->f1, context->f0);
/*8006DF24 0006AD24*/ PPC::Runtime::ASM::fmul(context->f0, context->f1, context->f1);
/*8006DF28 0006AD28*/ PPC::Runtime::ASM::fmul(context->f1, context->f3, context->f1);
/*8006DF2C 0006AD2C*/ PPC::Runtime::ASM::fnmsub(context->f0, context->f4, context->f0, context->f2);
/*8006DF30 0006AD30*/ PPC::Runtime::ASM::fmul(context->f0, context->f1, context->f0);
/*8006DF34 0006AD34*/ PPC::Runtime::ASM::fmul(context->f0, context->f4, context->f0);
/*8006DF38 0006AD38*/ PPC::Runtime::ASM::frsp(context->f0, context->f0);
/*8006DF3C 0006AD3C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8006DF40 0006AD40*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_8006DF44, 0x8006DF44) //this is a jump label
/*8006DF44 0006AD44*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8006DF48 0006AD48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8006DF4C 0006AD4C*/ PPC::Runtime::ASM::b(.L_8006DF54);
RUNTIME_PPC_JUMP_LABEL(.L_8006DF50, 0x8006DF50) //this is a jump label
/*8006DF50 0006AD50*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8006DF54, 0x8006DF54) //this is a jump label
/*8006DF54 0006AD54*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8006DF58 0006AD58*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8006DF5C 0006AD5C*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8006DF60 0006AD60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8006DF64 0006AD64*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8006DF68 0006AD68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8006DF6C 0006AD6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8006DF70 0006AD70*/ PPC::Runtime::ASM::blr();
}