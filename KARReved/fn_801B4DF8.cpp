//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801B4DF8(PPC::Runtime::GCContext* context)
{
/*801B4DF8 001B1BF8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r3));
/*801B4DFC 001B1BFC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/* 801B4E00 001B1C00  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801B4E04 001B1C04*/ PPC::Runtime::ASM::beq(.L_801B4E0C);
/*801B4E08 001B1C08*/ PPC::Runtime::ASM::li(context->r3, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_801B4E0C, 0x801B4E0C) //this is a jump label
/*801B4E0C 001B1C0C*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r3);
/*801B4E10 001B1C10*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AF758 @ Get_MemoryOffset_HighBit);
/*801B4E14 001B1C14*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0xc);
/*801B4E18 001B1C18*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*801B4E1C 001B1C1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804AF758 @ Get_MemoryOffset_LowBit);
/*801B4E20 001B1C20*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*801B4E24 001B1C24*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*801B4E28 001B1C28*/ PPC::Runtime::ASM::blr();
}