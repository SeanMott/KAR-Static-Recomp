//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80289768.hpp"



void fn_8032DE10(PPC::Runtime::GCContext* context)
{
/*8032DE10 0032AC10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8032DE14 0032AC14*/ PPC::Runtime::ASM::mflr(context->r0);
/*8032DE18 0032AC18*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*8032DE1C 0032AC1C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E4120 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8032DE20 0032AC20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8032DE24 0032AC24*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8032DE28 0032AC28*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*8032DE2C 0032AC2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r3));
/*8032DE30 0032AC30*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r3));
/*8032DE34 0032AC34*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r3));
/*8032DE38 0032AC38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r3));
/*8032DE3C 0032AC3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8032DE40 0032AC40*/ PPC::Runtime::ASM::bl(fn_80289768);
/*8032DE44 0032AC44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8032DE48 0032AC48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8032DE4C 0032AC4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8032DE50 0032AC50*/ PPC::Runtime::ASM::blr();
}