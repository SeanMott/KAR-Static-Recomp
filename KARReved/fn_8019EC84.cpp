//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018AFE4.hpp"



void fn_8019EC84(PPC::Runtime::GCContext* context)
{
/*8019EC84 0019BA84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019EC88 0019BA88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019EC8C 0019BA8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019EC90 0019BA90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019EC94 0019BA94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8019EC98 0019BA98*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8019EC9C 0019BA9C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x674);
/*8019ECA0 0019BAA0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*8019ECA4 0019BAA4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4));
/*8019ECA8 0019BAA8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c8, context->r31));
/*8019ECAC 0019BAAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8019ECB0 0019BAB0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*8019ECB4 0019BAB4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34c, context->r31));
/*8019ECB8 0019BAB8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 4);
/*8019ECBC 0019BABC*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r0);
/*8019ECC0 0019BAC0*/ PPC::Runtime::ASM::bl(fn_8018AFE4);
/*8019ECC4 0019BAC4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r31));
/*8019ECC8 0019BAC8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8019ECCC 0019BACC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*8019ECD0 0019BAD0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r31));
/*8019ECD4 0019BAD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019ECD8 0019BAD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019ECDC 0019BADC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019ECE0 0019BAE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8019ECE4 0019BAE4*/ PPC::Runtime::ASM::blr();
}