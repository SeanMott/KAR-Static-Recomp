//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801B4DF8.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B50CC.hpp"
#include "fn_801B50C8.hpp"
#include "fn_801B50CC.hpp"
#include "fn_801B50C8.hpp"



void fn_801B4F10(PPC::Runtime::GCContext* context)
{
/*801B4F10 001B1D10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B4F14 001B1D14*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B4F18 001B1D18*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801B4F1C 001B1D1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4F20 001B1D20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4F24 001B1D24*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B4F28 001B1D28*/ PPC::Runtime::ASM::ble(.L_801B4F40);
/*801B4F2C 001B1D2C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4F30 001B1D30*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801B4F34 001B1D34*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B4F38 001B1D38*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4F3C 001B1D3C*/ PPC::Runtime::ASM::b(.L_801B4F50);
RUNTIME_PPC_JUMP_LABEL(.L_801B4F40, 0x801B4F40) //this is a jump label
/*801B4F40 001B1D40*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4F44 001B1D44*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801B4F48 001B1D48*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B4F4C 001B1D4C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B4F50, 0x801B4F50) //this is a jump label
/*801B4F50 001B1D50*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4F54 001B1D54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4F58 001B1D58*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B4F5C 001B1D5C*/ PPC::Runtime::ASM::extrwi(context->r4, context->r0, 1, 24);
/*801B4F60 001B1D60*/ PPC::Runtime::ASM::bl(fn_801B4DF8);
/*801B4F64 001B1D64*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1630 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B4F68 001B1D68*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*801B4F6C 001B1D6C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1634 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B4F70 001B1D70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4F74 001B1D74*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B4F78 001B1D78*/ PPC::Runtime::ASM::li(context->r4, 0x63);
/*801B4F7C 001B1D7C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B4F80 001B1D80*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B4F84 001B1D84*/ PPC::Runtime::ASM::lis(context->r4, fn_801B50CC @ Get_MemoryOffset_HighBit);
/*801B4F88 001B1D88*/ PPC::Runtime::ASM::lis(context->r3, fn_801B50C8 @ Get_MemoryOffset_HighBit);
/*801B4F8C 001B1D8C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B50CC @ Get_MemoryOffset_LowBit);
/*801B4F90 001B1D90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B4F94 001B1D94*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B50C8 @ Get_MemoryOffset_LowBit);
/*801B4F98 001B1D98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B4F9C 001B1D9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4FA0 001B1DA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4FA4 001B1DA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B4FA8 001B1DA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B4FAC 001B1DAC*/ PPC::Runtime::ASM::blr();
}