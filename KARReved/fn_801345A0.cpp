//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801552F4.hpp"



void fn_801345A0(PPC::Runtime::GCContext* context)
{
/*801345A0 001313A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801345A4 001313A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801345A8 001313A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801345AC 001313AC*/ PPC::Runtime::ASM::bl(fn_801552F4);
/*801345B0 001313B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801345B4 001313B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801345B8 001313B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801345BC 001313BC*/ PPC::Runtime::ASM::blr();
}