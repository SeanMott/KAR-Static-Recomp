//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__OSMaskInterrupts.hpp"
#include "EXIIntrruptHandler.hpp"
#include "EXIIntrruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "TCIntrruptHandler.hpp"
#include "TCIntrruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "EXTIntrruptHandler.hpp"
#include "EXTIntrruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "EXIGetID.hpp"
#include "__EXIProbe.hpp"
#include "__EXIProbe.hpp"
#include "EXIGetID.hpp"
#include "__OSEnableBarnacle.hpp"
#include "EXIGetID.hpp"
#include "__OSEnableBarnacle.hpp"
#include "OSRegisterVersion.hpp"



void EXIInit(PPC::Runtime::GCContext* context)
{
/*803EB1AC 003E7FAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EB1B0 003E7FB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EB1B4 003E7FB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803EB1B8 003E7FB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EB1BC 003E7FBC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EB1C0 003E7FC0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EB1C4 003E7FC4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EB1C8 003E7FC8*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803EB1CC 003E7FCC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x6800);
RUNTIME_PPC_JUMP_LABEL(.L_803EB1D0, 0x803EB1D0) //this is a jump label
/*803EB1D0 003E7FD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*803EB1D4 003E7FD4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*803EB1D8 003E7FD8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*803EB1DC 003E7FDC*/ PPC::Runtime::ASM::beq(.L_803EB1D0);
/*803EB1E0 003E7FE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*803EB1E4 003E7FE4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*803EB1E8 003E7FE8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*803EB1EC 003E7FEC*/ PPC::Runtime::ASM::beq(.L_803EB1D0);
/*803EB1F0 003E7FF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
/*803EB1F4 003E7FF4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*803EB1F8 003E7FF8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*803EB1FC 003E7FFC*/ PPC::Runtime::ASM::beq(.L_803EB1D0);
/*803EB200 003E8000*/ PPC::Runtime::ASM::lis(context->r3, 0x80);
/*803EB204 003E8004*/ PPC::Runtime::ASM::addi(context->r3, context->r3, -0x8000);
/*803EB208 003E8008*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
/*803EB20C 003E800C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803EB210 003E8010*/ PPC::Runtime::ASM::lis(context->r4, 0xcc00);
/*803EB214 003E8014*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6800, context->r4));
/*803EB218 003E8018*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6814, context->r4));
/*803EB21C 003E801C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6828, context->r4));
/*803EB220 003E8020*/ PPC::Runtime::ASM::li(context->r0, 0x2000);
/*803EB224 003E8024*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6800, context->r4));
/*803EB228 003E8028*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*803EB22C 003E802C*/ PPC::Runtime::ASM::lis(context->r4, EXIIntrruptHandler @ Get_MemoryOffset_HighBit);
/*803EB230 003E8030*/ PPC::Runtime::ASM::addi(context->r28, context->r4, EXIIntrruptHandler @ Get_MemoryOffset_LowBit);
/*803EB234 003E8034*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x0);
/*803EB238 003E8038*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB23C 003E803C*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*803EB240 003E8040*/ PPC::Runtime::ASM::lis(context->r4, TCIntrruptHandler @ Get_MemoryOffset_HighBit);
/*803EB244 003E8044*/ PPC::Runtime::ASM::addi(context->r29, context->r4, TCIntrruptHandler @ Get_MemoryOffset_LowBit);
/*803EB248 003E8048*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*803EB24C 003E804C*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB250 003E8050*/ PPC::Runtime::ASM::li(context->r3, 0xb);
/*803EB254 003E8054*/ PPC::Runtime::ASM::lis(context->r4, EXTIntrruptHandler @ Get_MemoryOffset_HighBit);
/*803EB258 003E8058*/ PPC::Runtime::ASM::addi(context->r30, context->r4, EXTIntrruptHandler @ Get_MemoryOffset_LowBit);
/*803EB25C 003E805C*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803EB260 003E8060*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB264 003E8064*/ PPC::Runtime::ASM::li(context->r3, 0xc);
/*803EB268 003E8068*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x0);
/*803EB26C 003E806C*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB270 003E8070*/ PPC::Runtime::ASM::li(context->r3, 0xd);
/*803EB274 003E8074*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*803EB278 003E8078*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB27C 003E807C*/ PPC::Runtime::ASM::li(context->r3, 0xe);
/*803EB280 003E8080*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803EB284 003E8084*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB288 003E8088*/ PPC::Runtime::ASM::li(context->r3, 0xf);
/*803EB28C 003E808C*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x0);
/*803EB290 003E8090*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB294 003E8094*/ PPC::Runtime::ASM::li(context->r3, 0x10);
/*803EB298 003E8098*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*803EB29C 003E809C*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803EB2A0 003E80A0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB2A4 003E80A4*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*803EB2A8 003E80A8*/ PPC::Runtime::ASM::li(context->r5, IDSerialPort1_805DE068 @ Get_MemoryOffset_SDA21);
/*803EB2AC 003E80AC*/ PPC::Runtime::ASM::bl(EXIGetID);
/*803EB2B0 003E80B0*/ PPC::Runtime::ASM::lwz(context->r0, __OSInIPL @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803EB2B4 003E80B4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EB2B8 003E80B8*/ PPC::Runtime::ASM::beq(.L_803EB2EC);
/*803EB2BC 003E80BC*/ PPC::Runtime::ASM::lis(context->r4, 0x8000);
/*803EB2C0 003E80C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30c4, context->r4));
/*803EB2C4 003E80C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30c0, context->r4));
/*803EB2C8 003E80C8*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EB2CC 003E80CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EB2D0 003E80D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r3));
/*803EB2D4 003E80D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*803EB2D8 003E80D8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB2DC 003E80DC*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EB2E0 003E80E0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EB2E4 003E80E4*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EB2E8 003E80E8*/ PPC::Runtime::ASM::b(.L_803EB358);
RUNTIME_PPC_JUMP_LABEL(.L_803EB2EC, 0x803EB2EC) //this is a jump label
/*803EB2EC 003E80EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB2F0 003E80F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EB2F4 003E80F4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*803EB2F8 003E80F8*/ PPC::Runtime::ASM::bl(EXIGetID);
/*803EB2FC 003E80FC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EB300 003E8100*/ PPC::Runtime::ASM::beq(.L_803EB324);
/*803EB304 003E8104*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803EB308 003E8108*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x701);
/*803EB30C 003E810C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803EB310 003E8110*/ PPC::Runtime::ASM::bne(.L_803EB324);
/*803EB314 003E8114*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EB318 003E8118*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EB31C 003E811C*/ PPC::Runtime::ASM::bl(__OSEnableBarnacle);
/*803EB320 003E8120*/ PPC::Runtime::ASM::b(.L_803EB358);
RUNTIME_PPC_JUMP_LABEL(.L_803EB324, 0x803EB324) //this is a jump label
/*803EB324 003E8124*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EB328 003E8128*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EB32C 003E812C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*803EB330 003E8130*/ PPC::Runtime::ASM::bl(EXIGetID);
/*803EB334 003E8134*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EB338 003E8138*/ PPC::Runtime::ASM::beq(.L_803EB358);
/*803EB33C 003E813C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803EB340 003E8140*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x701);
/*803EB344 003E8144*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803EB348 003E8148*/ PPC::Runtime::ASM::bne(.L_803EB358);
/*803EB34C 003E814C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB350 003E8150*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*803EB354 003E8154*/ PPC::Runtime::ASM::bl(__OSEnableBarnacle);
RUNTIME_PPC_JUMP_LABEL(.L_803EB358, 0x803EB358) //this is a jump label
/*803EB358 003E8158*/ PPC::Runtime::ASM::lwz(context->r3, __EXIVersion @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803EB35C 003E815C*/ PPC::Runtime::ASM::bl(OSRegisterVersion);
/*803EB360 003E8160*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803EB364 003E8164*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EB368 003E8168*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EB36C 003E816C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EB370 003E8170*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EB374 003E8174*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803EB378 003E8178*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EB37C 003E817C*/ PPC::Runtime::ASM::blr();
}