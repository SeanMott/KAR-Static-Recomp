//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8039AB60(PPC::Runtime::GCContext* context)
{
/*8039AB60 00397960*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039AB64 00397964*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039AB68 00397968*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039AB6C 0039796C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039AB70 00397970*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039AB74 00397974*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8039AB78 00397978*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r12));
/*8039AB7C 0039797C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039AB80 00397980*/ PPC::Runtime::ASM::bctrl();
/*8039AB84 00397984*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8039AB88 00397988*/ PPC::Runtime::ASM::beq(.L_8039AB94);
/*8039AB8C 0039798C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5018 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8039AB90 00397990*/ PPC::Runtime::ASM::b(.L_8039ABAC);
RUNTIME_PPC_JUMP_LABEL(.L_8039AB94, 0x8039AB94) //this is a jump label
/*8039AB94 00397994*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039AB98 00397998*/ PPC::Runtime::ASM::lis(context->r3, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_HighBit);
/*8039AB9C 0039799C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_LowBit);
/*8039ABA0 003979A0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x8);
/*8039ABA4 003979A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039ABA8 003979A8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8039ABAC, 0x8039ABAC) //this is a jump label
/*8039ABAC 003979AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039ABB0 003979B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039ABB4 003979B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039ABB8 003979B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039ABBC 003979BC*/ PPC::Runtime::ASM::blr();
}