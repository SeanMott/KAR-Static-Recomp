//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSReport.hpp"
#include "OSReport.hpp"
#include "OSGetArenaLo.hpp"
#include "OSGetArenaHi.hpp"
#include "fn_OSInitAlloc.hpp"
#include "OSSetArenaLo.hpp"
#include "fn_OSCreateHeap.hpp"
#include "fn_OSSetCurrentHeap.hpp"
#include "OSSetArenaLo.hpp"
#include "fn_OSFreeToHeap.hpp"



void fn___sys_free(PPC::Runtime::GCContext* context)
{
/*803AF884 003AC684*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803AF888 003AC688*/ PPC::Runtime::ASM::mflr(context->r0);
/*803AF88C 003AC68C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803AF890 003AC690*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803AF894 003AC694*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803AF898 003AC698*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AF89C 003AC69C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803AF8A0 003AC6A0*/ PPC::Runtime::ASM::lwz(context->r0, StructValues_28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803AF8A4 003AC6A4*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*803AF8A8 003AC6A8*/ PPC::Runtime::ASM::bne(.L_803AF914);
/*803AF8AC 003AC6AC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_76 @ Get_MemoryOffset_HighBit);
/*803AF8B0 003AC6B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_76 @ Get_MemoryOffset_LowBit);
/*803AF8B4 003AC6B4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803AF8B8 003AC6B8*/ PPC::Runtime::ASM::bl(OSReport);
/*803AF8BC 003AC6BC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_77 @ Get_MemoryOffset_HighBit);
/*803AF8C0 003AC6C0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_77 @ Get_MemoryOffset_LowBit);
/*803AF8C4 003AC6C4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803AF8C8 003AC6C8*/ PPC::Runtime::ASM::bl(OSReport);
/*803AF8CC 003AC6CC*/ PPC::Runtime::ASM::bl(OSGetArenaLo);
/*803AF8D0 003AC6D0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803AF8D4 003AC6D4*/ PPC::Runtime::ASM::bl(OSGetArenaHi);
/*803AF8D8 003AC6D8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803AF8DC 003AC6DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803AF8E0 003AC6E0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803AF8E4 003AC6E4*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*803AF8E8 003AC6E8*/ PPC::Runtime::ASM::bl(fn_OSInitAlloc);
/*803AF8EC 003AC6EC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803AF8F0 003AC6F0*/ PPC::Runtime::ASM::bl(OSSetArenaLo);
/*803AF8F4 003AC6F4*/ PPC::Runtime::ASM::addi(context->r0, context->r31, 0x1f);
/*803AF8F8 003AC6F8*/ PPC::Runtime::ASM::clrrwi(context->r30, context->r30, 5);
/*803AF8FC 003AC6FC*/ PPC::Runtime::ASM::clrrwi(context->r3, context->r0, 5);
/*803AF900 003AC700*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*803AF904 003AC704*/ PPC::Runtime::ASM::bl(fn_OSCreateHeap);
/*803AF908 003AC708*/ PPC::Runtime::ASM::bl(fn_OSSetCurrentHeap);
/*803AF90C 003AC70C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803AF910 003AC710*/ PPC::Runtime::ASM::bl(OSSetArenaLo);
RUNTIME_PPC_JUMP_LABEL(.L_803AF914, 0x803AF914) //this is a jump label
/*803AF914 003AC714*/ PPC::Runtime::ASM::lwz(context->r3, StructValues_28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803AF918 003AC718*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*803AF91C 003AC71C*/ PPC::Runtime::ASM::bl(fn_OSFreeToHeap);
/*803AF920 003AC720*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803AF924 003AC724*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803AF928 003AC728*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803AF92C 003AC72C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AF930 003AC730*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803AF934 003AC734*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803AF938 003AC738*/ PPC::Runtime::ASM::blr();
}