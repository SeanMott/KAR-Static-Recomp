//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025E6A8(PPC::Runtime::GCContext* context)
{
/*8025E6A8 0025B4A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E6AC 0025B4AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E6B0 0025B4B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E6B4 0025B4B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E6B8 0025B4B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025E6BC 0025B4BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E6C0 0025B4C0*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025E6C4 0025B4C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F18 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E6C8 0025B4C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E6CC 0025B4CC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F1C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E6D0 0025B4D0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025E6D4 0025B4D4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E6D8 0025B4D8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E6DC 0025B4DC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E6E0 0025B4E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E6E4 0025B4E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E6E8 0025B4E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E6EC 0025B4EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E6F0 0025B4F0*/ PPC::Runtime::ASM::blr();
}