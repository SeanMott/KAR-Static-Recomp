//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F728C.hpp"
#include "fn_800EA180.hpp"



void fn_8010726C(PPC::Runtime::GCContext* context)
{
/*8010726C 0010406C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80107270 00104070*/ PPC::Runtime::ASM::mflr(context->r0);
/*80107274 00104074*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80107278 00104078*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8010727C 0010407C*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*80107280 00104080*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80107284 00104084*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*80107288 00104088*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010728C 0010408C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80107290 00104090*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80107294 00104094*/ PPC::Runtime::ASM::mr(context->r28, context->r31);
/*80107298 00104098*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010729C 0010409C*/ PPC::Runtime::ASM::b(.L_801072D4);
RUNTIME_PPC_JUMP_LABEL(.L_801072A0, 0x801072A0) //this is a jump label
/*801072A0 001040A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r28));
/*801072A4 001040A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r28));
/*801072A8 001040A8*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r29);
/*801072AC 001040AC*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r29);
/*801072B0 001040B0*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*801072B4 001040B4*/ PPC::Runtime::ASM::beq(.L_801072CC);
/*801072B8 001040B8*/ PPC::Runtime::ASM::bl(fn_800F728C);
/*801072BC 001040BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801072C0 001040C0*/ PPC::Runtime::ASM::bne(.L_801072CC);
/*801072C4 001040C4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r28));
/*801072C8 001040C8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_801072CC, 0x801072CC) //this is a jump label
/*801072CC 001040CC*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x8);
/*801072D0 001040D0*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801072D4, 0x801072D4) //this is a jump label
/*801072D4 001040D4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r27));
/*801072D8 001040D8*/ PPC::Runtime::ASM::cmpw(context->r26, context->r7);
/*801072DC 001040DC*/ PPC::Runtime::ASM::blt(.L_801072A0);
/*801072E0 001040E0*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*801072E4 001040E4*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*801072E8 001040E8*/ PPC::Runtime::ASM::mr(context->r5, context->r8);
/*801072EC 001040EC*/ PPC::Runtime::ASM::mr(context->r4, context->r8);
/*801072F0 001040F0*/ PPC::Runtime::ASM::mtctr(context->r7);
/*801072F4 001040F4*/ PPC::Runtime::ASM::cmpwi(context->r7, 0x0);
/*801072F8 001040F8*/ PPC::Runtime::ASM::ble(.L_80107320);
RUNTIME_PPC_JUMP_LABEL(.L_801072FC, 0x801072FC) //this is a jump label
/*801072FC 001040FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r6));
/*80107300 00104100*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r6));
/*80107304 00104104*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r4);
/*80107308 00104108*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r5);
/*8010730C 0010410C*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*80107310 00104110*/ PPC::Runtime::ASM::bne(.L_80107320);
/*80107314 00104114*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x8);
/*80107318 00104118*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*8010731C 0010411C*/ PPC::Runtime::ASM::bdnz(.L_801072FC);
RUNTIME_PPC_JUMP_LABEL(.L_80107320, 0x80107320) //this is a jump label
/*80107320 00104120*/ PPC::Runtime::ASM::cmpw(context->r8, context->r7);
/*80107324 00104124*/ PPC::Runtime::ASM::bne(.L_80107358);
/*80107328 00104128*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r31));
/*8010732C 0010412C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80107330 00104130*/ PPC::Runtime::ASM::beq(.L_80107350);
/*80107334 00104134*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/* 80107338 00104138  54 00 C0 02 */ extlwi context->r0 , context->r0 , 2 , 24
/*8010733C 0010413C*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 31);
/*80107340 00104140*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80107344 00104144*/ PPC::Runtime::ASM::beq(.L_80107350);
/*80107348 00104148*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*8010734C 0010414C*/ PPC::Runtime::ASM::bl(fn_800EA180);
RUNTIME_PPC_JUMP_LABEL(.L_80107350, 0x80107350) //this is a jump label
/*80107350 00104150*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80107354 00104154*/ PPC::Runtime::ASM::bl(fn_80428F64);
RUNTIME_PPC_JUMP_LABEL(.L_80107358, 0x80107358) //this is a jump label
/*80107358 00104158*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8010735C 0010415C*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*80107360 00104160*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80107364 00104164*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80107368 00104168*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8010736C 0010416C*/ PPC::Runtime::ASM::blr();
}