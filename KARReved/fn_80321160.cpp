//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80321160(PPC::Runtime::GCContext* context)
{
/*80321160 0031DF60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80321164 0031DF64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80321168 0031DF68*/ PPC::Runtime::ASM::lis(context->r4, lbl_804E2018 @ Get_MemoryOffset_HighBit);
/*8032116C 0031DF6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80321170 0031DF70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80321174 0031DF74*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80321178 0031DF78*/ PPC::Runtime::ASM::lwzu(context->r6, lbl_804E2018 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*8032117C 0031DF7C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80321180 0031DF80*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80321184 0031DF84*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80321188 0031DF88*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8032118C 0031DF8C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80321190 0031DF90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80321194 0031DF94*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80321198 0031DF98*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8032119C 0031DF9C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803211A0 0031DFA0*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*803211A4 0031DFA4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803211A8 0031DFA8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803211AC 0031DFAC*/ PPC::Runtime::ASM::b(.L_803211C4);
RUNTIME_PPC_JUMP_LABEL(.L_803211B0, 0x803211B0) //this is a jump label
/*803211B0 0031DFB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803211B4 0031DFB4*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*803211B8 0031DFB8*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*803211BC 0031DFBC*/ PPC::Runtime::ASM::nop();
/*803211C0 0031DFC0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_803211C4, 0x803211C4) //this is a jump label
/*803211C4 0031DFC4*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*803211C8 0031DFC8*/ PPC::Runtime::ASM::bne(.L_803211B0);
/*803211CC 0031DFCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803211D0 0031DFD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803211D4 0031DFD4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803211D8 0031DFD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803211DC 0031DFDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803211E0 0031DFE0*/ PPC::Runtime::ASM::blr();
}