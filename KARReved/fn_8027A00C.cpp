//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_getRuleNum.hpp"
#include "fn_80277C84.hpp"



void fn_8027A00C(PPC::Runtime::GCContext* context)
{
/*8027A00C 00276E0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8027A010 00276E10*/ PPC::Runtime::ASM::mflr(context->r0);
/*8027A014 00276E14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8027A018 00276E18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027A01C 00276E1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8027A020 00276E20*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8027A024 00276E24*/ PPC::Runtime::ASM::mulli(context->r4, context->r30, 0x90);
/*8027A028 00276E28*/ PPC::Runtime::ASM::lis(context->r3, lbl_8055EC58 @ Get_MemoryOffset_HighBit);
/*8027A02C 00276E2C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_8055EC58 @ Get_MemoryOffset_LowBit);
/*8027A030 00276E30*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*8027A034 00276E34*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x28);
/*8027A038 00276E38*/ PPC::Runtime::ASM::bl(fn_getRuleNum);
/*8027A03C 00276E3C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8027A040 00276E40*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*8027A044 00276E44*/ PPC::Runtime::ASM::bne(.L_8027A064);
/*8027A048 00276E48*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/* 8027A04C 00276E4C  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*8027A050 00276E50*/ PPC::Runtime::ASM::beq(.L_8027A064);
/*8027A054 00276E54*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8027A058 00276E58*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8027A05C 00276E5C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8027A060 00276E60*/ PPC::Runtime::ASM::bl(fn_80277C84);
RUNTIME_PPC_JUMP_LABEL(.L_8027A064, 0x8027A064) //this is a jump label
/*8027A064 00276E64*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8027A068 00276E68*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8027A06C 00276E6C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*8027A070 00276E70*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8027A074 00276E74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027A078 00276E78*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8027A07C 00276E7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8027A080 00276E80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8027A084 00276E84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8027A088 00276E88*/ PPC::Runtime::ASM::blr();
}