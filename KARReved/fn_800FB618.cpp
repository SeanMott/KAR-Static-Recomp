//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7954.hpp"
#include "fn_800F7870.hpp"
#include "fn_800FB79C.hpp"



void fn_800FB618(PPC::Runtime::GCContext* context)
{
/*800FB618 000F8418*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800FB61C 000F841C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FB620 000F8420*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FB624 000F8424*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FB628 000F8428*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FB62C 000F842C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FB630 000F8430*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800FB634 000F8434*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800FB638 000F8438*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*800FB63C 000F843C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*800FB640 000F8440*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800FB644 000F8444*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800FB648 000F8448*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FB64C 000F844C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800FB650 000F8450*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FB654 000F8454*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FB658 000F8458*/ PPC::Runtime::ASM::lwzx(context->r27, context->r3, context->r0);
/*800FB65C 000F845C*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*800FB660 000F8460*/ PPC::Runtime::ASM::bne(.L_800FB674);
/*800FB664 000F8464*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6238 @ Get_MemoryOffset_SDA21);
/*800FB668 000F8468*/ PPC::Runtime::ASM::li(context->r4, 0x2ec);
/*800FB66C 000F846C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6240 @ Get_MemoryOffset_SDA21);
/*800FB670 000F8470*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FB674, 0x800FB674) //this is a jump label
/*800FB674 000F8474*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FB678 000F8478*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*800FB67C 000F847C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF8E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB680 000F8480*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800FB684 000F8484*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r27));
/*800FB688 000F8488*/ PPC::Runtime::ASM::fmadds(context->f31, context->f2, context->f1, context->f0);
/*800FB68C 000F848C*/ PPC::Runtime::ASM::bne(.L_800FB6A0);
/*800FB690 000F8490*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6238 @ Get_MemoryOffset_SDA21);
/*800FB694 000F8494*/ PPC::Runtime::ASM::li(context->r4, 0x2a4);
/*800FB698 000F8498*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6240 @ Get_MemoryOffset_SDA21);
/*800FB69C 000F849C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FB6A0, 0x800FB6A0) //this is a jump label
/*800FB6A0 000F84A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800FB6A4 000F84A4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 14, 14);
/*800FB6A8 000F84A8*/ PPC::Runtime::ASM::beq(.L_800FB6C0);
/*800FB6AC 000F84AC*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1002 @ Get_MemoryOffset_HighBit);
/*800FB6B0 000F84B0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6238 @ Get_MemoryOffset_SDA21);
/*800FB6B4 000F84B4*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1002 @ Get_MemoryOffset_LowBit);
/*800FB6B8 000F84B8*/ PPC::Runtime::ASM::li(context->r4, 0x2a5);
/*800FB6BC 000F84BC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FB6C0, 0x800FB6C0) //this is a jump label
/*800FB6C0 000F84C0*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r27));
/*800FB6C4 000F84C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800FB6C8 000F84C8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*800FB6CC 000F84CC*/ PPC::Runtime::ASM::bne(.L_800FB718);
/*800FB6D0 000F84D0*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*800FB6D4 000F84D4*/ PPC::Runtime::ASM::beq(.L_800FB718);
/*800FB6D8 000F84D8*/ PPC::Runtime::ASM::bne(.L_800FB6EC);
/*800FB6DC 000F84DC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6238 @ Get_MemoryOffset_SDA21);
/*800FB6E0 000F84E0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*800FB6E4 000F84E4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6240 @ Get_MemoryOffset_SDA21);
/*800FB6E8 000F84E8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FB6EC, 0x800FB6EC) //this is a jump label
/*800FB6EC 000F84EC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*800FB6F0 000F84F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800FB6F4 000F84F4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*800FB6F8 000F84F8*/ PPC::Runtime::ASM::bne(.L_800FB708);
/*800FB6FC 000F84FC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*800FB700 000F8500*/ PPC::Runtime::ASM::beq(.L_800FB708);
/*800FB704 000F8504*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FB708, 0x800FB708) //this is a jump label
/*800FB708 000F8508*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FB70C 000F850C*/ PPC::Runtime::ASM::bne(.L_800FB718);
/*800FB710 000F8510*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800FB714 000F8514*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_800FB718, 0x800FB718) //this is a jump label
/*800FB718 000F8518*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB71C 000F851C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800FB720 000F8520*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x54);
/*800FB724 000F8524*/ PPC::Runtime::ASM::bl(fn_800D7954);
/*800FB728 000F8528*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FB72C 000F852C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FB730 000F8530*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB734 000F8534*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*800FB738 000F8538*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*800FB73C 000F853C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*800FB740 000F8540*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r29, 7, 24, 24);
/*800FB744 000F8544*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*800FB748 000F8548*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*800FB74C 000F854C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 6, 25, 25);
/*800FB750 000F8550*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*800FB754 000F8554*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FB758 000F8558*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800FB75C 000F855C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800FB760 000F8560*/ PPC::Runtime::ASM::beq(.L_800FB774);
/*800FB764 000F8564*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FB768 000F8568*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FB76C 000F856C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FB770 000F8570*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_800FB774, 0x800FB774) //this is a jump label
/*800FB774 000F8574*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FB778 000F8578*/ PPC::Runtime::ASM::bl(fn_800FB79C);
/*800FB77C 000F857C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FB780 000F8580*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FB784 000F8584*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FB788 000F8588*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800FB78C 000F858C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FB790 000F8590*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FB794 000F8594*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800FB798 000F8598*/ PPC::Runtime::ASM::blr();
}