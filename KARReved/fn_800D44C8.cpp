//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D44C8(PPC::Runtime::GCContext* context)
{
/*800D44C8 000D12C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800D44CC 000D12CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D44D0 000D12D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D44D4 000D12D4*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D44D8 000D12D8*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D44DC 000D12DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D44E0 000D12E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D44E4 000D12E4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D44E8 000D12E8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D44EC 000D12EC*/ PPC::Runtime::ASM::lwz(context->r28, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D44F0 000D12F0*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D44F4 000D12F4*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800D44F8 000D12F8*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1805DD6C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D44FC 000D12FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800D4500 000D1300*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D4504 000D1304*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D4508 000D1308*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D450C 000D130C*/ PPC::Runtime::ASM::bne(.L_800D4520);
/*800D4510 000D1310*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D4514 000D1314*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x66c);
/*800D4518 000D1318*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D451C 000D131C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4520, 0x800D4520) //this is a jump label
/*800D4520 000D1320*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D4524 000D1324*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800D4528 000D1328*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D452C 000D132C*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800D4530 000D1330*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D4534 000D1334  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D4538 000D1338*/ PPC::Runtime::ASM::beq(.L_800D4568);
/*800D453C 000D133C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800D4540 000D1340*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D4544 000D1344*/ PPC::Runtime::ASM::beq(.L_800D4550);
/*800D4548 000D1348*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D454C 000D134C*/ PPC::Runtime::ASM::b(.L_800D4554);
RUNTIME_PPC_JUMP_LABEL(.L_800D4550, 0x800D4550) //this is a jump label
/*800D4550 000D1350*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D4554, 0x800D4554) //this is a jump label
/*800D4554 000D1354*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800D4558 000D1358*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D455C 000D135C*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D4560 000D1360*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D4564 000D1364*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D4568, 0x800D4568) //this is a jump label
/*800D4568 000D1368*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D456C 000D136C*/ PPC::Runtime::ASM::bne(.L_800D4590);
/*800D4570 000D1370*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D4574 000D1374*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x67c);
/*800D4578 000D1378*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D457C 000D137C*/ PPC::Runtime::ASM::bl(OSReport);
/*800D4580 000D1380*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D4584 000D1384*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x68c);
/*800D4588 000D1388*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D458C 000D138C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4590, 0x800D4590) //this is a jump label
/*800D4590 000D1390*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800D4594 000D1394*/ PPC::Runtime::ASM::slwi(context->r3, context->r29, 2);
/*800D4598 000D1398*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D459C 000D139C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D45A0 000D13A0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D45A4 000D13A4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f31);
/*800D45A8 000D13A8*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r3);
/*800D45AC 000D13AC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D45B0 000D13B0*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D45B4 000D13B4*/ PPC::Runtime::ASM::bne(.L_800D45CC);
/*800D45B8 000D13B8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D45BC 000D13BC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D45C0 000D13C0*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D45C4 000D13C4*/ PPC::Runtime::ASM::bne(.L_800D45CC);
/*800D45C8 000D13C8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D45CC, 0x800D45CC) //this is a jump label
/*800D45CC 000D13CC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D45D0 000D13D0*/ PPC::Runtime::ASM::bne(.L_800D45E4);
/*800D45D4 000D13D4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x6dc);
/*800D45D8 000D13D8*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D45DC 000D13DC*/ PPC::Runtime::ASM::li(context->r4, 0xc11);
/*800D45E0 000D13E0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D45E4, 0x800D45E4) //this is a jump label
/*800D45E4 000D13E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*800D45E8 000D13E8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D45EC 000D13EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D45F0 000D13F0*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*800D45F4 000D13F4*/ PPC::Runtime::ASM::beq(.L_800D4608);
/*800D45F8 000D13F8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x76c);
/*800D45FC 000D13FC*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D4600 000D1400*/ PPC::Runtime::ASM::li(context->r4, 0xc12);
/*800D4604 000D1404*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4608, 0x800D4608) //this is a jump label
/*800D4608 000D1408*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800D460C 000D140C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800D4610 000D1410*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*800D4614 000D1414*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800D4618 000D1418*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800D461C 000D141C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800D4620 000D1420*/ PPC::Runtime::ASM::ble(.L_800D4640);
RUNTIME_PPC_JUMP_LABEL(.L_800D4624, 0x800D4624) //this is a jump label
/*800D4624 000D1424*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r28));
/*800D4628 000D1428*/ PPC::Runtime::ASM::lfsx(context->f0, context->r3, context->r5);
/*800D462C 000D142C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D4630 000D1430*/ PPC::Runtime::ASM::blt(.L_800D4640);
/*800D4634 000D1434*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x8);
/*800D4638 000D1438*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
/*800D463C 000D143C*/ PPC::Runtime::ASM::bdnz(.L_800D4624);
RUNTIME_PPC_JUMP_LABEL(.L_800D4640, 0x800D4640) //this is a jump label
/*800D4640 000D1440*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r28));
/*800D4644 000D1444*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*800D4648 000D1448*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800D464C 000D144C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x4, context->r3));
/*800D4650 000D1450*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x1c);
/*800D4654 000D1454*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*800D4658 000D1458*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D465C 000D145C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D4660 000D1460*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D4664 000D1464*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D4668 000D1468*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D466C 000D146C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D4670 000D1470*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D4674 000D1474*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D4678 000D1478*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D467C 000D147C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800D4680 000D1480*/ PPC::Runtime::ASM::blr();
}