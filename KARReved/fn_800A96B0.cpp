//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A1680.hpp"



void fn_800A96B0(PPC::Runtime::GCContext* context)
{
/*800A96B0 000A64B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800A96B4 000A64B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A96B8 000A64B8*/ PPC::Runtime::ASM::mr(context->r6, context->r4);
/*800A96BC 000A64BC*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*800A96C0 000A64C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A96C4 000A64C4*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800A96C8 000A64C8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A96CC 000A64CC*/ PPC::Runtime::ASM::bl(fn_800A1680);
/*800A96D0 000A64D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A96D4 000A64D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A96D8 000A64D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800A96DC 000A64DC*/ PPC::Runtime::ASM::blr();
}