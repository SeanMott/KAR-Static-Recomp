//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "memcpy.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_IPGetAddr2(PPC::Runtime::GCContext* context)
{
/*8046D86C 0046A66C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046D870 0046A670*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8046D874 0046A674*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046D878 0046A678*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8046D87C 0046A67C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046D880 0046A680*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046D884 0046A684*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8046D888 0046A688*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*8046D88C 0046A68C*/ PPC::Runtime::ASM::beq(.L_8046D898);
/*8046D890 0046A690*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8046D894 0046A694*/ PPC::Runtime::ASM::b(.L_8046D8A0);
RUNTIME_PPC_JUMP_LABEL(.L_8046D898, 0x8046D898) //this is a jump label
/*8046D898 0046A698*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_1805BDD20 @ Get_MemoryOffset_HighBit);
/*8046D89C 0046A69C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, STRUCT_BYTE4_COUNT_1805BDD20 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_8046D8A0, 0x8046D8A0) //this is a jump label
/*8046D8A0 0046A6A0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8046D8A4 0046A6A4*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*8046D8A8 0046A6A8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*8046D8AC 0046A6AC*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x54);
/*8046D8B0 0046A6B0*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8046D8B4 0046A6B4*/ PPC::Runtime::ASM::bl(memcpy);
/*8046D8B8 0046A6B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8046D8BC 0046A6BC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8046D8C0 0046A6C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046D8C4 0046A6C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046D8C8 0046A6C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046D8CC 0046A6CC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8046D8D0 0046A6D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8046D8D4 0046A6D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046D8D8 0046A6D8*/ PPC::Runtime::ASM::blr();
}