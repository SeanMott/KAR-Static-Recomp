//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_setVerticalRegs.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_VISetBlack(PPC::Runtime::GCContext* context)
{
/*803DF384 003DC184*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DF388 003DC188*/ PPC::Runtime::ASM::lis(context->r4, lbl_SoundBufferEntryRegs @ Get_MemoryOffset_HighBit);
/*803DF38C 003DC18C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DF390 003DC190*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803DF394 003DC194*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DF398 003DC198*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_SoundBufferEntryRegs @ Get_MemoryOffset_LowBit);
/*803DF39C 003DC19C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803DF3A0 003DC1A0*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803DF3A4 003DC1A4*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803DF3A8 003DC1A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*803DF3AC 003DC1AC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803DF3B0 003DC1B0*/ PPC::Runtime::ASM::lwz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*803DF3B4 003DC1B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*803DF3B8 003DC1B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803DF3BC 003DC1BC*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfa, context->r31));
/*803DF3C0 003DC1C0*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf6, context->r31));
/*803DF3C4 003DC1C4*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*803DF3C8 003DC1C8*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r10));
/*803DF3CC 003DC1CC*/ PPC::Runtime::ASM::lhz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r10));
/*803DF3D0 003DC1D0*/ PPC::Runtime::ASM::lhz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r10));
/*803DF3D4 003DC1D4*/ PPC::Runtime::ASM::lhz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*803DF3D8 003DC1D8*/ PPC::Runtime::ASM::lhz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r10));
/*803DF3DC 003DC1DC*/ PPC::Runtime::ASM::bl(fn_setVerticalRegs);
/*803DF3E0 003DC1E0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803DF3E4 003DC1E4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803DF3E8 003DC1E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803DF3EC 003DC1EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DF3F0 003DC1F0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803DF3F4 003DC1F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803DF3F8 003DC1F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DF3FC 003DC1FC*/ PPC::Runtime::ASM::blr();
}