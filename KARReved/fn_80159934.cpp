//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80159934(PPC::Runtime::GCContext* context)
{
/*80159934 00156734*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80159938 00156738*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015993C 0015673C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80159940 00156740*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80159944 00156744*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80159948 00156748*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015994C 0015674C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80159950 00156750*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80159954, 0x80159954) //this is a jump label
/*80159954 00156754*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80159958 00156758*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015995C 0015675C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80159960 00156760*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80159964 00156764*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x79c, context->r30));
/*80159968 00156768*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015996C 0015676C*/ PPC::Runtime::ASM::beq(.L_80159978);
/*80159970 00156770*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80159974 00156774*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x79c, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80159978, 0x80159978) //this is a jump label
/*80159978 00156778*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015997C 0015677C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80159980 00156780*/ PPC::Runtime::ASM::blt(.L_80159954);
/*80159984 00156784*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80159988 00156788*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015998C 0015678C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80159990 00156790*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80159994 00156794*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80159998 00156798*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015999C 0015679C*/ PPC::Runtime::ASM::blr();
}