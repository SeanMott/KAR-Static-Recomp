//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8023F4E4.hpp"
#include "fn_8023F4E4.hpp"



void fn_80240084(PPC::Runtime::GCContext* context)
{
/*80240084 0023CE84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80240088 0023CE88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8024008C 0023CE8C*/ PPC::Runtime::ASM::lis(context->r4, lbl_8055DA08 @ Get_MemoryOffset_HighBit);
/*80240090 0023CE90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80240094 0023CE94*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80240098 0023CE98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8024009C 0023CE9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*802400A0 0023CEA0*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_8055DA08 @ Get_MemoryOffset_LowBit);
/*802400A4 0023CEA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802400A8 0023CEA8*/ PPC::Runtime::ASM::bl(fn_ExPPC_UnwindStack);
/*802400AC 0023CEAC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*802400B0 0023CEB0*/ PPC::Runtime::ASM::bne(.L_802400DC);
/*802400B4 0023CEB4*/ PPC::Runtime::ASM::lis(context->r3, fn_8023F4E4 @ Get_MemoryOffset_HighBit);
/*802400B8 0023CEB8*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*802400BC 0023CEBC*/ PPC::Runtime::ASM::addi(context->r6, context->r3, fn_8023F4E4 @ Get_MemoryOffset_LowBit);
/*802400C0 0023CEC0*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x8);
/*802400C4 0023CEC4*/ PPC::Runtime::ASM::subi(context->r5, context->r4, 0x1);
/*802400C8 0023CEC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802400CC 0023CECC*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*802400D0 0023CED0*/ PPC::Runtime::ASM::li(context->r7, 0x2);
/*802400D4 0023CED4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*802400D8 0023CED8*/ PPC::Runtime::ASM::bl(fn_803FCDB8);
RUNTIME_PPC_JUMP_LABEL(.L_802400DC, 0x802400DC) //this is a jump label
/*802400DC 0023CEDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802400E0 0023CEE0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*802400E4 0023CEE4*/ PPC::Runtime::ASM::beq(.L_802400FC);
/*802400E8 0023CEE8*/ PPC::Runtime::ASM::bl(fn_HSD_AObjGetFlags);
/*802400EC 0023CEEC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 1, 2);
/*802400F0 0023CEF0*/ PPC::Runtime::ASM::bne(.L_802400FC);
/*802400F4 0023CEF4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802400F8 0023CEF8*/ PPC::Runtime::ASM::b(.L_80240100);
RUNTIME_PPC_JUMP_LABEL(.L_802400FC, 0x802400FC) //this is a jump label
/*802400FC 0023CEFC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80240100, 0x80240100) //this is a jump label
/*80240100 0023CF00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80240104 0023CF04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80240108 0023CF08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8024010C 0023CF0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80240110 0023CF10*/ PPC::Runtime::ASM::blr();
}