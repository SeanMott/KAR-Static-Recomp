//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000C488.hpp"
#include "fn_8000C488.hpp"
#include "fn_8000DAA0.hpp"
#include "fn_8000B9DC.hpp"



void fn_8000DBE8(PPC::Runtime::GCContext* context)
{
/*8000DBE8 0000A9E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8000DBEC 0000A9EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000DBF0 0000A9F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000DBF4 0000A9F4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8000DBF8 0000A9F8*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*8000DBFC 0000A9FC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000DC00 0000AA00*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8000DC04 0000AA04*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000DC08 0000AA08*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000DC0C 0000AA0C*/ PPC::Runtime::ASM::addi(context->r29, context->r31, 0xac8);
/*8000DC10 0000AA10*/ PPC::Runtime::ASM::addi(context->r30, context->r1, 0x8);
/*8000DC14 0000AA14*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8000DC18 0000AA18*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r1));
/*8000DC1C 0000AA1C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r1));
/*8000DC20 0000AA20*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb, context->r1));
/*8000DC24 0000AA24*/ PPC::Runtime::ASM::bl(fn_8000C488);
/*8000DC28 0000AA28*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8000DC2C 0000AA2C*/ PPC::Runtime::ASM::beq(.L_8000DC84);
/*8000DC30 0000AA30*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*8000DC34 0000AA34*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8000DC38 0000AA38*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*8000DC3C 0000AA3C*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*8000DC40 0000AA40*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8000DC44 0000AA44*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8000DC48 0000AA48*/ PPC::Runtime::ASM::cmpw(context->r28, context->r27);
/*8000DC4C 0000AA4C*/ PPC::Runtime::ASM::blt(.L_8000DC54);
/*8000DC50 0000AA50*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000DC54, 0x8000DC54) //this is a jump label
/*8000DC54 0000AA54*/ PPC::Runtime::ASM::mulli(context->r0, context->r27, 0x30);
/*8000DC58 0000AA58*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8000DC5C 0000AA5C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8000DC60 0000AA60*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8000DC64 0000AA64*/ PPC::Runtime::ASM::stbx(context->r5, context->r4, context->r27);
/*8000DC68 0000AA68*/ PPC::Runtime::ASM::add(context->r4, context->r29, context->r0);
/*8000DC6C 0000AA6C*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r4));
/*8000DC70 0000AA70*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8000DC74 0000AA74*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*8000DC78 0000AA78*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r4));
/*8000DC7C 0000AA7C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8000DC80 0000AA80*/ PPC::Runtime::ASM::b(.L_8000DC90);
RUNTIME_PPC_JUMP_LABEL(.L_8000DC84, 0x8000DC84) //this is a jump label
/*8000DC84 0000AA84*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*8000DC88 0000AA88*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8000DC8C 0000AA8C*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8000DC90, 0x8000DC90) //this is a jump label
/*8000DC90 0000AA90*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*8000DC94 0000AA94*/ PPC::Runtime::ASM::bl(fn_8000C488);
/*8000DC98 0000AA98*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8000DC9C 0000AA9C*/ PPC::Runtime::ASM::beq(.L_8000DCE0);
/*8000DCA0 0000AAA0*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*8000DCA4 0000AAA4*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8000DCA8 0000AAA8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8000DCAC 0000AAAC*/ PPC::Runtime::ASM::bne(.L_8000DCE0);
/*8000DCB0 0000AAB0*/ PPC::Runtime::ASM::mulli(context->r4, context->r28, 0x30);
/*8000DCB4 0000AAB4*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*8000DCB8 0000AAB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8000DCBC 0000AABC*/ PPC::Runtime::ASM::li(context->r0, 0x12);
/*8000DCC0 0000AAC0*/ PPC::Runtime::ASM::add(context->r4, context->r29, context->r4);
/*8000DCC4 0000AAC4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*8000DCC8 0000AAC8*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r4));
/*8000DCCC 0000AACC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8000DCD0 0000AAD0*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*8000DCD4 0000AAD4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r4));
/*8000DCD8 0000AAD8*/ PPC::Runtime::ASM::stbx(context->r5, context->r6, context->r28);
/*8000DCDC 0000AADC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8000DCE0, 0x8000DCE0) //this is a jump label
/*8000DCE0 0000AAE0*/ PPC::Runtime::ASM::mr(context->r27, context->r29);
/*8000DCE4 0000AAE4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8000DCE8 0000AAE8*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8000DCEC, 0x8000DCEC) //this is a jump label
/*8000DCEC 0000AAEC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8000DCF0 0000AAF0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8000DCF4 0000AAF4*/ PPC::Runtime::ASM::bne(.L_8000DD18);
/*8000DCF8 0000AAF8*/ PPC::Runtime::ASM::bl(fn_8000DAA0);
/*8000DCFC 0000AAFC*/ PPC::Runtime::ASM::bl(fn_8000B9DC);
/*8000DD00 0000AB00*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r3));
/*8000DD04 0000AB04*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*8000DD08 0000AB08*/ PPC::Runtime::ASM::stb(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r27));
/*8000DD0C 0000AB0C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r27));
/*8000DD10 0000AB10*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r27));
/*8000DD14 0000AB14*/ PPC::Runtime::ASM::stb(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_8000DD18, 0x8000DD18) //this is a jump label
/*8000DD18 0000AB18*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8000DD1C 0000AB1C*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x30);
/*8000DD20 0000AB20*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8000DD24 0000AB24*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8000DD28 0000AB28*/ PPC::Runtime::ASM::blt(.L_8000DCEC);
/*8000DD2C 0000AB2C*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*8000DD30 0000AB30*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8000DD34 0000AB34*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa95, context->r31));
/*8000DD38 0000AB38*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8000DD3C 0000AB3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000DD40 0000AB40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000DD44 0000AB44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8000DD48 0000AB48*/ PPC::Runtime::ASM::blr();
}