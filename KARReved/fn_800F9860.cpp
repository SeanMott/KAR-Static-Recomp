//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F75B4.hpp"
#include "fn_800F7930.hpp"



void fn_800F9860(PPC::Runtime::GCContext* context)
{
/*800F9860 000F6660*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F9864 000F6664*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9868 000F6668*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F986C 000F666C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9870 000F6670*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9874 000F6674*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9878 000F6678*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800F987C 000F667C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9880 000F6680*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F9884 000F6684*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/* 800F9888 000F6688  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800F988C 000F668C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F9890 000F6690*/ PPC::Runtime::ASM::beq(.L_800F98A8);
/*800F9894 000F6694*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800F9898 000F6698*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800F989C 000F669C*/ PPC::Runtime::ASM::beq(.L_800F98A8);
/*800F98A0 000F66A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F98A4 000F66A4*/ PPC::Runtime::ASM::bl(fn_800F75B4);
RUNTIME_PPC_JUMP_LABEL(.L_800F98A8, 0x800F98A8) //this is a jump label
/*800F98A8 000F66A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F98AC 000F66AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F98B0 000F66B0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F98B4 000F66B4*/ PPC::Runtime::ASM::beq(.L_800F98C4);
/*800F98B8 000F66B8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F98BC 000F66BC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F98C0 000F66C0*/ PPC::Runtime::ASM::bl(fn_800F7930);
RUNTIME_PPC_JUMP_LABEL(.L_800F98C4, 0x800F98C4) //this is a jump label
/*800F98C4 000F66C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F98C8 000F66C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F98CC 000F66CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F98D0 000F66D0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F98D4 000F66D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F98D8 000F66D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F98DC 000F66DC*/ PPC::Runtime::ASM::blr();
}