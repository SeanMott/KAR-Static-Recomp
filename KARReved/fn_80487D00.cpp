//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803DA558.hpp"



void fn_80487D00(PPC::Runtime::GCContext* context)
{
/*80487D00 00484B00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80487D04 00484B04*/ PPC::Runtime::ASM::mflr(context->r0);
/*80487D08 00484B08*/ PPC::Runtime::ASM::lis(context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_HighBit);
/*80487D0C 00484B0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80487D10 00484B10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80487D14 00484B14*/ PPC::Runtime::ASM::addi(context->r31, context->r3, SKIP_ADDRESS_1 @ Get_MemoryOffset_LowBit);
/*80487D18 00484B18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*80487D1C 00484B1C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80487D20 00484B20*/ PPC::Runtime::ASM::bne(.L_80487D38);
/*80487D24 00484B24*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x110);
/*80487D28 00484B28*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80487D2C 00484B2C*/ PPC::Runtime::ASM::bl(fn_803DA558);
/*80487D30 00484B30*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80487D34 00484B34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80487D38, 0x80487D38) //this is a jump label
/*80487D38 00484B38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80487D3C 00484B3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80487D40 00484B40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80487D44 00484B44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80487D48 00484B48*/ PPC::Runtime::ASM::blr();
}