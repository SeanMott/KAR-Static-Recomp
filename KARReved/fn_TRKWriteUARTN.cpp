//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_TRKWriteUARTN(PPC::Runtime::GCContext* context)
{
/*803C23C4 003BF1C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803C23C8 003BF1C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C23CC 003BF1CC*/ PPC::Runtime::ASM::lis(context->r5, gDBCommTable @ Get_MemoryOffset_HighBit);
/*803C23D0 003BF1D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C23D4 003BF1D4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, gDBCommTable @ Get_MemoryOffset_LowBit);
/*803C23D8 003BF1D8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r5));
/*803C23DC 003BF1DC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*803C23E0 003BF1E0*/ PPC::Runtime::ASM::bctrl();
/*803C23E4 003BF1E4*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*803C23E8 003BF1E8*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*803C23EC 003BF1EC*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 31);
/*803C23F0 003BF1F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C23F4 003BF1F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C23F8 003BF1F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803C23FC 003BF1FC*/ PPC::Runtime::ASM::blr();
}