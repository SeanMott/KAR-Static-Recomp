//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "lbl_805699F4.hpp"
#include "lbl_805699F4.hpp"
#include "fn_80388190.hpp"
#include "lbl_805699F4.hpp"
#include "fn_803881A8.hpp"
#include "lbl_805699E8.hpp"
#include "lbl_805699F4.hpp"
#include "fn_803881A8.hpp"
#include "lbl_805699E8.hpp"
#include "__register_global_object.hpp"



void fn_8038814C(PPC::Runtime::GCContext* context)
{
/*8038814C 00384F4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80388150 00384F50*/ PPC::Runtime::ASM::mflr(context->r0);
/*80388154 00384F54*/ PPC::Runtime::ASM::lis(context->r3, lbl_805699F4 @ Get_MemoryOffset_HighBit);
/*80388158 00384F58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038815C 00384F5C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805699F4 @ Get_MemoryOffset_LowBit);
/*80388160 00384F60*/ PPC::Runtime::ASM::bl(fn_80388190);
/*80388164 00384F64*/ PPC::Runtime::ASM::lis(context->r3, lbl_805699F4 @ Get_MemoryOffset_HighBit);
/*80388168 00384F68*/ PPC::Runtime::ASM::lis(context->r4, fn_803881A8 @ Get_MemoryOffset_HighBit);
/*8038816C 00384F6C*/ PPC::Runtime::ASM::lis(context->r5, lbl_805699E8 @ Get_MemoryOffset_HighBit);
/*80388170 00384F70*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805699F4 @ Get_MemoryOffset_LowBit);
/*80388174 00384F74*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_803881A8 @ Get_MemoryOffset_LowBit);
/*80388178 00384F78*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_805699E8 @ Get_MemoryOffset_LowBit);
/*8038817C 00384F7C*/ PPC::Runtime::ASM::bl(__register_global_object);
/*80388180 00384F80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80388184 00384F84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80388188 00384F88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8038818C 00384F8C*/ PPC::Runtime::ASM::blr();
}