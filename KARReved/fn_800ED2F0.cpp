//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800ED2F0(PPC::Runtime::GCContext* context)
{
/*800ED2F0 000EA0F0*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DD6E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ED2F4 000EA0F4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800ED2F8 000EA0F8*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*800ED2FC 000EA0FC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r6));
/*800ED300 000EA100*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*800ED304 000EA104*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r6));
/*800ED308 000EA108*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r6));
/* 800ED30C 000EA10C  54 A0 D7 FF */ extrwi. context->r0 , context->r5 , 1 , 25
/*800ED310 000EA110*/ PPC::Runtime::ASM::beq(.L_800ED33C);
/*800ED314 000EA114*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r6));
/*800ED318 000EA118*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800ED31C 000EA11C*/ PPC::Runtime::ASM::add(context->r4, context->r6, context->r0);
/*800ED320 000EA120*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r4));
/*800ED324 000EA124*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800ED328 000EA128*/ PPC::Runtime::ASM::ble(.L_800ED33C);
/*800ED32C 000EA12C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800ED330 000EA130*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*800ED334 000EA134*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r0, 7, 24, 24);
/*800ED338 000EA138*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_800ED33C, 0x800ED33C) //this is a jump label
/*800ED33C 000EA13C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r6));
/*800ED340 000EA140*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800ED344 000EA144*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*800ED348 000EA148*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r6));
/*800ED34C 000EA14C*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r6));
/* 800ED350 000EA150  54 A0 D7 FF */ extrwi. context->r0 , context->r5 , 1 , 25
/*800ED354 000EA154*/ PPC::Runtime::ASM::beqlr();
/*800ED358 000EA158*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*800ED35C 000EA15C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800ED360 000EA160*/ PPC::Runtime::ASM::add(context->r4, context->r6, context->r0);
/*800ED364 000EA164*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800ED368 000EA168*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/* 800ED36C 000EA16C  4C 81 00 20 */ blelr
/*800ED370 000EA170*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800ED374 000EA174*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*800ED378 000EA178*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r0, 7, 24, 24);
/*800ED37C 000EA17C*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r6));
/*800ED380 000EA180*/ PPC::Runtime::ASM::blr();
}