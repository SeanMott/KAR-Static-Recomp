//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E918C.hpp"
#include "fn_800E9958.hpp"
#include "fn_800E92CC.hpp"
#include "fn_8024A86C.hpp"
#include "fn_8006F93C.hpp"
#include "fn_800E918C.hpp"



void fn_800E8CC0(PPC::Runtime::GCContext* context)
{
/*800E8CC0 000E5AC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*800E8CC4 000E5AC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E8CC8 000E5AC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800E8CCC 000E5ACC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x60);
/*800E8CD0 000E5AD0*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800E8CD4 000E5AD4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x454);
/*800E8CD8 000E5AD8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E8CDC 000E5ADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800E8CE0 000E5AE0*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800E8CE4 000E5AE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r3));
/*800E8CE8 000E5AE8*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800E8CEC 000E5AEC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E8CF0 000E5AF0*/ PPC::Runtime::ASM::beq(.L_800E8E04);
/*800E8CF4 000E5AF4*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800E8CF8 000E5AF8*/ PPC::Runtime::ASM::b(.L_800E8D10);
RUNTIME_PPC_JUMP_LABEL(.L_800E8CFC, 0x800E8CFC) //this is a jump label
/*800E8CFC 000E5AFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8D00 000E5B00*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800E8D04 000E5B04*/ PPC::Runtime::ASM::bl(fn_800E918C);
/*800E8D08 000E5B08*/ PPC::Runtime::ASM::add(context->r26, context->r26, context->r3);
/*800E8D0C 000E5B0C*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8D10, 0x800E8D10) //this is a jump label
/*800E8D10 000E5B10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800E8D14 000E5B14*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E8D18 000E5B18*/ PPC::Runtime::ASM::beq(.L_800E8D24);
/*800E8D1C 000E5B1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E8D20 000E5B20*/ PPC::Runtime::ASM::b(.L_800E8D28);
RUNTIME_PPC_JUMP_LABEL(.L_800E8D24, 0x800E8D24) //this is a jump label
/*800E8D24 000E5B24*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E8D28, 0x800E8D28) //this is a jump label
/*800E8D28 000E5B28*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800E8D2C 000E5B2C*/ PPC::Runtime::ASM::blt(.L_800E8CFC);
/*800E8D30 000E5B30*/ PPC::Runtime::ASM::slwi(context->r3, context->r26, 2);
/*800E8D34 000E5B34*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800E8D38 000E5B38*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800E8D3C 000E5B3C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800E8D40 000E5B40*/ PPC::Runtime::ASM::mr(context->r28, context->r27);
/*800E8D44 000E5B44*/ PPC::Runtime::ASM::b(.L_800E8DE4);
RUNTIME_PPC_JUMP_LABEL(.L_800E8D48, 0x800E8D48) //this is a jump label
/*800E8D48 000E5B48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8D4C 000E5B4C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800E8D50 000E5B50*/ PPC::Runtime::ASM::bl(fn_800E9958);
/*800E8D54 000E5B54*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E8D58 000E5B58*/ PPC::Runtime::ASM::bne(.L_800E8DE0);
/*800E8D5C 000E5B5C*/ PPC::Runtime::ASM::mr(context->r29, context->r28);
/*800E8D60 000E5B60*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800E8D64 000E5B64*/ PPC::Runtime::ASM::b(.L_800E8DCC);
RUNTIME_PPC_JUMP_LABEL(.L_800E8D68, 0x800E8D68) //this is a jump label
/*800E8D68 000E5B68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8D6C 000E5B6C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800E8D70 000E5B70*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*800E8D74 000E5B74*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800E8D78 000E5B78*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x14);
/*800E8D7C 000E5B7C*/ PPC::Runtime::ASM::bl(fn_800E92CC);
/*800E8D80 000E5B80*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800E8D84 000E5B84*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800E8D88 000E5B88*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x20);
/*800E8D8C 000E5B8C*/ PPC::Runtime::ASM::bl(fn_8024A86C);
/*800E8D90 000E5B90*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800E8D94 000E5B94*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r25, 16);
/*800E8D98 000E5B98*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x20);
/*800E8D9C 000E5B9C*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*800E8DA0 000E5BA0*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*800E8DA4 000E5BA4*/ PPC::Runtime::ASM::bl(fn_8006F93C);
/*800E8DA8 000E5BA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800E8DAC 000E5BAC*/ PPC::Runtime::ASM::addi(context->r0, context->r29, 0x2);
/*800E8DB0 000E5BB0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x4);
/*800E8DB4 000E5BB4*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
/*800E8DB8 000E5BB8*/ PPC::Runtime::ASM::sthx(context->r27, context->r3, context->r29);
/*800E8DBC 000E5BBC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*800E8DC0 000E5BC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800E8DC4 000E5BC4*/ PPC::Runtime::ASM::sthx(context->r26, context->r3, context->r0);
/*800E8DC8 000E5BC8*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8DCC, 0x800E8DCC) //this is a jump label
/*800E8DCC 000E5BCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8DD0 000E5BD0*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800E8DD4 000E5BD4*/ PPC::Runtime::ASM::bl(fn_800E918C);
/*800E8DD8 000E5BD8*/ PPC::Runtime::ASM::cmpw(context->r26, context->r3);
/*800E8DDC 000E5BDC*/ PPC::Runtime::ASM::blt(.L_800E8D68);
RUNTIME_PPC_JUMP_LABEL(.L_800E8DE0, 0x800E8DE0) //this is a jump label
/*800E8DE0 000E5BE0*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8DE4, 0x800E8DE4) //this is a jump label
/*800E8DE4 000E5BE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800E8DE8 000E5BE8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E8DEC 000E5BEC*/ PPC::Runtime::ASM::beq(.L_800E8DF8);
/*800E8DF0 000E5BF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E8DF4 000E5BF4*/ PPC::Runtime::ASM::b(.L_800E8DFC);
RUNTIME_PPC_JUMP_LABEL(.L_800E8DF8, 0x800E8DF8) //this is a jump label
/*800E8DF8 000E5BF8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E8DFC, 0x800E8DFC) //this is a jump label
/*800E8DFC 000E5BFC*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800E8E00 000E5C00*/ PPC::Runtime::ASM::blt(.L_800E8D48);
RUNTIME_PPC_JUMP_LABEL(.L_800E8E04, 0x800E8E04) //this is a jump label
/*800E8E04 000E5C04*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x60);
/*800E8E08 000E5C08*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800E8E0C 000E5C0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800E8E10 000E5C10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E8E14 000E5C14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*800E8E18 000E5C18*/ PPC::Runtime::ASM::blr();
}