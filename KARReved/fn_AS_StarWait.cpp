//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801918BC.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_8019F980.hpp"



void fn_AS_StarWait(PPC::Runtime::GCContext* context)
{
/*801AB1A0 001A7FA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AB1A4 001A7FA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AB1A8 001A7FA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AB1AC 001A7FAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AB1B0 001A7FB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AB1B4 001A7FB4*/ PPC::Runtime::ASM::bl(fn_801918BC);
/*801AB1B8 001A7FB8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E13B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AB1BC 001A7FBC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB1C0 001A7FC0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E13B4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AB1C4 001A7FC4*/ PPC::Runtime::ASM::li(context->r4, 0x21);
/*801AB1C8 001A7FC8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801AB1CC 001A7FCC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801AB1D0 001A7FD0*/ PPC::Runtime::ASM::li(context->r6, 0x40);
/*801AB1D4 001A7FD4*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801AB1D8 001A7FD8*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*801AB1DC 001A7FDC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AB1E0 001A7FE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x464, context->r31));
/*801AB1E4 001A7FE4*/ PPC::Runtime::ASM::bl(fn_8019F980);
/*801AB1E8 001A7FE8*/ PPC::Runtime::ASM::li(context->r0, 0xfe);
/*801AB1EC 001A7FEC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa41, context->r31));
/*801AB1F0 001A7FF0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa40, context->r31));
/*801AB1F4 001A7FF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801AB1F8 001A7FF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*801AB1FC 001A7FFC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa42, context->r31));
/*801AB200 001A8000*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AB204 001A8004*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AB208 001A8008*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AB20C 001A800C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AB210 001A8010*/ PPC::Runtime::ASM::blr();
}