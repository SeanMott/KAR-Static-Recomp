//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800C3510.hpp"



void fn_800C4050(PPC::Runtime::GCContext* context)
{
/*800C4050 000C0E50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800C4054 000C0E54*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C4058 000C0E58*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_26 @ Get_MemoryOffset_HighBit);
/*800C405C 000C0E5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800C4060 000C0E60*/ PPC::Runtime::ASM::addi(context->r7, context->r5, MemoryOffset_26 @ Get_MemoryOffset_LowBit);
/*800C4064 000C0E64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800C4068 000C0E68*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800C406C 000C0E6C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r4));
/*800C4070 000C0E70*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800C4074 000C0E74*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/* 800C4078 000C0E78  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*800C407C 000C0E7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r7));
/*800C4080 000C0E80*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C4084 000C0E84*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C4088 000C0E88*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800C408C 000C0E8C*/ PPC::Runtime::ASM::bne(.L_800C409C);
/*800C4090 000C0E90*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C4094 000C0E94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C4098 000C0E98*/ PPC::Runtime::ASM::b(.L_800C40B8);
RUNTIME_PPC_JUMP_LABEL(.L_800C409C, 0x800C409C) //this is a jump label
/*800C409C 000C0E9C*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800C40A0 000C0EA0*/ PPC::Runtime::ASM::bl(fn_800C3510);
/*800C40A4 000C0EA4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*800C40A8 000C0EA8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C40AC 000C0EAC*/ PPC::Runtime::ASM::bne(.L_800C40B8);
/*800C40B0 000C0EB0*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C40B4 000C0EB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800C40B8, 0x800C40B8) //this is a jump label
/*800C40B8 000C0EB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C40BC 000C0EBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C40C0 000C0EC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800C40C4 000C0EC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800C40C8 000C0EC8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800C40CC 000C0ECC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800C40D0 000C0ED0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800C40D4 000C0ED4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800C40D8 000C0ED8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C40DC 000C0EDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800C40E0 000C0EE0*/ PPC::Runtime::ASM::blr();
}