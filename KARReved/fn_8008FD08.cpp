//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CF058.hpp"



void fn_8008FD08(PPC::Runtime::GCContext* context)
{
/*8008FD08 0008CB08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8008FD0C 0008CB0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8008FD10 0008CB10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008FD14 0008CB14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8008FD18 0008CB18*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8008FD1C 0008CB1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008FD20 0008CB20*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8008FD24 0008CB24*/ PPC::Runtime::ASM::bl(fn_800CF058);
/*8008FD28 0008CB28*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8008FD2C 0008CB2C*/ PPC::Runtime::ASM::ble(.L_8008FD50);
/*8008FD30 0008CB30*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 12, 13);
/*8008FD34 0008CB34*/ PPC::Runtime::ASM::beq(.L_8008FD50);
/*8008FD38 0008CB38*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_HighBit);
/*8008FD3C 0008CB3C*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*8008FD40 0008CB40*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180553C9C @ Get_MemoryOffset_LowBit);
/*8008FD44 0008CB44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r3));
/*8008FD48 0008CB48*/ PPC::Runtime::ASM::xori(context->r0, context->r0, 0x2);
/*8008FD4C 0008CB4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8008FD50, 0x8008FD50) //this is a jump label
/*8008FD50 0008CB50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008FD54 0008CB54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8008FD58 0008CB58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8008FD5C 0008CB5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008FD60 0008CB60*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8008FD64 0008CB64*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8008FD68 0008CB68*/ PPC::Runtime::ASM::blr();
}