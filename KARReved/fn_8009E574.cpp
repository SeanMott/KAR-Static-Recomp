//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_8009E29C.hpp"



void fn_8009E574(PPC::Runtime::GCContext* context)
{
/*8009E574 0009B374*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8009E578 0009B378*/ PPC::Runtime::ASM::mflr(context->r0);
/*8009E57C 0009B37C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009E580 0009B380*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009E584 0009B384*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8009E588 0009B388*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x2);
/*8009E58C 0009B38C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009E590 0009B390*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8009E594 0009B394*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009E598 0009B398*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8009E59C 0009B39C*/ PPC::Runtime::ASM::bne(.L_8009E640);
/*8009E5A0 0009B3A0*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*8009E5A4 0009B3A4*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8009E5A8 0009B3A8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009E5AC 0009B3AC*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009E5B0 0009B3B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009E5B4 0009B3B4*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*8009E5B8 0009B3B8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8009E5BC 0009B3BC*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009E5C0 0009B3C0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009E5C4 0009B3C4*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009E5C8 0009B3C8*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8009E5CC 0009B3CC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009E5D0 0009B3D0*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009E5D4 0009B3D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009E5D8 0009B3D8*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*8009E5DC 0009B3DC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8009E5E0 0009B3E0*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009E5E4 0009B3E4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009E5E8 0009B3E8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009E5EC 0009B3EC*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*8009E5F0 0009B3F0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8009E5F4 0009B3F4*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*8009E5F8 0009B3F8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009E5FC 0009B3FC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009E600 0009B400*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*8009E604 0009B404*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009E608 0009B408*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8009E60C 0009B40C*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*8009E610 0009B410*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009E614 0009B414*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009E618 0009B418*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*8009E61C 0009B41C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009E620 0009B420*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*8009E624 0009B424*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8009E628 0009B428*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*8009E62C 0009B42C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_636 @ Get_MemoryOffset_HighBit);
/*8009E630 0009B430*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8009E634 0009B434*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_636 @ Get_MemoryOffset_LowBit);
/*8009E638 0009B438*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8009E63C 0009B43C*/ PPC::Runtime::ASM::bl(fn_8009E29C);
RUNTIME_PPC_JUMP_LABEL(.L_8009E640, 0x8009E640) //this is a jump label
/*8009E640 0009B440*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009E644 0009B444*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009E648 0009B448*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009E64C 0009B44C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009E650 0009B450*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8009E654 0009B454*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8009E658 0009B458*/ PPC::Runtime::ASM::blr();
}