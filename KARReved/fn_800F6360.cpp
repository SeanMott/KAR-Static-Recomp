//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DD70C.hpp"



void fn_800F6360(PPC::Runtime::GCContext* context)
{
/*800F6360 000F3160*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F6364 000F3164*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F6368 000F3168*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F636C 000F316C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F6370 000F3170*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800F6374 000F3174*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F6378 000F3178*/ PPC::Runtime::ASM::beq(.L_800F6384);
/*800F637C 000F317C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1c);
/*800F6380 000F3180*/ PPC::Runtime::ASM::bl(fn_800DD70C);
RUNTIME_PPC_JUMP_LABEL(.L_800F6384, 0x800F6384) //this is a jump label
/*800F6384 000F3184*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F6388 000F3188*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F638C 000F318C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F6390 000F3190*/ PPC::Runtime::ASM::blr();
}