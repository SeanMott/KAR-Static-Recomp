//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_strstr.hpp"
#include "fn_sprintf.hpp"



void fn_80483C3C(PPC::Runtime::GCContext* context)
{
/*80483C3C 00480A3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80483C40 00480A40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80483C44 00480A44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*80483C48 00480A48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80483C4C 00480A4C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80483C50 00480A50*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*80483C54 00480A54*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80483C58 00480A58*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*80483C5C 00480A5C*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_334 @ Get_MemoryOffset_SDA21);
/*80483C60 00480A60*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80483C64 00480A64*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*80483C68 00480A68*/ PPC::Runtime::ASM::bl(fn_strstr);
/* 80483C6C 00480A6C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80483C70 00480A70*/ PPC::Runtime::ASM::bne(.L_80483C7C);
/*80483C74 00480A74*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*80483C78 00480A78*/ PPC::Runtime::ASM::b(.L_80483CA0);
RUNTIME_PPC_JUMP_LABEL(.L_80483C7C, 0x80483C7C) //this is a jump label
/*80483C7C 00480A7C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80534C14 @ Get_MemoryOffset_HighBit);
/*80483C80 00480A80*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80483C84 00480A84*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80534C14 @ Get_MemoryOffset_LowBit);
/*80483C88 00480A88*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80483C8C 00480A8C*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x0);
/*80483C90 00480A90*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x0);
/*80483C94 00480A94*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*80483C98 00480A98*/ PPC::Runtime::ASM::subf(context->r0, context->r28, context->r31);
/*80483C9C 00480A9C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80483CA0, 0x80483CA0) //this is a jump label
/*80483CA0 00480AA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80483CA4 00480AA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80483CA8 00480AA8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80483CAC 00480AAC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80483CB0 00480AB0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80483CB4 00480AB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*80483CB8 00480AB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80483CBC 00480ABC*/ PPC::Runtime::ASM::blr();
}