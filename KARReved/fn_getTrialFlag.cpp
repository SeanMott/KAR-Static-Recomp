//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"



void fn_getTrialFlag(PPC::Runtime::GCContext* context)
{
/*8000ACB0 00007AB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000ACB4 00007AB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000ACB8 00007AB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000ACBC 00007ABC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000ACC0 00007AC0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000ACC4 00007AC4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000ACC8 00007AC8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000ACCC 00007ACC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa97, context->r3));
/*8000ACD0 00007AD0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x9);
/*8000ACD4 00007AD4*/ PPC::Runtime::ASM::beq(.L_8000ACE8);
/*8000ACD8 00007AD8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000ACDC 00007ADC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa97, context->r3));
/*8000ACE0 00007AE0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x34);
/*8000ACE4 00007AE4*/ PPC::Runtime::ASM::bne(.L_8000ACF0);
RUNTIME_PPC_JUMP_LABEL(.L_8000ACE8, 0x8000ACE8) //this is a jump label
/*8000ACE8 00007AE8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8000ACEC 00007AEC*/ PPC::Runtime::ASM::b(.L_8000AD34);
RUNTIME_PPC_JUMP_LABEL(.L_8000ACF0, 0x8000ACF0) //this is a jump label
/*8000ACF0 00007AF0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa6, context->r31));
/* 8000ACF4 00007AF4  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*8000ACF8 00007AF8*/ PPC::Runtime::ASM::beq(.L_8000AD1C);
/*8000ACFC 00007AFC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_127 @ Get_MemoryOffset_HighBit);
/*8000AD00 00007B00*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_127 @ Get_MemoryOffset_LowBit);
/*8000AD04 00007B04*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8000AD08 00007B08*/ PPC::Runtime::ASM::bl(OSReport);
/*8000AD0C 00007B0C*/ PPC::Runtime::ASM::li(context->r3, String_ "gmlib." Get_MemoryOffset_SDA21);
/*8000AD10 00007B10*/ PPC::Runtime::ASM::li(context->r4, 0x708);
/*8000AD14 00007B14*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5120 @ Get_MemoryOffset_SDA21);
/*8000AD18 00007B18*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8000AD1C, 0x8000AD1C) //this is a jump label
/*8000AD1C 00007B1C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa6, context->r31));
/* 8000AD20 00007B20  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*8000AD24 00007B24*/ PPC::Runtime::ASM::beq(.L_8000AD30);
/*8000AD28 00007B28*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8000AD2C 00007B2C*/ PPC::Runtime::ASM::b(.L_8000AD34);
RUNTIME_PPC_JUMP_LABEL(.L_8000AD30, 0x8000AD30) //this is a jump label
/*8000AD30 00007B30*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8000AD34, 0x8000AD34) //this is a jump label
/*8000AD34 00007B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AD38 00007B38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000AD3C 00007B3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AD40 00007B40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000AD44 00007B44*/ PPC::Runtime::ASM::blr();
}