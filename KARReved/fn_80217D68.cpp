//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80217E64.hpp"
#include "fn_80217E64.hpp"
#include "fn_802042FC.hpp"
#include "fn_80206E1C.hpp"



void fn_80217D68(PPC::Runtime::GCContext* context)
{
/*80217D68 00214B68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80217D6C 00214B6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80217D70 00214B70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80217D74 00214B74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80217D78 00214B78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80217D7C 00214B7C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80217D80 00214B80*/ PPC::Runtime::ASM::lis(context->r3, fn_80217E64 @ Get_MemoryOffset_HighBit);
/*80217D84 00214B84*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80217D88 00214B88*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_80217E64 @ Get_MemoryOffset_LowBit);
/*80217D8C 00214B8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80217D90 00214B90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xadc, context->r30));
/*80217D94 00214B94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xae0, context->r30));
/*80217D98 00214B98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xae4, context->r30));
/*80217D9C 00214B9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80217DA0 00214BA0*/ PPC::Runtime::ASM::bl(fn_802042FC);
/*80217DA4 00214BA4*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80217DA8 00214BA8*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*80217DAC 00214BAC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80217DB0 00214BB0*/ PPC::Runtime::ASM::beq(.L_80217DBC);
/*80217DB4 00214BB4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80217DB8 00214BB8*/ PPC::Runtime::ASM::b(.L_80217DC4);
RUNTIME_PPC_JUMP_LABEL(.L_80217DBC, 0x80217DBC) //this is a jump label
/*80217DBC 00214BBC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80217DC0 00214BC0*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_80217DC4, 0x80217DC4) //this is a jump label
/*80217DC4 00214BC4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r30));
/*80217DC8 00214BC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80217DCC 00214BCC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80217DD0 00214BD0*/ PPC::Runtime::ASM::bl(fn_80206E1C);
/*80217DD4 00214BD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80217DD8 00214BD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80217DDC 00214BDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80217DE0 00214BE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80217DE4 00214BE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80217DE8 00214BE8*/ PPC::Runtime::ASM::blr();
}