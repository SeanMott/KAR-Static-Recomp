//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80207DEC.hpp"
#include "fn_801FD6B0.hpp"
#include "fn_801FED40.hpp"
#include "fn_80209CE4.hpp"
#include "fn_801FC398.hpp"
#include "fn_80210B68.hpp"
#include "fn_80210B68.hpp"
#include "fn_80210B68.hpp"



void fn_80210058(PPC::Runtime::GCContext* context)
{
/*80210058 0020CE58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8021005C 0020CE5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80210060 0020CE60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80210064 0020CE64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80210068 0020CE68*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8021006C 0020CE6C*/ PPC::Runtime::ASM::bl(fn_80207DEC);
/*80210070 0020CE70*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r31));
/*80210074 0020CE74*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80210078 0020CE78*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*8021007C 0020CE7C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80210080 0020CE80*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r31));
/*80210084 0020CE84*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x87c, context->r31));
/*80210088 0020CE88*/ PPC::Runtime::ASM::bl(fn_801FD6B0);
/*8021008C 0020CE8C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80210090 0020CE90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80210094 0020CE94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r31));
/*80210098 0020CE98*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*8021009C 0020CE9C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802100A0 0020CEA0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*802100A4 0020CEA4*/ PPC::Runtime::ASM::bl(fn_80209CE4);
/*802100A8 0020CEA8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2528 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802100AC 0020CEAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802100B0 0020CEB0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E252C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802100B4 0020CEB4*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*802100B8 0020CEB8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802100BC 0020CEBC*/ PPC::Runtime::ASM::li(context->r5, 0x10);
/*802100C0 0020CEC0*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*802100C4 0020CEC4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802100C8 0020CEC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802100CC 0020CECC*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4e, context->r31));
/*802100D0 0020CED0*/ PPC::Runtime::ASM::bl(fn_80210B68);
/*802100D4 0020CED4*/ PPC::Runtime::ASM::lis(context->r3, fn_80210B68 @ Get_MemoryOffset_HighBit);
/*802100D8 0020CED8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_80210B68 @ Get_MemoryOffset_LowBit);
/*802100DC 0020CEDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xad4, context->r31));
/*802100E0 0020CEE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802100E4 0020CEE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802100E8 0020CEE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802100EC 0020CEEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802100F0 0020CEF0*/ PPC::Runtime::ASM::blr();
}