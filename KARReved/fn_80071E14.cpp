//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80071E14(PPC::Runtime::GCContext* context)
{
/*80071E14 0006EC14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80071E18 0006EC18*/ PPC::Runtime::ASM::mflr(context->r0);
/*80071E1C 0006EC1C*/ PPC::Runtime::ASM::lis(context->r5, lbl_80550F08 @ Get_MemoryOffset_HighBit);
/*80071E20 0006EC20*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80071E24 0006EC24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80071E28 0006EC28*/ PPC::Runtime::ASM::addi(context->r3, context->r5, lbl_80550F08 @ Get_MemoryOffset_LowBit);
/*80071E2C 0006EC2C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*80071E30 0006EC30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80071E34 0006EC34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80071E38 0006EC38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80071E3C 0006EC3C*/ PPC::Runtime::ASM::blr();
}