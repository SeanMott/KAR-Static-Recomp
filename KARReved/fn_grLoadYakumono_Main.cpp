//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_lbLoadArchive.hpp"



void fn_grLoadYakumono_Main(PPC::Runtime::GCContext* context)
{
/*800F82A0 000F50A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F82A4 000F50A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F82A8 000F50A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F82AC 000F50AC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD6C4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F82B0 000F50B0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F82B4 000F50B4*/ PPC::Runtime::ASM::bne(.L_800F82DC);
/*800F82B8 000F50B8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_993 @ Get_MemoryOffset_HighBit);
/*800F82BC 000F50BC*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_995 @ Get_MemoryOffset_HighBit);
/*800F82C0 000F50C0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, MemoryOffset_993 @ Get_MemoryOffset_LowBit);
/*800F82C4 000F50C4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800F82C8 000F50C8*/ PPC::Runtime::ASM::addi(context->r6, context->r5, MemoryOffset_995 @ Get_MemoryOffset_LowBit);
/*800F82CC 000F50CC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F82D0 000F50D0*/ PPC::Runtime::ASM::li(context->r5, STRUCT_BYTE4_COUNT_1805DD6C4 @ Get_MemoryOffset_SDA21);
/*800F82D4 000F50D4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800F82D8 000F50D8*/ PPC::Runtime::ASM::bl(fn_lbLoadArchive);
RUNTIME_PPC_JUMP_LABEL(.L_800F82DC, 0x800F82DC) //this is a jump label
/*800F82DC 000F50DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F82E0 000F50E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F82E4 000F50E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F82E8 000F50E8*/ PPC::Runtime::ASM::blr();
}