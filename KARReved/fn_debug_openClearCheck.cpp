//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_debug_subMenu_InBetween1.hpp"
#include "fn_debug_subMenu_InBetween1.hpp"
#include "fn_800ABA74.hpp"



void fn_debug_openClearCheck(PPC::Runtime::GCContext* context)
{
/*800ADA94 000AA894*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADA98 000AA898*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADA9C 000AA89C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADAA0 000AA8A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADAA4 000AA8A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADAA8 000AA8A8*/ PPC::Runtime::ASM::bne(.L_800ADAE0);
/*800ADAAC 000AA8AC*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADAB0 000AA8B0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADAB4 000AA8B4*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADAB8 000AA8B8*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_31 @ Get_MemoryOffset_HighBit);
/*800ADABC 000AA8BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADAC0 000AA8C0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_31 @ Get_MemoryOffset_LowBit);
/*800ADAC4 000AA8C4*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADAC8 000AA8C8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADACC 000AA8CC*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADAD0 000AA8D0*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADAD4 000AA8D4*/ PPC::Runtime::ASM::lis(context->r4, fn_debug_subMenu_InBetween1 @ Get_MemoryOffset_HighBit);
/*800ADAD8 000AA8D8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_debug_subMenu_InBetween1 @ Get_MemoryOffset_LowBit);
/*800ADADC 000AA8DC*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADAE0, 0x800ADAE0) //this is a jump label
/*800ADAE0 000AA8E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADAE4 000AA8E4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADAE8 000AA8E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADAEC 000AA8EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADAF0 000AA8F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADAF4 000AA8F4*/ PPC::Runtime::ASM::blr();
}