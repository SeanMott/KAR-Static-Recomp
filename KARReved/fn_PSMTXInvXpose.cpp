//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_PSMTXInvXpose(PPC::Runtime::GCContext* context)
{
/*803D1670 003CE470*/ PPC::Runtime::ASM::psq_l(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3)1, context->qr0);
/*803D1674 003CE474*/ PPC::Runtime::ASM::psq_l(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3)0, context->qr0);
/*803D1678 003CE478*/ PPC::Runtime::ASM::psq_l(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3)1, context->qr0);
/* 803D167C 003CE47C  10 C1 04 A0 */ ps_merge10 context->f6 , context->f1 , context->f0
/*803D1680 003CE480*/ PPC::Runtime::ASM::psq_l(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3)0, context->qr0);
/*803D1684 003CE484*/ PPC::Runtime::ASM::psq_l(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3)1, context->qr0);
/* 803D1688 003CE488  10 E3 14 A0 */ ps_merge10 context->f7 , context->f3 , context->f2
/*803D168C 003CE48C*/ PPC::Runtime::ASM::psq_l(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3)0, context->qr0);
/* 803D1690 003CE490  11 63 01 B2 */ ps_mul context->f11 , context->f3 , context->f6
/* 803D1694 003CE494  11 05 24 A0 */ ps_merge10 context->f8 , context->f5 , context->f4
/* 803D1698 003CE498  11 A5 01 F2 */ ps_mul context->f13 , context->f5 , context->f7
/* 803D169C 003CE49C  11 61 59 F8 */ ps_msub context->f11 , context->f1 , context->f7 , context->f11
/* 803D16A0 003CE4A0  11 81 02 32 */ ps_mul context->f12 , context->f1 , context->f8
/* 803D16A4 003CE4A4  11 A3 6A 38 */ ps_msub context->f13 , context->f3 , context->f8 , context->f13
/* 803D16A8 003CE4A8  11 85 61 B8 */ ps_msub context->f12 , context->f5 , context->f6 , context->f12
/* 803D16AC 003CE4AC  11 43 01 32 */ ps_mul context->f10 , context->f3 , context->f4
/* 803D16B0 003CE4B0  11 20 01 72 */ ps_mul context->f9 , context->f0 , context->f5
/* 803D16B4 003CE4B4  11 01 00 B2 */ ps_mul context->f8 , context->f1 , context->f2
/* 803D16B8 003CE4B8  11 42 51 78 */ ps_msub context->f10 , context->f2 , context->f5 , context->f10
/* 803D16BC 003CE4BC  11 21 49 38 */ ps_msub context->f9 , context->f1 , context->f4 , context->f9
/* 803D16C0 003CE4C0  11 00 40 F8 */ ps_msub context->f8 , context->f0 , context->f3 , context->f8
/* 803D16C4 003CE4C4  10 E0 03 72 */ ps_mul context->f7 , context->f0 , context->f13
/* 803D16C8 003CE4C8  10 21 08 28 */ ps_sub context->f1 , context->f1 , context->f1
/* 803D16CC 003CE4CC  10 E2 3B 3A */ ps_madd context->f7 , context->f2 , context->f12 , context->f7
/* 803D16D0 003CE4D0  10 E4 3A FA */ ps_madd context->f7 , context->f4 , context->f11 , context->f7
/* 803D16D4 003CE4D4  10 07 08 40 */ ps_cmpo0 cr0 , context->f7 , context->f1
/*803D16D8 003CE4D8*/ PPC::Runtime::ASM::bne(.L_803D16E4);
/*803D16DC 003CE4DC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D16E0 003CE4E0*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803D16E4, 0x803D16E4) //this is a jump label
/* 803D16E4 003CE4E4  EC 00 38 30 */ fres context->f0 , context->f7
/*803D16E8 003CE4E8*/ PPC::Runtime::ASM::psq_st(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4)1, context->qr0);
/* 803D16EC 003CE4EC  10 C0 00 2A */ ps_add context->f6 , context->f0 , context->f0
/* 803D16F0 003CE4F0  10 A0 00 32 */ ps_mul context->f5 , context->f0 , context->f0
/*803D16F4 003CE4F4*/ PPC::Runtime::ASM::psq_st(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4)1, context->qr0);
/* 803D16F8 003CE4F8  10 07 31 7C */ ps_nmsub context->f0 , context->f7 , context->f5 , context->f6
/*803D16FC 003CE4FC*/ PPC::Runtime::ASM::psq_st(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4)1, context->qr0);
/* 803D1700 003CE500  11 AD 00 18 */ ps_muls0 context->f13 , context->f13 , context->f0
/* 803D1704 003CE504  11 8C 00 18 */ ps_muls0 context->f12 , context->f12 , context->f0
/* 803D1708 003CE508  11 6B 00 18 */ ps_muls0 context->f11 , context->f11 , context->f0
/*803D170C 003CE50C*/ PPC::Runtime::ASM::psq_st(context->f13, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803D1710 003CE510*/ PPC::Runtime::ASM::psq_st(context->f12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4)0, context->qr0);
/* 803D1714 003CE514  11 4A 00 18 */ ps_muls0 context->f10 , context->f10 , context->f0
/* 803D1718 003CE518  11 29 00 18 */ ps_muls0 context->f9 , context->f9 , context->f0
/*803D171C 003CE51C*/ PPC::Runtime::ASM::psq_st(context->f11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4)0, context->qr0);
/*803D1720 003CE520*/ PPC::Runtime::ASM::psq_st(context->f10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4)1, context->qr0);
/* 803D1724 003CE524  11 08 00 18 */ ps_muls0 context->f8 , context->f8 , context->f0
/*803D1728 003CE528*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803D172C 003CE52C*/ PPC::Runtime::ASM::psq_st(context->f9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4)1, context->qr0);
/*803D1730 003CE530*/ PPC::Runtime::ASM::psq_st(context->f8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4)1, context->qr0);
/*803D1734 003CE534*/ PPC::Runtime::ASM::blr();
}