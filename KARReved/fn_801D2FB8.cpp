//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802364E0.hpp"
#include "fn_802364E0.hpp"
#include "fn_802364E0.hpp"



void fn_801D2FB8(PPC::Runtime::GCContext* context)
{
/*801D2FB8 001CFDB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D2FBC 001CFDBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D2FC0 001CFDC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D2FC4 001CFDC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D2FC8 001CFDC8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801D2FCC 001CFDCC*/ PPC::Runtime::ASM::bl(fn_802364E0);
/*801D2FD0 001CFDD0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x69c, context->r31));
/*801D2FD4 001CFDD4*/ PPC::Runtime::ASM::bl(fn_802364E0);
/*801D2FD8 001CFDD8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6a0, context->r31));
/*801D2FDC 001CFDDC*/ PPC::Runtime::ASM::bl(fn_802364E0);
/*801D2FE0 001CFDE0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6a4, context->r31));
/*801D2FE4 001CFDE4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801D2FE8 001CFDE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6a8, context->r31));
/*801D2FEC 001CFDEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D2FF0 001CFDF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D2FF4 001CFDF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D2FF8 001CFDF8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D2FFC 001CFDFC*/ PPC::Runtime::ASM::blr();
}