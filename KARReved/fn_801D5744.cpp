//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D5C5C.hpp"
#include "fn_801D5C18.hpp"
#include "fn_801D5CA0.hpp"



void fn_801D5744(PPC::Runtime::GCContext* context)
{
/*801D5744 001D2544*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D5748 001D2548*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D574C 001D254C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5750 001D2550*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D5754 001D2554*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801D5758 001D2558*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*801D575C 001D255C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r5));
/*801D5760 001D2560*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*801D5764 001D2564*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/* 801D5768 001D2568  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801D576C 001D256C*/ PPC::Runtime::ASM::extrwi(context->r4, context->r4, 8, 22);
/*801D5770 001D2570*/ PPC::Runtime::ASM::extrwi(context->r5, context->r5, 17, 14);
/*801D5774 001D2574*/ PPC::Runtime::ASM::beq(.L_801D5798);
/*801D5778 001D2578*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD858 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D577C 001D257C*/ PPC::Runtime::ASM::addi(context->r6, context->r3, 0x88);
/*801D5780 001D2580*/ PPC::Runtime::ASM::cmplw(context->r6, context->r0);
/*801D5784 001D2584*/ PPC::Runtime::ASM::bne(.L_801D5790);
/*801D5788 001D2588*/ PPC::Runtime::ASM::bl(fn_801D5C5C);
/*801D578C 001D258C*/ PPC::Runtime::ASM::b(.L_801D579C);
RUNTIME_PPC_JUMP_LABEL(.L_801D5790, 0x801D5790) //this is a jump label
/*801D5790 001D2590*/ PPC::Runtime::ASM::bl(fn_801D5C18);
/*801D5794 001D2594*/ PPC::Runtime::ASM::b(.L_801D579C);
RUNTIME_PPC_JUMP_LABEL(.L_801D5798, 0x801D5798) //this is a jump label
/*801D5798 001D2598*/ PPC::Runtime::ASM::bl(fn_801D5CA0);
RUNTIME_PPC_JUMP_LABEL(.L_801D579C, 0x801D579C) //this is a jump label
/*801D579C 001D259C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801D57A0 001D25A0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*801D57A4 001D25A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801D57A8 001D25A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D57AC 001D25AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D57B0 001D25B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D57B4 001D25B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D57B8 001D25B8*/ PPC::Runtime::ASM::blr();
}