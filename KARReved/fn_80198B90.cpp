//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80054CAC.hpp"



void fn_80198B90(PPC::Runtime::GCContext* context)
{
/*80198B90 00195990*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80198B94 00195994*/ PPC::Runtime::ASM::mflr(context->r0);
/*80198B98 00195998*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80198B9C 0019599C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80198BA0 001959A0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80198BA4 001959A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80198BA8 001959A8*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80198BAC 001959AC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80198BB0 001959B0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80198BB4 001959B4*/ PPC::Runtime::ASM::b(.L_80198BEC);
RUNTIME_PPC_JUMP_LABEL(.L_80198BB8, 0x80198BB8) //this is a jump label
/*80198BB8 001959B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r29));
/*80198BBC 001959BC*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r31);
/*80198BC0 001959C0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/* 80198BC4 001959C4  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80198BC8 001959C8*/ PPC::Runtime::ASM::beq(.L_80198BE4);
/*80198BCC 001959CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80198BD0 001959D0*/ PPC::Runtime::ASM::bl(fn_80054CAC);
/*80198BD4 001959D4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80198BD8 001959D8*/ PPC::Runtime::ASM::beq(.L_80198BE4);
/*80198BDC 001959DC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80198BE0 001959E0*/ PPC::Runtime::ASM::b(.L_80198C04);
RUNTIME_PPC_JUMP_LABEL(.L_80198BE4, 0x80198BE4) //this is a jump label
/*80198BE4 001959E4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x10);
/*80198BE8 001959E8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80198BEC, 0x80198BEC) //this is a jump label
/*80198BEC 001959EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*80198BF0 001959F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80198BF4 001959F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80198BF8 001959F8*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80198BFC 001959FC*/ PPC::Runtime::ASM::blt(.L_80198BB8);
/*80198C00 00195A00*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80198C04, 0x80198C04) //this is a jump label
/*80198C04 00195A04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80198C08 00195A08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80198C0C 00195A0C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80198C10 00195A10*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80198C14 00195A14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80198C18 00195A18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80198C1C 00195A1C*/ PPC::Runtime::ASM::blr();
}