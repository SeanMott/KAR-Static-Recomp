//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "fn_OSWakeupThread.hpp"



void fn_GXFinishInterruptHandler(PPC::Runtime::GCContext* context)
{
/*803CC110 003C8F10*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CC114 003C8F14*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803CC118 003C8F18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CC11C 003C8F1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x2e0, context->r1));
/*803CC120 003C8F20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r1));
/*803CC124 003C8F24*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x0);
/*803CC128 003C8F28*/ PPC::Runtime::ASM::lwz(context->r5, __peReg @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC12C 003C8F2C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r5));
/*803CC130 003C8F30*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 29, 27);
/*803CC134 003C8F34*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x8);
/*803CC138 003C8F38*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r5));
/*803CC13C 003C8F3C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDE54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC140 003C8F40*/ PPC::Runtime::ASM::stb(context->r3, SkipAddress_52 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC144 003C8F44*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803CC148 003C8F48*/ PPC::Runtime::ASM::beq(.L_803CC178);
/*803CC14C 003C8F4C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803CC150 003C8F50*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803CC154 003C8F54*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803CC158 003C8F58*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803CC15C 003C8F5C*/ PPC::Runtime::ASM::lwz(context->r12, STRUCT_BYTE4_COUNT_1805DDE54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC160 003C8F60*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 803CC164 003C8F64  4E 80 00 21 */ blrl
/*803CC168 003C8F68*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803CC16C 003C8F6C*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803CC170 003C8F70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803CC174 003C8F74*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
RUNTIME_PPC_JUMP_LABEL(.L_803CC178, 0x803CC178) //this is a jump label
/*803CC178 003C8F78*/ PPC::Runtime::ASM::li(context->r3, SkipAddress_51 @ Get_MemoryOffset_SDA21);
/*803CC17C 003C8F7C*/ PPC::Runtime::ASM::bl(fn_OSWakeupThread);
/*803CC180 003C8F80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r1));
/*803CC184 003C8F84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r1));
/*803CC188 003C8F88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x2e0);
/*803CC18C 003C8F8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CC190 003C8F90*/ PPC::Runtime::ASM::blr();
}