//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E0E04.hpp"



void fn_800CEF84(PPC::Runtime::GCContext* context)
{
/*800CEF84 000CBD84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800CEF88 000CBD88*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CEF8C 000CBD8C*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*800CEF90 000CBD90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CEF94 000CBD94*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800CEF98 000CBD98*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*800CEF9C 000CBD9C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CEFA0 000CBDA0*/ PPC::Runtime::ASM::bl(fn_800E0E04);
/*800CEFA4 000CBDA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CEFA8 000CBDA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CEFAC 000CBDAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800CEFB0 000CBDB0*/ PPC::Runtime::ASM::blr();
}