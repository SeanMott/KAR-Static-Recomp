//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025BCF0(PPC::Runtime::GCContext* context)
{
/*8025BCF0 00258AF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025BCF4 00258AF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025BCF8 00258AF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BCFC 00258AFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025BD00 00258B00*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025BD04 00258B04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025BD08 00258B08*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025BD0C 00258B0C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EA0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025BD10 00258B10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BD14 00258B14*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EA4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025BD18 00258B18*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025BD1C 00258B1C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025BD20 00258B20*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025BD24 00258B24*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025BD28 00258B28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BD2C 00258B2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025BD30 00258B30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025BD34 00258B34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025BD38 00258B38*/ PPC::Runtime::ASM::blr();
}