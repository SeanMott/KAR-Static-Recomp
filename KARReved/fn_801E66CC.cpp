//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CAA40.hpp"
#include "fn_8022CC64.hpp"
#include "fn_801E6718.hpp"



void fn_801E66CC(PPC::Runtime::GCContext* context)
{
/*801E66CC 001E34CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E66D0 001E34D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E66D4 001E34D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E66D8 001E34D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E66DC 001E34DC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E66E0 001E34E0*/ PPC::Runtime::ASM::bl(fn_801CAA40);
/*801E66E4 001E34E4*/ PPC::Runtime::ASM::bl(fn_8022CC64);
/*801E66E8 001E34E8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801E66EC 001E34EC*/ PPC::Runtime::ASM::beq(.L_801E6700);
/*801E66F0 001E34F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E66F4 001E34F4*/ PPC::Runtime::ASM::bl(fn_801E6718);
/*801E66F8 001E34F8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E66FC 001E34FC*/ PPC::Runtime::ASM::b(.L_801E6704);
RUNTIME_PPC_JUMP_LABEL(.L_801E6700, 0x801E6700) //this is a jump label
/*801E6700 001E3500*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801E6704, 0x801E6704) //this is a jump label
/*801E6704 001E3504*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E6708 001E3508*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E670C 001E350C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E6710 001E3510*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E6714 001E3514*/ PPC::Runtime::ASM::blr();
}