//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80155C14.hpp"



void fn_80156F1C(PPC::Runtime::GCContext* context)
{
/*80156F1C 00153D1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80156F20 00153D20*/ PPC::Runtime::ASM::mflr(context->r0);
/*80156F24 00153D24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80156F28 00153D28*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80156F2C 00153D2C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80156F30 00153D30*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80156F34 00153D34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80156F38 00153D38*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80156F3C 00153D3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80156F40 00153D40*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80156F44 00153D44*/ PPC::Runtime::ASM::bl(fn_80155C14);
/*80156F48 00153D48*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80156F4C 00153D4C*/ PPC::Runtime::ASM::bne(.L_80156F60);
/*80156F50 00153D50*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6878 @ Get_MemoryOffset_SDA21);
/*80156F54 00153D54*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80156F58 00153D58*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6880 @ Get_MemoryOffset_SDA21);
/*80156F5C 00153D5C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80156F60, 0x80156F60) //this is a jump label
/*80156F60 00153D60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80156F64 00153D64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80156F68 00153D68*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80156F6C 00153D6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80156F70 00153D70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80156F74 00153D74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80156F78 00153D78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80156F7C 00153D7C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80156F80 00153D80*/ PPC::Runtime::ASM::bne(.L_80156FCC);
/*80156F84 00153D84*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80156F88 00153D88*/ PPC::Runtime::ASM::beq(.L_80156FCC);
/*80156F8C 00153D8C*/ PPC::Runtime::ASM::bne(.L_80156FA0);
/*80156F90 00153D90*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6878 @ Get_MemoryOffset_SDA21);
/*80156F94 00153D94*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80156F98 00153D98*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6880 @ Get_MemoryOffset_SDA21);
/*80156F9C 00153D9C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80156FA0, 0x80156FA0) //this is a jump label
/*80156FA0 00153DA0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80156FA4 00153DA4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80156FA8 00153DA8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80156FAC 00153DAC*/ PPC::Runtime::ASM::bne(.L_80156FBC);
/*80156FB0 00153DB0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80156FB4 00153DB4*/ PPC::Runtime::ASM::beq(.L_80156FBC);
/*80156FB8 00153DB8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80156FBC, 0x80156FBC) //this is a jump label
/*80156FBC 00153DBC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80156FC0 00153DC0*/ PPC::Runtime::ASM::bne(.L_80156FCC);
/*80156FC4 00153DC4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80156FC8 00153DC8*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80156FCC, 0x80156FCC) //this is a jump label
/*80156FCC 00153DCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80156FD0 00153DD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80156FD4 00153DD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80156FD8 00153DD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80156FDC 00153DDC*/ PPC::Runtime::ASM::blr();
}