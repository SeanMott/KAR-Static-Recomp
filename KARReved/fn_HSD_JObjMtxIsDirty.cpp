//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_HSD_JOBJ_SetMtxDirtySub.hpp"



void fn_HSD_JObjMtxIsDirty(PPC::Runtime::GCContext* context)
{
/*80408064 00404E64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80408068 00404E68*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040806C 00404E6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80408070 00404E70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80408074 00404E74  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80408078 00404E78*/ PPC::Runtime::ASM::beq(.L_80408124);
/*8040807C 00404E7C*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*80408080 00404E80*/ PPC::Runtime::ASM::bne(.L_80408088);
/*80408084 00404E84*/ PPC::Runtime::ASM::b(.L_80408124);
RUNTIME_PPC_JUMP_LABEL(.L_80408088, 0x80408088) //this is a jump label
/*80408088 00404E88*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8040808C 00404E8C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*80408090 00404E90*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4));
/*80408094 00404E94*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*80408098 00404E98*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*8040809C 00404E9C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*804080A0 00404EA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*804080A4 00404EA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r4));
/*804080A8 00404EA8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*804080AC 00404EAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*804080B0 00404EB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*804080B4 00404EB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*804080B8 00404EB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*804080BC 00404EBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*804080C0 00404EC0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*804080C4 00404EC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*804080C8 00404EC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r4));
/*804080CC 00404ECC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*804080D0 00404ED0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*804080D4 00404ED4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*804080D8 00404ED8*/ PPC::Runtime::ASM::bne(.L_80408124);
/*804080DC 00404EDC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*804080E0 00404EE0*/ PPC::Runtime::ASM::beq(.L_80408124);
/*804080E4 00404EE4*/ PPC::Runtime::ASM::bne(.L_804080F8);
/*804080E8 00404EE8*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_531 @ Get_MemoryOffset_SDA21);
/*804080EC 00404EEC*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*804080F0 00404EF0*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_530 @ Get_MemoryOffset_SDA21);
/*804080F4 00404EF4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804080F8, 0x804080F8) //this is a jump label
/*804080F8 00404EF8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*804080FC 00404EFC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80408100 00404F00*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80408104 00404F04*/ PPC::Runtime::ASM::bne(.L_80408114);
/*80408108 00404F08*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8040810C 00404F0C*/ PPC::Runtime::ASM::beq(.L_80408114);
/*80408110 00404F10*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80408114, 0x80408114) //this is a jump label
/*80408114 00404F14*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80408118 00404F18*/ PPC::Runtime::ASM::bne(.L_80408124);
/*8040811C 00404F1C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80408120 00404F20*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80408124, 0x80408124) //this is a jump label
/*80408124 00404F24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80408128 00404F28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040812C 00404F2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80408130 00404F30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80408134 00404F34*/ PPC::Runtime::ASM::blr();
}