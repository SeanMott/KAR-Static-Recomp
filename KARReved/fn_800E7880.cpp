//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800E7880(PPC::Runtime::GCContext* context)
{
/*800E7880 000E4680*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800E7884 000E4684*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E7888 000E4688*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800E788C 000E468C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800E7890 000E4690*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800E7894 000E4694*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800E7898 000E4698*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800E789C 000E469C*/ PPC::Runtime::ASM::lis(context->r7, AllZeros_1 @ Get_MemoryOffset_HighBit);
/*800E78A0 000E46A0*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E78A4 000E46A4*/ PPC::Runtime::ASM::addi(context->r9, context->r7, AllZeros_1 @ Get_MemoryOffset_LowBit);
/*800E78A8 000E46A8*/ PPC::Runtime::ASM::lis(context->r7, String_Debug_ "grairflow." Get_MemoryOffset_HighBit);
/*800E78AC 000E46AC*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*800E78B0 000E46B0*/ PPC::Runtime::ASM::addi(context->r31, context->r7, String_Debug_ "grairflow." Get_MemoryOffset_LowBit);
/*800E78B4 000E46B4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r9));
/*800E78B8 000E46B8*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800E78BC 000E46BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*800E78C0 000E46C0*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800E78C4 000E46C4*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E78C8 000E46C8*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800E78CC 000E46CC*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805DF73C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E78D0 000E46D0*/ PPC::Runtime::ASM::addi(context->r27, context->r31, 0x48);
/*800E78D4 000E46D4*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E78D8 000E46D8*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r6));
/*800E78DC 000E46DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E78E0 000E46E0*/ PPC::Runtime::ASM::b(.L_800E795C);
RUNTIME_PPC_JUMP_LABEL(.L_800E78E4, 0x800E78E4) //this is a jump label
/*800E78E4 000E46E4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800E78E8 000E46E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xd);
/*800E78EC 000E46EC*/ PPC::Runtime::ASM::beq(.L_800E7900);
/*800E78F0 000E46F0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800E78F4 000E46F4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x58);
/*800E78F8 000E46F8*/ PPC::Runtime::ASM::li(context->r4, 0x218);
/*800E78FC 000E46FC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E7900, 0x800E7900) //this is a jump label
/*800E7900 000E4700*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r26));
/*800E7904 000E4704*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800E7908 000E4708*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800E790C 000E470C*/ PPC::Runtime::ASM::lwzx(context->r12, context->r27, context->r0);
/*800E7910 000E4710*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800E7914 000E4714*/ PPC::Runtime::ASM::beq(.L_800E7958);
/*800E7918 000E4718*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E791C 000E471C*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800E7920 000E4720*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800E7924 000E4724*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800E7928 000E4728*/ PPC::Runtime::ASM::bctrl();
/*800E792C 000E472C*/ PPC::Runtime::ASM::fabs(context->f0, context->f31);
/*800E7930 000E4730*/ PPC::Runtime::ASM::fabs(context->f2, context->f1);
/*800E7934 000E4734*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f0);
/*800E7938 000E4738*/ PPC::Runtime::ASM::ble(.L_800E7958);
/*800E793C 000E473C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E7940 000E4740*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800E7944 000E4744*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E7948 000E4748*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E794C 000E474C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E7950 000E4750*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E7954 000E4754*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800E7958, 0x800E7958) //this is a jump label
/*800E7958 000E4758*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r26));
RUNTIME_PPC_JUMP_LABEL(.L_800E795C, 0x800E795C) //this is a jump label
/*800E795C 000E475C*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x0);
/*800E7960 000E4760*/ PPC::Runtime::ASM::bne(.L_800E78E4);
/*800E7964 000E4764*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF744 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E7968 000E4768*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800E796C 000E476C*/ PPC::Runtime::ASM::bge(.L_800E7984);
/*800E7970 000E4770*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF748 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E7974 000E4774*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800E7978 000E4778*/ PPC::Runtime::ASM::ble(.L_800E7984);
/*800E797C 000E477C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800E7980 000E4780*/ PPC::Runtime::ASM::b(.L_800E7988);
RUNTIME_PPC_JUMP_LABEL(.L_800E7984, 0x800E7984) //this is a jump label
/*800E7984 000E4784*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E7988, 0x800E7988) //this is a jump label
/*800E7988 000E4788*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E798C 000E478C*/ PPC::Runtime::ASM::bne(.L_800E79D8);
/*800E7990 000E4790*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E7994 000E4794*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E7998 000E4798*/ PPC::Runtime::ASM::fmuls(context->f3, context->f0, context->f31);
/*800E799C 000E479C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E79A0 000E47A0*/ PPC::Runtime::ASM::fmuls(context->f2, context->f1, context->f31);
/*800E79A4 000E47A4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E79A8 000E47A8*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*800E79AC 000E47AC*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E79B0 000E47B0*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f31);
/*800E79B4 000E47B4*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E79B8 000E47B8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E79BC 000E47BC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E79C0 000E47C0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E79C4 000E47C4*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f2);
/*800E79C8 000E47C8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E79CC 000E47CC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800E79D0 000E47D0*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*800E79D4 000E47D4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800E79D8, 0x800E79D8) //this is a jump label
/*800E79D8 000E47D8*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800E79DC 000E47DC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x40);
/*800E79E0 000E47E0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800E79E4 000E47E4*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800E79E8 000E47E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800E79EC 000E47EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E79F0 000E47F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800E79F4 000E47F4*/ PPC::Runtime::ASM::blr();
}