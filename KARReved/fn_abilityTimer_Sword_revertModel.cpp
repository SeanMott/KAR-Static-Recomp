//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_ability_Sword_end.hpp"
#include "fn_Rider_SetModelVisibility.hpp"
#include "fn_Rider_SetUnknownFlag.hpp"
#include "fn_revertKirbyModel?.hpp"



void fn_abilityTimer_Sword_revertModel(PPC::Runtime::GCContext* context)
{
/*801AFC70 001ACA70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AFC74 001ACA74*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AFC78 001ACA78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFC7C 001ACA7C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AFC80 001ACA80*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AFC84 001ACA84*/ PPC::Runtime::ASM::bl(fn_ability_Sword_end);
/*801AFC88 001ACA88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AFC8C 001ACA8C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801AFC90 001ACA90*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801AFC94 001ACA94*/ PPC::Runtime::ASM::bl(fn_Rider_SetModelVisibility);
/*801AFC98 001ACA98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AFC9C 001ACA9C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801AFCA0 001ACAA0*/ PPC::Runtime::ASM::bl(fn_Rider_SetUnknownFlag);
/*801AFCA4 001ACAA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AFCA8 001ACAA8*/ PPC::Runtime::ASM::bl(fn_revertKirbyModel?);
/*801AFCAC 001ACAAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFCB0 001ACAB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AFCB4 001ACAB4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AFCB8 001ACAB8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AFCBC 001ACABC*/ PPC::Runtime::ASM::blr();
}