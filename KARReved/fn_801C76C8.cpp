//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E0E28.hpp"



void fn_801C76C8(PPC::Runtime::GCContext* context)
{
/*801C76C8 001C44C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C76CC 001C44CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C76D0 001C44D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C76D4 001C44D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C76D8 001C44D8*/ PPC::Runtime::ASM::bl(fn_801E0E28);
/*801C76DC 001C44DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C76E0 001C44E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C76E4 001C44E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C76E8 001C44E8*/ PPC::Runtime::ASM::blr();
}