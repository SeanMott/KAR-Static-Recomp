//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRKAcquireMutex.hpp"
#include "fn_TRK_memcpy.hpp"
#include "fn_TRKReleaseMutex.hpp"



void TRKGetNextEvent(PPC::Runtime::GCContext* context)
{
/*803BD844 003BA644*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803BD848 003BA648*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BD84C 003BA64C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80569E60 @ Get_MemoryOffset_HighBit);
/*803BD850 003BA650*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BD854 003BA654*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BD858 003BA658*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BD85C 003BA65C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803BD860 003BA660*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BD864 003BA664*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803BD868 003BA668*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_80569E60 @ Get_MemoryOffset_LowBit);
/*803BD86C 003BA66C*/ PPC::Runtime::ASM::bl(fn_TRKAcquireMutex);
/*803BD870 003BA670*/ PPC::Runtime::ASM::lis(context->r3, lbl_80569E60 @ Get_MemoryOffset_HighBit);
/*803BD874 003BA674*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80569E60 @ Get_MemoryOffset_LowBit);
/*803BD878 003BA678*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803BD87C 003BA67C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803BD880 003BA680*/ PPC::Runtime::ASM::ble(.L_803BD8CC);
/*803BD884 003BA684*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803BD888 003BA688*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803BD88C 003BA68C*/ PPC::Runtime::ASM::li(context->r5, 0xc);
/*803BD890 003BA690*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*803BD894 003BA694*/ PPC::Runtime::ASM::add(context->r4, context->r31, context->r0);
/*803BD898 003BA698*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0xc);
/*803BD89C 003BA69C*/ PPC::Runtime::ASM::bl(fn_TRK_memcpy);
/*803BD8A0 003BA6A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803BD8A4 003BA6A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803BD8A8 003BA6A8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*803BD8AC 003BA6AC*/ PPC::Runtime::ASM::subi(context->r3, context->r4, 0x1);
/*803BD8B0 003BA6B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803BD8B4 003BA6B4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*803BD8B8 003BA6B8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803BD8BC 003BA6BC*/ PPC::Runtime::ASM::bne(.L_803BD8C8);
/*803BD8C0 003BA6C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BD8C4 003BA6C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_803BD8C8, 0x803BD8C8) //this is a jump label
/*803BD8C8 003BA6C8*/ PPC::Runtime::ASM::li(context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803BD8CC, 0x803BD8CC) //this is a jump label
/*803BD8CC 003BA6CC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80569E60 @ Get_MemoryOffset_HighBit);
/*803BD8D0 003BA6D0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80569E60 @ Get_MemoryOffset_LowBit);
/*803BD8D4 003BA6D4*/ PPC::Runtime::ASM::bl(fn_TRKReleaseMutex);
/*803BD8D8 003BA6D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BD8DC 003BA6DC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803BD8E0 003BA6E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BD8E4 003BA6E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BD8E8 003BA6E8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BD8EC 003BA6EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BD8F0 003BA6F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803BD8F4 003BA6F4*/ PPC::Runtime::ASM::blr();
}