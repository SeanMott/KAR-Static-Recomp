//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204FAC.hpp"
#include "fn_802041B0.hpp"
#include "fn_8021D7A0.hpp"
#include "fn_8021D7A0.hpp"
#include "fn_802042FC.hpp"
#include "fn_8007A958.hpp"



void fn_8021C9DC(PPC::Runtime::GCContext* context)
{
/*8021C9DC 002197DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8021C9E0 002197E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021C9E4 002197E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021C9E8 002197E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021C9EC 002197EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8021C9F0 002197F0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8021C9F4 002197F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8021C9F8 002197F8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c0, context->r3));
/*8021C9FC 002197FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8021CA00 00219800*/ PPC::Runtime::ASM::bl(fn_80204FAC);
/*8021CA04 00219804*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8021CA08 00219808*/ PPC::Runtime::ASM::bl(fn_802041B0);
/*8021CA0C 0021980C*/ PPC::Runtime::ASM::lis(context->r3, fn_8021D7A0 @ Get_MemoryOffset_HighBit);
/*8021CA10 00219810*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_8021D7A0 @ Get_MemoryOffset_LowBit);
/*8021CA14 00219814*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xacc, context->r30));
/*8021CA18 00219818*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xad0, context->r30));
/*8021CA1C 0021981C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8021CA20 00219820*/ PPC::Runtime::ASM::bl(fn_802042FC);
/*8021CA24 00219824*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8021CA28 00219828*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x30);
/*8021CA2C 0021982C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb9c, context->r30));
/*8021CA30 00219830*/ PPC::Runtime::ASM::bl(fn_8007A958);
/*8021CA34 00219834*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb9c, context->r30));
/*8021CA38 00219838*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021CA3C 0021983C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021CA40 00219840*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8021CA44 00219844*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8021CA48 00219848*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021CA4C 0021984C*/ PPC::Runtime::ASM::blr();
}