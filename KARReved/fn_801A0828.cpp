//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_SetCTHudToAbilityWeapon_Maybe.hpp"



void fn_801A0828(PPC::Runtime::GCContext* context)
{
/*801A0828 0019D628*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A082C 0019D62C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A0830 0019D630*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A0834 0019D634*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A0838 0019D638*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801A083C 0019D63C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A0840 0019D640*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A0844 0019D644*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r3));
/*801A0848 0019D648*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801A084C 0019D64C*/ PPC::Runtime::ASM::beq(.L_801A0858);
/*801A0850 0019D650*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801A0854 0019D654*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801A0858, 0x801A0858) //this is a jump label
/*801A0858 0019D658*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e8, context->r30));
/*801A085C 0019D65C*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801A0860 0019D660*/ PPC::Runtime::ASM::beq(.L_801A0874);
/*801A0864 0019D664*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A0868 0019D668*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801A086C 0019D66C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801A0870 0019D670*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801A0874, 0x801A0874) //this is a jump label
/*801A0874 0019D674*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801A0878 0019D678*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801A087C 0019D67C*/ PPC::Runtime::ASM::bne(.L_801A0894);
/*801A0880 0019D680*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r30));
/*801A0884 0019D684*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*801A0888 0019D688*/ PPC::Runtime::ASM::beq(.L_801A0894);
/*801A088C 0019D68C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A0890 0019D690*/ PPC::Runtime::ASM::bl(fn_SetCTHudToAbilityWeapon_Maybe);
RUNTIME_PPC_JUMP_LABEL(.L_801A0894, 0x801A0894) //this is a jump label
/*801A0894 0019D694*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A0898 0019D698*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A089C 0019D69C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A08A0 0019D6A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A08A4 0019D6A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A08A8 0019D6A8*/ PPC::Runtime::ASM::blr();
}