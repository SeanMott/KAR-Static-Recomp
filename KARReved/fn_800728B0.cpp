//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800727E8.hpp"



void fn_800728B0(PPC::Runtime::GCContext* context)
{
/*800728B0 0006F6B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800728B4 0006F6B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800728B8 0006F6B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800728BC 0006F6BC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800728C0 0006F6C0*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800728C4 0006F6C4*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800728C8 0006F6C8*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800728CC 0006F6CC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*800728D0 0006F6D0*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180550F68 @ Get_MemoryOffset_HighBit);
/*800728D4 0006F6D4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800728D8 0006F6D8*/ PPC::Runtime::ASM::addi(context->r31, context->r4, STRUCT_BYTE4_COUNT_180550F68 @ Get_MemoryOffset_LowBit);
/*800728DC 0006F6DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c4, context->r31));
/*800728E0 0006F6E0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r27);
/*800728E4 0006F6E4*/ PPC::Runtime::ASM::bne(.L_800728F0);
/*800728E8 0006F6E8*/ PPC::Runtime::ASM::li(context->r28, 0x1);
/*800728EC 0006F6EC*/ PPC::Runtime::ASM::b(.L_80072940);
RUNTIME_PPC_JUMP_LABEL(.L_800728F0, 0x800728F0) //this is a jump label
/*800728F0 0006F6F0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800728F4, 0x800728F4) //this is a jump label
/*800728F4 0006F6F4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x104);
/*800728F8 0006F6F8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800728FC 0006F6FC*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80072900 0006F700*/ PPC::Runtime::ASM::beq(.L_80072930);
/*80072904 0006F704*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*80072908 0006F708*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8007290C 0006F70C*/ PPC::Runtime::ASM::cmpw(context->r0, context->r27);
/*80072910 0006F710*/ PPC::Runtime::ASM::bne(.L_80072930);
/*80072914 0006F714*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80072918 0006F718*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*8007291C 0006F71C*/ PPC::Runtime::ASM::bne(.L_80072928);
/*80072920 0006F720*/ PPC::Runtime::ASM::li(context->r28, 0x1);
/*80072924 0006F724*/ PPC::Runtime::ASM::b(.L_80072930);
RUNTIME_PPC_JUMP_LABEL(.L_80072928, 0x80072928) //this is a jump label
/*80072928 0006F728*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8007292C 0006F72C*/ PPC::Runtime::ASM::bl(fn_800727E8);
RUNTIME_PPC_JUMP_LABEL(.L_80072930, 0x80072930) //this is a jump label
/*80072930 0006F730*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80072934 0006F734*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x28);
/*80072938 0006F738*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x78);
/*8007293C 0006F73C*/ PPC::Runtime::ASM::blt(.L_800728F4);
RUNTIME_PPC_JUMP_LABEL(.L_80072940, 0x80072940) //this is a jump label
/*80072940 0006F740*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80072944 0006F744*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80072948 0006F748*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8007294C 0006F74C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80072950 0006F750*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80072954 0006F754*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80072958 0006F758*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007295C 0006F75C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80072960 0006F760*/ PPC::Runtime::ASM::blr();
}