//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801B3A74.hpp"
#include "fn_801B3D18.hpp"
#include "fn_abilityTimer_Spike_CheckIf0.hpp"
#include "fn_abilityTimer_Spike_CheckIf0.hpp"
#include "fn_801B3A74.hpp"
#include "fn_801B3D18.hpp"
#include "fn_801B3C4C.hpp"
#include "fn_801B3C4C.hpp"
#include "fn_801A7BDC.hpp"
#include "fn_801A9A54.hpp"



void fn_801B385C(PPC::Runtime::GCContext* context)
{
/*801B385C 001B065C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B3860 001B0660*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B3864 001B0664*/ PPC::Runtime::ASM::lis(context->r6, fn_801B3A74 @ Get_MemoryOffset_HighBit);
/*801B3868 001B0668*/ PPC::Runtime::ASM::lis(context->r5, fn_801B3D18 @ Get_MemoryOffset_HighBit);
/*801B386C 001B066C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3870 001B0670*/ PPC::Runtime::ASM::lis(context->r4, fn_abilityTimer_Spike_CheckIf0 @ Get_MemoryOffset_HighBit);
/*801B3874 001B0674*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_abilityTimer_Spike_CheckIf0 @ Get_MemoryOffset_LowBit);
/*801B3878 001B0678*/ PPC::Runtime::ASM::addi(context->r6, context->r6, fn_801B3A74 @ Get_MemoryOffset_LowBit);
/*801B387C 001B067C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3880 001B0680*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn_801B3D18 @ Get_MemoryOffset_LowBit);
/*801B3884 001B0684*/ PPC::Runtime::ASM::lis(context->r4, fn_801B3C4C @ Get_MemoryOffset_HighBit);
/*801B3888 001B0688*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B388C 001B068C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x92c, context->r3));
/*801B3890 001B0690*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B3C4C @ Get_MemoryOffset_LowBit);
/*801B3894 001B0694*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x934, context->r3));
/*801B3898 001B0698*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7fc, context->r3));
/*801B389C 001B069C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e8, context->r3));
/*801B38A0 001B06A0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r3));
/*801B38A4 001B06A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x294, context->r4));
/*801B38A8 001B06A8*/ PPC::Runtime::ASM::bl(fn_801A7BDC);
/*801B38AC 001B06AC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B38B0 001B06B0*/ PPC::Runtime::ASM::bl(fn_801A9A54);
/*801B38B4 001B06B4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801B38B8 001B06B8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801B38BC 001B06BC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801B38C0 001B06C0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B38C4 001B06C4*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r4, 7, 24, 24);
/*801B38C8 001B06C8*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B38CC 001B06CC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B38D0 001B06D0*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r4, 3, 28, 28);
/*801B38D4 001B06D4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B38D8 001B06D8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B38DC 001B06DC*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r4, 4, 25, 27);
/*801B38E0 001B06E0*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B38E4 001B06E4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B38E8 001B06E8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
/*801B38EC 001B06EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B38F0 001B06F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B38F4 001B06F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B38F8 001B06F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B38FC 001B06FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B3900 001B0700*/ PPC::Runtime::ASM::blr();
}