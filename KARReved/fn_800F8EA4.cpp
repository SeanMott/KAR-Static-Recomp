//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F66E0.hpp"
#include "fn_800F66E0.hpp"



void fn_800F8EA4(PPC::Runtime::GCContext* context)
{
/*800F8EA4 000F5CA4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*800F8EA8 000F5CA8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F8EAC 000F5CAC*/ PPC::Runtime::ASM::lis(context->r9, 0x4330);
/*800F8EB0 000F5CB0*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805DF858 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F8EB4 000F5CB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800F8EB8 000F5CB8*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF840 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F8EBC 000F5CBC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8EC0 000F5CC0*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800F8EC4 000F5CC4*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800F8EC8 000F5CC8*/ PPC::Runtime::ASM::addi(context->r0, context->r7, 0x4);
/*800F8ECC 000F5CCC*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
/*800F8ED0 000F5CD0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800F8ED4 000F5CD4*/ PPC::Runtime::ASM::extrwi(context->r5, context->r5, 8, 22);
/*800F8ED8 000F5CD8*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
/*800F8EDC 000F5CDC*/ PPC::Runtime::ASM::extrwi(context->r6, context->r6, 1, 30);
/*800F8EE0 000F5CE0*/ PPC::Runtime::ASM::extrwi(context->r10, context->r8, 16, 15);
/*800F8EE4 000F5CE4*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800F8EE8 000F5CE8*/ PPC::Runtime::ASM::lfd(context->f4, STRUCT_DOUBLE_COUNT_1805DF850 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F8EEC 000F5CEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/* 800F8EF0 000F5CF0  54 E0 07 FF */ clrlwi. context->r0 , context->r7 , 31
/*800F8EF4 000F5CF4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8EF8 000F5CF8*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*800F8EFC 000F5CFC*/ PPC::Runtime::ASM::lwz(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800F8F00 000F5D00*/ PPC::Runtime::ASM::addi(context->r0, context->r7, 0x4);
/*800F8F04 000F5D04*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800F8F08 000F5D08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8F0C 000F5D0C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8F10 000F5D10*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800F8F14 000F5D14*/ PPC::Runtime::ASM::lha(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*800F8F18 000F5D18*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x4);
/*800F8F1C 000F5D1C*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*800F8F20 000F5D20*/ PPC::Runtime::ASM::xoris(context->r7, context->r7, 0x8000);
/*800F8F24 000F5D24*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800F8F28 000F5D28*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800F8F2C 000F5D2C*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F8F30 000F5D30*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*800F8F34 000F5D34*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800F8F38 000F5D38*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*800F8F3C 000F5D3C*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800F8F40 000F5D40*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f4);
/*800F8F44 000F5D44*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F8F48 000F5D48*/ PPC::Runtime::ASM::lha(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r8));
/*800F8F4C 000F5D4C*/ PPC::Runtime::ASM::xoris(context->r7, context->r7, 0x8000);
/*800F8F50 000F5D50*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F8F54 000F5D54*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800F8F58 000F5D58*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*800F8F5C 000F5D5C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*800F8F60 000F5D60*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F8F64 000F5D64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8F68 000F5D68*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8F6C 000F5D6C*/ PPC::Runtime::ASM::lha(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*800F8F70 000F5D70*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x4);
/*800F8F74 000F5D74*/ PPC::Runtime::ASM::xoris(context->r7, context->r7, 0x8000);
/*800F8F78 000F5D78*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800F8F7C 000F5D7C*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*800F8F80 000F5D80*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*800F8F84 000F5D84*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*800F8F88 000F5D88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F8F8C 000F5D8C*/ PPC::Runtime::ASM::lhz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r8));
/*800F8F90 000F5D90*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800F8F94 000F5D94*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800F8F98 000F5D98*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f4);
/*800F8F9C 000F5D9C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*800F8FA0 000F5DA0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F8FA4 000F5DA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8FA8 000F5DA8*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8FAC 000F5DAC*/ PPC::Runtime::ASM::lhz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*800F8FB0 000F5DB0*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x4);
/*800F8FB4 000F5DB4*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800F8FB8 000F5DB8*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800F8FBC 000F5DBC*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f4);
/*800F8FC0 000F5DC0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*800F8FC4 000F5DC4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F8FC8 000F5DC8*/ PPC::Runtime::ASM::lhz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r8));
/*800F8FCC 000F5DCC*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800F8FD0 000F5DD0*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*800F8FD4 000F5DD4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f4);
/*800F8FD8 000F5DD8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*800F8FDC 000F5DDC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F8FE0 000F5DE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800F8FE4 000F5DE4*/ PPC::Runtime::ASM::beq(.L_800F9004);
/*800F8FE8 000F5DE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F8FEC 000F5DEC*/ PPC::Runtime::ASM::mr(context->r4, context->r11);
/*800F8FF0 000F5DF0*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x14);
/*800F8FF4 000F5DF4*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x8);
/*800F8FF8 000F5DF8*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*800F8FFC 000F5DFC*/ PPC::Runtime::ASM::bl(fn_800F66E0);
/*800F9000 000F5E00*/ PPC::Runtime::ASM::b(.L_800F901C);
RUNTIME_PPC_JUMP_LABEL(.L_800F9004, 0x800F9004) //this is a jump label
/*800F9004 000F5E04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F9008 000F5E08*/ PPC::Runtime::ASM::mr(context->r4, context->r11);
/*800F900C 000F5E0C*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x14);
/*800F9010 000F5E10*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x8);
/*800F9014 000F5E14*/ PPC::Runtime::ASM::li(context->r9, 0x1);
/*800F9018 000F5E18*/ PPC::Runtime::ASM::bl(fn_800F66E0);
RUNTIME_PPC_JUMP_LABEL(.L_800F901C, 0x800F901C) //this is a jump label
/*800F901C 000F5E1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800F9020 000F5E20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9024 000F5E24*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*800F9028 000F5E28*/ PPC::Runtime::ASM::blr();
}