//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019F238.hpp"
#include "fn_801C0DB8.hpp"
#include "fn_801C0DB8.hpp"
#include "fn_8019F288.hpp"



void fn_801C0BBC(PPC::Runtime::GCContext* context)
{
/*801C0BBC 001BD9BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C0BC0 001BD9C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C0BC4 001BD9C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C0BC8 001BD9C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C0BCC 001BD9CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C0BD0 001BD9D0*/ PPC::Runtime::ASM::bl(fn_8019F238);
/*801C0BD4 001BD9D4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C0BD8 001BD9D8*/ PPC::Runtime::ASM::beq(.L_801C0C14);
/*801C0BDC 001BD9DC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r31));
/* 801C0BE0 001BD9E0  54 60 D7 FF */ extrwi. context->r0 , context->r3 , 1 , 25
/*801C0BE4 001BD9E4*/ PPC::Runtime::ASM::bne(.L_801C0BEC);
/*801C0BE8 001BD9E8*/ PPC::Runtime::ASM::b(.L_801C0C14);
RUNTIME_PPC_JUMP_LABEL(.L_801C0BEC, 0x801C0BEC) //this is a jump label
/* 801C0BEC 001BD9EC  54 60 CF FF */ extrwi. context->r0 , context->r3 , 1 , 24
/*801C0BF0 001BD9F0*/ PPC::Runtime::ASM::bne(.L_801C0C14);
/*801C0BF4 001BD9F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
/*801C0BF8 001BD9F8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801C0BFC 001BD9FC*/ PPC::Runtime::ASM::bne(.L_801C0C14);
/*801C0C00 001BDA00*/ PPC::Runtime::ASM::lis(context->r4, fn_801C0DB8 @ Get_MemoryOffset_HighBit);
/*801C0C04 001BDA04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C0C08 001BDA08*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_801C0DB8 @ Get_MemoryOffset_LowBit);
/*801C0C0C 001BDA0C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x828);
/*801C0C10 001BDA10*/ PPC::Runtime::ASM::bl(fn_8019F288);
RUNTIME_PPC_JUMP_LABEL(.L_801C0C14, 0x801C0C14) //this is a jump label
/*801C0C14 001BDA14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C0C18 001BDA18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C0C1C 001BDA1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C0C20 001BDA20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C0C24 001BDA24*/ PPC::Runtime::ASM::blr();
}