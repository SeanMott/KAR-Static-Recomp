//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80009764.hpp"



void fn_80126B54(PPC::Runtime::GCContext* context)
{
/*80126B54 00123954*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80126B58 00123958*/ PPC::Runtime::ASM::mflr(context->r0);
/*80126B5C 0012395C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80126B60 00123960*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80126B64 00123964*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80126B68 00123968*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80126B6C 0012396C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80126B70 00123970*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80126B74 00123974*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80126B78 00123978*/ PPC::Runtime::ASM::lfd(context->f31, STRUCT_DOUBLE_COUNT_1805DFF28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80126B7C 0012397C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0xb54);
/*80126B80 00123980*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80126B84, 0x80126B84) //this is a jump label
/*80126B84 00123984*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*80126B88 00123988*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80126B8C 0012398C*/ PPC::Runtime::ASM::beq(.L_80126BB0);
/*80126B90 00123990*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80126B94 00123994*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80126B98 00123998*/ PPC::Runtime::ASM::beq(.L_80126BB0);
/*80126B9C 0012399C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*80126BA0 001239A0*/ PPC::Runtime::ASM::bl(fn_80009764);
/*80126BA4 001239A4*/ PPC::Runtime::ASM::fadd(context->f0, context->f31, context->f1);
/*80126BA8 001239A8*/ PPC::Runtime::ASM::frsp(context->f0, context->f0);
/*80126BAC 001239AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80126BB0, 0x80126BB0) //this is a jump label
/*80126BB0 001239B0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80126BB4 001239B4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*80126BB8 001239B8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80126BBC 001239BC*/ PPC::Runtime::ASM::blt(.L_80126B84);
/*80126BC0 001239C0*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80126BC4 001239C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80126BC8 001239C8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80126BCC 001239CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80126BD0 001239D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80126BD4 001239D4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80126BD8 001239D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80126BDC 001239DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80126BE0 001239E0*/ PPC::Runtime::ASM::blr();
}