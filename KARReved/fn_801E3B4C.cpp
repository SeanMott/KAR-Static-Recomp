//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CBA4C.hpp"



void fn_801E3B4C(PPC::Runtime::GCContext* context)
{
/*801E3B4C 001E094C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E3B50 001E0950*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E3B54 001E0954*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E3B58 001E0958*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r3));
/* 801E3B5C 001E095C  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801E3B60 001E0960*/ PPC::Runtime::ASM::beq(.L_801E3B68);
/*801E3B64 001E0964*/ PPC::Runtime::ASM::bl(fn_801CBA4C);
RUNTIME_PPC_JUMP_LABEL(.L_801E3B68, 0x801E3B68) //this is a jump label
/*801E3B68 001E0968*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E3B6C 001E096C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E3B70 001E0970*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E3B74 001E0974*/ PPC::Runtime::ASM::blr();
}