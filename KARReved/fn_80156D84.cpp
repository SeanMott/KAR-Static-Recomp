//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80156D84(PPC::Runtime::GCContext* context)
{
/*80156D84 00153B84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80156D88 00153B88*/ PPC::Runtime::ASM::mflr(context->r0);
/*80156D8C 00153B8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80156D90 00153B90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80156D94 00153B94*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80156D98 00153B98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80156D9C 00153B9C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80156DA0 00153BA0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80156DA4, 0x80156DA4) //this is a jump label
/*80156DA4 00153BA4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80156DA8 00153BA8*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80156DAC 00153BAC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80156DB0 00153BB0*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80156DB4 00153BB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c0, context->r30));
/*80156DB8 00153BB8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80156DBC 00153BBC*/ PPC::Runtime::ASM::beq(.L_80156DC8);
/*80156DC0 00153BC0*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80156DC4 00153BC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80156DC8, 0x80156DC8) //this is a jump label
/*80156DC8 00153BC8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80156DCC 00153BCC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80156DD0 00153BD0*/ PPC::Runtime::ASM::blt(.L_80156DA4);
/*80156DD4 00153BD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80156DD8 00153BD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80156DDC 00153BDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80156DE0 00153BE0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80156DE4 00153BE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80156DE8 00153BE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80156DEC 00153BEC*/ PPC::Runtime::ASM::blr();
}