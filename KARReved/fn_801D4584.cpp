//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801D4584(PPC::Runtime::GCContext* context)
{
/*801D4584 001D1384*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801D4588 001D1388*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D458C 001D138C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D4590 001D1390*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D4594 001D1394*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801D4598 001D1398*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D459C 001D139C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D45A0 001D13A0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D45A4 001D13A4*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801D45A8 001D13A8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D45AC 001D13AC*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801D45B0 001D13B0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r4));
/* 801D45B4 001D13B4  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801D45B8 001D13B8*/ PPC::Runtime::ASM::beq(.L_801D4610);
/*801D45BC 001D13BC*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801D45C0 001D13C0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801D45C4 001D13C4*/ PPC::Runtime::ASM::b(.L_801D45FC);
RUNTIME_PPC_JUMP_LABEL(.L_801D45C8, 0x801D45C8) //this is a jump label
/*801D45C8 001D13C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r28));
/*801D45CC 001D13CC*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r31);
/*801D45D0 001D13D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801D45D4 001D13D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/* 801D45D8 001D13D8  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801D45DC 001D13DC*/ PPC::Runtime::ASM::bne(.L_801D45F4);
/*801D45E0 001D13E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*801D45E4 001D13E4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801D45E8 001D13E8*/ PPC::Runtime::ASM::beq(.L_801D45F4);
/*801D45EC 001D13EC*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*801D45F0 001D13F0*/ PPC::Runtime::ASM::bl(fn_HSD_AObjSetRate);
RUNTIME_PPC_JUMP_LABEL(.L_801D45F4, 0x801D45F4) //this is a jump label
/*801D45F4 001D13F4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x8);
/*801D45F8 001D13F8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801D45FC, 0x801D45FC) //this is a jump label
/*801D45FC 001D13FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*801D4600 001D1400*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801D4604 001D1404*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801D4608 001D1408*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*801D460C 001D140C*/ PPC::Runtime::ASM::blt(.L_801D45C8);
RUNTIME_PPC_JUMP_LABEL(.L_801D4610, 0x801D4610) //this is a jump label
/*801D4610 001D1410*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r29));
/*801D4614 001D1414*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D4618 001D1418*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D461C 001D141C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D4620 001D1420*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D4624 001D1424*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D4628 001D1428*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D462C 001D142C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D4630 001D1430*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801D4634 001D1434*/ PPC::Runtime::ASM::blr();
}