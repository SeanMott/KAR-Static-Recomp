//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8016F0E0(PPC::Runtime::GCContext* context)
{
/*8016F0E0 0016BEE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016F0E4 0016BEE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016F0E8 0016BEE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016F0EC 0016BEEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016F0F0 0016BEF0*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*8016F0F4 0016BEF4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016F0F8 0016BEF8*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*8016F0FC 0016BEFC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016F100 0016BF00*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8016F104 0016BF04*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8016F108 0016BF08*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8016F10C 0016BF0C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8016F110 0016BF10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbe0, context->r3));
/*8016F114 0016BF14*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8016F118 0016BF18*/ PPC::Runtime::ASM::beq(.L_8016F138);
/*8016F11C 0016BF1C*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*8016F120 0016BF20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8016F124 0016BF24*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 5);
/*8016F128 0016BF28*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8016F12C 0016BF2C*/ PPC::Runtime::ASM::stb(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*8016F130 0016BF30*/ PPC::Runtime::ASM::stb(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x25, context->r3));
/*8016F134 0016BF34*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8016F138, 0x8016F138) //this is a jump label
/*8016F138 0016BF38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016F13C 0016BF3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016F140 0016BF40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016F144 0016BF44*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016F148 0016BF48*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8016F14C 0016BF4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016F150 0016BF50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016F154 0016BF54*/ PPC::Runtime::ASM::blr();
}