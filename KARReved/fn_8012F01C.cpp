//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012F01C(PPC::Runtime::GCContext* context)
{
/*8012F01C 0012BE1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012F020 0012BE20*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012F024 0012BE24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012F028 0012BE28*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012F02C 0012BE2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012F030 0012BE30*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012F034 0012BE34*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012F038 0012BE38*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xcf8);
/*8012F03C 0012BE3C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8012F040 0012BE40*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8012F044, 0x8012F044) //this is a jump label
/*8012F044 0012BE44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8012F048 0012BE48*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012F04C 0012BE4C*/ PPC::Runtime::ASM::beq(.L_8012F058);
/*8012F050 0012BE50*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012F054 0012BE54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012F058, 0x8012F058) //this is a jump label
/*8012F058 0012BE58*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8012F05C 0012BE5C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8012F060 0012BE60*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8012F064 0012BE64*/ PPC::Runtime::ASM::blt(.L_8012F044);
/*8012F068 0012BE68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012F06C 0012BE6C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012F070 0012BE70*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012F074 0012BE74*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012F078 0012BE78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012F07C 0012BE7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012F080 0012BE80*/ PPC::Runtime::ASM::blr();
}