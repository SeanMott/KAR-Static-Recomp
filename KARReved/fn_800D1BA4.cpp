//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A98EC.hpp"
#include "fn_800D9958.hpp"
#include "fn_800A98F0.hpp"



void fn_800D1BA4(PPC::Runtime::GCContext* context)
{
/*800D1BA4 000CE9A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D1BA8 000CE9A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D1BAC 000CE9AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D1BB0 000CE9B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D1BB4 000CE9B4*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800D1BB8 000CE9B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D1BBC 000CE9BC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800D1BC0 000CE9C0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D1BC4 000CE9C4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D1BC8 000CE9C8*/ PPC::Runtime::ASM::bl(fn_800A98EC);
/*800D1BCC 000CE9CC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D1BD0 000CE9D0*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D1BD4 000CE9D4*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800D1BD8 000CE9D8*/ PPC::Runtime::ASM::mr(context->r8, context->r31);
/*800D1BDC 000CE9DC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x54);
/*800D1BE0 000CE9E0*/ PPC::Runtime::ASM::li(context->r6, 0x7);
/*800D1BE4 000CE9E4*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*800D1BE8 000CE9E8*/ PPC::Runtime::ASM::bl(fn_800D9958);
/*800D1BEC 000CE9EC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800D1BF0 000CE9F0*/ PPC::Runtime::ASM::bl(fn_800A98F0);
/*800D1BF4 000CE9F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D1BF8 000CE9F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D1BFC 000CE9FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D1C00 000CEA00*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D1C04 000CEA04*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D1C08 000CEA08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D1C0C 000CEA0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D1C10 000CEA10*/ PPC::Runtime::ASM::blr();
}