//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A718C.hpp"



void fn_800A7994(PPC::Runtime::GCContext* context)
{
/*800A7994 000A4794*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A7998 000A4798*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A799C 000A479C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A79A0 000A47A0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800A79A4 000A47A4*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800A79A8 000A47A8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800A79AC 000A47AC*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800A79B0 000A47B0*/ PPC::Runtime::ASM::mr(context->r27, context->r5);
/*800A79B4 000A47B4*/ PPC::Runtime::ASM::bne(.L_800A7A1C);
/*800A79B8 000A47B8*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A79BC 000A47BC*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_652 @ Get_MemoryOffset_HighBit);
/*800A79C0 000A47C0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_653 @ Get_MemoryOffset_HighBit);
/*800A79C4 000A47C4*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800A79C8 000A47C8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*800A79CC 000A47CC*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_652 @ Get_MemoryOffset_LowBit);
/*800A79D0 000A47D0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_653 @ Get_MemoryOffset_LowBit);
/*800A79D4 000A47D4*/ PPC::Runtime::ASM::b(.L_800A7A14);
RUNTIME_PPC_JUMP_LABEL(.L_800A79D8, 0x800A79D8) //this is a jump label
/*800A79D8 000A47D8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800A79DC 000A47DC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xd);
/*800A79E0 000A47E0*/ PPC::Runtime::ASM::beq(.L_800A79F4);
/*800A79E4 000A47E4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800A79E8 000A47E8*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*800A79EC 000A47EC*/ PPC::Runtime::ASM::li(context->r4, 0x374);
/*800A79F0 000A47F0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A79F4, 0x800A79F4) //this is a jump label
/*800A79F4 000A47F4*/ PPC::Runtime::ASM::cmpw(context->r28, context->r26);
/*800A79F8 000A47F8*/ PPC::Runtime::ASM::bne(.L_800A7A0C);
/*800A79FC 000A47FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*800A7A00 000A4800*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800A7A04 000A4804*/ PPC::Runtime::ASM::bl(fn_800A718C);
/*800A7A08 000A4808*/ PPC::Runtime::ASM::b(.L_800A7A1C);
RUNTIME_PPC_JUMP_LABEL(.L_800A7A0C, 0x800A7A0C) //this is a jump label
/*800A7A0C 000A480C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800A7A10 000A4810*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A7A14, 0x800A7A14) //this is a jump label
/*800A7A14 000A4814*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800A7A18 000A4818*/ PPC::Runtime::ASM::bne(.L_800A79D8);
RUNTIME_PPC_JUMP_LABEL(.L_800A7A1C, 0x800A7A1C) //this is a jump label
/*800A7A1C 000A481C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800A7A20 000A4820*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800A7A24 000A4824*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A7A28 000A4828*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A7A2C 000A482C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A7A30 000A4830*/ PPC::Runtime::ASM::blr();
}