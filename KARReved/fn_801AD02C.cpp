//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190A88.hpp"
#include "fn_8027A08C.hpp"
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_80231020.hpp"



void fn_801AD02C(PPC::Runtime::GCContext* context)
{
/*801AD02C 001A9E2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AD030 001A9E30*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AD034 001A9E34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AD038 001A9E38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AD03C 001A9E3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AD040 001A9E40*/ PPC::Runtime::ASM::bl(fn_80190A88);
/*801AD044 001A9E44*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801AD048 001A9E48*/ PPC::Runtime::ASM::bl(fn_8027A08C);
/*801AD04C 001A9E4C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1420 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AD050 001A9E50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AD054 001A9E54*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1424 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AD058 001A9E58*/ PPC::Runtime::ASM::li(context->r4, 0x6c);
/*801AD05C 001A9E5C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801AD060 001A9E60*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801AD064 001A9E64*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801AD068 001A9E68*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801AD06C 001A9E6C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801AD070 001A9E70*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801AD074 001A9E74*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801AD078 001A9E78*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801AD07C 001A9E7C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801AD080 001A9E80*/ PPC::Runtime::ASM::bl(fn_80231020);
/*801AD084 001A9E84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AD088 001A9E88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AD08C 001A9E8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AD090 001A9E90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AD094 001A9E94*/ PPC::Runtime::ASM::blr();
}