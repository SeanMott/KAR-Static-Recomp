//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801AFBB0.hpp"
#include "fn_801AFBB0.hpp"
#include "fn_801A889C.hpp"
#include "fn_801A8454.hpp"



void fn_801B0320(PPC::Runtime::GCContext* context)
{
/*801B0320 001AD120*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B0324 001AD124*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B0328 001AD128*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B032C 001AD12C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B0330 001AD130*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B0334 001AD134*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801B0338 001AD138*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B033C 001AD13C*/ PPC::Runtime::ASM::beq(.L_801B0380);
/*801B0340 001AD140*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B0344 001AD144*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801B0348 001AD148*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B034C 001AD14C*/ PPC::Runtime::ASM::lis(context->r3, fn_801AFBB0 @ Get_MemoryOffset_HighBit);
/*801B0350 001AD150*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B0354 001AD154*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801AFBB0 @ Get_MemoryOffset_LowBit);
/*801B0358 001AD158*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B035C 001AD15C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x938, context->r31));
/*801B0360 001AD160*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801B0364 001AD164*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b8, context->r4));
/*801B0368 001AD168*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B036C 001AD16C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801B0370 001AD170*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1bc);
/*801B0374 001AD174*/ PPC::Runtime::ASM::bl(fn_801A889C);
/*801B0378 001AD178*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B037C 001AD17C*/ PPC::Runtime::ASM::bl(fn_801A8454);
RUNTIME_PPC_JUMP_LABEL(.L_801B0380, 0x801B0380) //this is a jump label
/*801B0380 001AD180*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B0384 001AD184*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B0388 001AD188*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B038C 001AD18C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B0390 001AD190*/ PPC::Runtime::ASM::blr();
}