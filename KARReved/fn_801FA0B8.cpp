//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"
#include "fn_801C992C.hpp"



void fn_801FA0B8(PPC::Runtime::GCContext* context)
{
/*801FA0B8 001F6EB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FA0BC 001F6EBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FA0C0 001F6EC0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E219C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA0C4 001F6EC4*/ PPC::Runtime::ASM::li(context->r4, 0x12);
/*801FA0C8 001F6EC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA0CC 001F6ECC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801FA0D0 001F6ED0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2198 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA0D4 001F6ED4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801FA0D8 001F6ED8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA0DC 001F6EDC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FA0E0 001F6EE0*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801FA0E4 001F6EE4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801FA0E8 001F6EE8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801FA0EC 001F6EEC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801FA0F0 001F6EF0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801FA0F4 001F6EF4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA0F8 001F6EF8*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801FA0FC 001F6EFC*/ PPC::Runtime::ASM::extrwi(context->r0, context->r4, 2, 26);
/*801FA100 001F6F00*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801FA104 001F6F04*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 4, 26, 27);
/*801FA108 001F6F08*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801FA10C 001F6F0C*/ PPC::Runtime::ASM::bl(fn_801C992C);
/*801FA110 001F6F10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA114 001F6F14*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA118 001F6F18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FA11C 001F6F1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FA120 001F6F20*/ PPC::Runtime::ASM::blr();
}