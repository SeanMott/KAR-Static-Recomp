//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80049C84(PPC::Runtime::GCContext* context)
{
/*80049C84 00046A84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80049C88 00046A88*/ PPC::Runtime::ASM::mflr(context->r0);
/*80049C8C 00046A8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049C90 00046A90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049C94 00046A94*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049C98 00046A98*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80049C9C 00046A9C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049CA0 00046AA0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80049CA4 00046AA4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r29, 24);
/*80049CA8 00046AA8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_169 @ Get_MemoryOffset_HighBit);
/*80049CAC 00046AAC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x3);
/*80049CB0 00046AB0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_169 @ Get_MemoryOffset_LowBit);
/*80049CB4 00046AB4*/ PPC::Runtime::ASM::blt(.L_80049CD8);
/*80049CB8 00046AB8*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*80049CBC 00046ABC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x180);
/*80049CC0 00046AC0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80049CC4 00046AC4*/ PPC::Runtime::ASM::bl(OSReport);
/*80049CC8 00046AC8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x19c);
/*80049CCC 00046ACC*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*80049CD0 00046AD0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D4 @ Get_MemoryOffset_SDA21);
/*80049CD4 00046AD4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049CD8, 0x80049CD8) //this is a jump label
/*80049CD8 00046AD8*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r30, 24);
/*80049CDC 00046ADC*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x174);
/*80049CE0 00046AE0*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0x3);
/*80049CE4 00046AE4*/ PPC::Runtime::ASM::clrlslwi(context->r5, context->r29, 24, 2);
/*80049CE8 00046AE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049CEC 00046AEC*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r5);
/*80049CF0 00046AF0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x2);
/*80049CF4 00046AF4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049CF8 00046AF8*/ PPC::Runtime::ASM::lbzx(context->r3, context->r4, context->r0);
/*80049CFC 00046AFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049D00 00046B00*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049D04 00046B04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80049D08 00046B08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80049D0C 00046B0C*/ PPC::Runtime::ASM::blr();
}