//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000A474.hpp"
#include "fn_80015E38.hpp"
#include "fn_80015E5C.hpp"
#include "fn_800088C8.hpp"
#include "fn_80015E38.hpp"
#include "fn_menuGetNextMenuID.hpp"
#include "fn_80008220.hpp"
#include "fn_8000CD10.hpp"
#include "fn_menuGetNextMenuID.hpp"
#include "fn_80008220.hpp"
#include "fn_menuGetNextMenuID.hpp"
#include "fn_80008220.hpp"
#include "fn_800064F0.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088F8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088F8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"
#include "fn_800088C8.hpp"



void fn_80015BE8(PPC::Runtime::GCContext* context)
{
/*80015BE8 000129E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80015BEC 000129EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80015BF0 000129F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015BF4 000129F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80015BF8 000129F8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80015BFC 000129FC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80015C00 00012A00*/ PPC::Runtime::ASM::bl(fn_8000A474);
/*80015C04 00012A04*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015C08 00012A08*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80015C0C 00012A0C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x13);
/*80015C10 00012A10*/ PPC::Runtime::ASM::bgt(.L_80015DA0);
/*80015C14 00012A14*/ PPC::Runtime::ASM::lis(context->r4, jumptable_8049625C @ Get_MemoryOffset_HighBit);
/*80015C18 00012A18*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80015C1C 00012A1C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, jumptable_8049625C @ Get_MemoryOffset_LowBit);
/*80015C20 00012A20*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r0);
/*80015C24 00012A24*/ PPC::Runtime::ASM::mtctr(context->r0);
/*80015C28 00012A28*/ PPC::Runtime::ASM::bctr();
/*80015C2C 00012A2C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 23, 23);
/*80015C30 00012A30*/ PPC::Runtime::ASM::beq(.L_80015C78);
/*80015C34 00012A34*/ PPC::Runtime::ASM::bl(fn_80015E38);
/*80015C38 00012A38*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80015C3C 00012A3C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*80015C40 00012A40*/ PPC::Runtime::ASM::bne(.L_80015C68);
/*80015C44 00012A44*/ PPC::Runtime::ASM::bl(fn_80015E5C);
/*80015C48 00012A48*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015C4C 00012A4C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_150 @ Get_MemoryOffset_HighBit);
/*80015C50 00012A50*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_150 @ Get_MemoryOffset_LowBit);
/*80015C54 00012A54*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015C58 00012A58*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80015C5C 00012A5C*/ PPC::Runtime::ASM::lbzx(context->r3, context->r3, context->r0);
/*80015C60 00012A60*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015C64 00012A64*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015C68, 0x80015C68) //this is a jump label
/*80015C68 00012A68*/ PPC::Runtime::ASM::bl(fn_80015E38);
/*80015C6C 00012A6C*/ PPC::Runtime::ASM::bl(fn_menuGetNextMenuID);
/*80015C70 00012A70*/ PPC::Runtime::ASM::bl(fn_80008220);
/*80015C74 00012A74*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015C78, 0x80015C78) //this is a jump label
/*80015C78 00012A78*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 22, 22);
/*80015C7C 00012A7C*/ PPC::Runtime::ASM::beq(.L_80015C98);
/*80015C80 00012A80*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80015C84 00012A84*/ PPC::Runtime::ASM::bl(fn_8000CD10);
/*80015C88 00012A88*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80015C8C 00012A8C*/ PPC::Runtime::ASM::bl(fn_menuGetNextMenuID);
/*80015C90 00012A90*/ PPC::Runtime::ASM::bl(fn_80008220);
/*80015C94 00012A94*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015C98, 0x80015C98) //this is a jump label
/*80015C98 00012A98*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 27, 27);
/*80015C9C 00012A9C*/ PPC::Runtime::ASM::beq(.L_80015DA0);
/*80015CA0 00012AA0*/ PPC::Runtime::ASM::li(context->r3, 0x13);
/*80015CA4 00012AA4*/ PPC::Runtime::ASM::bl(fn_menuGetNextMenuID);
/*80015CA8 00012AA8*/ PPC::Runtime::ASM::bl(fn_80008220);
/*80015CAC 00012AAC*/ PPC::Runtime::ASM::bl(fn_800064F0);
/*80015CB0 00012AB0*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015CB4 00012AB4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80015CB8 00012AB8*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80015CBC 00012ABC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015CC0 00012AC0*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015CC4 00012AC4*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015CC8 00012AC8*/ PPC::Runtime::ASM::bl(fn_800088F8);
/*80015CCC 00012ACC*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80015CD0 00012AD0*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80015CD4 00012AD4*/ PPC::Runtime::ASM::bne(.L_80015DA0);
/*80015CD8 00012AD8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80015CDC 00012ADC*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80015CE0 00012AE0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015CE4 00012AE4*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015CE8 00012AE8*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015CEC 00012AEC*/ PPC::Runtime::ASM::bl(fn_800088F8);
/*80015CF0 00012AF0*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80015CF4 00012AF4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1c);
/*80015CF8 00012AF8*/ PPC::Runtime::ASM::beq(.L_80015D1C);
/*80015CFC 00012AFC*/ PPC::Runtime::ASM::bge(.L_80015D0C);
/*80015D00 00012B00*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80015D04 00012B04*/ PPC::Runtime::ASM::beq(.L_80015D40);
/*80015D08 00012B08*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015D0C, 0x80015D0C) //this is a jump label
/*80015D0C 00012B0C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1e);
/*80015D10 00012B10*/ PPC::Runtime::ASM::beq(.L_80015D34);
/*80015D14 00012B14*/ PPC::Runtime::ASM::bge(.L_80015DA0);
/*80015D18 00012B18*/ PPC::Runtime::ASM::b(.L_80015D28);
RUNTIME_PPC_JUMP_LABEL(.L_80015D1C, 0x80015D1C) //this is a jump label
/*80015D1C 00012B1C*/ PPC::Runtime::ASM::li(context->r0, 0xa);
/*80015D20 00012B20*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D24 00012B24*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015D28, 0x80015D28) //this is a jump label
/*80015D28 00012B28*/ PPC::Runtime::ASM::li(context->r0, 0xb);
/*80015D2C 00012B2C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D30 00012B30*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015D34, 0x80015D34) //this is a jump label
/*80015D34 00012B34*/ PPC::Runtime::ASM::li(context->r0, 0xc);
/*80015D38 00012B38*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D3C 00012B3C*/ PPC::Runtime::ASM::b(.L_80015DA0);
RUNTIME_PPC_JUMP_LABEL(.L_80015D40, 0x80015D40) //this is a jump label
/*80015D40 00012B40*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80015D44 00012B44*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80015D48 00012B48*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D4C 00012B4C*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015D50 00012B50*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015D54 00012B54*/ PPC::Runtime::ASM::li(context->r0, 0x7);
/*80015D58 00012B58*/ PPC::Runtime::ASM::li(context->r3, 0x20);
/*80015D5C 00012B5C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D60 00012B60*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015D64 00012B64*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015D68 00012B68*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*80015D6C 00012B6C*/ PPC::Runtime::ASM::li(context->r3, 0x21);
/*80015D70 00012B70*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D74 00012B74*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015D78 00012B78*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015D7C 00012B7C*/ PPC::Runtime::ASM::li(context->r0, 0x9);
/*80015D80 00012B80*/ PPC::Runtime::ASM::li(context->r3, 0x22);
/*80015D84 00012B84*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D88 00012B88*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*80015D8C 00012B8C*/ PPC::Runtime::ASM::b(.L_80015DA0);
/*80015D90 00012B90*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80015D94 00012B94*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80015D98 00012B98*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b, context->r31));
/*80015D9C 00012B9C*/ PPC::Runtime::ASM::bl(fn_800088C8);
RUNTIME_PPC_JUMP_LABEL(.L_80015DA0, 0x80015DA0) //this is a jump label
/*80015DA0 00012BA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015DA4 00012BA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80015DA8 00012BA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80015DAC 00012BAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80015DB0 00012BB0*/ PPC::Runtime::ASM::blr();
}