//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_fflush.hpp"



void fn___flush_all(PPC::Runtime::GCContext* context)
{
/*803AFF7C 003ACD7C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803AFF80 003ACD80*/ PPC::Runtime::ASM::mflr(context->r0);
/*803AFF84 003ACD84*/ PPC::Runtime::ASM::lis(context->r3, __files @ Get_MemoryOffset_HighBit);
/*803AFF88 003ACD88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AFF8C 003ACD8C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, __files @ Get_MemoryOffset_LowBit);
/*803AFF90 003ACD90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803AFF94 003ACD94*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803AFF98 003ACD98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803AFF9C 003ACD9C*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*803AFFA0 003ACDA0*/ PPC::Runtime::ASM::b(.L_803AFFC8);
RUNTIME_PPC_JUMP_LABEL(.L_803AFFA4, 0x803AFFA4) //this is a jump label
/*803AFFA4 003ACDA4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/* 803AFFA8 003ACDA8  54 00 D7 7F */ extrwi. context->r0 , context->r0 , 3 , 23
/*803AFFAC 003ACDAC*/ PPC::Runtime::ASM::beq(.L_803AFFC4);
/*803AFFB0 003ACDB0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803AFFB4 003ACDB4*/ PPC::Runtime::ASM::bl(fn_fflush);
/*803AFFB8 003ACDB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803AFFBC 003ACDBC*/ PPC::Runtime::ASM::beq(.L_803AFFC4);
/*803AFFC0 003ACDC0*/ PPC::Runtime::ASM::li(context->r31, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803AFFC4, 0x803AFFC4) //this is a jump label
/*803AFFC4 003ACDC4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_803AFFC8, 0x803AFFC8) //this is a jump label
/*803AFFC8 003ACDC8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*803AFFCC 003ACDCC*/ PPC::Runtime::ASM::bne(.L_803AFFA4);
/*803AFFD0 003ACDD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AFFD4 003ACDD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803AFFD8 003ACDD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803AFFDC 003ACDDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803AFFE0 003ACDE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803AFFE4 003ACDE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803AFFE8 003ACDE8*/ PPC::Runtime::ASM::blr();
}