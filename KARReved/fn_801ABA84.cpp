//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A0250.hpp"
#include "fn_8019F894.hpp"



void fn_801ABA84(PPC::Runtime::GCContext* context)
{
/*801ABA84 001A8884*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ABA88 001A8888*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ABA8C 001A888C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ABA90 001A8890*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r3));
/* 801ABA94 001A8894  54 00 E7 FF */ extrwi. context->r0 , context->r0 , 1 , 27
/*801ABA98 001A8898*/ PPC::Runtime::ASM::beq(.L_801ABAB4);
/*801ABA9C 001A889C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r3));
/*801ABAA0 001A88A0*/ PPC::Runtime::ASM::li(context->r4, 0x66);
/*801ABAA4 001A88A4*/ PPC::Runtime::ASM::li(context->r5, 0x67);
/*801ABAA8 001A88A8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r6));
/*801ABAAC 001A88AC*/ PPC::Runtime::ASM::bl(fn_801A0250);
/*801ABAB0 001A88B0*/ PPC::Runtime::ASM::b(.L_801ABAC0);
RUNTIME_PPC_JUMP_LABEL(.L_801ABAB4, 0x801ABAB4) //this is a jump label
/*801ABAB4 001A88B4*/ PPC::Runtime::ASM::li(context->r4, 0x66);
/*801ABAB8 001A88B8*/ PPC::Runtime::ASM::li(context->r5, 0x67);
/*801ABABC 001A88BC*/ PPC::Runtime::ASM::bl(fn_8019F894);
RUNTIME_PPC_JUMP_LABEL(.L_801ABAC0, 0x801ABAC0) //this is a jump label
/*801ABAC0 001A88C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ABAC4 001A88C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ABAC8 001A88C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ABACC 001A88CC*/ PPC::Runtime::ASM::blr();
}