//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802D7D4C.hpp"
#include "fn_802D7D4C.hpp"



void fn_8031C358(PPC::Runtime::GCContext* context)
{
/*8031C358 00319158*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8031C35C 0031915C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8031C360 00319160*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8031C364 00319164*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8031C368 00319168*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8031C36C 0031916C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031C370 00319170*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8031C374 00319174*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8031C378 00319178*/ PPC::Runtime::ASM::lis(context->r3, fn_802D7D4C @ Get_MemoryOffset_HighBit);
/*8031C37C 0031917C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*8031C380 00319180*/ PPC::Runtime::ASM::addi(context->r31, context->r3, fn_802D7D4C @ Get_MemoryOffset_LowBit);
/*8031C384 00319184*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*8031C388 00319188*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x15c);
/*8031C38C 0031918C*/ PPC::Runtime::ASM::add(context->r29, context->r30, context->r0);
/*8031C390 00319190*/ PPC::Runtime::ASM::b(.L_8031C3B0);
RUNTIME_PPC_JUMP_LABEL(.L_8031C394, 0x8031C394) //this is a jump label
/* 8031C394 00319194  37 BD FE A4 */ subic. context->r29 , context->r29 , 0x15c
/*8031C398 00319198*/ PPC::Runtime::ASM::beq(.L_8031C3B0);
/*8031C39C 0031919C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8031C3A0 003191A0*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8031C3A4 003191A4*/ PPC::Runtime::ASM::li(context->r5, 0x70);
/*8031C3A8 003191A8*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*8031C3AC 003191AC*/ PPC::Runtime::ASM::bl(fn___destroy_arr);
RUNTIME_PPC_JUMP_LABEL(.L_8031C3B0, 0x8031C3B0) //this is a jump label
/*8031C3B0 003191B0*/ PPC::Runtime::ASM::cmplw(context->r29, context->r30);
/*8031C3B4 003191B4*/ PPC::Runtime::ASM::bgt(.L_8031C394);
/*8031C3B8 003191B8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8031C3BC 003191BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*8031C3C0 003191C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8031C3C4 003191C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8031C3C8 003191C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8031C3CC 003191CC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031C3D0 003191D0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8031C3D4 003191D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8031C3D8 003191D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8031C3DC 003191DC*/ PPC::Runtime::ASM::blr();
}