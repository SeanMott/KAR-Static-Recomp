//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C7534.hpp"
#include "fn_801C7CF4.hpp"
#include "fn_80230FA0.hpp"
#include "fn_800D7AD0.hpp"
#include "fn_800D7AD0.hpp"
#include "fn_800E2BD0.hpp"
#include "fn_800F7044.hpp"
#include "fn_800EA084.hpp"
#include "fn_killWhispy.hpp"



void fn_800FCBB4(PPC::Runtime::GCContext* context)
{
/*800FCBB4 000F99B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FCBB8 000F99B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FCBBC 000F99BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FCBC0 000F99C0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FCBC4 000F99C4*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800FCBC8 000F99C8*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800FCBCC 000F99CC*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800FCBD0 000F99D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FCBD4 000F99D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r3));
/*800FCBD8 000F99D8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800FCBDC 000F99DC*/ PPC::Runtime::ASM::beq(.L_800FCCF4);
/*800FCBE0 000F99E0*/ PPC::Runtime::ASM::bge(.L_800FCBF0);
/*800FCBE4 000F99E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FCBE8 000F99E8*/ PPC::Runtime::ASM::bge(.L_800FCBF8);
/*800FCBEC 000F99EC*/ PPC::Runtime::ASM::b(.L_800FCCF4);
RUNTIME_PPC_JUMP_LABEL(.L_800FCBF0, 0x800FCBF0) //this is a jump label
/*800FCBF0 000F99F0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*800FCBF4 000F99F4*/ PPC::Runtime::ASM::bge(.L_800FCCF4);
RUNTIME_PPC_JUMP_LABEL(.L_800FCBF8, 0x800FCBF8) //this is a jump label
/*800FCBF8 000F99F8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FCBFC 000F99FC*/ PPC::Runtime::ASM::bl(fn_801C7534);
/*800FCC00 000F9A00*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FCC04 000F9A04*/ PPC::Runtime::ASM::beq(.L_800FCC14);
/*800FCC08 000F9A08*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FCC0C 000F9A0C*/ PPC::Runtime::ASM::bl(fn_801C7CF4);
/*800FCC10 000F9A10*/ PPC::Runtime::ASM::bl(fn_80230FA0);
RUNTIME_PPC_JUMP_LABEL(.L_800FCC14, 0x800FCC14) //this is a jump label
/*800FCC14 000F9A14*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r27));
/*800FCC18 000F9A18*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*800FCC1C 000F9A1C*/ PPC::Runtime::ASM::lwz(context->r28, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FCC20 000F9A20*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800FCC24 000F9A24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r28));
/*800FCC28 000F9A28*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800FCC2C 000F9A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FCC30 000F9A30*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FCC34 000F9A34*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800FCC38 000F9A38*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
/*800FCC3C 000F9A3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r29));
/*800FCC40 000F9A40*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800FCC44 000F9A44*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
/*800FCC48 000F9A48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r29));
/*800FCC4C 000F9A4C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FCC50 000F9A50*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
/*800FCC54 000F9A54*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*800FCC58 000F9A58*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800FCC5C 000F9A5C*/ PPC::Runtime::ASM::beq(.L_800FCC6C);
/*800FCC60 000F9A60*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800FCC64 000F9A64*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800FCC68 000F9A68*/ PPC::Runtime::ASM::bl(fn_800E2BD0);
RUNTIME_PPC_JUMP_LABEL(.L_800FCC6C, 0x800FCC6C) //this is a jump label
/*800FCC6C 000F9A6C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800FCC70 000F9A70*/ PPC::Runtime::ASM::mr(context->r28, context->r31);
/*800FCC74 000F9A74*/ PPC::Runtime::ASM::b(.L_800FCCA4);
RUNTIME_PPC_JUMP_LABEL(.L_800FCC78, 0x800FCC78) //this is a jump label
/*800FCC78 000F9A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*800FCC7C 000F9A7C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800FCC80 000F9A80*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FCC84 000F9A84*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800FCC88 000F9A88*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r28);
/*800FCC8C 000F9A8C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FCC90 000F9A90*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*800FCC94 000F9A94*/ PPC::Runtime::ASM::li(context->r9, 0x0);
/*800FCC98 000F9A98*/ PPC::Runtime::ASM::bl(fn_800F7044);
/*800FCC9C 000F9A9C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1c);
/*800FCCA0 000F9AA0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FCCA4, 0x800FCCA4) //this is a jump label
/*800FCCA4 000F9AA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r30));
/*800FCCA8 000F9AA8*/ PPC::Runtime::ASM::cmpw(context->r31, context->r0);
/*800FCCAC 000F9AAC*/ PPC::Runtime::ASM::blt(.L_800FCC78);
/*800FCCB0 000F9AB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r29));
/*800FCCB4 000F9AB4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FCCB8 000F9AB8*/ PPC::Runtime::ASM::ble(.L_800FCCC8);
/*800FCCBC 000F9ABC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x118);
/*800FCCC0 000F9AC0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FCCC4 000F9AC4*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_800FCCC8, 0x800FCCC8) //this is a jump label
/*800FCCC8 000F9AC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800FCCCC 000F9ACC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800FCCD0 000F9AD0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF910 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FCCD4 000F9AD4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800FCCD8 000F9AD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r29));
/*800FCCDC 000F9ADC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*800FCCE0 000F9AE0*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800FCCE4 000F9AE4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FCCE8 000F9AE8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FCCEC 000F9AEC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FCCF0 000F9AF0*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_800FCCF4, 0x800FCCF4) //this is a jump label
/*800FCCF4 000F9AF4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FCCF8 000F9AF8*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800FCCFC 000F9AFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FCD00 000F9B00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FCD04 000F9B04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FCD08 000F9B08*/ PPC::Runtime::ASM::blr();
}