//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015DA80(PPC::Runtime::GCContext* context)
{
/*8015DA80 0015A880*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015DA84 0015A884*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015DA88 0015A888*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015DA8C 0015A88C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015DA90 0015A890*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8015DA94 0015A894*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015DA98 0015A898*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015DA9C 0015A89C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015DAA0, 0x8015DAA0) //this is a jump label
/*8015DAA0 0015A8A0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015DAA4 0015A8A4*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015DAA8 0015A8A8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015DAAC 0015A8AC*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8015DAB0 0015A8B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x884, context->r30));
/*8015DAB4 0015A8B4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015DAB8 0015A8B8*/ PPC::Runtime::ASM::beq(.L_8015DAC4);
/*8015DABC 0015A8BC*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015DAC0 0015A8C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x884, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8015DAC4, 0x8015DAC4) //this is a jump label
/*8015DAC4 0015A8C4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8015DAC8 0015A8C8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015DACC 0015A8CC*/ PPC::Runtime::ASM::blt(.L_8015DAA0);
/*8015DAD0 0015A8D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015DAD4 0015A8D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015DAD8 0015A8D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015DADC 0015A8DC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015DAE0 0015A8E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015DAE4 0015A8E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015DAE8 0015A8E8*/ PPC::Runtime::ASM::blr();
}