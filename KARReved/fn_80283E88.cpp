//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80059628.hpp"
#include "fn_80059628.hpp"



void fn_80283E88(PPC::Runtime::GCContext* context)
{
/*80283E88 00280C88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80283E8C 00280C8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80283E90 00280C90*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80283E94 00280C94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80283E98 00280C98*/ PPC::Runtime::ASM::bne(.L_80283EB4);
/*80283E9C 00280C9C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD92C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80283EA0 00280CA0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80283EA4 00280CA4*/ PPC::Runtime::ASM::bl(fn_80059628);
/*80283EA8 00280CA8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80283EAC 00280CAC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD92C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80283EB0 00280CB0*/ PPC::Runtime::ASM::b(.L_80283EC8);
RUNTIME_PPC_JUMP_LABEL(.L_80283EB4, 0x80283EB4) //this is a jump label
/*80283EB4 00280CB4*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD928 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80283EB8 00280CB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80283EBC 00280CBC*/ PPC::Runtime::ASM::bl(fn_80059628);
/*80283EC0 00280CC0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80283EC4 00280CC4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD928 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_80283EC8, 0x80283EC8) //this is a jump label
/*80283EC8 00280CC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80283ECC 00280CCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80283ED0 00280CD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80283ED4 00280CD4*/ PPC::Runtime::ASM::blr();
}