//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80151F60(PPC::Runtime::GCContext* context)
{
/*80151F60 0014ED60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80151F64 0014ED64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80151F68 0014ED68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80151F6C 0014ED6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80151F70 0014ED70*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80151F74 0014ED74*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80151F78 0014ED78*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80151F7C 0014ED7C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80151F80, 0x80151F80) //this is a jump label
/*80151F80 0014ED80*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80151F84 0014ED84*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80151F88 0014ED88*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80151F8C 0014ED8C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80151F90 0014ED90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x574, context->r30));
/*80151F94 0014ED94*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80151F98 0014ED98*/ PPC::Runtime::ASM::beq(.L_80151FA4);
/*80151F9C 0014ED9C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80151FA0 0014EDA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x574, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80151FA4, 0x80151FA4) //this is a jump label
/*80151FA4 0014EDA4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80151FA8 0014EDA8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80151FAC 0014EDAC*/ PPC::Runtime::ASM::blt(.L_80151F80);
/*80151FB0 0014EDB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80151FB4 0014EDB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80151FB8 0014EDB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80151FBC 0014EDBC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80151FC0 0014EDC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80151FC4 0014EDC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80151FC8 0014EDC8*/ PPC::Runtime::ASM::blr();
}