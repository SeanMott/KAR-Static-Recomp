//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8027E120(PPC::Runtime::GCContext* context)
{
/*8027E120 0027AF20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8027E124 0027AF24*/ PPC::Runtime::ASM::mflr(context->r0);
/*8027E128 0027AF28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8027E12C 0027AF2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027E130 0027AF30*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8027E134 0027AF34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*8027E138 0027AF38*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8027E13C 0027AF3C*/ PPC::Runtime::ASM::beq(.L_8027E1F0);
/*8027E140 0027AF40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8027E144 0027AF44*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8027E148 0027AF48*/ PPC::Runtime::ASM::beq(.L_8027E1F0);
/*8027E14C 0027AF4C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8027E150 0027AF50*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8027E154 0027AF54*/ PPC::Runtime::ASM::bne(.L_8027E15C);
/*8027E158 0027AF58*/ PPC::Runtime::ASM::b(.L_8027E1F0);
RUNTIME_PPC_JUMP_LABEL(.L_8027E15C, 0x8027E15C) //this is a jump label
/*8027E15C 0027AF5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*8027E160 0027AF60*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8027E164 0027AF64*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*8027E168 0027AF68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*8027E16C 0027AF6C*/ PPC::Runtime::ASM::bne(.L_8027E1A8);
/*8027E170 0027AF70*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DD908 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8027E174 0027AF74*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*8027E178 0027AF78*/ PPC::Runtime::ASM::beq(.L_8027E1DC);
/*8027E17C 0027AF7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r6));
/*8027E180 0027AF80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8027E184 0027AF84*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r6));
/*8027E188 0027AF88*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0, context->r6));
/*8027E18C 0027AF8C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAddAnimAll);
/*8027E190 0027AF90*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E3240 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8027E194 0027AF94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8027E198 0027AF98*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*8027E19C 0027AF9C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8027E1A0 0027AFA0*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8027E1A4 0027AFA4*/ PPC::Runtime::ASM::b(.L_8027E1DC);
RUNTIME_PPC_JUMP_LABEL(.L_8027E1A8, 0x8027E1A8) //this is a jump label
/*8027E1A8 0027AFA8*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DD908 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8027E1AC 0027AFAC*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*8027E1B0 0027AFB0*/ PPC::Runtime::ASM::beq(.L_8027E1DC);
/*8027E1B4 0027AFB4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r6));
/*8027E1B8 0027AFB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8027E1BC 0027AFBC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r6));
/*8027E1C0 0027AFC0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r6));
/*8027E1C4 0027AFC4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAddAnimAll);
/*8027E1C8 0027AFC8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E3240 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8027E1CC 0027AFCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8027E1D0 0027AFD0*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*8027E1D4 0027AFD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8027E1D8 0027AFD8*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
RUNTIME_PPC_JUMP_LABEL(.L_8027E1DC, 0x8027E1DC) //this is a jump label
/*8027E1DC 0027AFDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r31));
/*8027E1E0 0027AFE0*/ PPC::Runtime::ASM::lis(context->r4, 0x2000);
/*8027E1E4 0027AFE4*/ PPC::Runtime::ASM::bl(fn_HSD_AObjClearFlags);
/*8027E1E8 0027AFE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8027E1EC 0027AFEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8027E1F0, 0x8027E1F0) //this is a jump label
/*8027E1F0 0027AFF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8027E1F4 0027AFF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027E1F8 0027AFF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8027E1FC 0027AFFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8027E200 0027B000*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8027E204 0027B004*/ PPC::Runtime::ASM::blr();
}