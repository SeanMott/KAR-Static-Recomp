//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_ETHOut.hpp"
#include "fn_ETHOut.hpp"
#include "fn_DetectCollision.hpp"
#include "fn_ARPUpdate.hpp"
#include "fn_ARPOut.hpp"



void fn_ARPIn(PPC::Runtime::GCContext* context)
{
/*8046C9A4 004697A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046C9A8 004697A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046C9AC 004697AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8046C9B0 004697B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046C9B4 004697B4*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0xe);
/*8046C9B8 004697B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046C9BC 004697BC*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*8046C9C0 004697C0*/ PPC::Runtime::ASM::lis(context->r3, fn_ETHOut @ Get_MemoryOffset_HighBit);
/*8046C9C4 004697C4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r30));
/*8046C9C8 004697C8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_ETHOut @ Get_MemoryOffset_LowBit);
/*8046C9CC 004697CC*/ PPC::Runtime::ASM::cmplw(context->r6, context->r0);
/*8046C9D0 004697D0*/ PPC::Runtime::ASM::bne(.L_8046CAAC);
/*8046C9D4 004697D4*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x16);
/*8046C9D8 004697D8*/ PPC::Runtime::ASM::blt(.L_8046CAAC);
/*8046C9DC 004697DC*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8046C9E0 004697E0*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r31));
/*8046C9E4 004697E4*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r6);
/*8046C9E8 004697E8*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 1);
/*8046C9EC 004697EC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x16);
/*8046C9F0 004697F0*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*8046C9F4 004697F4*/ PPC::Runtime::ASM::bge(.L_8046C9FC);
/*8046C9F8 004697F8*/ PPC::Runtime::ASM::b(.L_8046CAAC);
RUNTIME_PPC_JUMP_LABEL(.L_8046C9FC, 0x8046C9FC) //this is a jump label
/*8046C9FC 004697FC*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8046CA00 00469800*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*8046CA04 00469804*/ PPC::Runtime::ASM::bne(.L_8046CAAC);
/*8046CA08 00469808*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r31));
/*8046CA0C 0046980C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x800);
/*8046CA10 00469810*/ PPC::Runtime::ASM::bne(.L_8046CAAC);
/*8046CA14 00469814*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x6);
/*8046CA18 00469818*/ PPC::Runtime::ASM::bne(.L_8046CAAC);
/*8046CA1C 0046981C*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x4);
/*8046CA20 00469820*/ PPC::Runtime::ASM::beq(.L_8046CA28);
/*8046CA24 00469824*/ PPC::Runtime::ASM::b(.L_8046CAAC);
RUNTIME_PPC_JUMP_LABEL(.L_8046CA28, 0x8046CA28) //this is a jump label
/*8046CA28 00469828*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*8046CA2C 0046982C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*8046CA30 00469830*/ PPC::Runtime::ASM::bl(fn_DetectCollision);
/*8046CA34 00469834*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*8046CA38 00469838*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*8046CA3C 0046983C*/ PPC::Runtime::ASM::bl(fn_ARPUpdate);
/*8046CA40 00469840*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8046CA44 00469844*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r31));
/*8046CA48 00469848*/ PPC::Runtime::ASM::slwi(context->r4, context->r5, 1);
/*8046CA4C 0046984C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805E6298 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8046CA50 00469850*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r3);
/*8046CA54 00469854*/ PPC::Runtime::ASM::addi(context->r7, context->r3, 0x8);
/*8046CA58 00469858*/ PPC::Runtime::ASM::add(context->r7, context->r31, context->r7);
/*8046CA5C 0046985C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8046CA60 00469860*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*8046CA64 00469864*/ PPC::Runtime::ASM::beq(.L_8046CAAC);
/*8046CA68 00469868*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*8046CA6C 0046986C*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*8046CA70 00469870*/ PPC::Runtime::ASM::beq(.L_8046CA84);
/*8046CA74 00469874*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r30));
/*8046CA78 00469878*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*8046CA7C 0046987C*/ PPC::Runtime::ASM::beq(.L_8046CA84);
/*8046CA80 00469880*/ PPC::Runtime::ASM::b(.L_8046CAAC);
RUNTIME_PPC_JUMP_LABEL(.L_8046CA84, 0x8046CA84) //this is a jump label
/*8046CA84 00469884*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*8046CA88 00469888*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*8046CA8C 0046988C*/ PPC::Runtime::ASM::bne(.L_8046CAAC);
/*8046CA90 00469890*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x8);
/*8046CA94 00469894*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*8046CA98 00469898*/ PPC::Runtime::ASM::add(context->r5, context->r31, context->r5);
/*8046CA9C 0046989C*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0x8);
/*8046CAA0 004698A0*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*8046CAA4 004698A4*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8046CAA8 004698A8*/ PPC::Runtime::ASM::bl(fn_ARPOut);
RUNTIME_PPC_JUMP_LABEL(.L_8046CAAC, 0x8046CAAC) //this is a jump label
/*8046CAAC 004698AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046CAB0 004698B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046CAB4 004698B4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046CAB8 004698B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8046CABC 004698BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046CAC0 004698C0*/ PPC::Runtime::ASM::blr();
}