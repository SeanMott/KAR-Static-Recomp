//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245F70.hpp"
#include "fn_802460D4.hpp"
#include "fn_8024625C.hpp"



void fn_801D0EE4(PPC::Runtime::GCContext* context)
{
/*801D0EE4 001CDCE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801D0EE8 001CDCE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D0EEC 001CDCEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D0EF0 001CDCF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D0EF4 001CDCF4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D0EF8 001CDCF8*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801D0EFC 001CDCFC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D0F00 001CDD00*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801D0F04 001CDD04*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D0F08 001CDD08*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r3));
/*801D0F0C 001CDD0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801D0F10 001CDD10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r28));
/*801D0F14 001CDD14*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801D0F18 001CDD18*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D0F1C 001CDD1C*/ PPC::Runtime::ASM::beq(.L_801D0F34);
/*801D0F20 001CDD20*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801D0F24 001CDD24*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801D0F28 001CDD28*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801D0F2C 001CDD2C*/ PPC::Runtime::ASM::li(context->r4, 0x204);
/*801D0F30 001CDD30*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801D0F34, 0x801D0F34) //this is a jump label
/*801D0F34 001CDD34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r28));
/*801D0F38 001CDD38*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D0F3C 001CDD3C*/ PPC::Runtime::ASM::beq(.L_801D0F58);
/*801D0F40 001CDD40*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0A88 @ Get_MemoryOffset_HighBit);
/*801D0F44 001CDD44*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801D0F48 001CDD48*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0A88 @ Get_MemoryOffset_LowBit);
/*801D0F4C 001CDD4C*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*801D0F50 001CDD50*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801D0F54 001CDD54*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801D0F58, 0x801D0F58) //this is a jump label
/*801D0F58 001CDD58*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A7C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D0F5C 001CDD5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r28));
/*801D0F60 001CDD60*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*801D0F64 001CDD64*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r29));
/*801D0F68 001CDD68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r28));
/*801D0F6C 001CDD6C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D0F70 001CDD70*/ PPC::Runtime::ASM::beq(.L_801D0F88);
/*801D0F74 001CDD74*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801D0F78 001CDD78*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801D0F7C 001CDD7C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801D0F80 001CDD80*/ PPC::Runtime::ASM::li(context->r4, 0x1ee);
/*801D0F84 001CDD84*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801D0F88, 0x801D0F88) //this is a jump label
/*801D0F88 001CDD88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801D0F8C 001CDD8C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x3e8);
/*801D0F90 001CDD90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801D0F94 001CDD94*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x43c);
/*801D0F98 001CDD98*/ PPC::Runtime::ASM::addi(context->r6, context->r29, 0x448);
/*801D0F9C 001CDD9C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801D0FA0 001CDDA0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*801D0FA4 001CDDA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r28));
/*801D0FA8 001CDDA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801D0FAC 001CDDAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*801D0FB0 001CDDB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r29));
/*801D0FB4 001CDDB4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x46c, context->r29));
/*801D0FB8 001CDDB8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801D0FBC 001CDDBC*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*801D0FC0 001CDDC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r29));
/*801D0FC4 001CDDC4*/ PPC::Runtime::ASM::bl(fn_802460D4);
/*801D0FC8 001CDDC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r29));
/*801D0FCC 001CDDCC*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x3e8);
/*801D0FD0 001CDDD0*/ PPC::Runtime::ASM::bl(fn_8024625C);
/*801D0FD4 001CDDD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D0FD8 001CDDD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D0FDC 001CDDDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D0FE0 001CDDE0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D0FE4 001CDDE4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801D0FE8 001CDDE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D0FEC 001CDDEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801D0FF0 001CDDF0*/ PPC::Runtime::ASM::blr();
}