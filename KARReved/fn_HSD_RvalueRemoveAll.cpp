//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_JObjUnrefThis.hpp"
#include "fn_HSD_ObjFree.hpp"



void fn_HSD_RvalueRemoveAll(PPC::Runtime::GCContext* context)
{
/*8041A0F4 00416EF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041A0F8 00416EF8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041A0FC 00416EFC*/ PPC::Runtime::ASM::lis(context->r4, lbl_8058BC3C @ Get_MemoryOffset_HighBit);
/*8041A100 00416F00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041A104 00416F04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041A108 00416F08*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_8058BC3C @ Get_MemoryOffset_LowBit);
/*8041A10C 00416F0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041A110 00416F10*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041A114 00416F14*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8041A118 00416F18*/ PPC::Runtime::ASM::b(.L_8041A140);
RUNTIME_PPC_JUMP_LABEL(.L_8041A11C, 0x8041A11C) //this is a jump label
/*8041A11C 00416F1C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8041A120 00416F20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8041A124 00416F24*/ PPC::Runtime::ASM::beq(.L_8041A13C);
/*8041A128 00416F28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8041A12C 00416F2C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjUnrefThis);
/*8041A130 00416F30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041A134 00416F34*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8041A138 00416F38*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
RUNTIME_PPC_JUMP_LABEL(.L_8041A13C, 0x8041A13C) //this is a jump label
/*8041A13C 00416F3C*/ PPC::Runtime::ASM::mr(context->r29, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_8041A140, 0x8041A140) //this is a jump label
/*8041A140 00416F40*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8041A144 00416F44*/ PPC::Runtime::ASM::bne(.L_8041A11C);
/*8041A148 00416F48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041A14C 00416F4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041A150 00416F50*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041A154 00416F54*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041A158 00416F58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041A15C 00416F5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041A160 00416F60*/ PPC::Runtime::ASM::blr();
}