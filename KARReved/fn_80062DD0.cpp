//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"



void fn_80062DD0(PPC::Runtime::GCContext* context)
{
/*80062DD0 0005FBD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80062DD4 0005FBD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80062DD8 0005FBD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80062DDC 0005FBDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80062DE0 0005FBE0*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*80062DE4 0005FBE4*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80062DE8 0005FBE8*/ PPC::Runtime::ASM::lfs(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80062DEC 0005FBEC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80062DF0 0005FBF0*/ PPC::Runtime::ASM::lfs(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80062DF4 0005FBF4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f6);
/*80062DF8 0005FBF8*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80062DFC 0005FBFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80062E00 0005FC00*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80062E04 0005FC04*/ PPC::Runtime::ASM::fmuls(context->f1, context->f7, context->f2);
/*80062E08 0005FC08*/ PPC::Runtime::ASM::fmsubs(context->f2, context->f5, context->f2, context->f0);
/*80062E0C 0005FC0C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f5, context->f4);
/*80062E10 0005FC10*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80062E14 0005FC14*/ PPC::Runtime::ASM::fmsubs(context->f1, context->f3, context->f4, context->f1);
/*80062E18 0005FC18*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80062E1C 0005FC1C*/ PPC::Runtime::ASM::fmsubs(context->f0, context->f7, context->f6, context->f0);
/*80062E20 0005FC20*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80062E24 0005FC24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80062E28 0005FC28*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80062E2C 0005FC2C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80062E30 0005FC30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80062E34 0005FC34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80062E38 0005FC38*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80062E3C 0005FC3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80062E40 0005FC40*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*80062E44 0005FC44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80062E48 0005FC48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80062E4C 0005FC4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80062E50 0005FC50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80062E54 0005FC54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80062E58 0005FC58*/ PPC::Runtime::ASM::blr();
}