//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D230.hpp"
#include "fn_8005DDA8.hpp"



void fn_8020D410(PPC::Runtime::GCContext* context)
{
/*8020D410 0020A210*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8020D414 0020A214*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020D418 0020A218*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8020D41C 0020A21C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8020D420 0020A220*/ PPC::Runtime::ASM::li(context->r31, -0x1);
/*8020D424 0020A224*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8020D428 0020A228*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020D42C 0020A22C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8020D430 0020A230*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8020D434 0020A234*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8020D438 0020A238*/ PPC::Runtime::ASM::mr(context->r30, context->r28);
RUNTIME_PPC_JUMP_LABEL(.L_8020D43C, 0x8020D43C) //this is a jump label
/*8020D43C 0020A23C*/ PPC::Runtime::ASM::bl(fn_8005D230);
/*8020D440 0020A240*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r30));
/*8020D444 0020A244*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8020D448 0020A248*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*8020D44C 0020A24C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa60, context->r30));
/*8020D450 0020A250*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8020D454 0020A254*/ PPC::Runtime::ASM::blt(.L_8020D43C);
/*8020D458 0020A258*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*8020D45C 0020A25C*/ PPC::Runtime::ASM::bl(fn_8005DDA8);
/*8020D460 0020A260*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r28));
/*8020D464 0020A264*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8020D468 0020A268*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8020D46C 0020A26C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8020D470 0020A270*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020D474 0020A274*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8020D478 0020A278*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020D47C 0020A27C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8020D480 0020A280*/ PPC::Runtime::ASM::blr();
}