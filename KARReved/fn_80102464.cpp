//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7A64.hpp"
#include "fn_800F7AB8.hpp"
#include "fn_800F7AD8.hpp"



void fn_80102464(PPC::Runtime::GCContext* context)
{
/*80102464 000FF264*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80102468 000FF268*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010246C 000FF26C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80102470 000FF270*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80102474 000FF274*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80102478 000FF278*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8010247C 000FF27C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE330 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80102480 000FF280*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*80102484 000FF284*/ PPC::Runtime::ASM::b(.L_8010249C);
RUNTIME_PPC_JUMP_LABEL(.L_80102488, 0x80102488) //this is a jump label
/*80102488 000FF288*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8010248C 000FF28C*/ PPC::Runtime::ASM::bl(fn_800F7A64);
/*80102490 000FF290*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x28);
/*80102494 000FF294*/ PPC::Runtime::ASM::beq(.L_801024A4);
/*80102498 000FF298*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8010249C, 0x8010249C) //this is a jump label
/*8010249C 000FF29C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801024A0 000FF2A0*/ PPC::Runtime::ASM::bne(.L_80102488);
RUNTIME_PPC_JUMP_LABEL(.L_801024A4, 0x801024A4) //this is a jump label
/*801024A4 000FF2A4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801024A8 000FF2A8*/ PPC::Runtime::ASM::beq(.L_801024F0);
/*801024AC 000FF2AC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801024B0 000FF2B0*/ PPC::Runtime::ASM::bl(fn_800F7AB8);
/*801024B4 000FF2B4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*801024B8 000FF2B8*/ PPC::Runtime::ASM::beq(.L_801024E8);
/*801024BC 000FF2BC*/ PPC::Runtime::ASM::bge(.L_801024CC);
/*801024C0 000FF2C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*801024C4 000FF2C4*/ PPC::Runtime::ASM::bge(.L_801024D4);
/*801024C8 000FF2C8*/ PPC::Runtime::ASM::b(.L_801024E8);
RUNTIME_PPC_JUMP_LABEL(.L_801024CC, 0x801024CC) //this is a jump label
/*801024CC 000FF2CC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x6);
/*801024D0 000FF2D0*/ PPC::Runtime::ASM::bge(.L_801024E8);
RUNTIME_PPC_JUMP_LABEL(.L_801024D4, 0x801024D4) //this is a jump label
/*801024D4 000FF2D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801024D8 000FF2D8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801024DC 000FF2DC*/ PPC::Runtime::ASM::bl(fn_800F7AD8);
/*801024E0 000FF2E0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801024E4 000FF2E4*/ PPC::Runtime::ASM::b(.L_801024F4);
RUNTIME_PPC_JUMP_LABEL(.L_801024E8, 0x801024E8) //this is a jump label
/*801024E8 000FF2E8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801024EC 000FF2EC*/ PPC::Runtime::ASM::b(.L_801024F4);
RUNTIME_PPC_JUMP_LABEL(.L_801024F0, 0x801024F0) //this is a jump label
/*801024F0 000FF2F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801024F4, 0x801024F4) //this is a jump label
/*801024F4 000FF2F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801024F8 000FF2F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801024FC 000FF2FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80102500 000FF300*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80102504 000FF304*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80102508 000FF308*/ PPC::Runtime::ASM::blr();
}