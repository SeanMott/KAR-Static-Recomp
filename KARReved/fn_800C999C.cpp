//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800C999C(PPC::Runtime::GCContext* context)
{
/*800C999C 000C679C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800C99A0 000C67A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C99A4 000C67A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C99A8 000C67A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C99AC 000C67AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r3));
/*800C99B0 000C67B0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800C99B4 000C67B4*/ PPC::Runtime::ASM::beq(.L_800C9A24);
/*800C99B8 000C67B8*/ PPC::Runtime::ASM::lis(context->r3, 0x1);
/*800C99BC 000C67BC*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800C99C0 000C67C0*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800C99C4 000C67C4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 16);
/*800C99C8 000C67C8*/ PPC::Runtime::ASM::subf(context->r0, context->r4, context->r0);
/*800C99CC 000C67CC*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/* 800C99D0 000C67D0  54 00 D9 7F */ srwi. context->r0 , context->r0 , 5
/*800C99D4 000C67D4*/ PPC::Runtime::ASM::beq(.L_800C99DC);
/*800C99D8 000C67D8*/ PPC::Runtime::ASM::b(.L_800C99EC);
RUNTIME_PPC_JUMP_LABEL(.L_800C99DC, 0x800C99DC) //this is a jump label
/*800C99DC 000C67DC*/ PPC::Runtime::ASM::subi(context->r3, context->r4, 0x1);
/*800C99E0 000C67E0*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r4);
/*800C99E4 000C67E4*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800C99E8 000C67E8*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
RUNTIME_PPC_JUMP_LABEL(.L_800C99EC, 0x800C99EC) //this is a jump label
/*800C99EC 000C67EC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800C99F0 000C67F0*/ PPC::Runtime::ASM::beq(.L_800C9A24);
/*800C99F4 000C67F4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800C99F8 000C67F8*/ PPC::Runtime::ASM::beq(.L_800C9A24);
/*800C99FC 000C67FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800C9A00 000C6800*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800C9A04 000C6804*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*800C9A08 000C6808*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800C9A0C 000C680C*/ PPC::Runtime::ASM::bctrl();
/*800C9A10 000C6810*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800C9A14 000C6814*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800C9A18 000C6818*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r4));
/*800C9A1C 000C681C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800C9A20 000C6820*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800C9A24, 0x800C9A24) //this is a jump label
/*800C9A24 000C6824*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C9A28 000C6828*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C9A2C 000C682C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C9A30 000C6830*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800C9A34 000C6834*/ PPC::Runtime::ASM::blr();
}