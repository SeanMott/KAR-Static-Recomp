//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_801A0470(PPC::Runtime::GCContext* context)
{
/*801A0470 0019D270*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A0474 0019D274*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A0478 0019D278*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A047C 0019D27C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801A0480 0019D280*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A0484 0019D284*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A0488 0019D288*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A048C 0019D28C*/ PPC::Runtime::ASM::bl(fn_80190948);
/*801A0490 0019D290*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A0494 0019D294*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801A0498 0019D298*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A049C 0019D29C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A04A0 0019D2A0*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801A04A4 0019D2A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A04A8 0019D2A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A04AC 0019D2AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A04B0 0019D2B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A04B4 0019D2B4*/ PPC::Runtime::ASM::blr();
}