//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_SIEnablePolling(PPC::Runtime::GCContext* context)
{
/*803E942C 003E622C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E9430 003E6230*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E9434 003E6234*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803E9438 003E6238*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 803E943C 003E623C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803E9440 003E6240*/ PPC::Runtime::ASM::bne(.L_803E9454);
/*803E9444 003E6244*/ PPC::Runtime::ASM::lis(context->r3, Si_804FCC24 @ Get_MemoryOffset_HighBit);
/*803E9448 003E6248*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Si_804FCC24 @ Get_MemoryOffset_LowBit);
/*803E944C 003E624C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803E9450 003E6250*/ PPC::Runtime::ASM::b(.L_803E94B4);
RUNTIME_PPC_JUMP_LABEL(.L_803E9454, 0x803E9454) //this is a jump label
/*803E9454 003E6254*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E9458 003E6258*/ PPC::Runtime::ASM::lis(context->r4, Si_804FCC24 @ Get_MemoryOffset_HighBit);
/*803E945C 003E625C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, Si_804FCC24 @ Get_MemoryOffset_LowBit);
/*803E9460 003E6260*/ PPC::Runtime::ASM::srwi(context->r31, context->r31, 24);
/*803E9464 003E6264*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803E9468 003E6268*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x4);
/*803E946C 003E626C*/ PPC::Runtime::ASM::extrwi(context->r4, context->r31, 4, 24);
/*803E9470 003E6270*/ PPC::Runtime::ASM::andc(context->r0, context->r0, context->r4);
/*803E9474 003E6274*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803E9478 003E6278*/ PPC::Runtime::ASM::oris(context->r0, context->r4, 0x3ff);
/*803E947C 003E627C*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0xfff0);
/*803E9480 003E6280*/ PPC::Runtime::ASM::and(context->r31, context->r31, context->r0);
/*803E9484 003E6284*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803E9488 003E6288*/ PPC::Runtime::ASM::rlwinm(context->r31, context->r31, 0, 24, 5);
/*803E948C 003E628C*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r31);
/*803E9490 003E6290*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803E9494 003E6294*/ PPC::Runtime::ASM::lis(context->r4, 0xcc00);
/*803E9498 003E6298*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x6400);
/*803E949C 003E629C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803E94A0 003E62A0*/ PPC::Runtime::ASM::lis(context->r0, 0x8000);
/*803E94A4 003E62A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*803E94A8 003E62A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*803E94AC 003E62AC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E94B0 003E62B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_803E94B4, 0x803E94B4) //this is a jump label
/*803E94B4 003E62B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E94B8 003E62B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E94BC 003E62BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803E94C0 003E62C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E94C4 003E62C4*/ PPC::Runtime::ASM::blr();
}