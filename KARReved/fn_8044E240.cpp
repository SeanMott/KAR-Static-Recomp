//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_8044DF74.hpp"
#include "fn_8044DF74.hpp"
#include "fn_80446ACC.hpp"



void fn_8044E240(PPC::Runtime::GCContext* context)
{
/*8044E240 0044B040*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8044E244 0044B044*/ PPC::Runtime::ASM::mflr(context->r0);
/*8044E248 0044B048*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8044E24C 0044B04C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8044E250 0044B050*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8044E254 0044B054  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8044E258 0044B058*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_HighBit);
/*8044E25C 0044B05C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r30, 26);
/*8044E260 0044B060*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x98);
/*8044E264 0044B064*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_LowBit);
/*8044E268 0044B068*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*8044E26C 0044B06C*/ PPC::Runtime::ASM::ble(.L_8044E280);
/*8044E270 0044B070*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8044E274 0044B074*/ PPC::Runtime::ASM::cmpw(context->r0, context->r30);
/*8044E278 0044B078*/ PPC::Runtime::ASM::bne(.L_8044E280);
/*8044E27C 0044B07C*/ PPC::Runtime::ASM::b(.L_8044E284);
RUNTIME_PPC_JUMP_LABEL(.L_8044E280, 0x8044E280) //this is a jump label
/*8044E280 0044B080*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8044E284, 0x8044E284) //this is a jump label
/*8044E284 0044B084*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8044E288 0044B088*/ PPC::Runtime::ASM::bne(.L_8044E29C);
/*8044E28C 0044B08C*/ PPC::Runtime::ASM::li(context->r3, String_ "synth." Get_MemoryOffset_SDA21);
/*8044E290 0044B090*/ PPC::Runtime::ASM::li(context->r4, 0xe6b);
/*8044E294 0044B094*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_343 @ Get_MemoryOffset_SDA21);
/*8044E298 0044B098*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8044E29C, 0x8044E29C) //this is a jump label
/*8044E29C 0044B09C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8044E2A0 0044B0A0*/ PPC::Runtime::ASM::lis(context->r3, fn_8044DF74 @ Get_MemoryOffset_HighBit);
/*8044E2A4 0044B0A4*/ PPC::Runtime::ASM::addi(context->r9, context->r3, fn_8044DF74 @ Get_MemoryOffset_LowBit);
/*8044E2A8 0044B0A8*/ PPC::Runtime::ASM::mr(context->r10, context->r30);
/*8044E2AC 0044B0AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8044E2B0 0044B0B0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8044E2B4 0044B0B4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8044E2B8 0044B0B8*/ PPC::Runtime::ASM::li(context->r6, 0x80);
/*8044E2BC 0044B0BC*/ PPC::Runtime::ASM::li(context->r7, 0x22);
/*8044E2C0 0044B0C0*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8044E2C4 0044B0C4*/ PPC::Runtime::ASM::bl(fn_80446ACC);
/*8044E2C8 0044B0C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8044E2CC 0044B0CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8044E2D0 0044B0D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8044E2D4 0044B0D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8044E2D8 0044B0D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8044E2DC 0044B0DC*/ PPC::Runtime::ASM::blr();
}