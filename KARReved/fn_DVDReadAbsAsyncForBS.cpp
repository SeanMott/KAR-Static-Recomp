//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "DCInvalidateRange.hpp"
#include "OSDisableInterrupts.hpp"
#include "__DVDPushWaitingQueue.hpp"
#include "stateReady.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_DVDReadAbsAsyncForBS(PPC::Runtime::GCContext* context)
{
/*803C7440 003C4240*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C7444 003C4244*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C7448 003C4248*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*803C744C 003C424C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803C7450 003C4250*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803C7454 003C4254*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803C7458 003C4258*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803C745C 003C425C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803C7460 003C4260*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C7464 003C4264*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*803C7468 003C4268*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*803C746C 003C426C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*803C7470 003C4270*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*803C7474 003C4274*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*803C7478 003C4278*/ PPC::Runtime::ASM::lwz(context->r0, autoInvalidation_805DC8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C747C 003C427C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803C7480 003C4280*/ PPC::Runtime::ASM::beq(.L_803C74B0);
/*803C7484 003C4284*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803C7488 003C4288*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x1);
/*803C748C 003C428C*/ PPC::Runtime::ASM::beq(.L_803C74A4);
/*803C7490 003C4290*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x4);
/*803C7494 003C4294*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*803C7498 003C4298*/ PPC::Runtime::ASM::ble(.L_803C74A4);
/*803C749C 003C429C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xe);
/*803C74A0 003C42A0*/ PPC::Runtime::ASM::bne(.L_803C74B0);
RUNTIME_PPC_JUMP_LABEL(.L_803C74A4, 0x803C74A4) //this is a jump label
/*803C74A4 003C42A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803C74A8 003C42A8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803C74AC 003C42AC*/ PPC::Runtime::ASM::bl(DCInvalidateRange);
RUNTIME_PPC_JUMP_LABEL(.L_803C74B0, 0x803C74B0) //this is a jump label
/*803C74B0 003C42B0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C74B4 003C42B4*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*803C74B8 003C42B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803C74BC 003C42BC*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803C74C0 003C42C0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803C74C4 003C42C4*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C74C8 003C42C8*/ PPC::Runtime::ASM::bl(__DVDPushWaitingQueue);
/*803C74CC 003C42CC*/ PPC::Runtime::ASM::lwz(context->r0, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C74D0 003C42D0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803C74D4 003C42D4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803C74D8 003C42D8*/ PPC::Runtime::ASM::bne(.L_803C74EC);
/*803C74DC 003C42DC*/ PPC::Runtime::ASM::lwz(context->r0, PauseFlag_805DDDB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C74E0 003C42E0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803C74E4 003C42E4*/ PPC::Runtime::ASM::bne(.L_803C74EC);
/*803C74E8 003C42E8*/ PPC::Runtime::ASM::bl(stateReady);
RUNTIME_PPC_JUMP_LABEL(.L_803C74EC, 0x803C74EC) //this is a jump label
/*803C74EC 003C42EC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C74F0 003C42F0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C74F4 003C42F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803C74F8 003C42F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803C74FC 003C42FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803C7500 003C4300*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803C7504 003C4304*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803C7508 003C4308*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C750C 003C430C*/ PPC::Runtime::ASM::blr();
}