//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_abilityTimerDecreaser.hpp"
#include "fn_abilityTimer_Bird_remove.hpp"
#include "fn_AS_LoseCopyAbility.hpp"



void fn_abilityTimer_Bird_checkIfZero(PPC::Runtime::GCContext* context)
{
/*801B5660 001B2460*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B5664 001B2464*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B5668 001B2468*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B566C 001B246C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B5670 001B2470*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B5674 001B2474*/ PPC::Runtime::ASM::bl(fn_abilityTimerDecreaser);
/*801B5678 001B2478*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
/*801B567C 001B247C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B5680 001B2480*/ PPC::Runtime::ASM::bne(.L_801B5694);
/*801B5684 001B2484*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B5688 001B2488*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Bird_remove);
/*801B568C 001B248C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B5690 001B2490*/ PPC::Runtime::ASM::bl(fn_AS_LoseCopyAbility);
RUNTIME_PPC_JUMP_LABEL(.L_801B5694, 0x801B5694) //this is a jump label
/*801B5694 001B2494*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B5698 001B2498*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B569C 001B249C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B56A0 001B24A0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B56A4 001B24A4*/ PPC::Runtime::ASM::blr();
}