//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018CB78.hpp"
#include "fn_801D5E34.hpp"
#include "fn_SomehowRelatedToKirbyInvincabilityButHasAGotoForRemovingInvincibility.hpp"
#include "fn_801D5E34.hpp"
#include "fn_801E1FE0.hpp"
#include "fn_801DAE84.hpp"
#include "fn_801D443C.hpp"
#include "fn_801D443C.hpp"
#include "fn_801DB240.hpp"
#include "fn_801D60D8.hpp"



void fn_801C618C(PPC::Runtime::GCContext* context)
{
/*801C618C 001C2F8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C6190 001C2F90*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C6194 001C2F94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C6198 001C2F98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C619C 001C2F9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C61A0 001C2FA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801C61A4 001C2FA4*/ PPC::Runtime::ASM::bl(fn_8018CB78);
/*801C61A8 001C2FA8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C61AC 001C2FAC*/ PPC::Runtime::ASM::beq(.L_801C61BC);
/*801C61B0 001C2FB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C61B4 001C2FB4*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801C61B8 001C2FB8*/ PPC::Runtime::ASM::bl(fn_801D5E34);
RUNTIME_PPC_JUMP_LABEL(.L_801C61BC, 0x801C61BC) //this is a jump label
/*801C61BC 001C2FBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801C61C0 001C2FC0*/ PPC::Runtime::ASM::bl(fn_SomehowRelatedToKirbyInvincabilityButHasAGotoForRemovingInvincibility);
/*801C61C4 001C2FC4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C61C8 001C2FC8*/ PPC::Runtime::ASM::beq(.L_801C61D8);
/*801C61CC 001C2FCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C61D0 001C2FD0*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801C61D4 001C2FD4*/ PPC::Runtime::ASM::bl(fn_801D5E34);
RUNTIME_PPC_JUMP_LABEL(.L_801C61D8, 0x801C61D8) //this is a jump label
/*801C61D8 001C2FD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C61DC 001C2FDC*/ PPC::Runtime::ASM::bl(fn_801E1FE0);
/*801C61E0 001C2FE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C61E4 001C2FE4*/ PPC::Runtime::ASM::bl(fn_801DAE84);
/*801C61E8 001C2FE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc38, context->r31));
/* 801C61EC 001C2FEC  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801C61F0 001C2FF0*/ PPC::Runtime::ASM::bne(.L_801C6268);
/*801C61F4 001C2FF4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C61F8 001C2FF8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x3c);
/*801C61FC 001C2FFC*/ PPC::Runtime::ASM::bl(fn_801D443C);
/*801C6200 001C3000*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C6204 001C3004*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x88);
/*801C6208 001C3008*/ PPC::Runtime::ASM::bl(fn_801D443C);
/*801C620C 001C300C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbec, context->r31));
/*801C6210 001C3010*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801C6214 001C3014*/ PPC::Runtime::ASM::beq(.L_801C6224);
/*801C6218 001C3018*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C621C 001C301C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801C6220 001C3020*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801C6224, 0x801C6224) //this is a jump label
/*801C6224 001C3024*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbd4, context->r31));
/*801C6228 001C3028*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801C622C 001C302C*/ PPC::Runtime::ASM::beq(.L_801C623C);
/*801C6230 001C3030*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C6234 001C3034*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801C6238 001C3038*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801C623C, 0x801C623C) //this is a jump label
/*801C623C 001C303C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801C6240 001C3040*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6F98 @ Get_MemoryOffset_SDA21);
/*801C6244 001C3044*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801C6248 001C3048*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*801C624C 001C304C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*801C6250 001C3050*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801C6254 001C3054*/ PPC::Runtime::ASM::beq(.L_801C6270);
/*801C6258 001C3058*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C625C 001C305C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801C6260 001C3060*/ PPC::Runtime::ASM::bctrl();
/*801C6264 001C3064*/ PPC::Runtime::ASM::b(.L_801C6270);
RUNTIME_PPC_JUMP_LABEL(.L_801C6268, 0x801C6268) //this is a jump label
/*801C6268 001C3068*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C626C 001C306C*/ PPC::Runtime::ASM::bl(fn_801DB240);
RUNTIME_PPC_JUMP_LABEL(.L_801C6270, 0x801C6270) //this is a jump label
/*801C6270 001C3070*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C6274 001C3074*/ PPC::Runtime::ASM::bl(fn_801D60D8);
/*801C6278 001C3078*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C627C 001C307C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C6280 001C3080*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C6284 001C3084*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C6288 001C3088*/ PPC::Runtime::ASM::blr();
}