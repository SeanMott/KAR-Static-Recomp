//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A21C8.hpp"
#include "fn_80098E30.hpp"
#include "fn_800A1680.hpp"



void fn_800A6C64(PPC::Runtime::GCContext* context)
{
/*800A6C64 000A3A64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800A6C68 000A3A68*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A6C6C 000A3A6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A6C70 000A3A70*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800A6C74 000A3A74*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5B80 @ Get_MemoryOffset_SDA21);
/*800A6C78 000A3A78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800A6C7C 000A3A7C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800A6C80 000A3A80*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800A6C84 000A3A84*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A6C88 000A3A88*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800A6C8C 000A3A8C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800A6C90 000A3A90*/ PPC::Runtime::ASM::bl(fn_800A21C8);
/*800A6C94 000A3A94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800A6C98 000A3A98*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A6C9C 000A3A9C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*800A6CA0 000A3AA0*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A6CA4 000A3AA4*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*800A6CA8 000A3AA8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6CAC 000A3AAC*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A6CB0 000A3AB0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800A6CB4 000A3AB4*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A6CB8 000A3AB8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A6CBC 000A3ABC*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A6CC0 000A3AC0*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*800A6CC4 000A3AC4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A6CC8 000A3AC8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A6CCC 000A3ACC*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A6CD0 000A3AD0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*800A6CD4 000A3AD4*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A6CD8 000A3AD8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*800A6CDC 000A3ADC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A6CE0 000A3AE0*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*800A6CE4 000A3AE4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6CE8 000A3AE8*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*800A6CEC 000A3AEC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800A6CF0 000A3AF0*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*800A6CF4 000A3AF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800A6CF8 000A3AF8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800A6CFC 000A3AFC*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800A6D00 000A3B00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A6D04 000A3B04*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*800A6D08 000A3B08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800A6D0C 000A3B0C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800A6D10 000A3B10*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800A6D14 000A3B14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A6D18 000A3B18*/ PPC::Runtime::ASM::bl(fn_GXSetChanAmbColor);
/*800A6D1C 000A3B1C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A6D20 000A3B20*/ PPC::Runtime::ASM::bl(fn_GXSetCullMode);
/*800A6D24 000A3B24*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A6D28 000A3B28*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800A6D2C 000A3B2C*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*800A6D30 000A3B30*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*800A6D34 000A3B34*/ PPC::Runtime::ASM::bl(fn_800A1680);
/*800A6D38 000A3B38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A6D3C 000A3B3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800A6D40 000A3B40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800A6D44 000A3B44*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A6D48 000A3B48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A6D4C 000A3B4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800A6D50 000A3B50*/ PPC::Runtime::ASM::blr();
}