//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800AAD94.hpp"



void fn_800AB15C(PPC::Runtime::GCContext* context)
{
/*800AB15C 000A7F5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AB160 000A7F60*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AB164 000A7F64*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x2);
/*800AB168 000A7F68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AB16C 000A7F6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AB170 000A7F70*/ PPC::Runtime::ASM::bne(.L_800AB1A0);
/*800AB174 000A7F74*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AB178 000A7F78*/ PPC::Runtime::ASM::bl(fn_HSD_FogSet);
/*800AB17C 000A7F7C*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1805DD69C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AB180 000A7F80*/ PPC::Runtime::ASM::b(.L_800AB190);
RUNTIME_PPC_JUMP_LABEL(.L_800AB184, 0x800AB184) //this is a jump label
/*800AB184 000A7F84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AB188 000A7F88*/ PPC::Runtime::ASM::bl(fn_800AAD94);
/*800AB18C 000A7F8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800AB190, 0x800AB190) //this is a jump label
/*800AB190 000A7F90*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800AB194 000A7F94*/ PPC::Runtime::ASM::bne(.L_800AB184);
/*800AB198 000A7F98*/ PPC::Runtime::ASM::bl(fn_8041B0F4);
/*800AB19C 000A7F9C*/ PPC::Runtime::ASM::bl(fn_HSD_FogSet);
RUNTIME_PPC_JUMP_LABEL(.L_800AB1A0, 0x800AB1A0) //this is a jump label
/*800AB1A0 000A7FA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AB1A4 000A7FA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AB1A8 000A7FA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AB1AC 000A7FAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AB1B0 000A7FB0*/ PPC::Runtime::ASM::blr();
}