//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801C86B0(PPC::Runtime::GCContext* context)
{
/*801C86B0 001C54B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C86B4 001C54B4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc38, context->r3));
/* 801C86B8 001C54B8  54 00 E7 FF */ extrwi. context->r0 , context->r0 , 1 , 27
/*801C86BC 001C54BC*/ PPC::Runtime::ASM::bne(.L_801C86CC);
/*801C86C0 001C54C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6e0, context->r3));
/*801C86C4 001C54C4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801C86C8 001C54C8*/ PPC::Runtime::ASM::beq(.L_801C86D4);
RUNTIME_PPC_JUMP_LABEL(.L_801C86CC, 0x801C86CC) //this is a jump label
/*801C86CC 001C54CC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801C86D0 001C54D0*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_801C86D4, 0x801C86D4) //this is a jump label
/*801C86D4 001C54D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801C86D8 001C54D8*/ PPC::Runtime::ASM::blr();
}