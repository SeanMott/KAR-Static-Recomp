//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_801A01A4(PPC::Runtime::GCContext* context)
{
/*801A01A4 0019CFA4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A01A8 0019CFA8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A01AC 0019CFAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A01B0 0019CFB0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801A01B4 0019CFB4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A01B8 0019CFB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A01BC 0019CFBC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A01C0 0019CFC0*/ PPC::Runtime::ASM::bl(fn_80190948);
/*801A01C4 0019CFC4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A01C8 0019CFC8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A01CC 0019CFCC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A01D0 0019CFD0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A01D4 0019CFD4*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801A01D8 0019CFD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A01DC 0019CFDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A01E0 0019CFE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A01E4 0019CFE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A01E8 0019CFE8*/ PPC::Runtime::ASM::blr();
}