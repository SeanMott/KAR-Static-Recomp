//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A2454(PPC::Runtime::GCContext* context)
{
/*802A2454 0029F254*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A2458 0029F258*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A245C 0029F25C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A2460 0029F260*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A2464 0029F264*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A2468 0029F268*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A246C 0029F26C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A2470 0029F270*/ PPC::Runtime::ASM::beq(.L_802A24DC);
/*802A2474 0029F274*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C40FC @ Get_MemoryOffset_HighBit);
/*802A2478 0029F278*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x748);
/*802A247C 0029F27C*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C40FC @ Get_MemoryOffset_LowBit);
/*802A2480 0029F280*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2484 0029F284*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A2488 0029F288*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A248C 0029F28C*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A2490 0029F290*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A2494 0029F294*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A2498 0029F298*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A249C 0029F29C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3bc);
/*802A24A0 0029F2A0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A24A4 0029F2A4*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A24A8 0029F2A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b8);
/*802A24AC 0029F2AC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A24B0 0029F2B0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A24B4 0029F2B4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1b4);
/*802A24B8 0029F2B8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A24BC 0029F2BC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A24C0 0029F2C0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A24C4 0029F2C4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A24C8 0029F2C8*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A24CC 0029F2CC*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A24D0 0029F2D0*/ PPC::Runtime::ASM::ble(.L_802A24DC);
/*802A24D4 0029F2D4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A24D8 0029F2D8*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A24DC, 0x802A24DC) //this is a jump label
/*802A24DC 0029F2DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A24E0 0029F2E0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A24E4 0029F2E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A24E8 0029F2E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A24EC 0029F2EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A24F0 0029F2F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A24F4 0029F2F4*/ PPC::Runtime::ASM::blr();
}