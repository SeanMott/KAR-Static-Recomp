//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_FObjStopAnimAll.hpp"



void fn_HSD_AObjStopAnim(PPC::Runtime::GCContext* context)
{
/*803FB2C0 003F80C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803FB2C4 003F80C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803FB2C8 003F80C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FB2CC 003F80CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 803FB2D0 003F80D0  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803FB2D4 003F80D4*/ PPC::Runtime::ASM::beq(.L_803FB2F0);
/*803FB2D8 003F80D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803FB2DC 003F80DC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803FB2E0 003F80E0*/ PPC::Runtime::ASM::bl(fn_HSD_FObjStopAnimAll);
/*803FB2E4 003F80E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803FB2E8 003F80E8*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x4000);
/*803FB2EC 003F80EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_803FB2F0, 0x803FB2F0) //this is a jump label
/*803FB2F0 003F80F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FB2F4 003F80F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FB2F8 003F80F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803FB2FC 003F80FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803FB300 003F8100*/ PPC::Runtime::ASM::blr();
}