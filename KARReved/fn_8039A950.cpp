//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8039A950(PPC::Runtime::GCContext* context)
{
/*8039A950 00397750*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039A954 00397754*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039A958 00397758*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A95C 0039775C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A960 00397760*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039A964 00397764*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8039A968 00397768*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r12));
/*8039A96C 0039776C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A970 00397770*/ PPC::Runtime::ASM::bctrl();
/*8039A974 00397774*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8039A978 00397778*/ PPC::Runtime::ASM::beq(.L_8039A984);
/*8039A97C 0039777C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5018 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8039A980 00397780*/ PPC::Runtime::ASM::b(.L_8039A9A8);
RUNTIME_PPC_JUMP_LABEL(.L_8039A984, 0x8039A984) //this is a jump label
/*8039A984 00397784*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039A988 00397788*/ PPC::Runtime::ASM::lis(context->r3, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_HighBit);
/*8039A98C 0039778C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PotenciallyAInputOneBasedOnWhatTheSpreadSheetSaysButItASkip @ Get_MemoryOffset_LowBit);
/*8039A990 00397790*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x2000);
/*8039A994 00397794*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039A998 00397798*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039A99C 0039779C*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x4000);
/*8039A9A0 003977A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8039A9A4 003977A4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8039A9A8, 0x8039A9A8) //this is a jump label
/*8039A9A8 003977A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A9AC 003977AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A9B0 003977B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039A9B4 003977B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039A9B8 003977B8*/ PPC::Runtime::ASM::blr();
}