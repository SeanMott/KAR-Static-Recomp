//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E48BC.hpp"
#include "fn_801D9264.hpp"
#include "fn_801EDA28.hpp"
#include "fn_801EDC40.hpp"
#include "fn_801EDB48.hpp"
#include "fn_801EDBBC.hpp"
#include "fn_801EDBFC.hpp"
#include "fn_801EC118.hpp"
#include "fn_801EC254.hpp"



void fn_VehicleStatTableFuncCallbacks_Star_RailRun_3(PPC::Runtime::GCContext* context)
{
/*801F06E4 001ED4E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F06E8 001ED4E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F06EC 001ED4EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F06F0 001ED4F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F06F4 001ED4F4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F06F8 001ED4F8*/ PPC::Runtime::ASM::bl(fn_801E48BC);
/*801F06FC 001ED4FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0700 001ED500*/ PPC::Runtime::ASM::bl(fn_801D9264);
/*801F0704 001ED504*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801F0708 001ED508*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F070C 001ED50C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r4));
/*801F0710 001ED510*/ PPC::Runtime::ASM::bl(fn_801EDA28);
/*801F0714 001ED514*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0718 001ED518*/ PPC::Runtime::ASM::bl(fn_801EDC40);
/*801F071C 001ED51C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0720 001ED520*/ PPC::Runtime::ASM::bl(fn_801EDB48);
/*801F0724 001ED524*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0728 001ED528*/ PPC::Runtime::ASM::bl(fn_801EDBBC);
/*801F072C 001ED52C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0730 001ED530*/ PPC::Runtime::ASM::bl(fn_801EDBFC);
/*801F0734 001ED534*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0738 001ED538*/ PPC::Runtime::ASM::bl(fn_801EC118);
/*801F073C 001ED53C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F0740 001ED540*/ PPC::Runtime::ASM::bl(fn_801EC254);
/*801F0744 001ED544*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0748 001ED548*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F074C 001ED54C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F0750 001ED550*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F0754 001ED554*/ PPC::Runtime::ASM::blr();
}