//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"
#include "fn_800EA180.hpp"
#include "fn_800EA084.hpp"



void fn_80100084(PPC::Runtime::GCContext* context)
{
/*80100084 000FCE84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80100088 000FCE88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010008C 000FCE8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80100090 000FCE90*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80100094 000FCE94*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*80100098 000FCE98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010009C 000FCE9C*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*801000A0 000FCEA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801000A4 000FCEA4*/ PPC::Runtime::ASM::mr(context->r31, context->r30);
/*801000A8 000FCEA8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801000AC 000FCEAC*/ PPC::Runtime::ASM::b(.L_80100178);
RUNTIME_PPC_JUMP_LABEL(.L_801000B0, 0x801000B0) //this is a jump label
/*801000B0 000FCEB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*801000B4 000FCEB4*/ PPC::Runtime::ASM::lwz(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801000B8 000FCEB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r25));
/*801000BC 000FCEBC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*801000C0 000FCEC0*/ PPC::Runtime::ASM::beq(.L_80100170);
/*801000C4 000FCEC4*/ PPC::Runtime::ASM::bge(.L_80100170);
/*801000C8 000FCEC8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801000CC 000FCECC*/ PPC::Runtime::ASM::beq(.L_80100170);
/*801000D0 000FCED0*/ PPC::Runtime::ASM::bge(.L_801000D8);
/*801000D4 000FCED4*/ PPC::Runtime::ASM::b(.L_80100170);
RUNTIME_PPC_JUMP_LABEL(.L_801000D8, 0x801000D8) //this is a jump label
/*801000D8 000FCED8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r25));
/*801000DC 000FCEDC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801000E0 000FCEE0*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801000E4 000FCEE4*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801000E8 000FCEE8*/ PPC::Runtime::ASM::bne(.L_801000F4);
/*801000EC 000FCEEC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801000F0 000FCEF0*/ PPC::Runtime::ASM::b(.L_80100144);
RUNTIME_PPC_JUMP_LABEL(.L_801000F4, 0x801000F4) //this is a jump label
/*801000F4 000FCEF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*801000F8 000FCEF8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r4));
/*801000FC 000FCEFC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*80100100 000FCF00*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*80100104 000FCF04*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*80100108 000FCF08*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x0);
/*8010010C 000FCF0C*/ PPC::Runtime::ASM::bne(.L_80100124);
/*80100110 000FCF10*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakupushoutwall." Get_MemoryOffset_HighBit);
/*80100114 000FCF14*/ PPC::Runtime::ASM::li(context->r4, 0xa6);
/*80100118 000FCF18*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakupushoutwall." Get_MemoryOffset_LowBit);
/*8010011C 000FCF1C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6280 @ Get_MemoryOffset_SDA21);
/*80100120 000FCF20*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80100124, 0x80100124) //this is a jump label
/*80100124 000FCF24*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r26));
/*80100128 000FCF28*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*8010012C 000FCF2C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80100130 000FCF30*/ PPC::Runtime::ASM::fsubs(context->f0, context->f2, context->f0);
/*80100134 000FCF34*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*80100138 000FCF38*/ PPC::Runtime::ASM::bge(.L_80100140);
/*8010013C 000FCF3C*/ PPC::Runtime::ASM::b(.L_80100144);
RUNTIME_PPC_JUMP_LABEL(.L_80100140, 0x80100140) //this is a jump label
/*80100140 000FCF40*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_80100144, 0x80100144) //this is a jump label
/*80100144 000FCF44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r27));
/*80100148 000FCF48*/ PPC::Runtime::ASM::mr(context->r3, context->r25);
/*8010014C 000FCF4C*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80100150 000FCF50*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*80100154 000FCF54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r25));
/*80100158 000FCF58*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8010015C 000FCF5C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*80100160 000FCF60*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r27));
/*80100164 000FCF64*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*80100168 000FCF68*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r8));
/*8010016C 000FCF6C*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_80100170, 0x80100170) //this is a jump label
/*80100170 000FCF70*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*80100174 000FCF74*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80100178, 0x80100178) //this is a jump label
/*80100178 000FCF78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*8010017C 000FCF7C*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*80100180 000FCF80*/ PPC::Runtime::ASM::blt(.L_801000B0);
/*80100184 000FCF84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r30));
/*80100188 000FCF88*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8010018C 000FCF8C*/ PPC::Runtime::ASM::ble(.L_801001A4);
/*80100190 000FCF90*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*80100194 000FCF94*/ PPC::Runtime::ASM::bl(fn_800EA180);
/*80100198 000FCF98*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*8010019C 000FCF9C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801001A0 000FCFA0*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_801001A4, 0x801001A4) //this is a jump label
/*801001A4 000FCFA4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*801001A8 000FCFA8*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*801001AC 000FCFAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801001B0 000FCFB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801001B4 000FCFB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801001B8 000FCFB8*/ PPC::Runtime::ASM::blr();
}