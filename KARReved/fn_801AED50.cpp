//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A7BDC.hpp"
#include "fn_abilityTimer_Fire.hpp"
#include "fn_801AEEC8.hpp"
#include "fn_801AF2A0.hpp"
#include "fn_801AF408.hpp"
#include "fn_801AF39C.hpp"
#include "fn_abilityTimer_Fire.hpp"
#include "fn_801AEEC8.hpp"
#include "fn_801AF2A0.hpp"
#include "fn_801AF408.hpp"
#include "fn_801AF39C.hpp"
#include "fn_801A9178.hpp"
#include "fn_801C7784.hpp"



void fn_801AED50(PPC::Runtime::GCContext* context)
{
/*801AED50 001ABB50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AED54 001ABB54*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AED58 001ABB58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AED5C 001ABB5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AED60 001ABB60*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AED64 001ABB64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r3));
/*801AED68 001ABB68*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x174, context->r4));
/*801AED6C 001ABB6C*/ PPC::Runtime::ASM::bl(fn_801A7BDC);
/*801AED70 001ABB70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801AED74 001ABB74*/ PPC::Runtime::ASM::lis(context->r7, fn_abilityTimer_Fire @ Get_MemoryOffset_HighBit);
/*801AED78 001ABB78*/ PPC::Runtime::ASM::lis(context->r6, fn_801AEEC8 @ Get_MemoryOffset_HighBit);
/*801AED7C 001ABB7C*/ PPC::Runtime::ASM::lis(context->r5, fn_801AF2A0 @ Get_MemoryOffset_HighBit);
/*801AED80 001ABB80*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x178, context->r3));
/*801AED84 001ABB84*/ PPC::Runtime::ASM::lis(context->r4, fn_801AF408 @ Get_MemoryOffset_HighBit);
/*801AED88 001ABB88*/ PPC::Runtime::ASM::lis(context->r3, fn_801AF39C @ Get_MemoryOffset_HighBit);
/*801AED8C 001ABB8C*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn_abilityTimer_Fire @ Get_MemoryOffset_LowBit);
/*801AED90 001ABB90*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801AED94 001ABB94*/ PPC::Runtime::ASM::addi(context->r6, context->r6, fn_801AEEC8 @ Get_MemoryOffset_LowBit);
/*801AED98 001ABB98*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn_801AF2A0 @ Get_MemoryOffset_LowBit);
/*801AED9C 001ABB9C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801AF408 @ Get_MemoryOffset_LowBit);
/*801AEDA0 001ABBA0*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801AEDA4 001ABBA4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801AF39C @ Get_MemoryOffset_LowBit);
/*801AEDA8 001ABBA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AEDAC 001ABBAC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r8));
/*801AEDB0 001ABBB0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa08, context->r31));
/*801AEDB4 001ABBB4*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x92c, context->r31));
/*801AEDB8 001ABBB8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x930, context->r31));
/*801AEDBC 001ABBBC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x934, context->r31));
/*801AEDC0 001ABBC0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7fc, context->r31));
/*801AEDC4 001ABBC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e8, context->r31));
/*801AEDC8 001ABBC8*/ PPC::Runtime::ASM::bl(fn_801A9178);
/*801AEDCC 001ABBCC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801AEDD0 001ABBD0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801AEDD4 001ABBD4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1490 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AEDD8 001ABBD8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x9f4);
/*801AEDDC 001ABBDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa04, context->r31));
/*801AEDE0 001ABBE0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*801AEDE4 001ABBE4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa04, context->r31));
/*801AEDE8 001ABBE8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa04, context->r31));
/*801AEDEC 001ABBEC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 6, 25, 25);
/*801AEDF0 001ABBF0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa04, context->r31));
/*801AEDF4 001ABBF4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa10, context->r31));
/*801AEDF8 001ABBF8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801AEDFC 001ABBFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a8, context->r3));
/*801AEE00 001ABC00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa18, context->r31));
/*801AEE04 001ABC04*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa14, context->r31));
/*801AEE08 001ABC08*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801AEE0C 001ABC0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801AEE10 001ABC10*/ PPC::Runtime::ASM::bl(fn_801C7784);
/*801AEE14 001ABC14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AEE18 001ABC18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AEE1C 001ABC1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AEE20 001ABC20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AEE24 001ABC24*/ PPC::Runtime::ASM::blr();
}