//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"
#include "fn_800F5944.hpp"
#include "fn_800F5744.hpp"
#include "fn_800EA180.hpp"



void fn_8010CC0C(PPC::Runtime::GCContext* context)
{
/*8010CC0C 00109A0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8010CC10 00109A10*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010CC14 00109A14*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFAC4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010CC18 00109A18*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8010CC1C 00109A1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010CC20 00109A20*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8010CC24 00109A24*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8010CC28 00109A28*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFAC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010CC2C 00109A2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010CC30 00109A30*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*8010CC34 00109A34*/ PPC::Runtime::ASM::li(context->r7, 0x4);
/*8010CC38 00109A38*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010CC3C 00109A3C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010CC40 00109A40*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8010CC44 00109A44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010CC48 00109A48*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8010CC4C 00109A4C*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*8010CC50 00109A50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8010CC54 00109A54*/ PPC::Runtime::ASM::li(context->r4, 0x14);
/*8010CC58 00109A58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8010CC5C 00109A5C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjRemoveAnimAllByFlags);
/*8010CC60 00109A60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*8010CC64 00109A64*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010CC68 00109A68*/ PPC::Runtime::ASM::bl(fn_800F5944);
/*8010CC6C 00109A6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*8010CC70 00109A70*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8010CC74 00109A74*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8010CC78 00109A78*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8010CC7C 00109A7C*/ PPC::Runtime::ASM::bl(fn_800F5744);
/*8010CC80 00109A80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*8010CC84 00109A84*/ PPC::Runtime::ASM::bl(fn_800EA180);
/*8010CC88 00109A88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010CC8C 00109A8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010CC90 00109A90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010CC94 00109A94*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010CC98 00109A98*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010CC9C 00109A9C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8010CCA0 00109AA0*/ PPC::Runtime::ASM::blr();
}