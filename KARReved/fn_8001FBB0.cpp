//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8001FBB0(PPC::Runtime::GCContext* context)
{
/*8001FBB0 0001C9B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8001FBB4 0001C9B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8001FBB8 0001C9B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8001FBBC 0001C9BC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8001FBC0 0001C9C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8001FBC4 0001C9C4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd2, context->r3));
/*8001FBC8 0001C9C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8001FBCC 0001C9CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8001FBD0 0001C9D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8001FBD4 0001C9D4*/ PPC::Runtime::ASM::blr();
}