//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80009EF8(PPC::Runtime::GCContext* context)
{
/*80009EF8 00006CF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80009EFC 00006CFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80009F00 00006D00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80009F04 00006D04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80009F08 00006D08*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80009F0C 00006D0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80009F10 00006D10*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80009F14 00006D14*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80009F18 00006D18*/ PPC::Runtime::ASM::mulli(context->r4, context->r30, 0xc);
/*80009F1C 00006D1C*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*80009F20 00006D20*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*80009F24 00006D24*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*80009F28 00006D28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8e0, context->r3));
/*80009F2C 00006D2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80009F30 00006D30*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80009F34 00006D34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80009F38 00006D38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80009F3C 00006D3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80009F40 00006D40*/ PPC::Runtime::ASM::blr();
}