//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSReport.hpp"
#include "fn___assert.hpp"



void fn_804479E0(PPC::Runtime::GCContext* context)
{
/*804479E0 004447E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*804479E4 004447E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*804479E8 004447E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804479EC 004447EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804479F0 004447F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*804479F4 004447F4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*804479F8 004447F8*/ PPC::Runtime::ASM::lwz(context->r12, STRUCT_BYTE4_COUNT_1805DE4E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*804479FC 004447FC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80447A00 00444800*/ PPC::Runtime::ASM::bctrl();
/* 80447A04 00444804  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80447A08 00444808*/ PPC::Runtime::ASM::bne(.L_80447A30);
/*80447A0C 0044480C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80508D58 @ Get_MemoryOffset_HighBit);
/*80447A10 00444810*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80447A14 00444814*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80508D58 @ Get_MemoryOffset_LowBit);
/*80447A18 00444818*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80447A1C 0044481C*/ PPC::Runtime::ASM::bl(OSReport);
/*80447A20 00444820*/ PPC::Runtime::ASM::li(context->r3, String_ "synth." Get_MemoryOffset_SDA21);
/*80447A24 00444824*/ PPC::Runtime::ASM::li(context->r4, 0xae);
/*80447A28 00444828*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_345 @ Get_MemoryOffset_SDA21);
/*80447A2C 0044482C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80447A30, 0x80447A30) //this is a jump label
/*80447A30 00444830*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80447A34 00444834*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80447A38 00444838*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80447A3C 0044483C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80447A40 00444840*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80447A44 00444844*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80447A48 00444848*/ PPC::Runtime::ASM::blr();
}