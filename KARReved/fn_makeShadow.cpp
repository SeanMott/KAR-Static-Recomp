//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007B488.hpp"
#include "fn_8007B488.hpp"



void fn_makeShadow(PPC::Runtime::GCContext* context)
{
/*8007B284 00078084*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8007B288 00078088*/ PPC::Runtime::ASM::mflr(context->r0);
/*8007B28C 0007808C*/ PPC::Runtime::ASM::li(context->r4, 0xf);
/*8007B290 00078090*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8007B294 00078094*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8007B298 00078098*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8007B29C 0007809C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8007B2A0 000780A0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8007B2A4 000780A4*/ PPC::Runtime::ASM::li(context->r3, 0x18);
/*8007B2A8 000780A8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007B2AC 000780AC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8007B2B0 000780B0*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/*8007B2B4 000780B4*/ PPC::Runtime::ASM::lis(context->r4, lbl_80552A00 @ Get_MemoryOffset_HighBit);
/*8007B2B8 000780B8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8007B2BC 000780BC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_80552A00 @ Get_MemoryOffset_LowBit);
/*8007B2C0 000780C0*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*8007B2C4 000780C4*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*8007B2C8 000780C8*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8007B2CC 000780CC*/ PPC::Runtime::ASM::lis(context->r4, fn_8007B488 @ Get_MemoryOffset_HighBit);
/*8007B2D0 000780D0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_8007B488 @ Get_MemoryOffset_LowBit);
/*8007B2D4 000780D4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8007B2D8 000780D8*/ PPC::Runtime::ASM::li(context->r4, 0x18);
/*8007B2DC 000780DC*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*8007B2E0 000780E0*/ PPC::Runtime::ASM::bl(fn_GObj_AddUserData);
/*8007B2E4 000780E4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*8007B2E8 000780E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*8007B2EC 000780EC*/ PPC::Runtime::ASM::bl(fn_HSD_ShadowAlloc);
/*8007B2F0 000780F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8007B2F4 000780F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8007B2F8 000780F8*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*8007B2FC 000780FC*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetProjectionType);
/*8007B300 00078100*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8007B304 00078104*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DED94 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007B308 00078108*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetNear);
/*8007B30C 0007810C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8007B310 00078110*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DEDB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007B314 00078114*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetFar);
/*8007B318 00078118*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8007B31C 0007811C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8007B320 00078120*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetFlags);
/*8007B324 00078124*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007B328 00078128*/ PPC::Runtime::ASM::li(context->r4, 0x200);
/*8007B32C 0007812C*/ PPC::Runtime::ASM::li(context->r5, 0x200);
/*8007B330 00078130*/ PPC::Runtime::ASM::bl(fn_HSD_ShadowSetSize);
/*8007B334 00078134*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8007B338 00078138*/ PPC::Runtime::ASM::bne(.L_8007B350);
/*8007B33C 0007813C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_561 @ Get_MemoryOffset_HighBit);
/*8007B340 00078140*/ PPC::Runtime::ASM::li(context->r4, 0x67);
/*8007B344 00078144*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_561 @ Get_MemoryOffset_LowBit);
/*8007B348 00078148*/ PPC::Runtime::ASM::li(context->r5, lbl_805D53FC @ Get_MemoryOffset_SDA21);
/*8007B34C 0007814C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8007B350, 0x8007B350) //this is a jump label
/*8007B350 00078150*/ PPC::Runtime::ASM::li(context->r0, 0xc0);
/*8007B354 00078154*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DEDB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007B358 00078158*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*8007B35C 0007815C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007B360 00078160*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEDBC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007B364 00078164*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8007B368 00078168*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8007B36C 0007816C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8007B370 00078170*/ PPC::Runtime::ASM::bl(fn_HSD_ShadowAddObject);
/*8007B374 00078174*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007B378 00078178*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8007B37C 0007817C*/ PPC::Runtime::ASM::bl(fn_HSD_ShadowSetActive?);
/*8007B380 00078180*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*8007B384 00078184*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8007B388 00078188*/ PPC::Runtime::ASM::li(context->r0, 0x80);
/*8007B38C 0007818C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8007B390 00078190*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*8007B394 00078194*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*8007B398 00078198*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r28));
/*8007B39C 0007819C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*8007B3A0 000781A0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r28));
/*8007B3A4 000781A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8007B3A8 000781A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8007B3AC 000781AC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007B3B0 000781B0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8007B3B4 000781B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8007B3B8 000781B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007B3BC 000781BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8007B3C0 000781C0*/ PPC::Runtime::ASM::blr();
}