//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80047844.hpp"
#include "fn_80078E40.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"



void fn_800487AC(PPC::Runtime::GCContext* context)
{
/*800487AC 000455AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800487B0 000455B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800487B4 000455B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800487B8 000455B8*/ PPC::Runtime::ASM::bl(fn_80047844);
/*800487BC 000455BC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r3));
/*800487C0 000455C0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*800487C4 000455C4*/ PPC::Runtime::ASM::bne(.L_800487DC);
/*800487C8 000455C8*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800487CC 000455CC*/ PPC::Runtime::ASM::bl(fn_80078E40);
/*800487D0 000455D0*/ PPC::Runtime::ASM::li(context->r3, 0x1c);
/*800487D4 000455D4*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
/*800487D8 000455D8*/ PPC::Runtime::ASM::b(.L_800487F0);
RUNTIME_PPC_JUMP_LABEL(.L_800487DC, 0x800487DC) //this is a jump label
/*800487DC 000455DC*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*800487E0 000455E0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800487E4 000455E4*/ PPC::Runtime::ASM::bne(.L_800487F0);
/*800487E8 000455E8*/ PPC::Runtime::ASM::li(context->r3, 0x1a);
/*800487EC 000455EC*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
RUNTIME_PPC_JUMP_LABEL(.L_800487F0, 0x800487F0) //this is a jump label
/*800487F0 000455F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800487F4 000455F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800487F8 000455F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800487FC 000455FC*/ PPC::Runtime::ASM::blr();
}