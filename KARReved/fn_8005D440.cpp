//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005C6DC.hpp"



void fn_8005D440(PPC::Runtime::GCContext* context)
{
/*8005D440 0005A240*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005D444 0005A244*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005D448 0005A248*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D44C 0005A24C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D450 0005A250*/ PPC::Runtime::ASM::bl(fn_8005C6DC);
/*8005D454 0005A254*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005D458 0005A258*/ PPC::Runtime::ASM::bne(.L_8005D464);
/*8005D45C 0005A25C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8005D460 0005A260*/ PPC::Runtime::ASM::b(.L_8005D4AC);
RUNTIME_PPC_JUMP_LABEL(.L_8005D464, 0x8005D464) //this is a jump label
/*8005D464 0005A264*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005D468 0005A268*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*8005D46C 0005A26C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005D470 0005A270*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8005D474 0005A274*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r3);
/*8005D478 0005A278*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x22);
/*8005D47C 0005A27C*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43, context->r5));
/*8005D480 0005A280*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D484 0005A284*/ PPC::Runtime::ASM::li(context->r4, 0x3e7);
/*8005D488 0005A288*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a1, context->r5));
/*8005D48C 0005A28C*/ PPC::Runtime::ASM::bl(fn_80444984);
/*8005D490 0005A290*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8005D494 0005A294*/ PPC::Runtime::ASM::bne(.L_8005D4AC);
/*8005D498 0005A298*/ PPC::Runtime::ASM::lis(context->r3, String_lbaudio.c @ Get_MemoryOffset_HighBit);
/*8005D49C 0005A29C*/ PPC::Runtime::ASM::li(context->r4, 0x709);
/*8005D4A0 0005A2A0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_lbaudio.c @ Get_MemoryOffset_LowBit);
/*8005D4A4 0005A2A4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*8005D4A8 0005A2A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005D4AC, 0x8005D4AC) //this is a jump label
/*8005D4AC 0005A2AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D4B0 0005A2B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D4B4 0005A2B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D4B8 0005A2B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005D4BC 0005A2BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005D4C0 0005A2C0*/ PPC::Runtime::ASM::blr();
}