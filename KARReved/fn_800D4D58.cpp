//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D4D58(PPC::Runtime::GCContext* context)
{
/*800D4D58 000D1B58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D4D5C 000D1B5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D4D60 000D1B60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D4D64 000D1B64*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 3);
/*800D4D68 000D1B68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D4D6C 000D1B6C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D4D70 000D1B70*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800D4D74 000D1B74*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4D78 000D1B78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r5));
/*800D4D7C 000D1B7C*/ PPC::Runtime::ASM::lwzx(context->r31, context->r3, context->r0);
/*800D4D80 000D1B80*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800D4D84 000D1B84*/ PPC::Runtime::ASM::bne(.L_800D4D98);
/*800D4D88 000D1B88*/ PPC::Runtime::ASM::li(context->r3, lbl_805D609C @ Get_MemoryOffset_SDA21);
/*800D4D8C 000D1B8C*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*800D4D90 000D1B90*/ PPC::Runtime::ASM::li(context->r5, lbl_805D60A4 @ Get_MemoryOffset_SDA21);
/*800D4D94 000D1B94*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4D98, 0x800D4D98) //this is a jump label
/*800D4D98 000D1B98*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800D4D9C 000D1B9C*/ PPC::Runtime::ASM::beq(.L_800D4DE0);
/*800D4DA0 000D1BA0*/ PPC::Runtime::ASM::bne(.L_800D4DB4);
/*800D4DA4 000D1BA4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D609C @ Get_MemoryOffset_SDA21);
/*800D4DA8 000D1BA8*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*800D4DAC 000D1BAC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D60A4 @ Get_MemoryOffset_SDA21);
/*800D4DB0 000D1BB0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4DB4, 0x800D4DB4) //this is a jump label
/*800D4DB4 000D1BB4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800D4DB8 000D1BB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800D4DBC 000D1BBC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*800D4DC0 000D1BC0*/ PPC::Runtime::ASM::bne(.L_800D4DD0);
/*800D4DC4 000D1BC4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*800D4DC8 000D1BC8*/ PPC::Runtime::ASM::beq(.L_800D4DD0);
/*800D4DCC 000D1BCC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D4DD0, 0x800D4DD0) //this is a jump label
/*800D4DD0 000D1BD0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800D4DD4 000D1BD4*/ PPC::Runtime::ASM::beq(.L_800D4DE0);
/*800D4DD8 000D1BD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D4DDC 000D1BDC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_800D4DE0, 0x800D4DE0) //this is a jump label
/*800D4DE0 000D1BE0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*800D4DE4 000D1BE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800D4DE8 000D1BE8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r31));
/*800D4DEC 000D1BEC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800D4DF0 000D1BF0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r31));
/*800D4DF4 000D1BF4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800D4DF8 000D1BF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D4DFC 000D1BFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D4E00 000D1C00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D4E04 000D1C04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D4E08 000D1C08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D4E0C 000D1C0C*/ PPC::Runtime::ASM::blr();
}