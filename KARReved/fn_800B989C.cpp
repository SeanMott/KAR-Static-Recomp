//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B94E8.hpp"



void fn_800B989C(PPC::Runtime::GCContext* context)
{
/*800B989C 000B669C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B98A0 000B66A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B98A4 000B66A4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800B98A8 000B66A8*/ PPC::Runtime::ASM::mr(context->r7, context->r6);
/*800B98AC 000B66AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B98B0 000B66B0*/ PPC::Runtime::ASM::blt(.L_800B98BC);
/*800B98B4 000B66B4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800B98B8 000B66B8*/ PPC::Runtime::ASM::blt(.L_800B98C4);
RUNTIME_PPC_JUMP_LABEL(.L_800B98BC, 0x800B98BC) //this is a jump label
/*800B98BC 000B66BC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B98C0 000B66C0*/ PPC::Runtime::ASM::b(.L_800B98D8);
RUNTIME_PPC_JUMP_LABEL(.L_800B98C4, 0x800B98C4) //this is a jump label
/*800B98C4 000B66C4*/ PPC::Runtime::ASM::lis(context->r6, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B98C8 000B66C8*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800B98CC 000B66CC*/ PPC::Runtime::ASM::addi(context->r3, context->r6, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B98D0 000B66D0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800B98D4 000B66D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B98D8, 0x800B98D8) //this is a jump label
/*800B98D8 000B66D8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B98DC 000B66DC*/ PPC::Runtime::ASM::beq(.L_800B98E8);
/*800B98E0 000B66E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800B98E4 000B66E4*/ PPC::Runtime::ASM::b(.L_800B98EC);
RUNTIME_PPC_JUMP_LABEL(.L_800B98E8, 0x800B98E8) //this is a jump label
/*800B98E8 000B66E8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B98EC, 0x800B98EC) //this is a jump label
/*800B98EC 000B66EC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B98F0 000B66F0*/ PPC::Runtime::ASM::beq(.L_800B9900);
/*800B98F4 000B66F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x71, context->r3));
/*800B98F8 000B66F8*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x72, context->r3));
/*800B98FC 000B66FC*/ PPC::Runtime::ASM::b(.L_800B9908);
RUNTIME_PPC_JUMP_LABEL(.L_800B9900, 0x800B9900) //this is a jump label
/*800B9900 000B6700*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800B9904 000B6704*/ PPC::Runtime::ASM::li(context->r6, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9908, 0x800B9908) //this is a jump label
/*800B9908 000B6708*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800B990C 000B670C*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*800B9910 000B6710*/ PPC::Runtime::ASM::mr(context->r5, context->r0);
/*800B9914 000B6714*/ PPC::Runtime::ASM::bl(fn_800B94E8);
/*800B9918 000B6718*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B991C 000B671C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B9920 000B6720*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B9924 000B6724*/ PPC::Runtime::ASM::blr();
}