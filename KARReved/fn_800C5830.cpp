//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022C824.hpp"



void fn_800C5830(PPC::Runtime::GCContext* context)
{
/*800C5830 000C2630*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800C5834 000C2634*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C5838 000C2638*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C583C 000C263C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800C5840 000C2640*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C5844 000C2644*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800C5848 000C2648*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C584C 000C264C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800C5850 000C2650*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c0, context->r3));
/*800C5854 000C2654*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f8, context->r3));
/*800C5858 000C2658*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c0, context->r3));
/*800C585C 000C265C*/ PPC::Runtime::ASM::bl(fn_8022C824);
/*800C5860 000C2660*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r30));
/*800C5864 000C2664*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF3D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800C5868 000C2668*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r30));
/*800C586C 000C266C*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r31));
/*800C5870 000C2670*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800C5874 000C2674*/ PPC::Runtime::ASM::bge(.L_800C588C);
/*800C5878 000C2678*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_41 @ Get_MemoryOffset_HighBit);
/*800C587C 000C267C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C5880 000C2680*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithFuncPtrs_41 @ Get_MemoryOffset_LowBit);
/*800C5884 000C2684*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x86, context->r3));
/*800C5888 000C2688*/ PPC::Runtime::ASM::b(.L_800C5898);
RUNTIME_PPC_JUMP_LABEL(.L_800C588C, 0x800C588C) //this is a jump label
/*800C588C 000C268C*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_41 @ Get_MemoryOffset_HighBit);
/*800C5890 000C2690*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithFuncPtrs_41 @ Get_MemoryOffset_LowBit);
/*800C5894 000C2694*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x86, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800C5898, 0x800C5898) //this is a jump label
/*800C5898 000C2698*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C589C 000C269C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800C58A0 000C26A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C58A4 000C26A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C58A8 000C26A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C58AC 000C26AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800C58B0 000C26B0*/ PPC::Runtime::ASM::blr();
}