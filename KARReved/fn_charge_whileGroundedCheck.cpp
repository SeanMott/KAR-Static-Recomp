//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801DD17C.hpp"
#include "fn_801EF278.hpp"



void fn_charge_whileGroundedCheck(PPC::Runtime::GCContext* context)
{
/*801EF150 001EBF50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EF154 001EBF54*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EF158 001EBF58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EF15C 001EBF5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EF160 001EBF60*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EF164 001EBF64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66c, context->r3));
/*801EF168 001EBF68*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801EF16C 001EBF6C*/ PPC::Runtime::ASM::beq(.L_801EF194);
/*801EF170 001EBF70*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r31));
/* 801EF174 001EBF74  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801EF178 001EBF78*/ PPC::Runtime::ASM::beq(.L_801EF18C);
/*801EF17C 001EBF7C*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*801EF180 001EBF80*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EF184 001EBF84*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*801EF188 001EBF88*/ PPC::Runtime::ASM::bl(fn_801DD17C);
RUNTIME_PPC_JUMP_LABEL(.L_801EF18C, 0x801EF18C) //this is a jump label
/*801EF18C 001EBF8C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801EF190 001EBF90*/ PPC::Runtime::ASM::b(.L_801EF198);
RUNTIME_PPC_JUMP_LABEL(.L_801EF194, 0x801EF194) //this is a jump label
/*801EF194 001EBF94*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801EF198, 0x801EF198) //this is a jump label
/*801EF198 001EBF98*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801EF19C 001EBF9C*/ PPC::Runtime::ASM::beq(.L_801EF1B0);
/*801EF1A0 001EBFA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EF1A4 001EBFA4*/ PPC::Runtime::ASM::bl(fn_801EF278);
/*801EF1A8 001EBFA8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EF1AC 001EBFAC*/ PPC::Runtime::ASM::b(.L_801EF1B4);
RUNTIME_PPC_JUMP_LABEL(.L_801EF1B0, 0x801EF1B0) //this is a jump label
/*801EF1B0 001EBFB0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801EF1B4, 0x801EF1B4) //this is a jump label
/*801EF1B4 001EBFB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EF1B8 001EBFB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EF1BC 001EBFBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EF1C0 001EBFC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EF1C4 001EBFC4*/ PPC::Runtime::ASM::blr();
}