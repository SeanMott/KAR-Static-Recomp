//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000B4B0(PPC::Runtime::GCContext* context)
{
/*8000B4B0 000082B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000B4B4 000082B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000B4B8 000082B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B4BC 000082BC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000B4C0 000082C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B4C4 000082C4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x37a, context->r3));
/*8000B4C8 000082C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000B4CC 000082CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000B4D0 000082D0*/ PPC::Runtime::ASM::blr();
}