//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801885E8.hpp"



void fn_8014780C(PPC::Runtime::GCContext* context)
{
/*8014780C 0014460C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80147810 00144610*/ PPC::Runtime::ASM::mflr(context->r0);
/*80147814 00144614*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80147818 00144618*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014781C 0014461C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80147820 00144620*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80147824 00144624*/ PPC::Runtime::ASM::bl(fn_801885E8);
/*80147828 00144628*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8014782C 0014462C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD7F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80147830 00144630*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r31));
/*80147834 00144634*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80147838 00144638*/ PPC::Runtime::ASM::beq(.L_80147848);
/*8014783C 0014463C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80147840 00144640*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80147844 00144644*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x300, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80147848, 0x80147848) //this is a jump label
/*80147848 00144648*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014784C 0014464C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80147850 00144650*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80147854 00144654*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80147858 00144658*/ PPC::Runtime::ASM::blr();
}