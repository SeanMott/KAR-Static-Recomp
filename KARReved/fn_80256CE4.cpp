//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Box_CheckHP.hpp"
#include "fn_Box_CheckHP.hpp"
#include "fn_80252E38.hpp"
#include "fn_802557A8.hpp"



void fn_80256CE4(PPC::Runtime::GCContext* context)
{
/*80256CE4 00253AE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80256CE8 00253AE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80256CEC 00253AEC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80256CF0 00253AF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80256CF4 00253AF4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*80256CF8 00253AF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80256CFC 00253AFC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80256D00 00253B00*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80256D04 00253B04*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80256D08 00253B08*/ PPC::Runtime::ASM::lis(context->r3, fn_Box_CheckHP @ Get_MemoryOffset_HighBit);
/*80256D0C 00253B0C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80256D10 00253B10*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_Box_CheckHP @ Get_MemoryOffset_LowBit);
/*80256D14 00253B14*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80256D18 00253B18*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x359, context->r31));
/*80256D1C 00253B1C*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r5, 0, 31, 31);
/*80256D20 00253B20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*80256D24 00253B24*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x359, context->r31));
/*80256D28 00253B28*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*80256D2C 00253B2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35c, context->r31));
/*80256D30 00253B30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*80256D34 00253B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80256D38 00253B38*/ PPC::Runtime::ASM::subf.(context->r3, context->r3, context->r0);
/*80256D3C 00253B3C*/ PPC::Runtime::ASM::bge(.L_80256D44);
/*80256D40 00253B40*/ PPC::Runtime::ASM::neg(context->r3, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80256D44, 0x80256D44) //this is a jump label
/*80256D44 00253B44*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*80256D48 00253B48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*80256D4C 00253B4C*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*80256D50 00253B50*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80256D54 00253B54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x364, context->r31));
/*80256D58 00253B58*/ PPC::Runtime::ASM::bl(fn_80252E38);
/*80256D5C 00253B5C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35a, context->r31));
/*80256D60 00253B60*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80256D64 00253B64*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 5, 26, 26);
/*80256D68 00253B68*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80256D6C 00253B6C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35a, context->r31));
/*80256D70 00253B70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80256D74 00253B74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x368, context->r31));
/*80256D78 00253B78*/ PPC::Runtime::ASM::bl(fn_802557A8);
/*80256D7C 00253B7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80256D80 00253B80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80256D84 00253B84*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80256D88 00253B88*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80256D8C 00253B8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80256D90 00253B90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80256D94 00253B94*/ PPC::Runtime::ASM::blr();
}