//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_calcDistanceFromOOB(PPC::Runtime::GCContext* context)
{
/*800D4F20 000D1D20*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4F24 000D1D24*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800D4F28 000D1D28*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800D4F2C 000D1D2C*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800D4F30 000D1D30*/ PPC::Runtime::ASM::beq(.L_800D4FB0);
/*800D4F34 000D1D34*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D4F38 000D1D38*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r4));
/*800D4F3C 000D1D3C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r4));
/*800D4F40 000D1D40*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800D4F44 000D1D44*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*800D4F48 000D1D48*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*800D4F4C 000D1D4C*/ PPC::Runtime::ASM::bge(.L_800D4F54);
/*800D4F50 000D1D50*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800D4F54, 0x800D4F54) //this is a jump label
/*800D4F54 000D1D54*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D4F58 000D1D58*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r4));
/*800D4F5C 000D1D5C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f2, context->f0);
/*800D4F60 000D1D60*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*800D4F64 000D1D64*/ PPC::Runtime::ASM::bge(.L_800D4F6C);
/*800D4F68 000D1D68*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800D4F6C, 0x800D4F6C) //this is a jump label
/*800D4F6C 000D1D6C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r4));
/*800D4F70 000D1D70*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*800D4F74 000D1D74*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*800D4F78 000D1D78*/ PPC::Runtime::ASM::bge(.L_800D4F80);
/*800D4F7C 000D1D7C*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800D4F80, 0x800D4F80) //this is a jump label
/*800D4F80 000D1D80*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800D4F84 000D1D84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r4));
/*800D4F88 000D1D88*/ PPC::Runtime::ASM::fsubs(context->f0, context->f2, context->f0);
/*800D4F8C 000D1D8C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*800D4F90 000D1D90*/ PPC::Runtime::ASM::bge(.L_800D4F98);
/*800D4F94 000D1D94*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800D4F98, 0x800D4F98) //this is a jump label
/*800D4F98 000D1D98*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r4));
/*800D4F9C 000D1D9C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*800D4FA0 000D1DA0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*800D4FA4 000D1DA4*/ PPC::Runtime::ASM::bgelr();
/*800D4FA8 000D1DA8*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
/*800D4FAC 000D1DAC*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800D4FB0, 0x800D4FB0) //this is a jump label
/*800D4FB0 000D1DB0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF600 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4FB4 000D1DB4*/ PPC::Runtime::ASM::blr();
}