//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FA748.hpp"
#include "FuncCramedBefore_Wheel_WaitJump_1.hpp"



void FuncAtTheEndOf_Wheel_WaitRun_4(PPC::Runtime::GCContext* context)
{
/*801F8C50 001F5A50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F8C54 001F5A54*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F8C58 001F5A58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F8C5C 001F5A5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F8C60 001F5A60*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F8C64 001F5A64*/ PPC::Runtime::ASM::bl(fn_801FA748);
/*801F8C68 001F5A68*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F8C6C 001F5A6C*/ PPC::Runtime::ASM::beq(.L_801F8C80);
/*801F8C70 001F5A70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F8C74 001F5A74*/ PPC::Runtime::ASM::bl(FuncCramedBefore_Wheel_WaitJump_1);
/*801F8C78 001F5A78*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F8C7C 001F5A7C*/ PPC::Runtime::ASM::b(.L_801F8C84);
RUNTIME_PPC_JUMP_LABEL(.L_801F8C80, 0x801F8C80) //this is a jump label
/*801F8C80 001F5A80*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801F8C84, 0x801F8C84) //this is a jump label
/*801F8C84 001F5A84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F8C88 001F5A88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F8C8C 001F5A8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F8C90 001F5A90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F8C94 001F5A94*/ PPC::Runtime::ASM::blr();
}