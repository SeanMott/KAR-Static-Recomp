//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005C6DC.hpp"



void fn_8005D230(PPC::Runtime::GCContext* context)
{
/*8005D230 0005A030*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005D234 0005A034*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005D238 0005A038*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D23C 0005A03C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D240 0005A040*/ PPC::Runtime::ASM::bl(fn_8005C6DC);
/*8005D244 0005A044*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005D248 0005A048*/ PPC::Runtime::ASM::bne(.L_8005D254);
/*8005D24C 0005A04C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8005D250 0005A050*/ PPC::Runtime::ASM::b(.L_8005D29C);
RUNTIME_PPC_JUMP_LABEL(.L_8005D254, 0x8005D254) //this is a jump label
/*8005D254 0005A054*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005D258 0005A058*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*8005D25C 0005A05C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005D260 0005A060*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*8005D264 0005A064*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r3);
/*8005D268 0005A068*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x22);
/*8005D26C 0005A06C*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43, context->r5));
/*8005D270 0005A070*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D274 0005A074*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8005D278 0005A078*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a1, context->r5));
/*8005D27C 0005A07C*/ PPC::Runtime::ASM::bl(fn_80444984);
/*8005D280 0005A080*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8005D284 0005A084*/ PPC::Runtime::ASM::bne(.L_8005D29C);
/*8005D288 0005A088*/ PPC::Runtime::ASM::lis(context->r3, String_lbaudio.c @ Get_MemoryOffset_HighBit);
/*8005D28C 0005A08C*/ PPC::Runtime::ASM::li(context->r4, 0x6aa);
/*8005D290 0005A090*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_lbaudio.c @ Get_MemoryOffset_LowBit);
/*8005D294 0005A094*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*8005D298 0005A098*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005D29C, 0x8005D29C) //this is a jump label
/*8005D29C 0005A09C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D2A0 0005A0A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D2A4 0005A0A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D2A8 0005A0A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005D2AC 0005A0AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005D2B0 0005A0B0*/ PPC::Runtime::ASM::blr();
}