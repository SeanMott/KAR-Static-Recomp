//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802D3D18(PPC::Runtime::GCContext* context)
{
/*802D3D18 002D0B18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802D3D1C 002D0B1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802D3D20 002D0B20*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*802D3D24 002D0B24*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*802D3D28 002D0B28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D3D2C 002D0B2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D3D30 002D0B30*/ PPC::Runtime::ASM::bl(fn_803919FC);
/* 802D3D34 002D0B34  7C 64 1B 79 */ mr. context->r4 , context->r3
/*802D3D38 002D0B38*/ PPC::Runtime::ASM::beq(.L_802D3D54);
/*802D3D3C 002D0B3C*/ PPC::Runtime::ASM::lbz(context->r0, SkipAddress_56 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802D3D40 002D0B40*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802D3D44 002D0B44*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802D3D48 002D0B48*/ PPC::Runtime::ASM::beq(.L_802D3D50);
/*802D3D4C 002D0B4C*/ PPC::Runtime::ASM::bl(fn_80391644);
RUNTIME_PPC_JUMP_LABEL(.L_802D3D50, 0x802D3D50) //this is a jump label
/*802D3D50 002D0B50*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_802D3D54, 0x802D3D54) //this is a jump label
/*802D3D54 002D0B54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D3D58 002D0B58*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*802D3D5C 002D0B5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D3D60 002D0B60*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802D3D64 002D0B64*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802D3D68 002D0B68*/ PPC::Runtime::ASM::blr();
}