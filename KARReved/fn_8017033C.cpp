//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8017033C(PPC::Runtime::GCContext* context)
{
/*8017033C 0016D13C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80170340 0016D140*/ PPC::Runtime::ASM::mflr(context->r0);
/*80170344 0016D144*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80170348 0016D148*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8017034C 0016D14C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80170350 0016D150*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80170354 0016D154*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80170358 0016D158*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8017035C, 0x8017035C) //this is a jump label
/*8017035C 0016D15C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80170360 0016D160*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80170364 0016D164*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80170368 0016D168*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8017036C 0016D16C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc04, context->r30));
/*80170370 0016D170*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80170374 0016D174*/ PPC::Runtime::ASM::beq(.L_80170380);
/*80170378 0016D178*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8017037C 0016D17C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc04, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80170380, 0x80170380) //this is a jump label
/*80170380 0016D180*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80170384 0016D184*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80170388 0016D188*/ PPC::Runtime::ASM::blt(.L_8017035C);
/*8017038C 0016D18C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80170390 0016D190*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80170394 0016D194*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80170398 0016D198*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8017039C 0016D19C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801703A0 0016D1A0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801703A4 0016D1A4*/ PPC::Runtime::ASM::blr();
}