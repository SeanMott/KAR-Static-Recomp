//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800EC57C(PPC::Runtime::GCContext* context)
{
/*800EC57C 000E937C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EC580 000E9380*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EC584 000E9384*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EC588 000E9388*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EC58C 000E938C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800EC590 000E9390*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC594 000E9394*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*800EC598 000E9398*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r31);
/*800EC59C 000E939C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*800EC5A0 000E93A0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1DbLevel @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC5A4 000E93A4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*800EC5A8 000E93A8*/ PPC::Runtime::ASM::blt(.L_800EC5D4);
/*800EC5AC 000E93AC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC5B0 000E93B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800EC5B4 000E93B4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EC5B8 000E93B8*/ PPC::Runtime::ASM::bge(.L_800EC5D4);
/*800EC5BC 000E93BC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_965 @ Get_MemoryOffset_HighBit);
/*800EC5C0 000E93C0*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_966 @ Get_MemoryOffset_HighBit);
/*800EC5C4 000E93C4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_965 @ Get_MemoryOffset_LowBit);
/*800EC5C8 000E93C8*/ PPC::Runtime::ASM::li(context->r4, 0x506);
/*800EC5CC 000E93CC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_966 @ Get_MemoryOffset_LowBit);
/*800EC5D0 000E93D0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EC5D4, 0x800EC5D4) //this is a jump label
/*800EC5D4 000E93D4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800EC5D8 000E93D8*/ PPC::Runtime::ASM::ble(.L_800EC5EC);
/*800EC5DC 000E93DC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC5E0 000E93E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800EC5E4 000E93E4*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r31);
/*800EC5E8 000E93E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800EC5EC, 0x800EC5EC) //this is a jump label
/*800EC5EC 000E93EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EC5F0 000E93F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EC5F4 000E93F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EC5F8 000E93F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EC5FC 000E93FC*/ PPC::Runtime::ASM::blr();
}