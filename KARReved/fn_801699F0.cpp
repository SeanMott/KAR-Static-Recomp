//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_801699F0(PPC::Runtime::GCContext* context)
{
/*801699F0 001667F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801699F4 001667F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801699F8 001667F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801699FC 001667FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80169A00 00166800*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80169A04 00166804*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80169A08 00166808*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80169A0C 0016680C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80169A10, 0x80169A10) //this is a jump label
/*80169A10 00166810*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80169A14 00166814*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80169A18 00166818*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80169A1C 0016681C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80169A20 00166820*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa84, context->r30));
/*80169A24 00166824*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80169A28 00166828*/ PPC::Runtime::ASM::beq(.L_80169A34);
/*80169A2C 0016682C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80169A30 00166830*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa84, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80169A34, 0x80169A34) //this is a jump label
/*80169A34 00166834*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80169A38 00166838*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*80169A3C 0016683C*/ PPC::Runtime::ASM::blt(.L_80169A10);
/*80169A40 00166840*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80169A44 00166844*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80169A48 00166848*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80169A4C 0016684C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80169A50 00166850*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80169A54 00166854*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80169A58 00166858*/ PPC::Runtime::ASM::blr();
}