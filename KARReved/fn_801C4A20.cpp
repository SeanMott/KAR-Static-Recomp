//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801C45C0.hpp"
#include "fn_801C19C8.hpp"



void fn_801C4A20(PPC::Runtime::GCContext* context)
{
/*801C4A20 001C1820*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C4A24 001C1824*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C4A28 001C1828*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4A2C 001C182C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4A30 001C1830*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C4A34 001C1834*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801C4A38 001C1838*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C4A3C 001C183C*/ PPC::Runtime::ASM::beq(.L_801C4A5C);
/*801C4A40 001C1840*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4A44 001C1844*/ PPC::Runtime::ASM::bl(fn_801C45C0);
/*801C4A48 001C1848*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4A4C 001C184C*/ PPC::Runtime::ASM::bl(fn_801C19C8);
/*801C4A50 001C1850*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C4A54 001C1854*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*801C4A58 001C1858*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C4A5C, 0x801C4A5C) //this is a jump label
/*801C4A5C 001C185C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4A60 001C1860*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4A64 001C1864*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C4A68 001C1868*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C4A6C 001C186C*/ PPC::Runtime::ASM::blr();
}