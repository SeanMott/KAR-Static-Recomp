//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSRegisterVersion.hpp"
#include "fn___AI_set_stream_sample_rate.hpp"
#include "fn_AISetDSPSampleRate.hpp"
#include "fn___AIDHandler.hpp"
#include "fn___AIDHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSUnmaskInterrupts.hpp"
#include "fn___AISHandler.hpp"
#include "fn___AISHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSUnmaskInterrupts.hpp"



void fn_AIInit(PPC::Runtime::GCContext* context)
{
/*803DFA68 003DC868*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DFA6C 003DC86C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DFA70 003DC870*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803DFA74 003DC874*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DFA78 003DC878*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803DFA7C 003DC87C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803DFA80 003DC880*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDFD0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFA84 003DC884*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*803DFA88 003DC888*/ PPC::Runtime::ASM::beq(.L_803DFBBC);
/*803DFA8C 003DC88C*/ PPC::Runtime::ASM::lwz(context->r3, StructWithStructs_18 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFA90 003DC890*/ PPC::Runtime::ASM::bl(OSRegisterVersion);
/*803DFA94 003DC894*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803DFA98 003DC898*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r3));
/*803DFA9C 003DC89C*/ PPC::Runtime::ASM::lis(context->r3, 0x431c);
/*803DFAA0 003DC8A0*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*803DFAA4 003DC8A4*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 2);
/*803DFAA8 003DC8A8*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x217d);
/*803DFAAC 003DC8AC*/ PPC::Runtime::ASM::mulhwu(context->r0, context->r3, context->r0);
/*803DFAB0 003DC8B0*/ PPC::Runtime::ASM::srwi(context->r9, context->r0, 15);
/*803DFAB4 003DC8B4*/ PPC::Runtime::ASM::subi(context->r5, context->r4, 0x5bd8);
/*803DFAB8 003DC8B8*/ PPC::Runtime::ASM::subi(context->r3, context->r4, 0x5bf0);
/*803DFABC 003DC8BC*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x9e8);
/*803DFAC0 003DC8C0*/ PPC::Runtime::ASM::lis(context->r4, 0x1062);
/*803DFAC4 003DC8C4*/ PPC::Runtime::ASM::mullw(context->r7, context->r9, context->r5);
/*803DFAC8 003DC8C8*/ PPC::Runtime::ASM::addi(context->r10, context->r4, 0x4dd3);
/*803DFACC 003DC8CC*/ PPC::Runtime::ASM::mullw(context->r5, context->r9, context->r3);
/*803DFAD0 003DC8D0*/ PPC::Runtime::ASM::mullw(context->r4, context->r9, context->r0);
/*803DFAD4 003DC8D4*/ PPC::Runtime::ASM::mulli(context->r8, context->r9, 0x7b24);
/*803DFAD8 003DC8D8*/ PPC::Runtime::ASM::mulli(context->r3, context->r9, 0xbb8);
/*803DFADC 003DC8DC*/ PPC::Runtime::ASM::mulhwu(context->r8, context->r10, context->r8);
/*803DFAE0 003DC8E0*/ PPC::Runtime::ASM::mulhwu(context->r7, context->r10, context->r7);
/*803DFAE4 003DC8E4*/ PPC::Runtime::ASM::mulhwu(context->r5, context->r10, context->r5);
/*803DFAE8 003DC8E8*/ PPC::Runtime::ASM::mulhwu(context->r4, context->r10, context->r4);
/*803DFAEC 003DC8EC*/ PPC::Runtime::ASM::mulhwu(context->r3, context->r10, context->r3);
/*803DFAF0 003DC8F0*/ PPC::Runtime::ASM::srwi(context->r8, context->r8, 9);
/*803DFAF4 003DC8F4*/ PPC::Runtime::ASM::srwi(context->r7, context->r7, 9);
/*803DFAF8 003DC8F8*/ PPC::Runtime::ASM::stw(context->r8, STRUCT_BYTE4_COUNT_1805DDFDC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFAFC 003DC8FC*/ PPC::Runtime::ASM::srwi(context->r5, context->r5, 9);
/*803DFB00 003DC900*/ PPC::Runtime::ASM::srwi(context->r4, context->r4, 9);
/*803DFB04 003DC904*/ PPC::Runtime::ASM::stw(context->r7, STRUCT_BYTE4_COUNT_1805DDFE4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB08 003DC908*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803DFB0C 003DC90C*/ PPC::Runtime::ASM::srwi(context->r3, context->r3, 9);
/*803DFB10 003DC910*/ PPC::Runtime::ASM::stw(context->r5, STRUCT_BYTE4_COUNT_1805DDFEC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB14 003DC914*/ PPC::Runtime::ASM::lis(context->r6, 0xcc00);
/*803DFB18 003DC918*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DDFFC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB1C 003DC91C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803DFB20 003DC920*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c00, context->r6));
/*803DFB24 003DC924*/ PPC::Runtime::ASM::stw(context->r4, STRUCT_BYTE4_COUNT_1805DDFF4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB28 003DC928*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 27, 25);
/*803DFB2C 003DC92C*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x20);
/*803DFB30 003DC930*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFD8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB34 003DC934*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB38 003DC938*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB3C 003DC93C*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFF0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB40 003DC940*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFF8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB44 003DC944*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c04, context->r6));
/*803DFB48 003DC948*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c00, context->r6));
/*803DFB4C 003DC94C*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r5, 0, 24, 15);
/*803DFB50 003DC950*/ PPC::Runtime::ASM::nop();
/*803DFB54 003DC954*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c04, context->r6));
/*803DFB58 003DC958*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c04, context->r6));
/*803DFB5C 003DC95C*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r0, 8);
/*803DFB60 003DC960*/ PPC::Runtime::ASM::nop();
/*803DFB64 003DC964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c04, context->r6));
/*803DFB68 003DC968*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c0c, context->r6));
/*803DFB6C 003DC96C*/ PPC::Runtime::ASM::bl(fn___AI_set_stream_sample_rate);
/*803DFB70 003DC970*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803DFB74 003DC974*/ PPC::Runtime::ASM::bl(fn_AISetDSPSampleRate);
/*803DFB78 003DC978*/ PPC::Runtime::ASM::lis(context->r3, fn___AIDHandler @ Get_MemoryOffset_HighBit);
/*803DFB7C 003DC97C*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB80 003DC980*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn___AIDHandler @ Get_MemoryOffset_LowBit);
/*803DFB84 003DC984*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DDFC4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB88 003DC988*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803DFB8C 003DC98C*/ PPC::Runtime::ASM::stw(context->r30, STRUCT_BYTE4_COUNT_1805DDFC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFB90 003DC990*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803DFB94 003DC994*/ PPC::Runtime::ASM::lis(context->r3, 0x400);
/*803DFB98 003DC998*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803DFB9C 003DC99C*/ PPC::Runtime::ASM::lis(context->r3, fn___AISHandler @ Get_MemoryOffset_HighBit);
/*803DFBA0 003DC9A0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn___AISHandler @ Get_MemoryOffset_LowBit);
/*803DFBA4 003DC9A4*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*803DFBA8 003DC9A8*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803DFBAC 003DC9AC*/ PPC::Runtime::ASM::lis(context->r3, 0x80);
/*803DFBB0 003DC9B0*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803DFBB4 003DC9B4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803DFBB8 003DC9B8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDFD0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803DFBBC, 0x803DFBBC) //this is a jump label
/*803DFBBC 003DC9BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DFBC0 003DC9C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DFBC4 003DC9C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803DFBC8 003DC9C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803DFBCC 003DC9CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DFBD0 003DC9D0*/ PPC::Runtime::ASM::blr();
}