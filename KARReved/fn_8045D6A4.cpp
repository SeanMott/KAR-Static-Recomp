//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8045D6A4(PPC::Runtime::GCContext* context)
{
/*8045D6A4 0045A4A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8045D6A8 0045A4A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045D6AC 0045A4AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045D6B0 0045A4B0*/ PPC::Runtime::ASM::lwz(context->r12, StructWithFuncPtrs_11 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8045D6B4 0045A4B4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8045D6B8 0045A4B8*/ PPC::Runtime::ASM::bctrl();
/*8045D6BC 0045A4BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045D6C0 0045A4C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045D6C4 0045A4C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045D6C8 0045A4C8*/ PPC::Runtime::ASM::blr();
}