//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_80048B10.hpp"
#include "fn_80048B78.hpp"
#include "fn_80048BAC.hpp"
#include "fn_80048BE4.hpp"
#include "fn_80048C2C.hpp"
#include "fn_80048C64.hpp"
#include "fn_80048C9C.hpp"
#include "fn_80048CD4.hpp"
#include "fn_80048D1C.hpp"
#include "fn_80048D54.hpp"
#include "fn_80048D8C.hpp"
#include "fn_80048DC0.hpp"
#include "fn_80048DF8.hpp"
#include "fn_80048E30.hpp"
#include "fn_80048E78.hpp"
#include "fn_80048EB0.hpp"
#include "fn_80048EE8.hpp"
#include "fn_80048F30.hpp"
#include "fn_80048F68.hpp"
#include "fn_80048F98.hpp"
#include "fn_80048FD0.hpp"
#include "fn_80049008.hpp"
#include "fn_80049040.hpp"
#include "fn_80049070.hpp"
#include "fn_800490A8.hpp"
#include "fn_800490D0.hpp"
#include "fn_800490F8.hpp"
#include "fn_80049120.hpp"
#include "fn_80049140.hpp"



void fn_FuncWithAJumpTable_11(PPC::Runtime::GCContext* context)
{
/*8004788C 0004468C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80047890 00044690*/ PPC::Runtime::ASM::mflr(context->r0);
/*80047894 00044694*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80047898 00044698*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8004789C 0004469C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800478A0 000446A0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800478A4 000446A4*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800478A8 000446A8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800478AC 000446AC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800478B0 000446B0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb, context->r3));
/*800478B4 000446B4*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*800478B8 000446B8*/ PPC::Runtime::ASM::beq(.L_800478C8);
/*800478BC 000446BC*/ PPC::Runtime::ASM::cmpwi(context->r30, 0xa);
/*800478C0 000446C0*/ PPC::Runtime::ASM::bne(.L_800478C8);
/*800478C4 000446C4*/ PPC::Runtime::ASM::li(context->r30, 0x10);
RUNTIME_PPC_JUMP_LABEL(.L_800478C8, 0x800478C8) //this is a jump label
/*800478C8 000446C8*/ PPC::Runtime::ASM::stb(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r31));
/*800478CC 000446CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r31));
/*800478D0 000446D0*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*800478D4 000446D4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1c);
/*800478D8 000446D8*/ PPC::Runtime::ASM::bgt(.L_800479DC);
/*800478DC 000446DC*/ PPC::Runtime::ASM::lis(context->r3, FuncWithAJumpTable_11_JumpTable_80496F48 @ Get_MemoryOffset_HighBit);
/*800478E0 000446E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800478E4 000446E4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, FuncWithAJumpTable_11_JumpTable_80496F48 @ Get_MemoryOffset_LowBit);
/*800478E8 000446E8*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800478EC 000446EC*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800478F0 000446F0*/ PPC::Runtime::ASM::bctr();
/*800478F4 000446F4*/ PPC::Runtime::ASM::bl(fn_80048B10);
/*800478F8 000446F8*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800478FC 000446FC*/ PPC::Runtime::ASM::bl(fn_80048B78);
/*80047900 00044700*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047904 00044704*/ PPC::Runtime::ASM::bl(fn_80048BAC);
/*80047908 00044708*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004790C 0004470C*/ PPC::Runtime::ASM::bl(fn_80048BE4);
/*80047910 00044710*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047914 00044714*/ PPC::Runtime::ASM::bl(fn_80048C2C);
/*80047918 00044718*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004791C 0004471C*/ PPC::Runtime::ASM::bl(fn_80048C64);
/*80047920 00044720*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047924 00044724*/ PPC::Runtime::ASM::bl(fn_80048C9C);
/*80047928 00044728*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004792C 0004472C*/ PPC::Runtime::ASM::bl(fn_80048CD4);
/*80047930 00044730*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047934 00044734*/ PPC::Runtime::ASM::bl(fn_80048D1C);
/*80047938 00044738*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004793C 0004473C*/ PPC::Runtime::ASM::bl(fn_80048D54);
/*80047940 00044740*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047944 00044744*/ PPC::Runtime::ASM::bl(fn_80048D8C);
/*80047948 00044748*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004794C 0004474C*/ PPC::Runtime::ASM::bl(fn_80048DC0);
/*80047950 00044750*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047954 00044754*/ PPC::Runtime::ASM::bl(fn_80048DF8);
/*80047958 00044758*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004795C 0004475C*/ PPC::Runtime::ASM::bl(fn_80048E30);
/*80047960 00044760*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047964 00044764*/ PPC::Runtime::ASM::bl(fn_80048E78);
/*80047968 00044768*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004796C 0004476C*/ PPC::Runtime::ASM::bl(fn_80048EB0);
/*80047970 00044770*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047974 00044774*/ PPC::Runtime::ASM::bl(fn_80048EE8);
/*80047978 00044778*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004797C 0004477C*/ PPC::Runtime::ASM::bl(fn_80048F30);
/*80047980 00044780*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047984 00044784*/ PPC::Runtime::ASM::bl(fn_80048F68);
/*80047988 00044788*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004798C 0004478C*/ PPC::Runtime::ASM::bl(fn_80048F98);
/*80047990 00044790*/ PPC::Runtime::ASM::b(.L_800479F0);
/*80047994 00044794*/ PPC::Runtime::ASM::bl(fn_80048FD0);
/*80047998 00044798*/ PPC::Runtime::ASM::b(.L_800479F0);
/*8004799C 0004479C*/ PPC::Runtime::ASM::bl(fn_80049008);
/*800479A0 000447A0*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479A4 000447A4*/ PPC::Runtime::ASM::bl(fn_80049040);
/*800479A8 000447A8*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479AC 000447AC*/ PPC::Runtime::ASM::bl(fn_80049070);
/*800479B0 000447B0*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479B4 000447B4*/ PPC::Runtime::ASM::bl(fn_800490A8);
/*800479B8 000447B8*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479BC 000447BC*/ PPC::Runtime::ASM::bl(fn_800490D0);
/*800479C0 000447C0*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479C4 000447C4*/ PPC::Runtime::ASM::bl(fn_800490F8);
/*800479C8 000447C8*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479CC 000447CC*/ PPC::Runtime::ASM::bl(fn_80049120);
/*800479D0 000447D0*/ PPC::Runtime::ASM::b(.L_800479F0);
/*800479D4 000447D4*/ PPC::Runtime::ASM::bl(fn_80049140);
/*800479D8 000447D8*/ PPC::Runtime::ASM::b(.L_800479F0);
RUNTIME_PPC_JUMP_LABEL(.L_800479DC, 0x800479DC) //this is a jump label
/*800479DC 000447DC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_157 @ Get_MemoryOffset_HighBit);
/*800479E0 000447E0*/ PPC::Runtime::ASM::li(context->r4, 0xc5);
/*800479E4 000447E4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_157 @ Get_MemoryOffset_LowBit);
/*800479E8 000447E8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51B0 @ Get_MemoryOffset_SDA21);
/*800479EC 000447EC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800479F0, 0x800479F0) //this is a jump label
/*800479F0 000447F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800479F4 000447F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800479F8 000447F8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800479FC 000447FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80047A00 00044800*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80047A04 00044804*/ PPC::Runtime::ASM::blr();
}