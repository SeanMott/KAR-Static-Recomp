//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E1200.hpp"
#include "fn_801E0DE8.hpp"



void fn_801E150C(PPC::Runtime::GCContext* context)
{
/*801E150C 001DE30C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E1510 001DE310*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E1514 001DE314*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E1518 001DE318*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E151C 001DE31C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E1520 001DE320*/ PPC::Runtime::ASM::bl(fn_801E1200);
/*801E1524 001DE324*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801E1528 001DE328*/ PPC::Runtime::ASM::bne(.L_801E1540);
/*801E152C 001DE32C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/* 801E1530 001DE330  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801E1534 001DE334*/ PPC::Runtime::ASM::beq(.L_801E1540);
/*801E1538 001DE338*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E153C 001DE33C*/ PPC::Runtime::ASM::bl(fn_801E0DE8);
RUNTIME_PPC_JUMP_LABEL(.L_801E1540, 0x801E1540) //this is a jump label
/*801E1540 001DE340*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E1544 001DE344*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E1548 001DE348*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E154C 001DE34C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E1550 001DE350*/ PPC::Runtime::ASM::blr();
}