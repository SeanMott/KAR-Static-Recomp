//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245F70.hpp"
#include "fn_802460D4.hpp"
#include "fn_8024625C.hpp"



void fn_80221D78(PPC::Runtime::GCContext* context)
{
/*80221D78 0021EB78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80221D7C 0021EB7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80221D80 0021EB80*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2860 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80221D84 0021EB84*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80221D88 0021EB88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80221D8C 0021EB8C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2864 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80221D90 0021EB90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80221D94 0021EB94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80221D98 0021EB98*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xac);
/*80221D9C 0021EB9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*80221DA0 0021EBA0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xd0);
/*80221DA4 0021EBA4*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0xdc);
/*80221DA8 0021EBA8*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*80221DAC 0021EBAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*80221DB0 0021EBB0*/ PPC::Runtime::ASM::bl(fn_802460D4);
/*80221DB4 0021EBB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*80221DB8 0021EBB8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xac);
/*80221DBC 0021EBBC*/ PPC::Runtime::ASM::bl(fn_8024625C);
/*80221DC0 0021EBC0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*80221DC4 0021EBC4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80221DC8 0021EBC8*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*80221DCC 0021EBCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*80221DD0 0021EBD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r3));
/*80221DD4 0021EBD4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80221DD8 0021EBD8*/ PPC::Runtime::ASM::bne(.L_80221DEC);
/*80221DDC 0021EBDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x170, context->r3));
/*80221DE0 0021EBE0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80221DE4 0021EBE4*/ PPC::Runtime::ASM::bne(.L_80221DEC);
/*80221DE8 0021EBE8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80221DEC, 0x80221DEC) //this is a jump label
/*80221DEC 0021EBEC*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*80221DF0 0021EBF0*/ PPC::Runtime::ASM::bne(.L_80221E04);
/*80221DF4 0021EBF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r3));
/*80221DF8 0021EBF8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80221DFC 0021EBFC*/ PPC::Runtime::ASM::bne(.L_80221E04);
/*80221E00 0021EC00*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80221E04, 0x80221E04) //this is a jump label
/*80221E04 0021EC04*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*80221E08 0021EC08*/ PPC::Runtime::ASM::beq(.L_80221E1C);
/*80221E0C 0021EC0C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b5, context->r31));
/*80221E10 0021EC10*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80221E14 0021EC14*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*80221E18 0021EC18*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b5, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80221E1C, 0x80221E1C) //this is a jump label
/*80221E1C 0021EC1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80221E20 0021EC20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80221E24 0021EC24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80221E28 0021EC28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80221E2C 0021EC2C*/ PPC::Runtime::ASM::blr();
}