//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8002D09C(PPC::Runtime::GCContext* context)
{
/*8002D09C 00029E9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8002D0A0 00029EA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8002D0A4 00029EA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8002D0A8 00029EA8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8002D0AC 00029EAC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8002D0B0 00029EB0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cf, context->r3));
/*8002D0B4 00029EB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8002D0B8 00029EB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8002D0BC 00029EBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8002D0C0 00029EC0*/ PPC::Runtime::ASM::blr();
}