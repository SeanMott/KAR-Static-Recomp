//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSRegisterVersion.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn___ARHandler.hpp"
#include "fn___ARHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSUnmaskInterrupts.hpp"
#include "fn___ARChecksize.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_ARInit(PPC::Runtime::GCContext* context)
{
/*803E0148 003DCF48*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E014C 003DCF4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E0150 003DCF50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E0154 003DCF54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E0158 003DCF58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E015C 003DCF5C*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803E0160 003DCF60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E0164 003DCF64*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803E0168 003DCF68*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE01C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E016C 003DCF6C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*803E0170 003DCF70*/ PPC::Runtime::ASM::bne(.L_803E017C);
/*803E0174 003DCF74*/ PPC::Runtime::ASM::li(context->r3, 0x4000);
/*803E0178 003DCF78*/ PPC::Runtime::ASM::b(.L_803E01F0);
RUNTIME_PPC_JUMP_LABEL(.L_803E017C, 0x803E017C) //this is a jump label
/*803E017C 003DCF7C*/ PPC::Runtime::ASM::lwz(context->r3, StructWithStructs_21 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E0180 003DCF80*/ PPC::Runtime::ASM::bl(OSRegisterVersion);
/*803E0184 003DCF84*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E0188 003DCF88*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E018C 003DCF8C*/ PPC::Runtime::ASM::lis(context->r4, fn___ARHandler @ Get_MemoryOffset_HighBit);
/*803E0190 003DCF90*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE000 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E0194 003DCF94*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E0198 003DCF98*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn___ARHandler @ Get_MemoryOffset_LowBit);
/*803E019C 003DCF9C*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*803E01A0 003DCFA0*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803E01A4 003DCFA4*/ PPC::Runtime::ASM::lis(context->r3, 0x200);
/*803E01A8 003DCFA8*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803E01AC 003DCFAC*/ PPC::Runtime::ASM::li(context->r0, 0x4000);
/*803E01B0 003DCFB0*/ PPC::Runtime::ASM::stw(context->r30, STRUCT_BYTE4_COUNT_1805DE014 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E01B4 003DCFB4*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803E01B8 003DCFB8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE010 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E01BC 003DCFBC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x5000);
/*803E01C0 003DCFC0*/ PPC::Runtime::ASM::stw(context->r29, STRUCT_BYTE4_COUNT_1805DE018 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E01C4 003DCFC4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r4));
/*803E01C8 003DCFC8*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x501a, context->r3));
/*803E01CC 003DCFCC*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r0, 8);
/*803E01D0 003DCFD0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 24, 31);
/*803E01D4 003DCFD4*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r4));
/*803E01D8 003DCFD8*/ PPC::Runtime::ASM::bl(fn___ARChecksize);
/*803E01DC 003DCFDC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803E01E0 003DCFE0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE01C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E01E4 003DCFE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E01E8 003DCFE8*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E01EC 003DCFEC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE010 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803E01F0, 0x803E01F0) //this is a jump label
/*803E01F0 003DCFF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E01F4 003DCFF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E01F8 003DCFF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E01FC 003DCFFC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E0200 003DD000*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E0204 003DD004*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E0208 003DD008*/ PPC::Runtime::ASM::blr();
}