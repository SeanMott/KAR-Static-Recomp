//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D79C0(PPC::Runtime::GCContext* context)
{
/*800D79C0 000D47C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D79C4 000D47C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D79C8 000D47C8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800D79CC 000D47CC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800D79D0 000D47D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D79D4 000D47D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800D79D8 000D47D8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800D79DC 000D47DC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D79E0 000D47E0*/ PPC::Runtime::ASM::ble(.L_800D7A18);
RUNTIME_PPC_JUMP_LABEL(.L_800D79E4, 0x800D79E4) //this is a jump label
/*800D79E4 000D47E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800D79E8 000D47E8*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r6);
/*800D79EC 000D47EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*800D79F0 000D47F0*/ PPC::Runtime::ASM::cmplw(context->r0, context->r4);
/*800D79F4 000D47F4*/ PPC::Runtime::ASM::bne(.L_800D7A0C);
/*800D79F8 000D47F8*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800D79FC 000D47FC*/ PPC::Runtime::ASM::beq(.L_800D7A04);
/*800D7A00 000D4800*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_800D7A04, 0x800D7A04) //this is a jump label
/*800D7A04 000D4804*/ PPC::Runtime::ASM::mr(context->r3, context->r8);
/*800D7A08 000D4808*/ PPC::Runtime::ASM::b(.L_800D7A30);
RUNTIME_PPC_JUMP_LABEL(.L_800D7A0C, 0x800D7A0C) //this is a jump label
/*800D7A0C 000D480C*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x140);
/*800D7A10 000D4810*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x1);
/*800D7A14 000D4814*/ PPC::Runtime::ASM::bdnz(.L_800D79E4);
RUNTIME_PPC_JUMP_LABEL(.L_800D7A18, 0x800D7A18) //this is a jump label
/*800D7A18 000D4818*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_922 @ Get_MemoryOffset_HighBit);
/*800D7A1C 000D481C*/ PPC::Runtime::ASM::li(context->r4, 0x34e);
/*800D7A20 000D4820*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_922 @ Get_MemoryOffset_LowBit);
/*800D7A24 000D4824*/ PPC::Runtime::ASM::li(context->r5, lbl_805D60B0 @ Get_MemoryOffset_SDA21);
/*800D7A28 000D4828*/ PPC::Runtime::ASM::bl(fn___assert);
/*800D7A2C 000D482C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D7A30, 0x800D7A30) //this is a jump label
/*800D7A30 000D4830*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D7A34 000D4834*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D7A38 000D4838*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D7A3C 000D483C*/ PPC::Runtime::ASM::blr();
}