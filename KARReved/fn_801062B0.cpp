//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_801062B0(PPC::Runtime::GCContext* context)
{
/*801062B0 001030B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801062B4 001030B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801062B8 001030B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801062BC 001030BC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801062C0 001030C0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r5));
/*801062C4 001030C4*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*801062C8 001030C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r5));
/*801062CC 001030CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r5));
/*801062D0 001030D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801062D4 001030D4*/ PPC::Runtime::ASM::bgt(.L_80106304);
/*801062D8 001030D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801062DC 001030DC*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801062E0 001030E0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFA38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801062E4 001030E4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801062E8 001030E8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801062EC 001030EC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801062F0 001030F0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFA3C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801062F4 001030F4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*801062F8 001030F8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r6));
/*801062FC 001030FC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80106300 00103100*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_80106304, 0x80106304) //this is a jump label
/*80106304 00103104*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80106308 00103108*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010630C 0010310C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80106310 00103110*/ PPC::Runtime::ASM::blr();
}