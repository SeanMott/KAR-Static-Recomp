//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetTevColor(PPC::Runtime::GCContext* context)
{
/*803CED38 003CBB38*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r4));
/*803CED3C 003CBB3C*/ PPC::Runtime::ASM::slwi(context->r8, context->r3, 1);
/*803CED40 003CBB40*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CED44 003CBB44*/ PPC::Runtime::ASM::addi(context->r7, context->r8, 0xe0);
/*803CED48 003CBB48*/ PPC::Runtime::ASM::slwi(context->r9, context->r0, 12);
/*803CED4C 003CBB4C*/ PPC::Runtime::ASM::rlwimi(context->r9, context->r5, 0, 24, 31);
/*803CED50 003CBB50*/ PPC::Runtime::ASM::lbz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803CED54 003CBB54*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r4));
/*803CED58 003CBB58*/ PPC::Runtime::ASM::slwi(context->r7, context->r7, 24);
/*803CED5C 003CBB5C*/ PPC::Runtime::ASM::li(context->r5, 0x61);
/*803CED60 003CBB60*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CED64 003CBB64*/ PPC::Runtime::ASM::lis(context->r4, 0xcc01);
/*803CED68 003CBB68*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CED6C 003CBB6C*/ PPC::Runtime::ASM::rlwimi(context->r7, context->r9, 0, 12, 31);
/*803CED70 003CBB70*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0xe1);
/*803CED74 003CBB74*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CED78 003CBB78*/ PPC::Runtime::ASM::slwi(context->r7, context->r6, 12);
/*803CED7C 003CBB7C*/ PPC::Runtime::ASM::slwi(context->r6, context->r0, 24);
/*803CED80 003CBB80*/ PPC::Runtime::ASM::rlwimi(context->r7, context->r10, 0, 24, 31);
/*803CED84 003CBB84*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CED88 003CBB88*/ PPC::Runtime::ASM::rlwimi(context->r6, context->r7, 0, 12, 31);
/*803CED8C 003CBB8C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CED90 003CBB90*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CED94 003CBB94*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CED98 003CBB98*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CED9C 003CBB9C*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEDA0 003CBBA0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEDA4 003CBBA4*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CEDA8 003CBBA8*/ PPC::Runtime::ASM::blr();
}