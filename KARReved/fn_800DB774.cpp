//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7954.hpp"
#include "fn_800D7AD0.hpp"



void fn_800DB774(PPC::Runtime::GCContext* context)
{
/*800DB774 000D8574*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800DB778 000D8578*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DB77C 000D857C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DB780 000D8580*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*800DB784 000D8584*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*800DB788 000D8588*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800DB78C 000D858C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DB790 000D8590*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800DB794 000D8594*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800DB798 000D8598*/ PPC::Runtime::ASM::lwzx(context->r31, context->r3, context->r0);
/*800DB79C 000D859C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800DB7A0 000D85A0*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
/*800DB7A4 000D85A4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800DB7A8 000D85A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x54);
/*800DB7AC 000D85AC*/ PPC::Runtime::ASM::bl(fn_800D7954);
/*800DB7B0 000D85B0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800DB7B4 000D85B4*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
/*800DB7B8 000D85B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DB7BC 000D85BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800DB7C0 000D85C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DB7C4 000D85C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DB7C8 000D85C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800DB7CC 000D85CC*/ PPC::Runtime::ASM::blr();
}