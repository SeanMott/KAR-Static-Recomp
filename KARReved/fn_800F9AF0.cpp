//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7A40.hpp"
#include "fn_800F7930.hpp"
#include "fn_killWhispy.hpp"



void fn_800F9AF0(PPC::Runtime::GCContext* context)
{
/*800F9AF0 000F68F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F9AF4 000F68F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9AF8 000F68F8*/ PPC::Runtime::ASM::li(context->r5, 0xa);
/*800F9AFC 000F68FC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800F9B00 000F6900*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9B04 000F6904*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9B08 000F6908*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9B0C 000F690C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9B10 000F6910*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800F9B14 000F6914*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9B18 000F6918*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F9B1C 000F691C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1c);
/*800F9B20 000F6920*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r31));
/*800F9B24 000F6924*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800F9B28 000F6928*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F9B2C 000F692C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800F9B30 000F6930*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*800F9B34 000F6934*/ PPC::Runtime::ASM::bl(fn_800D7A40);
/*800F9B38 000F6938*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800F9B3C 000F693C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800F9B40 000F6940*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800F9B44 000F6944*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800F9B48 000F6948*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F9B4C 000F694C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F9B50 000F6950*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F9B54 000F6954*/ PPC::Runtime::ASM::beq(.L_800F9B64);
/*800F9B58 000F6958*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F9B5C 000F695C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F9B60 000F6960*/ PPC::Runtime::ASM::bl(fn_800F7930);
RUNTIME_PPC_JUMP_LABEL(.L_800F9B64, 0x800F9B64) //this is a jump label
/*800F9B64 000F6964*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF890 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F9B68 000F6968*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9B6C 000F696C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF894 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F9B70 000F6970*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F9B74 000F6974*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800F9B78 000F6978*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800F9B7C 000F697C*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*800F9B80 000F6980*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800F9B84 000F6984*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800F9B88 000F6988*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9B8C 000F698C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9B90 000F6990*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9B94 000F6994*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9B98 000F6998*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9B9C 000F699C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F9BA0 000F69A0*/ PPC::Runtime::ASM::blr();
}