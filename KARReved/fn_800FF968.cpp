//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800FFCD0.hpp"
#include "fn_killWhispy.hpp"



void fn_800FF968(PPC::Runtime::GCContext* context)
{
/*800FF968 000FC768*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FF96C 000FC76C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FF970 000FC770*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FF974 000FC774*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FF978 000FC778*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800FF97C 000FC77C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FF980 000FC780*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FF984 000FC784*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FF988 000FC788*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FF98C 000FC78C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FF990 000FC790*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800FF994 000FC794*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*800FF998 000FC798*/ PPC::Runtime::ASM::blt(.L_800FF9F0);
/*800FF99C 000FC79C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*800FF9A0 000FC7A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800FF9A4 000FC7A4*/ PPC::Runtime::ASM::bne(.L_800FF9F0);
/*800FF9A8 000FC7A8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FF9AC 000FC7AC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FF9B0 000FC7B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800FF9B4 000FC7B4*/ PPC::Runtime::ASM::b(.L_800FF9CC);
RUNTIME_PPC_JUMP_LABEL(.L_800FF9B8, 0x800FF9B8) //this is a jump label
/*800FF9B8 000FC7B8*/ PPC::Runtime::ASM::cmpw(context->r5, context->r4);
/*800FF9BC 000FC7BC*/ PPC::Runtime::ASM::bne(.L_800FF9C4);
/*800FF9C0 000FC7C0*/ PPC::Runtime::ASM::b(.L_800FF9EC);
RUNTIME_PPC_JUMP_LABEL(.L_800FF9C4, 0x800FF9C4) //this is a jump label
/*800FF9C4 000FC7C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FF9C8 000FC7C8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FF9CC, 0x800FF9CC) //this is a jump label
/*800FF9CC 000FC7CC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800FF9D0 000FC7D0*/ PPC::Runtime::ASM::bne(.L_800FF9B8);
/*800FF9D4 000FC7D4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1013 @ Get_MemoryOffset_HighBit);
/*800FF9D8 000FC7D8*/ PPC::Runtime::ASM::li(context->r4, 0x96c);
/*800FF9DC 000FC7DC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1013 @ Get_MemoryOffset_LowBit);
/*800FF9E0 000FC7E0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6288 @ Get_MemoryOffset_SDA21);
/*800FF9E4 000FC7E4*/ PPC::Runtime::ASM::bl(fn___assert);
/*800FF9E8 000FC7E8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800FF9EC, 0x800FF9EC) //this is a jump label
/*800FF9EC 000FC7EC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800FF9F0, 0x800FF9F0) //this is a jump label
/*800FF9F0 000FC7F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FF9F4 000FC7F4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FF9F8 000FC7F8*/ PPC::Runtime::ASM::ble(.L_800FFA20);
/*800FF9FC 000FC7FC*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800FFA00 000FC800*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FFA04 000FC804*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FFA08 000FC808*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FFA0C 000FC80C*/ PPC::Runtime::ASM::bgt(.L_800FFA20);
/*800FFA10 000FC810*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*800FFA14 000FC814*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800FFA18 000FC818*/ PPC::Runtime::ASM::beq(.L_800FFA20);
/*800FFA1C 000FC81C*/ PPC::Runtime::ASM::bl(fn_800FFCD0);
RUNTIME_PPC_JUMP_LABEL(.L_800FFA20, 0x800FFA20) //this is a jump label
/*800FFA20 000FC820*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r30));
/* 800FFA24 000FC824  54 60 CF FF */ extrwi. context->r0 , context->r3 , 1 , 24
/*800FFA28 000FC828*/ PPC::Runtime::ASM::beq(.L_800FFAD8);
/*800FFA2C 000FC82C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FFA30 000FC830*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 7, 24, 24);
/*800FFA34 000FC834*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r30));
/*800FFA38 000FC838*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800FFA3C 000FC83C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FFA40 000FC840*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*800FFA44 000FC844*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FFA48 000FC848*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*800FFA4C 000FC84C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FFA50 000FC850*/ PPC::Runtime::ASM::bne(.L_800FFA5C);
/*800FFA54 000FC854*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FFA58 000FC858*/ PPC::Runtime::ASM::b(.L_800FFAAC);
RUNTIME_PPC_JUMP_LABEL(.L_800FFA5C, 0x800FFA5C) //this is a jump label
/*800FFA5C 000FC85C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FFA60 000FC860*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r4));
/*800FFA64 000FC864*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FFA68 000FC868*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800FFA6C 000FC86C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*800FFA70 000FC870*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800FFA74 000FC874*/ PPC::Runtime::ASM::bne(.L_800FFA8C);
/*800FFA78 000FC878*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakupushoutwall." Get_MemoryOffset_HighBit);
/*800FFA7C 000FC87C*/ PPC::Runtime::ASM::li(context->r4, 0xa6);
/*800FFA80 000FC880*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakupushoutwall." Get_MemoryOffset_LowBit);
/*800FFA84 000FC884*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6280 @ Get_MemoryOffset_SDA21);
/*800FFA88 000FC888*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FFA8C, 0x800FFA8C) //this is a jump label
/*800FFA8C 000FC88C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*800FFA90 000FC890*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800FFA94 000FC894*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FFA98 000FC898*/ PPC::Runtime::ASM::fsubs(context->f0, context->f2, context->f0);
/*800FFA9C 000FC89C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*800FFAA0 000FC8A0*/ PPC::Runtime::ASM::bge(.L_800FFAA8);
/*800FFAA4 000FC8A4*/ PPC::Runtime::ASM::b(.L_800FFAAC);
RUNTIME_PPC_JUMP_LABEL(.L_800FFAA8, 0x800FFAA8) //this is a jump label
/*800FFAA8 000FC8A8*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800FFAAC, 0x800FFAAC) //this is a jump label
/*800FFAAC 000FC8AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800FFAB0 000FC8B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800FFAB4 000FC8B4*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF930 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FFAB8 000FC8B8*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*800FFABC 000FC8BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*800FFAC0 000FC8C0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FFAC4 000FC8C4*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FFAC8 000FC8C8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800FFACC 000FC8CC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FFAD0 000FC8D0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r8));
/*800FFAD4 000FC8D4*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_800FFAD8, 0x800FFAD8) //this is a jump label
/*800FFAD8 000FC8D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FFADC 000FC8DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FFAE0 000FC8E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FFAE4 000FC8E4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FFAE8 000FC8E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FFAEC 000FC8EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FFAF0 000FC8F0*/ PPC::Runtime::ASM::blr();
}