//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__begin_critical_region.hpp"
#include "memset.hpp"
#include "fn___pool_free.hpp"
#include "__end_critical_region.hpp"



void fn_free(PPC::Runtime::GCContext* context)
{
/*803AFAC8 003AC8C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803AFACC 003AC8CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803AFAD0 003AC8D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AFAD4 003AC8D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803AFAD8 003AC8D8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803AFADC 003AC8DC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803AFAE0 003AC8E0*/ PPC::Runtime::ASM::bl(__begin_critical_region);
/*803AFAE4 003AC8E4*/ PPC::Runtime::ASM::lbz(context->r0, SkipAddress_54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803AFAE8 003AC8E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803AFAEC 003AC8EC*/ PPC::Runtime::ASM::bne(.L_803AFB0C);
/*803AFAF0 003AC8F0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80569B10 @ Get_MemoryOffset_HighBit);
/*803AFAF4 003AC8F4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803AFAF8 003AC8F8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80569B10 @ Get_MemoryOffset_LowBit);
/*803AFAFC 003AC8FC*/ PPC::Runtime::ASM::li(context->r5, 0x34);
/*803AFB00 003AC900*/ PPC::Runtime::ASM::bl(memset);
/*803AFB04 003AC904*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803AFB08 003AC908*/ PPC::Runtime::ASM::stb(context->r0, SkipAddress_54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803AFB0C, 0x803AFB0C) //this is a jump label
/*803AFB0C 003AC90C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80569B10 @ Get_MemoryOffset_HighBit);
/*803AFB10 003AC910*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*803AFB14 003AC914*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80569B10 @ Get_MemoryOffset_LowBit);
/*803AFB18 003AC918*/ PPC::Runtime::ASM::bl(fn___pool_free);
/*803AFB1C 003AC91C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803AFB20 003AC920*/ PPC::Runtime::ASM::bl(__end_critical_region);
/*803AFB24 003AC924*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803AFB28 003AC928*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803AFB2C 003AC92C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803AFB30 003AC930*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803AFB34 003AC934*/ PPC::Runtime::ASM::blr();
}