//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80064C18.hpp"
#include "fn_80062E5C.hpp"
#include "fn_801F7CBC.hpp"



void fn_801F7D54(PPC::Runtime::GCContext* context)
{
/*801F7D54 001F4B54*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801F7D58 001F4B58*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F7D5C 001F4B5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F7D60 001F4B60*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801F7D64 001F4B64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F7D68 001F4B68*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F7D6C 001F4B6C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x43c);
/*801F7D70 001F4B70*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x738);
/*801F7D74 001F4B74*/ PPC::Runtime::ASM::bl(fn_80064C18);
/*801F7D78 001F4B78*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801F7D7C 001F4B7C*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801F7D80 001F4B80*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E20B4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7D84 001F4B84*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801F7D88 001F4B88*/ PPC::Runtime::ASM::ble(.L_801F7DC8);
/*801F7D8C 001F4B8C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E20B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7D90 001F4B90*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x448);
/*801F7D94 001F4B94*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801F7D98 001F4B98*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801F7D9C 001F4B9C*/ PPC::Runtime::ASM::fdivs(context->f3, context->f0, context->f1);
/*801F7DA0 001F4BA0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F7DA4 001F4BA4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801F7DA8 001F4BA8*/ PPC::Runtime::ASM::fmuls(context->f2, context->f2, context->f3);
/*801F7DAC 001F4BAC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f3);
/*801F7DB0 001F4BB0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f3);
/*801F7DB4 001F4BB4*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801F7DB8 001F4BB8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F7DBC 001F4BBC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801F7DC0 001F4BC0*/ PPC::Runtime::ASM::bl(fn_80062E5C);
/*801F7DC4 001F4BC4*/ PPC::Runtime::ASM::b(.L_801F7DCC);
RUNTIME_PPC_JUMP_LABEL(.L_801F7DC8, 0x801F7DC8) //this is a jump label
/*801F7DC8 001F4BC8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E209C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_801F7DCC, 0x801F7DCC) //this is a jump label
/*801F7DCC 001F4BCC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4c, context->r31));
/*801F7DD0 001F4BD0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801F7DD4 001F4BD4*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*801F7DD8 001F4BD8*/ PPC::Runtime::ASM::bne(.L_801F7DE4);
/*801F7DDC 001F4BDC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E20B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7DE0 001F4BE0*/ PPC::Runtime::ASM::b(.L_801F7DE8);
RUNTIME_PPC_JUMP_LABEL(.L_801F7DE4, 0x801F7DE4) //this is a jump label
/*801F7DE4 001F4BE4*/ PPC::Runtime::ASM::fdivs(context->f2, context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_801F7DE8, 0x801F7DE8) //this is a jump label
/*801F7DE8 001F4BE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801F7DEC 001F4BEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F7DF0 001F4BF0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x108, context->r4));
/*801F7DF4 001F4BF4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r4));
/*801F7DF8 001F4BF8*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f1);
/*801F7DFC 001F4BFC*/ PPC::Runtime::ASM::fmadds(context->f1, context->f2, context->f0, context->f1);
/*801F7E00 001F4C00*/ PPC::Runtime::ASM::bl(fn_801F7CBC);
/*801F7E04 001F4C04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F7E08 001F4C08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F7E0C 001F4C0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F7E10 001F4C10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801F7E14 001F4C14*/ PPC::Runtime::ASM::blr();
}