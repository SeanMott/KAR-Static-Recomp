//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_WObjAmnesia(PPC::Runtime::GCContext* context)
{
/*8041B008 00417E08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8041B00C 00417E0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041B010 00417E10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041B014 00417E14*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE2E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8041B018 00417E18*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*8041B01C 00417E1C*/ PPC::Runtime::ASM::bne(.L_8041B028);
/*8041B020 00417E20*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8041B024 00417E24*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE2E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8041B028, 0x8041B028) //this is a jump label
/*8041B028 00417E28*/ PPC::Runtime::ASM::lis(context->r4, lbl_805041C8 @ Get_MemoryOffset_HighBit);
/*8041B02C 00417E2C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_805041C8 @ Get_MemoryOffset_LowBit);
/*8041B030 00417E30*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8041B034 00417E34*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*8041B038 00417E38*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8041B03C 00417E3C*/ PPC::Runtime::ASM::bctrl();
/*8041B040 00417E40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041B044 00417E44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041B048 00417E48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8041B04C 00417E4C*/ PPC::Runtime::ASM::blr();
}