//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000B2B8(PPC::Runtime::GCContext* context)
{
/*8000B2B8 000080B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000B2BC 000080BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000B2C0 000080C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B2C4 000080C4*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000B2C8 000080C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B2CC 000080CC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x374, context->r3));
/*8000B2D0 000080D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000B2D4 000080D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000B2D8 000080D8*/ PPC::Runtime::ASM::blr();
}