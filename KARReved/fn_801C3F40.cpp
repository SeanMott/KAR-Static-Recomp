//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191980.hpp"
#include "fn_801C3F90.hpp"



void fn_801C3F40(PPC::Runtime::GCContext* context)
{
/*801C3F40 001C0D40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801C3F44 001C0D44*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C3F48 001C0D48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801C3F4C 001C0D4C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801C3F50 001C0D50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801C3F54 001C0D54*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C3F58 001C0D58*/ PPC::Runtime::ASM::bl(fn_80191980);
/*801C3F5C 001C0D5C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C3F60 001C0D60*/ PPC::Runtime::ASM::beq(.L_801C3F78);
/*801C3F64 001C0D64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C3F68 001C0D68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3F6C 001C0D6C*/ PPC::Runtime::ASM::bl(fn_801C3F90);
/*801C3F70 001C0D70*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801C3F74 001C0D74*/ PPC::Runtime::ASM::b(.L_801C3F7C);
RUNTIME_PPC_JUMP_LABEL(.L_801C3F78, 0x801C3F78) //this is a jump label
/*801C3F78 001C0D78*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801C3F7C, 0x801C3F7C) //this is a jump label
/*801C3F7C 001C0D7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801C3F80 001C0D80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801C3F84 001C0D84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C3F88 001C0D88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801C3F8C 001C0D8C*/ PPC::Runtime::ASM::blr();
}