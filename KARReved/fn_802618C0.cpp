//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_802618C0(PPC::Runtime::GCContext* context)
{
/*802618C0 0025E6C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802618C4 0025E6C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802618C8 0025E6C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802618CC 0025E6CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802618D0 0025E6D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802618D4 0025E6D4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802618D8 0025E6D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802618DC 0025E6DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802618E0 0025E6E0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*802618E4 0025E6E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802618E8 0025E6E8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802618EC 0025E6EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*802618F0 0025E6F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802618F4 0025E6F4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802618F8 0025E6F8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*802618FC 0025E6FC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80261900 0025E700*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80261904 0025E704*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80261908 0025E708*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8026190C 0025E70C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80261910 0025E710*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80261914 0025E714*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80261918 0025E718*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8026191C 0025E71C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2FAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80261920 0025E720*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80261924 0025E724*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80261928 0025E728*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2FA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8026192C 0025E72C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80261930 0025E730*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80261934 0025E734*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80261938 0025E738*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8026193C 0025E73C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80261940 0025E740*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80261944 0025E744*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80261948 0025E748*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8026194C 0025E74C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80261950 0025E750*/ PPC::Runtime::ASM::blr();
}