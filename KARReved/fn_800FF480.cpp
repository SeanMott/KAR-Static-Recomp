//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800FF480(PPC::Runtime::GCContext* context)
{
/*800FF480 000FC280*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FF484 000FC284*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FF488 000FC288*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FF48C 000FC28C*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FF490 000FC290*/ PPC::Runtime::ASM::lis(context->r3, 0x6666);
/*800FF494 000FC294*/ PPC::Runtime::ASM::addi(context->r6, context->r3, 0x6667);
/*800FF498 000FC298*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r9));
/*800FF49C 000FC29C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x184, context->r9));
/*800FF4A0 000FC2A0*/ PPC::Runtime::ASM::b(.L_800FF4E0);
RUNTIME_PPC_JUMP_LABEL(.L_800FF4A4, 0x800FF4A4) //this is a jump label
/*800FF4A4 000FC2A4*/ PPC::Runtime::ASM::slwi(context->r3, context->r7, 3);
/*800FF4A8 000FC2A8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x130);
/*800FF4AC 000FC2AC*/ PPC::Runtime::ASM::lwzx(context->r0, context->r9, context->r0);
/*800FF4B0 000FC2B0*/ PPC::Runtime::ASM::cmplw(context->r0, context->r4);
/*800FF4B4 000FC2B4*/ PPC::Runtime::ASM::bne(.L_800FF4C4);
/*800FF4B8 000FC2B8*/ PPC::Runtime::ASM::add(context->r3, context->r9, context->r3);
/*800FF4BC 000FC2BC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r3));
/*800FF4C0 000FC2C0*/ PPC::Runtime::ASM::b(.L_800FF4FC);
RUNTIME_PPC_JUMP_LABEL(.L_800FF4C4, 0x800FF4C4) //this is a jump label
/*800FF4C4 000FC2C4*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x1);
/* 800FF4C8 000FC2C8  7C 06 38 96 */ mulhw context->r0 , context->r6 , context->r7
/*800FF4CC 000FC2CC*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 2);
/*800FF4D0 000FC2D0*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*800FF4D4 000FC2D4*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*800FF4D8 000FC2D8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xa);
/*800FF4DC 000FC2DC*/ PPC::Runtime::ASM::subf(context->r7, context->r0, context->r7);
RUNTIME_PPC_JUMP_LABEL(.L_800FF4E0, 0x800FF4E0) //this is a jump label
/*800FF4E0 000FC2E0*/ PPC::Runtime::ASM::cmpw(context->r7, context->r8);
/*800FF4E4 000FC2E4*/ PPC::Runtime::ASM::bne(.L_800FF4A4);
/*800FF4E8 000FC2E8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1011 @ Get_MemoryOffset_HighBit);
/*800FF4EC 000FC2EC*/ PPC::Runtime::ASM::li(context->r4, 0x15c);
/*800FF4F0 000FC2F0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1011 @ Get_MemoryOffset_LowBit);
/*800FF4F4 000FC2F4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6278 @ Get_MemoryOffset_SDA21);
/*800FF4F8 000FC2F8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FF4FC, 0x800FF4FC) //this is a jump label
/*800FF4FC 000FC2FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FF500 000FC300*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FF504 000FC304*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FF508 000FC308*/ PPC::Runtime::ASM::blr();
}