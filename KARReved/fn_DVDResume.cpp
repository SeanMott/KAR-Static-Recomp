//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "stateReady.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_DVDResume(PPC::Runtime::GCContext* context)
{
/*803C78BC 003C46BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C78C0 003C46C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C78C4 003C46C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803C78C8 003C46C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C78CC 003C46CC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C78D0 003C46D0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C78D4 003C46D4*/ PPC::Runtime::ASM::stw(context->r4, PauseFlag_805DDDB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C78D8 003C46D8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803C78DC 003C46DC*/ PPC::Runtime::ASM::lwz(context->r0, PausingFlag_805DDDB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C78E0 003C46E0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803C78E4 003C46E4*/ PPC::Runtime::ASM::beq(.L_803C78F0);
/*803C78E8 003C46E8*/ PPC::Runtime::ASM::stw(context->r4, PausingFlag_805DDDB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C78EC 003C46EC*/ PPC::Runtime::ASM::bl(stateReady);
RUNTIME_PPC_JUMP_LABEL(.L_803C78F0, 0x803C78F0) //this is a jump label
/*803C78F0 003C46F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803C78F4 003C46F4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C78F8 003C46F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C78FC 003C46FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C7900 003C4700*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803C7904 003C4704*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C7908 003C4708*/ PPC::Runtime::ASM::blr();
}