//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_HSD_JObjSetupMatrixSub.hpp"
#include "fn_PSMTXMultVec.hpp"



void fn_HSD_WObjSetPositionY(PPC::Runtime::GCContext* context)
{
/*8041ACC8 00417AC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041ACCC 00417ACC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041ACD0 00417AD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041ACD4 00417AD4*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041ACD8 00417AD8*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8041ACDC 00417ADC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041ACE0 00417AE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/* 8041ACE4 00417AE4  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8041ACE8 00417AE8*/ PPC::Runtime::ASM::beq(.L_8041AD80);
/*8041ACEC 00417AEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/* 8041ACF0 00417AF0  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8041ACF4 00417AF4*/ PPC::Runtime::ASM::beq(.L_8041AD70);
/*8041ACF8 00417AF8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*8041ACFC 00417AFC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8041AD00 00417B00*/ PPC::Runtime::ASM::beq(.L_8041AD64);
/*8041AD04 00417B04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8041AD08 00417B08*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8041AD0C 00417B0C*/ PPC::Runtime::ASM::beq(.L_8041AD64);
/*8041AD10 00417B10*/ PPC::Runtime::ASM::beq(.L_8041AD54);
/*8041AD14 00417B14*/ PPC::Runtime::ASM::bne(.L_8041AD28);
/*8041AD18 00417B18*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_497 @ Get_MemoryOffset_SDA21);
/*8041AD1C 00417B1C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8041AD20 00417B20*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_496 @ Get_MemoryOffset_SDA21);
/*8041AD24 00417B24*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041AD28, 0x8041AD28) //this is a jump label
/*8041AD28 00417B28*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8041AD2C 00417B2C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8041AD30 00417B30*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8041AD34 00417B34*/ PPC::Runtime::ASM::bne(.L_8041AD44);
/*8041AD38 00417B38*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8041AD3C 00417B3C*/ PPC::Runtime::ASM::beq(.L_8041AD44);
/*8041AD40 00417B40*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8041AD44, 0x8041AD44) //this is a jump label
/*8041AD44 00417B44*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8041AD48 00417B48*/ PPC::Runtime::ASM::beq(.L_8041AD54);
/*8041AD4C 00417B4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041AD50 00417B50*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_8041AD54, 0x8041AD54) //this is a jump label
/*8041AD54 00417B54*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0xc);
/*8041AD58 00417B58*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*8041AD5C 00417B5C*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*8041AD60 00417B60*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
RUNTIME_PPC_JUMP_LABEL(.L_8041AD64, 0x8041AD64) //this is a jump label
/*8041AD64 00417B64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8041AD68 00417B68*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r0, 1);
/*8041AD6C 00417B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8041AD70, 0x8041AD70) //this is a jump label
/*8041AD70 00417B70*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*8041AD74 00417B74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8041AD78 00417B78*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x2);
/*8041AD7C 00417B7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8041AD80, 0x8041AD80) //this is a jump label
/*8041AD80 00417B80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041AD84 00417B84*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041AD88 00417B88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041AD8C 00417B8C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8041AD90 00417B90*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041AD94 00417B94*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041AD98 00417B98*/ PPC::Runtime::ASM::blr();
}