//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A16A8.hpp"



void fn_800A1F08(PPC::Runtime::GCContext* context)
{
/*800A1F08 0009ED08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A1F0C 0009ED0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A1F10 0009ED10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A1F14 0009ED14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A1F18 0009ED18*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A1F1C 0009ED1C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A1F20 0009ED20*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A1F24 0009ED24*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800A1F28 0009ED28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800A1F2C 0009ED2C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800A1F30 0009ED30*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800A1F34 0009ED34*/ PPC::Runtime::ASM::beq(.L_800A1F6C);
/*800A1F38 0009ED38*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800A1F3C 0009ED3C*/ PPC::Runtime::ASM::b(.L_800A1F60);
RUNTIME_PPC_JUMP_LABEL(.L_800A1F40, 0x800A1F40) //this is a jump label
/*800A1F40 0009ED40*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF080 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A1F44 0009ED44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A1F48 0009ED48*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF084 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A1F4C 0009ED4C*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800A1F50 0009ED50*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*800A1F54 0009ED54*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800A1F58 0009ED58*/ PPC::Runtime::ASM::bl(fn_800A16A8);
/*800A1F5C 0009ED5C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A1F60, 0x800A1F60) //this is a jump label
/*800A1F60 0009ED60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800A1F64 0009ED64*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800A1F68 0009ED68*/ PPC::Runtime::ASM::blt(.L_800A1F40);
RUNTIME_PPC_JUMP_LABEL(.L_800A1F6C, 0x800A1F6C) //this is a jump label
/*800A1F6C 0009ED6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A1F70 0009ED70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A1F74 0009ED74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A1F78 0009ED78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A1F7C 0009ED7C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A1F80 0009ED80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A1F84 0009ED84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A1F88 0009ED88*/ PPC::Runtime::ASM::blr();
}