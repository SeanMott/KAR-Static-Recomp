//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B3C10.hpp"



void fn_800B94C8(PPC::Runtime::GCContext* context)
{
/*800B94C8 000B62C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B94CC 000B62CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B94D0 000B62D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B94D4 000B62D4*/ PPC::Runtime::ASM::bl(fn_800B3C10);
/*800B94D8 000B62D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B94DC 000B62DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B94E0 000B62E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B94E4 000B62E4*/ PPC::Runtime::ASM::blr();
}