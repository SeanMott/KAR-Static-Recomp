//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80055AA8.hpp"
#include "fn_800550BC.hpp"



void fn_80115174(PPC::Runtime::GCContext* context)
{
/*80115174 00111F74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80115178 00111F78*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011517C 00111F7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80115180 00111F80*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80115184 00111F84*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80115188 00111F88*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011518C 00111F8C*/ PPC::Runtime::ASM::xoris(context->r4, context->r4, 0x8000);
/*80115190 00111F90*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*80115194 00111F94*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80115198 00111F98*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8011519C 00111F9C*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805DFB50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801151A0 00111FA0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801151A4 00111FA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801151A8 00111FA8*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801151AC 00111FAC*/ PPC::Runtime::ASM::fsubs(context->f1, context->f0, context->f1);
/*801151B0 00111FB0*/ PPC::Runtime::ASM::bl(fn_80055AA8);
/*801151B4 00111FB4*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*801151B8 00111FB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801151BC 00111FBC*/ PPC::Runtime::ASM::li(context->r4, 0x80);
/*801151C0 00111FC0*/ PPC::Runtime::ASM::bl(fn_800550BC);
/*801151C4 00111FC4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801151C8 00111FC8*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*801151CC 00111FCC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801151D0 00111FD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801151D4 00111FD4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801151D8 00111FD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801151DC 00111FDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801151E0 00111FE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801151E4 00111FE4*/ PPC::Runtime::ASM::blr();
}