//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801389D8.hpp"
#include "fn_8013E118.hpp"



void fn_80162CC0(PPC::Runtime::GCContext* context)
{
/*80162CC0 0015FAC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80162CC4 0015FAC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80162CC8 0015FAC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80162CCC 0015FACC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80162CD0 0015FAD0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80162CD4 0015FAD4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80162CD8 0015FAD8*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*80162CDC 0015FADC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x95c, context->r3));
/*80162CE0 0015FAE0*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*80162CE4 0015FAE4*/ PPC::Runtime::ASM::beq(.L_80162D40);
/*80162CE8 0015FAE8*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*80162CEC 0015FAEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r5));
/*80162CF0 0015FAF0*/ PPC::Runtime::ASM::xoris(context->r4, context->r0, 0x8000);
/*80162CF4 0015FAF4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r5));
/*80162CF8 0015FAF8*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*80162CFC 0015FAFC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80162D00 0015FB00*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E09B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80162D04 0015FB04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80162D08 0015FB08*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E09B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80162D0C 0015FB0C*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r5));
/*80162D10 0015FB10*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80162D14 0015FB14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x958, context->r6));
/*80162D18 0015FB18*/ PPC::Runtime::ASM::fsubs(context->f1, context->f0, context->f1);
/*80162D1C 0015FB1C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80162D20 0015FB20*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*80162D24 0015FB24*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*80162D28 0015FB28*/ PPC::Runtime::ASM::lis(context->r3, StructValues_93_1E_To_35 @ Get_MemoryOffset_HighBit);
/*80162D2C 0015FB2C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80162D30 0015FB30*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructValues_93_1E_To_35 @ Get_MemoryOffset_LowBit);
/*80162D34 0015FB34*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80162D38 0015FB38*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*80162D3C 0015FB3C*/ PPC::Runtime::ASM::bl(fn_8013E118);
RUNTIME_PPC_JUMP_LABEL(.L_80162D40, 0x80162D40) //this is a jump label
/*80162D40 0015FB40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80162D44 0015FB44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80162D48 0015FB48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80162D4C 0015FB4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80162D50 0015FB50*/ PPC::Runtime::ASM::blr();
}