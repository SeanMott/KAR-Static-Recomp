//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801388A8.hpp"
#include "fn_8014B1AC.hpp"
#include "fn_8014B1AC.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"
#include "fn_8014AAEC.hpp"



void fn_8014B2C4(PPC::Runtime::GCContext* context)
{
/*8014B2C4 001480C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8014B2C8 001480C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014B2CC 001480CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8014B2D0 001480D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8014B2D4 001480D4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8014B2D8 001480D8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014B2DC 001480DC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8014B2E0 001480E0*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8014B2E4 001480E4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014B2E8 001480E8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x3a8);
/*8014B2EC 001480EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3a8, context->r3));
/*8014B2F0 001480F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014B2F4 001480F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014B2F8 001480F8*/ PPC::Runtime::ASM::bl(fn_801388A8);
/*8014B2FC 001480FC*/ PPC::Runtime::ASM::lis(context->r4, fn_8014B1AC @ Get_MemoryOffset_HighBit);
/*8014B300 00148100*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8014B304 00148104*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8014B308 00148108*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8014B30C 0014810C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8014B1AC @ Get_MemoryOffset_LowBit);
/*8014B310 00148110*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*8014B314 00148114*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0598 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014B318 00148118*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8014B31C 0014811C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8014B320 00148120*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*8014B324 00148124*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8014B328 00148128*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*8014B32C 0014812C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8014B330 00148130*/ PPC::Runtime::ASM::li(context->r4, 0xf);
/*8014B334 00148134*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*8014B338 00148138*/ PPC::Runtime::ASM::stb(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8014B33C 0014813C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8014B340 00148140*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8014B344 00148144*/ PPC::Runtime::ASM::bl(fn_8014AAEC);
/*8014B348 00148148*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*8014B34C 0014814C*/ PPC::Runtime::ASM::bne(.L_8014B360);
/*8014B350 00148150*/ PPC::Runtime::ASM::li(context->r3, lbl_805D66D8 @ Get_MemoryOffset_SDA21);
/*8014B354 00148154*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8014B358 00148158*/ PPC::Runtime::ASM::li(context->r5, lbl_805D66E0 @ Get_MemoryOffset_SDA21);
/*8014B35C 0014815C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8014B360, 0x8014B360) //this is a jump label
/*8014B360 00148160*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8014B364 00148164*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014B368 00148168*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r28));
/*8014B36C 0014816C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r28));
/*8014B370 00148170*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8014B374 00148174*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r28));
/*8014B378 00148178*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*8014B37C 0014817C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8014B380 00148180*/ PPC::Runtime::ASM::bne(.L_8014B3CC);
/*8014B384 00148184*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*8014B388 00148188*/ PPC::Runtime::ASM::beq(.L_8014B3CC);
/*8014B38C 0014818C*/ PPC::Runtime::ASM::bne(.L_8014B3A0);
/*8014B390 00148190*/ PPC::Runtime::ASM::li(context->r3, lbl_805D66D8 @ Get_MemoryOffset_SDA21);
/*8014B394 00148194*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8014B398 00148198*/ PPC::Runtime::ASM::li(context->r5, lbl_805D66E0 @ Get_MemoryOffset_SDA21);
/*8014B39C 0014819C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8014B3A0, 0x8014B3A0) //this is a jump label
/*8014B3A0 001481A0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*8014B3A4 001481A4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8014B3A8 001481A8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8014B3AC 001481AC*/ PPC::Runtime::ASM::bne(.L_8014B3BC);
/*8014B3B0 001481B0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8014B3B4 001481B4*/ PPC::Runtime::ASM::beq(.L_8014B3BC);
/*8014B3B8 001481B8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8014B3BC, 0x8014B3BC) //this is a jump label
/*8014B3BC 001481BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8014B3C0 001481C0*/ PPC::Runtime::ASM::bne(.L_8014B3CC);
/*8014B3C4 001481C4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8014B3C8 001481C8*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8014B3CC, 0x8014B3CC) //this is a jump label
/*8014B3CC 001481CC*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8014B3D0 001481D0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8014B3D4 001481D4*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8014B3D8 001481D8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8014B3DC 001481DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8014B3E0 001481E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8014B3E4 001481E4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014B3E8 001481E8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8014B3EC 001481EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8014B3F0 001481F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014B3F4 001481F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8014B3F8 001481F8*/ PPC::Runtime::ASM::blr();
}