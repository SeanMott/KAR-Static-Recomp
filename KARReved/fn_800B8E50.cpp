//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800B8E50(PPC::Runtime::GCContext* context)
{
/*800B8E50 000B5C50*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*800B8E54 000B5C54*/ PPC::Runtime::ASM::extsb(context->r0, context->r5);
/*800B8E58 000B5C58*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800B8E5C 000B5C5C*/ PPC::Runtime::ASM::bne(.L_800B8E6C);
/*800B8E60 000B5C60*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x1);
/*800B8E64 000B5C64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*800B8E68 000B5C68*/ PPC::Runtime::ASM::b(.L_800B8EBC);
RUNTIME_PPC_JUMP_LABEL(.L_800B8E6C, 0x800B8E6C) //this is a jump label
/*800B8E6C 000B5C6C*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x1);
/*800B8E70 000B5C70*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*800B8E74 000B5C74*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*800B8E78 000B5C78*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x6);
/*800B8E7C 000B5C7C*/ PPC::Runtime::ASM::bne(.L_800B8E88);
/*800B8E80 000B5C80*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800B8E84 000B5C84*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B8E88, 0x800B8E88) //this is a jump label
/*800B8E88 000B5C88*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa5, context->r3));
/*800B8E8C 000B5C8C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*800B8E90 000B5C90*/ PPC::Runtime::ASM::extsb(context->r5, context->r6);
/*800B8E94 000B5C94*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*800B8E98 000B5C98*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*800B8E9C 000B5C9C*/ PPC::Runtime::ASM::bne(.L_800B8EBC);
/*800B8EA0 000B5CA0*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x1);
/*800B8EA4 000B5CA4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa5, context->r3));
/*800B8EA8 000B5CA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa5, context->r3));
/*800B8EAC 000B5CAC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x6);
/*800B8EB0 000B5CB0*/ PPC::Runtime::ASM::bne(.L_800B8EBC);
/*800B8EB4 000B5CB4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800B8EB8 000B5CB8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa5, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B8EBC, 0x800B8EBC) //this is a jump label
/*800B8EBC 000B5CBC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*800B8EC0 000B5CC0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800B8EC4 000B5CC4*/ PPC::Runtime::ASM::extsb(context->r6, context->r0);
/*800B8EC8 000B5CC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800B8ECC 000B5CCC*/ PPC::Runtime::ASM::mulli(context->r6, context->r6, 0xc);
/*800B8ED0 000B5CD0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r6);
/*800B8ED4 000B5CD4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*800B8ED8 000B5CD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r3));
/*800B8EDC 000B5CDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800B8EE0 000B5CE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r3));
/*800B8EE4 000B5CE4*/ PPC::Runtime::ASM::blr();
}