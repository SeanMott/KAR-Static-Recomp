//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hwOff.hpp"



void fn_80220F20(PPC::Runtime::GCContext* context)
{
/*80220F20 0021DD20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80220F24 0021DD24*/ PPC::Runtime::ASM::mflr(context->r0);
/*80220F28 0021DD28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80220F2C 0021DD2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80220F30 0021DD30*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80220F34 0021DD34*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80220F38 0021DD38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x108, context->r3));
/*80220F3C 0021DD3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80220F40 0021DD40*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 6);
/*80220F44 0021DD44*/ PPC::Runtime::ASM::bl(fn_hwOff);
/*80220F48 0021DD48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80220F4C 0021DD4C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*80220F50 0021DD50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80220F54 0021DD54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80220F58 0021DD58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80220F5C 0021DD5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80220F60 0021DD60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80220F64 0021DD64*/ PPC::Runtime::ASM::blr();
}