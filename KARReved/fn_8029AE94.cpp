//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029AE94(PPC::Runtime::GCContext* context)
{
/*8029AE94 00297C94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029AE98 00297C98*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029AE9C 00297C9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AEA0 00297CA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AEA4 00297CA4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AEA8 00297CA8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029AEAC 00297CAC*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029AEB0 00297CB0*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029AEB4 00297CB4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AEB8 00297CB8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AEBC 00297CBC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029AEC0 00297CC0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AEC4 00297CC4*/ PPC::Runtime::ASM::bctrl();
/*8029AEC8 00297CC8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029AECC 00297CCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AED0 00297CD0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AED4 00297CD4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029AED8 00297CD8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AEDC 00297CDC*/ PPC::Runtime::ASM::bctrl();
/*8029AEE0 00297CE0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029AEE4 00297CE4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029AEE8 00297CE8*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*8029AEEC 00297CEC*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029AEF0 00297CF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AEF4 00297CF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AEF8 00297CF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AEFC 00297CFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029AF00 00297D00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029AF04 00297D04*/ PPC::Runtime::ASM::blr();
}