//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80320208(PPC::Runtime::GCContext* context)
{
/*80320208 0031D008*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8032020C 0031D00C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80320210 0031D010*/ PPC::Runtime::ASM::lis(context->r4, lbl_804E1588 @ Get_MemoryOffset_HighBit);
/*80320214 0031D014*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80320218 0031D018*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8032021C 0031D01C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80320220 0031D020*/ PPC::Runtime::ASM::lwzu(context->r6, lbl_804E1588 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*80320224 0031D024*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80320228 0031D028*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8032022C 0031D02C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80320230 0031D030*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80320234 0031D034*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80320238 0031D038*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8032023C 0031D03C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80320240 0031D040*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80320244 0031D044*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80320248 0031D048*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*8032024C 0031D04C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80320250 0031D050*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80320254 0031D054*/ PPC::Runtime::ASM::b(.L_8032026C);
RUNTIME_PPC_JUMP_LABEL(.L_80320258, 0x80320258) //this is a jump label
/*80320258 0031D058*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8032025C 0031D05C*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*80320260 0031D060*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*80320264 0031D064*/ PPC::Runtime::ASM::nop();
/*80320268 0031D068*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8032026C, 0x8032026C) //this is a jump label
/*8032026C 0031D06C*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*80320270 0031D070*/ PPC::Runtime::ASM::bne(.L_80320258);
/*80320274 0031D074*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80320278 0031D078*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8032027C 0031D07C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80320280 0031D080*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80320284 0031D084*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80320288 0031D088*/ PPC::Runtime::ASM::blr();
}