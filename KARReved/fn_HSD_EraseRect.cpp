//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_GXInitTexObj.hpp"
#include "fn_GXLoadTexObj.hpp"
#include "fn_GXSetNumTexGens.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetNumTevStages.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOp.hpp"
#include "fn_GXSetZTexture.hpp"
#include "fn_GXSetNumTexGens.hpp"
#include "fn_GXSetNumTevStages.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOp.hpp"
#include "fn_GXSetCullMode.hpp"
#include "fn_GXSetAlphaCompare.hpp"
#include "fn_GXSetZCompLoc.hpp"
#include "fn_GXSetZMode.hpp"
#include "fn_GXSetBlendMode.hpp"
#include "fn_GXSetColorUpdate.hpp"
#include "fn_GXSetAlphaUpdate.hpp"
#include "fn_GXSetNumChans.hpp"
#include "fn_GXSetChanCtrl.hpp"
#include "fn_GXClearVtxDesc.hpp"
#include "fn_GXSetVtxAttrFmt.hpp"
#include "fn_GXSetVtxAttrFmt.hpp"
#include "fn_GXSetVtxAttrFmt.hpp"
#include "fn_GXLoadPosMtxImm.hpp"
#include "fn_GXSetCurrentMtx.hpp"
#include "fn_GXSetVtxDesc.hpp"
#include "fn_GXSetVtxDesc.hpp"
#include "fn_GXSetVtxDesc.hpp"
#include "fn_GXBegin.hpp"
#include "fn_GXSetZTexture.hpp"
#include "fn_HSD_StateInvalidate.hpp"



void fn_HSD_EraseRect(PPC::Runtime::GCContext* context)
{
/*8040F8A4 0040C6A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*8040F8A8 0040C6A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040F8AC 0040C6AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8040F8B0 0040C6B0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*8040F8B4 0040C6B4*/ PPC::Runtime::ASM::bl(_savefpr_27);
/*8040F8B8 0040C6B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8040F8BC 0040C6BC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*8040F8C0 0040C6C0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/* 8040F8C4 0040C6C4  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*8040F8C8 0040C6C8*/ PPC::Runtime::ASM::fmr(context->f27, context->f1);
/*8040F8CC 0040C6CC*/ PPC::Runtime::ASM::fmr(context->f28, context->f2);
/*8040F8D0 0040C6D0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8040F8D4 0040C6D4*/ PPC::Runtime::ASM::fmr(context->f29, context->f3);
/*8040F8D8 0040C6D8*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8040F8DC 0040C6DC*/ PPC::Runtime::ASM::fmr(context->f30, context->f4);
/*8040F8E0 0040C6E0*/ PPC::Runtime::ASM::fmr(context->f31, context->f5);
/*8040F8E4 0040C6E4*/ PPC::Runtime::ASM::bne(.L_8040F8F8);
/*8040F8E8 0040C6E8*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8040F8EC 0040C6EC*/ PPC::Runtime::ASM::bne(.L_8040F8F8);
/*8040F8F0 0040C6F0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*8040F8F4 0040C6F4*/ PPC::Runtime::ASM::beq(.L_8040FBC4);
RUNTIME_PPC_JUMP_LABEL(.L_8040F8F8, 0x8040F8F8) //this is a jump label
/*8040F8F8 0040C6F8*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*8040F8FC 0040C6FC*/ PPC::Runtime::ASM::beq(.L_8040F994);
/*8040F900 0040C700*/ PPC::Runtime::ASM::lis(context->r4, lbl_80503BE0 @ Get_MemoryOffset_HighBit);
/*8040F904 0040C704*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040F908 0040C708*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_80503BE0 @ Get_MemoryOffset_LowBit);
/*8040F90C 0040C70C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8040F910 0040C710*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8040F914 0040C714*/ PPC::Runtime::ASM::li(context->r7, 0x11);
/*8040F918 0040C718*/ PPC::Runtime::ASM::li(context->r8, 0x1);
/*8040F91C 0040C71C*/ PPC::Runtime::ASM::li(context->r9, 0x1);
/*8040F920 0040C720*/ PPC::Runtime::ASM::li(context->r10, 0x0);
/*8040F924 0040C724*/ PPC::Runtime::ASM::bl(fn_GXInitTexObj);
/*8040F928 0040C728*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040F92C 0040C72C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8040F930 0040C730*/ PPC::Runtime::ASM::bl(fn_GXLoadTexObj);
/*8040F934 0040C734*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8040F938 0040C738*/ PPC::Runtime::ASM::bl(fn_GXSetNumTexGens);
/*8040F93C 0040C73C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F940 0040C740*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8040F944 0040C744*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8040F948 0040C748*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*8040F94C 0040C74C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8040F950 0040C750*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*8040F954 0040C754*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*8040F958 0040C758*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8040F95C 0040C75C*/ PPC::Runtime::ASM::bl(fn_GXSetNumTevStages);
/*8040F960 0040C760*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F964 0040C764*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8040F968 0040C768*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040F96C 0040C76C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8040F970 0040C770*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*8040F974 0040C774*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F978 0040C778*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8040F97C 0040C77C*/ PPC::Runtime::ASM::bl(fn_GXSetTevOp);
/*8040F980 0040C780*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*8040F984 0040C784*/ PPC::Runtime::ASM::li(context->r4, 0x11);
/*8040F988 0040C788*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040F98C 0040C78C*/ PPC::Runtime::ASM::bl(fn_GXSetZTexture);
/*8040F990 0040C790*/ PPC::Runtime::ASM::b(.L_8040F9C4);
RUNTIME_PPC_JUMP_LABEL(.L_8040F994, 0x8040F994) //this is a jump label
/*8040F994 0040C794*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F998 0040C798*/ PPC::Runtime::ASM::bl(fn_GXSetNumTexGens);
/*8040F99C 0040C79C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8040F9A0 0040C7A0*/ PPC::Runtime::ASM::bl(fn_GXSetNumTevStages);
/*8040F9A4 0040C7A4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F9A8 0040C7A8*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*8040F9AC 0040C7AC*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*8040F9B0 0040C7B0*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8040F9B4 0040C7B4*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*8040F9B8 0040C7B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F9BC 0040C7BC*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8040F9C0 0040C7C0*/ PPC::Runtime::ASM::bl(fn_GXSetTevOp);
RUNTIME_PPC_JUMP_LABEL(.L_8040F9C4, 0x8040F9C4) //this is a jump label
/*8040F9C4 0040C7C4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F9C8 0040C7C8*/ PPC::Runtime::ASM::bl(fn_GXSetCullMode);
/*8040F9CC 0040C7CC*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*8040F9D0 0040C7D0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8040F9D4 0040C7D4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8040F9D8 0040C7D8*/ PPC::Runtime::ASM::li(context->r6, 0x7);
/*8040F9DC 0040C7DC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8040F9E0 0040C7E0*/ PPC::Runtime::ASM::bl(fn_GXSetAlphaCompare);
/*8040F9E4 0040C7E4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8040F9E8 0040C7E8*/ PPC::Runtime::ASM::bl(fn_GXSetZCompLoc);
/*8040F9EC 0040C7EC*/ PPC::Runtime::ASM::neg(context->r0, context->r31);
/*8040F9F0 0040C7F0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8040F9F4 0040C7F4*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r31);
/*8040F9F8 0040C7F8*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*8040F9FC 0040C7FC*/ PPC::Runtime::ASM::srwi(context->r5, context->r0, 31);
/*8040FA00 0040C800*/ PPC::Runtime::ASM::bl(fn_GXSetZMode);
/*8040FA04 0040C804*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*8040FA08 0040C808*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8040FA0C 0040C80C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040FA10 0040C810*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*8040FA14 0040C814*/ PPC::Runtime::ASM::bl(fn_GXSetBlendMode);
/*8040FA18 0040C818*/ PPC::Runtime::ASM::neg(context->r0, context->r29);
/*8040FA1C 0040C81C*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r29);
/*8040FA20 0040C820*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*8040FA24 0040C824*/ PPC::Runtime::ASM::bl(fn_GXSetColorUpdate);
/*8040FA28 0040C828*/ PPC::Runtime::ASM::neg(context->r0, context->r30);
/*8040FA2C 0040C82C*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r30);
/*8040FA30 0040C830*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*8040FA34 0040C834*/ PPC::Runtime::ASM::bl(fn_GXSetAlphaUpdate);
/*8040FA38 0040C838*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8040FA3C 0040C83C*/ PPC::Runtime::ASM::bl(fn_GXSetNumChans);
/*8040FA40 0040C840*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*8040FA44 0040C844*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8040FA48 0040C848*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040FA4C 0040C84C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*8040FA50 0040C850*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8040FA54 0040C854*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8040FA58 0040C858*/ PPC::Runtime::ASM::li(context->r9, 0x2);
/*8040FA5C 0040C85C*/ PPC::Runtime::ASM::bl(fn_GXSetChanCtrl);
/*8040FA60 0040C860*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*8040FA64 0040C864*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040FA68 0040C868*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*8040FA6C 0040C86C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8040FA70 0040C870*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8040FA74 0040C874*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8040FA78 0040C878*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8040FA7C 0040C87C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040FA80 0040C880*/ PPC::Runtime::ASM::li(context->r4, 0xb);
/*8040FA84 0040C884*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8040FA88 0040C888*/ PPC::Runtime::ASM::li(context->r6, 0x5);
/*8040FA8C 0040C88C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8040FA90 0040C890*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8040FA94 0040C894*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040FA98 0040C898*/ PPC::Runtime::ASM::li(context->r4, 0xd);
/*8040FA9C 0040C89C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8040FAA0 0040C8A0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8040FAA4 0040C8A4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8040FAA8 0040C8A8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8040FAAC 0040C8AC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80503FC0 @ Get_MemoryOffset_HighBit);
/*8040FAB0 0040C8B0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8040FAB4 0040C8B4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80503FC0 @ Get_MemoryOffset_LowBit);
/*8040FAB8 0040C8B8*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*8040FABC 0040C8BC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040FAC0 0040C8C0*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*8040FAC4 0040C8C4*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8040FAC8 0040C8C8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8040FACC 0040C8CC*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8040FAD0 0040C8D0*/ PPC::Runtime::ASM::li(context->r3, 0xb);
/*8040FAD4 0040C8D4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8040FAD8 0040C8D8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8040FADC 0040C8DC*/ PPC::Runtime::ASM::li(context->r3, 0xd);
/*8040FAE0 0040C8E0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8040FAE4 0040C8E4*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8040FAE8 0040C8E8*/ PPC::Runtime::ASM::lwz(context->r0, AllZeros_29 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FAEC 0040C8EC*/ PPC::Runtime::ASM::li(context->r3, 0x80);
/*8040FAF0 0040C8F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8040FAF4 0040C8F4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8040FAF8 0040C8F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8040FAFC 0040C8FC*/ PPC::Runtime::ASM::bl(fn_GXBegin);
/*8040FB00 0040C900*/ PPC::Runtime::ASM::lis(context->r11, 0xcc01);
/*8040FB04 0040C904*/ PPC::Runtime::ASM::lbz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8040FB08 0040C908*/ PPC::Runtime::ASM::stfs(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB0C 0040C90C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8040FB10 0040C910*/ PPC::Runtime::ASM::lbz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r1));
/*8040FB14 0040C914*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8040FB18 0040C918*/ PPC::Runtime::ASM::stfs(context->f27, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB1C 0040C91C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040FB20 0040C920*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r1));
/*8040FB24 0040C924*/ PPC::Runtime::ASM::li(context->r4, 0x11);
/*8040FB28 0040C928*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB2C 0040C92C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040FB30 0040C930*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb, context->r1));
/*8040FB34 0040C934*/ PPC::Runtime::ASM::stb(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB38 0040C938*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB3C 0040C93C*/ PPC::Runtime::ASM::stb(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB40 0040C940*/ PPC::Runtime::ASM::stb(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB44 0040C944*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB48 0040C948*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB4C 0040C94C*/ PPC::Runtime::ASM::stfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB50 0040C950*/ PPC::Runtime::ASM::stfs(context->f27, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB54 0040C954*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB58 0040C958*/ PPC::Runtime::ASM::stb(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB5C 0040C95C*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB60 0040C960*/ PPC::Runtime::ASM::stb(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB64 0040C964*/ PPC::Runtime::ASM::stb(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB68 0040C968*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB6C 0040C96C*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB70 0040C970*/ PPC::Runtime::ASM::stfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB74 0040C974*/ PPC::Runtime::ASM::stfs(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB78 0040C978*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB7C 0040C97C*/ PPC::Runtime::ASM::stb(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB80 0040C980*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB84 0040C984*/ PPC::Runtime::ASM::stb(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB88 0040C988*/ PPC::Runtime::ASM::stb(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB8C 0040C98C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB90 0040C990*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB94 0040C994*/ PPC::Runtime::ASM::stfs(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB98 0040C998*/ PPC::Runtime::ASM::stfs(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FB9C 0040C99C*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBA0 0040C9A0*/ PPC::Runtime::ASM::stb(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBA4 0040C9A4*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBA8 0040C9A8*/ PPC::Runtime::ASM::stb(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBAC 0040C9AC*/ PPC::Runtime::ASM::stb(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBB0 0040C9B0*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBB4 0040C9B4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r11));
/*8040FBB8 0040C9B8*/ PPC::Runtime::ASM::bl(fn_GXSetZTexture);
/*8040FBBC 0040C9BC*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8040FBC0 0040C9C0*/ PPC::Runtime::ASM::bl(fn_HSD_StateInvalidate);
RUNTIME_PPC_JUMP_LABEL(.L_8040FBC4, 0x8040FBC4) //this is a jump label
/*8040FBC4 0040C9C4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*8040FBC8 0040C9C8*/ PPC::Runtime::ASM::bl(_restfpr_27);
/*8040FBCC 0040C9CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8040FBD0 0040C9D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8040FBD4 0040C9D4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*8040FBD8 0040C9D8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8040FBDC 0040C9DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040FBE0 0040C9E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*8040FBE4 0040C9E4*/ PPC::Runtime::ASM::blr();
}