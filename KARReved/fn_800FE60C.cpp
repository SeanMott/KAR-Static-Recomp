//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D79C0.hpp"
#include "fn_800FE698.hpp"



void fn_800FE60C(PPC::Runtime::GCContext* context)
{
/*800FE60C 000FB40C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FE610 000FB410*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FE614 000FB414*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FE618 000FB418*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FE61C 000FB41C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800FE620 000FB420*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800FE624 000FB424*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*800FE628 000FB428*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*800FE62C 000FB42C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FE630 000FB430*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x138);
/*800FE634 000FB434*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800FE638 000FB438*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800FE63C 000FB43C*/ PPC::Runtime::ASM::lwz(context->r7, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FE640 000FB440*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*800FE644 000FB444*/ PPC::Runtime::ASM::addi(context->r3, context->r7, 0x54);
/*800FE648 000FB448*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FE64C 000FB44C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r6, context->r0);
/*800FE650 000FB450*/ PPC::Runtime::ASM::bl(fn_800D79C0);
/*800FE654 000FB454*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FE658 000FB458*/ PPC::Runtime::ASM::lis(context->r3, StructValues_Float_7 @ Get_MemoryOffset_HighBit);
/*800FE65C 000FB45C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FE660 000FB460*/ PPC::Runtime::ASM::addi(context->r4, context->r3, StructValues_Float_7 @ Get_MemoryOffset_LowBit);
/*800FE664 000FB464*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800FE668 000FB468*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800FE66C 000FB46C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*800FE670 000FB470*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
/*800FE674 000FB474*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*800FE678 000FB478*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
/*800FE67C 000FB47C*/ PPC::Runtime::ASM::bl(fn_800FE698);
/*800FE680 000FB480*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FE684 000FB484*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FE688 000FB488*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800FE68C 000FB48C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FE690 000FB490*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FE694 000FB494*/ PPC::Runtime::ASM::blr();
}