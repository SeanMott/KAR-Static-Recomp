//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_GXInitFifoPtrs(PPC::Runtime::GCContext* context)
{
/*803C9A90 003C6890*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C9A94 003C6894*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C9A98 003C6898*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803C9A9C 003C689C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C9AA0 003C68A0*/ PPC::Runtime::ASM::addi(context->r31, context->r5, 0x0);
/*803C9AA4 003C68A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C9AA8 003C68A8*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803C9AAC 003C68AC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C9AB0 003C68B0*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803C9AB4 003C68B4*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C9AB8 003C68B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*803C9ABC 003C68BC*/ PPC::Runtime::ASM::subf(context->r0, context->r30, context->r31);
/*803C9AC0 003C68C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*803C9AC4 003C68C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803C9AC8 003C68C8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*803C9ACC 003C68CC*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*803C9AD0 003C68D0*/ PPC::Runtime::ASM::bge(.L_803C9AE0);
/*803C9AD4 003C68D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*803C9AD8 003C68D8*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r0);
/*803C9ADC 003C68DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803C9AE0, 0x803C9AE0) //this is a jump label
/*803C9AE0 003C68E0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C9AE4 003C68E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803C9AE8 003C68E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C9AEC 003C68EC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C9AF0 003C68F0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C9AF4 003C68F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803C9AF8 003C68F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C9AFC 003C68FC*/ PPC::Runtime::ASM::blr();
}