//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_randomAbility_aPress.hpp"



void fn_randomAbility_checkIfaPress(PPC::Runtime::GCContext* context)
{
/*801AE7C8 001AB5C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AE7CC 001AB5CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AE7D0 001AB5D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AE7D4 001AB5D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e4, context->r3));
/*801AE7D8 001AB5D8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 23, 23);
/*801AE7DC 001AB5DC*/ PPC::Runtime::ASM::beq(.L_801AE7E4);
/*801AE7E0 001AB5E0*/ PPC::Runtime::ASM::bl(fn_randomAbility_aPress);
RUNTIME_PPC_JUMP_LABEL(.L_801AE7E4, 0x801AE7E4) //this is a jump label
/*801AE7E4 001AB5E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AE7E8 001AB5E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AE7EC 001AB5EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AE7F0 001AB5F0*/ PPC::Runtime::ASM::blr();
}