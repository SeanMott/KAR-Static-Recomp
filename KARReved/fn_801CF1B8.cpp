//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D1CA8.hpp"
#include "fn_800D1838.hpp"



void fn_801CF1B8(PPC::Runtime::GCContext* context)
{
/*801CF1B8 001CBFB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*801CF1BC 001CBFBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CF1C0 001CBFC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801CF1C4 001CBFC4*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CF1C8 001CBFC8*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801CF1CC 001CBFCC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801CF1D0 001CBFD0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801CF1D4 001CBFD4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801CF1D8 001CBFD8*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*801CF1DC 001CBFDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r3));
/*801CF1E0 001CBFE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r30));
/*801CF1E4 001CBFE4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CF1E8 001CBFE8*/ PPC::Runtime::ASM::beq(.L_801CF200);
/*801CF1EC 001CBFEC*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CF1F0 001CBFF0*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CF1F4 001CBFF4*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CF1F8 001CBFF8*/ PPC::Runtime::ASM::li(context->r4, 0x1e3);
/*801CF1FC 001CBFFC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CF200, 0x801CF200) //this is a jump label
/*801CF200 001CC000*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801CF204 001CC004*/ PPC::Runtime::ASM::fneg(context->f4, context->f31);
/*801CF208 001CC008*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*801CF20C 001CC00C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801CF210 001CC010*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CF214 001CC014*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801CF218 001CC018*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*801CF21C 001CC01C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CF220 001CC020*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CF224 001CC024*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x424, context->r31));
/*801CF228 001CC028*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CF22C 001CC02C*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f4);
/*801CF230 001CC030*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CF234 001CC034*/ PPC::Runtime::ASM::fadds(context->f2, context->f3, context->f2);
/*801CF238 001CC038*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x428, context->r31));
/*801CF23C 001CC03C*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f4);
/*801CF240 001CC040*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CF244 001CC044*/ PPC::Runtime::ASM::fadds(context->f1, context->f3, context->f1);
/*801CF248 001CC048*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42c, context->r31));
/*801CF24C 001CC04C*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f4);
/*801CF250 001CC050*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CF254 001CC054*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CF258 001CC058*/ PPC::Runtime::ASM::fadds(context->f0, context->f3, context->f0);
/*801CF25C 001CC05C*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CF260 001CC060*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CF264 001CC064*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r31));
/*801CF268 001CC068*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r30));
/*801CF26C 001CC06C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CF270 001CC070*/ PPC::Runtime::ASM::beq(.L_801CF288);
/*801CF274 001CC074*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CF278 001CC078*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CF27C 001CC07C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CF280 001CC080*/ PPC::Runtime::ASM::li(context->r4, 0x1f9);
/*801CF284 001CC084*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CF288, 0x801CF288) //this is a jump label
/*801CF288 001CC088*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r30));
/*801CF28C 001CC08C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CF290 001CC090*/ PPC::Runtime::ASM::beq(.L_801CF2AC);
/*801CF294 001CC094*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0A88 @ Get_MemoryOffset_HighBit);
/*801CF298 001CC098*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CF29C 001CC09C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0A88 @ Get_MemoryOffset_LowBit);
/*801CF2A0 001CC0A0*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*801CF2A4 001CC0A4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CF2A8 001CC0A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CF2AC, 0x801CF2AC) //this is a jump label
/*801CF2AC 001CC0AC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r30));
/*801CF2B0 001CC0B0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*801CF2B4 001CC0B4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801CF2B8 001CC0B8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801CF2BC 001CC0BC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r6));
/*801CF2C0 001CC0C0*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x20);
/*801CF2C4 001CC0C4*/ PPC::Runtime::ASM::bl(fn_800D1CA8);
/*801CF2C8 001CC0C8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801CF2CC 001CC0CC*/ PPC::Runtime::ASM::bl(fn_800D1838);
/*801CF2D0 001CC0D0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801CF2D4 001CC0D4*/ PPC::Runtime::ASM::bne(.L_801CF314);
/*801CF2D8 001CC0D8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb58, context->r31));
/*801CF2DC 001CC0DC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CF2E0 001CC0E0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CF2E4 001CC0E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CF2E8 001CC0E8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb5c, context->r31));
/*801CF2EC 001CC0EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb60, context->r31));
/*801CF2F0 001CC0F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CF2F4 001CC0F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb64, context->r31));
/*801CF2F8 001CC0F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801CF2FC 001CC0FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CF300 001CC100*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb68, context->r31));
/*801CF304 001CC104*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb6c, context->r31));
/*801CF308 001CC108*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801CF30C 001CC10C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb70, context->r31));
/*801CF310 001CC110*/ PPC::Runtime::ASM::b(.L_801CF320);
RUNTIME_PPC_JUMP_LABEL(.L_801CF314, 0x801CF314) //this is a jump label
/*801CF314 001CC114*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801CF318 001CC118*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801CF31C 001CC11C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb58, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801CF320, 0x801CF320) //this is a jump label
/*801CF320 001CC120*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801CF324 001CC124*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801CF328 001CC128*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CF32C 001CC12C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801CF330 001CC130*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801CF334 001CC134*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CF338 001CC138*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*801CF33C 001CC13C*/ PPC::Runtime::ASM::blr();
}