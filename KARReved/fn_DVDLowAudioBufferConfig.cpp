//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSCreateAlarm.hpp"
#include "AlarmHandlerForTimeout.hpp"
#include "AlarmHandlerForTimeout.hpp"
#include "OSSetAlarm.hpp"



void fn_DVDLowAudioBufferConfig(PPC::Runtime::GCContext* context)
{
/*803C4CD4 003C1AD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C4CD8 003C1AD8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803C4CDC 003C1ADC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C4CE0 003C1AE0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C4CE4 003C1AE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803C4CE8 003C1AE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C4CEC 003C1AEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C4CF0 003C1AF0*/ PPC::Runtime::ASM::stw(context->r5, Callback_805DDD48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C4CF4 003C1AF4*/ PPC::Runtime::ASM::stw(context->r0, StopAtNextInt_805DDD40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C4CF8 003C1AF8*/ PPC::Runtime::ASM::beq(.L_803C4D00);
/*803C4CFC 003C1AFC*/ PPC::Runtime::ASM::lis(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803C4D00, 0x803C4D00) //this is a jump label
/*803C4D00 003C1B00*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0xe400);
/*803C4D04 003C1B04*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803C4D08 003C1B08*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*803C4D0C 003C1B0C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x6000);
/*803C4D10 003C1B10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803C4D14 003C1B14*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803C4D18 003C1B18*/ PPC::Runtime::ASM::lis(context->r4, 0x8000);
/*803C4D1C 003C1B1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*803C4D20 003C1B20*/ PPC::Runtime::ASM::lis(context->r3, AlarmForTimeout_8056CBA8 @ Get_MemoryOffset_HighBit);
/*803C4D24 003C1B24*/ PPC::Runtime::ASM::addi(context->r31, context->r3, AlarmForTimeout_8056CBA8 @ Get_MemoryOffset_LowBit);
/*803C4D28 003C1B28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r4));
/*803C4D2C 003C1B2C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803C4D30 003C1B30*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 2);
/*803C4D34 003C1B34*/ PPC::Runtime::ASM::mulli(context->r30, context->r0, 0xa);
/*803C4D38 003C1B38*/ PPC::Runtime::ASM::bl(OSCreateAlarm);
/*803C4D3C 003C1B3C*/ PPC::Runtime::ASM::lis(context->r3, AlarmHandlerForTimeout @ Get_MemoryOffset_HighBit);
/*803C4D40 003C1B40*/ PPC::Runtime::ASM::addi(context->r7, context->r3, AlarmHandlerForTimeout @ Get_MemoryOffset_LowBit);
/*803C4D44 003C1B44*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803C4D48 003C1B48*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x0);
/*803C4D4C 003C1B4C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C4D50 003C1B50*/ PPC::Runtime::ASM::bl(OSSetAlarm);
/*803C4D54 003C1B54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C4D58 003C1B58*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C4D5C 003C1B5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C4D60 003C1B60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C4D64 003C1B64*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803C4D68 003C1B68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C4D6C 003C1B6C*/ PPC::Runtime::ASM::blr();
}