//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80291F34(PPC::Runtime::GCContext* context)
{
/*80291F34 0028ED34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80291F38 0028ED38*/ PPC::Runtime::ASM::mflr(context->r0);
/*80291F3C 0028ED3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291F40 0028ED40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80291F44 0028ED44*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80291F48 0028ED48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80291F4C 0028ED4C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80291F50 0028ED50*/ PPC::Runtime::ASM::beq(.L_80291F98);
/*80291F54 0028ED54*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BD2B0 @ Get_MemoryOffset_HighBit);
/*80291F58 0028ED58*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4);
/*80291F5C 0028ED5C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BD2B0 @ Get_MemoryOffset_LowBit);
/*80291F60 0028ED60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80291F64 0028ED64*/ PPC::Runtime::ASM::beq(.L_80291F88);
/*80291F68 0028ED68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80291F6C 0028ED6C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80291F70 0028ED70*/ PPC::Runtime::ASM::beq(.L_80291F88);
/*80291F74 0028ED74*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80291F78 0028ED78*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80291F7C 0028ED7C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*80291F80 0028ED80*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80291F84 0028ED84*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_80291F88, 0x80291F88) //this is a jump label
/*80291F88 0028ED88*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80291F8C 0028ED8C*/ PPC::Runtime::ASM::ble(.L_80291F98);
/*80291F90 0028ED90*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80291F94 0028ED94*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80291F98, 0x80291F98) //this is a jump label
/*80291F98 0028ED98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291F9C 0028ED9C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80291FA0 0028EDA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80291FA4 0028EDA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80291FA8 0028EDA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80291FAC 0028EDAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80291FB0 0028EDB0*/ PPC::Runtime::ASM::blr();
}