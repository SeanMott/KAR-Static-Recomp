//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E073C.hpp"
#include "fn_801E07FC.hpp"
#include "fn_801CBA4C.hpp"



void fn_801E2DA8(PPC::Runtime::GCContext* context)
{
/*801E2DA8 001DFBA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E2DAC 001DFBAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E2DB0 001DFBB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E2DB4 001DFBB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E2DB8 001DFBB8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E2DBC 001DFBBC*/ PPC::Runtime::ASM::bl(fn_801E073C);
/*801E2DC0 001DFBC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E2DC4 001DFBC4*/ PPC::Runtime::ASM::bl(fn_801E07FC);
/*801E2DC8 001DFBC8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb2c, context->r31));
/*801E2DCC 001DFBCC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1D58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E2DD0 001DFBD0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801E2DD4 001DFBD4*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801E2DD8 001DFBD8*/ PPC::Runtime::ASM::bne(.L_801E2DE4);
/*801E2DDC 001DFBDC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E2DE0 001DFBE0*/ PPC::Runtime::ASM::bl(fn_801CBA4C);
RUNTIME_PPC_JUMP_LABEL(.L_801E2DE4, 0x801E2DE4) //this is a jump label
/*801E2DE4 001DFBE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E2DE8 001DFBE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E2DEC 001DFBEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E2DF0 001DFBF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E2DF4 001DFBF4*/ PPC::Runtime::ASM::blr();
}