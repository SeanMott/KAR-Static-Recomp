//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_80285130.hpp"



void fn_802A2368(PPC::Runtime::GCContext* context)
{
/*802A2368 0029F168*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A236C 0029F16C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A2370 0029F170*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A2374 0029F174*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A2378 0029F178*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A237C 0029F17C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A2380 0029F180  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A2384 0029F184*/ PPC::Runtime::ASM::beq(.L_802A2438);
/*802A2388 0029F188*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C41E8 @ Get_MemoryOffset_HighBit);
/*802A238C 0029F18C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x14f8);
/*802A2390 0029F190*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C41E8 @ Get_MemoryOffset_LowBit);
/*802A2394 0029F194*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2398 0029F198*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A239C 0029F19C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A23A0 0029F1A0*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A23A4 0029F1A4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A23A8 0029F1A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A23AC 0029F1AC*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A23B0 0029F1B0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x116c);
/*802A23B4 0029F1B4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A23B8 0029F1B8*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A23BC 0029F1BC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xde0);
/*802A23C0 0029F1C0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A23C4 0029F1C4*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A23C8 0029F1C8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xa54);
/*802A23CC 0029F1CC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A23D0 0029F1D0*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A23D4 0029F1D4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x950);
/*802A23D8 0029F1D8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A23DC 0029F1DC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A23E0 0029F1E0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x84c);
/*802A23E4 0029F1E4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A23E8 0029F1E8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A23EC 0029F1EC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x748);
/*802A23F0 0029F1F0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A23F4 0029F1F4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A23F8 0029F1F8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x644);
/*802A23FC 0029F1FC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2400 0029F200*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A2404 0029F204*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x540);
/*802A2408 0029F208*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A240C 0029F20C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A2410 0029F210*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1b4);
/*802A2414 0029F214*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A2418 0029F218*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A241C 0029F21C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A2420 0029F220*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A2424 0029F224*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A2428 0029F228*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A242C 0029F22C*/ PPC::Runtime::ASM::ble(.L_802A2438);
/*802A2430 0029F230*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A2434 0029F234*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A2438, 0x802A2438) //this is a jump label
/*802A2438 0029F238*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A243C 0029F23C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A2440 0029F240*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A2444 0029F244*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A2448 0029F248*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A244C 0029F24C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A2450 0029F250*/ PPC::Runtime::ASM::blr();
}