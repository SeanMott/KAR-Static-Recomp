//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSRegisterVersion.hpp"
#include "SISetSamplingRate.hpp"
#include "SIInterruptHandler.hpp"
#include "SIInterruptHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSUnmaskInterrupts.hpp"
#include "SIGetType.hpp"
#include "SIGetType.hpp"
#include "SIGetType.hpp"
#include "SIGetType.hpp"



void SIInit(PPC::Runtime::GCContext* context)
{
/*803E9060 003E5E60*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E9064 003E5E64*/ PPC::Runtime::ASM::lis(context->r4, Packet_8056E728 @ Get_MemoryOffset_HighBit);
/*803E9068 003E5E68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E906C 003E5E6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803E9070 003E5E70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803E9074 003E5E74*/ PPC::Runtime::ASM::addi(context->r31, context->r4, Packet_8056E728 @ Get_MemoryOffset_LowBit);
/*803E9078 003E5E78*/ PPC::Runtime::ASM::lwz(context->r3, __SIVersion @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803E907C 003E5E7C*/ PPC::Runtime::ASM::bl(OSRegisterVersion);
/*803E9080 003E5E80*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*803E9084 003E5E84*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r31));
/*803E9088 003E5E88*/ PPC::Runtime::ASM::lis(context->r3, Si_804FCC24 @ Get_MemoryOffset_HighBit);
/*803E908C 003E5E8C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, Si_804FCC24 @ Get_MemoryOffset_LowBit);
/*803E9090 003E5E90*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*803E9094 003E5E94*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E9098 003E5E98*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803E909C 003E5E9C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*803E90A0 003E5EA0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803E90A4 003E5EA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803E90A8 003E5EA8*/ PPC::Runtime::ASM::bl(SISetSamplingRate);
/*803E90AC 003E5EAC*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
RUNTIME_PPC_JUMP_LABEL(.L_803E90B0, 0x803E90B0) //this is a jump label
/*803E90B0 003E5EB0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x6400);
/*803E90B4 003E5EB4*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r4));
/* 803E90B8 003E5EB8  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803E90BC 003E5EBC*/ PPC::Runtime::ASM::bne(.L_803E90B0);
/*803E90C0 003E5EC0*/ PPC::Runtime::ASM::lis(context->r0, 0x8000);
/*803E90C4 003E5EC4*/ PPC::Runtime::ASM::lis(context->r3, SIInterruptHandler @ Get_MemoryOffset_HighBit);
/*803E90C8 003E5EC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803E90CC 003E5ECC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, SIInterruptHandler @ Get_MemoryOffset_LowBit);
/*803E90D0 003E5ED0*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*803E90D4 003E5ED4*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803E90D8 003E5ED8*/ PPC::Runtime::ASM::li(context->r3, 0x800);
/*803E90DC 003E5EDC*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803E90E0 003E5EE0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803E90E4 003E5EE4*/ PPC::Runtime::ASM::bl(SIGetType);
/*803E90E8 003E5EE8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803E90EC 003E5EEC*/ PPC::Runtime::ASM::bl(SIGetType);
/*803E90F0 003E5EF0*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803E90F4 003E5EF4*/ PPC::Runtime::ASM::bl(SIGetType);
/*803E90F8 003E5EF8*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803E90FC 003E5EFC*/ PPC::Runtime::ASM::bl(SIGetType);
/*803E9100 003E5F00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E9104 003E5F04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803E9108 003E5F08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803E910C 003E5F0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E9110 003E5F10*/ PPC::Runtime::ASM::blr();
}