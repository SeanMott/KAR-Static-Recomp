//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007C8C8.hpp"
#include "fn_8007C888.hpp"
#include "fn_8007C888.hpp"
#include "fn_80062AE0.hpp"



void fn_8007CB60(PPC::Runtime::GCContext* context)
{
/*8007CB60 00079960*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8007CB64 00079964*/ PPC::Runtime::ASM::mflr(context->r0);
/*8007CB68 00079968*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007CB6C 0007996C*/ PPC::Runtime::ASM::bl(fn_8007C8C8);
/*8007CB70 00079970*/ PPC::Runtime::ASM::lis(context->r5, lbl_80552A30 @ Get_MemoryOffset_HighBit);
/*8007CB74 00079974*/ PPC::Runtime::ASM::lis(context->r3, fn_8007C888 @ Get_MemoryOffset_HighBit);
/*8007CB78 00079978*/ PPC::Runtime::ASM::addi(context->r6, context->r5, lbl_80552A30 @ Get_MemoryOffset_LowBit);
/*8007CB7C 0007997C*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*8007CB80 00079980*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8007CB84 00079984*/ PPC::Runtime::ASM::lis(context->r4, lbl_80552C2C @ Get_MemoryOffset_HighBit);
/*8007CB88 00079988*/ PPC::Runtime::ASM::stwu(context->r5, lbl_80552C2C @ Get_MemoryOffset_LowBit ( context->r4 ));
/*8007CB8C 0007998C*/ PPC::Runtime::ASM::li(context->r0, 0x154);
/*8007CB90 00079990*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_8007C888 @ Get_MemoryOffset_LowBit);
/*8007CB94 00079994*/ PPC::Runtime::ASM::stb(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r6));
/*8007CB98 00079998*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8007CB9C 0007999C*/ PPC::Runtime::ASM::bl(fn_80062AE0);
/*8007CBA0 000799A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007CBA4 000799A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007CBA8 000799A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8007CBAC 000799AC*/ PPC::Runtime::ASM::blr();
}