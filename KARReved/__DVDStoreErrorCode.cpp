//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "ErrorCode2Num.hpp"
#include "__OSLockSramEx.hpp"
#include "__OSUnlockSramEx.hpp"



void __DVDStoreErrorCode(PPC::Runtime::GCContext* context)
{
/*803C8188 003C4F88*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C818C 003C4F8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C8190 003C4F90*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x123);
/*803C8194 003C4F94*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x4567);
/*803C8198 003C4F98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803C819C 003C4F9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C81A0 003C4FA0*/ PPC::Runtime::ASM::bne(.L_803C81AC);
/*803C81A4 003C4FA4*/ PPC::Runtime::ASM::li(context->r31, 0xff);
/*803C81A8 003C4FA8*/ PPC::Runtime::ASM::b(.L_803C81E0);
RUNTIME_PPC_JUMP_LABEL(.L_803C81AC, 0x803C81AC) //this is a jump label
/*803C81AC 003C4FAC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x4568);
/*803C81B0 003C4FB0*/ PPC::Runtime::ASM::bne(.L_803C81BC);
/*803C81B4 003C4FB4*/ PPC::Runtime::ASM::li(context->r31, 0xfe);
/*803C81B8 003C4FB8*/ PPC::Runtime::ASM::b(.L_803C81E0);
RUNTIME_PPC_JUMP_LABEL(.L_803C81BC, 0x803C81BC) //this is a jump label
/*803C81BC 003C4FBC*/ PPC::Runtime::ASM::srwi(context->r31, context->r3, 24);
/*803C81C0 003C4FC0*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 8);
/*803C81C4 003C4FC4*/ PPC::Runtime::ASM::bl(ErrorCode2Num);
/*803C81C8 003C4FC8*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x6);
/*803C81CC 003C4FCC*/ PPC::Runtime::ASM::blt(.L_803C81D4);
/*803C81D0 003C4FD0*/ PPC::Runtime::ASM::li(context->r31, 0x6);
RUNTIME_PPC_JUMP_LABEL(.L_803C81D4, 0x803C81D4) //this is a jump label
/*803C81D4 003C4FD4*/ PPC::Runtime::ASM::mulli(context->r0, context->r31, 0x1e);
/*803C81D8 003C4FD8*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 24);
/*803C81DC 003C4FDC*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803C81E0, 0x803C81E0) //this is a jump label
/*803C81E0 003C4FE0*/ PPC::Runtime::ASM::bl(__OSLockSramEx);
/*803C81E4 003C4FE4*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*803C81E8 003C4FE8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C81EC 003C4FEC*/ PPC::Runtime::ASM::bl(__OSUnlockSramEx);
/*803C81F0 003C4FF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C81F4 003C4FF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C81F8 003C4FF8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803C81FC 003C4FFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C8200 003C5000*/ PPC::Runtime::ASM::blr();
}