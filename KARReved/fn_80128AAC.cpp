//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8000A9E4.hpp"
#include "fn_80128FE8.hpp"



void fn_80128AAC(PPC::Runtime::GCContext* context)
{
/*80128AAC 001258AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80128AB0 001258B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80128AB4 001258B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80128AB8 001258B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80128ABC 001258BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80128AC0 001258C0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80128AC4 001258C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80128AC8 001258C8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80128ACC 001258CC*/ PPC::Runtime::ASM::extrwi(context->r31, context->r0, 2, 28);
/*80128AD0 001258D0*/ PPC::Runtime::ASM::bl(fn_8000A9E4);
/*80128AD4 001258D4*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80128AD8 001258D8*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80128ADC 001258DC*/ PPC::Runtime::ASM::bne(.L_80128AE8);
/*80128AE0 001258E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80128AE4 001258E4*/ PPC::Runtime::ASM::bl(fn_80128FE8);
RUNTIME_PPC_JUMP_LABEL(.L_80128AE8, 0x80128AE8) //this is a jump label
/*80128AE8 001258E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80128AEC 001258EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80128AF0 001258F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80128AF4 001258F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80128AF8 001258F8*/ PPC::Runtime::ASM::blr();
}