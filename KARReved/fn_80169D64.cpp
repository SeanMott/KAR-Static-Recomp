//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80169D64(PPC::Runtime::GCContext* context)
{
/*80169D64 00166B64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80169D68 00166B68*/ PPC::Runtime::ASM::mflr(context->r0);
/*80169D6C 00166B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80169D70 00166B70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80169D74 00166B74*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80169D78 00166B78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80169D7C 00166B7C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80169D80 00166B80*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80169D84, 0x80169D84) //this is a jump label
/*80169D84 00166B84*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80169D88 00166B88*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80169D8C 00166B8C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80169D90 00166B90*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80169D94 00166B94*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa90, context->r30));
/*80169D98 00166B98*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80169D9C 00166B9C*/ PPC::Runtime::ASM::beq(.L_80169DA8);
/*80169DA0 00166BA0*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80169DA4 00166BA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa90, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80169DA8, 0x80169DA8) //this is a jump label
/*80169DA8 00166BA8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80169DAC 00166BAC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80169DB0 00166BB0*/ PPC::Runtime::ASM::blt(.L_80169D84);
/*80169DB4 00166BB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80169DB8 00166BB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80169DBC 00166BBC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80169DC0 00166BC0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80169DC4 00166BC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80169DC8 00166BC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80169DCC 00166BCC*/ PPC::Runtime::ASM::blr();
}