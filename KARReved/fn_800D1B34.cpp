//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A98EC.hpp"
#include "fn_800D9958.hpp"
#include "fn_800A98F0.hpp"



void fn_800D1B34(PPC::Runtime::GCContext* context)
{
/*800D1B34 000CE934*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D1B38 000CE938*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D1B3C 000CE93C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D1B40 000CE940*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D1B44 000CE944*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800D1B48 000CE948*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D1B4C 000CE94C*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800D1B50 000CE950*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D1B54 000CE954*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D1B58 000CE958*/ PPC::Runtime::ASM::bl(fn_800A98EC);
/*800D1B5C 000CE95C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D1B60 000CE960*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D1B64 000CE964*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800D1B68 000CE968*/ PPC::Runtime::ASM::mr(context->r8, context->r31);
/*800D1B6C 000CE96C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x54);
/*800D1B70 000CE970*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*800D1B74 000CE974*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800D1B78 000CE978*/ PPC::Runtime::ASM::bl(fn_800D9958);
/*800D1B7C 000CE97C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800D1B80 000CE980*/ PPC::Runtime::ASM::bl(fn_800A98F0);
/*800D1B84 000CE984*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D1B88 000CE988*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D1B8C 000CE98C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D1B90 000CE990*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D1B94 000CE994*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D1B98 000CE998*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D1B9C 000CE99C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D1BA0 000CE9A0*/ PPC::Runtime::ASM::blr();
}