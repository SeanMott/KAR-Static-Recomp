//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"



void fn_8020ACD0(PPC::Runtime::GCContext* context)
{
/*8020ACD0 00207AD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020ACD4 00207AD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020ACD8 00207AD8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8020ACDC 00207ADC*/ PPC::Runtime::ASM::li(context->r5, 0x180);
/*8020ACE0 00207AE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020ACE4 00207AE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020ACE8 00207AE8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020ACEC 00207AEC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x688);
/*8020ACF0 00207AF0*/ PPC::Runtime::ASM::bl(memset);
/*8020ACF4 00207AF4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8020ACF8 00207AF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5ec, context->r31));
/*8020ACFC 00207AFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5f0, context->r31));
/*8020AD00 00207B00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5f4, context->r31));
/*8020AD04 00207B04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r31));
/*8020AD08 00207B08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x344, context->r31));
/*8020AD0C 00207B0C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x67c, context->r31));
/*8020AD10 00207B10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x680, context->r31));
/*8020AD14 00207B14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x348, context->r31));
/*8020AD18 00207B18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x684, context->r31));
/*8020AD1C 00207B1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020AD20 00207B20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020AD24 00207B24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020AD28 00207B28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020AD2C 00207B2C*/ PPC::Runtime::ASM::blr();
}