//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_801550CC(PPC::Runtime::GCContext* context)
{
/*801550CC 00151ECC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801550D0 00151ED0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801550D4 00151ED4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801550D8 00151ED8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801550DC 00151EDC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801550E0 00151EE0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801550E4 00151EE4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801550E8 00151EE8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801550EC 00151EEC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801550F0, 0x801550F0) //this is a jump label
/*801550F0 00151EF0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801550F4 00151EF4*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*801550F8 00151EF8*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 3);
/*801550FC 00151EFC*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*80155100 00151F00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x62c, context->r31));
/*80155104 00151F04*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80155108 00151F08*/ PPC::Runtime::ASM::beq(.L_80155114);
/*8015510C 00151F0C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80155110 00151F10*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x62c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80155114, 0x80155114) //this is a jump label
/*80155114 00151F14*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80155118 00151F18*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*8015511C 00151F1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x630, context->r31));
/*80155120 00151F20*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80155124 00151F24*/ PPC::Runtime::ASM::beq(.L_80155130);
/*80155128 00151F28*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015512C 00151F2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x630, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80155130, 0x80155130) //this is a jump label
/*80155130 00151F30*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80155134 00151F34*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*80155138 00151F38*/ PPC::Runtime::ASM::blt(.L_801550F0);
/*8015513C 00151F3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80155140 00151F40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80155144 00151F44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80155148 00151F48*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015514C 00151F4C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80155150 00151F50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80155154 00151F54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80155158 00151F58*/ PPC::Runtime::ASM::blr();
}