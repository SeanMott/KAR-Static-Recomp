//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_memcmp.hpp"



void fn_ReceiveConfigureAck(PPC::Runtime::GCContext* context)
{
/*80481008 0047DE08*/ PPC::Runtime::ASM::mflr(context->r0);
/*8048100C 0047DE0C*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*80481010 0047DE10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80481014 0047DE14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*80481018 0047DE18*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x230, context->r6));
/*8048101C 0047DE1C*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*80481020 0047DE20*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x4);
/*80481024 0047DE24*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*80481028 0047DE28*/ PPC::Runtime::ASM::bne(.L_80481040);
/*8048102C 0047DE2C*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x4);
/*80481030 0047DE30*/ PPC::Runtime::ASM::addi(context->r4, context->r6, 0x21c);
/*80481034 0047DE34*/ PPC::Runtime::ASM::bl(fn_memcmp);
/*80481038 0047DE38*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8048103C 0047DE3C*/ PPC::Runtime::ASM::beq(.L_80481048);
RUNTIME_PPC_JUMP_LABEL(.L_80481040, 0x80481040) //this is a jump label
/*80481040 0047DE40*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80481044 0047DE44*/ PPC::Runtime::ASM::b(.L_8048104C);
RUNTIME_PPC_JUMP_LABEL(.L_80481048, 0x80481048) //this is a jump label
/*80481048 0047DE48*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8048104C, 0x8048104C) //this is a jump label
/*8048104C 0047DE4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80481050 0047DE50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*80481054 0047DE54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80481058 0047DE58*/ PPC::Runtime::ASM::blr();
}