//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8014AAEC.hpp"



void fn_8014AE7C(PPC::Runtime::GCContext* context)
{
/*8014AE7C 00147C7C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8014AE80 00147C80*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014AE84 00147C84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014AE88 00147C88*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014AE8C 00147C8C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014AE90 00147C90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8014AE94 00147C94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8014AE98 00147C98*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8014AE9C 00147C9C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8014AEA0 00147CA0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8014AEA4 00147CA4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8014AEA8 00147CA8*/ PPC::Runtime::ASM::bl(fn_8014AAEC);
/*8014AEAC 00147CAC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8014AEB0 00147CB0*/ PPC::Runtime::ASM::bne(.L_8014AEC4);
/*8014AEB4 00147CB4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D66C8 @ Get_MemoryOffset_SDA21);
/*8014AEB8 00147CB8*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8014AEBC 00147CBC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D66D0 @ Get_MemoryOffset_SDA21);
/*8014AEC0 00147CC0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8014AEC4, 0x8014AEC4) //this is a jump label
/*8014AEC4 00147CC4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8014AEC8 00147CC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014AECC 00147CCC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*8014AED0 00147CD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r30));
/*8014AED4 00147CD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8014AED8 00147CD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r30));
/*8014AEDC 00147CDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8014AEE0 00147CE0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8014AEE4 00147CE4*/ PPC::Runtime::ASM::bne(.L_8014AF30);
/*8014AEE8 00147CE8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8014AEEC 00147CEC*/ PPC::Runtime::ASM::beq(.L_8014AF30);
/*8014AEF0 00147CF0*/ PPC::Runtime::ASM::bne(.L_8014AF04);
/*8014AEF4 00147CF4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D66C8 @ Get_MemoryOffset_SDA21);
/*8014AEF8 00147CF8*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8014AEFC 00147CFC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D66D0 @ Get_MemoryOffset_SDA21);
/*8014AF00 00147D00*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8014AF04, 0x8014AF04) //this is a jump label
/*8014AF04 00147D04*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8014AF08 00147D08*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8014AF0C 00147D0C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8014AF10 00147D10*/ PPC::Runtime::ASM::bne(.L_8014AF20);
/*8014AF14 00147D14*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8014AF18 00147D18*/ PPC::Runtime::ASM::beq(.L_8014AF20);
/*8014AF1C 00147D1C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8014AF20, 0x8014AF20) //this is a jump label
/*8014AF20 00147D20*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8014AF24 00147D24*/ PPC::Runtime::ASM::bne(.L_8014AF30);
/*8014AF28 00147D28*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8014AF2C 00147D2C*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8014AF30, 0x8014AF30) //this is a jump label
/*8014AF30 00147D30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014AF34 00147D34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014AF38 00147D38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014AF3C 00147D3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014AF40 00147D40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8014AF44 00147D44*/ PPC::Runtime::ASM::blr();
}