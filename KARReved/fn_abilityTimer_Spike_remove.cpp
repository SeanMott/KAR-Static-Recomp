//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005E7D8.hpp"
#include "fn_abilityTimer_Plasma_removeEffect.hpp"
#include "fn_802230A0.hpp"
#include "fn_ability_Spike_end.hpp"
#include "fn_revertKirbyModel?.hpp"



void fn_abilityTimer_Spike_remove(PPC::Runtime::GCContext* context)
{
/*801B3B44 001B0944*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B3B48 001B0948*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B3B4C 001B094C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3B50 001B0950*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3B54 001B0954*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B3B58 001B0958*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r3));
/*801B3B5C 001B095C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*801B3B60 001B0960*/ PPC::Runtime::ASM::beq(.L_801B3B68);
/*801B3B64 001B0964*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
RUNTIME_PPC_JUMP_LABEL(.L_801B3B68, 0x801B3B68) //this is a jump label
/*801B3B68 001B0968*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801B3B6C 001B096C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B3B70 001B0970*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B3B74 001B0974*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
/*801B3B78 001B0978*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B3B7C 001B097C*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r5);
/*801B3B80 001B0980*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r5);
/*801B3B84 001B0984*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*801B3B88 001B0988*/ PPC::Runtime::ASM::beq(.L_801B3B9C);
/*801B3B8C 001B098C*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Plasma_removeEffect);
/*801B3B90 001B0990*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B3B94 001B0994*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B3B98 001B0998*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3B9C, 0x801B3B9C) //this is a jump label
/*801B3B9C 001B099C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801B3BA0 001B09A0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801B3BA4 001B09A4*/ PPC::Runtime::ASM::beq(.L_801B3BB4);
/*801B3BA8 001B09A8*/ PPC::Runtime::ASM::bl(fn_802230A0);
/*801B3BAC 001B09AC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B3BB0 001B09B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3BB4, 0x801B3BB4) //this is a jump label
/*801B3BB4 001B09B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3BB8 001B09B8*/ PPC::Runtime::ASM::bl(fn_ability_Spike_end);
/*801B3BBC 001B09BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3BC0 001B09C0*/ PPC::Runtime::ASM::bl(fn_revertKirbyModel?);
/*801B3BC4 001B09C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3BC8 001B09C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3BCC 001B09CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B3BD0 001B09D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B3BD4 001B09D4*/ PPC::Runtime::ASM::blr();
}