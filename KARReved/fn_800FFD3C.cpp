//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E86CC.hpp"
#include "fn_800F7870.hpp"
#include "fn_800F7AB8.hpp"
#include "fn_800FFF44.hpp"



void fn_800FFD3C(PPC::Runtime::GCContext* context)
{
/*800FFD3C 000FCB3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800FFD40 000FCB40*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FFD44 000FCB44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FFD48 000FCB48*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800FFD4C 000FCB4C*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800FFD50 000FCB50*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800FFD54 000FCB54*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_78 @ Get_MemoryOffset_HighBit);
/*800FFD58 000FCB58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*800FFD5C 000FCB5C*/ PPC::Runtime::ASM::addi(context->r28, context->r3, StructWithFuncPtrs_78 @ Get_MemoryOffset_LowBit);
/*800FFD60 000FCB60*/ PPC::Runtime::ASM::lwz(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*800FFD64 000FCB64*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800FFD68 000FCB68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FFD6C 000FCB6C*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800FFD70 000FCB70*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FFD74 000FCB74*/ PPC::Runtime::ASM::b(.L_800FFD94);
RUNTIME_PPC_JUMP_LABEL(.L_800FFD78, 0x800FFD78) //this is a jump label
/*800FFD78 000FCB78*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800FFD7C 000FCB7C*/ PPC::Runtime::ASM::mr(context->r3, context->r25);
/*800FFD80 000FCB80*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800FFD84 000FCB84*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r27);
/*800FFD88 000FCB88*/ PPC::Runtime::ASM::bl(fn_800E86CC);
/*800FFD8C 000FCB8C*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*800FFD90 000FCB90*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFD94, 0x800FFD94) //this is a jump label
/*800FFD94 000FCB94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FFD98 000FCB98*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800FFD9C 000FCB9C*/ PPC::Runtime::ASM::blt(.L_800FFD78);
/*800FFDA0 000FCBA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800FFDA4 000FCBA4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FFDA8 000FCBA8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FFDAC 000FCBAC*/ PPC::Runtime::ASM::ble(.L_800FFDBC);
/*800FFDB0 000FCBB0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*800FFDB4 000FCBB4*/ PPC::Runtime::ASM::bgt(.L_800FFDBC);
/*800FFDB8 000FCBB8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFDBC, 0x800FFDBC) //this is a jump label
/*800FFDBC 000FCBBC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FFDC0 000FCBC0*/ PPC::Runtime::ASM::bne(.L_800FFDD4);
/*800FFDC4 000FCBC4*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x78);
/*800FFDC8 000FCBC8*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x98);
/*800FFDCC 000FCBCC*/ PPC::Runtime::ASM::li(context->r4, 0x196);
/*800FFDD0 000FCBD0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FFDD4, 0x800FFDD4) //this is a jump label
/*800FFDD4 000FCBD4*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800FFDD8 000FCBD8*/ PPC::Runtime::ASM::mr(context->r26, context->r31);
/*800FFDDC 000FCBDC*/ PPC::Runtime::ASM::mr(context->r27, context->r25);
/*800FFDE0 000FCBE0*/ PPC::Runtime::ASM::b(.L_800FFE3C);
RUNTIME_PPC_JUMP_LABEL(.L_800FFDE4, 0x800FFDE4) //this is a jump label
/*800FFDE4 000FCBE4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FFDE8 000FCBE8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FFDEC 000FCBEC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FFDF0 000FCBF0*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r27);
/*800FFDF4 000FCBF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800FFDF8 000FCBF8*/ PPC::Runtime::ASM::b(.L_800FFE10);
RUNTIME_PPC_JUMP_LABEL(.L_800FFDFC, 0x800FFDFC) //this is a jump label
/*800FFDFC 000FCBFC*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*800FFE00 000FCC00*/ PPC::Runtime::ASM::bne(.L_800FFE08);
/*800FFE04 000FCC04*/ PPC::Runtime::ASM::b(.L_800FFE2C);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE08, 0x800FFE08) //this is a jump label
/*800FFE08 000FCC08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FFE0C 000FCC0C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE10, 0x800FFE10) //this is a jump label
/*800FFE10 000FCC10*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800FFE14 000FCC14*/ PPC::Runtime::ASM::bne(.L_800FFDFC);
/*800FFE18 000FCC18*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x8c);
/*800FFE1C 000FCC1C*/ PPC::Runtime::ASM::li(context->r4, 0x96c);
/*800FFE20 000FCC20*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6288 @ Get_MemoryOffset_SDA21);
/*800FFE24 000FCC24*/ PPC::Runtime::ASM::bl(fn___assert);
/*800FFE28 000FCC28*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE2C, 0x800FFE2C) //this is a jump label
/*800FFE2C 000FCC2C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r26));
/*800FFE30 000FCC30*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*800FFE34 000FCC34*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x4);
/*800FFE38 000FCC38*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE3C, 0x800FFE3C) //this is a jump label
/*800FFE3C 000FCC3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800FFE40 000FCC40*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*800FFE44 000FCC44*/ PPC::Runtime::ASM::blt(.L_800FFDE4);
/*800FFE48 000FCC48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800FFE4C 000FCC4C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FFE50 000FCC50*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FFE54 000FCC54*/ PPC::Runtime::ASM::ble(.L_800FFE64);
/*800FFE58 000FCC58*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*800FFE5C 000FCC5C*/ PPC::Runtime::ASM::bgt(.L_800FFE64);
/*800FFE60 000FCC60*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE64, 0x800FFE64) //this is a jump label
/*800FFE64 000FCC64*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FFE68 000FCC68*/ PPC::Runtime::ASM::bne(.L_800FFE7C);
/*800FFE6C 000FCC6C*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x78);
/*800FFE70 000FCC70*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0xe8);
/*800FFE74 000FCC74*/ PPC::Runtime::ASM::li(context->r4, 0x19c);
/*800FFE78 000FCC78*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE7C, 0x800FFE7C) //this is a jump label
/*800FFE7C 000FCC7C*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800FFE80 000FCC80*/ PPC::Runtime::ASM::mr(context->r27, context->r31);
/*800FFE84 000FCC84*/ PPC::Runtime::ASM::mr(context->r26, context->r25);
/*800FFE88 000FCC88*/ PPC::Runtime::ASM::b(.L_800FFEE4);
RUNTIME_PPC_JUMP_LABEL(.L_800FFE8C, 0x800FFE8C) //this is a jump label
/*800FFE8C 000FCC8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800FFE90 000FCC90*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FFE94 000FCC94*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FFE98 000FCC98*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r26);
/*800FFE9C 000FCC9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800FFEA0 000FCCA0*/ PPC::Runtime::ASM::b(.L_800FFEB8);
RUNTIME_PPC_JUMP_LABEL(.L_800FFEA4, 0x800FFEA4) //this is a jump label
/*800FFEA4 000FCCA4*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*800FFEA8 000FCCA8*/ PPC::Runtime::ASM::bne(.L_800FFEB0);
/*800FFEAC 000FCCAC*/ PPC::Runtime::ASM::b(.L_800FFED4);
RUNTIME_PPC_JUMP_LABEL(.L_800FFEB0, 0x800FFEB0) //this is a jump label
/*800FFEB0 000FCCB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FFEB4 000FCCB4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFEB8, 0x800FFEB8) //this is a jump label
/*800FFEB8 000FCCB8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800FFEBC 000FCCBC*/ PPC::Runtime::ASM::bne(.L_800FFEA4);
/*800FFEC0 000FCCC0*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x8c);
/*800FFEC4 000FCCC4*/ PPC::Runtime::ASM::li(context->r4, 0x96c);
/*800FFEC8 000FCCC8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6288 @ Get_MemoryOffset_SDA21);
/*800FFECC 000FCCCC*/ PPC::Runtime::ASM::bl(fn___assert);
/*800FFED0 000FCCD0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800FFED4, 0x800FFED4) //this is a jump label
/*800FFED4 000FCCD4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r27));
/*800FFED8 000FCCD8*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x4);
/*800FFEDC 000FCCDC*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*800FFEE0 000FCCE0*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FFEE4, 0x800FFEE4) //this is a jump label
/*800FFEE4 000FCCE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800FFEE8 000FCCE8*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*800FFEEC 000FCCEC*/ PPC::Runtime::ASM::blt(.L_800FFE8C);
/*800FFEF0 000FCCF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FFEF4 000FCCF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800FFEF8 000FCCF8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800FFEFC 000FCCFC*/ PPC::Runtime::ASM::beq(.L_800FFF10);
/*800FFF00 000FCD00*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800FFF04 000FCD04*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*800FFF08 000FCD08*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FFF0C 000FCD0C*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_800FFF10, 0x800FFF10) //this is a jump label
/*800FFF10 000FCD10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FFF14 000FCD14*/ PPC::Runtime::ASM::bl(fn_800F7AB8);
/*800FFF18 000FCD18*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*800FFF1C 000FCD1C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800FFF20 000FCD20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*800FFF24 000FCD24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*800FFF28 000FCD28*/ PPC::Runtime::ASM::bl(fn_800FFF44);
/*800FFF2C 000FCD2C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800FFF30 000FCD30*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800FFF34 000FCD34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FFF38 000FCD38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FFF3C 000FCD3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800FFF40 000FCD40*/ PPC::Runtime::ASM::blr();
}