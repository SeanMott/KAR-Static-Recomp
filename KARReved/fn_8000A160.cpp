//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A160(PPC::Runtime::GCContext* context)
{
/*8000A160 00006F60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A164 00006F64*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A168 00006F68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A16C 00006F6C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A170 00006F70*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A174 00006F74*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 25);
/*8000A178 00006F78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A17C 00006F7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A180 00006F80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A184 00006F84*/ PPC::Runtime::ASM::blr();
}