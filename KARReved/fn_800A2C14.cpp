//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007E61C.hpp"
#include "fn_800D5250.hpp"
#include "fn_80099564.hpp"



void fn_800A2C14(PPC::Runtime::GCContext* context)
{
/*800A2C14 0009FA14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*800A2C18 0009FA18*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A2C1C 0009FA1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800A2C20 0009FA20*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*800A2C24 0009FA24*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800A2C28 0009FA28*/ PPC::Runtime::ASM::mulli(context->r30, context->r5, 0x140);
/*800A2C2C 0009FA2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800A2C30 0009FA30*/ PPC::Runtime::ASM::mr(context->r27, context->r6);
/*800A2C34 0009FA34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*800A2C38 0009FA38*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800A2C3C 0009FA3C*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x13c);
/*800A2C40 0009FA40*/ PPC::Runtime::ASM::lbzx(context->r0, context->r3, context->r0);
/*800A2C44 0009FA44*/ PPC::Runtime::ASM::mulli(context->r29, context->r27, 0x24);
/*800A2C48 0009FA48*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r30);
/* 800A2C4C 0009FA4C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800A2C50 0009FA50*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r29);
/*800A2C54 0009FA54*/ PPC::Runtime::ASM::mr(context->r28, context->r7);
/*800A2C58 0009FA58*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800A2C5C 0009FA5C*/ PPC::Runtime::ASM::beq(.L_800A2CB4);
/*800A2C60 0009FA60*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_23 @ Get_MemoryOffset_HighBit);
/*800A2C64 0009FA64*/ PPC::Runtime::ASM::li(context->r0, 0x35);
/*800A2C68 0009FA68*/ PPC::Runtime::ASM::addi(context->r5, context->r3, StructWithFuncPtrs_23 @ Get_MemoryOffset_LowBit);
/*800A2C6C 0009FA6C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A2C70 0009FA70*/ PPC::Runtime::ASM::mtctr(context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_800A2C74, 0x800A2C74) //this is a jump label
/*800A2C74 0009FA74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800A2C78 0009FA78*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*800A2C7C 0009FA7C*/ PPC::Runtime::ASM::bne(.L_800A2C84);
/*800A2C80 0009FA80*/ PPC::Runtime::ASM::b(.L_800A2CA8);
RUNTIME_PPC_JUMP_LABEL(.L_800A2C84, 0x800A2C84) //this is a jump label
/*800A2C84 0009FA84*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
/*800A2C88 0009FA88*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*800A2C8C 0009FA8C*/ PPC::Runtime::ASM::bdnz(.L_800A2C74);
/*800A2C90 0009FA90*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_645 @ Get_MemoryOffset_HighBit);
/*800A2C94 0009FA94*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800A2C98 0009FA98*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_645 @ Get_MemoryOffset_LowBit);
/*800A2C9C 0009FA9C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5B64 @ Get_MemoryOffset_SDA21);
/*800A2CA0 0009FAA0*/ PPC::Runtime::ASM::bl(fn___assert);
/*800A2CA4 0009FAA4*/ PPC::Runtime::ASM::li(context->r3, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A2CA8, 0x800A2CA8) //this is a jump label
/*800A2CA8 0009FAA8*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800A2CAC 0009FAAC*/ PPC::Runtime::ASM::add(context->r5, context->r28, context->r0);
/*800A2CB0 0009FAB0*/ PPC::Runtime::ASM::b(.L_800A2CB8);
RUNTIME_PPC_JUMP_LABEL(.L_800A2CB4, 0x800A2CB4) //this is a jump label
/*800A2CB4 0009FAB4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5B58 @ Get_MemoryOffset_SDA21);
RUNTIME_PPC_JUMP_LABEL(.L_800A2CB8, 0x800A2CB8) //this is a jump label
/*800A2CB8 0009FAB8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
/*800A2CBC 0009FABC*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r29);
/*800A2CC0 0009FAC0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x18);
/*800A2CC4 0009FAC4*/ PPC::Runtime::ASM::add(context->r0, context->r6, context->r30);
/*800A2CC8 0009FAC8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*800A2CCC 0009FACC*/ PPC::Runtime::ASM::add(context->r8, context->r0, context->r29);
/*800A2CD0 0009FAD0*/ PPC::Runtime::ASM::add(context->r4, context->r6, context->r4);
/*800A2CD4 0009FAD4*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r8));
/*800A2CD8 0009FAD8*/ PPC::Runtime::ASM::li(context->r6, lbl_805D5B5C @ Get_MemoryOffset_SDA21);
/*800A2CDC 0009FADC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*800A2CE0 0009FAE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r9));
/*800A2CE4 0009FAE4*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800A2CE8 0009FAE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800A2CEC 0009FAEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*800A2CF0 0009FAF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800A2CF4 0009FAF4*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r8));
/*800A2CF8 0009FAF8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*800A2CFC 0009FAFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r9));
/*800A2D00 0009FB00*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A2D04 0009FB04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*800A2D08 0009FB08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*800A2D0C 0009FB0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800A2D10 0009FB10*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r8));
/*800A2D14 0009FB14*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r9));
/*800A2D18 0009FB18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r9));
/*800A2D1C 0009FB1C*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800A2D20 0009FB20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A2D24 0009FB24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*800A2D28 0009FB28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800A2D2C 0009FB2C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r8));
/*800A2D30 0009FB30*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*800A2D34 0009FB34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r8));
/*800A2D38 0009FB38*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800A2D3C 0009FB3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*800A2D40 0009FB40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r8));
/*800A2D44 0009FB44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A2D48 0009FB48*/ PPC::Runtime::ASM::bl(fn_8007E61C);
/*800A2D4C 0009FB4C*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*800A2D50 0009FB50*/ PPC::Runtime::ASM::bne(.L_800A2D94);
/*800A2D54 0009FB54*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DF0BC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A2D58 0009FB58*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*800A2D5C 0009FB5C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800A2D60 0009FB60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A2D64 0009FB64*/ PPC::Runtime::ASM::bl(fn_800D5250);
/*800A2D68 0009FB68*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF0C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A2D6C 0009FB6C*/ PPC::Runtime::ASM::mr(context->r6, context->r26);
/*800A2D70 0009FB70*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF0C4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A2D74 0009FB74*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*800A2D78 0009FB78*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A2D7C 0009FB7C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*800A2D80 0009FB80*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A2D84 0009FB84*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800A2D88 0009FB88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A2D8C 0009FB8C*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A2D90 0009FB90*/ PPC::Runtime::ASM::bl(fn_80099564);
RUNTIME_PPC_JUMP_LABEL(.L_800A2D94, 0x800A2D94) //this is a jump label
/*800A2D94 0009FB94*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*800A2D98 0009FB98*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800A2D9C 0009FB9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800A2DA0 0009FBA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A2DA4 0009FBA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*800A2DA8 0009FBA8*/ PPC::Runtime::ASM::blr();
}