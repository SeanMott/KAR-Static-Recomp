//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80214E9C(PPC::Runtime::GCContext* context)
{
/*80214E9C 00211C9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80214EA0 00211CA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80214EA4 00211CA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80214EA8 00211CA8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80214EAC 00211CAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80214EB0 00211CB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80214EB4 00211CB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80214EB8 00211CB8*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80214EBC 00211CBC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E25D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80214EC0 00211CC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80214EC4 00211CC4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E25D4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80214EC8 00211CC8*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80214ECC 00211CCC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80214ED0 00211CD0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80214ED4 00211CD4*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80214ED8 00211CD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80214EDC 00211CDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80214EE0 00211CE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80214EE4 00211CE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80214EE8 00211CE8*/ PPC::Runtime::ASM::blr();
}