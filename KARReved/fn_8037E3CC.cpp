//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8037E3CC(PPC::Runtime::GCContext* context)
{
/*8037E3CC 0037B1CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8037E3D0 0037B1D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8037E3D4 0037B1D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8037E3D8 0037B1D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8037E3DC 0037B1DC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8037E3E0 0037B1E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*8037E3E4 0037B1E4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8037E3E8 0037B1E8*/ PPC::Runtime::ASM::bne(.L_8037E418);
/*8037E3EC 0037B1EC*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*8037E3F0 0037B1F0*/ PPC::Runtime::ASM::bl(fn_JObj_LoadJoint);
/*8037E3F4 0037B1F4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8037E3F8 0037B1F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8037E3FC 0037B1FC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8037E400 0037B200*/ PPC::Runtime::ASM::bne(.L_8037E418);
/*8037E404 0037B204*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F35F0 @ Get_MemoryOffset_HighBit);
/*8037E408 0037B208*/ PPC::Runtime::ASM::li(context->r4, 0x23);
/*8037E40C 0037B20C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804F35F0 @ Get_MemoryOffset_LowBit);
/*8037E410 0037B210*/ PPC::Runtime::ASM::li(context->r5, lbl_805DBD48 @ Get_MemoryOffset_SDA21);
/*8037E414 0037B214*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8037E418, 0x8037E418) //this is a jump label
/*8037E418 0037B218*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8037E41C 0037B21C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8037E420 0037B220*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8037E424 0037B224*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8037E428 0037B228*/ PPC::Runtime::ASM::blr();
}