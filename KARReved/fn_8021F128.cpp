//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007A5B8.hpp"
#include "fn_8007A5B8.hpp"
#include "fn_8007A920.hpp"
#include "fn_8007A94C.hpp"



void fn_8021F128(PPC::Runtime::GCContext* context)
{
/*8021F128 0021BF28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8021F12C 0021BF2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021F130 0021BF30*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*8021F134 0021BF34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021F138 0021BF38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021F13C 0021BF3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8021F140 0021BF40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8021F144 0021BF44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8021F148 0021BF48*/ PPC::Runtime::ASM::bne(.L_8021F15C);
/*8021F14C 0021BF4C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x24);
/*8021F150 0021BF50*/ PPC::Runtime::ASM::bl(fn_8007A5B8);
/*8021F154 0021BF54*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
/*8021F158 0021BF58*/ PPC::Runtime::ASM::b(.L_8021F168);
RUNTIME_PPC_JUMP_LABEL(.L_8021F15C, 0x8021F15C) //this is a jump label
/*8021F15C 0021BF5C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x68);
/*8021F160 0021BF60*/ PPC::Runtime::ASM::bl(fn_8007A5B8);
/*8021F164 0021BF64*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8021F168, 0x8021F168) //this is a jump label
/*8021F168 0021BF68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
/*8021F16C 0021BF6C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8021F170 0021BF70*/ PPC::Runtime::ASM::beq(.L_8021F1A8);
/*8021F174 0021BF74*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x2f8);
/*8021F178 0021BF78*/ PPC::Runtime::ASM::bl(fn_8007A920);
/*8021F17C 0021BF7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8021F180 0021BF80*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r31));
/*8021F184 0021BF84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb14, context->r31));
/*8021F188 0021BF88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8021F18C 0021BF8C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*8021F190 0021BF90*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb68, context->r31));
/*8021F194 0021BF94*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8021F198 0021BF98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
/*8021F19C 0021BF9C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*8021F1A0 0021BFA0*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f0);
/*8021F1A4 0021BFA4*/ PPC::Runtime::ASM::bl(fn_8007A94C);
RUNTIME_PPC_JUMP_LABEL(.L_8021F1A8, 0x8021F1A8) //this is a jump label
/*8021F1A8 0021BFA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021F1AC 0021BFAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021F1B0 0021BFB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8021F1B4 0021BFB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021F1B8 0021BFB8*/ PPC::Runtime::ASM::blr();
}