//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025F3F0(PPC::Runtime::GCContext* context)
{
/*8025F3F0 0025C1F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025F3F4 0025C1F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025F3F8 0025C1F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F3FC 0025C1FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F400 0025C200*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025F404 0025C204*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025F408 0025C208*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025F40C 0025C20C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F410 0025C210*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F414 0025C214*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F418 0025C218*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025F41C 0025C21C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025F420 0025C220*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025F424 0025C224*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025F428 0025C228*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F42C 0025C22C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F430 0025C230*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025F434 0025C234*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025F438 0025C238*/ PPC::Runtime::ASM::blr();
}