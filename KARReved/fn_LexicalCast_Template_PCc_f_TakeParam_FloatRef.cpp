//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8045D6CC.hpp"



void fn_LexicalCast_Template_PCc_f_TakeParam_FloatRef(PPC::Runtime::GCContext* context)
{
/*8045DC00 0045AA00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8045DC04 0045AA04*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045DC08 0045AA08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DC0C 0045AA0C*/ PPC::Runtime::ASM::bl(fn_8045D6CC);
/*8045DC10 0045AA10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DC14 0045AA14*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8045DC18 0045AA18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045DC1C 0045AA1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045DC20 0045AA20*/ PPC::Runtime::ASM::blr();
}