//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028F74C(PPC::Runtime::GCContext* context)
{
/*8028F74C 0028C54C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8028F750 0028C550*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028F754 0028C554*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028F758 0028C558*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028F75C 0028C55C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8028F760 0028C560*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8028F764 0028C564*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 8028F768 0028C568  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*8028F76C 0028C56C*/ PPC::Runtime::ASM::beq(.L_8028F7CC);
/*8028F770 0028C570*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BE2A8 @ Get_MemoryOffset_HighBit);
/*8028F774 0028C574*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8028F778 0028C578*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BE2A8 @ Get_MemoryOffset_LowBit);
/*8028F77C 0028C57C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8028F780 0028C580*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r29));
/*8028F784 0028C584*/ PPC::Runtime::ASM::b(.L_8028F794);
RUNTIME_PPC_JUMP_LABEL(.L_8028F788, 0x8028F788) //this is a jump label
/*8028F788 0028C588*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r31, 24);
/*8028F78C 0028C58C*/ PPC::Runtime::ASM::bl(fn_HSD_PadRumbleFree);
/*8028F790 0028C590*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8028F794, 0x8028F794) //this is a jump label
/*8028F794 0028C594*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r31, 24);
/*8028F798 0028C598*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x4);
/*8028F79C 0028C59C*/ PPC::Runtime::ASM::blt(.L_8028F788);
/*8028F7A0 0028C5A0*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8028F7A4 0028C5A4*/ PPC::Runtime::ASM::beq(.L_8028F7BC);
/*8028F7A8 0028C5A8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BE2B4 @ Get_MemoryOffset_HighBit);
/*8028F7AC 0028C5AC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028F7B0 0028C5B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BE2B4 @ Get_MemoryOffset_LowBit);
/*8028F7B4 0028C5B4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8028F7B8 0028C5B8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8028F7BC, 0x8028F7BC) //this is a jump label
/*8028F7BC 0028C5BC*/ PPC::Runtime::ASM::extsh.(context->r0, context->r30);
/*8028F7C0 0028C5C0*/ PPC::Runtime::ASM::ble(.L_8028F7CC);
/*8028F7C4 0028C5C4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8028F7C8 0028C5C8*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028F7CC, 0x8028F7CC) //this is a jump label
/*8028F7CC 0028C5CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028F7D0 0028C5D0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8028F7D4 0028C5D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028F7D8 0028C5D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8028F7DC 0028C5DC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028F7E0 0028C5E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028F7E4 0028C5E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8028F7E8 0028C5E8*/ PPC::Runtime::ASM::blr();
}