//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8007B640.hpp"
#include "fn_8007CBB0.hpp"
#include "fn_8006293C.hpp"
#include "fn_80078E74.hpp"
#include "fn_80076088.hpp"
#include "fn_8007617C.hpp"
#include "fn_80076730.hpp"
#include "fn_80076850.hpp"
#include "fn_800628A0.hpp"
#include "fn_branchToMiscFunction.hpp"
#include "fn_80071D7C.hpp"



void fn_80006B58(PPC::Runtime::GCContext* context)
{
/*80006B58 00003958*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80006B5C 0000395C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80006B60 00003960*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80006B64 00003964*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80006B68 00003968*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80006B6C 0000396C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80006B70 00003970*/ PPC::Runtime::ASM::bl(fn_8007B640);
/*80006B74 00003974*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80006B78 00003978*/ PPC::Runtime::ASM::bne(.L_80006B88);
/*80006B7C 0000397C*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80006B80 00003980*/ PPC::Runtime::ASM::bl(fn_804125F8);
/*80006B84 00003984*/ PPC::Runtime::ASM::b(.L_80006BEC);
RUNTIME_PPC_JUMP_LABEL(.L_80006B88, 0x80006B88) //this is a jump label
/*80006B88 00003988*/ PPC::Runtime::ASM::bl(fn_8007CBB0);
/*80006B8C 0000398C*/ PPC::Runtime::ASM::b(.L_80006BEC);
RUNTIME_PPC_JUMP_LABEL(.L_80006B90, 0x80006B90) //this is a jump label
/*80006B90 00003990*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80006B94 00003994*/ PPC::Runtime::ASM::bl(fn_8006293C);
/*80006B98 00003998*/ PPC::Runtime::ASM::bl(fn_80078E74);
/*80006B9C 0000399C*/ PPC::Runtime::ASM::bl(fn_80076088);
/*80006BA0 000039A0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80006BA4 000039A4*/ PPC::Runtime::ASM::beq(.L_80006BB8);
/*80006BA8 000039A8*/ PPC::Runtime::ASM::bl(fn_8007617C);
/*80006BAC 000039AC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80006BB0 000039B0*/ PPC::Runtime::ASM::bne(.L_80006BF8);
/*80006BB4 000039B4*/ PPC::Runtime::ASM::b(.L_80006BEC);
RUNTIME_PPC_JUMP_LABEL(.L_80006BB8, 0x80006BB8) //this is a jump label
/*80006BB8 000039B8*/ PPC::Runtime::ASM::bl(fn_80076730);
/*80006BBC 000039BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80006BC0 000039C0*/ PPC::Runtime::ASM::beq(.L_80006BD4);
/*80006BC4 000039C4*/ PPC::Runtime::ASM::bl(fn_80076850);
/*80006BC8 000039C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80006BCC 000039CC*/ PPC::Runtime::ASM::bne(.L_80006BF8);
/*80006BD0 000039D0*/ PPC::Runtime::ASM::b(.L_80006BEC);
RUNTIME_PPC_JUMP_LABEL(.L_80006BD4, 0x80006BD4) //this is a jump label
/*80006BD4 000039D4*/ PPC::Runtime::ASM::bl(fn_800628A0);
/* 80006BD8 000039D8  54 63 06 3F */ clrlwi. context->r3 , context->r3 , 24
/*80006BDC 000039DC*/ PPC::Runtime::ASM::beq(.L_80006BEC);
/*80006BE0 000039E0*/ PPC::Runtime::ASM::bl(fn_branchToMiscFunction);
/*80006BE4 000039E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80006BE8 000039E8*/ PPC::Runtime::ASM::bne(.L_80006BF8);
RUNTIME_PPC_JUMP_LABEL(.L_80006BEC, 0x80006BEC) //this is a jump label
/*80006BEC 000039EC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e0, context->r31));
/*80006BF0 000039F0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80006BF4 000039F4*/ PPC::Runtime::ASM::beq(.L_80006B90);
RUNTIME_PPC_JUMP_LABEL(.L_80006BF8, 0x80006BF8) //this is a jump label
/*80006BF8 000039F8*/ PPC::Runtime::ASM::bl(fn_HSD_VISetXFBDrawDone);
/*80006BFC 000039FC*/ PPC::Runtime::ASM::bl(fn_80071D7C);
/*80006C00 00003A00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80006C04 00003A04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80006C08 00003A08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80006C0C 00003A0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80006C10 00003A10*/ PPC::Runtime::ASM::blr();
}