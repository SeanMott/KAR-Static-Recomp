//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80203FCC.hpp"
#include "fn_JObj_GetWorldPosition.hpp"



void fn_801A7E68(PPC::Runtime::GCContext* context)
{
/*801A7E68 001A4C68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801A7E6C 001A4C6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A7E70 001A4C70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A7E74 001A4C74*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*801A7E78 001A4C78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801A7E7C 001A4C7C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801A7E80 001A4C80*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801A7E84 001A4C84*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801A7E88 001A4C88*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A7E8C 001A4C8C*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*801A7E90 001A4C90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f0, context->r3));
/*801A7E94 001A4C94*/ PPC::Runtime::ASM::bl(fn_80203FCC);
/*801A7E98 001A4C98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r30));
/*801A7E9C 001A4C9C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801A7EA0 001A4CA0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A7EA4 001A4CA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r3));
/*801A7EA8 001A4CA8*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*801A7EAC 001A4CAC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A7EB0 001A4CB0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A7EB4 001A4CB4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801A7EB8 001A4CB8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801A7EBC 001A4CBC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A7EC0 001A4CC0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801A7EC4 001A4CC4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801A7EC8 001A4CC8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*801A7ECC 001A4CCC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A7ED0 001A4CD0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A7ED4 001A4CD4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801A7ED8 001A4CD8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A7EDC 001A4CDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801A7EE0 001A4CE0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801A7EE4 001A4CE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A7EE8 001A4CE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A7EEC 001A4CEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801A7EF0 001A4CF0*/ PPC::Runtime::ASM::blr();
}