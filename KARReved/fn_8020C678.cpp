//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8023641C.hpp"
#include "fn_8023641C.hpp"
#include "fn_80236778.hpp"
#include "fn_80236778.hpp"



void fn_8020C678(PPC::Runtime::GCContext* context)
{
/*8020C678 00209478*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020C67C 0020947C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020C680 00209480*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020C684 00209484*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020C688 00209488*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020C68C 0020948C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa3c, context->r3));
/*8020C690 00209490*/ PPC::Runtime::ASM::bl(fn_8023641C);
/*8020C694 00209494*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa40, context->r31));
/*8020C698 00209498*/ PPC::Runtime::ASM::bl(fn_8023641C);
/*8020C69C 0020949C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa3c, context->r31));
/*8020C6A0 002094A0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8020C6A4 002094A4*/ PPC::Runtime::ASM::beq(.L_8020C6B4);
/*8020C6A8 002094A8*/ PPC::Runtime::ASM::bl(fn_80236778);
/*8020C6AC 002094AC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*8020C6B0 002094B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa3c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8020C6B4, 0x8020C6B4) //this is a jump label
/*8020C6B4 002094B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa40, context->r31));
/*8020C6B8 002094B8*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8020C6BC 002094BC*/ PPC::Runtime::ASM::beq(.L_8020C6CC);
/*8020C6C0 002094C0*/ PPC::Runtime::ASM::bl(fn_80236778);
/*8020C6C4 002094C4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*8020C6C8 002094C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa40, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8020C6CC, 0x8020C6CC) //this is a jump label
/*8020C6CC 002094CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020C6D0 002094D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020C6D4 002094D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020C6D8 002094D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020C6DC 002094DC*/ PPC::Runtime::ASM::blr();
}