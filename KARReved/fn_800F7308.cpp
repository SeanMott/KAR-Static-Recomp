//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D8A60.hpp"
#include "fn_800D8A4C.hpp"



void fn_800F7308(PPC::Runtime::GCContext* context)
{
/*800F7308 000F4108*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F730C 000F410C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7310 000F4110*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800F7314 000F4114*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7318 000F4118*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F731C 000F411C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800F7320 000F4120*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F7324 000F4124*/ PPC::Runtime::ASM::beq(.L_800F7350);
/*800F7328 000F4128*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F732C 000F412C*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x64);
/*800F7330 000F4130*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800F7334 000F4134*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*800F7338 000F4138*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*800F733C 000F413C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r8));
/*800F7340 000F4140*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r8));
/*800F7344 000F4144*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r8));
/*800F7348 000F4148*/ PPC::Runtime::ASM::bl(fn_800D8A60);
/*800F734C 000F414C*/ PPC::Runtime::ASM::b(.L_800F7358);
RUNTIME_PPC_JUMP_LABEL(.L_800F7350, 0x800F7350) //this is a jump label
/*800F7350 000F4150*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x64);
/*800F7354 000F4154*/ PPC::Runtime::ASM::bl(fn_800D8A4C);
RUNTIME_PPC_JUMP_LABEL(.L_800F7358, 0x800F7358) //this is a jump label
/*800F7358 000F4158*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F735C 000F415C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7360 000F4160*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7364 000F4164*/ PPC::Runtime::ASM::blr();
}