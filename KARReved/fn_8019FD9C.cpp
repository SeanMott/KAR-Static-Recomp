//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_8019FD9C(PPC::Runtime::GCContext* context)
{
/*8019FD9C 0019CB9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8019FDA0 0019CBA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019FDA4 0019CBA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8019FDA8 0019CBA8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*8019FDAC 0019CBAC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8019FDB0 0019CBB0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019FDB4 0019CBB4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8019FDB8 0019CBB8*/ PPC::Runtime::ASM::bl(fn_80190948);
/*8019FDBC 0019CBBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*8019FDC0 0019CBC0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8019FDC4 0019CBC4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019FDC8 0019CBC8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019FDCC 0019CBCC*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*8019FDD0 0019CBD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8019FDD4 0019CBD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019FDD8 0019CBD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019FDDC 0019CBDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8019FDE0 0019CBE0*/ PPC::Runtime::ASM::blr();
}