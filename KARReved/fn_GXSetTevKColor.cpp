//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetTevKColor(PPC::Runtime::GCContext* context)
{
/*803CEE20 003CBC20*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r4));
/*803CEE24 003CBC24*/ PPC::Runtime::ASM::slwi(context->r5, context->r3, 1);
/*803CEE28 003CBC28*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803CEE2C 003CBC2C*/ PPC::Runtime::ASM::addi(context->r7, context->r5, 0xe0);
/*803CEE30 003CBC30*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 12);
/*803CEE34 003CBC34*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 0, 24, 31);
/*803CEE38 003CBC38*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r4));
/*803CEE3C 003CBC3C*/ PPC::Runtime::ASM::lbz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803CEE40 003CBC40*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 12, 7);
/*803CEE44 003CBC44*/ PPC::Runtime::ASM::oris(context->r8, context->r0, 0x80);
/*803CEE48 003CBC48*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CEE4C 003CBC4C*/ PPC::Runtime::ASM::slwi(context->r7, context->r7, 24);
/*803CEE50 003CBC50*/ PPC::Runtime::ASM::li(context->r0, 0x61);
/*803CEE54 003CBC54*/ PPC::Runtime::ASM::lis(context->r4, 0xcc01);
/*803CEE58 003CBC58*/ PPC::Runtime::ASM::slwi(context->r6, context->r6, 12);
/*803CEE5C 003CBC5C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE60 003CBC60*/ PPC::Runtime::ASM::rlwimi(context->r7, context->r8, 0, 8, 31);
/*803CEE64 003CBC64*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE68 003CBC68*/ PPC::Runtime::ASM::rlwimi(context->r6, context->r9, 0, 24, 31);
/*803CEE6C 003CBC6C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0xe1);
/*803CEE70 003CBC70*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE74 003CBC74*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r6, 0, 12, 7);
/*803CEE78 003CBC78*/ PPC::Runtime::ASM::oris(context->r6, context->r0, 0x80);
/*803CEE7C 003CBC7C*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 24);
/*803CEE80 003CBC80*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 0, 8, 31);
/*803CEE84 003CBC84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r4));
/*803CEE88 003CBC88*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CEE8C 003CBC8C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CEE90 003CBC90*/ PPC::Runtime::ASM::blr();
}