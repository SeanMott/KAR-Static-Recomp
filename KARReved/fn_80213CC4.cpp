//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204FAC.hpp"
#include "fn_801FC398.hpp"



void fn_80213CC4(PPC::Runtime::GCContext* context)
{
/*80213CC4 00210AC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80213CC8 00210AC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80213CCC 00210ACC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80213CD0 00210AD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80213CD4 00210AD4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80213CD8 00210AD8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c0, context->r3));
/*80213CDC 00210ADC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x95c, context->r3));
/*80213CE0 00210AE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80213CE4 00210AE4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80213CE8 00210AE8*/ PPC::Runtime::ASM::bne(.L_80213CFC);
/*80213CEC 00210AEC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80213CF0 00210AF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r31));
/*80213CF4 00210AF4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x95c, context->r31));
/*80213CF8 00210AF8*/ PPC::Runtime::ASM::bl(fn_80204FAC);
RUNTIME_PPC_JUMP_LABEL(.L_80213CFC, 0x80213CFC) //this is a jump label
/*80213CFC 00210AFC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r31));
/*80213D00 00210B00*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80213D04 00210B04*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*80213D08 00210B08*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E25A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80213D0C 00210B0C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r31));
/*80213D10 00210B10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80213D14 00210B14*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80213D18 00210B18*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E25AC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80213D1C 00210B1C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x87c, context->r31));
/*80213D20 00210B20*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*80213D24 00210B24*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80213D28 00210B28*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80213D2C 00210B2C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80213D30 00210B30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r31));
/*80213D34 00210B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80213D38 00210B38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80213D3C 00210B3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80213D40 00210B40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80213D44 00210B44*/ PPC::Runtime::ASM::blr();
}