//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8038CB78.hpp"



void fn_80391EB8(PPC::Runtime::GCContext* context)
{
/*80391EB8 0038ECB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80391EBC 0038ECBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80391EC0 0038ECC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80391EC4 0038ECC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80391EC8 0038ECC8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80391ECC 0038ECCC*/ PPC::Runtime::ASM::beq(.L_80391EE8);
/*80391ED0 0038ECD0*/ PPC::Runtime::ASM::lis(context->r5, lbl_804F5174 @ Get_MemoryOffset_HighBit);
/*80391ED4 0038ECD4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*80391ED8 0038ECD8*/ PPC::Runtime::ASM::addi(context->r0, context->r5, lbl_804F5174 @ Get_MemoryOffset_LowBit);
/*80391EDC 0038ECDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80391EE0 0038ECE0*/ PPC::Runtime::ASM::ble(.L_80391EE8);
/*80391EE4 0038ECE4*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80391EE8, 0x80391EE8) //this is a jump label
/*80391EE8 0038ECE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80391EEC 0038ECEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80391EF0 0038ECF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80391EF4 0038ECF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80391EF8 0038ECF8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80391EFC 0038ECFC*/ PPC::Runtime::ASM::blr();
}