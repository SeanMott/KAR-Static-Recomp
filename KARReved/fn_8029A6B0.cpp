//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029A6B0(PPC::Runtime::GCContext* context)
{
/*8029A6B0 002974B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029A6B4 002974B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029A6B8 002974B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A6BC 002974BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A6C0 002974C0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A6C4 002974C4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029A6C8 002974C8*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029A6CC 002974CC*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029A6D0 002974D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A6D4 002974D4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A6D8 002974D8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029A6DC 002974DC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A6E0 002974E0*/ PPC::Runtime::ASM::bctrl();
/*8029A6E4 002974E4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029A6E8 002974E8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A6EC 002974EC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A6F0 002974F0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029A6F4 002974F4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A6F8 002974F8*/ PPC::Runtime::ASM::bctrl();
/*8029A6FC 002974FC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029A700 00297500*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029A704 00297504*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*8029A708 00297508*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029A70C 0029750C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A710 00297510*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A714 00297514*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A718 00297518*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029A71C 0029751C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029A720 00297520*/ PPC::Runtime::ASM::blr();
}