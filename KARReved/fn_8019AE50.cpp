//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8019AE50(PPC::Runtime::GCContext* context)
{
/*8019AE50 00197C50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019AE54 00197C54*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019AE58 00197C58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019AE5C 00197C5C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019AE60 00197C60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x670, context->r3));
/*8019AE64 00197C64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*8019AE68 00197C68*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8019AE6C 00197C6C*/ PPC::Runtime::ASM::beq(.L_8019AE84);
/*8019AE70 00197C70*/ PPC::Runtime::ASM::lis(context->r4, lbl_804AE184 @ Get_MemoryOffset_HighBit);
/*8019AE74 00197C74*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." Get_MemoryOffset_SDA21);
/*8019AE78 00197C78*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804AE184 @ Get_MemoryOffset_LowBit);
/*8019AE7C 00197C7C*/ PPC::Runtime::ASM::li(context->r4, 0x1f9);
/*8019AE80 00197C80*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8019AE84, 0x8019AE84) //this is a jump label
/*8019AE84 00197C84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*8019AE88 00197C88*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8019AE8C 00197C8C*/ PPC::Runtime::ASM::beq(.L_8019AEA8);
/*8019AE90 00197C90*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AE1B8 @ Get_MemoryOffset_HighBit);
/*8019AE94 00197C94*/ PPC::Runtime::ASM::lis(context->r5, lbl_804AE184 @ Get_MemoryOffset_HighBit);
/*8019AE98 00197C98*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804AE1B8 @ Get_MemoryOffset_LowBit);
/*8019AE9C 00197C9C*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*8019AEA0 00197CA0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804AE184 @ Get_MemoryOffset_LowBit);
/*8019AEA4 00197CA4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8019AEA8, 0x8019AEA8) //this is a jump label
/*8019AEA8 00197CA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r31));
/*8019AEAC 00197CAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019AEB0 00197CB0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*8019AEB4 00197CB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019AEB8 00197CB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019AEBC 00197CBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8019AEC0 00197CC0*/ PPC::Runtime::ASM::blr();
}