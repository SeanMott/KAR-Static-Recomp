//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CA294.hpp"



void fn_801E0EC0(PPC::Runtime::GCContext* context)
{
/*801E0EC0 001DDCC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E0EC4 001DDCC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E0EC8 001DDCC8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801E0ECC 001DDCCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0ED0 001DDCD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0ED4 001DDCD4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E0ED8 001DDCD8*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0EDC 001DDCDC*/ PPC::Runtime::ASM::extrwi(context->r0, context->r5, 2, 24);
/*801E0EE0 001DDCE0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801E0EE4 001DDCE4*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r0, 6, 24, 25);
/*801E0EE8 001DDCE8*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0EEC 001DDCEC*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0EF0 001DDCF0*/ PPC::Runtime::ASM::extrwi(context->r0, context->r5, 2, 26);
/*801E0EF4 001DDCF4*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801E0EF8 001DDCF8*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r0, 4, 26, 27);
/*801E0EFC 001DDCFC*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F00 001DDD00*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F04 001DDD04*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 3, 28, 28);
/*801E0F08 001DDD08*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F0C 001DDD0C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F10 001DDD10*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 2, 29, 29);
/*801E0F14 001DDD14*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F18 001DDD18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F1C 001DDD1C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 31, 31);
/*801E0F20 001DDD20*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801E0F24 001DDD24*/ PPC::Runtime::ASM::bl(fn_801CA294);
/*801E0F28 001DDD28*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801E0F2C 001DDD2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r31));
/*801E0F30 001DDD30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0F34 001DDD34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0F38 001DDD38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E0F3C 001DDD3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E0F40 001DDD40*/ PPC::Runtime::ASM::blr();
}