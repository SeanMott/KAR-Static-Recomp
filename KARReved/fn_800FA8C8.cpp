//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_800FA8C8(PPC::Runtime::GCContext* context)
{
/*800FA8C8 000F76C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FA8CC 000F76CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FA8D0 000F76D0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FA8D4 000F76D4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FA8D8 000F76D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA8DC 000F76DC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*800FA8E0 000F76E0*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800FA8E4 000F76E4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FA8E8 000F76E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FA8EC 000F76EC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FA8F0 000F76F0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FA8F4 000F76F4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FA8F8 000F76F8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FA8FC 000F76FC*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FA900 000F7700*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA904 000F7704*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FA908 000F7708*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FA90C 000F770C*/ PPC::Runtime::ASM::blr();
}