//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memcpy.hpp"



void fn___StringWrite(PPC::Runtime::GCContext* context)
{
/*803B4E60 003B1C60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803B4E64 003B1C64*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B4E68 003B1C68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B4E6C 003B1C6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B4E70 003B1C70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803B4E74 003B1C74*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803B4E78 003B1C78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803B4E7C 003B1C7C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803B4E80 003B1C80*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r5);
/*803B4E84 003B1C84*/ PPC::Runtime::ASM::cmplw(context->r0, context->r6);
/*803B4E88 003B1C88*/ PPC::Runtime::ASM::subf(context->r31, context->r3, context->r6);
/*803B4E8C 003B1C8C*/ PPC::Runtime::ASM::bgt(.L_803B4E94);
/*803B4E90 003B1C90*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
RUNTIME_PPC_JUMP_LABEL(.L_803B4E94, 0x803B4E94) //this is a jump label
/*803B4E94 003B1C94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803B4E98 003B1C98*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*803B4E9C 003B1C9C*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r3);
/*803B4EA0 003B1CA0*/ PPC::Runtime::ASM::bl(memcpy);
/*803B4EA4 003B1CA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*803B4EA8 003B1CA8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803B4EAC 003B1CAC*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r31);
/*803B4EB0 003B1CB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*803B4EB4 003B1CB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B4EB8 003B1CB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803B4EBC 003B1CBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B4EC0 003B1CC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B4EC4 003B1CC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803B4EC8 003B1CC8*/ PPC::Runtime::ASM::blr();
}