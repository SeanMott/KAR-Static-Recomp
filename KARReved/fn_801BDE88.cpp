//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019F238.hpp"
#include "fn_8008238C.hpp"



void fn_801BDE88(PPC::Runtime::GCContext* context)
{
/*801BDE88 001BAC88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BDE8C 001BAC8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BDE90 001BAC90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BDE94 001BAC94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BDE98 001BAC98*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801BDE9C 001BAC9C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BDEA0 001BACA0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801BDEA4 001BACA4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa9d, context->r3));
/* 801BDEA8 001BACA8  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*801BDEAC 001BACAC*/ PPC::Runtime::ASM::beq(.L_801BDEF4);
/*801BDEB0 001BACB0*/ PPC::Runtime::ASM::bl(fn_8019F238);
/*801BDEB4 001BACB4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BDEB8 001BACB8*/ PPC::Runtime::ASM::beq(.L_801BDEF4);
/*801BDEBC 001BACBC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r30));
/* 801BDEC0 001BACC0  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801BDEC4 001BACC4*/ PPC::Runtime::ASM::bne(.L_801BDEF4);
/*801BDEC8 001BACC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r30));
/*801BDECC 001BACCC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801BDED0 001BACD0*/ PPC::Runtime::ASM::bne(.L_801BDEF4);
/*801BDED4 001BACD4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c8, context->r30));
/*801BDED8 001BACD8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801BDEDC 001BACDC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x828);
/*801BDEE0 001BACE0*/ PPC::Runtime::ASM::bl(fn_8008238C);
/*801BDEE4 001BACE4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BDEE8 001BACE8*/ PPC::Runtime::ASM::beq(.L_801BDEF4);
/*801BDEEC 001BACEC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801BDEF0 001BACF0*/ PPC::Runtime::ASM::b(.L_801BDEF8);
RUNTIME_PPC_JUMP_LABEL(.L_801BDEF4, 0x801BDEF4) //this is a jump label
/*801BDEF4 001BACF4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BDEF8, 0x801BDEF8) //this is a jump label
/*801BDEF8 001BACF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BDEFC 001BACFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BDF00 001BAD00*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BDF04 001BAD04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BDF08 001BAD08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BDF0C 001BAD0C*/ PPC::Runtime::ASM::blr();
}