//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_802614A8(PPC::Runtime::GCContext* context)
{
/*802614A8 0025E2A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802614AC 0025E2AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802614B0 0025E2B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802614B4 0025E2B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802614B8 0025E2B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802614BC 0025E2BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802614C0 0025E2C0*/ PPC::Runtime::ASM::bl(fn_80250340);
/*802614C4 0025E2C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2FA0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802614C8 0025E2C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802614CC 0025E2CC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2FA4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802614D0 0025E2D0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*802614D4 0025E2D4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802614D8 0025E2D8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802614DC 0025E2DC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802614E0 0025E2E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802614E4 0025E2E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802614E8 0025E2E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802614EC 0025E2EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802614F0 0025E2F0*/ PPC::Runtime::ASM::blr();
}