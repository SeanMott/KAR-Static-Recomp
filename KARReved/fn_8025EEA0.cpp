//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025EEA0(PPC::Runtime::GCContext* context)
{
/*8025EEA0 0025BCA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025EEA4 0025BCA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025EEA8 0025BCA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025EEAC 0025BCAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025EEB0 0025BCB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025EEB4 0025BCB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025EEB8 0025BCB8*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025EEBC 0025BCBC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025EEC0 0025BCC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025EEC4 0025BCC4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F34 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025EEC8 0025BCC8*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025EECC 0025BCCC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025EED0 0025BCD0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025EED4 0025BCD4*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025EED8 0025BCD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025EEDC 0025BCDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025EEE0 0025BCE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025EEE4 0025BCE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025EEE8 0025BCE8*/ PPC::Runtime::ASM::blr();
}