//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGet_80536EDC_Ptr.hpp"
#include "fn_SomehowRelatedToTheCSSColorChangingButIsCalledOtherPlaces.hpp"
#include "fn_8003D5F0.hpp"



void fn_8000CA3C(PPC::Runtime::GCContext* context)
{
/*8000CA3C 0000983C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000CA40 00009840*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000CA44 00009844*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000CA48 00009848*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000CA4C 0000984C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000CA50 00009850*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000CA54 00009854*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000CA58 00009858*/ PPC::Runtime::ASM::bl(fn_gmGet_80536EDC_Ptr);
/*8000CA5C 0000985C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000CA60 00009860*/ PPC::Runtime::ASM::bl(fn_SomehowRelatedToTheCSSColorChangingButIsCalledOtherPlaces);
/*8000CA64 00009864*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8000CA68 00009868*/ PPC::Runtime::ASM::beq(.L_8000CA74);
/*8000CA6C 0000986C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8000CA70 00009870*/ PPC::Runtime::ASM::b(.L_8000CAC4);
RUNTIME_PPC_JUMP_LABEL(.L_8000CA74, 0x8000CA74) //this is a jump label
/*8000CA74 00009874*/ PPC::Runtime::ASM::bl(fn_8003D5F0);
/*8000CA78 00009878*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8000CA7C 0000987C*/ PPC::Runtime::ASM::beq(.L_8000CA88);
/*8000CA80 00009880*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8000CA84 00009884*/ PPC::Runtime::ASM::b(.L_8000CAC4);
RUNTIME_PPC_JUMP_LABEL(.L_8000CA88, 0x8000CA88) //this is a jump label
/*8000CA88 00009888*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a, context->r30));
/* 8000CA8C 0000988C  54 00 C0 02 */ extlwi context->r0 , context->r0 , 2 , 24
/*8000CA90 00009890*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 31);
/*8000CA94 00009894*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8000CA98 00009898*/ PPC::Runtime::ASM::beq(.L_8000CAA4);
/*8000CA9C 0000989C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8000CAA0 000098A0*/ PPC::Runtime::ASM::b(.L_8000CAC4);
RUNTIME_PPC_JUMP_LABEL(.L_8000CAA4, 0x8000CAA4) //this is a jump label
/*8000CAA4 000098A4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8000CAA8 000098A8*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8000CAAC 000098AC*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000CAB0 000098B0*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r0);
/*8000CAB4 000098B4*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*8000CAB8 000098B8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*8000CABC 000098BC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*8000CAC0 000098C0*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_8000CAC4, 0x8000CAC4) //this is a jump label
/*8000CAC4 000098C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000CAC8 000098C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000CACC 000098CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000CAD0 000098D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000CAD4 000098D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000CAD8 000098D8*/ PPC::Runtime::ASM::blr();
}