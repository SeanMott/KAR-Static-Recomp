//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A6038(PPC::Runtime::GCContext* context)
{
/*802A6038 002A2E38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A603C 002A2E3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A6040 002A2E40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A6044 002A2E44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A6048 002A2E48*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A604C 002A2E4C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A6050 002A2E50  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A6054 002A2E54*/ PPC::Runtime::ASM::beq(.L_802A612C);
/*802A6058 002A2E58*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C336C @ Get_MemoryOffset_HighBit);
/*802A605C 002A2E5C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A6060 002A2E60*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C336C @ Get_MemoryOffset_LowBit);
/*802A6064 002A2E64*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A6068 002A2E68*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A606C 002A2E6C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A6070 002A2E70*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A6074 002A2E74*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A6078 002A2E78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A607C 002A2E7C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A6080 002A2E80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A6084 002A2E84*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A6088 002A2E88*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A608C 002A2E8C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A6090 002A2E90*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A6094 002A2E94*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A6098 002A2E98*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A609C 002A2E9C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60A0 002A2EA0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60A4 002A2EA4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A60A8 002A2EA8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60AC 002A2EAC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60B0 002A2EB0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A60B4 002A2EB4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60B8 002A2EB8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60BC 002A2EBC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A60C0 002A2EC0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60C4 002A2EC4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60C8 002A2EC8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A60CC 002A2ECC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60D0 002A2ED0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60D4 002A2ED4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A60D8 002A2ED8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60DC 002A2EDC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60E0 002A2EE0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A60E4 002A2EE4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60E8 002A2EE8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60EC 002A2EEC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A60F0 002A2EF0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A60F4 002A2EF4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A60F8 002A2EF8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A60FC 002A2EFC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A6100 002A2F00*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A6104 002A2F04*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A6108 002A2F08*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A610C 002A2F0C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A6110 002A2F10*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A6114 002A2F14*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A6118 002A2F18*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A611C 002A2F1C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A6120 002A2F20*/ PPC::Runtime::ASM::ble(.L_802A612C);
/*802A6124 002A2F24*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A6128 002A2F28*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A612C, 0x802A612C) //this is a jump label
/*802A612C 002A2F2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A6130 002A2F30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A6134 002A2F34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A6138 002A2F38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A613C 002A2F3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A6140 002A2F40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A6144 002A2F44*/ PPC::Runtime::ASM::blr();
}