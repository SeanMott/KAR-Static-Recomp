//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013121C.hpp"
#include "fn_80059520.hpp"



void fn_8015F5E0(PPC::Runtime::GCContext* context)
{
/*8015F5E0 0015C3E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015F5E4 0015C3E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015F5E8 0015C3E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F5EC 0015C3EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015F5F0 0015C3F0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015F5F4 0015C3F4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015F5F8 0015C3F8*/ PPC::Runtime::ASM::bl(fn_8013121C);
/*8015F5FC 0015C3FC*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1267 @ Get_MemoryOffset_HighBit);
/*8015F600 0015C400*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8015F604 0015C404*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1267 @ Get_MemoryOffset_LowBit);
/*8015F608 0015C408*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8015F60C 0015C40C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x900);
/*8015F610 0015C410*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8015F614 0015C414*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8015F618 0015C418*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015F61C 0015C41C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015F620 0015C420*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015F624 0015C424*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015F628 0015C428*/ PPC::Runtime::ASM::blr();
}