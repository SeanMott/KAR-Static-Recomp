//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5F24.hpp"



void fn_800B8CBC(PPC::Runtime::GCContext* context)
{
/*800B8CBC 000B5ABC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B8CC0 000B5AC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B8CC4 000B5AC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B8CC8 000B5AC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B8CCC 000B5ACC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800B8CD0 000B5AD0*/ PPC::Runtime::ASM::bl(fn_800B5F24);
/*800B8CD4 000B5AD4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B8CD8 000B5AD8*/ PPC::Runtime::ASM::beq(.L_800B8CEC);
/*800B8CDC 000B5ADC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r3));
/*800B8CE0 000B5AE0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800B8CE4 000B5AE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800B8CE8 000B5AE8*/ PPC::Runtime::ASM::b(.L_800B8CF0);
RUNTIME_PPC_JUMP_LABEL(.L_800B8CEC, 0x800B8CEC) //this is a jump label
/*800B8CEC 000B5AEC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B8CF0, 0x800B8CF0) //this is a jump label
/*800B8CF0 000B5AF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B8CF4 000B5AF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B8CF8 000B5AF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B8CFC 000B5AFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B8D00 000B5B00*/ PPC::Runtime::ASM::blr();
}