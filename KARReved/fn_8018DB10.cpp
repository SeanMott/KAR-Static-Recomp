//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8018DB10(PPC::Runtime::GCContext* context)
{
/*8018DB10 0018A910*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8018DB14 0018A914*/ PPC::Runtime::ASM::mflr(context->r0);
/*8018DB18 0018A918*/ PPC::Runtime::ASM::lis(context->r5, lbl_80559BF4 @ Get_MemoryOffset_HighBit);
/*8018DB1C 0018A91C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018DB20 0018A920*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018DB24 0018A924*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8018DB28 0018A928*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_80559BF4 @ Get_MemoryOffset_LowBit);
/*8018DB2C 0018A92C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r4));
/*8018DB30 0018A930*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*8018DB34 0018A934*/ PPC::Runtime::ASM::beq(.L_8018DB5C);
/*8018DB38 0018A938*/ PPC::Runtime::ASM::lis(context->r3, lbl_804ADB1C @ Get_MemoryOffset_HighBit);
/*8018DB3C 0018A93C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804ADB1C @ Get_MemoryOffset_LowBit);
/*8018DB40 0018A940*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8018DB44 0018A944*/ PPC::Runtime::ASM::bl(OSReport);
/*8018DB48 0018A948*/ PPC::Runtime::ASM::lis(context->r3, lbl_804ADAE8 @ Get_MemoryOffset_HighBit);
/*8018DB4C 0018A94C*/ PPC::Runtime::ASM::li(context->r4, 0x3fd);
/*8018DB50 0018A950*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804ADAE8 @ Get_MemoryOffset_LowBit);
/*8018DB54 0018A954*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6EE0 @ Get_MemoryOffset_SDA21);
/*8018DB58 0018A958*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8018DB5C, 0x8018DB5C) //this is a jump label
/*8018DB5C 0018A95C*/ PPC::Runtime::ASM::mulli(context->r4, context->r31, 0x1c);
/*8018DB60 0018A960*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559BF4 @ Get_MemoryOffset_HighBit);
/*8018DB64 0018A964*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_80559BF4 @ Get_MemoryOffset_LowBit);
/*8018DB68 0018A968*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*8018DB6C 0018A96C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xc);
/*8018DB70 0018A970*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018DB74 0018A974*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018DB78 0018A978*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8018DB7C 0018A97C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8018DB80 0018A980*/ PPC::Runtime::ASM::blr();
}