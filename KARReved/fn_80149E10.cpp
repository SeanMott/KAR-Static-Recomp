//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801311EC.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_80149E10(PPC::Runtime::GCContext* context)
{
/*80149E10 00146C10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80149E14 00146C14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80149E18 00146C18*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1183 @ Get_MemoryOffset_HighBit);
/*80149E1C 00146C1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80149E20 00146C20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80149E24 00146C24*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80149E28 00146C28*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1183 @ Get_MemoryOffset_LowBit);
/*80149E2C 00146C2C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80149E30 00146C30*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80149E34 00146C34*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x35c);
/*80149E38 00146C38*/ PPC::Runtime::ASM::bl(fn_801311EC);
/*80149E3C 00146C3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80149E40 00146C40*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80149E44 00146C44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80149E48 00146C48*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*80149E4C 00146C4C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80149E50 00146C50*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80149E54 00146C54*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80149E58 00146C58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80149E5C 00146C5C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x4);
/*80149E60 00146C60*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x1c);
/*80149E64 00146C64*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80149E68 00146C68*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80149E6C 00146C6C*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80149E70 00146C70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80149E74 00146C74*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x8);
/*80149E78 00146C78*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*80149E7C 00146C7C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80149E80 00146C80*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80149E84 00146C84*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80149E88 00146C88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80149E8C 00146C8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80149E90 00146C90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80149E94 00146C94*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80149E98 00146C98*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80149E9C 00146C9C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80149EA0 00146CA0*/ PPC::Runtime::ASM::blr();
}