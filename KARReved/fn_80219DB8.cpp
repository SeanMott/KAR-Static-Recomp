//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80219DB8(PPC::Runtime::GCContext* context)
{
/*80219DB8 00216BB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80219DBC 00216BBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80219DC0 00216BC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80219DC4 00216BC4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80219DC8 00216BC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80219DCC 00216BCC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80219DD0 00216BD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80219DD4 00216BD4*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80219DD8 00216BD8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E26A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80219DDC 00216BDC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80219DE0 00216BE0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E26A4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80219DE4 00216BE4*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80219DE8 00216BE8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80219DEC 00216BEC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80219DF0 00216BF0*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80219DF4 00216BF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80219DF8 00216BF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80219DFC 00216BFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80219E00 00216C00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80219E04 00216C04*/ PPC::Runtime::ASM::blr();
}