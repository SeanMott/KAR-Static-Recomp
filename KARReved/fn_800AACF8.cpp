//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800AACF8(PPC::Runtime::GCContext* context)
{
/*800AACF8 000A7AF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AACFC 000A7AFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AAD00 000A7B00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AAD04 000A7B04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AAD08 000A7B08*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AAD0C 000A7B0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
/*800AAD10 000A7B10*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800AAD14 000A7B14*/ PPC::Runtime::ASM::bne(.L_800AAD28);
/*800AAD18 000A7B18*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557034 @ Get_MemoryOffset_HighBit);
/*800AAD1C 000A7B1C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*800AAD20 000A7B20*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80557034 @ Get_MemoryOffset_LowBit);
/*800AAD24 000A7B24*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
RUNTIME_PPC_JUMP_LABEL(.L_800AAD28, 0x800AAD28) //this is a jump label
/*800AAD28 000A7B28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*800AAD2C 000A7B2C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800AAD30 000A7B30*/ PPC::Runtime::ASM::beq(.L_800AAD3C);
/*800AAD34 000A7B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800AAD38 000A7B38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800AAD3C, 0x800AAD3C) //this is a jump label
/*800AAD3C 000A7B3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800AAD40 000A7B40*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800AAD44 000A7B44*/ PPC::Runtime::ASM::beq(.L_800AAD54);
/*800AAD48 000A7B48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*800AAD4C 000A7B4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*800AAD50 000A7B50*/ PPC::Runtime::ASM::b(.L_800AAD70);
RUNTIME_PPC_JUMP_LABEL(.L_800AAD54, 0x800AAD54) //this is a jump label
/*800AAD54 000A7B54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*800AAD58 000A7B58*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800AAD5C 000A7B5C*/ PPC::Runtime::ASM::beq(.L_800AAD68);
/*800AAD60 000A7B60*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD69C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AAD64 000A7B64*/ PPC::Runtime::ASM::b(.L_800AAD70);
RUNTIME_PPC_JUMP_LABEL(.L_800AAD68, 0x800AAD68) //this is a jump label
/*800AAD68 000A7B68*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AAD6C 000A7B6C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD69C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800AAD70, 0x800AAD70) //this is a jump label
/*800AAD70 000A7B70*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557008 @ Get_MemoryOffset_HighBit);
/*800AAD74 000A7B74*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800AAD78 000A7B78*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80557008 @ Get_MemoryOffset_LowBit);
/*800AAD7C 000A7B7C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*800AAD80 000A7B80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AAD84 000A7B84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AAD88 000A7B88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AAD8C 000A7B8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AAD90 000A7B90*/ PPC::Runtime::ASM::blr();
}