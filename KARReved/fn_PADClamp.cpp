//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_ClampStick.hpp"
#include "fn_ClampStick.hpp"



void fn_PADClamp(PPC::Runtime::GCContext* context)
{
/*803DBB58 003D8958*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DBB5C 003D895C*/ PPC::Runtime::ASM::lis(context->r4, ByteArray_3 @ Get_MemoryOffset_HighBit);
/*803DBB60 003D8960*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DBB64 003D8964*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803DBB68 003D8968*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DBB6C 003D896C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803DBB70 003D8970*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803DBB74 003D8974*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DBB78 003D8978*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803DBB7C 003D897C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803DBB80 003D8980*/ PPC::Runtime::ASM::addi(context->r28, context->r4, ByteArray_3 @ Get_MemoryOffset_LowBit);
/*803DBB84 003D8984*/ PPC::Runtime::ASM::addi(context->r31, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803DBB88, 0x803DBB88) //this is a jump label
/*803DBB88 003D8988*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r29));
/*803DBB8C 003D898C*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*803DBB90 003D8990*/ PPC::Runtime::ASM::bne(.L_803DBC3C);
/*803DBB94 003D8994*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r28));
/*803DBB98 003D8998*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x2);
/*803DBB9C 003D899C*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*803DBBA0 003D89A0*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x3);
/*803DBBA4 003D89A4*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r28));
/*803DBBA8 003D89A8*/ PPC::Runtime::ASM::bl(fn_ClampStick);
/*803DBBAC 003D89AC*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r28));
/*803DBBB0 003D89B0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x4);
/*803DBBB4 003D89B4*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r28));
/*803DBBB8 003D89B8*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x5);
/*803DBBBC 003D89BC*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r28));
/*803DBBC0 003D89C0*/ PPC::Runtime::ASM::bl(fn_ClampStick);
/*803DBBC4 003D89C4*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r29));
/*803DBBC8 003D89C8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803DBBCC 003D89CC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803DBBD0 003D89D0*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*803DBBD4 003D89D4*/ PPC::Runtime::ASM::bgt(.L_803DBBE4);
/*803DBBD8 003D89D8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803DBBDC 003D89DC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r29));
/*803DBBE0 003D89E0*/ PPC::Runtime::ASM::b(.L_803DBC00);
RUNTIME_PPC_JUMP_LABEL(.L_803DBBE4, 0x803DBBE4) //this is a jump label
/*803DBBE4 003D89E4*/ PPC::Runtime::ASM::cmplw(context->r3, context->r4);
/*803DBBE8 003D89E8*/ PPC::Runtime::ASM::bge(.L_803DBBF0);
/*803DBBEC 003D89EC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803DBBF0, 0x803DBBF0) //this is a jump label
/*803DBBF0 003D89F0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803DBBF4 003D89F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r29));
/*803DBBF8 003D89F8*/ PPC::Runtime::ASM::subf(context->r0, context->r3, context->r0);
/*803DBBFC 003D89FC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803DBC00, 0x803DBC00) //this is a jump label
/*803DBC00 003D8A00*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r29));
/*803DBC04 003D8A04*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803DBC08 003D8A08*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803DBC0C 003D8A0C*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*803DBC10 003D8A10*/ PPC::Runtime::ASM::bgt(.L_803DBC20);
/*803DBC14 003D8A14*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803DBC18 003D8A18*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r29));
/*803DBC1C 003D8A1C*/ PPC::Runtime::ASM::b(.L_803DBC3C);
RUNTIME_PPC_JUMP_LABEL(.L_803DBC20, 0x803DBC20) //this is a jump label
/*803DBC20 003D8A20*/ PPC::Runtime::ASM::cmplw(context->r3, context->r4);
/*803DBC24 003D8A24*/ PPC::Runtime::ASM::bge(.L_803DBC2C);
/*803DBC28 003D8A28*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803DBC2C, 0x803DBC2C) //this is a jump label
/*803DBC2C 003D8A2C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803DBC30 003D8A30*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r29));
/*803DBC34 003D8A34*/ PPC::Runtime::ASM::subf(context->r0, context->r3, context->r0);
/*803DBC38 003D8A38*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803DBC3C, 0x803DBC3C) //this is a jump label
/*803DBC3C 003D8A3C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*803DBC40 003D8A40*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x4);
/*803DBC44 003D8A44*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0xc);
/*803DBC48 003D8A48*/ PPC::Runtime::ASM::blt(.L_803DBB88);
/*803DBC4C 003D8A4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803DBC50 003D8A50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DBC54 003D8A54*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803DBC58 003D8A58*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DBC5C 003D8A5C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803DBC60 003D8A60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803DBC64 003D8A64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DBC68 003D8A68*/ PPC::Runtime::ASM::blr();
}