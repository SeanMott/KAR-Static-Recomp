//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_HSD_WObjAlloc.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_WObjSetPosition.hpp"



void fn_HSD_LObjSetPosition(PPC::Runtime::GCContext* context)
{
/*803FFC64 003FCA64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803FFC68 003FCA68*/ PPC::Runtime::ASM::mflr(context->r0);
/*803FFC6C 003FCA6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FFC70 003FCA70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FFC74 003FCA74*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*803FFC78 003FCA78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 803FFC7C 003FCA7C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*803FFC80 003FCA80*/ PPC::Runtime::ASM::bne(.L_803FFC94);
/*803FFC84 003FCA84*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_594 @ Get_MemoryOffset_SDA21);
/*803FFC88 003FCA88*/ PPC::Runtime::ASM::li(context->r4, 0x56f);
/*803FFC8C 003FCA8C*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_591 @ Get_MemoryOffset_SDA21);
/*803FFC90 003FCA90*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_803FFC94, 0x803FFC94) //this is a jump label
/*803FFC94 003FCA94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*803FFC98 003FCA98*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803FFC9C 003FCA9C*/ PPC::Runtime::ASM::bne(.L_803FFCC8);
/*803FFCA0 003FCAA0*/ PPC::Runtime::ASM::bl(fn_HSD_WObjAlloc);
/*803FFCA4 003FCAA4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*803FFCA8 003FCAA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*803FFCAC 003FCAAC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803FFCB0 003FCAB0*/ PPC::Runtime::ASM::bne(.L_803FFCC8);
/*803FFCB4 003FCAB4*/ PPC::Runtime::ASM::lis(context->r4, lbl_8050325C @ Get_MemoryOffset_HighBit);
/*803FFCB8 003FCAB8*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_594 @ Get_MemoryOffset_SDA21);
/*803FFCBC 003FCABC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_8050325C @ Get_MemoryOffset_LowBit);
/*803FFCC0 003FCAC0*/ PPC::Runtime::ASM::li(context->r4, 0x572);
/*803FFCC4 003FCAC4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_803FFCC8, 0x803FFCC8) //this is a jump label
/*803FFCC8 003FCAC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*803FFCCC 003FCACC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*803FFCD0 003FCAD0*/ PPC::Runtime::ASM::bl(fn_HSD_WObjSetPosition);
/*803FFCD4 003FCAD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FFCD8 003FCAD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FFCDC 003FCADC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803FFCE0 003FCAE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803FFCE4 003FCAE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803FFCE8 003FCAE8*/ PPC::Runtime::ASM::blr();
}