//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800EC600(PPC::Runtime::GCContext* context)
{
/*800EC600 000E9400*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EC604 000E9404*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EC608 000E9408*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800EC60C 000E940C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EC610 000E9410*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EC614 000E9414*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800EC618 000E9418*/ PPC::Runtime::ASM::bne(.L_800EC65C);
/*800EC61C 000E941C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC620 000E9420*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r31);
/*800EC624 000E9424*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r3));
/*800EC628 000E9428*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x100);
/*800EC62C 000E942C*/ PPC::Runtime::ASM::blt(.L_800EC648);
/*800EC630 000E9430*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_965 @ Get_MemoryOffset_HighBit);
/*800EC634 000E9434*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_967 @ Get_MemoryOffset_HighBit);
/*800EC638 000E9438*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_965 @ Get_MemoryOffset_LowBit);
/*800EC63C 000E943C*/ PPC::Runtime::ASM::li(context->r4, 0x525);
/*800EC640 000E9440*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_967 @ Get_MemoryOffset_LowBit);
/*800EC644 000E9444*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EC648, 0x800EC648) //this is a jump label
/*800EC648 000E9448*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC64C 000E944C*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*800EC650 000E9450*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r4));
/*800EC654 000E9454*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800EC658 000E9458*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800EC65C, 0x800EC65C) //this is a jump label
/*800EC65C 000E945C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EC660 000E9460*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EC664 000E9464*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EC668 000E9468*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EC66C 000E946C*/ PPC::Runtime::ASM::blr();
}