//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80155C14.hpp"



void fn_80157A14(PPC::Runtime::GCContext* context)
{
/*80157A14 00154814*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80157A18 00154818*/ PPC::Runtime::ASM::mflr(context->r0);
/*80157A1C 0015481C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80157A20 00154820*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80157A24 00154824*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80157A28 00154828*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80157A2C 0015482C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80157A30 00154830*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80157A34 00154834*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80157A38 00154838*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80157A3C 0015483C*/ PPC::Runtime::ASM::bl(fn_80155C14);
/*80157A40 00154840*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80157A44 00154844*/ PPC::Runtime::ASM::bne(.L_80157A58);
/*80157A48 00154848*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6898 @ Get_MemoryOffset_SDA21);
/*80157A4C 0015484C*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80157A50 00154850*/ PPC::Runtime::ASM::li(context->r5, lbl_805D68A0 @ Get_MemoryOffset_SDA21);
/*80157A54 00154854*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80157A58, 0x80157A58) //this is a jump label
/*80157A58 00154858*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80157A5C 0015485C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80157A60 00154860*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80157A64 00154864*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80157A68 00154868*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80157A6C 0015486C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80157A70 00154870*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80157A74 00154874*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80157A78 00154878*/ PPC::Runtime::ASM::bne(.L_80157AC4);
/*80157A7C 0015487C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80157A80 00154880*/ PPC::Runtime::ASM::beq(.L_80157AC4);
/*80157A84 00154884*/ PPC::Runtime::ASM::bne(.L_80157A98);
/*80157A88 00154888*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6898 @ Get_MemoryOffset_SDA21);
/*80157A8C 0015488C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80157A90 00154890*/ PPC::Runtime::ASM::li(context->r5, lbl_805D68A0 @ Get_MemoryOffset_SDA21);
/*80157A94 00154894*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80157A98, 0x80157A98) //this is a jump label
/*80157A98 00154898*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80157A9C 0015489C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80157AA0 001548A0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80157AA4 001548A4*/ PPC::Runtime::ASM::bne(.L_80157AB4);
/*80157AA8 001548A8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80157AAC 001548AC*/ PPC::Runtime::ASM::beq(.L_80157AB4);
/*80157AB0 001548B0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80157AB4, 0x80157AB4) //this is a jump label
/*80157AB4 001548B4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80157AB8 001548B8*/ PPC::Runtime::ASM::bne(.L_80157AC4);
/*80157ABC 001548BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80157AC0 001548C0*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80157AC4, 0x80157AC4) //this is a jump label
/*80157AC4 001548C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80157AC8 001548C8*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80157ACC 001548CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80157AD0 001548D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80157AD4 001548D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80157AD8 001548D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80157ADC 001548DC*/ PPC::Runtime::ASM::blr();
}