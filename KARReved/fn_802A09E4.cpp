//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8028B974.hpp"
#include "fn_8028C010.hpp"
#include "fn_802A0F98.hpp"
#include "fn_802B410C.hpp"
#include "fn_8029D76C.hpp"



void fn_802A09E4(PPC::Runtime::GCContext* context)
{
/*802A09E4 0029D7E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A09E8 0029D7E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A09EC 0029D7EC*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BFB00 @ Get_MemoryOffset_HighBit);
/*802A09F0 0029D7F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A09F4 0029D7F4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, lbl_804BFB00 @ Get_MemoryOffset_LowBit);
/*802A09F8 0029D7F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A09FC 0029D7FC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802A0A00 0029D800*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BFAD0 @ Get_MemoryOffset_HighBit);
/*802A0A04 0029D804*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802A0A08 0029D808*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BFAD0 @ Get_MemoryOffset_LowBit);
/*802A0A0C 0029D80C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4);
/*802A0A10 0029D810*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802A0A14 0029D814*/ PPC::Runtime::ASM::bl(fn_8028B974);
/*802A0A18 0029D818*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*802A0A1C 0029D81C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x78);
/*802A0A20 0029D820*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x4);
/*802A0A24 0029D824*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802A0A28 0029D828*/ PPC::Runtime::ASM::bl(fn_8028C010);
/*802A0A2C 0029D82C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802A0A30 0029D830*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*802A0A34 0029D834*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb24, context->r31));
/*802A0A38 0029D838*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb28, context->r31));
/*802A0A3C 0029D83C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb2c, context->r31));
/*802A0A40 0029D840*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb40, context->r31));
/*802A0A44 0029D844*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb44, context->r31));
/*802A0A48 0029D848*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x787, context->r31));
/*802A0A4C 0029D84C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*802A0A50 0029D850*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3));
/*802A0A54 0029D854*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*802A0A58 0029D858*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*802A0A5C 0029D85C*/ PPC::Runtime::ASM::bne(.L_802A0A78);
/*802A0A60 0029D860*/ PPC::Runtime::ASM::addic.(context->r3, context->r31, 0xa90);
/*802A0A64 0029D864*/ PPC::Runtime::ASM::beq(.L_802A0A70);
/*802A0A68 0029D868*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x78);
/*802A0A6C 0029D86C*/ PPC::Runtime::ASM::bl(fn_802A0F98);
RUNTIME_PPC_JUMP_LABEL(.L_802A0A70, 0x802A0A70) //this is a jump label
/*802A0A70 0029D870*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r31));
/*802A0A74 0029D874*/ PPC::Runtime::ASM::b(.L_802A0AAC);
RUNTIME_PPC_JUMP_LABEL(.L_802A0A78, 0x802A0A78) //this is a jump label
/*802A0A78 0029D878*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*802A0A7C 0029D87C*/ PPC::Runtime::ASM::bne(.L_802A0A98);
/*802A0A80 0029D880*/ PPC::Runtime::ASM::addic.(context->r3, context->r31, 0xa90);
/*802A0A84 0029D884*/ PPC::Runtime::ASM::beq(.L_802A0A90);
/*802A0A88 0029D888*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x78);
/*802A0A8C 0029D88C*/ PPC::Runtime::ASM::bl(fn_802B410C);
RUNTIME_PPC_JUMP_LABEL(.L_802A0A90, 0x802A0A90) //this is a jump label
/*802A0A90 0029D890*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r31));
/*802A0A94 0029D894*/ PPC::Runtime::ASM::b(.L_802A0AAC);
RUNTIME_PPC_JUMP_LABEL(.L_802A0A98, 0x802A0A98) //this is a jump label
/*802A0A98 0029D898*/ PPC::Runtime::ASM::addic.(context->r3, context->r31, 0xa90);
/*802A0A9C 0029D89C*/ PPC::Runtime::ASM::beq(.L_802A0AA8);
/*802A0AA0 0029D8A0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x78);
/*802A0AA4 0029D8A4*/ PPC::Runtime::ASM::bl(fn_8029D76C);
RUNTIME_PPC_JUMP_LABEL(.L_802A0AA8, 0x802A0AA8) //this is a jump label
/*802A0AA8 0029D8A8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb20, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_802A0AAC, 0x802A0AAC) //this is a jump label
/*802A0AAC 0029D8AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A0AB0 0029D8B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802A0AB4 0029D8B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A0AB8 0029D8B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A0ABC 0029D8BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A0AC0 0029D8C0*/ PPC::Runtime::ASM::blr();
}