//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800638F8.hpp"



void fn_80063F1C(PPC::Runtime::GCContext* context)
{
/*80063F1C 00060D1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80063F20 00060D20*/ PPC::Runtime::ASM::mflr(context->r0);
/*80063F24 00060D24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80063F28 00060D28*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80063F2C 00060D2C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80063F30 00060D30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80063F34 00060D34*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80063F38 00060D38*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*80063F3C 00060D3C*/ PPC::Runtime::ASM::bl(fn_800638F8);
/*80063F40 00060D40*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80063F44 00060D44*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*80063F48 00060D48*/ PPC::Runtime::ASM::fdivs(context->f1, context->f31, context->f1);
/*80063F4C 00060D4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80063F50 00060D50*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80063F54 00060D54*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80063F58 00060D58*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80063F5C 00060D5C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80063F60 00060D60*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80063F64 00060D64*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80063F68 00060D68*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80063F6C 00060D6C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80063F70 00060D70*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80063F74 00060D74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80063F78 00060D78*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80063F7C 00060D7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80063F80 00060D80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80063F84 00060D84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80063F88 00060D88*/ PPC::Runtime::ASM::blr();
}