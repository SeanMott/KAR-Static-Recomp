//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_80191530.hpp"
#include "fn_Kirby_GetCopyAbility_randomAbility_giveAbility.hpp"
#include "fn_801AE550.hpp"



void fn_801AEC60(PPC::Runtime::GCContext* context)
{
/*801AEC60 001ABA60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AEC64 001ABA64*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AEC68 001ABA68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AEC6C 001ABA6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AEC70 001ABA70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AEC74 001ABA74*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801AEC78 001ABA78*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AEC7C 001ABA7C*/ PPC::Runtime::ASM::beq(.L_801AECB8);
/*801AEC80 001ABA80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AEC84 001ABA84*/ PPC::Runtime::ASM::bl(fn_80191530);
/*801AEC88 001ABA88*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AEC8C 001ABA8C*/ PPC::Runtime::ASM::beq(.L_801AEC9C);
/*801AEC90 001ABA90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
/*801AEC94 001ABA94*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801AEC98 001ABA98*/ PPC::Runtime::ASM::bne(.L_801AECAC);
RUNTIME_PPC_JUMP_LABEL(.L_801AEC9C, 0x801AEC9C) //this is a jump label
/*801AEC9C 001ABA9C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x93c, context->r31));
/*801AECA0 001ABAA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AECA4 001ABAA4*/ PPC::Runtime::ASM::bl(fn_Kirby_GetCopyAbility_randomAbility_giveAbility);
/*801AECA8 001ABAA8*/ PPC::Runtime::ASM::b(.L_801AECB8);
RUNTIME_PPC_JUMP_LABEL(.L_801AECAC, 0x801AECAC) //this is a jump label
/*801AECAC 001ABAAC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x93c, context->r31));
/*801AECB0 001ABAB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AECB4 001ABAB4*/ PPC::Runtime::ASM::bl(fn_801AE550);
RUNTIME_PPC_JUMP_LABEL(.L_801AECB8, 0x801AECB8) //this is a jump label
/*801AECB8 001ABAB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AECBC 001ABABC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AECC0 001ABAC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AECC4 001ABAC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AECC8 001ABAC8*/ PPC::Runtime::ASM::blr();
}