//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8006F430(PPC::Runtime::GCContext* context)
{
/*8006F430 0006C230*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8006F434 0006C234*/ PPC::Runtime::ASM::mflr(context->r0);
/*8006F438 0006C238*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8006F43C 0006C23C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8006F440 0006C240*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8006F444 0006C244*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8006F448 0006C248*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8006F44C 0006C24C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r3));
/*8006F450 0006C250*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*8006F454 0006C254*/ PPC::Runtime::ASM::beq(.L_8006F470);
/*8006F458 0006C258*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_235 @ Get_MemoryOffset_HighBit);
/*8006F45C 0006C25C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_236 @ Get_MemoryOffset_HighBit);
/*8006F460 0006C260*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_235 @ Get_MemoryOffset_LowBit);
/*8006F464 0006C264*/ PPC::Runtime::ASM::li(context->r4, 0x3a8);
/*8006F468 0006C268*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_236 @ Get_MemoryOffset_LowBit);
/*8006F46C 0006C26C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8006F470, 0x8006F470) //this is a jump label
/*8006F470 0006C270*/ PPC::Runtime::ASM::mulli(context->r0, context->r30, 0xc);
/*8006F474 0006C274*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8006F478 0006C278*/ PPC::Runtime::ASM::slwi(context->r7, context->r30, 3);
/*8006F47C 0006C27C*/ PPC::Runtime::ASM::mr(context->r6, context->r4);
/*8006F480 0006C280*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8006F484 0006C284*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8006F488 0006C288*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8006F48C 0006C28C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8006F490 0006C290*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x2);
/*8006F494 0006C294*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8006F498 0006C298*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
/*8006F49C 0006C29C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8006F4A0 0006C2A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
/*8006F4A4 0006C2A4*/ PPC::Runtime::ASM::b(.L_8006F4C8);
RUNTIME_PPC_JUMP_LABEL(.L_8006F4A8, 0x8006F4A8) //this is a jump label
/*8006F4A8 0006C2A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8006F4AC 0006C2AC*/ PPC::Runtime::ASM::addi(context->r5, context->r7, 0x1c);
/*8006F4B0 0006C2B0*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*8006F4B4 0006C2B4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r6);
/*8006F4B8 0006C2B8*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x4);
/*8006F4BC 0006C2BC*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r5);
/*8006F4C0 0006C2C0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8006F4C4 0006C2C4*/ PPC::Runtime::ASM::sth(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8006F4C8, 0x8006F4C8) //this is a jump label
/*8006F4C8 0006C2C8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8006F4CC 0006C2CC*/ PPC::Runtime::ASM::cmpw(context->r8, context->r0);
/*8006F4D0 0006C2D0*/ PPC::Runtime::ASM::blt(.L_8006F4A8);
/*8006F4D4 0006C2D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8006F4D8 0006C2D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8006F4DC 0006C2DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8006F4E0 0006C2E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8006F4E4 0006C2E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8006F4E8 0006C2E8*/ PPC::Runtime::ASM::blr();
}