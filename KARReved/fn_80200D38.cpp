//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80200D38(PPC::Runtime::GCContext* context)
{
/*80200D38 001FDB38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80200D3C 001FDB3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80200D40 001FDB40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80200D44 001FDB44*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80200D48 001FDB48*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80200D4C 001FDB4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80200D50 001FDB50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80200D54 001FDB54*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80200D58 001FDB58*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80200D5C 001FDB5C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2288 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80200D60 001FDB60*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80200D64 001FDB64*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80200D68 001FDB68*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80200D6C 001FDB6C*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*80200D70 001FDB70*/ PPC::Runtime::ASM::b(.L_80200DB8);
RUNTIME_PPC_JUMP_LABEL(.L_80200D74, 0x80200D74) //this is a jump label
/*80200D74 001FDB74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b4, context->r28));
/*80200D78 001FDB78*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r30);
/*80200D7C 001FDB7C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80200D80 001FDB80*/ PPC::Runtime::ASM::beq(.L_80200DB0);
/*80200D84 001FDB84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*80200D88 001FDB88*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80200D8C 001FDB8C*/ PPC::Runtime::ASM::beq(.L_80200DB0);
/*80200D90 001FDB90*/ PPC::Runtime::ASM::bne(.L_80200DA4);
/*80200D94 001FDB94*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70F8 @ Get_MemoryOffset_SDA21);
/*80200D98 001FDB98*/ PPC::Runtime::ASM::li(context->r4, 0xab);
/*80200D9C 001FDB9C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7100 @ Get_MemoryOffset_SDA21);
/*80200DA0 001FDBA0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80200DA4, 0x80200DA4) //this is a jump label
/*80200DA4 001FDBA4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*80200DA8 001FDBA8*/ PPC::Runtime::ASM::fcmpu(cr0, context->f31, context->f1);
/*80200DAC 001FDBAC*/ PPC::Runtime::ASM::bne(.L_80200DCC);
RUNTIME_PPC_JUMP_LABEL(.L_80200DB0, 0x80200DB0) //this is a jump label
/*80200DB0 001FDBB0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80200DB4 001FDBB4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80200DB8, 0x80200DB8) //this is a jump label
/*80200DB8 001FDBB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*80200DBC 001FDBBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80200DC0 001FDBC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80200DC4 001FDBC4*/ PPC::Runtime::ASM::cmplw(context->r29, context->r0);
/*80200DC8 001FDBC8*/ PPC::Runtime::ASM::blt(.L_80200D74);
RUNTIME_PPC_JUMP_LABEL(.L_80200DCC, 0x80200DCC) //this is a jump label
/*80200DCC 001FDBCC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80200DD0 001FDBD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80200DD4 001FDBD4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80200DD8 001FDBD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80200DDC 001FDBDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80200DE0 001FDBE0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80200DE4 001FDBE4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80200DE8 001FDBE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80200DEC 001FDBEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80200DF0 001FDBF0*/ PPC::Runtime::ASM::blr();
}