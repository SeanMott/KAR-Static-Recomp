//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007D42C.hpp"
#include "fn_8007D440.hpp"
#include "fn_8007D458.hpp"
#include "fn_800AA81C.hpp"
#include "fn_800AAA9C.hpp"



void fn_800AA974(PPC::Runtime::GCContext* context)
{
/*800AA974 000A7774*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AA978 000A7778*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AA97C 000A777C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AA980 000A7780*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AA984 000A7784*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AA988 000A7788*/ PPC::Runtime::ASM::bl(fn_8007D42C);
/*800AA98C 000A778C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AA990 000A7790*/ PPC::Runtime::ASM::bl(fn_8007D440);
/*800AA994 000A7794*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*800AA998 000A7798*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AA99C 000A779C*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*800AA9A0 000A77A0*/ PPC::Runtime::ASM::bl(fn_8007D458);
/*800AA9A4 000A77A4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 29, 29);
/*800AA9A8 000A77A8*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800AA9AC 000A77AC*/ PPC::Runtime::ASM::beq(.L_800AA9D8);
/*800AA9B0 000A77B0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AA9B4 000A77B4*/ PPC::Runtime::ASM::addi(context->r5, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AA9B8 000A77B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r5));
/*800AA9BC 000A77BC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800AA9C0 000A77C0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800AA9C4 000A77C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r5));
/*800AA9C8 000A77C8*/ PPC::Runtime::ASM::ble(.L_800AAA00);
/*800AA9CC 000A77CC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AA9D0 000A77D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r5));
/*800AA9D4 000A77D4*/ PPC::Runtime::ASM::b(.L_800AAA00);
RUNTIME_PPC_JUMP_LABEL(.L_800AA9D8, 0x800AA9D8) //this is a jump label
/*800AA9D8 000A77D8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 28, 28);
/*800AA9DC 000A77DC*/ PPC::Runtime::ASM::beq(.L_800AAA00);
/*800AA9E0 000A77E0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AA9E4 000A77E4*/ PPC::Runtime::ASM::addi(context->r5, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AA9E8 000A77E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r5));
/* 800AA9EC 000A77EC  34 03 FF FF */ subic. context->r0 , context->r3 , 0x1
/*800AA9F0 000A77F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r5));
/*800AA9F4 000A77F4*/ PPC::Runtime::ASM::bge(.L_800AAA00);
/*800AA9F8 000A77F8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800AA9FC 000A77FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_800AAA00, 0x800AAA00) //this is a jump label
/*800AAA00 000A7800*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AAA04 000A7804*/ PPC::Runtime::ASM::addi(context->r6, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AAA08 000A7808*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r6));
/*800AAA0C 000A780C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800AAA10 000A7810*/ PPC::Runtime::ASM::beq(.L_800AAA60);
/*800AAA14 000A7814*/ PPC::Runtime::ASM::bge(.L_800AAA6C);
/*800AAA18 000A7818*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800AAA1C 000A781C*/ PPC::Runtime::ASM::bge(.L_800AAA24);
/*800AAA20 000A7820*/ PPC::Runtime::ASM::b(.L_800AAA6C);
RUNTIME_PPC_JUMP_LABEL(.L_800AAA24, 0x800AAA24) //this is a jump label
/*800AAA24 000A7824*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AAA28 000A7828*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x724, context->r5));
/* 800AAA2C 000A782C  54 60 F7 FF */ extrwi. context->r0 , context->r3 , 1 , 29
/*800AAA30 000A7830*/ PPC::Runtime::ASM::beq(.L_800AAA48);
/*800AAA34 000A7834*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x2f84);
/*800AAA38 000A7838*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AAA3C 000A783C*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x2f88);
/*800AAA40 000A7840*/ PPC::Runtime::ASM::bl(fn_800AA81C);
/*800AAA44 000A7844*/ PPC::Runtime::ASM::b(.L_800AAA6C);
RUNTIME_PPC_JUMP_LABEL(.L_800AAA48, 0x800AAA48) //this is a jump label
/*800AAA48 000A7848*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 23, 23);
/*800AAA4C 000A784C*/ PPC::Runtime::ASM::beq(.L_800AAA6C);
/*800AAA50 000A7850*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800AAA54 000A7854*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 2, 29, 29);
/*800AAA58 000A7858*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x724, context->r5));
/*800AAA5C 000A785C*/ PPC::Runtime::ASM::b(.L_800AAA6C);
RUNTIME_PPC_JUMP_LABEL(.L_800AAA60, 0x800AAA60) //this is a jump label
/*800AAA60 000A7860*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 23, 23);
/*800AAA64 000A7864*/ PPC::Runtime::ASM::beq(.L_800AAA6C);
/*800AAA68 000A7868*/ PPC::Runtime::ASM::bl(fn_800AAA9C);
RUNTIME_PPC_JUMP_LABEL(.L_800AAA6C, 0x800AAA6C) //this is a jump label
/*800AAA6C 000A786C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AAA70 000A7870*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AAA74 000A7874*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AAA78 000A7878*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AAA7C 000A787C*/ PPC::Runtime::ASM::blr();
}