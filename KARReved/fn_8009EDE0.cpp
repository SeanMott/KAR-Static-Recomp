//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_8009EB30.hpp"



void fn_8009EDE0(PPC::Runtime::GCContext* context)
{
/*8009EDE0 0009BBE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8009EDE4 0009BBE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8009EDE8 0009BBE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009EDEC 0009BBEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009EDF0 0009BBF0*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8009EDF4 0009BBF4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x2);
/*8009EDF8 0009BBF8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009EDFC 0009BBFC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8009EE00 0009BC00*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009EE04 0009BC04*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8009EE08 0009BC08*/ PPC::Runtime::ASM::bne(.L_8009EEAC);
/*8009EE0C 0009BC0C*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*8009EE10 0009BC10*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8009EE14 0009BC14*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009EE18 0009BC18*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009EE1C 0009BC1C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009EE20 0009BC20*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*8009EE24 0009BC24*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8009EE28 0009BC28*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009EE2C 0009BC2C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009EE30 0009BC30*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009EE34 0009BC34*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8009EE38 0009BC38*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009EE3C 0009BC3C*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009EE40 0009BC40*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009EE44 0009BC44*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*8009EE48 0009BC48*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8009EE4C 0009BC4C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009EE50 0009BC50*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009EE54 0009BC54*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009EE58 0009BC58*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*8009EE5C 0009BC5C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8009EE60 0009BC60*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*8009EE64 0009BC64*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009EE68 0009BC68*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009EE6C 0009BC6C*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*8009EE70 0009BC70*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009EE74 0009BC74*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8009EE78 0009BC78*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*8009EE7C 0009BC7C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009EE80 0009BC80*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009EE84 0009BC84*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*8009EE88 0009BC88*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009EE8C 0009BC8C*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*8009EE90 0009BC90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8009EE94 0009BC94*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*8009EE98 0009BC98*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_19 @ Get_MemoryOffset_HighBit);
/*8009EE9C 0009BC9C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8009EEA0 0009BCA0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, StructWithFuncPtrs_19 @ Get_MemoryOffset_LowBit);
/*8009EEA4 0009BCA4*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8009EEA8 0009BCA8*/ PPC::Runtime::ASM::bl(fn_8009EB30);
RUNTIME_PPC_JUMP_LABEL(.L_8009EEAC, 0x8009EEAC) //this is a jump label
/*8009EEAC 0009BCAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009EEB0 0009BCB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009EEB4 0009BCB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009EEB8 0009BCB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009EEBC 0009BCBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8009EEC0 0009BCC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8009EEC4 0009BCC4*/ PPC::Runtime::ASM::blr();
}