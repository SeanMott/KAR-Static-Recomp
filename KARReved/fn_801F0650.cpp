//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801F0650(PPC::Runtime::GCContext* context)
{
/*801F0650 001ED450*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F0654 001ED454*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F0658 001ED458*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F065C 001ED45C*/ PPC::Runtime::ASM::li(context->r4, 0x16);
/*801F0660 001ED460*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0664 001ED464*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801F0668 001ED468*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1F84 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F066C 001ED46C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801F0670 001ED470*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F0674 001ED474*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F0678 001ED478*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801F067C 001ED47C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F0680 001ED480*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801F0684 001ED484*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*801F0688 001ED488*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801F068C 001ED48C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F0690 001ED490*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0694 001ED494*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F0698 001ED498*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F069C 001ED49C*/ PPC::Runtime::ASM::blr();
}