//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8003C0C4(PPC::Runtime::GCContext* context)
{
/*8003C0C4 00038EC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8003C0C8 00038EC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8003C0CC 00038ECC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003C0D0 00038ED0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003C0D4 00038ED4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8003C0D8 00038ED8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r3));
/*8003C0DC 00038EDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003C0E0 00038EE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8003C0E4 00038EE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8003C0E8 00038EE8*/ PPC::Runtime::ASM::blr();
}