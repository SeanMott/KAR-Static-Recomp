//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8034D1F8.hpp"
#include "fn_802E498C.hpp"



void fn_80305108(PPC::Runtime::GCContext* context)
{
/*80305108 00301F08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8030510C 00301F0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80305110 00301F10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80305114 00301F14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80305118 00301F18*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8030511C 00301F1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80305120 00301F20*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80305124 00301F24*/ PPC::Runtime::ASM::bl(fn_8034D1F8);
/*80305128 00301F28*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8030512C 00301F2C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80305130 00301F30*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x124);
/*80305134 00301F34*/ PPC::Runtime::ASM::bl(fn_802E498C);
/*80305138 00301F38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8030513C 00301F3C*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*80305140 00301F40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80305144 00301F44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r3));
/*80305148 00301F48*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E3BD8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8030514C 00301F4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80305150 00301F50*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80305154 00301F54*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*80305158 00301F58*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*8030515C 00301F5C*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80305160 00301F60*/ PPC::Runtime::ASM::bne(.L_80305174);
/*80305164 00301F64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80305168 00301F68*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8030516C 00301F6C*/ PPC::Runtime::ASM::bne(.L_80305174);
/*80305170 00301F70*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80305174, 0x80305174) //this is a jump label
/*80305174 00301F74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80305178 00301F78*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8030517C 00301F7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80305180 00301F80*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80305184 00301F84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80305188 00301F88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8030518C 00301F8C*/ PPC::Runtime::ASM::blr();
}