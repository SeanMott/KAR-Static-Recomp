//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80391B1C.hpp"
#include "fn_80391C1C.hpp"



void fn_8039A3F4(PPC::Runtime::GCContext* context)
{
/*8039A3F4 003971F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039A3F8 003971F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039A3FC 003971FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A400 00397200*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A404 00397204*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A408 00397208*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8039A40C 0039720C*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8039A410 00397210*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8039A414 00397214*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A418 00397218*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A41C 0039721C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8039A420 00397220*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A424 00397224*/ PPC::Runtime::ASM::bctrl();
/*8039A428 00397228*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039A42C 0039722C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A430 00397230*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A434 00397234*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8039A438 00397238*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A43C 0039723C*/ PPC::Runtime::ASM::bctrl();
/*8039A440 00397240*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039A444 00397244*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8039A448 00397248*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8039A44C 0039724C*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8039A450 00397250*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A454 00397254*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A458 00397258*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A45C 0039725C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039A460 00397260*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039A464 00397264*/ PPC::Runtime::ASM::blr();
}