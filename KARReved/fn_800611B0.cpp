//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80060FA0.hpp"
#include "fn_800604BC.hpp"
#include "fn_80060ED0.hpp"



void fn_800611B0(PPC::Runtime::GCContext* context)
{
/*800611B0 0005DFB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800611B4 0005DFB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800611B8 0005DFB8*/ PPC::Runtime::ASM::lis(context->r3, lbl_8054FAB0 @ Get_MemoryOffset_HighBit);
/*800611BC 0005DFBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800611C0 0005DFC0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8054FAB0 @ Get_MemoryOffset_LowBit);
/*800611C4 0005DFC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800611C8 0005DFC8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800611CC 0005DFCC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800611D0 0005DFD0*/ PPC::Runtime::ASM::bl(fn_80060FA0);
/*800611D4 0005DFD4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800611D8, 0x800611D8) //this is a jump label
/*800611D8 0005DFD8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800611DC 0005DFDC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800611E0 0005DFE0*/ PPC::Runtime::ASM::bl(fn_800604BC);
/*800611E4 0005DFE4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*800611E8 0005DFE8*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x200);
/*800611EC 0005DFEC*/ PPC::Runtime::ASM::blt(.L_800611D8);
/*800611F0 0005DFF0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800611F4, 0x800611F4) //this is a jump label
/*800611F4 0005DFF4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800611F8 0005DFF8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800611FC 0005DFFC*/ PPC::Runtime::ASM::bl(fn_80060ED0);
/*80061200 0005E000*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80061204 0005E004*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x200);
/*80061208 0005E008*/ PPC::Runtime::ASM::blt(.L_800611F4);
/*8006120C 0005E00C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80061210 0005E010*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80061214 0005E014*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80061218 0005E018*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8006121C 0005E01C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80061220 0005E020*/ PPC::Runtime::ASM::blr();
}