//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D39A0(PPC::Runtime::GCContext* context)
{
/*800D39A0 000D07A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D39A4 000D07A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D39A8 000D07A8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D39AC 000D07AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D39B0 000D07B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D39B4 000D07B4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D39B8 000D07B8*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D39BC 000D07BC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D39C0 000D07C0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D39C4 000D07C4*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D39C8 000D07C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D39CC 000D07CC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D39D0 000D07D0*/ PPC::Runtime::ASM::bne(.L_800D39E4);
/*800D39D4 000D07D4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D39D8 000D07D8*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x66c);
/*800D39DC 000D07DC*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D39E0 000D07E0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D39E4, 0x800D39E4) //this is a jump label
/*800D39E4 000D07E4*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D39E8 000D07E8*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800D39EC 000D07EC*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D39F0 000D07F0*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800D39F4 000D07F4*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D39F8 000D07F8  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D39FC 000D07FC*/ PPC::Runtime::ASM::beq(.L_800D3A2C);
/*800D3A00 000D0800*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D3A04 000D0804*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D3A08 000D0808*/ PPC::Runtime::ASM::beq(.L_800D3A14);
/*800D3A0C 000D080C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D3A10 000D0810*/ PPC::Runtime::ASM::b(.L_800D3A18);
RUNTIME_PPC_JUMP_LABEL(.L_800D3A14, 0x800D3A14) //this is a jump label
/*800D3A14 000D0814*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3A18, 0x800D3A18) //this is a jump label
/*800D3A18 000D0818*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800D3A1C 000D081C*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3A20 000D0820*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D3A24 000D0824*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D3A28 000D0828*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D3A2C, 0x800D3A2C) //this is a jump label
/*800D3A2C 000D082C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3A30 000D0830*/ PPC::Runtime::ASM::bne(.L_800D3A54);
/*800D3A34 000D0834*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D3A38 000D0838*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x67c);
/*800D3A3C 000D083C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D3A40 000D0840*/ PPC::Runtime::ASM::bl(OSReport);
/*800D3A44 000D0844*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D3A48 000D0848*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x68c);
/*800D3A4C 000D084C*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D3A50 000D0850*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3A54, 0x800D3A54) //this is a jump label
/*800D3A54 000D0854*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D3A58 000D0858*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800D3A5C 000D085C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3A60 000D0860*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800D3A64 000D0864*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3A68 000D0868*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800D3A6C 000D086C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3A70 000D0870*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3A74 000D0874*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3A78 000D0878*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3A7C 000D087C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D3A80 000D0880*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D3A84 000D0884*/ PPC::Runtime::ASM::blr();
}