//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190FAC.hpp"
#include "fn_801B10CC.hpp"



void fn_801B0F24(PPC::Runtime::GCContext* context)
{
/*801B0F24 001ADD24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B0F28 001ADD28*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B0F2C 001ADD2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B0F30 001ADD30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B0F34 001ADD34*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B0F38 001ADD38*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD814 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B0F3C 001ADD3C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x154, context->r4));
/*801B0F40 001ADD40*/ PPC::Runtime::ASM::bl(fn_80190FAC);
/*801B0F44 001ADD44*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4a8, context->r31));
/*801B0F48 001ADD48*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E14D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B0F4C 001ADD4C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801B0F50 001ADD50*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801B0F54 001ADD54*/ PPC::Runtime::ASM::bne(.L_801B0F60);
/*801B0F58 001ADD58*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B0F5C 001ADD5C*/ PPC::Runtime::ASM::bl(fn_801B10CC);
RUNTIME_PPC_JUMP_LABEL(.L_801B0F60, 0x801B0F60) //this is a jump label
/*801B0F60 001ADD60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B0F64 001ADD64*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B0F68 001ADD68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B0F6C 001ADD6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B0F70 001ADD70*/ PPC::Runtime::ASM::blr();
}