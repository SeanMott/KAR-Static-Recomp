//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025E198(PPC::Runtime::GCContext* context)
{
/*8025E198 0025AF98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E19C 0025AF9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E1A0 0025AFA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E1A4 0025AFA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E1A8 0025AFA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E1AC 0025AFAC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025E1B0 0025AFB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E1B4 0025AFB4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E1B8 0025AFB8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025E1BC 0025AFBC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E1C0 0025AFC0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E1C4 0025AFC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025E1C8 0025AFC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E1CC 0025AFCC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E1D0 0025AFD0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025E1D4 0025AFD4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E1D8 0025AFD8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025E1DC 0025AFDC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E1E0 0025AFE0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E1E4 0025AFE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025E1E8 0025AFE8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E1EC 0025AFEC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025E1F0 0025AFF0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025E1F4 0025AFF4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F0C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E1F8 0025AFF8*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025E1FC 0025AFFC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E200 0025B000*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E204 0025B004*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E208 0025B008*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E20C 0025B00C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025E210 0025B010*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E214 0025B014*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E218 0025B018*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E21C 0025B01C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E220 0025B020*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E224 0025B024*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E228 0025B028*/ PPC::Runtime::ASM::blr();
}