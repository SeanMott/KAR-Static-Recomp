//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000B290(PPC::Runtime::GCContext* context)
{
/*8000B290 00008090*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000B294 00008094*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000B298 00008098*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B29C 0000809C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000B2A0 000080A0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35a, context->r3));
/*8000B2A4 000080A4*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 26);
/*8000B2A8 000080A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B2AC 000080AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000B2B0 000080B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000B2B4 000080B4*/ PPC::Runtime::ASM::blr();
}