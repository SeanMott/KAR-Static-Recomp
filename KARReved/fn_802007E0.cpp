//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802007E0(PPC::Runtime::GCContext* context)
{
/*802007E0 001FD5E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802007E4 001FD5E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802007E8 001FD5E8*/ PPC::Runtime::ASM::lis(context->r3, StructValues_102 @ Get_MemoryOffset_HighBit);
/*802007EC 001FD5EC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802007F0 001FD5F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802007F4 001FD5F4*/ PPC::Runtime::ASM::li(context->r0, 0x4f);
/*802007F8 001FD5F8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructValues_102 @ Get_MemoryOffset_LowBit);
/*802007FC 001FD5FC*/ PPC::Runtime::ASM::mtctr(context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80200800, 0x80200800) //this is a jump label
/*80200800 001FD600*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80200804 001FD604*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*80200808 001FD608*/ PPC::Runtime::ASM::bge(.L_80200810);
/*8020080C 001FD60C*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80200810, 0x80200810) //this is a jump label
/*80200810 001FD610*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*80200814 001FD614*/ PPC::Runtime::ASM::bdnz(.L_80200800);
/*80200818 001FD618*/ PPC::Runtime::ASM::lis(context->r3, lbl_8055A1E0 @ Get_MemoryOffset_HighBit);
/*8020081C 001FD61C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80200820 001FD620*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8055A1E0 @ Get_MemoryOffset_LowBit);
/*80200824 001FD624*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*80200828 001FD628*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020082C 001FD62C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80200830 001FD630*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80200834 001FD634*/ PPC::Runtime::ASM::blr();
}