//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B0CDC.hpp"



void fn_800B1DC0(PPC::Runtime::GCContext* context)
{
/*800B1DC0 000AEBC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B1DC4 000AEBC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B1DC8 000AEBC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B1DCC 000AEBCC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B1DD0 000AEBD0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800B1DD4 000AEBD4*/ PPC::Runtime::ASM::bl(fn_800B0CDC);
/*800B1DD8 000AEBD8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*800B1DDC 000AEBDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B1DE0 000AEBE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B1DE4 000AEBE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B1DE8 000AEBE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B1DEC 000AEBEC*/ PPC::Runtime::ASM::blr();
}