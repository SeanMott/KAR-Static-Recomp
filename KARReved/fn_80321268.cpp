//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80321268(PPC::Runtime::GCContext* context)
{
/*80321268 0031E068*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8032126C 0031E06C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80321270 0031E070*/ PPC::Runtime::ASM::lis(context->r4, lbl_804E2030 @ Get_MemoryOffset_HighBit);
/*80321274 0031E074*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80321278 0031E078*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8032127C 0031E07C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80321280 0031E080*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80321284 0031E084*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*80321288 0031E088*/ PPC::Runtime::ASM::lwzu(context->r6, lbl_804E2030 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*8032128C 0031E08C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80321290 0031E090*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80321294 0031E094*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80321298 0031E098*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8032129C 0031E09C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803212A0 0031E0A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803212A4 0031E0A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*803212A8 0031E0A8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*803212AC 0031E0AC*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803212B0 0031E0B0*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*803212B4 0031E0B4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803212B8 0031E0B8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803212BC 0031E0BC*/ PPC::Runtime::ASM::b(.L_803212D4);
RUNTIME_PPC_JUMP_LABEL(.L_803212C0, 0x803212C0) //this is a jump label
/*803212C0 0031E0C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803212C4 0031E0C4*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*803212C8 0031E0C8*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*803212CC 0031E0CC*/ PPC::Runtime::ASM::nop();
/*803212D0 0031E0D0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_803212D4, 0x803212D4) //this is a jump label
/*803212D4 0031E0D4*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*803212D8 0031E0D8*/ PPC::Runtime::ASM::bne(.L_803212C0);
/*803212DC 0031E0DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803212E0 0031E0E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803212E4 0031E0E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803212E8 0031E0E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803212EC 0031E0EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803212F0 0031E0F0*/ PPC::Runtime::ASM::blr();
}