//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80150F60(PPC::Runtime::GCContext* context)
{
/*80150F60 0014DD60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80150F64 0014DD64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80150F68 0014DD68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80150F6C 0014DD6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80150F70 0014DD70*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80150F74 0014DD74*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80150F78 0014DD78*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80150F7C 0014DD7C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80150F80, 0x80150F80) //this is a jump label
/*80150F80 0014DD80*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80150F84 0014DD84*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80150F88 0014DD88*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80150F8C 0014DD8C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80150F90 0014DD90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4e0, context->r30));
/*80150F94 0014DD94*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80150F98 0014DD98*/ PPC::Runtime::ASM::beq(.L_80150FA4);
/*80150F9C 0014DD9C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80150FA0 0014DDA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4e0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80150FA4, 0x80150FA4) //this is a jump label
/*80150FA4 0014DDA4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80150FA8 0014DDA8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80150FAC 0014DDAC*/ PPC::Runtime::ASM::blt(.L_80150F80);
/*80150FB0 0014DDB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80150FB4 0014DDB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80150FB8 0014DDB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80150FBC 0014DDBC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80150FC0 0014DDC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80150FC4 0014DDC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80150FC8 0014DDC8*/ PPC::Runtime::ASM::blr();
}