//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8032188C(PPC::Runtime::GCContext* context)
{
/*8032188C 0031E68C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80321890 0031E690*/ PPC::Runtime::ASM::mflr(context->r0);
/*80321894 0031E694*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80321898 0031E698*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8032189C 0031E69C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803218A0 0031E6A0*/ PPC::Runtime::ASM::beq(.L_803218C4);
/*803218A4 0031E6A4*/ PPC::Runtime::ASM::lis(context->r5, lbl_804E2110 @ Get_MemoryOffset_HighBit);
/*803218A8 0031E6A8*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*803218AC 0031E6AC*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804E2110 @ Get_MemoryOffset_LowBit);
/*803218B0 0031E6B0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803218B4 0031E6B4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803218B8 0031E6B8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDB2C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803218BC 0031E6BC*/ PPC::Runtime::ASM::ble(.L_803218C4);
/*803218C0 0031E6C0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_803218C4, 0x803218C4) //this is a jump label
/*803218C4 0031E6C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803218C8 0031E6C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803218CC 0031E6CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803218D0 0031E6D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803218D4 0031E6D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803218D8 0031E6D8*/ PPC::Runtime::ASM::blr();
}