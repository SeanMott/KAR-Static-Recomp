//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_803885F8(PPC::Runtime::GCContext* context)
{
/*803885F8 003853F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803885FC 003853FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80388600 00385400*/ PPC::Runtime::ASM::lis(context->r4, lbl_804F4C58 @ Get_MemoryOffset_HighBit);
/*80388604 00385404*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80388608 00385408*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8038860C 0038540C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80388610 00385410*/ PPC::Runtime::ASM::lwzu(context->r6, lbl_804F4C58 @ Get_MemoryOffset_LowBit ( context->r4 ));
/*80388614 00385414*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80388618 00385418*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8038861C 0038541C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80388620 00385420*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80388624 00385424*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80388628 00385428*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8038862C 0038542C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80388630 00385430*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xac);
/*80388634 00385434*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80388638 00385438*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038863C 0038543C*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r0);
/*80388640 00385440*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80388644 00385444*/ PPC::Runtime::ASM::b(.L_8038865C);
RUNTIME_PPC_JUMP_LABEL(.L_80388648, 0x80388648) //this is a jump label
/*80388648 00385448*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8038864C 0038544C*/ PPC::Runtime::ASM::addi(context->r12, context->r1, 0x14);
/*80388650 00385450*/ PPC::Runtime::ASM::bl(fn_803AD738);
/*80388654 00385454*/ PPC::Runtime::ASM::nop();
/*80388658 00385458*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0xac);
RUNTIME_PPC_JUMP_LABEL(.L_8038865C, 0x8038865C) //this is a jump label
/*8038865C 0038545C*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*80388660 00385460*/ PPC::Runtime::ASM::bne(.L_80388648);
/*80388664 00385464*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80388668 00385468*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8038866C 0038546C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80388670 00385470*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80388674 00385474*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80388678 00385478*/ PPC::Runtime::ASM::blr();
}