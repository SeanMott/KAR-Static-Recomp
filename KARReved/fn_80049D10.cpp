//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80049D10(PPC::Runtime::GCContext* context)
{
/*80049D10 00046B10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80049D14 00046B14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80049D18 00046B18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049D1C 00046B1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049D20 00046B20*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049D24 00046B24*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80049D28 00046B28*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049D2C 00046B2C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80049D30 00046B30*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r29, 24);
/*80049D34 00046B34*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_169 @ Get_MemoryOffset_HighBit);
/*80049D38 00046B38*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x3);
/*80049D3C 00046B3C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_169 @ Get_MemoryOffset_LowBit);
/*80049D40 00046B40*/ PPC::Runtime::ASM::blt(.L_80049D64);
/*80049D44 00046B44*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*80049D48 00046B48*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x180);
/*80049D4C 00046B4C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80049D50 00046B50*/ PPC::Runtime::ASM::bl(OSReport);
/*80049D54 00046B54*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x19c);
/*80049D58 00046B58*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*80049D5C 00046B5C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D4 @ Get_MemoryOffset_SDA21);
/*80049D60 00046B60*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049D64, 0x80049D64) //this is a jump label
/*80049D64 00046B64*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r30, 24);
/*80049D68 00046B68*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x174);
/*80049D6C 00046B6C*/ PPC::Runtime::ASM::clrlslwi(context->r4, context->r29, 24, 2);
/*80049D70 00046B70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049D74 00046B74*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3);
/*80049D78 00046B78*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r4);
/*80049D7C 00046B7C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049D80 00046B80*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049D84 00046B84*/ PPC::Runtime::ASM::lbzx(context->r3, context->r3, context->r0);
/*80049D88 00046B88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049D8C 00046B8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80049D90 00046B90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80049D94 00046B94*/ PPC::Runtime::ASM::blr();
}