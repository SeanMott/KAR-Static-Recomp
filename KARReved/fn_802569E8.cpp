//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800623EC.hpp"
#include "fn_8005D64C.hpp"
#include "fn_8005E08C.hpp"
#include "fn_8005DB44.hpp"



void fn_802569E8(PPC::Runtime::GCContext* context)
{
/*802569E8 002537E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802569EC 002537EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802569F0 002537F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802569F4 002537F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802569F8 002537F8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802569FC 002537FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r3));
/*80256A00 00253800*/ PPC::Runtime::ASM::subfic(context->r4, context->r3, -0x1);
/*80256A04 00253804*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80256A08 00253808*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/* 80256A0C 0025380C  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*80256A10 00253810*/ PPC::Runtime::ASM::beq(.L_80256A58);
/*80256A14 00253814*/ PPC::Runtime::ASM::bl(fn_800623EC);
/*80256A18 00253818*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80256A1C 0025381C*/ PPC::Runtime::ASM::bne(.L_80256A48);
/*80256A20 00253820*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r31));
/*80256A24 00253824*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80256A28 00253828*/ PPC::Runtime::ASM::beq(.L_80256A58);
/*80256A2C 0025382C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x244, context->r31));
/*80256A30 00253830*/ PPC::Runtime::ASM::bl(fn_8005D64C);
/*80256A34 00253834*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r31));
/*80256A38 00253838*/ PPC::Runtime::ASM::bl(fn_8005E08C);
/*80256A3C 0025383C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*80256A40 00253840*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r31));
/*80256A44 00253844*/ PPC::Runtime::ASM::b(.L_80256A58);
RUNTIME_PPC_JUMP_LABEL(.L_80256A48, 0x80256A48) //this is a jump label
/*80256A48 00253848*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r31));
/*80256A4C 0025384C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xdc);
/*80256A50 00253850*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2DB0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80256A54 00253854*/ PPC::Runtime::ASM::bl(fn_8005DB44);
RUNTIME_PPC_JUMP_LABEL(.L_80256A58, 0x80256A58) //this is a jump label
/*80256A58 00253858*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80256A5C 0025385C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80256A60 00253860*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80256A64 00253864*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80256A68 00253868*/ PPC::Runtime::ASM::blr();
}