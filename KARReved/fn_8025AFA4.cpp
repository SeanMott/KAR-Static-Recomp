//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025AFA4(PPC::Runtime::GCContext* context)
{
/*8025AFA4 00257DA4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025AFA8 00257DA8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025AFAC 00257DAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025AFB0 00257DB0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025AFB4 00257DB4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025AFB8 00257DB8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025AFBC 00257DBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025AFC0 00257DC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AFC4 00257DC4*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025AFC8 00257DC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AFCC 00257DCC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025AFD0 00257DD0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025AFD4 00257DD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AFD8 00257DD8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025AFDC 00257DDC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025AFE0 00257DE0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025AFE4 00257DE4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025AFE8 00257DE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AFEC 00257DEC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025AFF0 00257DF0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025AFF4 00257DF4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025AFF8 00257DF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025AFFC 00257DFC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025B000 00257E00*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E7C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B004 00257E04*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025B008 00257E08*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025B00C 00257E0C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E78 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B010 00257E10*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025B014 00257E14*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025B018 00257E18*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025B01C 00257E1C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025B020 00257E20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B024 00257E24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B028 00257E28*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025B02C 00257E2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025B030 00257E30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025B034 00257E34*/ PPC::Runtime::ASM::blr();
}