//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7AD0.hpp"
#include "fn_killWhispy.hpp"



void fn_800FB8DC(PPC::Runtime::GCContext* context)
{
/*800FB8DC 000F86DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800FB8E0 000F86E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FB8E4 000F86E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FB8E8 000F86E8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FB8EC 000F86EC*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FB8F0 000F86F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FB8F4 000F86F4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FB8F8 000F86F8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FB8FC 000F86FC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FB900 000F8700*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r5));
/*800FB904 000F8704*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800FB908 000F8708*/ PPC::Runtime::ASM::ble(.L_800FB9E0);
/*800FB90C 000F870C*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*800FB910 000F8710*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r5));
/*800FB914 000F8714*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r5));
/*800FB918 000F8718*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FB91C 000F871C*/ PPC::Runtime::ASM::bgt(.L_800FB9E0);
/*800FB920 000F8720*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FB924 000F8724*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB928 000F8728*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FB92C 000F872C*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805DF8F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB930 000F8730*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800FB934 000F8734*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800FB938 000F8738*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800FB93C 000F873C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800FB940 000F8740*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FB944 000F8744*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FB948 000F8748*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB94C 000F874C*/ PPC::Runtime::ASM::fabs(context->f3, context->f0);
/*800FB950 000F8750*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FB954 000F8754*/ PPC::Runtime::ASM::lwzx(context->r29, context->r4, context->r0);
/*800FB958 000F8758*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*800FB95C 000F875C*/ PPC::Runtime::ASM::fmul(context->f31, context->f2, context->f3);
/*800FB960 000F8760*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800FB964 000F8764*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*800FB968 000F8768*/ PPC::Runtime::ASM::frsp(context->f31, context->f31);
/*800FB96C 000F876C*/ PPC::Runtime::ASM::bne(.L_800FB980);
/*800FB970 000F8770*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6238 @ Get_MemoryOffset_SDA21);
/*800FB974 000F8774*/ PPC::Runtime::ASM::li(context->r4, 0x2ec);
/*800FB978 000F8778*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6240 @ Get_MemoryOffset_SDA21);
/*800FB97C 000F877C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FB980, 0x800FB980) //this is a jump label
/*800FB980 000F8780*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*800FB984 000F8784*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*800FB988 000F8788*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB98C 000F878C*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800FB990 000F8790*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800FB994 000F8794*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*800FB998 000F8798*/ PPC::Runtime::ASM::bne(.L_800FB9A0);
/*800FB99C 000F879C*/ PPC::Runtime::ASM::b(.L_800FB9A4);
RUNTIME_PPC_JUMP_LABEL(.L_800FB9A0, 0x800FB9A0) //this is a jump label
/*800FB9A0 000F87A0*/ PPC::Runtime::ASM::fneg(context->f31, context->f31);
RUNTIME_PPC_JUMP_LABEL(.L_800FB9A4, 0x800FB9A4) //this is a jump label
/*800FB9A4 000F87A4*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FB9A8 000F87A8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FB9AC 000F87AC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800FB9B0 000F87B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r30));
/*800FB9B4 000F87B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*800FB9B8 000F87B8*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
/*800FB9BC 000F87BC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB9C0 000F87C0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800FB9C4 000F87C4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800FB9C8 000F87C8*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800FB9CC 000F87CC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FB9D0 000F87D0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FB9D4 000F87D4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF8E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB9D8 000F87D8*/ PPC::Runtime::ASM::li(context->r7, 0x4);
/*800FB9DC 000F87DC*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_800FB9E0, 0x800FB9E0) //this is a jump label
/*800FB9E0 000F87E0*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FB9E4 000F87E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FB9E8 000F87E8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FB9EC 000F87EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FB9F0 000F87F0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FB9F4 000F87F4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FB9F8 000F87F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FB9FC 000F87FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800FBA00 000F8800*/ PPC::Runtime::ASM::blr();
}