//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_801A0044(PPC::Runtime::GCContext* context)
{
/*801A0044 0019CE44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A0048 0019CE48*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A004C 0019CE4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A0050 0019CE50*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801A0054 0019CE54*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A0058 0019CE58*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A005C 0019CE5C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A0060 0019CE60*/ PPC::Runtime::ASM::bl(fn_80190948);
/*801A0064 0019CE64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A0068 0019CE68*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A006C 0019CE6C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A0070 0019CE70*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A0074 0019CE74*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801A0078 0019CE78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A007C 0019CE7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A0080 0019CE80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A0084 0019CE84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A0088 0019CE88*/ PPC::Runtime::ASM::blr();
}