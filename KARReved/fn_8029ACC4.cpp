//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029ACC4(PPC::Runtime::GCContext* context)
{
/*8029ACC4 00297AC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029ACC8 00297AC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029ACCC 00297ACC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029ACD0 00297AD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029ACD4 00297AD4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029ACD8 00297AD8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029ACDC 00297ADC*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029ACE0 00297AE0*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029ACE4 00297AE4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029ACE8 00297AE8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029ACEC 00297AEC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029ACF0 00297AF0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029ACF4 00297AF4*/ PPC::Runtime::ASM::bctrl();
/*8029ACF8 00297AF8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029ACFC 00297AFC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AD00 00297B00*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AD04 00297B04*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029AD08 00297B08*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AD0C 00297B0C*/ PPC::Runtime::ASM::bctrl();
/*8029AD10 00297B10*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029AD14 00297B14*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029AD18 00297B18*/ PPC::Runtime::ASM::li(context->r5, 0xe);
/*8029AD1C 00297B1C*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029AD20 00297B20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AD24 00297B24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AD28 00297B28*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AD2C 00297B2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029AD30 00297B30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029AD34 00297B34*/ PPC::Runtime::ASM::blr();
}