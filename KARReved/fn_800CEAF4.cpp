//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800CEAF4(PPC::Runtime::GCContext* context)
{
/*800CEAF4 000CB8F4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CEAF8 000CB8F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800CEAFC 000CB8FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800CEB00 000CB900*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800CEB04 000CB904*/ PPC::Runtime::ASM::beq(.L_800CEB10);
/*800CEB08 000CB908*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r3));
/*800CEB0C 000CB90C*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800CEB10, 0x800CEB10) //this is a jump label
/*800CEB10 000CB910*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CEB14 000CB914*/ PPC::Runtime::ASM::blr();
}