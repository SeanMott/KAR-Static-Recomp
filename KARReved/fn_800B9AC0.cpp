//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_grGetStageScale.hpp"
#include "fn_80054320.hpp"
#include "fn_800B5B94.hpp"
#include "fn_800BA738.hpp"



void fn_800B9AC0(PPC::Runtime::GCContext* context)
{
/*800B9AC0 000B68C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x80, context->r1));
/*800B9AC4 000B68C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B9AC8 000B68C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*800B9ACC 000B68CC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x80);
/*800B9AD0 000B68D0*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800B9AD4 000B68D4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800B9AD8 000B68D8*/ PPC::Runtime::ASM::lis(context->r9, STRUCT_VALUE_4BYTE_19 @ Get_MemoryOffset_HighBit);
/*800B9ADC 000B68DC*/ PPC::Runtime::ASM::lwzu(context->r4, STRUCT_VALUE_4BYTE_19 @ Get_MemoryOffset_LowBit ( context->r9 ));
/*800B9AE0 000B68E0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800B9AE4 000B68E4*/ PPC::Runtime::ASM::cmpwi(context->r30, -0x1);
/*800B9AE8 000B68E8*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800B9AEC 000B68EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r9));
/*800B9AF0 000B68F0*/ PPC::Runtime::ASM::mr(context->r25, context->r6);
/*800B9AF4 000B68F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r9));
/*800B9AF8 000B68F8*/ PPC::Runtime::ASM::mr(context->r26, context->r7);
/*800B9AFC 000B68FC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800B9B00 000B6900*/ PPC::Runtime::ASM::mr(context->r27, context->r8);
/*800B9B04 000B6904*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B9B08 000B6908*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800B9B0C 000B690C*/ PPC::Runtime::ASM::beq(.L_800B9C5C);
/*800B9B10 000B6910*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800B9B14 000B6914*/ PPC::Runtime::ASM::blt(.L_800B9B20);
/*800B9B18 000B6918*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x20);
/*800B9B1C 000B691C*/ PPC::Runtime::ASM::blt(.L_800B9B28);
RUNTIME_PPC_JUMP_LABEL(.L_800B9B20, 0x800B9B20) //this is a jump label
/*800B9B20 000B6920*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B9B24 000B6924*/ PPC::Runtime::ASM::b(.L_800B9B3C);
RUNTIME_PPC_JUMP_LABEL(.L_800B9B28, 0x800B9B28) //this is a jump label
/*800B9B28 000B6928*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B9B2C 000B692C*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800B9B30 000B6930*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B9B34 000B6934*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800B9B38 000B6938*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B9B3C, 0x800B9B3C) //this is a jump label
/*800B9B3C 000B693C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9B40 000B6940*/ PPC::Runtime::ASM::beq(.L_800B9B4C);
/*800B9B44 000B6944*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800B9B48 000B6948*/ PPC::Runtime::ASM::b(.L_800B9B50);
RUNTIME_PPC_JUMP_LABEL(.L_800B9B4C, 0x800B9B4C) //this is a jump label
/*800B9B4C 000B694C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9B50, 0x800B9B50) //this is a jump label
/*800B9B50 000B6950*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9B54 000B6954*/ PPC::Runtime::ASM::beq(.L_800B9B60);
/*800B9B58 000B6958*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800B9B5C 000B695C*/ PPC::Runtime::ASM::b(.L_800B9B64);
RUNTIME_PPC_JUMP_LABEL(.L_800B9B60, 0x800B9B60) //this is a jump label
/*800B9B60 000B6960*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9B64, 0x800B9B64) //this is a jump label
/*800B9B64 000B6964*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800B9B68 000B6968*/ PPC::Runtime::ASM::beq(.L_800B9C5C);
/*800B9B6C 000B696C*/ PPC::Runtime::ASM::bl(fn_grGetStageScale);
/*800B9B70 000B6970*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800B9B74 000B6974*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800B9B78 000B6978*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B9B7C 000B697C*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*800B9B80 000B6980*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800B9B84 000B6984*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f1);
/*800B9B88 000B6988*/ PPC::Runtime::ASM::fmuls(context->f2, context->f2, context->f1);
/*800B9B8C 000B698C*/ PPC::Runtime::ASM::mr(context->r6, context->r25);
/*800B9B90 000B6990*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*800B9B94 000B6994*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x30);
/*800B9B98 000B6998*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800B9B9C 000B699C*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x8);
/*800B9BA0 000B69A0*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B9BA4 000B69A4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800B9BA8 000B69A8*/ PPC::Runtime::ASM::bl(fn_80054320);
/*800B9BAC 000B69AC*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B9BB0 000B69B0*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 3);
/*800B9BB4 000B69B4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B9BB8 000B69B8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800B9BBC 000B69BC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x238, context->r4));
/*800B9BC0 000B69C0*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800B9BC4 000B69C4*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r0);
/*800B9BC8 000B69C8*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r0);
/*800B9BCC 000B69CC*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800B9BD0 000B69D0*/ PPC::Runtime::ASM::blt(.L_800B9BDC);
/*800B9BD4 000B69D4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x20);
/*800B9BD8 000B69D8*/ PPC::Runtime::ASM::blt(.L_800B9BE4);
RUNTIME_PPC_JUMP_LABEL(.L_800B9BDC, 0x800B9BDC) //this is a jump label
/*800B9BDC 000B69DC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B9BE0 000B69E0*/ PPC::Runtime::ASM::b(.L_800B9BF0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9BE4, 0x800B9BE4) //this is a jump label
/*800B9BE4 000B69E4*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800B9BE8 000B69E8*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r0);
/*800B9BEC 000B69EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B9BF0, 0x800B9BF0) //this is a jump label
/*800B9BF0 000B69F0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9BF4 000B69F4*/ PPC::Runtime::ASM::beq(.L_800B9C00);
/*800B9BF8 000B69F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800B9BFC 000B69FC*/ PPC::Runtime::ASM::b(.L_800B9C04);
RUNTIME_PPC_JUMP_LABEL(.L_800B9C00, 0x800B9C00) //this is a jump label
/*800B9C00 000B6A00*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9C04, 0x800B9C04) //this is a jump label
/*800B9C04 000B6A04*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9C08 000B6A08*/ PPC::Runtime::ASM::beq(.L_800B9C14);
/*800B9C0C 000B6A0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800B9C10 000B6A10*/ PPC::Runtime::ASM::b(.L_800B9C18);
RUNTIME_PPC_JUMP_LABEL(.L_800B9C14, 0x800B9C14) //this is a jump label
/*800B9C14 000B6A14*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B9C18, 0x800B9C18) //this is a jump label
/*800B9C18 000B6A18*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B9C1C 000B6A1C*/ PPC::Runtime::ASM::beq(.L_800B9C54);
/*800B9C20 000B6A20*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x30);
/*800B9C24 000B6A24*/ PPC::Runtime::ASM::li(context->r7, 0x1e);
/*800B9C28 000B6A28*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800B9C2C 000B6A2C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800B9C30 000B6A30*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*800B9C34 000B6A34*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*800B9C38 000B6A38*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800B9C3C 000B6A3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800B9C40 000B6A40*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800B9C44 000B6A44*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800B9C48 000B6A48*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B9C4C 000B6A4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800B9C50 000B6A50*/ PPC::Runtime::ASM::bl(fn_800B5B94);
RUNTIME_PPC_JUMP_LABEL(.L_800B9C54, 0x800B9C54) //this is a jump label
/*800B9C54 000B6A54*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800B9C58 000B6A58*/ PPC::Runtime::ASM::bl(fn_800BA738);
RUNTIME_PPC_JUMP_LABEL(.L_800B9C5C, 0x800B9C5C) //this is a jump label
/*800B9C5C 000B6A5C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x80);
/*800B9C60 000B6A60*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800B9C64 000B6A64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*800B9C68 000B6A68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B9C6C 000B6A6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x80);
/*800B9C70 000B6A70*/ PPC::Runtime::ASM::blr();
}