//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000BF8C(PPC::Runtime::GCContext* context)
{
/*8000BF8C 00008D8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000BF90 00008D90*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000BF94 00008D94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BF98 00008D98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BF9C 00008D9C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8000BFA0 00008DA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BFA4 00008DA4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000BFA8 00008DA8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BFAC 00008DAC*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8000BFB0 00008DB0*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x9);
/*8000BFB4 00008DB4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0xd28);
/*8000BFB8 00008DB8*/ PPC::Runtime::ASM::stbx(context->r31, context->r3, context->r0);
/*8000BFBC 00008DBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BFC0 00008DC0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BFC4 00008DC4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BFC8 00008DC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000BFCC 00008DCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000BFD0 00008DD0*/ PPC::Runtime::ASM::blr();
}