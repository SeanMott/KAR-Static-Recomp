//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "memset.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_GetNbBits.hpp"
#include "fn___assert.hpp"



void fn_HSD_ObjAllocInit(PPC::Runtime::GCContext* context)
{
/*8041825C 0041505C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80418260 00415060*/ PPC::Runtime::ASM::mflr(context->r0);
/*80418264 00415064*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80418268 00415068*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041826C 0041506C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80418270 00415070*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80418274 00415074*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80418278 00415078*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8041827C 0041507C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/* 80418280 00415080  7C 7C 1B 79 */ mr. context->r28 , context->r3
/*80418284 00415084*/ PPC::Runtime::ASM::lis(context->r3, lbl_80504018 @ Get_MemoryOffset_HighBit);
/*80418288 00415088*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80504018 @ Get_MemoryOffset_LowBit);
/*8041828C 0041508C*/ PPC::Runtime::ASM::bne(.L_804182A0);
/*80418290 00415090*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*80418294 00415094*/ PPC::Runtime::ASM::li(context->r4, 0x182);
/*80418298 00415098*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_508 @ Get_MemoryOffset_SDA21);
/*8041829C 0041509C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804182A0, 0x804182A0) //this is a jump label
/*804182A0 004150A0*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*804182A4 004150A4*/ PPC::Runtime::ASM::beq(.L_804182D8);
/*804182A8 004150A8*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DE2D0 @ Get_MemoryOffset_SDA21);
/*804182AC 004150AC*/ PPC::Runtime::ASM::b(.L_804182C8);
RUNTIME_PPC_JUMP_LABEL(.L_804182B0, 0x804182B0) //this is a jump label
/*804182B0 004150B0*/ PPC::Runtime::ASM::cmplw(context->r4, context->r28);
/*804182B4 004150B4*/ PPC::Runtime::ASM::bne(.L_804182C4);
/*804182B8 004150B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*804182BC 004150BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*804182C0 004150C0*/ PPC::Runtime::ASM::b(.L_804182C8);
RUNTIME_PPC_JUMP_LABEL(.L_804182C4, 0x804182C4) //this is a jump label
/*804182C4 004150C4*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x28);
RUNTIME_PPC_JUMP_LABEL(.L_804182C8, 0x804182C8) //this is a jump label
/*804182C8 004150C8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*804182CC 004150CC*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*804182D0 004150D0*/ PPC::Runtime::ASM::bne(.L_804182B0);
/*804182D4 004150D4*/ PPC::Runtime::ASM::b(.L_804182E0);
RUNTIME_PPC_JUMP_LABEL(.L_804182D8, 0x804182D8) //this is a jump label
/*804182D8 004150D8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*804182DC 004150DC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE2D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_804182E0, 0x804182E0) //this is a jump label
/*804182E0 004150E0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*804182E4 004150E4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*804182E8 004150E8*/ PPC::Runtime::ASM::li(context->r5, 0x2c);
/*804182EC 004150EC*/ PPC::Runtime::ASM::bl(memset);
/*804182F0 004150F0*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*804182F4 004150F4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*804182F8 004150F8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*804182FC 004150FC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x20);
/*80418300 00415100*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*80418304 00415104*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*80418308 00415108*/ PPC::Runtime::ASM::ble(.L_8041831C);
/*8041830C 0041510C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*80418310 00415110*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1c);
/*80418314 00415114*/ PPC::Runtime::ASM::li(context->r4, 0x18d);
/*80418318 00415118*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041831C, 0x8041831C) //this is a jump label
/*8041831C 0041511C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80418320 00415120*/ PPC::Runtime::ASM::bl(fn_HSD_GetNbBits);
/*80418324 00415124*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*80418328 00415128*/ PPC::Runtime::ASM::beq(.L_8041833C);
/*8041832C 0041512C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*80418330 00415130*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x28);
/*80418334 00415134*/ PPC::Runtime::ASM::li(context->r4, 0x18e);
/*80418338 00415138*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041833C, 0x8041833C) //this is a jump label
/*8041833C 0041513C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r28));
/*80418340 00415140*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r28));
/*80418344 00415144*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x1);
/*80418348 00415148*/ PPC::Runtime::ASM::add(context->r0, context->r29, context->r3);
/*8041834C 0041514C*/ PPC::Runtime::ASM::andc(context->r0, context->r0, context->r3);
/*80418350 00415150*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r28));
/*80418354 00415154*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE2D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80418358 00415158*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*8041835C 0041515C*/ PPC::Runtime::ASM::stw(context->r28, STRUCT_BYTE4_COUNT_1805DE2D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80418360 00415160*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80418364 00415164*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80418368 00415168*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041836C 0041516C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80418370 00415170*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80418374 00415174*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80418378 00415178*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041837C 0041517C*/ PPC::Runtime::ASM::blr();
}