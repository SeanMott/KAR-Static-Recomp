//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803CB3A8.hpp"



void fn_803CB628(PPC::Runtime::GCContext* context)
{
/*803CB628 003C8428*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CB62C 003C842C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CB630 003C8430*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803CB634 003C8434*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803CB638 003C8438*/ PPC::Runtime::ASM::li(context->r31, 0x9);
/*803CB63C 003C843C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803CB640 003C8440*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803CB644 003C8444*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803CB648 003C8448*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803CB64C, 0x803CB64C) //this is a jump label
/*803CB64C 003C844C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803CB650 003C8450*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803CB654 003C8454*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803CB658 003C8458*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x4);
/*803CB65C 003C845C*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x8);
/*803CB660 003C8460*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0xc);
/*803CB664 003C8464*/ PPC::Runtime::ASM::bl(fn_803CB3A8);
/*803CB668 003C8468*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*803CB66C 003C846C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x14);
/*803CB670 003C8470*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x10);
/*803CB674 003C8474*/ PPC::Runtime::ASM::ble(.L_803CB64C);
/*803CB678 003C8478*/ PPC::Runtime::ASM::li(context->r0, 0xff);
/*803CB67C 003C847C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803CB680 003C8480*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803CB684 003C8484*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803CB688 003C8488*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803CB68C 003C848C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803CB690 003C8490*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803CB694 003C8494*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CB698 003C8498*/ PPC::Runtime::ASM::blr();
}