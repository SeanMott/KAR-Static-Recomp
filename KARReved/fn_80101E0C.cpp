//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F728C.hpp"
#include "fn_800EA180.hpp"
#include "fn_800D7AD0.hpp"
#include "fn_killWhispy.hpp"
#include "fn_801023E8.hpp"



void fn_80101E0C(PPC::Runtime::GCContext* context)
{
/*80101E0C 000FEC0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80101E10 000FEC10*/ PPC::Runtime::ASM::mflr(context->r0);
/*80101E14 000FEC14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80101E18 000FEC18*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80101E1C 000FEC1C*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*80101E20 000FEC20*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80101E24 000FEC24*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*80101E28 000FEC28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80101E2C 000FEC2C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80101E30 000FEC30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80101E34 000FEC34*/ PPC::Runtime::ASM::mr(context->r28, context->r31);
/*80101E38 000FEC38*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80101E3C 000FEC3C*/ PPC::Runtime::ASM::b(.L_80101E74);
RUNTIME_PPC_JUMP_LABEL(.L_80101E40, 0x80101E40) //this is a jump label
/*80101E40 000FEC40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r28));
/*80101E44 000FEC44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14c, context->r28));
/*80101E48 000FEC48*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r29);
/*80101E4C 000FEC4C*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r29);
/*80101E50 000FEC50*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*80101E54 000FEC54*/ PPC::Runtime::ASM::beq(.L_80101E6C);
/*80101E58 000FEC58*/ PPC::Runtime::ASM::bl(fn_800F728C);
/*80101E5C 000FEC5C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80101E60 000FEC60*/ PPC::Runtime::ASM::bne(.L_80101E6C);
/*80101E64 000FEC64*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14c, context->r28));
/*80101E68 000FEC68*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_80101E6C, 0x80101E6C) //this is a jump label
/*80101E6C 000FEC6C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x8);
/*80101E70 000FEC70*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80101E74, 0x80101E74) //this is a jump label
/*80101E74 000FEC74*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r27));
/*80101E78 000FEC78*/ PPC::Runtime::ASM::cmpw(context->r26, context->r7);
/*80101E7C 000FEC7C*/ PPC::Runtime::ASM::blt(.L_80101E40);
/*80101E80 000FEC80*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*80101E84 000FEC84*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*80101E88 000FEC88*/ PPC::Runtime::ASM::mr(context->r5, context->r8);
/*80101E8C 000FEC8C*/ PPC::Runtime::ASM::mr(context->r4, context->r8);
/*80101E90 000FEC90*/ PPC::Runtime::ASM::mtctr(context->r7);
/*80101E94 000FEC94*/ PPC::Runtime::ASM::cmpwi(context->r7, 0x0);
/*80101E98 000FEC98*/ PPC::Runtime::ASM::ble(.L_80101EC0);
RUNTIME_PPC_JUMP_LABEL(.L_80101E9C, 0x80101E9C) //this is a jump label
/*80101E9C 000FEC9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r6));
/*80101EA0 000FECA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14c, context->r6));
/*80101EA4 000FECA4*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r4);
/*80101EA8 000FECA8*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r5);
/*80101EAC 000FECAC*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*80101EB0 000FECB0*/ PPC::Runtime::ASM::bne(.L_80101EC0);
/*80101EB4 000FECB4*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x8);
/*80101EB8 000FECB8*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*80101EBC 000FECBC*/ PPC::Runtime::ASM::bdnz(.L_80101E9C);
RUNTIME_PPC_JUMP_LABEL(.L_80101EC0, 0x80101EC0) //this is a jump label
/*80101EC0 000FECC0*/ PPC::Runtime::ASM::cmpw(context->r8, context->r7);
/*80101EC4 000FECC4*/ PPC::Runtime::ASM::bne(.L_80101F40);
/*80101EC8 000FECC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r31));
/*80101ECC 000FECCC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80101ED0 000FECD0*/ PPC::Runtime::ASM::beq(.L_80101EF0);
/*80101ED4 000FECD4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/* 80101ED8 000FECD8  54 00 C0 02 */ extlwi context->r0 , context->r0 , 2 , 24
/*80101EDC 000FECDC*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 31);
/*80101EE0 000FECE0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80101EE4 000FECE4*/ PPC::Runtime::ASM::beq(.L_80101EF0);
/*80101EE8 000FECE8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*80101EEC 000FECEC*/ PPC::Runtime::ASM::bl(fn_800EA180);
RUNTIME_PPC_JUMP_LABEL(.L_80101EF0, 0x80101EF0) //this is a jump label
/*80101EF0 000FECF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*80101EF4 000FECF4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80101EF8 000FECF8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80101EFC 000FECFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*80101F00 000FED00*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80101F04 000FED04*/ PPC::Runtime::ASM::bl(fn_800D7AD0);
/*80101F08 000FED08*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF95C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101F0C 000FED0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80101F10 000FED10*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80101F14 000FED14*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*80101F18 000FED18*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*80101F1C 000FED1C*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*80101F20 000FED20*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80101F24 000FED24*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80101F28 000FED28*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*80101F2C 000FED2C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80101F30 000FED30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80101F34 000FED34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*80101F38 000FED38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*80101F3C 000FED3C*/ PPC::Runtime::ASM::bl(fn_801023E8);
RUNTIME_PPC_JUMP_LABEL(.L_80101F40, 0x80101F40) //this is a jump label
/*80101F40 000FED40*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80101F44 000FED44*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*80101F48 000FED48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80101F4C 000FED4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80101F50 000FED50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80101F54 000FED54*/ PPC::Runtime::ASM::blr();
}