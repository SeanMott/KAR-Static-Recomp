//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_WriteCallback_1.hpp"
#include "fn_WriteCallback_1.hpp"
#include "fn___CARDWrite.hpp"
#include "fn___CARDPutControlBlock.hpp"



void fn_EraseCallback_1(PPC::Runtime::GCContext* context)
{
/*803E46C8 003E14C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E46CC 003E14CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E46D0 003E14D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803E46D4 003E14D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E46D8 003E14D8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E46DC 003E14DC*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E46E0 003E14E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E46E4 003E14E4*/ PPC::Runtime::ASM::mulli(context->r5, context->r31, 0x110);
/*803E46E8 003E14E8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E46EC 003E14EC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/* 803E46F0 003E14F0  7C 9D 23 79 */ mr. context->r29 , context->r4
/*803E46F4 003E14F4*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r5);
/*803E46F8 003E14F8*/ PPC::Runtime::ASM::blt(.L_803E4734);
/*803E46FC 003E14FC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r30));
/*803E4700 003E1500*/ PPC::Runtime::ASM::lis(context->r3, fn_WriteCallback_1 @ Get_MemoryOffset_HighBit);
/*803E4704 003E1504*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r30));
/*803E4708 003E1508*/ PPC::Runtime::ASM::addi(context->r7, context->r3, fn_WriteCallback_1 @ Get_MemoryOffset_LowBit);
/*803E470C 003E150C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803E4710 003E1510*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r5);
/*803E4714 003E1514*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 13);
/*803E4718 003E1518*/ PPC::Runtime::ASM::mullw(context->r4, context->r3, context->r0);
/*803E471C 003E151C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0x0);
/*803E4720 003E1520*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803E4724 003E1524*/ PPC::Runtime::ASM::li(context->r5, 0x2000);
/*803E4728 003E1528*/ PPC::Runtime::ASM::bl(fn___CARDWrite);
/* 803E472C 003E152C  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*803E4730 003E1530*/ PPC::Runtime::ASM::bge(.L_803E4774);
RUNTIME_PPC_JUMP_LABEL(.L_803E4734, 0x803E4734) //this is a jump label
/*803E4734 003E1534*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r30));
/*803E4738 003E1538*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E473C 003E153C*/ PPC::Runtime::ASM::bne(.L_803E474C);
/*803E4740 003E1540*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803E4744 003E1544*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*803E4748 003E1548*/ PPC::Runtime::ASM::bl(fn___CARDPutControlBlock);
RUNTIME_PPC_JUMP_LABEL(.L_803E474C, 0x803E474C) //this is a jump label
/*803E474C 003E154C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r30));
/*803E4750 003E1550*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E4754 003E1554*/ PPC::Runtime::ASM::mr(context->r12, context->r0);
/*803E4758 003E1558*/ PPC::Runtime::ASM::beq(.L_803E4774);
/*803E475C 003E155C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E4760 003E1560*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E4764 003E1564*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r30));
/*803E4768 003E1568*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803E476C 003E156C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/* 803E4770 003E1570  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E4774, 0x803E4774) //this is a jump label
/*803E4774 003E1574*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803E4778 003E1578*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E477C 003E157C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E4780 003E1580*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E4784 003E1584*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803E4788 003E1588*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E478C 003E158C*/ PPC::Runtime::ASM::blr();
}