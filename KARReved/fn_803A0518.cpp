//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8039A878.hpp"
#include "fn_8039A878.hpp"



void fn_803A0518(PPC::Runtime::GCContext* context)
{
/*803A0518 0039D318*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803A051C 0039D31C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803A0520 0039D320*/ PPC::Runtime::ASM::li(context->r5, lbl_805DC4E0 @ Get_MemoryOffset_SDA21);
/*803A0524 0039D324*/ PPC::Runtime::ASM::li(context->r6, lbl_805DC488 @ Get_MemoryOffset_SDA21);
/*803A0528 0039D328*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803A052C 0039D32C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803A0530 0039D330*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803A0534 0039D334*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803A0538 0039D338*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803A053C 0039D33C*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*803A0540 0039D340*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803A0544 0039D344*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*803A0548 0039D348*/ PPC::Runtime::ASM::li(context->r4, 0xd);
/*803A054C 0039D34C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803A0550 0039D350*/ PPC::Runtime::ASM::bl(fn_8039A878);
/* 803A0554 0039D354  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*803A0558 0039D358*/ PPC::Runtime::ASM::beq(.L_803A0570);
/*803A055C 0039D35C*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*803A0560 0039D360*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803A0564 0039D364*/ PPC::Runtime::ASM::beq(.L_803A0570);
/*803A0568 0039D368*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*803A056C 0039D36C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_803A0570, 0x803A0570) //this is a jump label
/*803A0570 0039D370*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803A0574 0039D374*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*803A0578 0039D378*/ PPC::Runtime::ASM::bl(fn_8039A878);
/* 803A057C 0039D37C  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*803A0580 0039D380*/ PPC::Runtime::ASM::beq(.L_803A05A0);
/*803A0584 0039D384*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r30));
/*803A0588 0039D388*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*803A058C 0039D38C*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*803A0590 0039D390*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*803A0594 0039D394*/ PPC::Runtime::ASM::bge(.L_803A05A0);
/*803A0598 0039D398*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*803A059C 0039D39C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_803A05A0, 0x803A05A0) //this is a jump label
/*803A05A0 0039D3A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803A05A4 0039D3A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803A05A8 0039D3A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803A05AC 0039D3AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803A05B0 0039D3B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803A05B4 0039D3B4*/ PPC::Runtime::ASM::blr();
}