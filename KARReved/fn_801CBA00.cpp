//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"



void fn_801CBA00(PPC::Runtime::GCContext* context)
{
/*801CBA00 001C8800*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CBA04 001C8804*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CBA08 001C8808*/ PPC::Runtime::ASM::li(context->r6, STRUCT_BYTE4_COUNT_1805DD850 @ Get_MemoryOffset_SDA21);
/*801CBA0C 001C880C*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x400);
/*801CBA10 001C8810*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CBA14 001C8814*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801CBA18 001C8818*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801CBA1C 001C881C*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r3));
/*801CBA20 001C8820*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801CBA24 001C8824*/ PPC::Runtime::ASM::lwzx(context->r3, context->r6, context->r0);
/*801CBA28 001C8828*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801CBA2C 001C882C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801CBA30 001C8830*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*801CBA34 001C8834*/ PPC::Runtime::ASM::lwzx(context->r3, context->r7, context->r0);
/*801CBA38 001C8838*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*801CBA3C 001C883C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CBA40 001C8840*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CBA44 001C8844*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CBA48 001C8848*/ PPC::Runtime::ASM::blr();
}