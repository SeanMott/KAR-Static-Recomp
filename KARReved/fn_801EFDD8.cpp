//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801EFE10.hpp"



void fn_801EFDD8(PPC::Runtime::GCContext* context)
{
/*801EFDD8 001ECBD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EFDDC 001ECBDC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EFDE0 001ECBE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFDE4 001ECBE4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r3));
/* 801EFDE8 001ECBE8  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*801EFDEC 001ECBEC*/ PPC::Runtime::ASM::beq(.L_801EFDFC);
/*801EFDF0 001ECBF0*/ PPC::Runtime::ASM::bl(fn_801EFE10);
/*801EFDF4 001ECBF4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EFDF8 001ECBF8*/ PPC::Runtime::ASM::b(.L_801EFE00);
RUNTIME_PPC_JUMP_LABEL(.L_801EFDFC, 0x801EFDFC) //this is a jump label
/*801EFDFC 001ECBFC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801EFE00, 0x801EFE00) //this is a jump label
/*801EFE00 001ECC00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFE04 001ECC04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EFE08 001ECC08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EFE0C 001ECC0C*/ PPC::Runtime::ASM::blr();
}