//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_80195F28.hpp"
#include "fn_801B8144.hpp"
#include "fn_801B8144.hpp"



void fn_801B8168(PPC::Runtime::GCContext* context)
{
/*801B8168 001B4F68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B816C 001B4F6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B8170 001B4F70*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801B8174 001B4F74*/ PPC::Runtime::ASM::li(context->r4, 0x2d);
/*801B8178 001B4F78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B817C 001B4F7C*/ PPC::Runtime::ASM::li(context->r5, 0x6c);
/*801B8180 001B4F80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B8184 001B4F84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B8188 001B4F88*/ PPC::Runtime::ASM::ble(.L_801B8190);
/*801B818C 001B4F8C*/ PPC::Runtime::ASM::li(context->r5, 0x6e);
RUNTIME_PPC_JUMP_LABEL(.L_801B8190, 0x801B8190) //this is a jump label
/*801B8190 001B4F90*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1704 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B8194 001B4F94*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B8198 001B4F98*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E1700 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B819C 001B4F9C*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B81A0 001B4FA0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801B81A4 001B4FA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B81A8 001B4FA8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r4));
/*801B81AC 001B4FAC*/ PPC::Runtime::ASM::bl(fn_80195F28);
/*801B81B0 001B4FB0*/ PPC::Runtime::ASM::lis(context->r3, fn_801B8144 @ Get_MemoryOffset_HighBit);
/*801B81B4 001B4FB4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B8144 @ Get_MemoryOffset_LowBit);
/*801B81B8 001B4FB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7cc, context->r31));
/*801B81BC 001B4FBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B81C0 001B4FC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B81C4 001B4FC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B81C8 001B4FC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B81CC 001B4FCC*/ PPC::Runtime::ASM::blr();
}