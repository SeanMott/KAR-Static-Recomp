//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80075FB0(PPC::Runtime::GCContext* context)
{
/*80075FB0 00072DB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80075FB4 00072DB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80075FB8 00072DB8*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180552338 @ Get_MemoryOffset_HighBit);
/*80075FBC 00072DBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80075FC0 00072DC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80075FC4 00072DC4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, STRUCT_BYTE4_COUNT_180552338 @ Get_MemoryOffset_LowBit);
/*80075FC8 00072DC8*/ PPC::Runtime::ASM::bl(DVDGetDriveStatus);
/*80075FCC 00072DCC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80075FD0 00072DD0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xc);
/*80075FD4 00072DD4*/ PPC::Runtime::ASM::bgt(.L_80076020);
/*80075FD8 00072DD8*/ PPC::Runtime::ASM::lis(context->r3, jumptable_8049A304 @ Get_MemoryOffset_HighBit);
/*80075FDC 00072DDC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80075FE0 00072DE0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_8049A304 @ Get_MemoryOffset_LowBit);
/*80075FE4 00072DE4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80075FE8 00072DE8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*80075FEC 00072DEC*/ PPC::Runtime::ASM::bctr();
/*80075FF0 00072DF0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80075FF4 00072DF4*/ PPC::Runtime::ASM::b(.L_80076024);
/*80075FF8 00072DF8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80075FFC 00072DFC*/ PPC::Runtime::ASM::b(.L_80076024);
/*80076000 00072E00*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80076004 00072E04*/ PPC::Runtime::ASM::b(.L_80076024);
/*80076008 00072E08*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*8007600C 00072E0C*/ PPC::Runtime::ASM::b(.L_80076024);
/*80076010 00072E10*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*80076014 00072E14*/ PPC::Runtime::ASM::b(.L_80076024);
/*80076018 00072E18*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8007601C 00072E1C*/ PPC::Runtime::ASM::b(.L_80076024);
RUNTIME_PPC_JUMP_LABEL(.L_80076020, 0x80076020) //this is a jump label
/*80076020 00072E20*/ PPC::Runtime::ASM::li(context->r3, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80076024, 0x80076024) //this is a jump label
/*80076024 00072E24*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*80076028 00072E28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007602C 00072E2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80076030 00072E30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80076034 00072E34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80076038 00072E38*/ PPC::Runtime::ASM::blr();
}