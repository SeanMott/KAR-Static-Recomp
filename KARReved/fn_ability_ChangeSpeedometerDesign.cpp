//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80236C40.hpp"



void fn_ability_ChangeSpeedometerDesign(PPC::Runtime::GCContext* context)
{
/*801A809C 001A4E9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A80A0 001A4EA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A80A4 001A4EA4*/ PPC::Runtime::ASM::cmpwi(context->r4, 0xa);
/*801A80A8 001A4EA8*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*801A80AC 001A4EAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A80B0 001A4EB0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r3));
/*801A80B4 001A4EB4*/ PPC::Runtime::ASM::bne(.L_801A80CC);
/*801A80B8 001A4EB8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r6));
/*801A80BC 001A4EBC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A80C0 001A4EC0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*801A80C4 001A4EC4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r6));
/*801A80C8 001A4EC8*/ PPC::Runtime::ASM::b(.L_801A80D8);
RUNTIME_PPC_JUMP_LABEL(.L_801A80CC, 0x801A80CC) //this is a jump label
/*801A80CC 001A4ECC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r6));
/*801A80D0 001A4ED0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 6, 25, 25);
/*801A80D4 001A4ED4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_801A80D8, 0x801A80D8) //this is a jump label
/*801A80D8 001A4ED8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r6));
/*801A80DC 001A4EDC*/ PPC::Runtime::ASM::lis(context->r4, 0x4);
/*801A80E0 001A4EE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*801A80E4 001A4EE4*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x5671);
/*801A80E8 001A4EE8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43c, context->r6));
/*801A80EC 001A4EEC*/ PPC::Runtime::ASM::li(context->r6, 0xc8);
/*801A80F0 001A4EF0*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r7));
/*801A80F4 001A4EF4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801A80F8 001A4EF8*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801A80FC 001A4EFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A8100 001A4F00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A8104 001A4F04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A8108 001A4F08*/ PPC::Runtime::ASM::blr();
}