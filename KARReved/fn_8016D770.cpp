//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8016D770(PPC::Runtime::GCContext* context)
{
/*8016D770 0016A570*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016D774 0016A574*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016D778 0016A578*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016D77C 0016A57C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016D780 0016A580*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8016D784 0016A584*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016D788 0016A588*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016D78C 0016A58C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8016D790, 0x8016D790) //this is a jump label
/*8016D790 0016A590*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8016D794 0016A594*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8016D798 0016A598*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8016D79C 0016A59C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8016D7A0 0016A5A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb30, context->r30));
/*8016D7A4 0016A5A4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8016D7A8 0016A5A8*/ PPC::Runtime::ASM::beq(.L_8016D7B4);
/*8016D7AC 0016A5AC*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8016D7B0 0016A5B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb30, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8016D7B4, 0x8016D7B4) //this is a jump label
/*8016D7B4 0016A5B4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8016D7B8 0016A5B8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8016D7BC 0016A5BC*/ PPC::Runtime::ASM::blt(.L_8016D790);
/*8016D7C0 0016A5C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016D7C4 0016A5C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016D7C8 0016A5C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016D7CC 0016A5CC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016D7D0 0016A5D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016D7D4 0016A5D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016D7D8 0016A5D8*/ PPC::Runtime::ASM::blr();
}