//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D3B8C(PPC::Runtime::GCContext* context)
{
/*800D3B8C 000D098C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D3B90 000D0990*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D3B94 000D0994*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D3B98 000D0998*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3B9C 000D099C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3BA0 000D09A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3BA4 000D09A4*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D3BA8 000D09A8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3BAC 000D09AC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D3BB0 000D09B0*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3BB4 000D09B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D3BB8 000D09B8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D3BBC 000D09BC*/ PPC::Runtime::ASM::bne(.L_800D3BD0);
/*800D3BC0 000D09C0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D3BC4 000D09C4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x66c);
/*800D3BC8 000D09C8*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D3BCC 000D09CC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3BD0, 0x800D3BD0) //this is a jump label
/*800D3BD0 000D09D0*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D3BD4 000D09D4*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800D3BD8 000D09D8*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3BDC 000D09DC*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800D3BE0 000D09E0*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D3BE4 000D09E4  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D3BE8 000D09E8*/ PPC::Runtime::ASM::beq(.L_800D3C18);
/*800D3BEC 000D09EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D3BF0 000D09F0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D3BF4 000D09F4*/ PPC::Runtime::ASM::beq(.L_800D3C00);
/*800D3BF8 000D09F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D3BFC 000D09FC*/ PPC::Runtime::ASM::b(.L_800D3C04);
RUNTIME_PPC_JUMP_LABEL(.L_800D3C00, 0x800D3C00) //this is a jump label
/*800D3C00 000D0A00*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3C04, 0x800D3C04) //this is a jump label
/*800D3C04 000D0A04*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800D3C08 000D0A08*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3C0C 000D0A0C*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D3C10 000D0A10*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D3C14 000D0A14*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D3C18, 0x800D3C18) //this is a jump label
/*800D3C18 000D0A18*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3C1C 000D0A1C*/ PPC::Runtime::ASM::bne(.L_800D3C40);
/*800D3C20 000D0A20*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D3C24 000D0A24*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x67c);
/*800D3C28 000D0A28*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D3C2C 000D0A2C*/ PPC::Runtime::ASM::bl(OSReport);
/*800D3C30 000D0A30*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D3C34 000D0A34*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x68c);
/*800D3C38 000D0A38*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D3C3C 000D0A3C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3C40, 0x800D3C40) //this is a jump label
/*800D3C40 000D0A40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D3C44 000D0A44*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800D3C48 000D0A48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3C4C 000D0A4C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800D3C50 000D0A50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3C54 000D0A54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800D3C58 000D0A58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3C5C 000D0A5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3C60 000D0A60*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3C64 000D0A64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3C68 000D0A68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D3C6C 000D0A6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D3C70 000D0A70*/ PPC::Runtime::ASM::blr();
}