//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_RObjResolveRefsAll.hpp"
#include "fn_HSD_JObjUnref.hpp"
#include "fn_HSD_IDGetDataFromTable.hpp"
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_DObjResolveRefsAll.hpp"



void fn_HSD_JObjResolveRefs(PPC::Runtime::GCContext* context)
{
/*8040B090 00407E90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8040B094 00407E94*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040B098 00407E98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8040B09C 00407E9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8040B0A0 00407EA0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8040B0A4 00407EA4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8040B0A8 00407EA8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 8040B0AC 00407EAC  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*8040B0B0 00407EB0*/ PPC::Runtime::ASM::lis(context->r3, lbl_805037C8 @ Get_MemoryOffset_HighBit);
/*8040B0B4 00407EB4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_805037C8 @ Get_MemoryOffset_LowBit);
/*8040B0B8 00407EB8*/ PPC::Runtime::ASM::beq(.L_8040B16C);
/*8040B0BC 00407EBC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8040B0C0 00407EC0*/ PPC::Runtime::ASM::bne(.L_8040B0C8);
/*8040B0C4 00407EC4*/ PPC::Runtime::ASM::b(.L_8040B16C);
RUNTIME_PPC_JUMP_LABEL(.L_8040B0C8, 0x8040B0C8) //this is a jump label
/*8040B0C8 00407EC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r29));
/*8040B0CC 00407ECC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r30));
/*8040B0D0 00407ED0*/ PPC::Runtime::ASM::bl(fn_HSD_RObjResolveRefsAll);
/*8040B0D4 00407ED4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8040B0D8 00407ED8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 19, 19);
/*8040B0DC 00407EDC*/ PPC::Runtime::ASM::beq(.L_8040B14C);
/*8040B0E0 00407EE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8040B0E4 00407EE4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjUnref);
/*8040B0E8 00407EE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8040B0EC 00407EEC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040B0F0 00407EF0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8040B0F4 00407EF4*/ PPC::Runtime::ASM::bl(fn_HSD_IDGetDataFromTable);
/*8040B0F8 00407EF8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8040B0FC 00407EFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8040B100 00407F00*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8040B104 00407F04*/ PPC::Runtime::ASM::bne(.L_8040B118);
/*8040B108 00407F08*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1d4);
/*8040B10C 00407F0C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_529 @ Get_MemoryOffset_SDA21);
/*8040B110 00407F10*/ PPC::Runtime::ASM::li(context->r4, 0x478);
/*8040B114 00407F14*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040B118, 0x8040B118) //this is a jump label
/*8040B118 00407F18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8040B11C 00407F1C*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8040B120 00407F20*/ PPC::Runtime::ASM::beq(.L_8040B14C);
/*8040B124 00407F24*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8040B128 00407F28*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8040B12C 00407F2C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8040B130 00407F30*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8040B134 00407F34*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*8040B138 00407F38*/ PPC::Runtime::ASM::bne(.L_8040B14C);
/*8040B13C 00407F3C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1e0);
/*8040B140 00407F40*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1ec);
/*8040B144 00407F44*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*8040B148 00407F48*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040B14C, 0x8040B14C) //this is a jump label
/*8040B14C 00407F4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8040B150 00407F50*/ PPC::Runtime::ASM::andi.(context->r0, context->r0, 0x4020);
/*8040B154 00407F54*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/* 8040B158 00407F58  54 00 D9 7F */ srwi. context->r0 , context->r0 , 5
/*8040B15C 00407F5C*/ PPC::Runtime::ASM::beq(.L_8040B16C);
/*8040B160 00407F60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*8040B164 00407F64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*8040B168 00407F68*/ PPC::Runtime::ASM::bl(fn_HSD_DObjResolveRefsAll);
RUNTIME_PPC_JUMP_LABEL(.L_8040B16C, 0x8040B16C) //this is a jump label
/*8040B16C 00407F6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8040B170 00407F70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8040B174 00407F74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8040B178 00407F78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040B17C 00407F7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040B180 00407F80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8040B184 00407F84*/ PPC::Runtime::ASM::blr();
}