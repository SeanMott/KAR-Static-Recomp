//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_802601B8(PPC::Runtime::GCContext* context)
{
/*802601B8 0025CFB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802601BC 0025CFBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802601C0 0025CFC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802601C4 0025CFC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802601C8 0025CFC8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802601CC 0025CFCC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802601D0 0025CFD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*802601D4 0025CFD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802601D8 0025CFD8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*802601DC 0025CFDC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802601E0 0025CFE0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802601E4 0025CFE4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*802601E8 0025CFE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802601EC 0025CFEC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802601F0 0025CFF0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*802601F4 0025CFF4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802601F8 0025CFF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*802601FC 0025CFFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260200 0025D000*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260204 0025D004*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80260208 0025D008*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8026020C 0025D00C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80260210 0025D010*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80260214 0025D014*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260218 0025D018*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8026021C 0025D01C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260220 0025D020*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260224 0025D024*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80260228 0025D028*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8026022C 0025D02C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80260230 0025D030*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80260234 0025D034*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260238 0025D038*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8026023C 0025D03C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260240 0025D040*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80260244 0025D044*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80260248 0025D048*/ PPC::Runtime::ASM::blr();
}