//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80058920.hpp"



void fn_8007B5AC(PPC::Runtime::GCContext* context)
{
/*8007B5AC 000783AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8007B5B0 000783B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8007B5B4 000783B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007B5B8 000783B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8007B5BC 000783BC*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8007B5C0 000783C0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8007B5C4 000783C4  7C 9E 23 79 */ mr. context->r30 , context->r4
/*8007B5C8 000783C8*/ PPC::Runtime::ASM::beq(.L_8007B60C);
/*8007B5CC 000783CC*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*8007B5D0 000783D0*/ PPC::Runtime::ASM::ble(.L_8007B60C);
/*8007B5D4 000783D4*/ PPC::Runtime::ASM::lis(context->r3, lbl_80552A30 @ Get_MemoryOffset_HighBit);
/*8007B5D8 000783D8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80552A30 @ Get_MemoryOffset_LowBit);
/*8007B5DC 000783DC*/ PPC::Runtime::ASM::bl(fn_OSLockMutex);
/*8007B5E0 000783E0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8007B5E4 000783E4*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8007B5E8 000783E8*/ PPC::Runtime::ASM::bl(fn_80058920);
/*8007B5EC 000783EC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1f);
/*8007B5F0 000783F0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD628 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007B5F4 000783F4*/ PPC::Runtime::ASM::clrrwi(context->r31, context->r3, 5);
/*8007B5F8 000783F8*/ PPC::Runtime::ASM::subf(context->r0, context->r31, context->r0);
/*8007B5FC 000783FC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80552A30 @ Get_MemoryOffset_HighBit);
/*8007B600 00078400*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD628 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8007B604 00078404*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80552A30 @ Get_MemoryOffset_LowBit);
/*8007B608 00078408*/ PPC::Runtime::ASM::bl(fn_OSUnlockMutex);
RUNTIME_PPC_JUMP_LABEL(.L_8007B60C, 0x8007B60C) //this is a jump label
/*8007B60C 0007840C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007B610 00078410*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8007B614 00078414*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8007B618 00078418*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007B61C 0007841C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8007B620 00078420*/ PPC::Runtime::ASM::blr();
}