//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_8019F980.hpp"



void fn_801C2020(PPC::Runtime::GCContext* context)
{
/*801C2020 001BEE20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C2024 001BEE24*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C2028 001BEE28*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1910 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C202C 001BEE2C*/ PPC::Runtime::ASM::li(context->r4, 0x21);
/*801C2030 001BEE30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C2034 001BEE34*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801C2038 001BEE38*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801C203C 001BEE3C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1914 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C2040 001BEE40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C2044 001BEE44*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C2048 001BEE48*/ PPC::Runtime::ASM::li(context->r6, 0x40);
/*801C204C 001BEE4C*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801C2050 001BEE50*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r31));
/*801C2054 001BEE54*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801C2058 001BEE58*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 7, 24, 24);
/*801C205C 001BEE5C*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*801C2060 001BEE60*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r31));
/*801C2064 001BEE64*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C2068 001BEE68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x464, context->r31));
/*801C206C 001BEE6C*/ PPC::Runtime::ASM::bl(fn_8019F980);
/*801C2070 001BEE70*/ PPC::Runtime::ASM::li(context->r0, 0xfe);
/*801C2074 001BEE74*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa41, context->r31));
/*801C2078 001BEE78*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa40, context->r31));
/*801C207C 001BEE7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C2080 001BEE80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C2084 001BEE84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C2088 001BEE88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C208C 001BEE8C*/ PPC::Runtime::ASM::blr();
}