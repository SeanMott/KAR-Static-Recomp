//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_strcmpi.hpp"



void fn_80486E84(PPC::Runtime::GCContext* context)
{
/*80486E84 00483C84*/ PPC::Runtime::ASM::mflr(context->r0);
/*80486E88 00483C88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80486E8C 00483C8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*80486E90 00483C90*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80486E94 00483C94*/ PPC::Runtime::ASM::bl(fn_strcmpi);
/*80486E98 00483C98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80486E9C 00483C9C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*80486EA0 00483CA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80486EA4 00483CA4*/ PPC::Runtime::ASM::blr();
}