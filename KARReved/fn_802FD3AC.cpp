//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802D1D84.hpp"



void fn_802FD3AC(PPC::Runtime::GCContext* context)
{
/*802FD3AC 002FA1AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802FD3B0 002FA1B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802FD3B4 002FA1B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802FD3B8 002FA1B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802FD3BC 002FA1BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802FD3C0 002FA1C0*/ PPC::Runtime::ASM::bl(fn_802D1D84);
/*802FD3C4 002FA1C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802FD3C8 002FA1C8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*802FD3CC 002FA1CC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r12));
/*802FD3D0 002FA1D0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802FD3D4 002FA1D4*/ PPC::Runtime::ASM::bctrl();
/*802FD3D8 002FA1D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802FD3DC 002FA1DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802FD3E0 002FA1E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802FD3E4 002FA1E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802FD3E8 002FA1E8*/ PPC::Runtime::ASM::blr();
}