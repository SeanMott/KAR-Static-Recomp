//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80486D90.hpp"
#include "fn_80486D90.hpp"
#include "fn_80483DD4.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80483C3C.hpp"
#include "fn_80486D90.hpp"
#include "fn_sprintf.hpp"
#include "fn_sprintf.hpp"
#include "fn_sprintf.hpp"
#include "fn_sprintf.hpp"
#include "fn_sprintf.hpp"
#include "strlen.hpp"
#include "fn_sprintf.hpp"
#include "fn_80483C3C.hpp"
#include "fn_sprintf.hpp"
#include "fn_8047D044.hpp"
#include "fn_8047CCE0.hpp"



void fn_8048700C(PPC::Runtime::GCContext* context)
{
/*8048700C 00483E0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80487010 00483E10*/ PPC::Runtime::ASM::lis(context->r6, lbl_80534D40 @ Get_MemoryOffset_HighBit);
/*80487014 00483E14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80487018 00483E18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x248, context->r1));
/*8048701C 00483E1C*/ PPC::Runtime::ASM::stmw(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22c, context->r1));
/*80487020 00483E20*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*80487024 00483E24*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*80487028 00483E28*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*8048702C 00483E2C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*80487030 00483E30*/ PPC::Runtime::ASM::addi(context->r26, context->r6, lbl_80534D40 @ Get_MemoryOffset_LowBit);
/*80487034 00483E34*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80487038 00483E38*/ PPC::Runtime::ASM::bl(fn_80486D90);
/*8048703C 00483E3C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80487040 00483E40*/ PPC::Runtime::ASM::bl(fn_80486D90);
/*80487044 00483E44*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x0);
/*80487048 00483E48*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*8048704C 00483E4C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x128);
/*80487050 00483E50*/ PPC::Runtime::ASM::addi(context->r6, context->r26, 0x478);
/*80487054 00483E54*/ PPC::Runtime::ASM::bl(fn_80483DD4);
/*80487058 00483E58*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*8048705C 00483E5C*/ PPC::Runtime::ASM::b(.L_8048716C);
RUNTIME_PPC_JUMP_LABEL(.L_80487060, 0x80487060) //this is a jump label
/*80487060 00483E60*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80487064 00483E64*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x43);
/*80487068 00483E68*/ PPC::Runtime::ASM::bne(.L_80487084);
/*8048706C 00483E6C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x128);
/*80487070 00483E70*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x484);
/*80487074 00483E74*/ PPC::Runtime::ASM::li(context->r5, lbl_struct_close @ Get_MemoryOffset_SDA21);
/*80487078 00483E78*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*8048707C 00483E7C*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*80487080 00483E80*/ PPC::Runtime::ASM::b(.L_8048716C);
RUNTIME_PPC_JUMP_LABEL(.L_80487084, 0x80487084) //this is a jump label
/*80487084 00483E84*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x41);
/*80487088 00483E88*/ PPC::Runtime::ASM::bne(.L_804870A4);
/*8048708C 00483E8C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x128);
/*80487090 00483E90*/ PPC::Runtime::ASM::addi(context->r5, context->r26, 0x4c4);
/*80487094 00483E94*/ PPC::Runtime::ASM::li(context->r4, lbl_Allow @ Get_MemoryOffset_SDA21);
/*80487098 00483E98*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*8048709C 00483E9C*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*804870A0 00483EA0*/ PPC::Runtime::ASM::b(.L_8048716C);
RUNTIME_PPC_JUMP_LABEL(.L_804870A4, 0x804870A4) //this is a jump label
/*804870A4 00483EA4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x42);
/*804870A8 00483EA8*/ PPC::Runtime::ASM::bne(.L_8048716C);
/*804870AC 00483EAC*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*804870B0 00483EB0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*804870B4 00483EB4*/ PPC::Runtime::ASM::bl(fn_80486D90);
/*804870B8 00483EB8*/ PPC::Runtime::ASM::addi(context->r25, context->r3, 0x0);
/*804870BC 00483EBC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*804870C0 00483EC0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*804870C4 00483EC4*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x414);
/*804870C8 00483EC8*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*804870CC 00483ECC*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*804870D0 00483ED0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*804870D4 00483ED4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*804870D8 00483ED8*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x0);
/*804870DC 00483EDC*/ PPC::Runtime::ASM::addi(context->r6, context->r25, 0x0);
/*804870E0 00483EE0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r27);
/*804870E4 00483EE4*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x424);
/*804870E8 00483EE8*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*804870EC 00483EEC*/ PPC::Runtime::ASM::add(context->r27, context->r27, context->r3);
/*804870F0 00483EF0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*804870F4 00483EF4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*804870F8 00483EF8*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r27);
/*804870FC 00483EFC*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x43c);
/*80487100 00483F00*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*80487104 00483F04*/ PPC::Runtime::ASM::add(context->r27, context->r27, context->r3);
/*80487108 00483F08*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8048710C 00483F0C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*80487110 00483F10*/ PPC::Runtime::ASM::addi(context->r5, context->r25, 0x0);
/*80487114 00483F14*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r27);
/*80487118 00483F18*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x44c);
/*8048711C 00483F1C*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*80487120 00483F20*/ PPC::Runtime::ASM::add(context->r27, context->r27, context->r3);
/*80487124 00483F24*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80487128 00483F28*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*8048712C 00483F2C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r27);
/*80487130 00483F30*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x458);
/*80487134 00483F34*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*80487138 00483F38*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x28);
/*8048713C 00483F3C*/ PPC::Runtime::ASM::bl(strlen);
/*80487140 00483F40*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*80487144 00483F44*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80487148 00483F48*/ PPC::Runtime::ASM::addi(context->r5, context->r27, 0x0);
/*8048714C 00483F4C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*80487150 00483F50*/ PPC::Runtime::ASM::li(context->r4, lbl_ "%" Get_MemoryOffset_SDA21);
/*80487154 00483F54*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*80487158 00483F58*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x128);
/*8048715C 00483F5C*/ PPC::Runtime::ASM::addi(context->r4, context->r26, 0x4b4);
/*80487160 00483F60*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x18);
/*80487164 00483F64*/ PPC::Runtime::ASM::bl(fn_80483C3C);
/*80487168 00483F68*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8048716C, 0x8048716C) //this is a jump label
/*8048716C 00483F6C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80487170 00483F70*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*80487174 00483F74*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80487178 00483F78*/ PPC::Runtime::ASM::bne(.L_80487060);
/*8048717C 00483F7C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*80487180 00483F80*/ PPC::Runtime::ASM::beq(.L_804871A8);
/*80487184 00483F84*/ PPC::Runtime::ASM::subfic(context->r0, context->r25, 0x100);
/*80487188 00483F88*/ PPC::Runtime::ASM::cmpw(context->r0, context->r27);
/*8048718C 00483F8C*/ PPC::Runtime::ASM::ble(.L_804871A8);
/*80487190 00483F90*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x128);
/*80487194 00483F94*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80487198 00483F98*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r25);
/*8048719C 00483F9C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x28);
/*804871A0 00483FA0*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*804871A4 00483FA4*/ PPC::Runtime::ASM::add(context->r25, context->r25, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_804871A8, 0x804871A8) //this is a jump label
/*804871A8 00483FA8*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*804871AC 00483FAC*/ PPC::Runtime::ASM::addi(context->r5, context->r25, 0x0);
/*804871B0 00483FB0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x128);
/*804871B4 00483FB4*/ PPC::Runtime::ASM::bl(fn_8047D044);
/*804871B8 00483FB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*804871BC 00483FBC*/ PPC::Runtime::ASM::bge(.L_804871C8);
/*804871C0 00483FC0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*804871C4 00483FC4*/ PPC::Runtime::ASM::b(.L_804871D8);
RUNTIME_PPC_JUMP_LABEL(.L_804871C8, 0x804871C8) //this is a jump label
/*804871C8 00483FC8*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*804871CC 00483FCC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*804871D0 00483FD0*/ PPC::Runtime::ASM::bl(fn_8047CCE0);
/*804871D4 00483FD4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_804871D8, 0x804871D8) //this is a jump label
/*804871D8 00483FD8*/ PPC::Runtime::ASM::lmw(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22c, context->r1));
/*804871DC 00483FDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24c, context->r1));
/*804871E0 00483FE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x248);
/*804871E4 00483FE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804871E8 00483FE8*/ PPC::Runtime::ASM::blr();
}