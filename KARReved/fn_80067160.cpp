//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80067160(PPC::Runtime::GCContext* context)
{
/*80067160 00063F60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80067164 00063F64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80067168 00063F68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8006716C 00063F6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80067170 00063F70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 80067174 00063F74  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80067178 00063F78*/ PPC::Runtime::ASM::beq(.L_800671F4);
/*8006717C 00063F7C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*80067180 00063F80*/ PPC::Runtime::ASM::blt(.L_800671F4);
/*80067184 00063F84*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x4);
/*80067188 00063F88*/ PPC::Runtime::ASM::bge(.L_800671F4);
/*8006718C 00063F8C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_227 @ Get_MemoryOffset_HighBit);
/*80067190 00063F90*/ PPC::Runtime::ASM::slwi(context->r31, context->r4, 3);
/*80067194 00063F94*/ PPC::Runtime::ASM::addi(context->r0, context->r5, MemoryOffset_227 @ Get_MemoryOffset_LowBit);
/*80067198 00063F98*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*8006719C 00063F9C*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetViewport);
/*800671A0 00063FA0*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_226 @ Get_MemoryOffset_HighBit);
/*800671A4 00063FA4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800671A8 00063FA8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, MemoryOffset_226 @ Get_MemoryOffset_LowBit);
/*800671AC 00063FAC*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*800671B0 00063FB0*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetScissor);
/*800671B4 00063FB4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800671B8 00063FB8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800671BC 00063FBC*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewportf);
/*800671C0 00063FC0*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800671C4 00063FC4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800671C8 00063FC8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800671CC 00063FCC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800671D0 00063FD0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800671D4 00063FD4*/ PPC::Runtime::ASM::fsubs(context->f3, context->f3, context->f0);
/*800671D8 00063FD8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEB24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800671DC 00063FDC*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800671E0 00063FE0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DEB20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800671E4 00063FE4*/ PPC::Runtime::ASM::fdivs(context->f1, context->f3, context->f1);
/*800671E8 00063FE8*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f0);
/*800671EC 00063FEC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f0);
/*800671F0 00063FF0*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetAspect);
RUNTIME_PPC_JUMP_LABEL(.L_800671F4, 0x800671F4) //this is a jump label
/*800671F4 00063FF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800671F8 00063FF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800671FC 00063FFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80067200 00064000*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80067204 00064004*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80067208 00064008*/ PPC::Runtime::ASM::blr();
}