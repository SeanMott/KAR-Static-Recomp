//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138B10.hpp"
#include "fn_800550F4.hpp"



void fn_8015B57C(PPC::Runtime::GCContext* context)
{
/*8015B57C 0015837C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015B580 00158380*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015B584 00158384*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015B588 00158388*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015B58C 0015838C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015B590 00158390*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015B594 00158394*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8015B598 00158398*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015B59C 0015839C*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*8015B5A0 001583A0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015B5A4 001583A4*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8015B5A8 001583A8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x7c8);
/*8015B5AC 001583AC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015B5B0 001583B0*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8015B5B4 001583B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8015B5B8 001583B8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015B5BC 001583BC*/ PPC::Runtime::ASM::beq(.L_8015B63C);
/*8015B5C0 001583C0*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*8015B5C4 001583C4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8015B5C8 001583C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8015B5CC 001583CC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*8015B5D0 001583D0*/ PPC::Runtime::ASM::stb(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r29));
/*8015B5D4 001583D4*/ PPC::Runtime::ASM::blt(.L_8015B5F4);
/*8015B5D8 001583D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*8015B5DC 001583DC*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*8015B5E0 001583E0*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
/*8015B5E4 001583E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8015B5E8 001583E8*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*8015B5EC 001583EC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetFlagsAll?);
/*8015B5F0 001583F0*/ PPC::Runtime::ASM::b(.L_8015B60C);
RUNTIME_PPC_JUMP_LABEL(.L_8015B5F4, 0x8015B5F4) //this is a jump label
/*8015B5F4 001583F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*8015B5F8 001583F8*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*8015B5FC 001583FC*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetFlagsAll?);
/*8015B600 00158400*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8015B604 00158404*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*8015B608 00158408*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
RUNTIME_PPC_JUMP_LABEL(.L_8015B60C, 0x8015B60C) //this is a jump label
/*8015B60C 0015840C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8015B610 00158410*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8015B614 00158414*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x17, context->r29));
/*8015B618 00158418*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8015B61C 0015841C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0874 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8015B620 00158420*/ PPC::Runtime::ASM::extsb(context->r4, context->r4);
/*8015B624 00158424*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E086C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8015B628 00158428*/ PPC::Runtime::ASM::bl(fn_80138B10);
/*8015B62C 0015842C*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*8015B630 00158430*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8015B634 00158434*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*8015B638 00158438*/ PPC::Runtime::ASM::bl(fn_800550F4);
RUNTIME_PPC_JUMP_LABEL(.L_8015B63C, 0x8015B63C) //this is a jump label
/*8015B63C 0015843C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015B640 00158440*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015B644 00158444*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015B648 00158448*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015B64C 0015844C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015B650 00158450*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015B654 00158454*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015B658 00158458*/ PPC::Runtime::ASM::blr();
}