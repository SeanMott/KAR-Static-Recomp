//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D864.hpp"



void fn_8005DBC8(PPC::Runtime::GCContext* context)
{
/*8005DBC8 0005A9C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005DBCC 0005A9CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005DBD0 0005A9D0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8005DBD4 0005A9D4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8005DBD8 0005A9D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DBDC 0005A9DC*/ PPC::Runtime::ASM::bl(fn_8005D864);
/*8005DBE0 0005A9E0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005DBE4 0005A9E4*/ PPC::Runtime::ASM::beq(.L_8005DC4C);
/*8005DBE8 0005A9E8*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xb8);
/*8005DBEC 0005A9EC*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005DBF0 0005A9F0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8005DBF4 0005A9F4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005DBF8 0005A9F8*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r6);
/*8005DBFC 0005A9FC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8005DC00 0005AA00*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x33c);
/*8005DC04 0005AA04*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC08 0005AA08*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*8005DC0C 0005AA0C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC10 0005AA10*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC14 0005AA14*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 3, 28, 28);
/*8005DC18 0005AA18*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC1C 0005AA1C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC20 0005AA20*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 2, 29, 29);
/*8005DC24 0005AA24*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC28 0005AA28*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC2C 0005AA2C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 1, 30, 30);
/*8005DC30 0005AA30*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC34 0005AA34*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC38 0005AA38*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 4, 27, 27);
/*8005DC3C 0005AA3C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DC40 0005AA40*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
/*8005DC44 0005AA44*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*8005DC48 0005AA48*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8005DC4C, 0x8005DC4C) //this is a jump label
/*8005DC4C 0005AA4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DC50 0005AA50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005DC54 0005AA54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005DC58 0005AA58*/ PPC::Runtime::ASM::blr();
}