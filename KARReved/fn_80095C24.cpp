//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D1D3C.hpp"



void fn_80095C24(PPC::Runtime::GCContext* context)
{
/*80095C24 00092A24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80095C28 00092A28*/ PPC::Runtime::ASM::mflr(context->r0);
/*80095C2C 00092A2C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553C00 @ Get_MemoryOffset_HighBit);
/*80095C30 00092A30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80095C34 00092A34*/ PPC::Runtime::ASM::addi(context->r6, context->r3, lbl_80553C00 @ Get_MemoryOffset_LowBit);
/*80095C38 00092A38*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66, context->r6));
/*80095C3C 00092A3C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80095C40 00092A40*/ PPC::Runtime::ASM::bne(.L_80095C80);
/*80095C44 00092A44*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80095C48 00092A48*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*80095C4C 00092A4C*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*80095C50 00092A50*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*80095C54 00092A54*/ PPC::Runtime::ASM::sth(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r6));
/*80095C58 00092A58*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r6));
/*80095C5C 00092A5C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r6));
/*80095C60 00092A60*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r6));
/*80095C64 00092A64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66, context->r6));
/*80095C68 00092A68*/ PPC::Runtime::ASM::bl(fn_800D1D3C);
/*80095C6C 00092A6C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553C00 @ Get_MemoryOffset_HighBit);
/*80095C70 00092A70*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_80553C00 @ Get_MemoryOffset_LowBit);
/*80095C74 00092A74*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r4));
/*80095C78 00092A78*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80095C7C 00092A7C*/ PPC::Runtime::ASM::b(.L_80095C84);
RUNTIME_PPC_JUMP_LABEL(.L_80095C80, 0x80095C80) //this is a jump label
/*80095C80 00092A80*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80095C84, 0x80095C84) //this is a jump label
/*80095C84 00092A84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80095C88 00092A88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80095C8C 00092A8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80095C90 00092A90*/ PPC::Runtime::ASM::blr();
}