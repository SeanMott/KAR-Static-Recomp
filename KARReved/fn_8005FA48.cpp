//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8005FA48(PPC::Runtime::GCContext* context)
{
/*8005FA48 0005C848*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005FA4C 0005C84C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005FA50 0005C850*/ PPC::Runtime::ASM::cmpwi(context->r3, 0xff);
/*8005FA54 0005C854*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005FA58 0005C858*/ PPC::Runtime::ASM::ble(.L_8005FA64);
/*8005FA5C 0005C85C*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*8005FA60 0005C860*/ PPC::Runtime::ASM::b(.L_8005FA70);
RUNTIME_PPC_JUMP_LABEL(.L_8005FA64, 0x8005FA64) //this is a jump label
/*8005FA64 0005C864*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8005FA68 0005C868*/ PPC::Runtime::ASM::bge(.L_8005FA70);
/*8005FA6C 0005C86C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8005FA70, 0x8005FA70) //this is a jump label
/*8005FA70 0005C870*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005FA74 0005C874*/ PPC::Runtime::ASM::addi(context->r5, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005FA78 0005C878*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r5));
/*8005FA7C 0005C87C*/ PPC::Runtime::ASM::cmpw(context->r0, context->r3);
/*8005FA80 0005C880*/ PPC::Runtime::ASM::beq(.L_8005FAD4);
/*8005FA84 0005C884*/ PPC::Runtime::ASM::xoris(context->r4, context->r3, 0x8000);
/*8005FA88 0005C888*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*8005FA8C 0005C88C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005FA90 0005C890*/ PPC::Runtime::ASM::lfd(context->f3, STRUCT_DOUBLE_COUNT_1805DE980 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8005FA94 0005C894*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8005FA98 0005C898*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DE988 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8005FA9C 0005C89C*/ PPC::Runtime::ASM::lfd(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8005FAA0 0005C8A0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DE98C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8005FAA4 0005C8A4*/ PPC::Runtime::ASM::fsubs(context->f2, context->f2, context->f3);
/*8005FAA8 0005C8A8*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r5));
/*8005FAAC 0005C8AC*/ PPC::Runtime::ASM::fdivs(context->f1, context->f2, context->f1);
/*8005FAB0 0005C8B0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8005FAB4 0005C8B4*/ PPC::Runtime::ASM::ble(.L_8005FAC0);
/*8005FAB8 0005C8B8*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
/*8005FABC 0005C8BC*/ PPC::Runtime::ASM::b(.L_8005FAD0);
RUNTIME_PPC_JUMP_LABEL(.L_8005FAC0, 0x8005FAC0) //this is a jump label
/*8005FAC0 0005C8C0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DE990 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8005FAC4 0005C8C4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8005FAC8 0005C8C8*/ PPC::Runtime::ASM::bge(.L_8005FAD0);
/*8005FACC 0005C8CC*/ PPC::Runtime::ASM::fmr(context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_8005FAD0, 0x8005FAD0) //this is a jump label
/*8005FAD0 0005C8D0*/ PPC::Runtime::ASM::bl(fn_8044E6E0);
RUNTIME_PPC_JUMP_LABEL(.L_8005FAD4, 0x8005FAD4) //this is a jump label
/*8005FAD4 0005C8D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005FAD8 0005C8D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005FADC 0005C8DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005FAE0 0005C8E0*/ PPC::Runtime::ASM::blr();
}