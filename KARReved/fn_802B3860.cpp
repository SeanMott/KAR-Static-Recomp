//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802B3968.hpp"
#include "fn_std_redBlackTree_balance_insert_shit.hpp"



void fn_802B3860(PPC::Runtime::GCContext* context)
{
/*802B3860 002B0660*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802B3864 002B0664*/ PPC::Runtime::ASM::mflr(context->r0);
/*802B3868 002B0668*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802B386C 002B066C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*802B3870 002B0670*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*802B3874 002B0674*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*802B3878 002B0678*/ PPC::Runtime::ASM::li(context->r0, -0x2);
/*802B387C 002B067C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802B3880 002B0680*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*802B3884 002B0684*/ PPC::Runtime::ASM::mr(context->r26, context->r5);
/*802B3888 002B0688*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*802B388C 002B068C*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*802B3890 002B0690*/ PPC::Runtime::ASM::mr(context->r27, context->r7);
/*802B3894 002B0694*/ PPC::Runtime::ASM::ble(.L_802B38B8);
/*802B3898 002B0698*/ PPC::Runtime::ASM::lis(context->r4, __files @ Get_MemoryOffset_HighBit);
/*802B389C 002B069C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804C4B0C @ Get_MemoryOffset_HighBit);
/*802B38A0 002B06A0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, __files @ Get_MemoryOffset_LowBit);
/*802B38A4 002B06A4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_804C4B0C @ Get_MemoryOffset_LowBit);
/*802B38A8 002B06A8*/ PPC::Runtime::ASM::addi(context->r3, context->r5, 0xa0);
/*802B38AC 002B06AC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*802B38B0 002B06B0*/ PPC::Runtime::ASM::bl(fn_fprintf);
/*802B38B4 002B06B4*/ PPC::Runtime::ASM::bl(fn_abort);
RUNTIME_PPC_JUMP_LABEL(.L_802B38B8, 0x802B38B8) //this is a jump label
/*802B38B8 002B06B8*/ PPC::Runtime::ASM::li(context->r3, 0x20);
/*802B38BC 002B06BC*/ PPC::Runtime::ASM::bl(fn_8038CB28);
/* 802B38C0 002B06C0  7C 7C 1B 79 */ mr. context->r28 , context->r3
/*802B38C4 002B06C4*/ PPC::Runtime::ASM::bne(.L_802B38E8);
/*802B38C8 002B06C8*/ PPC::Runtime::ASM::lis(context->r4, __files @ Get_MemoryOffset_HighBit);
/*802B38CC 002B06CC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804C4A94 @ Get_MemoryOffset_HighBit);
/*802B38D0 002B06D0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, __files @ Get_MemoryOffset_LowBit);
/*802B38D4 002B06D4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_804C4A94 @ Get_MemoryOffset_LowBit);
/*802B38D8 002B06D8*/ PPC::Runtime::ASM::addi(context->r3, context->r5, 0xa0);
/*802B38DC 002B06DC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*802B38E0 002B06E0*/ PPC::Runtime::ASM::bl(fn_fprintf);
/*802B38E4 002B06E4*/ PPC::Runtime::ASM::bl(fn_abort);
RUNTIME_PPC_JUMP_LABEL(.L_802B38E8, 0x802B38E8) //this is a jump label
/*802B38E8 002B06E8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*802B38EC 002B06EC*/ PPC::Runtime::ASM::mr(context->r5, context->r27);
/*802B38F0 002B06F0*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0xc);
/*802B38F4 002B06F4*/ PPC::Runtime::ASM::bl(fn_802B3968);
/*802B38F8 002B06F8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/* 802B38FC 002B06FC  57 40 06 3F */ clrlwi. context->r0 , context->r26 , 24
/*802B3900 002B0700*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*802B3904 002B0704*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*802B3908 002B0708*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*802B390C 002B070C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*802B3910 002B0710*/ PPC::Runtime::ASM::or(context->r0, context->r30, context->r0);
/*802B3914 002B0714*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*802B3918 002B0718*/ PPC::Runtime::ASM::beq(.L_802B3924);
/*802B391C 002B071C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802B3920 002B0720*/ PPC::Runtime::ASM::b(.L_802B3928);
RUNTIME_PPC_JUMP_LABEL(.L_802B3924, 0x802B3924) //this is a jump label
/*802B3924 002B0724*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_802B3928, 0x802B3928) //this is a jump label
/*802B3928 002B0728*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*802B392C 002B072C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*802B3930 002B0730*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*802B3934 002B0734*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*802B3938 002B0738*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*802B393C 002B073C*/ PPC::Runtime::ASM::bl(fn_std_redBlackTree_balance_insert_shit);
/* 802B3940 002B0740  57 E0 06 3F */ clrlwi. context->r0 , context->r31 , 24
/*802B3944 002B0744*/ PPC::Runtime::ASM::beq(.L_802B394C);
/*802B3948 002B0748*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_802B394C, 0x802B394C) //this is a jump label
/*802B394C 002B074C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*802B3950 002B0750*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*802B3954 002B0754*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*802B3958 002B0758*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802B395C 002B075C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802B3960 002B0760*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802B3964 002B0764*/ PPC::Runtime::ASM::blr();
}