//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"
#include "fn_801016B8.hpp"
#include "fn_801016B8.hpp"



void fn_80101484(PPC::Runtime::GCContext* context)
{
/*80101484 000FE284*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80101488 000FE288*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010148C 000FE28C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80101490 000FE290*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80101494 000FE294*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80101498 000FE298*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r5));
/*8010149C 000FE29C*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*801014A0 000FE2A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r5));
/*801014A4 000FE2A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r5));
/*801014A8 000FE2A8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*801014AC 000FE2AC*/ PPC::Runtime::ASM::bgt(.L_801014F4);
/*801014B0 000FE2B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801014B4 000FE2B4*/ PPC::Runtime::ASM::li(context->r0, 0x5);
/*801014B8 000FE2B8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF950 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801014BC 000FE2BC*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801014C0 000FE2C0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801014C4 000FE2C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801014C8 000FE2C8*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*801014CC 000FE2CC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801014D0 000FE2D0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*801014D4 000FE2D4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801014D8 000FE2D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*801014DC 000FE2DC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r6));
/*801014E0 000FE2E0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*801014E4 000FE2E4*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*801014E8 000FE2E8*/ PPC::Runtime::ASM::lis(context->r3, fn_801016B8 @ Get_MemoryOffset_HighBit);
/*801014EC 000FE2EC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801016B8 @ Get_MemoryOffset_LowBit);
/*801014F0 000FE2F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801014F4, 0x801014F4) //this is a jump label
/*801014F4 000FE2F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801014F8 000FE2F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801014FC 000FE2FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80101500 000FE300*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80101504 000FE304*/ PPC::Runtime::ASM::blr();
}