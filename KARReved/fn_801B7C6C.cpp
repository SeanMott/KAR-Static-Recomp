//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B7DCC.hpp"
#include "fn_801B7DEC.hpp"
#include "fn_801B7DCC.hpp"
#include "fn_801B7DEC.hpp"



void fn_801B7C6C(PPC::Runtime::GCContext* context)
{
/*801B7C6C 001B4A6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B7C70 001B4A70*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B7C74 001B4A74*/ PPC::Runtime::ASM::li(context->r4, 0x52);
/*801B7C78 001B4A78*/ PPC::Runtime::ASM::li(context->r5, 0x72);
/*801B7C7C 001B4A7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B7C80 001B4A80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7C84 001B4A84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B7C88 001B4A88*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r3));
/* 801B7C8C 001B4A8C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801B7C90 001B4A90*/ PPC::Runtime::ASM::beq(.L_801B7C98);
/*801B7C94 001B4A94*/ PPC::Runtime::ASM::li(context->r5, 0x75);
RUNTIME_PPC_JUMP_LABEL(.L_801B7C98, 0x801B7C98) //this is a jump label
/*801B7C98 001B4A98*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E16F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7C9C 001B4A9C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B7CA0 001B4AA0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E16F4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7CA4 001B4AA4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B7CA8 001B4AA8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B7CAC 001B4AAC*/ PPC::Runtime::ASM::lis(context->r4, fn_801B7DCC @ Get_MemoryOffset_HighBit);
/*801B7CB0 001B4AB0*/ PPC::Runtime::ASM::lis(context->r3, fn_801B7DEC @ Get_MemoryOffset_HighBit);
/*801B7CB4 001B4AB4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B7DCC @ Get_MemoryOffset_LowBit);
/*801B7CB8 001B4AB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B7CBC 001B4ABC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B7DEC @ Get_MemoryOffset_LowBit);
/*801B7CC0 001B4AC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B7CC4 001B4AC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7CC8 001B4AC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B7CCC 001B4ACC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B7CD0 001B4AD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B7CD4 001B4AD4*/ PPC::Runtime::ASM::blr();
}