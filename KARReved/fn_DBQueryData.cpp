//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_803F3E28.hpp"
#include "fn_DBGReadStatus.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_DBQueryData(PPC::Runtime::GCContext* context)
{
/*803F3C44 003F0A44*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F3C48 003F0A48*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803F3C4C 003F0A4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803F3C50 003F0A50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803F3C54 003F0A54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F3C58 003F0A58*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE164 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3C5C 003F0A5C*/ PPC::Runtime::ASM::stb(context->r3, SkipAddress_44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3C60 003F0A60*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803F3C64 003F0A64*/ PPC::Runtime::ASM::bne(.L_803F3CC8);
/*803F3C68 003F0A68*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803F3C6C 003F0A6C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803F3C70 003F0A70*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803F3C74 003F0A74*/ PPC::Runtime::ASM::bl(fn_803F3E28);
/*803F3C78 003F0A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 803F3C7C 003F0A7C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803F3C80 003F0A80*/ PPC::Runtime::ASM::beq(.L_803F3CC0);
/*803F3C84 003F0A84*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803F3C88 003F0A88*/ PPC::Runtime::ASM::bl(fn_DBGReadStatus);
/*803F3C8C 003F0A8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803F3C90 003F0A90*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 3);
/*803F3C94 003F0A94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803F3C98 003F0A98*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803F3C9C 003F0A9C*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r4, 0, 3, 7);
/*803F3CA0 003F0AA0*/ PPC::Runtime::ASM::subis(context->r0, context->r3, 0x1f00);
/*803F3CA4 003F0AA4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803F3CA8 003F0AA8*/ PPC::Runtime::ASM::bne(.L_803F3CC0);
/*803F3CAC 003F0AAC*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r4, 17);
/*803F3CB0 003F0AB0*/ PPC::Runtime::ASM::stw(context->r4, STRUCT_BYTE4_COUNT_1805DE160 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3CB4 003F0AB4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803F3CB8 003F0AB8*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DE164 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3CBC 003F0ABC*/ PPC::Runtime::ASM::stb(context->r0, SkipAddress_44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803F3CC0, 0x803F3CC0) //this is a jump label
/*803F3CC0 003F0AC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803F3CC4 003F0AC4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
RUNTIME_PPC_JUMP_LABEL(.L_803F3CC8, 0x803F3CC8) //this is a jump label
/*803F3CC8 003F0AC8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE164 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3CCC 003F0ACC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803F3CD0 003F0AD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F3CD4 003F0AD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803F3CD8 003F0AD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F3CDC 003F0ADC*/ PPC::Runtime::ASM::blr();
}