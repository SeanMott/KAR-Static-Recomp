//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000BEBC(PPC::Runtime::GCContext* context)
{
/*8000BEBC 00008CBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000BEC0 00008CC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000BEC4 00008CC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BEC8 00008CC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BECC 00008CCC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8000BED0 00008CD0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BED4 00008CD4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000BED8 00008CD8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BEDC 00008CDC*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8000BEE0 00008CE0*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x9);
/*8000BEE4 00008CE4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0xd26);
/*8000BEE8 00008CE8*/ PPC::Runtime::ASM::stbx(context->r31, context->r3, context->r0);
/*8000BEEC 00008CEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BEF0 00008CF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BEF4 00008CF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BEF8 00008CF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000BEFC 00008CFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000BF00 00008D00*/ PPC::Runtime::ASM::blr();
}