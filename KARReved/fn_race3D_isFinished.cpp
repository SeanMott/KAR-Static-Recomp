//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_8012A1C0.hpp"
#include "fn_800617CC.hpp"
#include "fn_8022D278.hpp"
#include "fn_800B8708.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_8005FCA0.hpp"
#include "fn_800617CC.hpp"
#include "fn_800617CC.hpp"
#include "fn_80279D5C.hpp"
#include "fn_800B8188.hpp"
#include "fn_800BBCEC.hpp"
#include "fn_8022D278.hpp"
#include "fn_8022D850.hpp"
#include "fn_plGetPlayerKind.hpp"
#include "fn_80009A30.hpp"
#include "fn_801142FC.hpp"
#include "fn_8022E4E0.hpp"
#include "fn_8004A994.hpp"
#include "fn_plGetPlayerKind.hpp"



void fn_race3D_isFinished(PPC::Runtime::GCContext* context)
{
/*80010BBC 0000D9BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80010BC0 0000D9C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80010BC4 0000D9C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80010BC8 0000D9C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80010BCC 0000D9CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80010BD0 0000D9D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80010BD4 0000D9D4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80010BD8 0000D9D8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80010BDC 0000D9DC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80010BE0 0000D9E0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80010BE4 0000D9E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010BE8 0000D9E8*/ PPC::Runtime::ASM::addi(context->r29, context->r30, 0x830);
/*80010BEC 0000D9EC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80010BF0 0000D9F0*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*80010BF4 0000D9F4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*80010BF8 0000D9F8*/ PPC::Runtime::ASM::beq(.L_80010D88);
/*80010BFC 0000D9FC*/ PPC::Runtime::ASM::add(context->r5, context->r29, context->r31);
/*80010C00 0000DA00*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r5));
/*80010C04 0000DA04*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80010C08 0000DA08*/ PPC::Runtime::ASM::beq(.L_80010C14);
/*80010C0C 0000DA0C*/ PPC::Runtime::ASM::li(context->r28, 0x1);
/*80010C10 0000DA10*/ PPC::Runtime::ASM::b(.L_80010D88);
RUNTIME_PPC_JUMP_LABEL(.L_80010C14, 0x80010C14) //this is a jump label
/*80010C14 0000DA14*/ PPC::Runtime::ASM::slwi(context->r3, context->r31, 2);
/*80010C18 0000DA18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa9a, context->r30));
/*80010C1C 0000DA1C*/ PPC::Runtime::ASM::add(context->r4, context->r29, context->r3);
/*80010C20 0000DA20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*80010C24 0000DA24*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80010C28 0000DA28*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*80010C2C 0000DA2C*/ PPC::Runtime::ASM::blt(.L_80010D74);
/*80010C30 0000DA30*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80010C34 0000DA34*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r5));
/*80010C38 0000DA38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80010C3C 0000DA3C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r29));
/*80010C40 0000DA40*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3c);
/*80010C44 0000DA44*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*80010C48 0000DA48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*80010C4C 0000DA4C*/ PPC::Runtime::ASM::bl(OSGetTime);
/*80010C50 0000DA50*/ PPC::Runtime::ASM::mulli(context->r5, context->r31, 0x28);
/*80010C54 0000DA54*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x138);
/*80010C58 0000DA58*/ PPC::Runtime::ASM::add(context->r5, context->r29, context->r5);
/*80010C5C 0000DA5C*/ PPC::Runtime::ASM::bl(fn_OSTicksToCalendarTime);
/*80010C60 0000DA60*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010C64 0000DA64*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*80010C68 0000DA68*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*80010C6C 0000DA6C*/ PPC::Runtime::ASM::bne(.L_80010C94);
/*80010C70 0000DA70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010C74 0000DA74*/ PPC::Runtime::ASM::bl(fn_8012A1C0);
/*80010C78 0000DA78*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*80010C7C 0000DA7C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xa3);
/*80010C80 0000DA80*/ PPC::Runtime::ASM::bl(fn_800617CC);
/*80010C84 0000DA84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010C88 0000DA88*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80010C8C 0000DA8C*/ PPC::Runtime::ASM::bl(fn_8022D278);
/*80010C90 0000DA90*/ PPC::Runtime::ASM::b(.L_80010D34);
RUNTIME_PPC_JUMP_LABEL(.L_80010C94, 0x80010C94) //this is a jump label
/*80010C94 0000DA94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010C98 0000DA98*/ PPC::Runtime::ASM::bl(fn_800B8708);
/*80010C9C 0000DA9C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80010CA0 0000DAA0*/ PPC::Runtime::ASM::beq(.L_80010D34);
/*80010CA4 0000DAA4*/ PPC::Runtime::ASM::add(context->r29, context->r29, context->r31);
/*80010CA8 0000DAA8*/ PPC::Runtime::ASM::lbz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*80010CAC 0000DAAC*/ PPC::Runtime::ASM::extsb(context->r30, context->r30);
/*80010CB0 0000DAB0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80010CB4 0000DAB4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa7, context->r3));
/* 80010CB8 0000DAB8  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*80010CBC 0000DABC*/ PPC::Runtime::ASM::beq(.L_80010CFC);
/*80010CC0 0000DAC0*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*80010CC4 0000DAC4*/ PPC::Runtime::ASM::bne(.L_80010CF0);
/*80010CC8 0000DAC8*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DD570 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80010CCC 0000DACC*/ PPC::Runtime::ASM::li(context->r0, 0x12c);
/*80010CD0 0000DAD0*/ PPC::Runtime::ASM::li(context->r3, 0x19);
/*80010CD4 0000DAD4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80010CD8 0000DAD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80010CDC 0000DADC*/ PPC::Runtime::ASM::bl(fn_8005FCA0);
/*80010CE0 0000DAE0*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*80010CE4 0000DAE4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xa1);
/*80010CE8 0000DAE8*/ PPC::Runtime::ASM::bl(fn_800617CC);
/*80010CEC 0000DAEC*/ PPC::Runtime::ASM::b(.L_80010CFC);
RUNTIME_PPC_JUMP_LABEL(.L_80010CF0, 0x80010CF0) //this is a jump label
/*80010CF0 0000DAF0*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*80010CF4 0000DAF4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xa2);
/*80010CF8 0000DAF8*/ PPC::Runtime::ASM::bl(fn_800617CC);
RUNTIME_PPC_JUMP_LABEL(.L_80010CFC, 0x80010CFC) //this is a jump label
/*80010CFC 0000DAFC*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*80010D00 0000DB00*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D04 0000DB04*/ PPC::Runtime::ASM::extsb(context->r4, context->r4);
/*80010D08 0000DB08*/ PPC::Runtime::ASM::bl(fn_80279D5C);
/*80010D0C 0000DB0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D10 0000DB10*/ PPC::Runtime::ASM::bl(fn_800B8188);
/*80010D14 0000DB14*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*80010D18 0000DB18*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80010D1C 0000DB1C*/ PPC::Runtime::ASM::bl(fn_800BBCEC);
/*80010D20 0000DB20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D24 0000DB24*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80010D28 0000DB28*/ PPC::Runtime::ASM::bl(fn_8022D278);
/*80010D2C 0000DB2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D30 0000DB30*/ PPC::Runtime::ASM::bl(fn_8022D850);
RUNTIME_PPC_JUMP_LABEL(.L_80010D34, 0x80010D34) //this is a jump label
/*80010D34 0000DB34*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D38 0000DB38*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*80010D3C 0000DB3C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80010D40 0000DB40*/ PPC::Runtime::ASM::bne(.L_80010D5C);
/*80010D44 0000DB44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D48 0000DB48*/ PPC::Runtime::ASM::bl(fn_80009A30);
/*80010D4C 0000DB4C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80010D50 0000DB50*/ PPC::Runtime::ASM::beq(.L_80010D5C);
/*80010D54 0000DB54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D58 0000DB58*/ PPC::Runtime::ASM::bl(fn_801142FC);
RUNTIME_PPC_JUMP_LABEL(.L_80010D5C, 0x80010D5C) //this is a jump label
/*80010D5C 0000DB5C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D60 0000DB60*/ PPC::Runtime::ASM::bl(fn_8022E4E0);
/*80010D64 0000DB64*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D68 0000DB68*/ PPC::Runtime::ASM::bl(fn_8004A994);
/*80010D6C 0000DB6C*/ PPC::Runtime::ASM::li(context->r28, 0x1);
/*80010D70 0000DB70*/ PPC::Runtime::ASM::b(.L_80010D88);
RUNTIME_PPC_JUMP_LABEL(.L_80010D74, 0x80010D74) //this is a jump label
/*80010D74 0000DB74*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80010D78 0000DB78*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*80010D7C 0000DB7C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*80010D80 0000DB80*/ PPC::Runtime::ASM::bne(.L_80010D88);
/*80010D84 0000DB84*/ PPC::Runtime::ASM::li(context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80010D88, 0x80010D88) //this is a jump label
/*80010D88 0000DB88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80010D8C 0000DB8C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80010D90 0000DB90*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80010D94 0000DB94*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80010D98 0000DB98*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80010D9C 0000DB9C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80010DA0 0000DBA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80010DA4 0000DBA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80010DA8 0000DBA8*/ PPC::Runtime::ASM::blr();
}