//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802EEBE4(PPC::Runtime::GCContext* context)
{
/*802EEBE4 002EB9E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802EEBE8 002EB9E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802EEBEC 002EB9EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802EEBF0 002EB9F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802EEBF4 002EB9F4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802EEBF8 002EB9F8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*802EEBFC 002EB9FC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*802EEC00 002EBA00*/ PPC::Runtime::ASM::blt(.L_802EEC10);
/*802EEC04 002EBA04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*802EEC08 002EBA08*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802EEC0C 002EBA0C*/ PPC::Runtime::ASM::bne(.L_802EEC3C);
RUNTIME_PPC_JUMP_LABEL(.L_802EEC10, 0x802EEC10) //this is a jump label
/*802EEC10 002EBA10*/ PPC::Runtime::ASM::bl(fn_HSD_Randf);
/*802EEC14 002EBA14*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E39D8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802EEC18 002EBA18*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_FLOAT_5 @ Get_MemoryOffset_HighBit);
/*802EEC1C 002EBA1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_FLOAT_5 @ Get_MemoryOffset_LowBit);
/*802EEC20 002EBA20*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802EEC24 002EBA24*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*802EEC28 002EBA28*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*802EEC2C 002EBA2C*/ PPC::Runtime::ASM::bl(fn___cvt_fp2unsigned);
/*802EEC30 002EBA30*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*802EEC34 002EBA34*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*802EEC38 002EBA38*/ PPC::Runtime::ASM::b(.L_802EEC40);
RUNTIME_PPC_JUMP_LABEL(.L_802EEC3C, 0x802EEC3C) //this is a jump label
/*802EEC3C 002EBA3C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_802EEC40, 0x802EEC40) //this is a jump label
/*802EEC40 002EBA40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802EEC44 002EBA44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802EEC48 002EBA48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802EEC4C 002EBA4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802EEC50 002EBA50*/ PPC::Runtime::ASM::blr();
}