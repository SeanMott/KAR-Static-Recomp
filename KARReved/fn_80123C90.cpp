//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_80112058.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_80123C90(PPC::Runtime::GCContext* context)
{
/*80123C90 00120A90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80123C94 00120A94*/ PPC::Runtime::ASM::mflr(context->r0);
/*80123C98 00120A98*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1079 @ Get_MemoryOffset_HighBit);
/*80123C9C 00120A9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80123CA0 00120AA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80123CA4 00120AA4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80123CA8 00120AA8*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1079 @ Get_MemoryOffset_LowBit);
/*80123CAC 00120AAC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80123CB0 00120AB0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80123CB4 00120AB4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80123CB8 00120AB8*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x5b4);
/*80123CBC 00120ABC*/ PPC::Runtime::ASM::bl(fn_80112058);
/*80123CC0 00120AC0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80123CC4 00120AC4*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*80123CC8 00120AC8*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80123CCC 00120ACC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80123CD0 00120AD0*/ PPC::Runtime::ASM::beq(.L_80123D00);
/*80123CD4 00120AD4*/ PPC::Runtime::ASM::bge(.L_80123D1C);
/*80123CD8 00120AD8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80123CDC 00120ADC*/ PPC::Runtime::ASM::bge(.L_80123CE4);
/*80123CE0 00120AE0*/ PPC::Runtime::ASM::b(.L_80123D1C);
RUNTIME_PPC_JUMP_LABEL(.L_80123CE4, 0x80123CE4) //this is a jump label
/*80123CE4 00120AE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80123CE8 00120AE8*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80123CEC 00120AEC*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*80123CF0 00120AF0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80123CF4 00120AF4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80123CF8 00120AF8*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80123CFC 00120AFC*/ PPC::Runtime::ASM::b(.L_80123D34);
RUNTIME_PPC_JUMP_LABEL(.L_80123D00, 0x80123D00) //this is a jump label
/*80123D00 00120B00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80123D04 00120B04*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x4);
/*80123D08 00120B08*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x1c);
/*80123D0C 00120B0C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80123D10 00120B10*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80123D14 00120B14*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80123D18 00120B18*/ PPC::Runtime::ASM::b(.L_80123D34);
RUNTIME_PPC_JUMP_LABEL(.L_80123D1C, 0x80123D1C) //this is a jump label
/*80123D1C 00120B1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80123D20 00120B20*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x8);
/*80123D24 00120B24*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*80123D28 00120B28*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80123D2C 00120B2C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80123D30 00120B30*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_80123D34, 0x80123D34) //this is a jump label
/*80123D34 00120B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80123D38 00120B38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80123D3C 00120B3C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80123D40 00120B40*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80123D44 00120B44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80123D48 00120B48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80123D4C 00120B4C*/ PPC::Runtime::ASM::blr();
}