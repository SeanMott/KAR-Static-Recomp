//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_8010DC98(PPC::Runtime::GCContext* context)
{
/*8010DC98 0010AA98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8010DC9C 0010AA9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010DCA0 0010AAA0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFAE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010DCA4 0010AAA4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8010DCA8 0010AAA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010DCAC 0010AAAC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8010DCB0 0010AAB0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8010DCB4 0010AAB4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFAE4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010DCB8 0010AAB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010DCBC 0010AABC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010DCC0 0010AAC0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8010DCC4 0010AAC4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*8010DCC8 0010AAC8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8010DCCC 0010AACC*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*8010DCD0 0010AAD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010DCD4 0010AAD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010DCD8 0010AAD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8010DCDC 0010AADC*/ PPC::Runtime::ASM::blr();
}