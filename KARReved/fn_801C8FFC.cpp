//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"
#include "fn_80062DD0.hpp"
#include "fn_80062DD0.hpp"
#include "fn_801C9308.hpp"



void fn_801C8FFC(PPC::Runtime::GCContext* context)
{
/*801C8FFC 001C5DFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C9000 001C5E00*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C9004 001C5E04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C9008 001C5E08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C900C 001C5E0C*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*801C9010 001C5E10*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C9014 001C5E14*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801C9018 001C5E18*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*801C901C 001C5E1C*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x418);
/*801C9020 001C5E20*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801C9024 001C5E24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C9028 001C5E28*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x418);
/*801C902C 001C5E2C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x430);
/*801C9030 001C5E30*/ PPC::Runtime::ASM::bl(fn_80062DD0);
/*801C9034 001C5E34*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x418);
/*801C9038 001C5E38*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x430);
/*801C903C 001C5E3C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x424);
/*801C9040 001C5E40*/ PPC::Runtime::ASM::bl(fn_80062DD0);
/*801C9044 001C5E44*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r30));
/*801C9048 001C5E48*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801C904C 001C5E4C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801C9050 001C5E50*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801C9054 001C5E54*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc30, context->r30));
/*801C9058 001C5E58*/ PPC::Runtime::ASM::bl(fn_801C9308);
/*801C905C 001C5E5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C9060 001C5E60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C9064 001C5E64*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C9068 001C5E68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C906C 001C5E6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C9070 001C5E70*/ PPC::Runtime::ASM::blr();
}