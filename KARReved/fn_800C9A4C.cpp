//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5B94.hpp"
#include "fn_800B5AF0.hpp"
#include "fn_800B5B44.hpp"



void fn_800C9A4C(PPC::Runtime::GCContext* context)
{
/*800C9A4C 000C684C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800C9A50 000C6850*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C9A54 000C6854*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C9A58 000C6858*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C9A5C 000C685C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800C9A60 000C6860*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r3));
/*800C9A64 000C6864*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r4));
/* 800C9A68 000C6868  54 80 07 FF */ clrlwi. context->r0 , context->r4 , 31
/*800C9A6C 000C686C*/ PPC::Runtime::ASM::bne(.L_800C9AB8);
/* 800C9A70 000C6870  54 80 FF FF */ extrwi. context->r0 , context->r4 , 1 , 30
/*800C9A74 000C6874*/ PPC::Runtime::ASM::bne(.L_800C9AB8);
/*800C9A78 000C6878*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r31));
/*800C9A7C 000C687C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800C9A80 000C6880*/ PPC::Runtime::ASM::bl(fn_800B5B94);
/*800C9A84 000C6884*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800C9A88 000C6888*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800C9A8C 000C688C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x234, context->r3));
/*800C9A90 000C6890*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x368, context->r3));
/*800C9A94 000C6894*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x1);
/*800C9A98 000C6898*/ PPC::Runtime::ASM::bge(.L_800C9AA8);
/*800C9A9C 000C689C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800C9AA0 000C68A0*/ PPC::Runtime::ASM::bl(fn_800B5AF0);
/*800C9AA4 000C68A4*/ PPC::Runtime::ASM::b(.L_800C9AB0);
RUNTIME_PPC_JUMP_LABEL(.L_800C9AA8, 0x800C9AA8) //this is a jump label
/*800C9AA8 000C68A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800C9AAC 000C68AC*/ PPC::Runtime::ASM::bl(fn_800B5B44);
RUNTIME_PPC_JUMP_LABEL(.L_800C9AB0, 0x800C9AB0) //this is a jump label
/*800C9AB0 000C68B0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800C9AB4 000C68B4*/ PPC::Runtime::ASM::b(.L_800C9ABC);
RUNTIME_PPC_JUMP_LABEL(.L_800C9AB8, 0x800C9AB8) //this is a jump label
/*800C9AB8 000C68B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800C9ABC, 0x800C9ABC) //this is a jump label
/*800C9ABC 000C68BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C9AC0 000C68C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C9AC4 000C68C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C9AC8 000C68C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800C9ACC 000C68CC*/ PPC::Runtime::ASM::blr();
}