//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80193830.hpp"



void fn_801A1F90(PPC::Runtime::GCContext* context)
{
/*801A1F90 0019ED90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A1F94 0019ED94*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A1F98 0019ED98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A1F9C 0019ED9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r3));
/*801A1FA0 0019EDA0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801A1FA4 0019EDA4*/ PPC::Runtime::ASM::beq(.L_801A1FAC);
/*801A1FA8 0019EDA8*/ PPC::Runtime::ASM::bl(fn_80193830);
RUNTIME_PPC_JUMP_LABEL(.L_801A1FAC, 0x801A1FAC) //this is a jump label
/*801A1FAC 0019EDAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A1FB0 0019EDB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A1FB4 0019EDB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A1FB8 0019EDB8*/ PPC::Runtime::ASM::blr();
}