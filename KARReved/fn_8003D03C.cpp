//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "memset.hpp"



void fn_8003D03C(PPC::Runtime::GCContext* context)
{
/*8003D03C 00039E3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8003D040 00039E40*/ PPC::Runtime::ASM::mflr(context->r0);
/*8003D044 00039E44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003D048 00039E48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003D04C 00039E4C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003D050 00039E50*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0xf6);
/*8003D054 00039E54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8003D058 00039E58*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8003D05C 00039E5C*/ PPC::Runtime::ASM::li(context->r5, 0x14);
/*8003D060 00039E60*/ PPC::Runtime::ASM::bl(memset);
/*8003D064 00039E64*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8003D068 00039E68*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8003D06C 00039E6C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r31));
/*8003D070 00039E70*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8003D074 00039E74*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r31));
/*8003D078 00039E78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003D07C 00039E7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003D080 00039E80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8003D084 00039E84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8003D088 00039E88*/ PPC::Runtime::ASM::blr();
}