//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8004F5E0(PPC::Runtime::GCContext* context)
{
/*8004F5E0 0004C3E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8004F5E4 0004C3E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8004F5E8 0004C3E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004F5EC 0004C3EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8004F5F0 0004C3F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8004F5F4 0004C3F4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*8004F5F8 0004C3F8*/ PPC::Runtime::ASM::blt(.L_8004F610);
/*8004F5FC 0004C3FC*/ PPC::Runtime::ASM::lis(context->r3, String_ "gmviconfigure." Get_MemoryOffset_HighBit);
/*8004F600 0004C400*/ PPC::Runtime::ASM::li(context->r4, 0xa7);
/*8004F604 0004C404*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "gmviconfigure." Get_MemoryOffset_LowBit);
/*8004F608 0004C408*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D8 @ Get_MemoryOffset_SDA21);
/*8004F60C 0004C40C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8004F610, 0x8004F610) //this is a jump label
/*8004F610 0004C410*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*8004F614 0004C414*/ PPC::Runtime::ASM::blt(.L_8004F62C);
/*8004F618 0004C418*/ PPC::Runtime::ASM::lis(context->r3, String_ "gmviconfigure." Get_MemoryOffset_HighBit);
/*8004F61C 0004C41C*/ PPC::Runtime::ASM::li(context->r4, 0x86);
/*8004F620 0004C420*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "gmviconfigure." Get_MemoryOffset_LowBit);
/*8004F624 0004C424*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D8 @ Get_MemoryOffset_SDA21);
/*8004F628 0004C428*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8004F62C, 0x8004F62C) //this is a jump label
/*8004F62C 0004C42C*/ PPC::Runtime::ASM::lis(context->r3, StructWithStructs_12 @ Get_MemoryOffset_HighBit);
/*8004F630 0004C430*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*8004F634 0004C434*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithStructs_12 @ Get_MemoryOffset_LowBit);
/*8004F638 0004C438*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*8004F63C 0004C43C*/ PPC::Runtime::ASM::bl(fn_HSD_VISetConfigure);
/*8004F640 0004C440*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004F644 0004C444*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8004F648 0004C448*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004F64C 0004C44C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8004F650 0004C450*/ PPC::Runtime::ASM::blr();
}