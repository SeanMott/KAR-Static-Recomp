//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F7BF4(PPC::Runtime::GCContext* context)
{
/*800F7BF4 000F49F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F7BF8 000F49F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7BFC 000F49FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7C00 000F4A00*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*800F7C04 000F4A04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7C08 000F4A08*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7C0C 000F4A0C*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*800F7C10 000F4A10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F7C14 000F4A14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r3));
/*800F7C18 000F4A18*/ PPC::Runtime::ASM::lwzx(context->r31, context->r3, context->r0);
/*800F7C1C 000F4A1C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F7C20 000F4A20*/ PPC::Runtime::ASM::bne(.L_800F7C34);
/*800F7C24 000F4A24*/ PPC::Runtime::ASM::li(context->r3, lbl_805D61F8 @ Get_MemoryOffset_SDA21);
/*800F7C28 000F4A28*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*800F7C2C 000F4A2C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6200 @ Get_MemoryOffset_SDA21);
/*800F7C30 000F4A30*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F7C34, 0x800F7C34) //this is a jump label
/*800F7C34 000F4A34*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F7C38 000F4A38*/ PPC::Runtime::ASM::beq(.L_800F7C7C);
/*800F7C3C 000F4A3C*/ PPC::Runtime::ASM::bne(.L_800F7C50);
/*800F7C40 000F4A40*/ PPC::Runtime::ASM::li(context->r3, lbl_805D61F8 @ Get_MemoryOffset_SDA21);
/*800F7C44 000F4A44*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*800F7C48 000F4A48*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6200 @ Get_MemoryOffset_SDA21);
/*800F7C4C 000F4A4C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F7C50, 0x800F7C50) //this is a jump label
/*800F7C50 000F4A50*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800F7C54 000F4A54*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F7C58 000F4A58*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*800F7C5C 000F4A5C*/ PPC::Runtime::ASM::bne(.L_800F7C6C);
/*800F7C60 000F4A60*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*800F7C64 000F4A64*/ PPC::Runtime::ASM::beq(.L_800F7C6C);
/*800F7C68 000F4A68*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800F7C6C, 0x800F7C6C) //this is a jump label
/*800F7C6C 000F4A6C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800F7C70 000F4A70*/ PPC::Runtime::ASM::beq(.L_800F7C7C);
/*800F7C74 000F4A74*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F7C78 000F4A78*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_800F7C7C, 0x800F7C7C) //this is a jump label
/*800F7C7C 000F4A7C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*800F7C80 000F4A80*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F7C84 000F4A84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r31));
/*800F7C88 000F4A88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800F7C8C 000F4A8C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*800F7C90 000F4A90*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800F7C94 000F4A94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7C98 000F4A98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7C9C 000F4A9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7CA0 000F4AA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7CA4 000F4AA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7CA8 000F4AA8*/ PPC::Runtime::ASM::blr();
}