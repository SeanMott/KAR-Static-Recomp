//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8016AB34.hpp"
#include "fn_80169B74.hpp"
#include "fn_8016A1C0.hpp"



void fn_80136F28(PPC::Runtime::GCContext* context)
{
/*80136F28 00133D28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80136F2C 00133D2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80136F30 00133D30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80136F34 00133D34*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80136F38 00133D38*/ PPC::Runtime::ASM::mr(context->r31, context->r7);
/*80136F3C 00133D3C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80136F40 00133D40*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*80136F44 00133D44*/ PPC::Runtime::ASM::mr(context->r6, context->r8);
/*80136F48 00133D48*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80136F4C 00133D4C*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*80136F50 00133D50*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80136F54 00133D54*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80136F58 00133D58*/ PPC::Runtime::ASM::bl(fn_8016AB34);
/*80136F5C 00133D5C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80136F60 00133D60*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*80136F64 00133D64*/ PPC::Runtime::ASM::bl(fn_80169B74);
/*80136F68 00133D68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80136F6C 00133D6C*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*80136F70 00133D70*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*80136F74 00133D74*/ PPC::Runtime::ASM::bl(fn_8016A1C0);
/*80136F78 00133D78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80136F7C 00133D7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80136F80 00133D80*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80136F84 00133D84*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80136F88 00133D88*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80136F8C 00133D8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80136F90 00133D90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80136F94 00133D94*/ PPC::Runtime::ASM::blr();
}