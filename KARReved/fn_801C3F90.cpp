//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_80193C20.hpp"



void fn_801C3F90(PPC::Runtime::GCContext* context)
{
/*801C3F90 001C0D90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C3F94 001C0D94*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C3F98 001C0D98*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801C3F9C 001C0D9C*/ PPC::Runtime::ASM::li(context->r4, 0x2d);
/*801C3FA0 001C0DA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3FA4 001C0DA4*/ PPC::Runtime::ASM::li(context->r5, 0x6a);
/*801C3FA8 001C0DA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3FAC 001C0DAC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C3FB0 001C0DB0*/ PPC::Runtime::ASM::ble(.L_801C3FB8);
/*801C3FB4 001C0DB4*/ PPC::Runtime::ASM::li(context->r5, 0x6b);
RUNTIME_PPC_JUMP_LABEL(.L_801C3FB8, 0x801C3FB8) //this is a jump label
/*801C3FB8 001C0DB8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E19A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C3FBC 001C0DBC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801C3FC0 001C0DC0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E19AC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C3FC4 001C0DC4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801C3FC8 001C0DC8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801C3FCC 001C0DCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*801C3FD0 001C0DD0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C3FD4 001C0DD4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801C3FD8 001C0DD8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x6a);
/*801C3FDC 001C0DDC*/ PPC::Runtime::ASM::bne(.L_801C3FE4);
/*801C3FE0 001C0DE0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801C3FE4, 0x801C3FE4) //this is a jump label
/*801C3FE4 001C0DE4*/ PPC::Runtime::ASM::bl(fn_80193C20);
/*801C3FE8 001C0DE8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801C3FEC 001C0DEC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa38, context->r31));
/*801C3FF0 001C0DF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C3FF4 001C0DF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C3FF8 001C0DF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C3FFC 001C0DFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C4000 001C0E00*/ PPC::Runtime::ASM::blr();
}