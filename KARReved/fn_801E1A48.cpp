//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"
#include "fn_8018CB04.hpp"
#include "fn_801CC278.hpp"



void fn_801E1A48(PPC::Runtime::GCContext* context)
{
/*801E1A48 001DE848*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E1A4C 001DE84C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E1A50 001DE850*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1CE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E1A54 001DE854*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*801E1A58 001DE858*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E1A5C 001DE85C*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801E1A60 001DE860*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1CEC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E1A64 001DE864*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801E1A68 001DE868*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E1A6C 001DE86C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E1A70 001DE870*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801E1A74 001DE874*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801E1A78 001DE878*/ PPC::Runtime::ASM::bl(fn_8018CB04);
/*801E1A7C 001DE87C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E1A80 001DE880*/ PPC::Runtime::ASM::bl(fn_801CC278);
/*801E1A84 001DE884*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc37, context->r31));
/*801E1A88 001DE888*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E1A8C 001DE88C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*801E1A90 001DE890*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc37, context->r31));
/*801E1A94 001DE894*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc37, context->r31));
/*801E1A98 001DE898*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801E1A9C 001DE89C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc37, context->r31));
/*801E1AA0 001DE8A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E1AA4 001DE8A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E1AA8 001DE8A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E1AAC 001DE8AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E1AB0 001DE8B0*/ PPC::Runtime::ASM::blr();
}