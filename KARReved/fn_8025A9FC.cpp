//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8025AA28.hpp"
#include "fn_8025AA28.hpp"
#include "fn_80254D4C.hpp"



void fn_8025A9FC(PPC::Runtime::GCContext* context)
{
/*8025A9FC 002577FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025AA00 00257800*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025AA04 00257804*/ PPC::Runtime::ASM::lis(context->r4, fn_8025AA28 @ Get_MemoryOffset_HighBit);
/*8025AA08 00257808*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025AA0C 0025780C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8025AA28 @ Get_MemoryOffset_LowBit);
/*8025AA10 00257810*/ PPC::Runtime::ASM::bl(fn_80254D4C);
/*8025AA14 00257814*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025AA18 00257818*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025AA1C 0025781C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025AA20 00257820*/ PPC::Runtime::ASM::blr();
}