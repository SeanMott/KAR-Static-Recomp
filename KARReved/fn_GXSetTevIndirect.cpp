//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetTevIndirect(PPC::Runtime::GCContext* context)
{
/*803CE568 003CB368*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803CE56C 003CB36C*/ PPC::Runtime::ASM::rlwinm(context->r4, context->r4, 0, 30, 27);
/*803CE570 003CB370*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*803CE574 003CB374*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/*803CE578 003CB378*/ PPC::Runtime::ASM::lwz(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803CE57C 003CB37C*/ PPC::Runtime::ASM::rlwinm(context->r5, context->r0, 0, 28, 24);
/*803CE580 003CB380*/ PPC::Runtime::ASM::lbz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33, context->r1));
/*803CE584 003CB384*/ PPC::Runtime::ASM::slwi(context->r0, context->r6, 4);
/*803CE588 003CB388*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CE58C 003CB38C*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*803CE590 003CB390*/ PPC::Runtime::ASM::rlwinm(context->r5, context->r0, 0, 25, 22);
/*803CE594 003CB394*/ PPC::Runtime::ASM::slwi(context->r0, context->r11, 7);
/*803CE598 003CB398*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*803CE59C 003CB39C*/ PPC::Runtime::ASM::rlwinm(context->r5, context->r0, 0, 23, 18);
/*803CE5A0 003CB3A0*/ PPC::Runtime::ASM::slwi(context->r0, context->r7, 9);
/*803CE5A4 003CB3A4*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*803CE5A8 003CB3A8*/ PPC::Runtime::ASM::rlwinm(context->r5, context->r0, 0, 19, 15);
/*803CE5AC 003CB3AC*/ PPC::Runtime::ASM::slwi(context->r0, context->r8, 13);
/*803CE5B0 003CB3B0*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*803CE5B4 003CB3B4*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x10);
/*803CE5B8 003CB3B8*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r0, 0, 16, 12);
/*803CE5BC 003CB3BC*/ PPC::Runtime::ASM::slwi(context->r0, context->r9, 16);
/*803CE5C0 003CB3C0*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CE5C4 003CB3C4*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r0, 0, 13, 11);
/*803CE5C8 003CB3C8*/ PPC::Runtime::ASM::slwi(context->r0, context->r12, 19);
/*803CE5CC 003CB3CC*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CE5D0 003CB3D0*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r0, 0, 12, 10);
/*803CE5D4 003CB3D4*/ PPC::Runtime::ASM::clrlslwi(context->r0, context->r10, 24, 20);
/*803CE5D8 003CB3D8*/ PPC::Runtime::ASM::or(context->r6, context->r3, context->r0);
/*803CE5DC 003CB3DC*/ PPC::Runtime::ASM::li(context->r0, 0x61);
/*803CE5E0 003CB3E0*/ PPC::Runtime::ASM::lis(context->r3, 0xcc01);
/*803CE5E4 003CB3E4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CE5E8 003CB3E8*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 24);
/*803CE5EC 003CB3EC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r6, 0, 8, 31);
/*803CE5F0 003CB3F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CE5F4 003CB3F4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CE5F8 003CB3F8*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803CE5FC 003CB3FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803CE600 003CB400*/ PPC::Runtime::ASM::blr();
}