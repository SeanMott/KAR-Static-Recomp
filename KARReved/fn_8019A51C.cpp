//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D1860.hpp"



void fn_8019A51C(PPC::Runtime::GCContext* context)
{
/*8019A51C 0019731C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019A520 00197320*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019A524 00197324*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019A528 00197328*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019A52C 0019732C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019A530 00197330*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8019A534 00197334*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x670, context->r3));
/*8019A538 00197338*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*8019A53C 0019733C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r3));
/*8019A540 00197340*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/* 8019A544 00197344  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8019A548 00197348*/ PPC::Runtime::ASM::bne(.L_8019A560);
/*8019A54C 0019734C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804AE160 @ Get_MemoryOffset_HighBit);
/*8019A550 00197350*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." Get_MemoryOffset_SDA21);
/*8019A554 00197354*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804AE160 @ Get_MemoryOffset_LowBit);
/*8019A558 00197358*/ PPC::Runtime::ASM::li(context->r4, 0x94);
/*8019A55C 0019735C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8019A560, 0x8019A560) //this is a jump label
/*8019A560 00197360*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8019A564 00197364*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8019A568 00197368*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8019A56C 0019736C*/ PPC::Runtime::ASM::bl(fn_800D1860);
/*8019A570 00197370*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019A574 00197374*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019A578 00197378*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019A57C 0019737C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019A580 00197380*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8019A584 00197384*/ PPC::Runtime::ASM::blr();
}