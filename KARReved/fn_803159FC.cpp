//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_803159FC(PPC::Runtime::GCContext* context)
{
/*803159FC 003127FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80315A00 00312800*/ PPC::Runtime::ASM::mflr(context->r0);
/*80315A04 00312804*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80315A08 00312808*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80315A0C 0031280C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80315A10 00312810*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x4, context->r4));
/*80315A14 00312814*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80315A18 00312818*/ PPC::Runtime::ASM::beq(.L_80315A20);
/*80315A1C 0031281C*/ PPC::Runtime::ASM::b(.L_80315A24);
RUNTIME_PPC_JUMP_LABEL(.L_80315A20, 0x80315A20) //this is a jump label
/*80315A20 00312820*/ PPC::Runtime::ASM::li(context->r30, lbl_805DA080 @ Get_MemoryOffset_SDA21);
RUNTIME_PPC_JUMP_LABEL(.L_80315A24, 0x80315A24) //this is a jump label
/*80315A24 00312824*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E08F8 @ Get_MemoryOffset_HighBit);
/*80315A28 00312828*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80315A2C 0031282C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E08F8 @ Get_MemoryOffset_LowBit);
/*80315A30 00312830*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80315A34 00312834*/ PPC::Runtime::ASM::li(context->r5, 0xd);
/*80315A38 00312838*/ PPC::Runtime::ASM::bl(fn_strncmp);
/*80315A3C 0031283C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80315A40 00312840*/ PPC::Runtime::ASM::beq(.L_80315A94);
/*80315A44 00312844*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E0908 @ Get_MemoryOffset_HighBit);
/*80315A48 00312848*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80315A4C 0031284C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E0908 @ Get_MemoryOffset_LowBit);
/*80315A50 00312850*/ PPC::Runtime::ASM::li(context->r5, 0xa);
/*80315A54 00312854*/ PPC::Runtime::ASM::bl(fn_strncmp);
/*80315A58 00312858*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80315A5C 0031285C*/ PPC::Runtime::ASM::beq(.L_80315A94);
/*80315A60 00312860*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80315A64 00312864*/ PPC::Runtime::ASM::li(context->r3, lbl_805DA0FC @ Get_MemoryOffset_SDA21);
/*80315A68 00312868*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80315A6C 0031286C*/ PPC::Runtime::ASM::bl(fn_strncmp);
/*80315A70 00312870*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80315A74 00312874*/ PPC::Runtime::ASM::beq(.L_80315A90);
/*80315A78 00312878*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80315A7C 0031287C*/ PPC::Runtime::ASM::li(context->r3, lbl_805DA104 @ Get_MemoryOffset_SDA21);
/*80315A80 00312880*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80315A84 00312884*/ PPC::Runtime::ASM::bl(fn_strncmp);
/*80315A88 00312888*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80315A8C 0031288C*/ PPC::Runtime::ASM::bne(.L_80315A94);
RUNTIME_PPC_JUMP_LABEL(.L_80315A90, 0x80315A90) //this is a jump label
/*80315A90 00312890*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80315A94, 0x80315A94) //this is a jump label
/*80315A94 00312894*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80315A98 00312898*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80315A9C 0031289C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80315AA0 003128A0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80315AA4 003128A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80315AA8 003128A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80315AAC 003128AC*/ PPC::Runtime::ASM::blr();
}