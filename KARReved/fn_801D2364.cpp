//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800BAD8C.hpp"
#include "fn_80191F38.hpp"



void fn_801D2364(PPC::Runtime::GCContext* context)
{
/*801D2364 001CF164*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801D2368 001CF168*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D236C 001CF16C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D2370 001CF170*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D2374 001CF174*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D2378 001CF178*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801D237C 001CF17C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D2380 001CF180*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801D2384 001CF184*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801D2388 001CF188*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801D238C 001CF18C*/ PPC::Runtime::ASM::bne(.L_801D2398);
/*801D2390 001CF190*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*801D2394 001CF194*/ PPC::Runtime::ASM::b(.L_801D23F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D2398, 0x801D2398) //this is a jump label
/*801D2398 001CF198*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x470, context->r29));
/*801D239C 001CF19C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D23A0 001CF1A0*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x400);
/*801D23A4 001CF1A4*/ PPC::Runtime::ASM::bl(fn_800BAD8C);
/*801D23A8 001CF1A8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x490, context->r29));
/*801D23AC 001CF1AC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801D23B0 001CF1B0*/ PPC::Runtime::ASM::ble(.L_801D23BC);
/*801D23B4 001CF1B4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801D23B8 001CF1B8*/ PPC::Runtime::ASM::b(.L_801D23D4);
RUNTIME_PPC_JUMP_LABEL(.L_801D23BC, 0x801D23BC) //this is a jump label
/*801D23BC 001CF1BC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x494, context->r29));
/*801D23C0 001CF1C0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801D23C4 001CF1C4*/ PPC::Runtime::ASM::ble(.L_801D23D0);
/*801D23C8 001CF1C8*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*801D23CC 001CF1CC*/ PPC::Runtime::ASM::b(.L_801D23D4);
RUNTIME_PPC_JUMP_LABEL(.L_801D23D0, 0x801D23D0) //this is a jump label
/*801D23D0 001CF1D0*/ PPC::Runtime::ASM::li(context->r31, 0x2);
RUNTIME_PPC_JUMP_LABEL(.L_801D23D4, 0x801D23D4) //this is a jump label
/*801D23D4 001CF1D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*801D23D8 001CF1D8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801D23DC 001CF1DC*/ PPC::Runtime::ASM::bl(fn_80191F38);
/*801D23E0 001CF1E0*/ PPC::Runtime::ASM::cmpw(context->r31, context->r3);
/*801D23E4 001CF1E4*/ PPC::Runtime::ASM::bge(.L_801D23EC);
/*801D23E8 001CF1E8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_801D23EC, 0x801D23EC) //this is a jump label
/*801D23EC 001CF1EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_801D23F0, 0x801D23F0) //this is a jump label
/*801D23F0 001CF1F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D23F4 001CF1F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D23F8 001CF1F8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D23FC 001CF1FC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D2400 001CF200*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D2404 001CF204*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801D2408 001CF208*/ PPC::Runtime::ASM::blr();
}