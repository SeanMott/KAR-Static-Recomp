//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006F590.hpp"



void fn_8006F93C(PPC::Runtime::GCContext* context)
{
/*8006F93C 0006C73C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8006F940 0006C740*/ PPC::Runtime::ASM::mflr(context->r0);
/*8006F944 0006C744*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8006F948 0006C748*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8006F94C 0006C74C*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*8006F950 0006C750*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*8006F954 0006C754*/ PPC::Runtime::ASM::mr(context->r28, context->r5);
/*8006F958 0006C758*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r3));
/*8006F95C 0006C75C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_235 @ Get_MemoryOffset_HighBit);
/*8006F960 0006C760*/ PPC::Runtime::ASM::clrlwi(context->r8, context->r28, 16);
/*8006F964 0006C764*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*8006F968 0006C768*/ PPC::Runtime::ASM::subi(context->r0, context->r5, 0x1);
/*8006F96C 0006C76C*/ PPC::Runtime::ASM::mr(context->r29, context->r6);
/*8006F970 0006C770*/ PPC::Runtime::ASM::cmpw(context->r8, context->r0);
/*8006F974 0006C774*/ PPC::Runtime::ASM::mr(context->r30, context->r7);
/*8006F978 0006C778*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_235 @ Get_MemoryOffset_LowBit);
/*8006F97C 0006C77C*/ PPC::Runtime::ASM::blt(.L_8006F9A0);
/*8006F980 0006C780*/ PPC::Runtime::ASM::mr(context->r4, context->r8);
/*8006F984 0006C784*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2b4);
/*8006F988 0006C788*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8006F98C 0006C78C*/ PPC::Runtime::ASM::bl(OSReport);
/*8006F990 0006C790*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8006F994 0006C794*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x2d4);
/*8006F998 0006C798*/ PPC::Runtime::ASM::li(context->r4, 0x409);
/*8006F99C 0006C79C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8006F9A0, 0x8006F9A0) //this is a jump label
/*8006F9A0 0006C7A0*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180550EAC @ Get_MemoryOffset_HighBit);
/*8006F9A4 0006C7A4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*8006F9A8 0006C7A8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180550EAC @ Get_MemoryOffset_LowBit);
/*8006F9AC 0006C7AC*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 4);
/*8006F9B0 0006C7B0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8006F9B4 0006C7B4*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8006F9B8 0006C7B8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8006F9BC 0006C7BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8006F9C0 0006C7C0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8006F9C4 0006C7C4*/ PPC::Runtime::ASM::bctrl();
/*8006F9C8 0006C7C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8006F9CC 0006C7CC*/ PPC::Runtime::ASM::bne(.L_8006F9E0);
/*8006F9D0 0006C7D0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8006F9D4 0006C7D4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x2f4);
/*8006F9D8 0006C7D8*/ PPC::Runtime::ASM::li(context->r4, 0x40c);
/*8006F9DC 0006C7DC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8006F9E0, 0x8006F9E0) //this is a jump label
/*8006F9E0 0006C7E0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8006F9E4 0006C7E4*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*8006F9E8 0006C7E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8006F9EC 0006C7EC*/ PPC::Runtime::ASM::mr(context->r5, context->r27);
/*8006F9F0 0006C7F0*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*8006F9F4 0006C7F4*/ PPC::Runtime::ASM::mr(context->r7, context->r29);
/*8006F9F8 0006C7F8*/ PPC::Runtime::ASM::mr(context->r8, context->r30);
/*8006F9FC 0006C7FC*/ PPC::Runtime::ASM::addi(context->r9, context->r1, 0x8);
/*8006FA00 0006C800*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8006FA04 0006C804*/ PPC::Runtime::ASM::bl(fn_8006F590);
/*8006FA08 0006C808*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8006FA0C 0006C80C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8006FA10 0006C810*/ PPC::Runtime::ASM::bne(.L_8006FA24);
/*8006FA14 0006C814*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8006FA18 0006C818*/ PPC::Runtime::ASM::li(context->r4, 0x414);
/*8006FA1C 0006C81C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5388 @ Get_MemoryOffset_SDA21);
/*8006FA20 0006C820*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8006FA24, 0x8006FA24) //this is a jump label
/*8006FA24 0006C824*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8006FA28 0006C828*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*8006FA2C 0006C82C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8006FA30 0006C830*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8006FA34 0006C834*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8006FA38 0006C838*/ PPC::Runtime::ASM::blr();
}