//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8045C080.hpp"
#include "fn_8045BD80.hpp"



void fn_8045C030(PPC::Runtime::GCContext* context)
{
/*8045C030 00458E30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8045C034 00458E34*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045C038 00458E38*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x10);
/*8045C03C 00458E3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045C040 00458E40*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8045C044 00458E44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045C048 00458E48*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8045C04C 00458E4C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*8045C050 00458E50*/ PPC::Runtime::ASM::bl(fn_8045C080);
/*8045C054 00458E54*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8045C058 00458E58*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8045C05C 00458E5C*/ PPC::Runtime::ASM::li(context->r5, 0x10);
/*8045C060 00458E60*/ PPC::Runtime::ASM::bl(fn_8045BD80);
/*8045C064 00458E64*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*8045C068 00458E68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045C06C 00458E6C*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*8045C070 00458E70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045C074 00458E74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045C078 00458E78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8045C07C 00458E7C*/ PPC::Runtime::ASM::blr();
}