//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801B3CF4.hpp"
#include "fn_801B3CF4.hpp"
#include "fn_801A9350.hpp"
#include "fn_ability_Spike_changeNeedle.hpp"
#include "fn_abilityTimer_Plasma_removeEffect.hpp"
#include "fn_8005E7D8.hpp"



void fn_801B3C4C(PPC::Runtime::GCContext* context)
{
/*801B3C4C 001B0A4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B3C50 001B0A50*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B3C54 001B0A54*/ PPC::Runtime::ASM::lis(context->r4, fn_801B3CF4 @ Get_MemoryOffset_HighBit);
/*801B3C58 001B0A58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3C5C 001B0A5C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B3CF4 @ Get_MemoryOffset_LowBit);
/*801B3C60 001B0A60*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801B3C64 001B0A64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3C68 001B0A68*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B3C6C 001B0A6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7ec, context->r3));
/*801B3C70 001B0A70*/ PPC::Runtime::ASM::bl(fn_801A9350);
/*801B3C74 001B0A74*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/* 801B3C78 001B0A78  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801B3C7C 001B0A7C*/ PPC::Runtime::ASM::beq(.L_801B3CE0);
/*801B3C80 001B0A80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3C84 001B0A84*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801B3C88 001B0A88*/ PPC::Runtime::ASM::bl(fn_ability_Spike_changeNeedle);
/*801B3C8C 001B0A8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
/*801B3C90 001B0A90*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B3C94 001B0A94*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B3C98 001B0A98*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r5);
/*801B3C9C 001B0A9C*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r5);
/*801B3CA0 001B0AA0*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*801B3CA4 001B0AA4*/ PPC::Runtime::ASM::beq(.L_801B3CB8);
/*801B3CA8 001B0AA8*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Plasma_removeEffect);
/*801B3CAC 001B0AAC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B3CB0 001B0AB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B3CB4 001B0AB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3CB8, 0x801B3CB8) //this is a jump label
/*801B3CB8 001B0AB8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3CBC 001B0ABC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801B3CC0 001B0AC0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B3CC4 001B0AC4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3CC8 001B0AC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B3CCC 001B0ACC*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*801B3CD0 001B0AD0*/ PPC::Runtime::ASM::beq(.L_801B3CD8);
/*801B3CD4 001B0AD4*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
RUNTIME_PPC_JUMP_LABEL(.L_801B3CD8, 0x801B3CD8) //this is a jump label
/*801B3CD8 001B0AD8*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801B3CDC 001B0ADC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3CE0, 0x801B3CE0) //this is a jump label
/*801B3CE0 001B0AE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3CE4 001B0AE4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3CE8 001B0AE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B3CEC 001B0AEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B3CF0 001B0AF0*/ PPC::Runtime::ASM::blr();
}