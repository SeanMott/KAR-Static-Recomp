//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_gmGetClearcheckerTypeP(PPC::Runtime::GCContext* context)
{
/*800076A0 000044A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800076A4 000044A4*/ PPC::Runtime::ASM::mflr(context->r0);
/* 800076A8 000044A8  54 64 06 3F */ clrlwi. context->r4 , context->r3 , 24
/*800076AC 000044AC*/ PPC::Runtime::ASM::lis(context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_HighBit);
/*800076B0 000044B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_LowBit);
/*800076B4 000044B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800076B8 000044B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xd68);
/*800076BC 000044BC*/ PPC::Runtime::ASM::bne(.L_800076C4);
/*800076C0 000044C0*/ PPC::Runtime::ASM::b(.L_8000770C);
RUNTIME_PPC_JUMP_LABEL(.L_800076C4, 0x800076C4) //this is a jump label
/*800076C4 000044C4*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x1);
/*800076C8 000044C8*/ PPC::Runtime::ASM::bne(.L_800076D4);
/*800076CC 000044CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x118);
/*800076D0 000044D0*/ PPC::Runtime::ASM::b(.L_8000770C);
RUNTIME_PPC_JUMP_LABEL(.L_800076D4, 0x800076D4) //this is a jump label
/*800076D4 000044D4*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x2);
/*800076D8 000044D8*/ PPC::Runtime::ASM::bne(.L_800076E4);
/*800076DC 000044DC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x240);
/*800076E0 000044E0*/ PPC::Runtime::ASM::b(.L_8000770C);
RUNTIME_PPC_JUMP_LABEL(.L_800076E4, 0x800076E4) //this is a jump label
/*800076E4 000044E4*/ PPC::Runtime::ASM::lis(context->r3, String_ "error_Clearchecker_Type_DoubleFlag_FormaterSt" Get_MemoryOffset_HighBit);
/*800076E8 000044E8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "error_Clearchecker_Type_DoubleFlag_FormaterSt" Get_MemoryOffset_LowBit);
/*800076EC 000044EC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800076F0 000044F0*/ PPC::Runtime::ASM::bl(OSReport);
/*800076F4 000044F4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_124 @ Get_MemoryOffset_HighBit);
/*800076F8 000044F8*/ PPC::Runtime::ASM::li(context->r4, 0x2c7);
/*800076FC 000044FC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_124 @ Get_MemoryOffset_LowBit);
/*80007700 00004500*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5110 @ Get_MemoryOffset_SDA21);
/*80007704 00004504*/ PPC::Runtime::ASM::bl(fn___assert);
/*80007708 00004508*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8000770C, 0x8000770C) //this is a jump label
/*8000770C 0000450C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80007710 00004510*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80007714 00004514*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80007718 00004518*/ PPC::Runtime::ASM::blr();
}