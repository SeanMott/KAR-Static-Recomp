//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80071E40.hpp"



void fn_8007212C(PPC::Runtime::GCContext* context)
{
/*8007212C 0006EF2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80072130 0006EF30*/ PPC::Runtime::ASM::mflr(context->r0);
/*80072134 0006EF34*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x2);
/*80072138 0006EF38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007213C 0006EF3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80072140 0006EF40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80072144 0006EF44*/ PPC::Runtime::ASM::bne(.L_800721C0);
/*80072148 0006EF48*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/* 8007214C 0006EF4C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80072150 0006EF50*/ PPC::Runtime::ASM::bne(.L_800721C0);
/*80072154 0006EF54*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE320 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80072158 0006EF58*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8007215C 0006EF5C*/ PPC::Runtime::ASM::beq(.L_800721C0);
/*80072160 0006EF60*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r4));
/*80072164 0006EF64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r31));
/*80072168 0006EF68*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*8007216C 0006EF6C*/ PPC::Runtime::ASM::beq(.L_80072174);
/*80072170 0006EF70*/ PPC::Runtime::ASM::b(.L_800721C0);
RUNTIME_PPC_JUMP_LABEL(.L_80072174, 0x80072174) //this is a jump label
/*80072174 0006EF74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r31));
/*80072178 0006EF78*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8007217C 0006EF7C*/ PPC::Runtime::ASM::beq(.L_8007218C);
/*80072180 0006EF80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*80072184 0006EF84*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*80072188 0006EF88*/ PPC::Runtime::ASM::bne(.L_800721C0);
RUNTIME_PPC_JUMP_LABEL(.L_8007218C, 0x8007218C) //this is a jump label
/*8007218C 0006EF8C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80072190 0006EF90*/ PPC::Runtime::ASM::bl(fn_HSD_FogSet);
/*80072194 0006EF94*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DECF0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80072198 0006EF98*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8007219C 0006EF9C*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800721A0 0006EFA0*/ PPC::Runtime::ASM::bl(fn_80438C50);
/*800721A4 0006EFA4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800721A8 0006EFA8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*800721AC 0006EFAC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800721B0 0006EFB0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xcc);
/*800721B4 0006EFB4*/ PPC::Runtime::ASM::bl(fn_80071E40);
/*800721B8 0006EFB8*/ PPC::Runtime::ASM::bl(fn_8041B0F4);
/*800721BC 0006EFBC*/ PPC::Runtime::ASM::bl(fn_HSD_FogSet);
RUNTIME_PPC_JUMP_LABEL(.L_800721C0, 0x800721C0) //this is a jump label
/*800721C0 0006EFC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800721C4 0006EFC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800721C8 0006EFC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800721CC 0006EFCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800721D0 0006EFD0*/ PPC::Runtime::ASM::blr();
}