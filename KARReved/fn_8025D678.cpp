//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025D678(PPC::Runtime::GCContext* context)
{
/*8025D678 0025A478*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025D67C 0025A47C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025D680 0025A480*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D684 0025A484*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D688 0025A488*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D68C 0025A48C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025D690 0025A490*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025D694 0025A494*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D698 0025A498*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025D69C 0025A49C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D6A0 0025A4A0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D6A4 0025A4A4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025D6A8 0025A4A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D6AC 0025A4AC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D6B0 0025A4B0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025D6B4 0025A4B4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D6B8 0025A4B8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025D6BC 0025A4BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D6C0 0025A4C0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D6C4 0025A4C4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025D6C8 0025A4C8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D6CC 0025A4CC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025D6D0 0025A4D0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025D6D4 0025A4D4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EEC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D6D8 0025A4D8*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025D6DC 0025A4DC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D6E0 0025A4E0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D6E4 0025A4E4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025D6E8 0025A4E8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025D6EC 0025A4EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025D6F0 0025A4F0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025D6F4 0025A4F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D6F8 0025A4F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D6FC 0025A4FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D700 0025A500*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025D704 0025A504*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025D708 0025A508*/ PPC::Runtime::ASM::blr();
}