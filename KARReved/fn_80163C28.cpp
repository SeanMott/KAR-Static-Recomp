//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80163C28(PPC::Runtime::GCContext* context)
{
/*80163C28 00160A28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80163C2C 00160A2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80163C30 00160A30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80163C34 00160A34*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80163C38 00160A38*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80163C3C 00160A3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80163C40 00160A40*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*80163C44 00160A44*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80163C48 00160A48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x998, context->r3));
/*80163C4C 00160A4C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80163C50 00160A50*/ PPC::Runtime::ASM::beq(.L_80163CD4);
/*80163C54 00160A54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80163C58 00160A58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80163C5C 00160A5C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80163C60 00160A60*/ PPC::Runtime::ASM::bne(.L_80163C74);
/*80163C64 00160A64*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6A60 @ Get_MemoryOffset_SDA21);
/*80163C68 00160A68*/ PPC::Runtime::ASM::li(context->r4, 0x3c6);
/*80163C6C 00160A6C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6A68 @ Get_MemoryOffset_SDA21);
/*80163C70 00160A70*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80163C74, 0x80163C74) //this is a jump label
/*80163C74 00160A74*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E09E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80163C78 00160A78*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f31);
/*80163C7C 00160A7C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80163C80 00160A80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80163C84 00160A84*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80163C88 00160A88*/ PPC::Runtime::ASM::bne(.L_80163CD4);
/*80163C8C 00160A8C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80163C90 00160A90*/ PPC::Runtime::ASM::beq(.L_80163CD4);
/*80163C94 00160A94*/ PPC::Runtime::ASM::bne(.L_80163CA8);
/*80163C98 00160A98*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6A60 @ Get_MemoryOffset_SDA21);
/*80163C9C 00160A9C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80163CA0 00160AA0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6A68 @ Get_MemoryOffset_SDA21);
/*80163CA4 00160AA4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80163CA8, 0x80163CA8) //this is a jump label
/*80163CA8 00160AA8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80163CAC 00160AAC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80163CB0 00160AB0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80163CB4 00160AB4*/ PPC::Runtime::ASM::bne(.L_80163CC4);
/*80163CB8 00160AB8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80163CBC 00160ABC*/ PPC::Runtime::ASM::beq(.L_80163CC4);
/*80163CC0 00160AC0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80163CC4, 0x80163CC4) //this is a jump label
/*80163CC4 00160AC4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80163CC8 00160AC8*/ PPC::Runtime::ASM::bne(.L_80163CD4);
/*80163CCC 00160ACC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80163CD0 00160AD0*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80163CD4, 0x80163CD4) //this is a jump label
/*80163CD4 00160AD4*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80163CD8 00160AD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80163CDC 00160ADC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80163CE0 00160AE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80163CE4 00160AE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80163CE8 00160AE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80163CEC 00160AEC*/ PPC::Runtime::ASM::blr();
}