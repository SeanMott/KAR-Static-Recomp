//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_801262A8(PPC::Runtime::GCContext* context)
{
/*801262A8 001230A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801262AC 001230AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801262B0 001230B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801262B4 001230B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801262B8 001230B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801262BC 001230BC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801262C0 001230C0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801262C4 001230C4*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xb0c);
/*801262C8 001230C8*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*801262CC 001230CC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801262D0, 0x801262D0) //this is a jump label
/*801262D0 001230D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*801262D4 001230D4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801262D8 001230D8*/ PPC::Runtime::ASM::beq(.L_801262E4);
/*801262DC 001230DC*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*801262E0 001230E0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801262E4, 0x801262E4) //this is a jump label
/*801262E4 001230E4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801262E8 001230E8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*801262EC 001230EC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*801262F0 001230F0*/ PPC::Runtime::ASM::blt(.L_801262D0);
/*801262F4 001230F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801262F8 001230F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801262FC 001230FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80126300 00123100*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80126304 00123104*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80126308 00123108*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012630C 0012310C*/ PPC::Runtime::ASM::blr();
}