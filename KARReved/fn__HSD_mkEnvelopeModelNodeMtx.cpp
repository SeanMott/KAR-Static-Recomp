//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_PSMTXInverse.hpp"
#include "fn_HSD_MtxInverseConcat?.hpp"
#include "fn_PSMTXConcat.hpp"
#include "fn_HSD_MtxInverseConcat?.hpp"



void fn__HSD_mkEnvelopeModelNodeMtx(PPC::Runtime::GCContext* context)
{
/*8040F10C 0040BF0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8040F110 0040BF10*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040F114 0040BF14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8040F118 0040BF18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8040F11C 0040BF1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8040F120 0040BF20*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8040F124 0040BF24*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8040F128 0040BF28*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8040F12C 0040BF2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8040F130 0040BF30*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 30, 30);
/*8040F134 0040BF34*/ PPC::Runtime::ASM::beq(.L_8040F140);
/*8040F138 0040BF38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040F13C 0040BF3C*/ PPC::Runtime::ASM::b(.L_8040F1FC);
RUNTIME_PPC_JUMP_LABEL(.L_8040F140, 0x8040F140) //this is a jump label
/*8040F140 0040BF40*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8040F144 0040BF44*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
/*8040F148 0040BF48*/ PPC::Runtime::ASM::bne(.L_8040F178);
/*8040F14C 0040BF4C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80503BA0 @ Get_MemoryOffset_HighBit);
/*8040F150 0040BF50*/ PPC::Runtime::ASM::li(context->r4, 0x182);
/*8040F154 0040BF54*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80503BA0 @ Get_MemoryOffset_LowBit);
/*8040F158 0040BF58*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_525 @ Get_MemoryOffset_SDA21);
/*8040F15C 0040BF5C*/ PPC::Runtime::ASM::bl(fn___assert);
/*8040F160 0040BF60*/ PPC::Runtime::ASM::b(.L_8040F178);
RUNTIME_PPC_JUMP_LABEL(.L_8040F164, 0x8040F164) //this is a jump label
/*8040F164 0040BF64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/* 8040F168 0040BF68  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*8040F16C 0040BF6C*/ PPC::Runtime::ASM::beq(.L_8040F174);
/*8040F170 0040BF70*/ PPC::Runtime::ASM::b(.L_8040F184);
RUNTIME_PPC_JUMP_LABEL(.L_8040F174, 0x8040F174) //this is a jump label
/*8040F174 0040BF74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8040F178, 0x8040F178) //this is a jump label
/*8040F178 0040BF78*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8040F17C 0040BF7C*/ PPC::Runtime::ASM::bne(.L_8040F164);
/*8040F180 0040BF80*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8040F184, 0x8040F184) //this is a jump label
/*8040F184 0040BF84*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8040F188 0040BF88*/ PPC::Runtime::ASM::bne(.L_8040F1A0);
/*8040F18C 0040BF8C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80503BA0 @ Get_MemoryOffset_HighBit);
/*8040F190 0040BF90*/ PPC::Runtime::ASM::li(context->r4, 0x1d2);
/*8040F194 0040BF94*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80503BA0 @ Get_MemoryOffset_LowBit);
/*8040F198 0040BF98*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_524 @ Get_MemoryOffset_SDA21);
/*8040F19C 0040BF9C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040F1A0, 0x8040F1A0) //this is a jump label
/*8040F1A0 0040BFA0*/ PPC::Runtime::ASM::cmplw(context->r31, context->r29);
/*8040F1A4 0040BFA4*/ PPC::Runtime::ASM::bne(.L_8040F1B8);
/*8040F1A8 0040BFA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*8040F1AC 0040BFAC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8040F1B0 0040BFB0*/ PPC::Runtime::ASM::bl(fn_PSMTXInverse);
/*8040F1B4 0040BFB4*/ PPC::Runtime::ASM::b(.L_8040F1F8);
RUNTIME_PPC_JUMP_LABEL(.L_8040F1B8, 0x8040F1B8) //this is a jump label
/*8040F1B8 0040BFB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8040F1BC 0040BFBC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 30, 30);
/*8040F1C0 0040BFC0*/ PPC::Runtime::ASM::beq(.L_8040F1D8);
/*8040F1C4 0040BFC4*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*8040F1C8 0040BFC8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*8040F1CC 0040BFCC*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x44);
/*8040F1D0 0040BFD0*/ PPC::Runtime::ASM::bl(fn_HSD_MtxInverseConcat?);
/*8040F1D4 0040BFD4*/ PPC::Runtime::ASM::b(.L_8040F1F8);
RUNTIME_PPC_JUMP_LABEL(.L_8040F1D8, 0x8040F1D8) //this is a jump label
/*8040F1D8 0040BFD8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r31));
/*8040F1DC 0040BFDC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*8040F1E0 0040BFE0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8040F1E4 0040BFE4*/ PPC::Runtime::ASM::bl(fn_PSMTXConcat);
/*8040F1E8 0040BFE8*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*8040F1EC 0040BFEC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8040F1F0 0040BFF0*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x44);
/*8040F1F4 0040BFF4*/ PPC::Runtime::ASM::bl(fn_HSD_MtxInverseConcat?);
RUNTIME_PPC_JUMP_LABEL(.L_8040F1F8, 0x8040F1F8) //this is a jump label
/*8040F1F8 0040BFF8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_8040F1FC, 0x8040F1FC) //this is a jump label
/*8040F1FC 0040BFFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8040F200 0040C000*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8040F204 0040C004*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8040F208 0040C008*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8040F20C 0040C00C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040F210 0040C010*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8040F214 0040C014*/ PPC::Runtime::ASM::blr();
}