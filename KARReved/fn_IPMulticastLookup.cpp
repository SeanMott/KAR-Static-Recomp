//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_IPMulticastLookup(PPC::Runtime::GCContext* context)
{
/*804820D4 0047EED4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*804820D8 0047EED8*/ PPC::Runtime::ASM::lis(context->r5, lbl_805C2A18 @ Get_MemoryOffset_HighBit);
/*804820DC 0047EEDC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_805C2A18 @ Get_MemoryOffset_LowBit);
/*804820E0 0047EEE0*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 24, 27);
/*804820E4 0047EEE4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xe0);
/*804820E8 0047EEE8*/ PPC::Runtime::ASM::beq(.L_804820F4);
/*804820EC 0047EEEC*/ PPC::Runtime::ASM::li(context->r3, -0xc);
/*804820F0 0047EEF0*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_804820F4, 0x804820F4) //this is a jump label
/*804820F4 0047EEF4*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*804820F8 0047EEF8*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805E62C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*804820FC 0047EEFC*/ PPC::Runtime::ASM::cmplw(context->r7, context->r0);
/*80482100 0047EF00*/ PPC::Runtime::ASM::bne(.L_8048210C);
/*80482104 0047EF04*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*80482108 0047EF08*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_8048210C, 0x8048210C) //this is a jump label
/*8048210C 0047EF0C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, 0xe0);
/*80482110 0047EF10*/ PPC::Runtime::ASM::addi(context->r8, context->r5, 0x0);
/*80482114 0047EF14*/ PPC::Runtime::ASM::addi(context->r3, context->r6, 0x37);
/*80482118 0047EF18*/ PPC::Runtime::ASM::subf(context->r3, context->r8, context->r3);
/*8048211C 0047EF1C*/ PPC::Runtime::ASM::li(context->r0, 0x38);
/*80482120 0047EF20*/ PPC::Runtime::ASM::divwu(context->r3, context->r3, context->r0);
/*80482124 0047EF24*/ PPC::Runtime::ASM::cmplw(context->r8, context->r6);
/*80482128 0047EF28*/ PPC::Runtime::ASM::mtctr(context->r3);
/*8048212C 0047EF2C*/ PPC::Runtime::ASM::bge(.L_80482178);
RUNTIME_PPC_JUMP_LABEL(.L_80482130, 0x80482130) //this is a jump label
/*80482130 0047EF30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*80482134 0047EF34*/ PPC::Runtime::ASM::cmplw(context->r0, context->r7);
/*80482138 0047EF38*/ PPC::Runtime::ASM::bne(.L_80482170);
/*8048213C 0047EF3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r8));
/*80482140 0047EF40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80482144 0047EF44*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*80482148 0047EF48*/ PPC::Runtime::ASM::bne(.L_80482170);
/*8048214C 0047EF4C*/ PPC::Runtime::ASM::lis(context->r3, 0x9249);
/*80482150 0047EF50*/ PPC::Runtime::ASM::subf(context->r0, context->r5, context->r8);
/*80482154 0047EF54*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x2493);
/* 80482158 0047EF58  7C 63 00 96 */ mulhw context->r3 , context->r3 , context->r0
/*8048215C 0047EF5C*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*80482160 0047EF60*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 5);
/*80482164 0047EF64*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*80482168 0047EF68*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r3);
/*8048216C 0047EF6C*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_80482170, 0x80482170) //this is a jump label
/*80482170 0047EF70*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x38);
/*80482174 0047EF74*/ PPC::Runtime::ASM::bdnz(.L_80482130);
RUNTIME_PPC_JUMP_LABEL(.L_80482178, 0x80482178) //this is a jump label
/*80482178 0047EF78*/ PPC::Runtime::ASM::li(context->r3, -0x4);
/*8048217C 0047EF7C*/ PPC::Runtime::ASM::blr();
}