//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E0774.hpp"
#include "fn_801E07FC.hpp"
#include "fn_801E2F6C.hpp"
#include "fn_801CBA4C.hpp"



void fn_801E2ED0(PPC::Runtime::GCContext* context)
{
/*801E2ED0 001DFCD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E2ED4 001DFCD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E2ED8 001DFCD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E2EDC 001DFCDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E2EE0 001DFCE0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E2EE4 001DFCE4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3b, context->r3));
/* 801E2EE8 001DFCE8  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801E2EEC 001DFCEC*/ PPC::Runtime::ASM::beq(.L_801E2EF8);
/*801E2EF0 001DFCF0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801E2EF4 001DFCF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801E2EF8, 0x801E2EF8) //this is a jump label
/*801E2EF8 001DFCF8*/ PPC::Runtime::ASM::bl(fn_801E0774);
/*801E2EFC 001DFCFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E2F00 001DFD00*/ PPC::Runtime::ASM::bl(fn_801E07FC);
/*801E2F04 001DFD04*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb2c, context->r31));
/*801E2F08 001DFD08*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1D60 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E2F0C 001DFD0C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801E2F10 001DFD10*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801E2F14 001DFD14*/ PPC::Runtime::ASM::bne(.L_801E2F38);
/*801E2F18 001DFD18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3b, context->r31));
/* 801E2F1C 001DFD1C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801E2F20 001DFD20*/ PPC::Runtime::ASM::beq(.L_801E2F30);
/*801E2F24 001DFD24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E2F28 001DFD28*/ PPC::Runtime::ASM::bl(fn_801E2F6C);
/*801E2F2C 001DFD2C*/ PPC::Runtime::ASM::b(.L_801E2F38);
RUNTIME_PPC_JUMP_LABEL(.L_801E2F30, 0x801E2F30) //this is a jump label
/*801E2F30 001DFD30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E2F34 001DFD34*/ PPC::Runtime::ASM::bl(fn_801CBA4C);
RUNTIME_PPC_JUMP_LABEL(.L_801E2F38, 0x801E2F38) //this is a jump label
/*801E2F38 001DFD38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E2F3C 001DFD3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E2F40 001DFD40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E2F44 001DFD44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E2F48 001DFD48*/ PPC::Runtime::ASM::blr();
}