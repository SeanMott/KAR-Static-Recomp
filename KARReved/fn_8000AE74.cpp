//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000AE74(PPC::Runtime::GCContext* context)
{
/*8000AE74 00007C74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000AE78 00007C78*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000AE7C 00007C7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AE80 00007C80*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000AE84 00007C84*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5ad, context->r3));
/*8000AE88 00007C88*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_128 @ Get_MemoryOffset_HighBit);
/*8000AE8C 00007C8C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_128 @ Get_MemoryOffset_LowBit);
/*8000AE90 00007C90*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000AE94 00007C94*/ PPC::Runtime::ASM::lbzx(context->r3, context->r3, context->r0);
/*8000AE98 00007C98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AE9C 00007C9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AEA0 00007CA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000AEA4 00007CA4*/ PPC::Runtime::ASM::blr();
}