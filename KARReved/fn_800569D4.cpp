//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80056728.hpp"



void fn_800569D4(PPC::Runtime::GCContext* context)
{
/*800569D4 000537D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800569D8 000537D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800569DC 000537DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800569E0 000537E0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800569E4 000537E4*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800569E8 000537E8*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800569EC 000537EC*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*800569F0 000537F0*/ PPC::Runtime::ASM::mr(context->r27, context->r5);
/*800569F4 000537F4*/ PPC::Runtime::ASM::mr(context->r28, context->r6);
/*800569F8 000537F8*/ PPC::Runtime::ASM::clrlwi(context->r31, context->r4, 24);
/*800569FC 000537FC*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80056A00 00053800*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80056A04 00053804*/ PPC::Runtime::ASM::b(.L_80056A44);
RUNTIME_PPC_JUMP_LABEL(.L_80056A08, 0x80056A08) //this is a jump label
/*80056A08 00053808*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80056A0C 0005380C*/ PPC::Runtime::ASM::beq(.L_80056A1C);
/*80056A10 00053810*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r25));
/* 80056A14 00053814  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*80056A18 00053818*/ PPC::Runtime::ASM::bne(.L_80056A40);
RUNTIME_PPC_JUMP_LABEL(.L_80056A1C, 0x80056A1C) //this is a jump label
/*80056A1C 0005381C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r25));
/*80056A20 00053820*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*80056A24 00053824*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*80056A28 00053828*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*80056A2C 0005382C*/ PPC::Runtime::ASM::bl(fn_80056728);
/*80056A30 00053830*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80056A34 00053834*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80056A38 00053838*/ PPC::Runtime::ASM::add(context->r30, context->r30, context->r3);
/*80056A3C 0005383C*/ PPC::Runtime::ASM::add(context->r29, context->r29, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80056A40, 0x80056A40) //this is a jump label
/*80056A40 00053840*/ PPC::Runtime::ASM::lwz(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
RUNTIME_PPC_JUMP_LABEL(.L_80056A44, 0x80056A44) //this is a jump label
/*80056A44 00053844*/ PPC::Runtime::ASM::cmplwi(context->r25, 0x0);
/*80056A48 00053848*/ PPC::Runtime::ASM::bne(.L_80056A08);
/*80056A4C 0005384C*/ PPC::Runtime::ASM::cmplwi(context->r27, 0x0);
/*80056A50 00053850*/ PPC::Runtime::ASM::beq(.L_80056A58);
/*80056A54 00053854*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_80056A58, 0x80056A58) //this is a jump label
/*80056A58 00053858*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*80056A5C 0005385C*/ PPC::Runtime::ASM::beq(.L_80056A64);
/*80056A60 00053860*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_80056A64, 0x80056A64) //this is a jump label
/*80056A64 00053864*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80056A68 00053868*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*80056A6C 0005386C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80056A70 00053870*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80056A74 00053874*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80056A78 00053878*/ PPC::Runtime::ASM::blr();
}