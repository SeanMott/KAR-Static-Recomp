//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801971D8.hpp"
#include "fn_801970F0.hpp"
#include "fn_801971D8.hpp"



void fn_801BDF18(PPC::Runtime::GCContext* context)
{
/*801BDF18 001BAD18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BDF1C 001BAD1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BDF20 001BAD20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BDF24 001BAD24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BDF28 001BAD28*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801BDF2C 001BAD2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BDF30 001BAD30*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801BDF34 001BAD34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f4, context->r3));
/*801BDF38 001BAD38*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801BDF3C 001BAD3C*/ PPC::Runtime::ASM::beq(.L_801BDF74);
/*801BDF40 001BAD40*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*801BDF44 001BAD44*/ PPC::Runtime::ASM::beq(.L_801BDF68);
/*801BDF48 001BAD48*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x40c);
/*801BDF4C 001BAD4C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x2b4);
/*801BDF50 001BAD50*/ PPC::Runtime::ASM::bl(fn_801971D8);
/*801BDF54 001BAD54*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801BDF58 001BAD58*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x900);
/*801BDF5C 001BAD5C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8f0);
/*801BDF60 001BAD60*/ PPC::Runtime::ASM::bl(fn_801970F0);
/*801BDF64 001BAD64*/ PPC::Runtime::ASM::b(.L_801BDF74);
RUNTIME_PPC_JUMP_LABEL(.L_801BDF68, 0x801BDF68) //this is a jump label
/*801BDF68 001BAD68*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x900);
/*801BDF6C 001BAD6C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8f0);
/*801BDF70 001BAD70*/ PPC::Runtime::ASM::bl(fn_801971D8);
RUNTIME_PPC_JUMP_LABEL(.L_801BDF74, 0x801BDF74) //this is a jump label
/*801BDF74 001BAD74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BDF78 001BAD78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BDF7C 001BAD7C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BDF80 001BAD80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BDF84 001BAD84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BDF88 001BAD88*/ PPC::Runtime::ASM::blr();
}