//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDefaultExceptionHandler.hpp"
#include "OSDefaultExceptionHandler.hpp"



void OSExceptionVector(PPC::Runtime::GCContext* context)
{
/*803D2CAC 003CFAAC*/ PPC::Runtime::ASM::mtsprg(0, context->r4);
/*803D2CB0 003CFAB0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r0));
/*803D2CB4 003CFAB4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*803D2CB8 003CFAB8*/ PPC::Runtime::ASM::mfsprg(context->r3, 0);
/*803D2CBC 003CFABC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*803D2CC0 003CFAC0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*803D2CC4 003CFAC4*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a2, context->r4));
/*803D2CC8 003CFAC8*/ PPC::Runtime::ASM::ori(context->r3, context->r3, 0x2);
/*803D2CCC 003CFACC*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a2, context->r4));
/*803D2CD0 003CFAD0*/ PPC::Runtime::ASM::mfcr(context->r3);
/*803D2CD4 003CFAD4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r4));
/*803D2CD8 003CFAD8*/ PPC::Runtime::ASM::mflr(context->r3);
/*803D2CDC 003CFADC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r4));
/* 803D2CE0 003CFAE0  7C 69 02 A6 */ mfctr context->r3
/*803D2CE4 003CFAE4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/* 803D2CE8 003CFAE8  7C 61 02 A6 */ mfxer context->r3
/*803D2CEC 003CFAEC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r4));
/*803D2CF0 003CFAF0*/ PPC::Runtime::ASM::mfsrr0(context->r3);
/*803D2CF4 003CFAF4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x198, context->r4));
/*803D2CF8 003CFAF8*/ PPC::Runtime::ASM::mfsrr1(context->r3);
/*803D2CFC 003CFAFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r4));
/*803D2D00 003CFB00*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
# .text: //this is a jump label 0x234F4 | 0x803D2D04 | size : 0x0
.sym __DBVECTOR , global
/*803D2D04 003CFB04*/ PPC::Runtime::ASM::nop();
/*803D2D08 003CFB08*/ PPC::Runtime::ASM::mfmsr(context->r3);
/*803D2D0C 003CFB0C*/ PPC::Runtime::ASM::ori(context->r3, context->r3, 0x30);
/*803D2D10 003CFB10*/ PPC::Runtime::ASM::mtsrr1(context->r3);
# .text: //this is a jump label 0x23504 | 0x803D2D14 | size : 0x0
.sym __OSEVSetNumber , global
/*803D2D14 003CFB14*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D2D18 003CFB18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r0));
/*803D2D1C 003CFB1C*/ PPC::Runtime::ASM::rlwinm.(context->r5, context->r5, 0, 30, 30);
/*803D2D20 003CFB20*/ PPC::Runtime::ASM::bne(.L_803D2D34);
/*803D2D24 003CFB24*/ PPC::Runtime::ASM::lis(context->r5, OSDefaultExceptionHandler @ Get_MemoryOffset_HighBit);
/*803D2D28 003CFB28*/ PPC::Runtime::ASM::addi(context->r5, context->r5, OSDefaultExceptionHandler @ Get_MemoryOffset_LowBit);
/*803D2D2C 003CFB2C*/ PPC::Runtime::ASM::mtsrr0(context->r5);
/*803D2D30 003CFB30*/ PPC::Runtime::ASM::rfi();
RUNTIME_PPC_JUMP_LABEL(.L_803D2D34, 0x803D2D34) //this is a jump label
/*803D2D34 003CFB34*/ PPC::Runtime::ASM::clrlslwi(context->r5, context->r3, 24, 2);
/*803D2D38 003CFB38*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3000, context->r5));
/*803D2D3C 003CFB3C*/ PPC::Runtime::ASM::mtsrr0(context->r5);
/*803D2D40 003CFB40*/ PPC::Runtime::ASM::rfi();
# .text: //this is a jump label 0x23534 | 0x803D2D44 | size : 0x0
.sym __OSEVEnd , global
/*803D2D44 003CFB44*/ PPC::Runtime::ASM::nop();
}