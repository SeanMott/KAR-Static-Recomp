//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_80112058.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_80125780(PPC::Runtime::GCContext* context)
{
/*80125780 00122580*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80125784 00122584*/ PPC::Runtime::ASM::mflr(context->r0);
/*80125788 00122588*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012578C 0012258C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80125790 00122590*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80125794 00122594*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80125798 00122598*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012579C 0012259C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xb34);
/*801257A0 001225A0*/ PPC::Runtime::ASM::bl(fn_80112058);
/*801257A4 001225A4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801257A8 001225A8*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*801257AC 001225AC*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*801257B0 001225B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801257B4 001225B4*/ PPC::Runtime::ASM::beq(.L_801257C8);
/*801257B8 001225B8*/ PPC::Runtime::ASM::bge(.L_801257E8);
/*801257BC 001225BC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801257C0 001225C0*/ PPC::Runtime::ASM::bge(.L_80125804);
/*801257C4 001225C4*/ PPC::Runtime::ASM::b(.L_801257E8);
RUNTIME_PPC_JUMP_LABEL(.L_801257C8, 0x801257C8) //this is a jump label
/*801257C8 001225C8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1088 @ Get_MemoryOffset_HighBit);
/*801257CC 001225CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801257D0 001225D0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1088 @ Get_MemoryOffset_LowBit);
/*801257D4 001225D4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801257D8 001225D8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801257DC 001225DC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801257E0 001225E0*/ PPC::Runtime::ASM::bl(fn_80059520);
/*801257E4 001225E4*/ PPC::Runtime::ASM::b(.L_80125804);
RUNTIME_PPC_JUMP_LABEL(.L_801257E8, 0x801257E8) //this is a jump label
/*801257E8 001225E8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1089 @ Get_MemoryOffset_HighBit);
/*801257EC 001225EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801257F0 001225F0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1089 @ Get_MemoryOffset_LowBit);
/*801257F4 001225F4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801257F8 001225F8*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x4);
/*801257FC 001225FC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80125800 00122600*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_80125804, 0x80125804) //this is a jump label
/*80125804 00122604*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80125808 00122608*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8012580C 0012260C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80125810 00122610*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80125814 00122614*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80125818 00122618*/ PPC::Runtime::ASM::blr();
}