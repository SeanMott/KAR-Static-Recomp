//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_DBGEXIImm.hpp"
#include "fn_DBGEXIImm.hpp"



void fn_DBGRead(PPC::Runtime::GCContext* context)
{
/*803F3FB0 003F0DB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F3FB4 003F0DB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803F3FB8 003F0DB8*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r3, 8, 7, 21);
/*803F3FBC 003F0DBC*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x2000);
/*803F3FC0 003F0DC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*803F3FC4 003F0DC4*/ PPC::Runtime::ASM::stmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803F3FC8 003F0DC8*/ PPC::Runtime::ASM::lis(context->r29, 0xcc00);
/*803F3FCC 003F0DCC*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*803F3FD0 003F0DD0*/ PPC::Runtime::ASM::addi(context->r26, context->r4, 0x0);
/*803F3FD4 003F0DD4*/ PPC::Runtime::ASM::addi(context->r31, context->r29, 0x6800);
/*803F3FD8 003F0DD8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x24);
/*803F3FDC 003F0DDC*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803F3FE0 003F0DE0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803F3FE4 003F0DE4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6828, context->r29));
/*803F3FE8 003F0DE8*/ PPC::Runtime::ASM::andi.(context->r6, context->r6, 0x405);
/*803F3FEC 003F0DEC*/ PPC::Runtime::ASM::ori(context->r6, context->r6, 0xc0);
/*803F3FF0 003F0DF0*/ PPC::Runtime::ASM::stwu(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*803F3FF4 003F0DF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803F3FF8 003F0DF8*/ PPC::Runtime::ASM::bl(fn_DBGEXIImm);
/*803F3FFC 003F0DFC*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803F4000 003F0E00*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803F4004 003F0E04*/ PPC::Runtime::ASM::mr(context->r27, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803F4008, 0x803F4008) //this is a jump label
/*803F4008 003F0E08*/ PPC::Runtime::ASM::addi(context->r28, context->r29, 0x6800);
/*803F400C 003F0E0C*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r28));
/* 803F4010 003F0E10  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803F4014 003F0E14*/ PPC::Runtime::ASM::bne(.L_803F4008);
/*803F4018 003F0E18*/ PPC::Runtime::ASM::b(.L_803F405C);
RUNTIME_PPC_JUMP_LABEL(.L_803F401C, 0x803F401C) //this is a jump label
/*803F401C 003F0E1C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*803F4020 003F0E20*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803F4024 003F0E24*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803F4028 003F0E28*/ PPC::Runtime::ASM::bl(fn_DBGEXIImm);
/*803F402C 003F0E2C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803F4030 003F0E30*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803F4034 003F0E34*/ PPC::Runtime::ASM::or(context->r27, context->r27, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803F4038, 0x803F4038) //this is a jump label
/*803F4038 003F0E38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/* 803F403C 003F0E3C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803F4040 003F0E40*/ PPC::Runtime::ASM::bne(.L_803F4038);
/*803F4044 003F0E44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/* 803F4048 003F0E48  37 DE FF FC */ subic. context->r30 , context->r30 , 0x4
/*803F404C 003F0E4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*803F4050 003F0E50*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x4);
/*803F4054 003F0E54*/ PPC::Runtime::ASM::bge(.L_803F405C);
/*803F4058 003F0E58*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803F405C, 0x803F405C) //this is a jump label
/*803F405C 003F0E5C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*803F4060 003F0E60*/ PPC::Runtime::ASM::bne(.L_803F401C);
/*803F4064 003F0E64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803F4068 003F0E68*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r27);
/*803F406C 003F0E6C*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*803F4070 003F0E70*/ PPC::Runtime::ASM::andi.(context->r0, context->r4, 0x405);
/*803F4074 003F0E74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803F4078 003F0E78*/ PPC::Runtime::ASM::lmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803F407C 003F0E7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803F4080 003F0E80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*803F4084 003F0E84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F4088 003F0E88*/ PPC::Runtime::ASM::blr();
}