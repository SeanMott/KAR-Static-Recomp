//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80189F54.hpp"
#include "fn_80189F54.hpp"



void fn_8018B6C8(PPC::Runtime::GCContext* context)
{
/*8018B6C8 001884C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8018B6CC 001884CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8018B6D0 001884D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018B6D4 001884D4*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*8018B6D8 001884D8*/ PPC::Runtime::ASM::addi(context->r3, context->r6, 0x4);
/*8018B6DC 001884DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018B6E0 001884E0*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8018B6E4 001884E4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8018B6E8 001884E8*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8018B6EC 001884EC*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*8018B6F0 001884F0*/ PPC::Runtime::ASM::bl(fn_80189F54);
/*8018B6F4 001884F4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8018B6F8 001884F8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4);
/*8018B6FC 001884FC*/ PPC::Runtime::ASM::bl(fn_80189F54);
/*8018B700 00188500*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018B704 00188504*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018B708 00188508*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8018B70C 0018850C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8018B710 00188510*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8018B714 00188514*/ PPC::Runtime::ASM::blr();
}