//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8046F254.hpp"
#include "fn_8046F254.hpp"
#include "fn_UDPReceiveExAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_UDPReceiveEx(PPC::Runtime::GCContext* context)
{
/*8047013C 0046CF3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80470140 0046CF40*/ PPC::Runtime::ASM::lis(context->r9, fn_8046F254 @ Get_MemoryOffset_HighBit);
/*80470144 0046CF44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80470148 0046CF48*/ PPC::Runtime::ASM::addi(context->r9, context->r9, fn_8046F254 @ Get_MemoryOffset_LowBit);
/*8047014C 0046CF4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80470150 0046CF50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80470154 0046CF54*/ PPC::Runtime::ASM::addi(context->r10, context->r1, 0x20);
/*80470158 0046CF58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8047015C 0046CF5C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*80470160 0046CF60*/ PPC::Runtime::ASM::bl(fn_UDPReceiveExAsync);
/*80470164 0046CF64*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80470168 0046CF68*/ PPC::Runtime::ASM::bge(.L_80470170);
/*8047016C 0046CF6C*/ PPC::Runtime::ASM::b(.L_8047019C);
RUNTIME_PPC_JUMP_LABEL(.L_80470170, 0x80470170) //this is a jump label
/*80470170 0046CF70*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80470174 0046CF74*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80470178 0046CF78*/ PPC::Runtime::ASM::b(.L_80470184);
RUNTIME_PPC_JUMP_LABEL(.L_8047017C, 0x8047017C) //this is a jump label
/*8047017C 0046CF7C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*80470180 0046CF80*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_80470184, 0x80470184) //this is a jump label
/*80470184 0046CF84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80470188 0046CF88*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*8047018C 0046CF8C*/ PPC::Runtime::ASM::beq(.L_8047017C);
/*80470190 0046CF90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80470194 0046CF94*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80470198 0046CF98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_8047019C, 0x8047019C) //this is a jump label
/*8047019C 0046CF9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*804701A0 0046CFA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*804701A4 0046CFA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*804701A8 0046CFA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*804701AC 0046CFAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804701B0 0046CFB0*/ PPC::Runtime::ASM::blr();
}