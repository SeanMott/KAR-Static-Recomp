//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_800FB44C(PPC::Runtime::GCContext* context)
{
/*800FB44C 000F824C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FB450 000F8250*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FB454 000F8254*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8D4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FB458 000F8258*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800FB45C 000F825C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FB460 000F8260*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*800FB464 000F8264*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*800FB468 000F8268*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FB46C 000F826C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FB470 000F8270*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FB474 000F8274*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800FB478 000F8278*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FB47C 000F827C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800FB480 000F8280*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FB484 000F8284*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FB488 000F8288*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FB48C 000F828C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FB490 000F8290*/ PPC::Runtime::ASM::blr();
}