//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80130E84(PPC::Runtime::GCContext* context)
{
/*80130E84 0012DC84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80130E88 0012DC88*/ PPC::Runtime::ASM::mflr(context->r0);
/*80130E8C 0012DC8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80130E90 0012DC90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80130E94 0012DC94*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80130E98 0012DC98*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130E9C 0012DC9C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80130EA0 0012DCA0*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xc38);
/*80130EA4 0012DCA4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80130EA8 0012DCA8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80130EAC, 0x80130EAC) //this is a jump label
/*80130EAC 0012DCAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80130EB0 0012DCB0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80130EB4 0012DCB4*/ PPC::Runtime::ASM::beq(.L_80130EC0);
/*80130EB8 0012DCB8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80130EBC 0012DCBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80130EC0, 0x80130EC0) //this is a jump label
/*80130EC0 0012DCC0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80130EC4 0012DCC4*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80130EC8 0012DCC8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80130ECC 0012DCCC*/ PPC::Runtime::ASM::blt(.L_80130EAC);
/*80130ED0 0012DCD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80130ED4 0012DCD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80130ED8 0012DCD8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80130EDC 0012DCDC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80130EE0 0012DCE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80130EE4 0012DCE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80130EE8 0012DCE8*/ PPC::Runtime::ASM::blr();
}