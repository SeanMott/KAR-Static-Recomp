//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80261574(PPC::Runtime::GCContext* context)
{
/*80261574 0025E374*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80261578 0025E378*/ PPC::Runtime::ASM::mflr(context->r0);
/*8026157C 0025E37C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80261580 0025E380*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80261584 0025E384*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80261588 0025E388*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8026158C 0025E38C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80261590 0025E390*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80261594 0025E394*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80261598 0025E398*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8026159C 0025E39C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802615A0 0025E3A0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*802615A4 0025E3A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802615A8 0025E3A8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802615AC 0025E3AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*802615B0 0025E3B0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802615B4 0025E3B4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*802615B8 0025E3B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802615BC 0025E3BC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802615C0 0025E3C0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*802615C4 0025E3C4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*802615C8 0025E3C8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*802615CC 0025E3CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802615D0 0025E3D0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2FA4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802615D4 0025E3D4*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802615D8 0025E3D8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802615DC 0025E3DC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2FA0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802615E0 0025E3E0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802615E4 0025E3E4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802615E8 0025E3E8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*802615EC 0025E3EC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802615F0 0025E3F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802615F4 0025E3F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802615F8 0025E3F8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802615FC 0025E3FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80261600 0025E400*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80261604 0025E404*/ PPC::Runtime::ASM::blr();
}