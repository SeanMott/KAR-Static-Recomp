//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800DB1A8(PPC::Runtime::GCContext* context)
{
/*800DB1A8 000D7FA8*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800DB1AC 000D7FAC*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/* 800DB1B0 000D7FB0  4C 81 00 20 */ blelr
/*800DB1B4 000D7FB4*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x8);
/*800DB1B8 000D7FB8*/ PPC::Runtime::ASM::subi(context->r6, context->r4, 0x8);
/*800DB1BC 000D7FBC*/ PPC::Runtime::ASM::ble(.L_800DB208);
/*800DB1C0 000D7FC0*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x7);
/*800DB1C4 000D7FC4*/ PPC::Runtime::ASM::mr(context->r7, context->r3);
/*800DB1C8 000D7FC8*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 3);
/*800DB1CC 000D7FCC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800DB1D0 000D7FD0*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800DB1D4 000D7FD4*/ PPC::Runtime::ASM::cmpwi(context->r6, 0x0);
/*800DB1D8 000D7FD8*/ PPC::Runtime::ASM::ble(.L_800DB208);
RUNTIME_PPC_JUMP_LABEL(.L_800DB1DC, 0x800DB1DC) //this is a jump label
/*800DB1DC 000D7FDC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800DB1E0 000D7FE0*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x8);
/*800DB1E4 000D7FE4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*800DB1E8 000D7FE8*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r7));
/*800DB1EC 000D7FEC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r7));
/*800DB1F0 000D7FF0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r7));
/*800DB1F4 000D7FF4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r7));
/*800DB1F8 000D7FF8*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r7));
/*800DB1FC 000D7FFC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r7));
/*800DB200 000D8000*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x20);
/*800DB204 000D8004*/ PPC::Runtime::ASM::bdnz(.L_800DB1DC);
RUNTIME_PPC_JUMP_LABEL(.L_800DB208, 0x800DB208) //this is a jump label
/*800DB208 000D8008*/ PPC::Runtime::ASM::slwi(context->r5, context->r8, 2);
/*800DB20C 000D800C*/ PPC::Runtime::ASM::subf(context->r0, context->r8, context->r4);
/*800DB210 000D8010*/ PPC::Runtime::ASM::add(context->r5, context->r3, context->r5);
/*800DB214 000D8014*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800DB218 000D8018*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800DB21C 000D801C*/ PPC::Runtime::ASM::cmpw(context->r8, context->r4);
/*800DB220 000D8020*/ PPC::Runtime::ASM::bgelr();
RUNTIME_PPC_JUMP_LABEL(.L_800DB224, 0x800DB224) //this is a jump label
/*800DB224 000D8024*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800DB228 000D8028*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
/*800DB22C 000D802C*/ PPC::Runtime::ASM::bdnz(.L_800DB224);
/*800DB230 000D8030*/ PPC::Runtime::ASM::blr();
}