//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029A80C(PPC::Runtime::GCContext* context)
{
/*8029A80C 0029760C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029A810 00297610*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029A814 00297614*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A818 00297618*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A81C 0029761C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A820 00297620*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029A824 00297624*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029A828 00297628*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029A82C 0029762C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A830 00297630*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A834 00297634*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029A838 00297638*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A83C 0029763C*/ PPC::Runtime::ASM::bctrl();
/*8029A840 00297640*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029A844 00297644*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A848 00297648*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A84C 0029764C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029A850 00297650*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A854 00297654*/ PPC::Runtime::ASM::bctrl();
/*8029A858 00297658*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029A85C 0029765C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029A860 00297660*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*8029A864 00297664*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029A868 00297668*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A86C 0029766C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A870 00297670*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A874 00297674*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029A878 00297678*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029A87C 0029767C*/ PPC::Runtime::ASM::blr();
}