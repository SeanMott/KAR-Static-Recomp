//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_UnlockSram.hpp"
#include "fn_UnlockSram.hpp"



void fn_OSSetSoundMode(PPC::Runtime::GCContext* context)
{
/*803D9610 003D6410*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D9614 003D6414*/ PPC::Runtime::ASM::lis(context->r4, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D9618 003D6418*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D961C 003D641C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803D9620 003D6420*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D9624 003D6424*/ PPC::Runtime::ASM::addi(context->r31, context->r4, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D9628 003D6428*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D962C 003D642C*/ PPC::Runtime::ASM::clrlslwi(context->r30, context->r3, 31, 2);
/*803D9630 003D6430*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D9634 003D6434*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*803D9638 003D6438*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*803D963C 003D643C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D9640 003D6440*/ PPC::Runtime::ASM::beq(.L_803D9650);
/*803D9644 003D6444*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D9648 003D6448*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803D964C 003D644C*/ PPC::Runtime::ASM::b(.L_803D965C);
RUNTIME_PPC_JUMP_LABEL(.L_803D9650, 0x803D9650) //this is a jump label
/*803D9650 003D6450*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803D9654 003D6454*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D9658 003D6458*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D965C, 0x803D965C) //this is a jump label
/*803D965C 003D645C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D9660 003D6460*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r3, 0, 29, 29);
/*803D9664 003D6464*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*803D9668 003D6468*/ PPC::Runtime::ASM::bne(.L_803D967C);
/*803D966C 003D646C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9670 003D6470*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803D9674 003D6474*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
/*803D9678 003D6478*/ PPC::Runtime::ASM::b(.L_803D969C);
RUNTIME_PPC_JUMP_LABEL(.L_803D967C, 0x803D967C) //this is a jump label
/*803D967C 003D647C*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r3, 0, 30, 28);
/*803D9680 003D6480*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D9684 003D6484*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803D9688 003D6488*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803D968C 003D648C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D9690 003D6490*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r30);
/*803D9694 003D6494*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D9698 003D6498*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
RUNTIME_PPC_JUMP_LABEL(.L_803D969C, 0x803D969C) //this is a jump label
/*803D969C 003D649C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D96A0 003D64A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D96A4 003D64A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D96A8 003D64A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803D96AC 003D64AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D96B0 003D64B0*/ PPC::Runtime::ASM::blr();
}