//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D1DEC.hpp"



void fn_801D1D80(PPC::Runtime::GCContext* context)
{
/*801D1D80 001CEB80*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D1D84 001CEB84*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D1D88 001CEB88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D1D8C 001CEB8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D1D90 001CEB90*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801D1D94 001CEB94*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D1D98 001CEB98*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801D1D9C 001CEB9C*/ PPC::Runtime::ASM::b(.L_801D1DB4);
RUNTIME_PPC_JUMP_LABEL(.L_801D1DA0, 0x801D1DA0) //this is a jump label
/*801D1DA0 001CEBA0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D1DA4 001CEBA4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801D1DA8 001CEBA8*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801D1DAC 001CEBAC*/ PPC::Runtime::ASM::bl(fn_801D1DEC);
/*801D1DB0 001CEBB0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801D1DB4, 0x801D1DB4) //this is a jump label
/*801D1DB4 001CEBB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x678, context->r30));
/*801D1DB8 001CEBB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801D1DBC 001CEBBC*/ PPC::Runtime::ASM::cmpw(context->r31, context->r0);
/*801D1DC0 001CEBC0*/ PPC::Runtime::ASM::blt(.L_801D1DA0);
/*801D1DC4 001CEBC4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r30));
/*801D1DC8 001CEBC8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801D1DCC 001CEBCC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 2, 29, 29);
/*801D1DD0 001CEBD0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r30));
/*801D1DD4 001CEBD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D1DD8 001CEBD8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D1DDC 001CEBDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D1DE0 001CEBE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D1DE4 001CEBE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D1DE8 001CEBE8*/ PPC::Runtime::ASM::blr();
}