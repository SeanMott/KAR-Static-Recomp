//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80260C98(PPC::Runtime::GCContext* context)
{
/*80260C98 0025DA98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80260C9C 0025DA9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80260CA0 0025DAA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260CA4 0025DAA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260CA8 0025DAA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260CAC 0025DAAC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80260CB0 0025DAB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80260CB4 0025DAB4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260CB8 0025DAB8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80260CBC 0025DABC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260CC0 0025DAC0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260CC4 0025DAC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80260CC8 0025DAC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260CCC 0025DACC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260CD0 0025DAD0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80260CD4 0025DAD4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260CD8 0025DAD8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80260CDC 0025DADC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260CE0 0025DAE0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260CE4 0025DAE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80260CE8 0025DAE8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260CEC 0025DAEC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80260CF0 0025DAF0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80260CF4 0025DAF4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F8C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260CF8 0025DAF8*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80260CFC 0025DAFC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260D00 0025DB00*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F88 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260D04 0025DB04*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80260D08 0025DB08*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80260D0C 0025DB0C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80260D10 0025DB10*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80260D14 0025DB14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260D18 0025DB18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260D1C 0025DB1C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260D20 0025DB20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80260D24 0025DB24*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80260D28 0025DB28*/ PPC::Runtime::ASM::blr();
}