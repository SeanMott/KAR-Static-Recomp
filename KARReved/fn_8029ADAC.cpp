//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029ADAC(PPC::Runtime::GCContext* context)
{
/*8029ADAC 00297BAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029ADB0 00297BB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029ADB4 00297BB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029ADB8 00297BB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029ADBC 00297BBC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029ADC0 00297BC0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029ADC4 00297BC4*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029ADC8 00297BC8*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029ADCC 00297BCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029ADD0 00297BD0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029ADD4 00297BD4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029ADD8 00297BD8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029ADDC 00297BDC*/ PPC::Runtime::ASM::bctrl();
/*8029ADE0 00297BE0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029ADE4 00297BE4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029ADE8 00297BE8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029ADEC 00297BEC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029ADF0 00297BF0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029ADF4 00297BF4*/ PPC::Runtime::ASM::bctrl();
/*8029ADF8 00297BF8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029ADFC 00297BFC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029AE00 00297C00*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*8029AE04 00297C04*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029AE08 00297C08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AE0C 00297C0C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AE10 00297C10*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AE14 00297C14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029AE18 00297C18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029AE1C 00297C1C*/ PPC::Runtime::ASM::blr();
}