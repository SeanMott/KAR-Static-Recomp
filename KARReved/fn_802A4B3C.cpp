//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802A2B9C.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A4B3C(PPC::Runtime::GCContext* context)
{
/*802A4B3C 002A193C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A4B40 002A1940*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A4B44 002A1944*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A4B48 002A1948*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A4B4C 002A194C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A4B50 002A1950*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A4B54 002A1954  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A4B58 002A1958*/ PPC::Runtime::ASM::beq(.L_802A4D44);
/*802A4B5C 002A195C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C381C @ Get_MemoryOffset_HighBit);
/*802A4B60 002A1960*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x27c0);
/*802A4B64 002A1964*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C381C @ Get_MemoryOffset_LowBit);
/*802A4B68 002A1968*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4B6C 002A196C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A4B70 002A1970*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A4B74 002A1974*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A4B78 002A1978*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A4B7C 002A197C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A4B80 002A1980*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4B84 002A1984*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x26bc);
/*802A4B88 002A1988*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4B8C 002A198C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4B90 002A1990*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x25b8);
/*802A4B94 002A1994*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4B98 002A1998*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4B9C 002A199C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x24b4);
/*802A4BA0 002A19A0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BA4 002A19A4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BA8 002A19A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x23b0);
/*802A4BAC 002A19AC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BB0 002A19B0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BB4 002A19B4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x22ac);
/*802A4BB8 002A19B8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BBC 002A19BC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BC0 002A19C0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x21a8);
/*802A4BC4 002A19C4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BC8 002A19C8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BCC 002A19CC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20a4);
/*802A4BD0 002A19D0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BD4 002A19D4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BD8 002A19D8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1fa0);
/*802A4BDC 002A19DC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BE0 002A19E0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BE4 002A19E4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1e9c);
/*802A4BE8 002A19E8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BEC 002A19EC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BF0 002A19F0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1d98);
/*802A4BF4 002A19F4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4BF8 002A19F8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4BFC 002A19FC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1c94);
/*802A4C00 002A1A00*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C04 002A1A04*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C08 002A1A08*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1b90);
/*802A4C0C 002A1A0C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C10 002A1A10*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C14 002A1A14*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1a8c);
/*802A4C18 002A1A18*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C1C 002A1A1C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C20 002A1A20*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1988);
/*802A4C24 002A1A24*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C28 002A1A28*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C2C 002A1A2C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1884);
/*802A4C30 002A1A30*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C34 002A1A34*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C38 002A1A38*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1780);
/*802A4C3C 002A1A3C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C40 002A1A40*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C44 002A1A44*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x167c);
/*802A4C48 002A1A48*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C4C 002A1A4C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C50 002A1A50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x12f0);
/*802A4C54 002A1A54*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C58 002A1A58*/ PPC::Runtime::ASM::bl(fn_802A2B9C);
/*802A4C5C 002A1A5C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x11ec);
/*802A4C60 002A1A60*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C64 002A1A64*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C68 002A1A68*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10e8);
/*802A4C6C 002A1A6C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C70 002A1A70*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C74 002A1A74*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xfe4);
/*802A4C78 002A1A78*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C7C 002A1A7C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C80 002A1A80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xee0);
/*802A4C84 002A1A84*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C88 002A1A88*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C8C 002A1A8C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A4C90 002A1A90*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4C94 002A1A94*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4C98 002A1A98*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A4C9C 002A1A9C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CA0 002A1AA0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CA4 002A1AA4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A4CA8 002A1AA8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CAC 002A1AAC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CB0 002A1AB0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A4CB4 002A1AB4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CB8 002A1AB8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CBC 002A1ABC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A4CC0 002A1AC0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CC4 002A1AC4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CC8 002A1AC8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A4CCC 002A1ACC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CD0 002A1AD0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CD4 002A1AD4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A4CD8 002A1AD8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CDC 002A1ADC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CE0 002A1AE0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A4CE4 002A1AE4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CE8 002A1AE8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CEC 002A1AEC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A4CF0 002A1AF0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4CF4 002A1AF4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4CF8 002A1AF8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A4CFC 002A1AFC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4D00 002A1B00*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4D04 002A1B04*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A4D08 002A1B08*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4D0C 002A1B0C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4D10 002A1B10*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A4D14 002A1B14*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4D18 002A1B18*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4D1C 002A1B1C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A4D20 002A1B20*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A4D24 002A1B24*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A4D28 002A1B28*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A4D2C 002A1B2C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A4D30 002A1B30*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A4D34 002A1B34*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A4D38 002A1B38*/ PPC::Runtime::ASM::ble(.L_802A4D44);
/*802A4D3C 002A1B3C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A4D40 002A1B40*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A4D44, 0x802A4D44) //this is a jump label
/*802A4D44 002A1B44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A4D48 002A1B48*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A4D4C 002A1B4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A4D50 002A1B50*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A4D54 002A1B54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A4D58 002A1B58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A4D5C 002A1B5C*/ PPC::Runtime::ASM::blr();
}