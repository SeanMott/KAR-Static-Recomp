//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C7B2C.hpp"
#include "fn_801C42C4.hpp"



void fn_801C41E4(PPC::Runtime::GCContext* context)
{
/*801C41E4 001C0FE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C41E8 001C0FE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C41EC 001C0FEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C41F0 001C0FF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C41F4 001C0FF4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C41F8 001C0FF8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r3));
/*801C41FC 001C0FFC*/ PPC::Runtime::ASM::bl(fn_801C7B2C);
/*801C4200 001C1000*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C4204 001C1004*/ PPC::Runtime::ASM::bne(.L_801C4210);
/*801C4208 001C1008*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C420C 001C100C*/ PPC::Runtime::ASM::bl(fn_801C42C4);
RUNTIME_PPC_JUMP_LABEL(.L_801C4210, 0x801C4210) //this is a jump label
/*801C4210 001C1010*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4214 001C1014*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4218 001C1018*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C421C 001C101C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C4220 001C1020*/ PPC::Runtime::ASM::blr();
}