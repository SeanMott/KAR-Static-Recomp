//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8014B140(PPC::Runtime::GCContext* context)
{
/*8014B140 00147F40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8014B144 00147F44*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014B148 00147F48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014B14C 00147F4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014B150 00147F50*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8014B154 00147F54*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014B158 00147F58*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014B15C 00147F5C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8014B160, 0x8014B160) //this is a jump label
/*8014B160 00147F60*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014B164 00147F64*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*8014B168 00147F68*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8014B16C 00147F6C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8014B170 00147F70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x398, context->r30));
/*8014B174 00147F74*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8014B178 00147F78*/ PPC::Runtime::ASM::beq(.L_8014B184);
/*8014B17C 00147F7C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8014B180 00147F80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x398, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8014B184, 0x8014B184) //this is a jump label
/*8014B184 00147F84*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8014B188 00147F88*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8014B18C 00147F8C*/ PPC::Runtime::ASM::blt(.L_8014B160);
/*8014B190 00147F90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014B194 00147F94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014B198 00147F98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8014B19C 00147F9C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014B1A0 00147FA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014B1A4 00147FA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8014B1A8 00147FA8*/ PPC::Runtime::ASM::blr();
}