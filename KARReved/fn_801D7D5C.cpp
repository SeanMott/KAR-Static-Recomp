//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___flush_callback_Fv_zdOptionUse3.hpp"
#include "fn_8018A188.hpp"
#include "fn_80189D34.hpp"



void fn_801D7D5C(PPC::Runtime::GCContext* context)
{
/*801D7D5C 001D4B5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D7D60 001D4B60*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D7D64 001D4B64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7D68 001D4B68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7D6C 001D4B6C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7D70 001D4B70*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801D7D74 001D4B74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r3));
/*801D7D78 001D4B78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801D7D7C 001D4B7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r3));
/*801D7D80 001D4B80*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0xc8);
/*801D7D84 001D4B84*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D7D88 001D4B88*/ PPC::Runtime::ASM::beq(.L_801D7DA8);
/*801D7D8C 001D4B8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7D90 001D4B90*/ PPC::Runtime::ASM::bl(fn___flush_callback_Fv_zdOptionUse3);
/*801D7D94 001D4B94*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x310, context->r30));
/*801D7D98 001D4B98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7D9C 001D4B9C*/ PPC::Runtime::ASM::bl(fn_8018A188);
/*801D7DA0 001D4BA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7DA4 001D4BA4*/ PPC::Runtime::ASM::bl(fn_80189D34);
RUNTIME_PPC_JUMP_LABEL(.L_801D7DA8, 0x801D7DA8) //this is a jump label
/*801D7DA8 001D4BA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7DAC 001D4BAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7DB0 001D4BB0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7DB4 001D4BB4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D7DB8 001D4BB8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D7DBC 001D4BBC*/ PPC::Runtime::ASM::blr();
}