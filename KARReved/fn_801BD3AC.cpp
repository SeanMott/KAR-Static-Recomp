//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_AS_SwimTurn/Dash.hpp"
#include "fn_801A2E7C.hpp"



void fn_801BD3AC(PPC::Runtime::GCContext* context)
{
/*801BD3AC 001BA1AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BD3B0 001BA1B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BD3B4 001BA1B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BD3B8 001BA1B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BD3BC 001BA1BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BD3C0 001BA1C0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x298, context->r3));
/*801BD3C4 001BA1C4*/ PPC::Runtime::ASM::bl(fn_AS_SwimTurn/Dash);
/*801BD3C8 001BA1C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BD3CC 001BA1CC*/ PPC::Runtime::ASM::bl(fn_801A2E7C);
/*801BD3D0 001BA1D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9e0, context->r31));
/*801BD3D4 001BA1D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801BD3D8 001BA1D8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 24, 25);
/*801BD3DC 001BA1DC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9e0, context->r31));
/*801BD3E0 001BA1E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BD3E4 001BA1E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BD3E8 001BA1E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BD3EC 001BA1EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BD3F0 001BA1F0*/ PPC::Runtime::ASM::blr();
}