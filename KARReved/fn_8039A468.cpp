//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80391B1C.hpp"
#include "fn_80391C1C.hpp"



void fn_8039A468(PPC::Runtime::GCContext* context)
{
/*8039A468 00397268*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8039A46C 0039726C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8039A470 00397270*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A474 00397274*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A478 00397278*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A47C 0039727C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8039A480 00397280*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8039A484 00397284*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8039A488 00397288*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A48C 0039728C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A490 00397290*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8039A494 00397294*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A498 00397298*/ PPC::Runtime::ASM::bctrl();
/*8039A49C 0039729C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8039A4A0 003972A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8039A4A4 003972A4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8039A4A8 003972A8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8039A4AC 003972AC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8039A4B0 003972B0*/ PPC::Runtime::ASM::bctrl();
/*8039A4B4 003972B4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8039A4B8 003972B8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8039A4BC 003972BC*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*8039A4C0 003972C0*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8039A4C4 003972C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8039A4C8 003972C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8039A4CC 003972CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8039A4D0 003972D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8039A4D4 003972D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8039A4D8 003972D8*/ PPC::Runtime::ASM::blr();
}