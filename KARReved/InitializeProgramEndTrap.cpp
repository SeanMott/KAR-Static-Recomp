//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "PPCHalt.hpp"
#include "PPCHalt.hpp"
#include "fn_TRK_memcpy.hpp"
#include "ICInvalidateRange.hpp"
#include "DCFlushRange.hpp"



void InitializeProgramEndTrap(PPC::Runtime::GCContext* context)
{
/*803C22A0 003BF0A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803C22A4 003BF0A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C22A8 003BF0A8*/ PPC::Runtime::ASM::lis(context->r4, PPCHalt @ Get_MemoryOffset_HighBit);
/*803C22AC 003BF0AC*/ PPC::Runtime::ASM::lis(context->r3, EndofProgramInstruction$162_8048C180 @ Get_MemoryOffset_HighBit);
/*803C22B0 003BF0B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C22B4 003BF0B4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803C22B8 003BF0B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C22BC 003BF0BC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, PPCHalt @ Get_MemoryOffset_LowBit);
/*803C22C0 003BF0C0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, EndofProgramInstruction$162_8048C180 @ Get_MemoryOffset_LowBit);
/*803C22C4 003BF0C4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4);
/*803C22C8 003BF0C8*/ PPC::Runtime::ASM::bl(fn_TRK_memcpy);
/*803C22CC 003BF0CC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4);
/*803C22D0 003BF0D0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803C22D4 003BF0D4*/ PPC::Runtime::ASM::bl(ICInvalidateRange);
/*803C22D8 003BF0D8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4);
/*803C22DC 003BF0DC*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803C22E0 003BF0E0*/ PPC::Runtime::ASM::bl(DCFlushRange);
/*803C22E4 003BF0E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C22E8 003BF0E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C22EC 003BF0EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C22F0 003BF0F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803C22F4 003BF0F4*/ PPC::Runtime::ASM::blr();
}