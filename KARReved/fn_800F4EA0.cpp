//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018C3B4.hpp"
#include "fn_800F9164.hpp"



void fn_800F4EA0(PPC::Runtime::GCContext* context)
{
/*800F4EA0 000F1CA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F4EA4 000F1CA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F4EA8 000F1CA8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF7E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4EAC 000F1CAC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F4EB0 000F1CB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F4EB4 000F1CB4*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*800F4EB8 000F1CB8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF7E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F4EBC 000F1CBC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800F4EC0 000F1CC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4EC4 000F1CC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F4EC8 000F1CC8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F4ECC 000F1CCC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4ED0 000F1CD0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*800F4ED4 000F1CD4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12c, context->r31));
/*800F4ED8 000F1CD8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r31));
/*800F4EDC 000F1CDC*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r31));
/*800F4EE0 000F1CE0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r31));
/*800F4EE4 000F1CE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*800F4EE8 000F1CE8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r31));
/*800F4EEC 000F1CEC*/ PPC::Runtime::ASM::bl(fn_8018C3B4);
/*800F4EF0 000F1CF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F4EF4 000F1CF4*/ PPC::Runtime::ASM::bl(fn_800F9164);
/*800F4EF8 000F1CF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F4EFC 000F1CFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F4F00 000F1D00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F4F04 000F1D04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F4F08 000F1D08*/ PPC::Runtime::ASM::blr();
}