//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138C90.hpp"



void fn_8014CDBC(PPC::Runtime::GCContext* context)
{
/*8014CDBC 00149BBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8014CDC0 00149BC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014CDC4 00149BC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014CDC8 00149BC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014CDCC 00149BCC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8014CDD0 00149BD0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014CDD4 00149BD4*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8014CDD8 00149BD8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8014CDDC 00149BDC*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8014CDE0 00149BE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x418, context->r3));
/*8014CDE4 00149BE4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8014CDE8 00149BE8*/ PPC::Runtime::ASM::beq(.L_8014CE94);
/*8014CDEC 00149BEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8014CDF0 00149BF0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8014CDF4 00149BF4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E05F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014CDF8 00149BF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8014CDFC 00149BFC*/ PPC::Runtime::ASM::bl(fn_80138C90);
/*8014CE00 00149C00*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E05F4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014CE04 00149C04*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8014CE08 00149C08*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8014CE0C 00149C0C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014CE10 00149C10*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8014CE14 00149C14*/ PPC::Runtime::ASM::bne(.L_8014CE28);
/*8014CE18 00149C18*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6708 @ Get_MemoryOffset_SDA21);
/*8014CE1C 00149C1C*/ PPC::Runtime::ASM::li(context->r4, 0x316);
/*8014CE20 00149C20*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6710 @ Get_MemoryOffset_SDA21);
/*8014CE24 00149C24*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8014CE28, 0x8014CE28) //this is a jump label
/*8014CE28 00149C28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8014CE2C 00149C2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014CE30 00149C30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8014CE34 00149C34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8014CE38 00149C38*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8014CE3C 00149C3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*8014CE40 00149C40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8014CE44 00149C44*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8014CE48 00149C48*/ PPC::Runtime::ASM::bne(.L_8014CE94);
/*8014CE4C 00149C4C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8014CE50 00149C50*/ PPC::Runtime::ASM::beq(.L_8014CE94);
/*8014CE54 00149C54*/ PPC::Runtime::ASM::bne(.L_8014CE68);
/*8014CE58 00149C58*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6708 @ Get_MemoryOffset_SDA21);
/*8014CE5C 00149C5C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8014CE60 00149C60*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6710 @ Get_MemoryOffset_SDA21);
/*8014CE64 00149C64*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8014CE68, 0x8014CE68) //this is a jump label
/*8014CE68 00149C68*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8014CE6C 00149C6C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8014CE70 00149C70*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8014CE74 00149C74*/ PPC::Runtime::ASM::bne(.L_8014CE84);
/*8014CE78 00149C78*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8014CE7C 00149C7C*/ PPC::Runtime::ASM::beq(.L_8014CE84);
/*8014CE80 00149C80*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8014CE84, 0x8014CE84) //this is a jump label
/*8014CE84 00149C84*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8014CE88 00149C88*/ PPC::Runtime::ASM::bne(.L_8014CE94);
/*8014CE8C 00149C8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8014CE90 00149C90*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8014CE94, 0x8014CE94) //this is a jump label
/*8014CE94 00149C94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8014CE98 00149C98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014CE9C 00149C9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014CEA0 00149CA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8014CEA4 00149CA4*/ PPC::Runtime::ASM::blr();
}