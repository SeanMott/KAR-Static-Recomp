//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80064C18.hpp"
#include "fn_80062ECC.hpp"
#include "fn_801DD17C.hpp"
#include "fn_801D5CA0.hpp"



void fn_801CC480(PPC::Runtime::GCContext* context)
{
/*801CC480 001C9280*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801CC484 001C9284*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CC488 001C9288*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CC48C 001C928C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801CC490 001C9290*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801CC494 001C9294*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CC498 001C9298*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801CC49C 001C929C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x324);
/*801CC4A0 001C92A0*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801CC4A4 001C92A4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC4A8 001C92A8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801CC4AC 001C92AC*/ PPC::Runtime::ASM::bge(.L_801CC4B8);
/*801CC4B0 001C92B0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A00 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC4B4 001C92B4*/ PPC::Runtime::ASM::b(.L_801CC4F0);
RUNTIME_PPC_JUMP_LABEL(.L_801CC4B8, 0x801CC4B8) //this is a jump label
/*801CC4B8 001C92B8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x424);
/*801CC4BC 001C92BC*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x324);
/*801CC4C0 001C92C0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801CC4C4 001C92C4*/ PPC::Runtime::ASM::bl(fn_80064C18);
/*801CC4C8 001C92C8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801CC4CC 001C92CC*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801CC4D0 001C92D0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC4D4 001C92D4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801CC4D8 001C92D8*/ PPC::Runtime::ASM::bge(.L_801CC4E4);
/*801CC4DC 001C92DC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A00 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC4E0 001C92E0*/ PPC::Runtime::ASM::b(.L_801CC4F0);
RUNTIME_PPC_JUMP_LABEL(.L_801CC4E4, 0x801CC4E4) //this is a jump label
/*801CC4E4 001C92E4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801CC4E8 001C92E8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x418);
/*801CC4EC 001C92EC*/ PPC::Runtime::ASM::bl(fn_80062ECC);
RUNTIME_PPC_JUMP_LABEL(.L_801CC4F0, 0x801CC4F0) //this is a jump label
/*801CC4F0 001C92F0*/ PPC::Runtime::ASM::lfd(context->f0, STRUCT_DOUBLE_COUNT_1805E1A28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC4F4 001C92F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r31));
/*801CC4F8 001C92F8*/ PPC::Runtime::ASM::fdiv(context->f1, context->f1, context->f0);
/*801CC4FC 001C92FC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4fc, context->r31));
/*801CC500 001C9300*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x500, context->r31));
/* 801CC504 001C9304  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801CC508 001C9308*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
/*801CC50C 001C930C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*801CC510 001C9310*/ PPC::Runtime::ASM::fmadds(context->f31, context->f1, context->f0, context->f2);
/*801CC514 001C9314*/ PPC::Runtime::ASM::bne(.L_801CC5B0);
/*801CC518 001C9318*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r31));
/* 801CC51C 001C931C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801CC520 001C9320*/ PPC::Runtime::ASM::bne(.L_801CC5B0);
/*801CC524 001C9324*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x794, context->r31));
/*801CC528 001C9328*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CC52C 001C932C*/ PPC::Runtime::ASM::bne(.L_801CC5B0);
/*801CC530 001C9330*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CC534 001C9334*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC538 001C9338*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*801CC53C 001C933C*/ PPC::Runtime::ASM::bge(.L_801CC57C);
/*801CC540 001C9340*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f31);
/*801CC544 001C9344*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CC548 001C9348*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CC54C 001C934C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*801CC550 001C9350*/ PPC::Runtime::ASM::ble(.L_801CC57C);
/*801CC554 001C9354*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CC558 001C9358*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801CC55C 001C935C*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801CC560 001C9360*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4b0, context->r31));
/*801CC564 001C9364*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x790, context->r31));
/*801CC568 001C9368*/ PPC::Runtime::ASM::bl(fn_801DD17C);
/*801CC56C 001C936C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801CC570 001C9370*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*801CC574 001C9374*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801CC578 001C9378*/ PPC::Runtime::ASM::bl(fn_801D5CA0);
RUNTIME_PPC_JUMP_LABEL(.L_801CC57C, 0x801CC57C) //this is a jump label
/*801CC57C 001C937C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CC580 001C9380*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801CC584 001C9384*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801CC588 001C9388*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x798, context->r31));
/*801CC58C 001C938C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CC590 001C9390*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 6, 25, 25);
/*801CC594 001C9394*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CC598 001C9398*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CC59C 001C939C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*801CC5A0 001C93A0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CC5A4 001C93A4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CC5A8 001C93A8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 5, 26, 26);
/*801CC5AC 001C93AC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801CC5B0, 0x801CC5B0) //this is a jump label
/*801CC5B0 001C93B0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A00 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC5B4 001C93B4*/ PPC::Runtime::ASM::fcmpu(cr0, context->f31, context->f0);
/*801CC5B8 001C93B8*/ PPC::Runtime::ASM::beq(.L_801CC5DC);
/*801CC5BC 001C93BC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CC5C0 001C93C0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78c, context->r31));
/*801CC5C4 001C93C4*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*801CC5C8 001C93C8*/ PPC::Runtime::ASM::beq(.L_801CC5DC);
/*801CC5CC 001C93CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
/*801CC5D0 001C93D0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CC5D4 001C93D4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801CC5D8 001C93D8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc32, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801CC5DC, 0x801CC5DC) //this is a jump label
/*801CC5DC 001C93DC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801CC5E0 001C93E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CC5E4 001C93E4*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801CC5E8 001C93E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CC5EC 001C93EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CC5F0 001C93F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801CC5F4 001C93F4*/ PPC::Runtime::ASM::blr();
}