//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018CB04.hpp"
#include "fn_800EA084.hpp"
#include "fn_killWhispy.hpp"
#include "fn_801023E8.hpp"



void fn_80101B34(PPC::Runtime::GCContext* context)
{
/*80101B34 000FE934*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80101B38 000FE938*/ PPC::Runtime::ASM::mflr(context->r0);
/*80101B3C 000FE93C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80101B40 000FE940*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80101B44 000FE944*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80101B48 000FE948*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80101B4C 000FE94C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80101B50 000FE950*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80101B54 000FE954*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80101B58 000FE958*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*80101B5C 000FE95C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80101B60 000FE960*/ PPC::Runtime::ASM::bl(fn_8018CB04);
/*80101B64 000FE964*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*80101B68 000FE968*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*80101B6C 000FE96C*/ PPC::Runtime::ASM::ble(.L_80101B7C);
/*80101B70 000FE970*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*80101B74 000FE974*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*80101B78 000FE978*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_80101B7C, 0x80101B7C) //this is a jump label
/*80101B7C 000FE97C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*80101B80 000FE980*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80101B84 000FE984*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF95C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101B88 000FE988*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80101B8C 000FE98C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*80101B90 000FE990*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*80101B94 000FE994*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80101B98 000FE998*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF960 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80101B9C 000FE99C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*80101BA0 000FE9A0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80101BA4 000FE9A4*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*80101BA8 000FE9A8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80101BAC 000FE9AC*/ PPC::Runtime::ASM::bl(fn_801023E8);
/*80101BB0 000FE9B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80101BB4 000FE9B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80101BB8 000FE9B8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80101BBC 000FE9BC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80101BC0 000FE9C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80101BC4 000FE9C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80101BC8 000FE9C8*/ PPC::Runtime::ASM::blr();
}