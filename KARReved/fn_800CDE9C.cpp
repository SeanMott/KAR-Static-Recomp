//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B7E90.hpp"
#include "fn_80062ECC.hpp"
#include "fn_800638F8.hpp"
#include "fn_800B7E90.hpp"
#include "fn_800B60BC.hpp"
#include "fn_800B6040.hpp"



void fn_800CDE9C(PPC::Runtime::GCContext* context)
{
/*800CDE9C 000CAC9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*800CDEA0 000CACA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CDEA4 000CACA4*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF5B4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CDEA8 000CACA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800CDEAC 000CACAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800CDEB0 000CACB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800CDEB4 000CACB4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*800CDEB8 000CACB8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*800CDEBC 000CACBC*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800CDEC0 000CACC0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r31));
/*800CDEC4 000CACC4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f1);
/*800CDEC8 000CACC8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800CDECC 000CACCC*/ PPC::Runtime::ASM::fmadds(context->f0, context->f0, context->f3, context->f1);
/*800CDED0 000CACD0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r31));
/*800CDED4 000CACD4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*800CDED8 000CACD8*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800CDEDC 000CACDC*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CDEE0 000CACE0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r31));
/*800CDEE4 000CACE4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r31));
/*800CDEE8 000CACE8*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800CDEEC 000CACEC*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800CDEF0 000CACF0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r31));
/*800CDEF4 000CACF4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CDEF8 000CACF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*800CDEFC 000CACFC*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f3, context->f0);
/*800CDF00 000CAD00*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*800CDF04 000CAD04*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800CDF08 000CAD08*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r31));
/*800CDF0C 000CAD0C*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f3, context->f0);
/*800CDF10 000CAD10*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r31));
/*800CDF14 000CAD14*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r31));
/*800CDF18 000CAD18*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r31));
/*800CDF1C 000CAD1C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f1);
/*800CDF20 000CAD20*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800CDF24 000CAD24*/ PPC::Runtime::ASM::fmadds(context->f0, context->f0, context->f3, context->f1);
/*800CDF28 000CAD28*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r31));
/*800CDF2C 000CAD2C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r31));
/*800CDF30 000CAD30*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800CDF34 000CAD34*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CDF38 000CAD38*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r31));
/*800CDF3C 000CAD3C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r31));
/*800CDF40 000CAD40*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800CDF44 000CAD44*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800CDF48 000CAD48*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r31));
/*800CDF4C 000CAD4C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CDF50 000CAD50*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r31));
/*800CDF54 000CAD54*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f3, context->f0);
/*800CDF58 000CAD58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r31));
/*800CDF5C 000CAD5C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800CDF60 000CAD60*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r31));
/*800CDF64 000CAD64*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f3, context->f0);
/*800CDF68 000CAD68*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xfc, context->r31));
/*800CDF6C 000CAD6C*/ PPC::Runtime::ASM::lfs(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800CDF70 000CAD70*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r31));
/*800CDF74 000CAD74*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r31));
/*800CDF78 000CAD78*/ PPC::Runtime::ASM::lfs(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r31));
/*800CDF7C 000CAD7C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f6, context->f5);
/*800CDF80 000CAD80*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r31));
/*800CDF84 000CAD84*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x108, context->r31));
/*800CDF88 000CAD88*/ PPC::Runtime::ASM::fmuls(context->f1, context->f7, context->f3);
/*800CDF8C 000CAD8C*/ PPC::Runtime::ASM::fmsubs(context->f0, context->f7, context->f2, context->f0);
/*800CDF90 000CAD90*/ PPC::Runtime::ASM::fmuls(context->f2, context->f4, context->f2);
/*800CDF94 000CAD94*/ PPC::Runtime::ASM::fmsubs(context->f1, context->f4, context->f5, context->f1);
/*800CDF98 000CAD98*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800CDF9C 000CAD9C*/ PPC::Runtime::ASM::fmsubs(context->f0, context->f6, context->f3, context->f2);
/*800CDFA0 000CADA0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CDFA4 000CADA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800CDFA8 000CADA8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CDFAC 000CADAC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CDFB0 000CADB0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CDFB4 000CADB4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CDFB8 000CADB8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800CDFBC 000CADBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800CDFC0 000CADC0*/ PPC::Runtime::ASM::bl(fn_800B7E90);
/*800CDFC4 000CADC4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CDFC8 000CADC8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800CDFCC 000CADCC*/ PPC::Runtime::ASM::bge(.L_800CDFE8);
/*800CDFD0 000CADD0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r31));
/*800CDFD4 000CADD4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800CDFD8 000CADD8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r31));
/*800CDFDC 000CADDC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CDFE0 000CADE0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r31));
/*800CDFE4 000CADE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800CDFE8, 0x800CDFE8) //this is a jump label
/*800CDFE8 000CADE8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x100);
/*800CDFEC 000CADEC*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xd8);
/*800CDFF0 000CADF0*/ PPC::Runtime::ASM::bl(fn_80062ECC);
/*800CDFF4 000CADF4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5B4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CDFF8 000CADF8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x100);
/*800CDFFC 000CADFC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*800CE000 000CAE00*/ PPC::Runtime::ASM::fmuls(context->f1, context->f0, context->f1);
/*800CE004 000CAE04*/ PPC::Runtime::ASM::bl(fn_800638F8);
/*800CE008 000CAE08*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x100);
/*800CE00C 000CAE0C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800CE010 000CAE10*/ PPC::Runtime::ASM::bl(fn_800B7E90);
/*800CE014 000CAE14*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CE018 000CAE18*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800CE01C 000CAE1C*/ PPC::Runtime::ASM::bge(.L_800CE034);
/*800CE020 000CAE20*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF578 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CE024 000CAE24*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF57C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CE028 000CAE28*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x100, context->r31));
/*800CE02C 000CAE2C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800CE030 000CAE30*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x108, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800CE034, 0x800CE034) //this is a jump label
/*800CE034 000CAE34*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r31));
/*800CE038 000CAE38*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xe8);
/*800CE03C 000CAE3C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*800CE040 000CAE40*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r31));
/*800CE044 000CAE44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r31));
/*800CE048 000CAE48*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x14);
/*800CE04C 000CAE4C*/ PPC::Runtime::ASM::bl(fn_800B60BC);
/*800CE050 000CAE50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CE054 000CAE54*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800CE058 000CAE58*/ PPC::Runtime::ASM::bl(fn_800B6040);
/*800CE05C 000CAE5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800CE060 000CAE60*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800CE064 000CAE64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CE068 000CAE68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*800CE06C 000CAE6C*/ PPC::Runtime::ASM::blr();
}