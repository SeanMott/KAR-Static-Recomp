//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8046F254.hpp"
#include "fn_8046F254.hpp"
#include "fn_UDPSendAsync.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_UDPSend2(PPC::Runtime::GCContext* context)
{
/*8046FC98 0046CA98*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046FC9C 0046CA9C*/ PPC::Runtime::ASM::lis(context->r7, fn_8046F254 @ Get_MemoryOffset_HighBit);
/*8046FCA0 0046CAA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046FCA4 0046CAA4*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn_8046F254 @ Get_MemoryOffset_LowBit);
/*8046FCA8 0046CAA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*8046FCAC 0046CAAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046FCB0 0046CAB0*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x18);
/*8046FCB4 0046CAB4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046FCB8 0046CAB8*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*8046FCBC 0046CABC*/ PPC::Runtime::ASM::bl(fn_UDPSendAsync);
/*8046FCC0 0046CAC0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8046FCC4 0046CAC4*/ PPC::Runtime::ASM::bge(.L_8046FCCC);
/*8046FCC8 0046CAC8*/ PPC::Runtime::ASM::b(.L_8046FCF8);
RUNTIME_PPC_JUMP_LABEL(.L_8046FCCC, 0x8046FCCC) //this is a jump label
/*8046FCCC 0046CACC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8046FCD0 0046CAD0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8046FCD4 0046CAD4*/ PPC::Runtime::ASM::b(.L_8046FCE0);
RUNTIME_PPC_JUMP_LABEL(.L_8046FCD8, 0x8046FCD8) //this is a jump label
/*8046FCD8 0046CAD8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x20);
/*8046FCDC 0046CADC*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_8046FCE0, 0x8046FCE0) //this is a jump label
/*8046FCE0 0046CAE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046FCE4 0046CAE4*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*8046FCE8 0046CAE8*/ PPC::Runtime::ASM::beq(.L_8046FCD8);
/*8046FCEC 0046CAEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8046FCF0 0046CAF0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8046FCF4 0046CAF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_8046FCF8, 0x8046FCF8) //this is a jump label
/*8046FCF8 0046CAF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8046FCFC 0046CAFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046FD00 0046CB00*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046FD04 0046CB04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*8046FD08 0046CB08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046FD0C 0046CB0C*/ PPC::Runtime::ASM::blr();
}