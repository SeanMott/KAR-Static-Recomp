//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D3DB4(PPC::Runtime::GCContext* context)
{
/*800D3DB4 000D0BB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800D3DB8 000D0BB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D3DBC 000D0BBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D3DC0 000D0BC0*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D3DC4 000D0BC4*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D3DC8 000D0BC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3DCC 000D0BCC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3DD0 000D0BD0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3DD4 000D0BD4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D3DD8 000D0BD8*/ PPC::Runtime::ASM::lwz(context->r28, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3DDC 000D0BDC*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D3DE0 000D0BE0*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800D3DE4 000D0BE4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D3DE8 000D0BE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800D3DEC 000D0BEC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800D3DF0 000D0BF0*/ PPC::Runtime::ASM::addi(context->r31, context->r5, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D3DF4 000D0BF4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D3DF8 000D0BF8*/ PPC::Runtime::ASM::bne(.L_800D3E0C);
/*800D3DFC 000D0BFC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D3E00 000D0C00*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x66c);
/*800D3E04 000D0C04*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D3E08 000D0C08*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3E0C, 0x800D3E0C) //this is a jump label
/*800D3E0C 000D0C0C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D3E10 000D0C10*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800D3E14 000D0C14*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3E18 000D0C18*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800D3E1C 000D0C1C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D3E20 000D0C20  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D3E24 000D0C24*/ PPC::Runtime::ASM::beq(.L_800D3E54);
/*800D3E28 000D0C28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800D3E2C 000D0C2C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D3E30 000D0C30*/ PPC::Runtime::ASM::beq(.L_800D3E3C);
/*800D3E34 000D0C34*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D3E38 000D0C38*/ PPC::Runtime::ASM::b(.L_800D3E40);
RUNTIME_PPC_JUMP_LABEL(.L_800D3E3C, 0x800D3E3C) //this is a jump label
/*800D3E3C 000D0C3C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3E40, 0x800D3E40) //this is a jump label
/*800D3E40 000D0C40*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800D3E44 000D0C44*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3E48 000D0C48*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D3E4C 000D0C4C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D3E50 000D0C50*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D3E54, 0x800D3E54) //this is a jump label
/*800D3E54 000D0C54*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3E58 000D0C58*/ PPC::Runtime::ASM::bne(.L_800D3E7C);
/*800D3E5C 000D0C5C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D3E60 000D0C60*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x67c);
/*800D3E64 000D0C64*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D3E68 000D0C68*/ PPC::Runtime::ASM::bl(OSReport);
/*800D3E6C 000D0C6C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800D3E70 000D0C70*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x68c);
/*800D3E74 000D0C74*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D3E78 000D0C78*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3E7C, 0x800D3E7C) //this is a jump label
/*800D3E7C 000D0C7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r28));
/*800D3E80 000D0C80*/ PPC::Runtime::ASM::slwi(context->r3, context->r29, 2);
/*800D3E84 000D0C84*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3E88 000D0C88*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800D3E8C 000D0C8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D3E90 000D0C90*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f31);
/*800D3E94 000D0C94*/ PPC::Runtime::ASM::lwzx(context->r3, context->r4, context->r3);
/*800D3E98 000D0C98*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3E9C 000D0C9C*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D3EA0 000D0CA0*/ PPC::Runtime::ASM::bne(.L_800D3EB8);
/*800D3EA4 000D0CA4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF5E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3EA8 000D0CA8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D3EAC 000D0CAC*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*800D3EB0 000D0CB0*/ PPC::Runtime::ASM::bne(.L_800D3EB8);
/*800D3EB4 000D0CB4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800D3EB8, 0x800D3EB8) //this is a jump label
/*800D3EB8 000D0CB8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3EBC 000D0CBC*/ PPC::Runtime::ASM::bne(.L_800D3ED0);
/*800D3EC0 000D0CC0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x6dc);
/*800D3EC4 000D0CC4*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D3EC8 000D0CC8*/ PPC::Runtime::ASM::li(context->r4, 0xbcf);
/*800D3ECC 000D0CCC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3ED0, 0x800D3ED0) //this is a jump label
/*800D3ED0 000D0CD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*800D3ED4 000D0CD4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF5DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3ED8 000D0CD8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3EDC 000D0CDC*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*800D3EE0 000D0CE0*/ PPC::Runtime::ASM::beq(.L_800D3EF4);
/*800D3EE4 000D0CE4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x76c);
/*800D3EE8 000D0CE8*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D3EEC 000D0CEC*/ PPC::Runtime::ASM::li(context->r4, 0xbd0);
/*800D3EF0 000D0CF0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3EF4, 0x800D3EF4) //this is a jump label
/*800D3EF4 000D0CF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r28));
/*800D3EF8 000D0CF8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800D3EFC 000D0CFC*/ PPC::Runtime::ASM::li(context->r4, 0x8);
/*800D3F00 000D0D00*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800D3F04 000D0D04*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800D3F08 000D0D08*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800D3F0C 000D0D0C*/ PPC::Runtime::ASM::ble(.L_800D3F2C);
RUNTIME_PPC_JUMP_LABEL(.L_800D3F10, 0x800D3F10) //this is a jump label
/*800D3F10 000D0D10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*800D3F14 000D0D14*/ PPC::Runtime::ASM::lfsx(context->f0, context->r3, context->r4);
/*800D3F18 000D0D18*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*800D3F1C 000D0D1C*/ PPC::Runtime::ASM::blt(.L_800D3F2C);
/*800D3F20 000D0D20*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x8);
/*800D3F24 000D0D24*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*800D3F28 000D0D28*/ PPC::Runtime::ASM::bdnz(.L_800D3F10);
RUNTIME_PPC_JUMP_LABEL(.L_800D3F2C, 0x800D3F2C) //this is a jump label
/*800D3F2C 000D0D2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*800D3F30 000D0D30*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 3);
/*800D3F34 000D0D34*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800D3F38 000D0D38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x4, context->r3));
/*800D3F3C 000D0D3C*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800D3F40 000D0D40*/ PPC::Runtime::ASM::beq(.L_800D3F60);
/*800D3F44 000D0D44*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 2);
/*800D3F48 000D0D48*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD6C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3F4C 000D0D4C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x584);
/*800D3F50 000D0D50*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800D3F54 000D0D54*/ PPC::Runtime::ASM::lfsx(context->f0, context->r4, context->r0);
/*800D3F58 000D0D58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800D3F5C 000D0D5C*/ PPC::Runtime::ASM::b(.L_800D3F64);
RUNTIME_PPC_JUMP_LABEL(.L_800D3F60, 0x800D3F60) //this is a jump label
/*800D3F60 000D0D60*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3F64, 0x800D3F64) //this is a jump label
/*800D3F64 000D0D64*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800D3F68 000D0D68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800D3F6C 000D0D6C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800D3F70 000D0D70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3F74 000D0D74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3F78 000D0D78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3F7C 000D0D7C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D3F80 000D0D80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D3F84 000D0D84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800D3F88 000D0D88*/ PPC::Runtime::ASM::blr();
}