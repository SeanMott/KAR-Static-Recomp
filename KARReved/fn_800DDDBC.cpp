//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802443A0.hpp"



void fn_800DDDBC(PPC::Runtime::GCContext* context)
{
/*800DDDBC 000DABBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*800DDDC0 000DABC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DDDC4 000DABC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800DDDC8 000DABC8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x60);
/*800DDDCC 000DABCC*/ PPC::Runtime::ASM::bl(_savegpr_22);
/*800DDDD0 000DABD0*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*800DDDD4 000DABD4*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800DDDD8 000DABD8*/ PPC::Runtime::ASM::mr(context->r27, context->r5);
/*800DDDDC 000DABDC*/ PPC::Runtime::ASM::mr(context->r28, context->r6);
/*800DDDE0 000DABE0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800DDDE4 000DABE4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800DDDE8 000DABE8*/ PPC::Runtime::ASM::b(.L_800DDEE4);
RUNTIME_PPC_JUMP_LABEL(.L_800DDDEC, 0x800DDDEC) //this is a jump label
/*800DDDEC 000DABEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r25));
/*800DDDF0 000DABF0*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r31);
/*800DDDF4 000DABF4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800DDDF8 000DABF8*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x1a);
/*800DDDFC 000DABFC*/ PPC::Runtime::ASM::beq(.L_800DDE0C);
/*800DDE00 000DAC00*/ PPC::Runtime::ASM::subis(context->r0, context->r4, 0x200);
/*800DDE04 000DAC04*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1a);
/*800DDE08 000DAC08*/ PPC::Runtime::ASM::bne(.L_800DDEDC);
RUNTIME_PPC_JUMP_LABEL(.L_800DDE0C, 0x800DDE0C) //this is a jump label
/*800DDE0C 000DAC0C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800DDE10 000DAC10*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x18);
/*800DDE14 000DAC14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800DDE18 000DAC18*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*800DDE1C 000DAC1C*/ PPC::Runtime::ASM::addi(context->r7, context->r31, 0x3c);
/*800DDE20 000DAC20*/ PPC::Runtime::ASM::addi(context->r11, context->r31, 0x50);
/*800DDE24 000DAC24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800DDE28 000DAC28*/ PPC::Runtime::ASM::addi(context->r22, context->r31, 0x60);
/*800DDE2C 000DAC2C*/ PPC::Runtime::ASM::addi(context->r10, context->r31, 0x74);
/*800DDE30 000DAC30*/ PPC::Runtime::ASM::addi(context->r23, context->r31, 0x84);
/*800DDE34 000DAC34*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r25));
/*800DDE38 000DAC38*/ PPC::Runtime::ASM::addi(context->r24, context->r31, 0xa8);
/*800DDE3C 000DAC3C*/ PPC::Runtime::ASM::addi(context->r0, context->r31, 0xcc);
/*800DDE40 000DAC40*/ PPC::Runtime::ASM::addi(context->r9, context->r31, 0x98);
/*800DDE44 000DAC44*/ PPC::Runtime::ASM::add(context->r4, context->r12, context->r4);
/*800DDE48 000DAC48*/ PPC::Runtime::ASM::add(context->r7, context->r12, context->r7);
/*800DDE4C 000DAC4C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DDE50 000DAC50*/ PPC::Runtime::ASM::add(context->r22, context->r12, context->r22);
/*800DDE54 000DAC54*/ PPC::Runtime::ASM::add(context->r23, context->r12, context->r23);
/*800DDE58 000DAC58*/ PPC::Runtime::ASM::add(context->r24, context->r12, context->r24);
/*800DDE5C 000DAC5C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r12, context->r3);
/*800DDE60 000DAC60*/ PPC::Runtime::ASM::addi(context->r8, context->r31, 0xbc);
/*800DDE64 000DAC64*/ PPC::Runtime::ASM::add(context->r0, context->r12, context->r0);
/*800DDE68 000DAC68*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800DDE6C 000DAC6C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDE70 000DAC70*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800DDE74 000DAC74*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x20);
/*800DDE78 000DAC78*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800DDE7C 000DAC7C*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800DDE80 000DAC80*/ PPC::Runtime::ASM::li(context->r7, 0x6);
/*800DDE84 000DAC84*/ PPC::Runtime::ASM::lwzx(context->r11, context->r12, context->r11);
/*800DDE88 000DAC88*/ PPC::Runtime::ASM::stw(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800DDE8C 000DAC8C*/ PPC::Runtime::ASM::stw(context->r22, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800DDE90 000DAC90*/ PPC::Runtime::ASM::lwzx(context->r10, context->r12, context->r10);
/*800DDE94 000DAC94*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800DDE98 000DAC98*/ PPC::Runtime::ASM::stw(context->r23, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DDE9C 000DAC9C*/ PPC::Runtime::ASM::lwzx(context->r9, context->r12, context->r9);
/*800DDEA0 000DACA0*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800DDEA4 000DACA4*/ PPC::Runtime::ASM::stw(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DDEA8 000DACA8*/ PPC::Runtime::ASM::lwzx(context->r8, context->r12, context->r8);
/*800DDEAC 000DACAC*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800DDEB0 000DACB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DDEB4 000DACB4*/ PPC::Runtime::ASM::bl(fn_802443A0);
/*800DDEB8 000DACB8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF6C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800DDEBC 000DACBC*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*800DDEC0 000DACC0*/ PPC::Runtime::ASM::beq(.L_800DDEDC);
/*800DDEC4 000DACC4*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*800DDEC8 000DACC8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800DDECC 000DACCC*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x1);
/*800DDED0 000DACD0*/ PPC::Runtime::ASM::clrlslwi(context->r0, context->r4, 16, 1);
/*800DDED4 000DACD4*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*800DDED8 000DACD8*/ PPC::Runtime::ASM::sthx(context->r26, context->r5, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_800DDEDC, 0x800DDEDC) //this is a jump label
/*800DDEDC 000DACDC*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x140);
/*800DDEE0 000DACE0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DDEE4, 0x800DDEE4) //this is a jump label
/*800DDEE4 000DACE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r25));
/*800DDEE8 000DACE8*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*800DDEEC 000DACEC*/ PPC::Runtime::ASM::blt(.L_800DDDEC);
/*800DDEF0 000DACF0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x60);
/*800DDEF4 000DACF4*/ PPC::Runtime::ASM::bl(_restgpr_22);
/*800DDEF8 000DACF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800DDEFC 000DACFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DDF00 000DAD00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*800DDF04 000DAD04*/ PPC::Runtime::ASM::blr();
}