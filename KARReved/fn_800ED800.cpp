//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "fn_800ED520.hpp"
#include "fn_800EB374.hpp"



void fn_800ED800(PPC::Runtime::GCContext* context)
{
/*800ED800 000EA600*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ED804 000EA604*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ED808 000EA608*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ED80C 000EA60C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ED810 000EA610*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800ED814 000EA614*/ PPC::Runtime::ASM::beq(.L_800ED8A0);
/*800ED818 000EA618*/ PPC::Runtime::ASM::cmpwi(context->r3, 0xf);
/*800ED81C 000EA61C*/ PPC::Runtime::ASM::beq(.L_800ED830);
/*800ED820 000EA620*/ PPC::Runtime::ASM::bge(.L_800ED840);
/*800ED824 000EA624*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x7);
/*800ED828 000EA628*/ PPC::Runtime::ASM::beq(.L_800ED838);
/*800ED82C 000EA62C*/ PPC::Runtime::ASM::b(.L_800ED840);
RUNTIME_PPC_JUMP_LABEL(.L_800ED830, 0x800ED830) //this is a jump label
/*800ED830 000EA630*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*800ED834 000EA634*/ PPC::Runtime::ASM::b(.L_800ED844);
RUNTIME_PPC_JUMP_LABEL(.L_800ED838, 0x800ED838) //this is a jump label
/*800ED838 000EA638*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*800ED83C 000EA63C*/ PPC::Runtime::ASM::b(.L_800ED844);
RUNTIME_PPC_JUMP_LABEL(.L_800ED840, 0x800ED840) //this is a jump label
/*800ED840 000EA640*/ PPC::Runtime::ASM::li(context->r5, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800ED844, 0x800ED844) //this is a jump label
/*800ED844 000EA644*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/*800ED848 000EA648*/ PPC::Runtime::ASM::and.(context->r0, context->r3, context->r5);
/*800ED84C 000EA64C*/ PPC::Runtime::ASM::beq(.L_800ED858);
/*800ED850 000EA650*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r5);
/*800ED854 000EA654*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800ED858, 0x800ED858) //this is a jump label
/*800ED858 000EA658*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ED85C 000EA65C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800ED860 000EA660*/ PPC::Runtime::ASM::beq(.L_800ED894);
/*800ED864 000EA664*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x3c);
/*800ED868 000EA668*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800ED86C 000EA66C*/ PPC::Runtime::ASM::li(context->r5, 0x10);
/*800ED870 000EA670*/ PPC::Runtime::ASM::bl(memset);
/*800ED874 000EA674*/ PPC::Runtime::ASM::bl(fn_800ED520);
/*800ED878 000EA678*/ PPC::Runtime::ASM::bl(fn_800EB374);
/*800ED87C 000EA67C*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ED880 000EA680*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
/* 800ED884 000EA684  54 60 07 FF */ clrlwi. context->r0 , context->r3 , 31
/*800ED888 000EA688*/ PPC::Runtime::ASM::beq(.L_800ED894);
/*800ED88C 000EA68C*/ PPC::Runtime::ASM::xori(context->r0, context->r3, 0x1);
/*800ED890 000EA690*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800ED894, 0x800ED894) //this is a jump label
/*800ED894 000EA694*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ED898 000EA698*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800ED89C 000EA69C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800ED8A0, 0x800ED8A0) //this is a jump label
/*800ED8A0 000EA6A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ED8A4 000EA6A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ED8A8 000EA6A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ED8AC 000EA6AC*/ PPC::Runtime::ASM::blr();
}