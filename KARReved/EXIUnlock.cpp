//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "SetExiInterruptMask.hpp"
#include "memmove.hpp"
#include "OSRestoreInterrupts.hpp"



void EXIUnlock(PPC::Runtime::GCContext* context)
{
/*803EB474 003E8274*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EB478 003E8278*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EB47C 003E827C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803EB480 003E8280*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EB484 003E8284*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EB488 003E8288*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EB48C 003E828C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EB490 003E8290*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*803EB494 003E8294*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EB498 003E8298*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EB49C 003E829C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EB4A0 003E82A0*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*803EB4A4 003E82A4*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EB4A8 003E82A8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803EB4AC 003E82AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EB4B0 003E82B0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 27);
/*803EB4B4 003E82B4*/ PPC::Runtime::ASM::bne(.L_803EB4C8);
/*803EB4B8 003E82B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EB4BC 003E82BC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EB4C0 003E82C0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EB4C4 003E82C4*/ PPC::Runtime::ASM::b(.L_803EB530);
RUNTIME_PPC_JUMP_LABEL(.L_803EB4C8, 0x803EB4C8) //this is a jump label
/*803EB4C8 003E82C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EB4CC 003E82CC*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 28, 26);
/*803EB4D0 003E82D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803EB4D4 003E82D4*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*803EB4D8 003E82D8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803EB4DC 003E82DC*/ PPC::Runtime::ASM::bl(SetExiInterruptMask);
/*803EB4E0 003E82E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*803EB4E4 003E82E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EB4E8 003E82E8*/ PPC::Runtime::ASM::ble(.L_803EB524);
/*803EB4EC 003E82EC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/* 803EB4F0 003E82F0  34 03 FF FF */ subic. context->r0 , context->r3 , 0x1
/*803EB4F4 003E82F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*803EB4F8 003E82F8*/ PPC::Runtime::ASM::ble(.L_803EB510);
/*803EB4FC 003E82FC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x28);
/*803EB500 003E8300*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x30);
/*803EB504 003E8304*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*803EB508 003E8308*/ PPC::Runtime::ASM::slwi(context->r5, context->r0, 3);
/*803EB50C 003E830C*/ PPC::Runtime::ASM::bl(memmove);
RUNTIME_PPC_JUMP_LABEL(.L_803EB510, 0x803EB510) //this is a jump label
/*803EB510 003E8310*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*803EB514 003E8314*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EB518 003E8318*/ PPC::Runtime::ASM::addi(context->r12, context->r29, 0x0);
/*803EB51C 003E831C*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 803EB520 003E8320  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803EB524, 0x803EB524) //this is a jump label
/*803EB524 003E8324*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EB528 003E8328*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EB52C 003E832C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EB530, 0x803EB530) //this is a jump label
/*803EB530 003E8330*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803EB534 003E8334*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EB538 003E8338*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EB53C 003E833C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EB540 003E8340*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EB544 003E8344*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803EB548 003E8348*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EB54C 003E834C*/ PPC::Runtime::ASM::blr();
}