//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025A204(PPC::Runtime::GCContext* context)
{
/*8025A204 00257004*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025A208 00257008*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025A20C 0025700C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A210 00257010*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A214 00257014*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025A218 00257018*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025A21C 0025701C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025A220 00257020*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A224 00257024*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025A228 00257028*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A22C 0025702C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A230 00257030*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025A234 00257034*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A238 00257038*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A23C 0025703C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025A240 00257040*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A244 00257044*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025A248 00257048*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A24C 0025704C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A250 00257050*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025A254 00257054*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A258 00257058*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025A25C 0025705C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025A260 00257060*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A264 00257064*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025A268 00257068*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A26C 0025706C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A270 00257070*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025A274 00257074*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025A278 00257078*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025A27C 0025707C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025A280 00257080*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A284 00257084*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A288 00257088*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025A28C 0025708C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025A290 00257090*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025A294 00257094*/ PPC::Runtime::ASM::blr();
}