//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80065AE4.hpp"



void fn_800EEFB0(PPC::Runtime::GCContext* context)
{
/*800EEFB0 000EBDB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EEFB4 000EBDB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EEFB8 000EBDB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EEFBC 000EBDBC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x714, context->r3));
/*800EEFC0 000EBDC0*/ PPC::Runtime::ASM::bl(fn_80065AE4);
/*800EEFC4 000EBDC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EEFC8 000EBDC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EEFCC 000EBDCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EEFD0 000EBDD0*/ PPC::Runtime::ASM::blr();
}