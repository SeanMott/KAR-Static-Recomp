//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_8015B264(PPC::Runtime::GCContext* context)
{
/*8015B264 00158064*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015B268 00158068*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015B26C 0015806C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015B270 00158070*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015B274 00158074*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8015B278 00158078*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015B27C 0015807C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8015B280 00158080*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015B284 00158084*/ PPC::Runtime::ASM::extsb(context->r4, context->r30);
/*8015B288 00158088*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8015B28C 0015808C*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x7c8);
/*8015B290 00158090*/ PPC::Runtime::ASM::slwi(context->r3, context->r4, 2);
/*8015B294 00158094*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015B298 00158098*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r3);
/*8015B29C 0015809C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8015B2A0 001580A0*/ PPC::Runtime::ASM::add(context->r4, context->r5, context->r0);
/*8015B2A4 001580A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8015B2A8 001580A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015B2AC 001580AC*/ PPC::Runtime::ASM::beq(.L_8015B2C0);
/*8015B2B0 001580B0*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8015B2B4 001580B4*/ PPC::Runtime::ASM::bne(.L_8015B2BC);
/*8015B2B8 001580B8*/ PPC::Runtime::ASM::b(.L_8015B2C0);
RUNTIME_PPC_JUMP_LABEL(.L_8015B2BC, 0x8015B2BC) //this is a jump label
/*8015B2BC 001580BC*/ PPC::Runtime::ASM::bl(fn_80429BE0);
RUNTIME_PPC_JUMP_LABEL(.L_8015B2C0, 0x8015B2C0) //this is a jump label
/*8015B2C0 001580C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015B2C4 001580C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015B2C8 001580C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015B2CC 001580CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015B2D0 001580D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015B2D4 001580D4*/ PPC::Runtime::ASM::blr();
}