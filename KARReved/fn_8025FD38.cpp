//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8025FBE8.hpp"
#include "fn_8025FBE8.hpp"
#include "fn_80255438.hpp"



void fn_8025FD38(PPC::Runtime::GCContext* context)
{
/*8025FD38 0025CB38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025FD3C 0025CB3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025FD40 0025CB40*/ PPC::Runtime::ASM::lis(context->r4, fn_8025FBE8 @ Get_MemoryOffset_HighBit);
/*8025FD44 0025CB44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FD48 0025CB48*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8025FBE8 @ Get_MemoryOffset_LowBit);
/*8025FD4C 0025CB4C*/ PPC::Runtime::ASM::bl(fn_80255438);
/*8025FD50 0025CB50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FD54 0025CB54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025FD58 0025CB58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025FD5C 0025CB5C*/ PPC::Runtime::ASM::blr();
}