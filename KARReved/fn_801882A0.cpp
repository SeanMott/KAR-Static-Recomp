//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_801882A0(PPC::Runtime::GCContext* context)
{
/*801882A0 001850A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801882A4 001850A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801882A8 001850A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801882AC 001850AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801882B0 001850B0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801882B4 001850B4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801882B8 001850B8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801882BC 001850BC*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x1294);
/*801882C0 001850C0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*801882C4 001850C4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801882C8, 0x801882C8) //this is a jump label
/*801882C8 001850C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*801882CC 001850CC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801882D0 001850D0*/ PPC::Runtime::ASM::beq(.L_801882DC);
/*801882D4 001850D4*/ PPC::Runtime::ASM::bl(fn_8044F350);
/*801882D8 001850D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801882DC, 0x801882DC) //this is a jump label
/*801882DC 001850DC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801882E0 001850E0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*801882E4 001850E4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x12);
/*801882E8 001850E8*/ PPC::Runtime::ASM::blt(.L_801882C8);
/*801882EC 001850EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801882F0 001850F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801882F4 001850F4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801882F8 001850F8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801882FC 001850FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80188300 00185100*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80188304 00185104*/ PPC::Runtime::ASM::blr();
}