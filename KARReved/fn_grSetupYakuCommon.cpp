//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F3F9C.hpp"



void fn_grSetupYakuCommon(PPC::Runtime::GCContext* context)
{
/*800F425C 000F105C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800F4260 000F1060*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F4264 000F1064*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F4268 000F1068*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F426C 000F106C*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*800F4270 000F1070*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800F4274 000F1074*/ PPC::Runtime::ASM::lis(context->r3, StructWithStructs_79 @ Get_MemoryOffset_HighBit);
/*800F4278 000F1078*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800F427C 000F107C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_978 @ Get_MemoryOffset_HighBit);
/*800F4280 000F1080*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithStructs_79 @ Get_MemoryOffset_LowBit);
/*800F4284 000F1084*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800F4288 000F1088*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_978 @ Get_MemoryOffset_LowBit);
/*800F428C 000F108C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800F4290 000F1090*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800F4294 000F1094*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800F4298 000F1098*/ PPC::Runtime::ASM::beq(.L_800F42A8);
/*800F429C 000F109C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800F42A0 000F10A0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800F42A4 000F10A4*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800F42A8, 0x800F42A8) //this is a jump label
/*800F42A8 000F10A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*800F42AC 000F10AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r3));
/*800F42B0 000F10B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F42B4 000F10B4*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 2);
/*800F42B8 000F10B8*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800F42BC 000F10BC*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800F42C0 000F10C0*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_46 @ Get_MemoryOffset_HighBit);
/*800F42C4 000F10C4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x710, context->r27));
/*800F42C8 000F10C8*/ PPC::Runtime::ASM::mr(context->r29, context->r30);
/*800F42CC 000F10CC*/ PPC::Runtime::ASM::addi(context->r26, context->r4, StructWithFuncPtrs_46 @ Get_MemoryOffset_LowBit);
/*800F42D0 000F10D0*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800F42D4 000F10D4*/ PPC::Runtime::ASM::b(.L_800F4368);
RUNTIME_PPC_JUMP_LABEL(.L_800F42D8, 0x800F42D8) //this is a jump label
/*800F42D8 000F10D8*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x0);
/*800F42DC 000F10DC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800F42E0 000F10E0*/ PPC::Runtime::ASM::blt(.L_800F42F0);
/*800F42E4 000F10E4*/ PPC::Runtime::ASM::cmpw(context->r28, context->r3);
/*800F42E8 000F10E8*/ PPC::Runtime::ASM::bge(.L_800F42F0);
/*800F42EC 000F10EC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800F42F0, 0x800F42F0) //this is a jump label
/*800F42F0 000F10F0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800F42F4 000F10F4*/ PPC::Runtime::ASM::bne(.L_800F4308);
/*800F42F8 000F10F8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800F42FC 000F10FC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800F4300 000F1100*/ PPC::Runtime::ASM::li(context->r4, 0x865);
/*800F4304 000F1104*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4308, 0x800F4308) //this is a jump label
/*800F4308 000F1108*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*800F430C 000F110C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r3));
/*800F4310 000F1110*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800F4314 000F1114*/ PPC::Runtime::ASM::add(context->r25, context->r0, context->r30);
/*800F4318 000F1118*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r25));
/*800F431C 000F111C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x10);
/*800F4320 000F1120*/ PPC::Runtime::ASM::blt(.L_800F4334);
/*800F4324 000F1124*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x3c);
/*800F4328 000F1128*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x48);
/*800F432C 000F112C*/ PPC::Runtime::ASM::li(context->r4, 0x2a);
/*800F4330 000F1130*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F4334, 0x800F4334) //this is a jump label
/*800F4334 000F1134*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r25));
/*800F4338 000F1138*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800F433C 000F113C*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 2);
/*800F4340 000F1140*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800F4344 000F1144*/ PPC::Runtime::ASM::lwzx(context->r12, context->r26, context->r0);
/*800F4348 000F1148*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800F434C 000F114C*/ PPC::Runtime::ASM::bctrl();
/*800F4350 000F1150*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F4354 000F1154*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0xc);
/*800F4358 000F1158*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x710, context->r27));
/*800F435C 000F115C*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*800F4360 000F1160*/ PPC::Runtime::ASM::stwx(context->r0, context->r3, context->r29);
/*800F4364 000F1164*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_800F4368, 0x800F4368) //this is a jump label
/*800F4368 000F1168*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*800F436C 000F116C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r3));
/*800F4370 000F1170*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F4374 000F1174*/ PPC::Runtime::ASM::cmpw(context->r28, context->r3);
/*800F4378 000F1178*/ PPC::Runtime::ASM::blt(.L_800F42D8);
/*800F437C 000F117C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F4380 000F1180*/ PPC::Runtime::ASM::bl(fn_800F3F9C);
/*800F4384 000F1184*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800F4388 000F1188*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*800F438C 000F118C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F4390 000F1190*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F4394 000F1194*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800F4398 000F1198*/ PPC::Runtime::ASM::blr();
}