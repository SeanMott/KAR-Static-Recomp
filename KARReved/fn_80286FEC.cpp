//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetUnkP.hpp"



void fn_80286FEC(PPC::Runtime::GCContext* context)
{
/*80286FEC 00283DEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80286FF0 00283DF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80286FF4 00283DF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80286FF8 00283DF8*/ PPC::Runtime::ASM::bl(fn_gmGetUnkP);
/*80286FFC 00283DFC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*80287000 00283E00*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80287004 00283E04*/ PPC::Runtime::ASM::beq(.L_8028702C);
/*80287008 00283E08*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBE8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028700C 00283E0C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80287010 00283E10*/ PPC::Runtime::ASM::li(context->r5, lbl_805D74F8 @ Get_MemoryOffset_SDA21);
/*80287014 00283E14*/ PPC::Runtime::ASM::li(context->r6, lbl_805D74F0 @ Get_MemoryOffset_SDA21);
/*80287018 00283E18*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8028701C 00283E1C*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*80287020 00283E20*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80287024 00283E24*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*80287028 00283E28*/ PPC::Runtime::ASM::b(.L_80287030);
RUNTIME_PPC_JUMP_LABEL(.L_8028702C, 0x8028702C) //this is a jump label
/*8028702C 00283E2C*/ PPC::Runtime::ASM::bl(fn_HSD_PadRumbleActiveAll);
RUNTIME_PPC_JUMP_LABEL(.L_80287030, 0x80287030) //this is a jump label
/*80287030 00283E30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80287034 00283E34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80287038 00283E38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028703C 00283E3C*/ PPC::Runtime::ASM::blr();
}