//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"



void fn_HSD_MObjAddShadowTexture(PPC::Runtime::GCContext* context)
{
/*803FAEC4 003F7CC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803FAEC8 003F7CC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803FAECC 003F7CCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FAED0 003F7CD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 803FAED4 003F7CD4  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803FAED8 003F7CD8*/ PPC::Runtime::ASM::bne(.L_803FAEEC);
/*803FAEDC 003F7CDC*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_598 @ Get_MemoryOffset_SDA21);
/*803FAEE0 003F7CE0*/ PPC::Runtime::ASM::li(context->r4, 0x495);
/*803FAEE4 003F7CE4*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_596 @ Get_MemoryOffset_SDA21);
/*803FAEE8 003F7CE8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_803FAEEC, 0x803FAEEC) //this is a jump label
/*803FAEEC 003F7CEC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE1F4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803FAEF0 003F7CF0*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*803FAEF4 003F7CF4*/ PPC::Runtime::ASM::b(.L_803FAF04);
RUNTIME_PPC_JUMP_LABEL(.L_803FAEF8, 0x803FAEF8) //this is a jump label
/*803FAEF8 003F7CF8*/ PPC::Runtime::ASM::cmplw(context->r3, context->r31);
/*803FAEFC 003F7CFC*/ PPC::Runtime::ASM::beq(.L_803FAF14);
/*803FAF00 003F7D00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803FAF04, 0x803FAF04) //this is a jump label
/*803FAF04 003F7D04*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803FAF08 003F7D08*/ PPC::Runtime::ASM::bne(.L_803FAEF8);
/*803FAF0C 003F7D0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803FAF10 003F7D10*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE1F4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803FAF14, 0x803FAF14) //this is a jump label
/*803FAF14 003F7D14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FAF18 003F7D18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FAF1C 003F7D1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803FAF20 003F7D20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803FAF24 003F7D24*/ PPC::Runtime::ASM::blr();
}