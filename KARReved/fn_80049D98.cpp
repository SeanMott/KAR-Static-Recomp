//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80049D98(PPC::Runtime::GCContext* context)
{
/*80049D98 00046B98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80049D9C 00046B9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80049DA0 00046BA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049DA4 00046BA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049DA8 00046BA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049DAC 00046BAC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80049DB0 00046BB0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049DB4 00046BB4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80049DB8 00046BB8*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r29, 24);
/*80049DBC 00046BBC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_169 @ Get_MemoryOffset_HighBit);
/*80049DC0 00046BC0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x3);
/*80049DC4 00046BC4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_169 @ Get_MemoryOffset_LowBit);
/*80049DC8 00046BC8*/ PPC::Runtime::ASM::blt(.L_80049DEC);
/*80049DCC 00046BCC*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*80049DD0 00046BD0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x180);
/*80049DD4 00046BD4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80049DD8 00046BD8*/ PPC::Runtime::ASM::bl(OSReport);
/*80049DDC 00046BDC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x19c);
/*80049DE0 00046BE0*/ PPC::Runtime::ASM::li(context->r4, 0x37);
/*80049DE4 00046BE4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D51D4 @ Get_MemoryOffset_SDA21);
/*80049DE8 00046BE8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80049DEC, 0x80049DEC) //this is a jump label
/*80049DEC 00046BEC*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r30, 24);
/*80049DF0 00046BF0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x174);
/*80049DF4 00046BF4*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0x3);
/*80049DF8 00046BF8*/ PPC::Runtime::ASM::clrlslwi(context->r5, context->r29, 24, 2);
/*80049DFC 00046BFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80049E00 00046C00*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r5);
/*80049E04 00046C04*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*80049E08 00046C08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80049E0C 00046C0C*/ PPC::Runtime::ASM::lbzx(context->r3, context->r4, context->r0);
/*80049E10 00046C10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80049E14 00046C14*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80049E18 00046C18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80049E1C 00046C1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80049E20 00046C20*/ PPC::Runtime::ASM::blr();
}