//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_SAV2_fn_ucGetNumberOfExistingSave.hpp"
#include "fn_801E0C88.hpp"
#include "fn_8022D778.hpp"



void fn_801D7DC0(PPC::Runtime::GCContext* context)
{
/*801D7DC0 001D4BC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801D7DC4 001D4BC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D7DC8 001D4BC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D7DCC 001D4BCC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D7DD0 001D4BD0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D7DD4 001D4BD4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801D7DD8 001D4BD8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7DDC 001D4BDC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801D7DE0 001D4BE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801D7DE4 001D4BE4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801D7DE8 001D4BE8*/ PPC::Runtime::ASM::beq(.L_801D7E0C);
/*801D7DEC 001D4BEC*/ PPC::Runtime::ASM::bl(fn_SAV2_fn_ucGetNumberOfExistingSave);
/*801D7DF0 001D4BF0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801D7DF4 001D4BF4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801D7DF8 001D4BF8*/ PPC::Runtime::ASM::bl(fn_801E0C88);
/*801D7DFC 001D4BFC*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801D7E00 001D4C00*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D7E04 001D4C04*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*801D7E08 001D4C08*/ PPC::Runtime::ASM::bl(fn_8022D778);
RUNTIME_PPC_JUMP_LABEL(.L_801D7E0C, 0x801D7E0C) //this is a jump label
/*801D7E0C 001D4C0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801D7E10 001D4C10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801D7E14 001D4C14*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801D7E18 001D4C18*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7E1C 001D4C1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D7E20 001D4C20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801D7E24 001D4C24*/ PPC::Runtime::ASM::blr();
}