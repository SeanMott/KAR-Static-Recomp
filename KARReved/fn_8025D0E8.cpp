//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025D0E8(PPC::Runtime::GCContext* context)
{
/*8025D0E8 00259EE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025D0EC 00259EEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025D0F0 00259EF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D0F4 00259EF4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D0F8 00259EF8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D0FC 00259EFC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025D100 00259F00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025D104 00259F04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D108 00259F08*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025D10C 00259F0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D110 00259F10*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D114 00259F14*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025D118 00259F18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D11C 00259F1C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D120 00259F20*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025D124 00259F24*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D128 00259F28*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025D12C 00259F2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D130 00259F30*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D134 00259F34*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025D138 00259F38*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025D13C 00259F3C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025D140 00259F40*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025D144 00259F44*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EDC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D148 00259F48*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025D14C 00259F4C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025D150 00259F50*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2ED8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D154 00259F54*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025D158 00259F58*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025D15C 00259F5C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025D160 00259F60*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025D164 00259F64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D168 00259F68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D16C 00259F6C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025D170 00259F70*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025D174 00259F74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025D178 00259F78*/ PPC::Runtime::ASM::blr();
}