//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "fn_801FF884.hpp"
#include "fn_80206E2C.hpp"
#include "fn_8020728C.hpp"
#include "fn_80207CE8.hpp"
#include "fn_8020AE7C.hpp"



void fn_801FBA8C(PPC::Runtime::GCContext* context)
{
/*801FBA8C 001F888C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FBA90 001F8890*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FBA94 001F8894*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801FBA98 001F8898*/ PPC::Runtime::ASM::li(context->r5, 0x2b4);
/*801FBA9C 001F889C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FBAA0 001F88A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FBAA4 001F88A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801FBAA8 001F88A8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801FBAAC 001F88AC*/ PPC::Runtime::ASM::addi(context->r31, context->r30, 0x5d4);
/*801FBAB0 001F88B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FBAB4 001F88B4*/ PPC::Runtime::ASM::bl(memset);
/*801FBAB8 001F88B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FBABC 001F88BC*/ PPC::Runtime::ASM::bl(fn_801FF884);
/*801FBAC0 001F88C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FBAC4 001F88C4*/ PPC::Runtime::ASM::beq(.L_801FBB38);
/*801FBAC8 001F88C8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2208 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FBACC 001F88CC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8c, context->r30));
/*801FBAD0 001F88D0*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*801FBAD4 001F88D4*/ PPC::Runtime::ASM::bne(.L_801FBB38);
/*801FBAD8 001F88D8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801FBADC 001F88DC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FBAE0 001F88E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*801FBAE4 001F88E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r31));
/*801FBAE8 001F88E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*801FBAEC 001F88EC*/ PPC::Runtime::ASM::bl(fn_80206E2C);
/*801FBAF0 001F88F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801FBAF4 001F88F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801FBAF8 001F88F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r30));
/*801FBAFC 001F88FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x344, context->r30));
/*801FBB00 001F8900*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r31));
/*801FBB04 001F8904*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r31));
/*801FBB08 001F8908*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x348, context->r30));
/*801FBB0C 001F890C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
/*801FBB10 001F8910*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*801FBB14 001F8914*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x48);
/*801FBB18 001F8918*/ PPC::Runtime::ASM::bge(.L_801FBB38);
/*801FBB1C 001F891C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FBB20 001F8920*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801FBB24 001F8924*/ PPC::Runtime::ASM::bl(fn_8020728C);
/*801FBB28 001F8928*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FBB2C 001F892C*/ PPC::Runtime::ASM::bl(fn_80207CE8);
/*801FBB30 001F8930*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FBB34 001F8934*/ PPC::Runtime::ASM::bl(fn_8020AE7C);
RUNTIME_PPC_JUMP_LABEL(.L_801FBB38, 0x801FBB38) //this is a jump label
/*801FBB38 001F8938*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FBB3C 001F893C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FBB40 001F8940*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801FBB44 001F8944*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FBB48 001F8948*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FBB4C 001F894C*/ PPC::Runtime::ASM::blr();
}