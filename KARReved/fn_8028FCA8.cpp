//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028FCA8(PPC::Runtime::GCContext* context)
{
/*8028FCA8 0028CAA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8028FCAC 0028CAAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028FCB0 0028CAB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028FCB4 0028CAB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8028FCB8 0028CAB8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8028FCBC 0028CABC*/ PPC::Runtime::ASM::beq(.L_8028FCE0);
/*8028FCC0 0028CAC0*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BE3BC @ Get_MemoryOffset_HighBit);
/*8028FCC4 0028CAC4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*8028FCC8 0028CAC8*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BE3BC @ Get_MemoryOffset_LowBit);
/*8028FCCC 0028CACC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028FCD0 0028CAD0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8028FCD4 0028CAD4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBB0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028FCD8 0028CAD8*/ PPC::Runtime::ASM::ble(.L_8028FCE0);
/*8028FCDC 0028CADC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028FCE0, 0x8028FCE0) //this is a jump label
/*8028FCE0 0028CAE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028FCE4 0028CAE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8028FCE8 0028CAE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028FCEC 0028CAEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028FCF0 0028CAF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028FCF4 0028CAF4*/ PPC::Runtime::ASM::blr();
}