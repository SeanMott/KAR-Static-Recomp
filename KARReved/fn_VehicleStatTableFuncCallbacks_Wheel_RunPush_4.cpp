//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801F8300.hpp"
#include "fn_801F8518.hpp"
#include "fn_801CF60C.hpp"
#include "fn_801CDF84.hpp"
#include "fn_801F8538.hpp"
#include "fn_801FAB40.hpp"
#include "fn_801D34E4.hpp"
#include "fn_801F7B8C.hpp"
#include "fn_801DBE5C.hpp"
#include "fn_801DC250.hpp"
#include "fn_801DC3B8.hpp"
#include "fn_801E359C.hpp"



void fn_VehicleStatTableFuncCallbacks_Wheel_RunPush_4(PPC::Runtime::GCContext* context)
{
/*801FA2BC 001F70BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FA2C0 001F70C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FA2C4 001F70C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA2C8 001F70C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA2CC 001F70CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FA2D0 001F70D0*/ PPC::Runtime::ASM::bl(fn_801F8300);
/*801FA2D4 001F70D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA2D8 001F70D8*/ PPC::Runtime::ASM::bl(fn_801F8518);
/*801FA2DC 001F70DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA2E0 001F70E0*/ PPC::Runtime::ASM::bl(fn_801CF60C);
/*801FA2E4 001F70E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA2E8 001F70E8*/ PPC::Runtime::ASM::bl(fn_801CDF84);
/*801FA2EC 001F70EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA2F0 001F70F0*/ PPC::Runtime::ASM::bl(fn_801F8538);
/*801FA2F4 001F70F4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA2F8 001F70F8*/ PPC::Runtime::ASM::bl(fn_801FAB40);
/*801FA2FC 001F70FC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FA300 001F7100*/ PPC::Runtime::ASM::bne(.L_801FA338);
/*801FA304 001F7104*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA308 001F7108*/ PPC::Runtime::ASM::bl(fn_801D34E4);
/*801FA30C 001F710C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA310 001F7110*/ PPC::Runtime::ASM::bl(fn_801F7B8C);
/*801FA314 001F7114*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA318 001F7118*/ PPC::Runtime::ASM::bl(fn_801DBE5C);
/*801FA31C 001F711C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA320 001F7120*/ PPC::Runtime::ASM::bl(fn_801DC250);
/*801FA324 001F7124*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA328 001F7128*/ PPC::Runtime::ASM::bl(fn_801DC3B8);
/*801FA32C 001F712C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FA330 001F7130*/ PPC::Runtime::ASM::bl(fn_801E359C);
/*801FA334 001F7134*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801FA338, 0x801FA338) //this is a jump label
/*801FA338 001F7138*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA33C 001F713C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA340 001F7140*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FA344 001F7144*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FA348 001F7148*/ PPC::Runtime::ASM::blr();
}