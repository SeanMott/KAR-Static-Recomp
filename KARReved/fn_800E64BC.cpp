//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CF058.hpp"



void fn_800E64BC(PPC::Runtime::GCContext* context)
{
/*800E64BC 000E32BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E64C0 000E32C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E64C4 000E32C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E64C8 000E32C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E64CC 000E32CC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 800E64D0 000E32D0  7C 9E 23 79 */ mr. context->r30 , context->r4
/*800E64D4 000E32D4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E64D8 000E32D8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800E64DC 000E32DC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800E64E0 000E32E0*/ PPC::Runtime::ASM::beq(.L_800E65F4);
/*800E64E4 000E32E4*/ PPC::Runtime::ASM::bl(fn_800CF058);
/*800E64E8 000E32E8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800E64EC 000E32EC*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 2);
/*800E64F0 000E32F0*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800E64F4 000E32F4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800E64F8 000E32F8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E64FC 000E32FC*/ PPC::Runtime::ASM::li(context->r12, 0x0);
/*800E6500 000E3300*/ PPC::Runtime::ASM::ble(.L_800E65BC);
/*800E6504 000E3304*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x8);
/*800E6508 000E3308*/ PPC::Runtime::ASM::subi(context->r3, context->r31, 0x8);
/*800E650C 000E330C*/ PPC::Runtime::ASM::ble(.L_800E6594);
/*800E6510 000E3310*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x7);
/*800E6514 000E3314*/ PPC::Runtime::ASM::li(context->r11, 0x0);
/*800E6518 000E3318*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 3);
/*800E651C 000E331C*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800E6520 000E3320*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E6524 000E3324*/ PPC::Runtime::ASM::ble(.L_800E6594);
RUNTIME_PPC_JUMP_LABEL(.L_800E6528, 0x800E6528) //this is a jump label
/*800E6528 000E3328*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E652C 000E332C*/ PPC::Runtime::ASM::li(context->r10, 0x0);
/*800E6530 000E3330*/ PPC::Runtime::ASM::addi(context->r8, context->r11, 0x4);
/*800E6534 000E3334*/ PPC::Runtime::ASM::addi(context->r7, context->r11, 0x8);
/*800E6538 000E3338*/ PPC::Runtime::ASM::stwx(context->r10, context->r3, context->r11);
/*800E653C 000E333C*/ PPC::Runtime::ASM::addi(context->r6, context->r11, 0xc);
/*800E6540 000E3340*/ PPC::Runtime::ASM::addi(context->r5, context->r11, 0x10);
/*800E6544 000E3344*/ PPC::Runtime::ASM::addi(context->r4, context->r11, 0x14);
/*800E6548 000E3348*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E654C 000E334C*/ PPC::Runtime::ASM::addi(context->r3, context->r11, 0x18);
/*800E6550 000E3350*/ PPC::Runtime::ASM::addi(context->r0, context->r11, 0x1c);
/*800E6554 000E3354*/ PPC::Runtime::ASM::addi(context->r11, context->r11, 0x20);
/*800E6558 000E3358*/ PPC::Runtime::ASM::stwx(context->r10, context->r9, context->r8);
/*800E655C 000E335C*/ PPC::Runtime::ASM::addi(context->r12, context->r12, 0x8);
/*800E6560 000E3360*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E6564 000E3364*/ PPC::Runtime::ASM::stwx(context->r10, context->r8, context->r7);
/*800E6568 000E3368*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E656C 000E336C*/ PPC::Runtime::ASM::stwx(context->r10, context->r7, context->r6);
/*800E6570 000E3370*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E6574 000E3374*/ PPC::Runtime::ASM::stwx(context->r10, context->r6, context->r5);
/*800E6578 000E3378*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E657C 000E337C*/ PPC::Runtime::ASM::stwx(context->r10, context->r5, context->r4);
/*800E6580 000E3380*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E6584 000E3384*/ PPC::Runtime::ASM::stwx(context->r10, context->r4, context->r3);
/*800E6588 000E3388*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E658C 000E338C*/ PPC::Runtime::ASM::stwx(context->r10, context->r3, context->r0);
/*800E6590 000E3390*/ PPC::Runtime::ASM::bdnz(.L_800E6528);
RUNTIME_PPC_JUMP_LABEL(.L_800E6594, 0x800E6594) //this is a jump label
/*800E6594 000E3394*/ PPC::Runtime::ASM::subf(context->r0, context->r12, context->r31);
/*800E6598 000E3398*/ PPC::Runtime::ASM::slwi(context->r5, context->r12, 2);
/*800E659C 000E339C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800E65A0 000E33A0*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800E65A4 000E33A4*/ PPC::Runtime::ASM::cmpw(context->r12, context->r31);
/*800E65A8 000E33A8*/ PPC::Runtime::ASM::bge(.L_800E65BC);
RUNTIME_PPC_JUMP_LABEL(.L_800E65AC, 0x800E65AC) //this is a jump label
/*800E65AC 000E33AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E65B0 000E33B0*/ PPC::Runtime::ASM::stwx(context->r4, context->r3, context->r5);
/*800E65B4 000E33B4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
/*800E65B8 000E33B8*/ PPC::Runtime::ASM::bdnz(.L_800E65AC);
RUNTIME_PPC_JUMP_LABEL(.L_800E65BC, 0x800E65BC) //this is a jump label
/*800E65BC 000E33BC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800E65C0 000E33C0*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*800E65C4 000E33C4*/ PPC::Runtime::ASM::b(.L_800E65E8);
RUNTIME_PPC_JUMP_LABEL(.L_800E65C8, 0x800E65C8) //this is a jump label
/*800E65C8 000E33C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E65CC 000E33CC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*800E65D0 000E33D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E65D4 000E33D4*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r4);
/*800E65D8 000E33D8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0xc);
/*800E65DC 000E33DC*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800E65E0 000E33E0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800E65E4 000E33E4*/ PPC::Runtime::ASM::stwx(context->r6, context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_800E65E8, 0x800E65E8) //this is a jump label
/*800E65E8 000E33E8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E65EC 000E33EC*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*800E65F0 000E33F0*/ PPC::Runtime::ASM::blt(.L_800E65C8);
RUNTIME_PPC_JUMP_LABEL(.L_800E65F4, 0x800E65F4) //this is a jump label
/*800E65F4 000E33F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E65F8 000E33F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E65FC 000E33FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E6600 000E3400*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E6604 000E3404*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E6608 000E3408*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E660C 000E340C*/ PPC::Runtime::ASM::blr();
}