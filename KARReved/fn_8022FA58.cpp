//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022FA58(PPC::Runtime::GCContext* context)
{
/*8022FA58 0022C858*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022FA5C 0022C85C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022FA60 0022C860*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022FA64 0022C864*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022FA68 0022C868*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022FA6C 0022C86C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8022FA70 0022C870*/ PPC::Runtime::ASM::blt(.L_8022FA8C);
/*8022FA74 0022C874*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022FA78 0022C878*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022FA7C 0022C87C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022FA80 0022C880*/ PPC::Runtime::ASM::li(context->r4, 0x4a8);
/*8022FA84 0022C884*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022FA88 0022C888*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022FA8C, 0x8022FA8C) //this is a jump label
/*8022FA8C 0022C88C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022FA90 0022C890*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022FA94 0022C894*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022FA98 0022C898*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r3));
/*8022FA9C 0022C89C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022FAA0 0022C8A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022FAA4 0022C8A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022FAA8 0022C8A8*/ PPC::Runtime::ASM::blr();
}