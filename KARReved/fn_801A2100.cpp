//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_isRuleDestructionDerby.hpp"



void fn_801A2100(PPC::Runtime::GCContext* context)
{
/*801A2100 0019EF00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A2104 0019EF04*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A2108 0019EF08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A210C 0019EF0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A2110 0019EF10*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A2114 0019EF14*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x826, context->r3));
/* 801A2118 0019EF18  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801A211C 0019EF1C*/ PPC::Runtime::ASM::beq(.L_801A2154);
/*801A2120 0019EF20*/ PPC::Runtime::ASM::bl(fn_isRuleDestructionDerby);
/*801A2124 0019EF24*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A2128 0019EF28*/ PPC::Runtime::ASM::beq(.L_801A2154);
/*801A212C 0019EF2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa78, context->r31));
/*801A2130 0019EF30*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A2134 0019EF34*/ PPC::Runtime::ASM::bge(.L_801A214C);
/*801A2138 0019EF38*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801A213C 0019EF3C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A2140 0019EF40*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*801A2144 0019EF44*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801A2148 0019EF48*/ PPC::Runtime::ASM::b(.L_801A2154);
RUNTIME_PPC_JUMP_LABEL(.L_801A214C, 0x801A214C) //this is a jump label
/*801A214C 0019EF4C*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*801A2150 0019EF50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa78, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801A2154, 0x801A2154) //this is a jump label
/*801A2154 0019EF54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A2158 0019EF58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A215C 0019EF5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A2160 0019EF60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A2164 0019EF64*/ PPC::Runtime::ASM::blr();
}