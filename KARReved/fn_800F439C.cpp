//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F439C(PPC::Runtime::GCContext* context)
{
/*800F439C 000F119C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F43A0 000F11A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F43A4 000F11A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F43A8 000F11A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F43AC 000F11AC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F43B0 000F11B0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F43B4 000F11B4*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F43B8 000F11B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*800F43BC 000F11BC*/ PPC::Runtime::ASM::b(.L_800F43CC);
RUNTIME_PPC_JUMP_LABEL(.L_800F43C0, 0x800F43C0) //this is a jump label
/*800F43C0 000F11C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F43C4 000F11C4*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*800F43C8 000F11C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800F43CC, 0x800F43CC) //this is a jump label
/*800F43CC 000F11CC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F43D0 000F11D0*/ PPC::Runtime::ASM::bne(.L_800F43C0);
/*800F43D4 000F11D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x710, context->r30));
/*800F43D8 000F11D8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F43DC 000F11DC*/ PPC::Runtime::ASM::beq(.L_800F43E4);
/*800F43E0 000F11E0*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800F43E4, 0x800F43E4) //this is a jump label
/*800F43E4 000F11E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F43E8 000F11E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F43EC 000F11EC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F43F0 000F11F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F43F4 000F11F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F43F8 000F11F8*/ PPC::Runtime::ASM::blr();
}