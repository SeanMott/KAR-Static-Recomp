//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_UDPGetRecvBuff(PPC::Runtime::GCContext* context)
{
/*80475B4C 0047294C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80475B50 00472950*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80475B54 00472954*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*80475B58 00472958*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80475B5C 0047295C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80475B60 00472960*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*80475B64 00472964*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80475B68 00472968*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*80475B6C 0047296C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80475B70 00472970*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*80475B74 00472974*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80475B78 00472978*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80475B7C 0047297C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x6);
/*80475B80 00472980*/ PPC::Runtime::ASM::beq(.L_80475B8C);
/*80475B84 00472984*/ PPC::Runtime::ASM::li(context->r31, -0xc);
/*80475B88 00472988*/ PPC::Runtime::ASM::b(.L_80475BB0);
RUNTIME_PPC_JUMP_LABEL(.L_80475B8C, 0x80475B8C) //this is a jump label
/*80475B8C 0047298C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80475B90 00472990*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80475B94 00472994*/ PPC::Runtime::ASM::beq(.L_80475BA0);
/*80475B98 00472998*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a4, context->r28));
/*80475B9C 0047299C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80475BA0, 0x80475BA0) //this is a jump label
/*80475BA0 004729A0*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80475BA4 004729A4*/ PPC::Runtime::ASM::beq(.L_80475BB0);
/*80475BA8 004729A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a0, context->r28));
/*80475BAC 004729AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_80475BB0, 0x80475BB0) //this is a jump label
/*80475BB0 004729B0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80475BB4 004729B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80475BB8 004729B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80475BBC 004729BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80475BC0 004729C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80475BC4 004729C4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80475BC8 004729C8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80475BCC 004729CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*80475BD0 004729D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80475BD4 004729D4*/ PPC::Runtime::ASM::blr();
}