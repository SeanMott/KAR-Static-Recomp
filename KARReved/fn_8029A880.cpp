//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029A880(PPC::Runtime::GCContext* context)
{
/*8029A880 00297680*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029A884 00297684*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029A888 00297688*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A88C 0029768C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A890 00297690*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A894 00297694*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029A898 00297698*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029A89C 0029769C*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029A8A0 002976A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A8A4 002976A4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A8A8 002976A8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029A8AC 002976AC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A8B0 002976B0*/ PPC::Runtime::ASM::bctrl();
/*8029A8B4 002976B4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029A8B8 002976B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029A8BC 002976BC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029A8C0 002976C0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029A8C4 002976C4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029A8C8 002976C8*/ PPC::Runtime::ASM::bctrl();
/*8029A8CC 002976CC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029A8D0 002976D0*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029A8D4 002976D4*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*8029A8D8 002976D8*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029A8DC 002976DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029A8E0 002976E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029A8E4 002976E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029A8E8 002976E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029A8EC 002976EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029A8F0 002976F0*/ PPC::Runtime::ASM::blr();
}