//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EE73C.hpp"
#include "fn_800EE6CC.hpp"
#include "fn_800EE6C4.hpp"
#include "fn_8010D770.hpp"



void fn_event_lighthouse(PPC::Runtime::GCContext* context)
{
/*80111FB0 0010EDB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80111FB4 0010EDB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80111FB8 0010EDB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80111FBC 0010EDBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80111FC0 0010EDC0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80111FC4 0010EDC4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80111FC8 0010EDC8*/ PPC::Runtime::ASM::bl(fn_800EE73C);
/*80111FCC 0010EDCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80111FD0 0010EDD0*/ PPC::Runtime::ASM::bl(fn_800EE6CC);
/*80111FD4 0010EDD4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80111FD8 0010EDD8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80111FDC 0010EDDC*/ PPC::Runtime::ASM::bl(fn_800EE6C4);
/*80111FE0 0010EDE0*/ PPC::Runtime::ASM::subf.(context->r0, context->r3, context->r31);
/*80111FE4 0010EDE4*/ PPC::Runtime::ASM::bne(.L_80111FF0);
/*80111FE8 0010EDE8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD750 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80111FEC 0010EDEC*/ PPC::Runtime::ASM::bl(fn_8010D770);
RUNTIME_PPC_JUMP_LABEL(.L_80111FF0, 0x80111FF0) //this is a jump label
/*80111FF0 0010EDF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80111FF4 0010EDF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80111FF8 0010EDF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80111FFC 0010EDFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80112000 0010EE00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80112004 0010EE04*/ PPC::Runtime::ASM::blr();
}