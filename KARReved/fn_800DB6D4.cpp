//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"



void fn_800DB6D4(PPC::Runtime::GCContext* context)
{
/*800DB6D4 000D84D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800DB6D8 000D84D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DB6DC 000D84DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DB6E0 000D84E0*/ PPC::Runtime::ASM::srawi(context->r0, context->r4, 3);
/*800DB6E4 000D84E4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800DB6E8 000D84E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800DB6EC 000D84EC*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800DB6F0 000D84F0*/ PPC::Runtime::ASM::addze(context->r5, context->r0);
/*800DB6F4 000D84F4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DB6F8 000D84F8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800DB6FC 000D84FC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*800DB700 000D8500*/ PPC::Runtime::ASM::bl(memset);
/*800DB704 000D8504*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*800DB708 000D8508*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800DB70C 000D850C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800DB710 000D8510*/ PPC::Runtime::ASM::b(.L_800DB750);
RUNTIME_PPC_JUMP_LABEL(.L_800DB714, 0x800DB714) //this is a jump label
/*800DB714 000D8514*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800DB718 000D8518*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*800DB71C 000D851C*/ PPC::Runtime::ASM::lwzx(context->r5, context->r3, context->r7);
/*800DB720 000D8520*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x4);
/*800DB724 000D8524*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 29);
/*800DB728 000D8528*/ PPC::Runtime::ASM::srwi(context->r3, context->r5, 31);
/*800DB72C 000D852C*/ PPC::Runtime::ASM::srawi(context->r5, context->r5, 3);
/*800DB730 000D8530*/ PPC::Runtime::ASM::subf(context->r0, context->r3, context->r0);
/*800DB734 000D8534*/ PPC::Runtime::ASM::addze(context->r6, context->r5);
/*800DB738 000D8538*/ PPC::Runtime::ASM::rotlwi(context->r0, context->r0, 3);
/*800DB73C 000D853C*/ PPC::Runtime::ASM::lbzx(context->r5, context->r30, context->r6);
/*800DB740 000D8540*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*800DB744 000D8544*/ PPC::Runtime::ASM::slw(context->r0, context->r4, context->r0);
/*800DB748 000D8548*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*800DB74C 000D854C*/ PPC::Runtime::ASM::stbx(context->r0, context->r30, context->r6);
RUNTIME_PPC_JUMP_LABEL(.L_800DB750, 0x800DB750) //this is a jump label
/*800DB750 000D8550*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800DB754 000D8554*/ PPC::Runtime::ASM::cmpw(context->r8, context->r0);
/*800DB758 000D8558*/ PPC::Runtime::ASM::blt(.L_800DB714);
/*800DB75C 000D855C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DB760 000D8560*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800DB764 000D8564*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DB768 000D8568*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DB76C 000D856C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800DB770 000D8570*/ PPC::Runtime::ASM::blr();
}