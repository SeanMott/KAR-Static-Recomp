//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011C13C.hpp"
#include "fn_800547E0.hpp"
#include "fn_8006176C.hpp"
#include "fn_8011C13C.hpp"



void fn_8011BF2C(PPC::Runtime::GCContext* context)
{
/*8011BF2C 00118D2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8011BF30 00118D30*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011BF34 00118D34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011BF38 00118D38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011BF3C 00118D3C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011BF40 00118D40*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011BF44 00118D44*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8011BF48 00118D48*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011BF4C 00118D4C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r29));
/*8011BF50 00118D50*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011BF54 00118D54*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*8011BF58 00118D58*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8011BF5C 00118D5C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8011BF60 00118D60*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8011BF64 00118D64*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r4, 30, 26, 29);
/*8011BF68 00118D68*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8011BF6C 00118D6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r3));
/*8011BF70 00118D70*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8011BF74 00118D74*/ PPC::Runtime::ASM::beq(.L_8011BF88);
/*8011BF78 00118D78*/ PPC::Runtime::ASM::extrwi(context->r0, context->r4, 2, 28);
/*8011BF7C 00118D7C*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8011BF80 00118D80*/ PPC::Runtime::ASM::bl(fn_8011C13C);
/*8011BF84 00118D84*/ PPC::Runtime::ASM::b(.L_8011BFD8);
RUNTIME_PPC_JUMP_LABEL(.L_8011BF88, 0x8011BF88) //this is a jump label
/*8011BF88 00118D88*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8011BF8C 00118D8C*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*8011BF90 00118D90*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8011BF94 00118D94*/ PPC::Runtime::ASM::bne(.L_8011BFD8);
/*8011BF98 00118D98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8011BF9C 00118D9C*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*8011BFA0 00118DA0*/ PPC::Runtime::ASM::beq(.L_8011BFC8);
/*8011BFA4 00118DA4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8011BFA8 00118DA8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFCC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8011BFAC 00118DAC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8011BFB0 00118DB0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8011BFB4 00118DB4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*8011BFB8 00118DB8*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*8011BFBC 00118DBC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x9);
/*8011BFC0 00118DC0*/ PPC::Runtime::ASM::bl(fn_8006176C);
/*8011BFC4 00118DC4*/ PPC::Runtime::ASM::b(.L_8011BFD8);
RUNTIME_PPC_JUMP_LABEL(.L_8011BFC8, 0x8011BFC8) //this is a jump label
/*8011BFC8 00118DC8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8011BFCC 00118DCC*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 2, 28);
/*8011BFD0 00118DD0*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8011BFD4 00118DD4*/ PPC::Runtime::ASM::bl(fn_8011C13C);
RUNTIME_PPC_JUMP_LABEL(.L_8011BFD8, 0x8011BFD8) //this is a jump label
/*8011BFD8 00118DD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011BFDC 00118DDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011BFE0 00118DE0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011BFE4 00118DE4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011BFE8 00118DE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011BFEC 00118DEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8011BFF0 00118DF0*/ PPC::Runtime::ASM::blr();
}