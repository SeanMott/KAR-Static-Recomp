//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8020D780.hpp"
#include "fn_8005ECA0.hpp"



void fn_8020D608(PPC::Runtime::GCContext* context)
{
/*8020D608 0020A408*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8020D60C 0020A40C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020D610 0020A410*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8020D614 0020A414*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8020D618 0020A418*/ PPC::Runtime::ASM::bl(_savegpr_27);
/* 8020D61C 0020A41C  7C 9C 23 79 */ mr. context->r28 , context->r4
/*8020D620 0020A420*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*8020D624 0020A424*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*8020D628 0020A428*/ PPC::Runtime::ASM::blt(.L_8020D694);
/*8020D62C 0020A42C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r27));
/*8020D630 0020A430*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*8020D634 0020A434*/ PPC::Runtime::ASM::beq(.L_8020D694);
/*8020D638 0020A438*/ PPC::Runtime::ASM::slwi(context->r30, context->r29, 2);
/*8020D63C 0020A43C*/ PPC::Runtime::ASM::add(context->r31, context->r27, context->r30);
/*8020D640 0020A440*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r31));
/*8020D644 0020A444*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8020D648 0020A448*/ PPC::Runtime::ASM::beq(.L_8020D694);
/*8020D64C 0020A44C*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x2f8);
/*8020D650 0020A450*/ PPC::Runtime::ASM::bl(fn_8020D780);
/*8020D654 0020A454*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8020D658 0020A458*/ PPC::Runtime::ASM::beq(.L_8020D694);
/*8020D65C 0020A45C*/ PPC::Runtime::ASM::bge(.L_8020D670);
/*8020D660 0020A460*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8020D664 0020A464*/ PPC::Runtime::ASM::beq(.L_8020D694);
/*8020D668 0020A468*/ PPC::Runtime::ASM::bge(.L_8020D678);
/*8020D66C 0020A46C*/ PPC::Runtime::ASM::b(.L_8020D694);
RUNTIME_PPC_JUMP_LABEL(.L_8020D670, 0x8020D670) //this is a jump label
/*8020D670 0020A470*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3);
/*8020D674 0020A474*/ PPC::Runtime::ASM::bge(.L_8020D694);
RUNTIME_PPC_JUMP_LABEL(.L_8020D678, 0x8020D678) //this is a jump label
/*8020D678 0020A478*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r31));
/*8020D67C 0020A47C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8020D680 0020A480*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r27));
/*8020D684 0020A484*/ PPC::Runtime::ASM::bl(fn_8005ECA0);
/*8020D688 0020A488*/ PPC::Runtime::ASM::add(context->r4, context->r27, context->r30);
/*8020D68C 0020A48C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa60, context->r4));
/*8020D690 0020A490*/ PPC::Runtime::ASM::b(.L_8020D6A8);
RUNTIME_PPC_JUMP_LABEL(.L_8020D694, 0x8020D694) //this is a jump label
/*8020D694 0020A494*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*8020D698 0020A498*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*8020D69C 0020A49C*/ PPC::Runtime::ASM::add(context->r4, context->r27, context->r0);
/*8020D6A0 0020A4A0*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8020D6A4 0020A4A4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa60, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8020D6A8, 0x8020D6A8) //this is a jump label
/*8020D6A8 0020A4A8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8020D6AC 0020A4AC*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8020D6B0 0020A4B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8020D6B4 0020A4B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020D6B8 0020A4B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8020D6BC 0020A4BC*/ PPC::Runtime::ASM::blr();
}