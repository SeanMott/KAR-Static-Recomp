//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn___TRK_reset(PPC::Runtime::GCContext* context)
{
# .init: //this is a jump label 0x20C0 | 0x800051C0 | size : 0x0
.sym gTRKInterruptVectorTableEnd , global
/*800051C0 000021C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800051C4 000021C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800051C8 000021C8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800051CC 000021CC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800051D0 000021D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800051D4 000021D4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800051D8 000021D8*/ PPC::Runtime::ASM::bl(OSResetSystem);
/*800051DC 000021DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800051E0 000021E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800051E4 000021E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800051E8 000021E8*/ PPC::Runtime::ASM::blr();
}