//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80009FF0(PPC::Runtime::GCContext* context)
{
/*80009FF0 00006DF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80009FF4 00006DF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80009FF8 00006DF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80009FFC 00006DFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8000A000 00006E00*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8000A004 00006E04*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8000A008 00006E08*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8000A00C 00006E0C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000A010 00006E10*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8000A014 00006E14*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A018 00006E18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x833, context->r3));
/*8000A01C 00006E1C*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x834, context->r3));
/*8000A020 00006E20*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8000A024 00006E24*/ PPC::Runtime::ASM::beq(.L_8000A02C);
/*8000A028 00006E28*/ PPC::Runtime::ASM::addi(context->r7, context->r7, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000A02C, 0x8000A02C) //this is a jump label
/*8000A02C 00006E2C*/ PPC::Runtime::ASM::lha(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa9c, context->r3));
/*8000A030 00006E30*/ PPC::Runtime::ASM::lis(context->r4, 0x8889);
/*8000A034 00006E34*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*8000A038 00006E38*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805DE748 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000A03C 00006E3C*/ PPC::Runtime::ASM::subf(context->r5, context->r7, context->r5);
/*8000A040 00006E40*/ PPC::Runtime::ASM::subi(context->r6, context->r4, 0x7777);
/* 8000A044 00006E44  7C 86 28 96 */ mulhw context->r4 , context->r6 , context->r5
/*8000A048 00006E48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000A04C 00006E4C*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DE73C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000A050 00006E50*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DE740 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8000A054 00006E54*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r5);
/*8000A058 00006E58*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 5);
/*8000A05C 00006E5C*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8000A060 00006E60*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8000A064 00006E64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8000A068 00006E68*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa9c, context->r3));
/*8000A06C 00006E6C*/ PPC::Runtime::ASM::subf(context->r5, context->r7, context->r0);
/* 8000A070 00006E70  7C 06 28 96 */ mulhw context->r0 , context->r6 , context->r5
/*8000A074 00006E74*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r5);
/*8000A078 00006E78*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 5);
/*8000A07C 00006E7C*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8000A080 00006E80*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8000A084 00006E84*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3c);
/*8000A088 00006E88*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r5);
/*8000A08C 00006E8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8000A090 00006E90*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x833, context->r3));
/*8000A094 00006E94*/ PPC::Runtime::ASM::subfic(context->r4, context->r0, 0x3c);
/* 8000A098 00006E98  7C 06 20 96 */ mulhw context->r0 , context->r6 , context->r4
/*8000A09C 00006E9C*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8000A0A0 00006EA0*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 5);
/*8000A0A4 00006EA4*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*8000A0A8 00006EA8*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*8000A0AC 00006EAC*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3c);
/*8000A0B0 00006EB0*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r4);
/*8000A0B4 00006EB4*/ PPC::Runtime::ASM::xoris(context->r0, context->r0, 0x8000);
/*8000A0B8 00006EB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000A0BC 00006EBC*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000A0C0 00006EC0*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f2);
/*8000A0C4 00006EC4*/ PPC::Runtime::ASM::fmuls(context->f1, context->f3, context->f1);
/*8000A0C8 00006EC8*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f0);
/*8000A0CC 00006ECC*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f0);
/*8000A0D0 00006ED0*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8000A0D4 00006ED4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A0D8 00006ED8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8000A0DC 00006EDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8000A0E0 00006EE0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*8000A0E4 00006EE4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8000A0E8 00006EE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8000A0EC 00006EEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A0F0 00006EF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8000A0F4 00006EF4*/ PPC::Runtime::ASM::blr();
}