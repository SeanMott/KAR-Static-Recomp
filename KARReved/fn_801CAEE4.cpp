//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D5E34.hpp"



void fn_801CAEE4(PPC::Runtime::GCContext* context)
{
/*801CAEE4 001C7CE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CAEE8 001C7CE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CAEEC 001C7CEC*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*801CAEF0 001C7CF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CAEF4 001C7CF4*/ PPC::Runtime::ASM::beq(.L_801CAF80);
/*801CAEF8 001C7CF8*/ PPC::Runtime::ASM::mulli(context->r5, context->r4, 0x24);
/*801CAEFC 001C7CFC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801CAF00 001C7D00*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x2);
/*801CAF04 001C7D04*/ PPC::Runtime::ASM::add(context->r5, context->r3, context->r5);
/*801CAF08 001C7D08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x970, context->r5));
/*801CAF0C 001C7D0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x974, context->r5));
/*801CAF10 001C7D10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x978, context->r5));
/*801CAF14 001C7D14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x97c, context->r5));
/*801CAF18 001C7D18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x980, context->r5));
/*801CAF1C 001C7D1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x984, context->r5));
/*801CAF20 001C7D20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x988, context->r5));
/*801CAF24 001C7D24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98c, context->r5));
/*801CAF28 001C7D28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x990, context->r5));
/*801CAF2C 001C7D2C*/ PPC::Runtime::ASM::beq(.L_801CAF38);
/*801CAF30 001C7D30*/ PPC::Runtime::ASM::bge(.L_801CAF68);
/*801CAF34 001C7D34*/ PPC::Runtime::ASM::b(.L_801CAF68);
RUNTIME_PPC_JUMP_LABEL(.L_801CAF38, 0x801CAF38) //this is a jump label
/*801CAF38 001C7D38*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r3));
/* 801CAF3C 001C7D3C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801CAF40 001C7D40*/ PPC::Runtime::ASM::beq(.L_801CAF4C);
/*801CAF44 001C7D44*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801CAF48 001C7D48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x790, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_801CAF4C, 0x801CAF4C) //this is a jump label
/*801CAF4C 001C7D4C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r3));
/*801CAF50 001C7D50*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801CAF54 001C7D54*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*801CAF58 001C7D58*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r3));
/*801CAF5C 001C7D5C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r3));
/*801CAF60 001C7D60*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*801CAF64 001C7D64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_801CAF68, 0x801CAF68) //this is a jump label
/*801CAF68 001C7D68*/ PPC::Runtime::ASM::slwi(context->r4, context->r4, 2);
/*801CAF6C 001C7D6C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801CAF70 001C7D70*/ PPC::Runtime::ASM::add(context->r5, context->r3, context->r4);
/*801CAF74 001C7D74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9dc, context->r5));
/*801CAF78 001C7D78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9dc, context->r5));
/*801CAF7C 001C7D7C*/ PPC::Runtime::ASM::bl(fn_801D5E34);
RUNTIME_PPC_JUMP_LABEL(.L_801CAF80, 0x801CAF80) //this is a jump label
/*801CAF80 001C7D80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CAF84 001C7D84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CAF88 001C7D88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CAF8C 001C7D8C*/ PPC::Runtime::ASM::blr();
}