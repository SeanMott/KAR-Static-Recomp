//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A6428.hpp"
#include "fn_80196DF4.hpp"
#include "fn_800550F4.hpp"



void fn_ability_Sword_giveHat(PPC::Runtime::GCContext* context)
{
/*801A6CE4 001A3AE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A6CE8 001A3AE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A6CEC 001A3AEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A6CF0 001A3AF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A6CF4 001A3AF4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A6CF8 001A3AF8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A6CFC 001A3AFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r3));
/*801A6D00 001A3B00*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801A6D04 001A3B04*/ PPC::Runtime::ASM::bne(.L_801A6DA0);
/*801A6D08 001A3B08*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*801A6D0C 001A3B0C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559EE8 @ Get_MemoryOffset_HighBit);
/*801A6D10 001A3B10*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80559EE8 @ Get_MemoryOffset_LowBit);
/*801A6D14 001A3B14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r4));
/*801A6D18 001A3B18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*801A6D1C 001A3B1C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*801A6D20 001A3B20*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x904, context->r30));
/*801A6D24 001A3B24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801A6D28 001A3B28*/ PPC::Runtime::ASM::bl(fn_JObj_LoadJoint);
/*801A6D2C 001A3B2C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r30));
/*801A6D30 001A3B30*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801A6D34 001A3B34*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A6D38 001A3B38*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x900);
/*801A6D3C 001A3B3C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r30));
/*801A6D40 001A3B40*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*801A6D44 001A3B44*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa30, context->r30));
/*801A6D48 001A3B48*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r30));
/*801A6D4C 001A3B4C*/ PPC::Runtime::ASM::bl(fn_801A6428);
/*801A6D50 001A3B50*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x8);
/*801A6D54 001A3B54*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x910);
/*801A6D58 001A3B58*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x900);
/*801A6D5C 001A3B5C*/ PPC::Runtime::ASM::bl(fn_80196DF4);
/*801A6D60 001A3B60*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*801A6D64 001A3B64*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*801A6D68 001A3B68*/ PPC::Runtime::ASM::beq(.L_801A6DA0);
/*801A6D6C 001A3B6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r30));
/*801A6D70 001A3B70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A6D74 001A3B74*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801A6D78 001A3B78*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAddAnimAll);
/*801A6D7C 001A3B7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r30));
/*801A6D80 001A3B80*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1328 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A6D84 001A3B84*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnim);
/*801A6D88 001A3B88*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*801A6D8C 001A3B8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r30));
/*801A6D90 001A3B90*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*801A6D94 001A3B94*/ PPC::Runtime::ASM::bl(fn_800550F4);
/*801A6D98 001A3B98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r30));
/*801A6D9C 001A3B9C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
RUNTIME_PPC_JUMP_LABEL(.L_801A6DA0, 0x801A6DA0) //this is a jump label
/*801A6DA0 001A3BA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A6DA4 001A3BA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A6DA8 001A3BA8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A6DAC 001A3BAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A6DB0 001A3BB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A6DB4 001A3BB4*/ PPC::Runtime::ASM::blr();
}