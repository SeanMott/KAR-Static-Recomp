//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801D5BBC(PPC::Runtime::GCContext* context)
{
/*801D5BBC 001D29BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D5BC0 001D29C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D5BC4 001D29C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5BC8 001D29C8*/ PPC::Runtime::ASM::subi(context->r0, context->r5, 0x19);
/*801D5BCC 001D29CC*/ PPC::Runtime::ASM::mulli(context->r6, context->r0, 0xc);
/*801D5BD0 001D29D0*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0D18 @ Get_MemoryOffset_HighBit);
/*801D5BD4 001D29D4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, lbl_804B0D18 @ Get_MemoryOffset_LowBit);
/*801D5BD8 001D29D8*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r6);
/*801D5BDC 001D29DC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*801D5BE0 001D29E0*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801D5BE4 001D29E4*/ PPC::Runtime::ASM::beq(.L_801D5BF4);
/*801D5BE8 001D29E8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801D5BEC 001D29EC*/ PPC::Runtime::ASM::bctrl();
/*801D5BF0 001D29F0*/ PPC::Runtime::ASM::b(.L_801D5C08);
RUNTIME_PPC_JUMP_LABEL(.L_801D5BF4, 0x801D5BF4) //this is a jump label
/*801D5BF4 001D29F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*801D5BF8 001D29F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*801D5BFC 001D29FC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801D5C00 001D2A00*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*801D5C04 001D2A04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_801D5C08, 0x801D5C08) //this is a jump label
/*801D5C08 001D2A08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5C0C 001D2A0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D5C10 001D2A10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D5C14 001D2A14*/ PPC::Runtime::ASM::blr();
}