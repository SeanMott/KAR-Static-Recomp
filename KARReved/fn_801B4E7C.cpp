//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C7C04.hpp"
#include "fn_801C812C.hpp"
#include "fn_801C8138.hpp"
#include "fn_801B50EC.hpp"



void fn_801B4E7C(PPC::Runtime::GCContext* context)
{
/*801B4E7C 001B1C7C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B4E80 001B1C80*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B4E84 001B1C84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4E88 001B1C88*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4E8C 001B1C8C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B4E90 001B1C90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r3));
/*801B4E94 001B1C94*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x9);
/*801B4E98 001B1C98*/ PPC::Runtime::ASM::bne(.L_801B4EF8);
/*801B4E9C 001B1C9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801B4EA0 001B1CA0*/ PPC::Runtime::ASM::bl(fn_801C7C04);
/*801B4EA4 001B1CA4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B4EA8 001B1CA8*/ PPC::Runtime::ASM::beq(.L_801B4EF8);
/*801B4EAC 001B1CAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801B4EB0 001B1CB0*/ PPC::Runtime::ASM::bl(fn_801C812C);
/*801B4EB4 001B1CB4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B4EB8 001B1CB8*/ PPC::Runtime::ASM::ble(.L_801B4ED0);
/*801B4EBC 001B1CBC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4EC0 001B1CC0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801B4EC4 001B1CC4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B4EC8 001B1CC8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4ECC 001B1CCC*/ PPC::Runtime::ASM::b(.L_801B4EE0);
RUNTIME_PPC_JUMP_LABEL(.L_801B4ED0, 0x801B4ED0) //this is a jump label
/*801B4ED0 001B1CD0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B4ED4 001B1CD4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801B4ED8 001B1CD8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B4EDC 001B1CDC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B4EE0, 0x801B4EE0) //this is a jump label
/*801B4EE0 001B1CE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801B4EE4 001B1CE4*/ PPC::Runtime::ASM::bl(fn_801C8138);
/*801B4EE8 001B1CE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4EEC 001B1CEC*/ PPC::Runtime::ASM::bl(fn_801B50EC);
/*801B4EF0 001B1CF0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801B4EF4 001B1CF4*/ PPC::Runtime::ASM::b(.L_801B4EFC);
RUNTIME_PPC_JUMP_LABEL(.L_801B4EF8, 0x801B4EF8) //this is a jump label
/*801B4EF8 001B1CF8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801B4EFC, 0x801B4EFC) //this is a jump label
/*801B4EFC 001B1CFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4F00 001B1D00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4F04 001B1D04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B4F08 001B1D08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B4F0C 001B1D0C*/ PPC::Runtime::ASM::blr();
}