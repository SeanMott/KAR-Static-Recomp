//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F446C.hpp"
#include "fn_800FEB58.hpp"



void fn_800FEB20(PPC::Runtime::GCContext* context)
{
/*800FEB20 000FB920*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FEB24 000FB924*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FEB28 000FB928*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEB2C 000FB92C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FEB30 000FB930*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800FEB34 000FB934*/ PPC::Runtime::ASM::li(context->r3, 0x2f);
/*800FEB38 000FB938*/ PPC::Runtime::ASM::bl(fn_800F446C);
/*800FEB3C 000FB93C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800FEB40 000FB940*/ PPC::Runtime::ASM::bl(fn_800FEB58);
/*800FEB44 000FB944*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEB48 000FB948*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FEB4C 000FB94C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FEB50 000FB950*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FEB54 000FB954*/ PPC::Runtime::ASM::blr();
}