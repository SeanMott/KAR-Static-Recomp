//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_801798B0(PPC::Runtime::GCContext* context)
{
/*801798B0 001766B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801798B4 001766B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801798B8 001766B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801798BC 001766BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801798C0 001766C0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801798C4 001766C4*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801798C8 001766C8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801798CC 001766CC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801798D0 001766D0*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801798D4, 0x801798D4) //this is a jump label
/*801798D4 001766D4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801798D8 001766D8*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*801798DC 001766DC*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 2);
/*801798E0 001766E0*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*801798E4 001766E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd9c, context->r31));
/*801798E8 001766E8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801798EC 001766EC*/ PPC::Runtime::ASM::beq(.L_801798F8);
/*801798F0 001766F0*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801798F4 001766F4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd9c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801798F8, 0x801798F8) //this is a jump label
/*801798F8 001766F8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801798FC 001766FC*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*80179900 00176700*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdb0, context->r31));
/*80179904 00176704*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80179908 00176708*/ PPC::Runtime::ASM::beq(.L_80179914);
/*8017990C 0017670C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80179910 00176710*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdb0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80179914, 0x80179914) //this is a jump label
/*80179914 00176714*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80179918 00176718*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x5);
/*8017991C 0017671C*/ PPC::Runtime::ASM::blt(.L_801798D4);
/*80179920 00176720*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80179924 00176724*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80179928 00176728*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8017992C 0017672C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80179930 00176730*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80179934 00176734*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80179938 00176738*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8017993C 0017673C*/ PPC::Runtime::ASM::blr();
}