//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80071290(PPC::Runtime::GCContext* context)
{
/*80071290 0006E090*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80071294 0006E094*/ PPC::Runtime::ASM::mflr(context->r0);
/*80071298 0006E098*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8007129C 0006E09C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800712A0 0006E0A0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800712A4 0006E0A4*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD5C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800712A8 0006E0A8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*800712AC 0006E0AC*/ PPC::Runtime::ASM::bne(.L_800712BC);
/*800712B0 0006E0B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800712B4 0006E0B4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD5C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800712B8 0006E0B8*/ PPC::Runtime::ASM::b(.L_80071310);
RUNTIME_PPC_JUMP_LABEL(.L_800712BC, 0x800712BC) //this is a jump label
/*800712BC 0006E0BC*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*800712C0 0006E0C0*/ PPC::Runtime::ASM::b(.L_800712E0);
RUNTIME_PPC_JUMP_LABEL(.L_800712C4, 0x800712C4) //this is a jump label
/*800712C4 0006E0C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800712C8 0006E0C8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*800712CC 0006E0CC*/ PPC::Runtime::ASM::bne(.L_800712DC);
/*800712D0 0006E0D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800712D4 0006E0D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800712D8 0006E0D8*/ PPC::Runtime::ASM::b(.L_80071310);
RUNTIME_PPC_JUMP_LABEL(.L_800712DC, 0x800712DC) //this is a jump label
/*800712DC 0006E0DC*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_800712E0, 0x800712E0) //this is a jump label
/*800712E0 0006E0E0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800712E4 0006E0E4*/ PPC::Runtime::ASM::bne(.L_800712C4);
/*800712E8 0006E0E8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_238 @ Get_MemoryOffset_HighBit);
/*800712EC 0006E0EC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800712F0 0006E0F0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_238 @ Get_MemoryOffset_LowBit);
/*800712F4 0006E0F4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800712F8 0006E0F8*/ PPC::Runtime::ASM::bl(OSReport);
/*800712FC 0006E0FC*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_239 @ Get_MemoryOffset_HighBit);
/*80071300 0006E100*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*80071304 0006E104*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_239 @ Get_MemoryOffset_LowBit);
/*80071308 0006E108*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5390 @ Get_MemoryOffset_SDA21);
/*8007130C 0006E10C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80071310, 0x80071310) //this is a jump label
/*80071310 0006E110*/ PPC::Runtime::ASM::lis(context->r3, lbl_80550ED8 @ Get_MemoryOffset_HighBit);
/*80071314 0006E114*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80071318 0006E118*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80550ED8 @ Get_MemoryOffset_LowBit);
/*8007131C 0006E11C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*80071320 0006E120*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80071324 0006E124*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80071328 0006E128*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8007132C 0006E12C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80071330 0006E130*/ PPC::Runtime::ASM::blr();
}