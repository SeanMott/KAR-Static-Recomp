//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSLockMutex.hpp"
#include "fn_8045BCA4.hpp"
#include "fn_8045BCA4.hpp"
#include "fn_OSUnlockMutex.hpp"
#include "fn_8045BFAC.hpp"



void fn_8045A238(PPC::Runtime::GCContext* context)
{
/*8045A238 00457038*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8045A23C 0045703C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045A240 00457040*/ PPC::Runtime::ASM::lis(context->r5, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_HighBit);
/*8045A244 00457044*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045A248 00457048*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045A24C 0045704C*/ PPC::Runtime::ASM::addi(context->r31, context->r5, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_LowBit);
/*8045A250 00457050*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8045A254 00457054*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045A258 00457058*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8045A25C 0045705C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x5b8);
/*8045A260 00457060*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8045A264 00457064*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*8045A268 00457068*/ PPC::Runtime::ASM::bl(fn_OSLockMutex);
/*8045A26C 0045706C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_HighBit);
/*8045A270 00457070*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_LowBit);
/*8045A274 00457074*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r4));
/*8045A278 00457078*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x504, context->r4));
/*8045A27C 0045707C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x1);
/*8045A280 00457080*/ PPC::Runtime::ASM::slwi(context->r3, context->r4, 28);
/*8045A284 00457084*/ PPC::Runtime::ASM::srwi(context->r4, context->r4, 31);
/*8045A288 00457088*/ PPC::Runtime::ASM::subf(context->r3, context->r4, context->r3);
/*8045A28C 0045708C*/ PPC::Runtime::ASM::rotlwi(context->r3, context->r3, 4);
/*8045A290 00457090*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r4);
/*8045A294 00457094*/ PPC::Runtime::ASM::cmpw(context->r0, context->r30);
/*8045A298 00457098*/ PPC::Runtime::ASM::bne(.L_8045A2A4);
/*8045A29C 0045709C*/ PPC::Runtime::ASM::li(context->r29, -0x1);
/*8045A2A0 004570A0*/ PPC::Runtime::ASM::b(.L_8045A334);
RUNTIME_PPC_JUMP_LABEL(.L_8045A2A4, 0x8045A2A4) //this is a jump label
/*8045A2A4 004570A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A2A8 004570A8*/ PPC::Runtime::ASM::li(context->r7, 0x6);
/*8045A2AC 004570AC*/ PPC::Runtime::ASM::li(context->r6, 0xb);
/*8045A2B0 004570B0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8045A2B4 004570B4*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x50);
/*8045A2B8 004570B8*/ PPC::Runtime::ASM::li(context->r5, 0x20);
/*8045A2BC 004570BC*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8045A2C0 004570C0*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8045A2C4 004570C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A2C8 004570C8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x50);
/*8045A2CC 004570CC*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8045A2D0 004570D0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8045A2D4 004570D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A2D8 004570D8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x50);
/*8045A2DC 004570DC*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8045A2E0 004570E0*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8045A2E4 004570E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A2E8 004570E8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x50);
/*8045A2EC 004570EC*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*8045A2F0 004570F0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*8045A2F4 004570F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A2F8 004570F8*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0x50);
/*8045A2FC 004570FC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x14);
/*8045A300 00457100*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*8045A304 00457104*/ PPC::Runtime::ASM::bl(fn_8045BCA4);
/*8045A308 00457108*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A30C 0045710C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8045A310 00457110*/ PPC::Runtime::ASM::li(context->r5, 0x20);
/*8045A314 00457114*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0x50);
/*8045A318 00457118*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x34);
/*8045A31C 0045711C*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*8045A320 00457120*/ PPC::Runtime::ASM::bl(fn_8045BCA4);
/*8045A324 00457124*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
/*8045A328 00457128*/ PPC::Runtime::ASM::li(context->r0, 0xb);
/*8045A32C 0045712C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x598, context->r31));
/*8045A330 00457130*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x508, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8045A334, 0x8045A334) //this is a jump label
/*8045A334 00457134*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x5b8);
/*8045A338 00457138*/ PPC::Runtime::ASM::bl(fn_OSUnlockMutex);
/*8045A33C 0045713C*/ PPC::Runtime::ASM::bl(fn_8045BFAC);
/*8045A340 00457140*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045A344 00457144*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8045A348 00457148*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045A34C 0045714C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8045A350 00457150*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045A354 00457154*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8045A358 00457158*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045A35C 0045715C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8045A360 00457160*/ PPC::Runtime::ASM::blr();
}