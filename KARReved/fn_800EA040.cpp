//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005E08C.hpp"



void fn_800EA040(PPC::Runtime::GCContext* context)
{
/*800EA040 000E6E40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EA044 000E6E44*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EA048 000E6E48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA04C 000E6E4C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800EA050 000E6E50*/ PPC::Runtime::ASM::bl(fn_8005E08C);
/*800EA054 000E6E54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA058 000E6E58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EA05C 000E6E5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EA060 000E6E60*/ PPC::Runtime::ASM::blr();
}