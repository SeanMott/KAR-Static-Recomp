//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"



void fn_8044A010(PPC::Runtime::GCContext* context)
{
/*8044A010 00446E10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8044A014 00446E14*/ PPC::Runtime::ASM::mflr(context->r0);
/*8044A018 00446E18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8044A01C 00446E1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8044A020 00446E20*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8044A024 00446E24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8044A028 00446E28*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x2);
/*8044A02C 00446E2C*/ PPC::Runtime::ASM::beq(.L_8044A044);
/*8044A030 00446E30*/ PPC::Runtime::ASM::lis(context->r4, lbl_80509398 @ Get_MemoryOffset_HighBit);
/*8044A034 00446E34*/ PPC::Runtime::ASM::li(context->r3, String_ "synth." Get_MemoryOffset_SDA21);
/*8044A038 00446E38*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_80509398 @ Get_MemoryOffset_LowBit);
/*8044A03C 00446E3C*/ PPC::Runtime::ASM::li(context->r4, 0x845);
/*8044A040 00446E40*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8044A044, 0x8044A044) //this is a jump label
/*8044A044 00446E44*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE50C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8044A048 00446E48*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*8044A04C 00446E4C*/ PPC::Runtime::ASM::b(.L_8044A05C);
RUNTIME_PPC_JUMP_LABEL(.L_8044A050, 0x8044A050) //this is a jump label
/*8044A050 00446E50*/ PPC::Runtime::ASM::cmplw(context->r3, context->r31);
/*8044A054 00446E54*/ PPC::Runtime::ASM::beq(.L_8044A06C);
/*8044A058 00446E58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8044A05C, 0x8044A05C) //this is a jump label
/*8044A05C 00446E5C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8044A060 00446E60*/ PPC::Runtime::ASM::bne(.L_8044A050);
/*8044A064 00446E64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8044A068 00446E68*/ PPC::Runtime::ASM::stw(context->r31, STRUCT_BYTE4_COUNT_1805DE50C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8044A06C, 0x8044A06C) //this is a jump label
/*8044A06C 00446E6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8044A070 00446E70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8044A074 00446E74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8044A078 00446E78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8044A07C 00446E7C*/ PPC::Runtime::ASM::blr();
}