//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_grGetStageScale.hpp"
#include "fn_800E3AA0.hpp"
#include "fn_800DA3D4.hpp"
#include "fn_800DA3D4.hpp"
#include "fn_800E3CB8.hpp"
#include "fn_8000A2A0.hpp"
#include "fn_800DA5C8.hpp"
#include "fn_800DA5C8.hpp"
#include "fn_800E3CB8.hpp"
#include "fn_8000A2A0.hpp"



void fn_800E506C(PPC::Runtime::GCContext* context)
{
/*800E506C 000E1E6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x1c0, context->r1));
/*800E5070 000E1E70*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E5074 000E1E74*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_948 @ Get_MemoryOffset_HighBit);
/*800E5078 000E1E78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c4, context->r1));
/*800E507C 000E1E7C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b8, context->r1));
/*800E5080 000E1E80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4, context->r1));
/*800E5084 000E1E84*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_948 @ Get_MemoryOffset_LowBit);
/*800E5088 000E1E88*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b0, context->r1));
/*800E508C 000E1E8C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac, context->r1));
/*800E5090 000E1E90*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800E5094 000E1E94*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a8, context->r1));
/*800E5098 000E1E98*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800E509C 000E1E9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E50A0 000E1EA0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800E50A4 000E1EA4*/ PPC::Runtime::ASM::bl(fn_grGetStageScale);
/*800E50A8 000E1EA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E50AC 000E1EAC*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800E50B0 000E1EB0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E50B4 000E1EB4*/ PPC::Runtime::ASM::beq(.L_800E50F0);
/*800E50B8 000E1EB8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800E50BC 000E1EBC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*800E50C0 000E1EC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E50C4 000E1EC4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800E50C8 000E1EC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800E50CC 000E1ECC*/ PPC::Runtime::ASM::bl(fn_800E3AA0);
/*800E50D0 000E1ED0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E50D4 000E1ED4*/ PPC::Runtime::ASM::addi(context->r29, context->r1, 0xc);
/*800E50D8 000E1ED8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x64);
/*800E50DC 000E1EDC*/ PPC::Runtime::ASM::ble(.L_800E50F0);
/*800E50E0 000E1EE0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800E50E4 000E1EE4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xc);
/*800E50E8 000E1EE8*/ PPC::Runtime::ASM::li(context->r4, 0x17b);
/*800E50EC 000E1EEC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E50F0, 0x800E50F0) //this is a jump label
/*800E50F0 000E1EF0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E50F4 000E1EF4*/ PPC::Runtime::ASM::bl(fn_800DA3D4);
/*800E50F8 000E1EF8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E50FC 000E1EFC*/ PPC::Runtime::ASM::beq(.L_800E5154);
/*800E5100 000E1F00*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E5104 000E1F04*/ PPC::Runtime::ASM::bl(fn_800DA3D4);
/*800E5108 000E1F08*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800E510C 000E1F0C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800E5110 000E1F10*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800E5114 000E1F14*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x134);
/*800E5118 000E1F18*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*800E511C 000E1F1C*/ PPC::Runtime::ASM::bl(fn_800E3CB8);
/*800E5120 000E1F20*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*800E5124 000E1F24*/ PPC::Runtime::ASM::beq(.L_800E5154);
/*800E5128 000E1F28*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800E512C 000E1F2C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xfc);
/*800E5130 000E1F30*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800E5134 000E1F34*/ PPC::Runtime::ASM::bl(OSReport);
/*800E5138 000E1F38*/ PPC::Runtime::ASM::bl(fn_8000A2A0);
/*800E513C 000E1F3C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E5140 000E1F40*/ PPC::Runtime::ASM::bne(.L_800E5154);
/*800E5144 000E1F44*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800E5148 000E1F48*/ PPC::Runtime::ASM::li(context->r4, 0x186);
/*800E514C 000E1F4C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6130 @ Get_MemoryOffset_SDA21);
/*800E5150 000E1F50*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E5154, 0x800E5154) //this is a jump label
/*800E5154 000E1F54*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E5158 000E1F58*/ PPC::Runtime::ASM::bl(fn_800DA5C8);
/*800E515C 000E1F5C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E5160 000E1F60*/ PPC::Runtime::ASM::beq(.L_800E51B8);
/*800E5164 000E1F64*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800E5168 000E1F68*/ PPC::Runtime::ASM::bl(fn_800DA5C8);
/*800E516C 000E1F6C*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800E5170 000E1F70*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800E5174 000E1F74*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800E5178 000E1F78*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x150);
/*800E517C 000E1F7C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*800E5180 000E1F80*/ PPC::Runtime::ASM::bl(fn_800E3CB8);
/*800E5184 000E1F84*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*800E5188 000E1F88*/ PPC::Runtime::ASM::beq(.L_800E51B8);
/*800E518C 000E1F8C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800E5190 000E1F90*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x110);
/*800E5194 000E1F94*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800E5198 000E1F98*/ PPC::Runtime::ASM::bl(OSReport);
/*800E519C 000E1F9C*/ PPC::Runtime::ASM::bl(fn_8000A2A0);
/*800E51A0 000E1FA0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E51A4 000E1FA4*/ PPC::Runtime::ASM::bne(.L_800E51B8);
/*800E51A8 000E1FA8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*800E51AC 000E1FAC*/ PPC::Runtime::ASM::li(context->r4, 0x190);
/*800E51B0 000E1FB0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6130 @ Get_MemoryOffset_SDA21);
/*800E51B4 000E1FB4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E51B8, 0x800E51B8) //this is a jump label
/*800E51B8 000E1FB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c4, context->r1));
/*800E51BC 000E1FBC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b8, context->r1));
/*800E51C0 000E1FC0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4, context->r1));
/*800E51C4 000E1FC4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b0, context->r1));
/*800E51C8 000E1FC8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac, context->r1));
/*800E51CC 000E1FCC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a8, context->r1));
/*800E51D0 000E1FD0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E51D4 000E1FD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x1c0);
/*800E51D8 000E1FD8*/ PPC::Runtime::ASM::blr();
}