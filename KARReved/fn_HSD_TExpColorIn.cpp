//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_TExpColorInSub.hpp"
#include "fn_HSD_TExpColorInSub.hpp"
#include "fn_HSD_TExpColorInSub.hpp"
#include "fn_HSD_TExpColorInSub.hpp"



void fn_HSD_TExpColorIn(PPC::Runtime::GCContext* context)
{
/*80422A88 0041F888*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80422A8C 0041F88C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80422A90 0041F890*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80422A94 0041F894*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80422A98 0041F898*/ PPC::Runtime::ASM::bl(_savegpr_23);
/* 80422A9C 0041F89C  7C 77 1B 79 */ mr. context->r23 , context->r3
/*80422AA0 0041F8A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80422AA4 0041F8A4*/ PPC::Runtime::ASM::mr(context->r24, context->r4);
/*80422AA8 0041F8A8*/ PPC::Runtime::ASM::mr(context->r25, context->r5);
/*80422AAC 0041F8AC*/ PPC::Runtime::ASM::mr(context->r26, context->r6);
/*80422AB0 0041F8B0*/ PPC::Runtime::ASM::mr(context->r27, context->r7);
/*80422AB4 0041F8B4*/ PPC::Runtime::ASM::mr(context->r28, context->r8);
/*80422AB8 0041F8B8*/ PPC::Runtime::ASM::mr(context->r29, context->r9);
/*80422ABC 0041F8BC*/ PPC::Runtime::ASM::mr(context->r30, context->r10);
/*80422AC0 0041F8C0*/ PPC::Runtime::ASM::bne(.L_80422AD4);
/*80422AC4 0041F8C4*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_480 @ Get_MemoryOffset_SDA21);
/*80422AC8 0041F8C8*/ PPC::Runtime::ASM::li(context->r4, 0x2b5);
/*80422ACC 0041F8CC*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_479 @ Get_MemoryOffset_SDA21);
/*80422AD0 0041F8D0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80422AD4, 0x80422AD4) //this is a jump label
/*80422AD4 0041F8D4*/ PPC::Runtime::ASM::cmplwi(context->r23, 0x0);
/*80422AD8 0041F8D8*/ PPC::Runtime::ASM::bne(.L_80422AE4);
/*80422ADC 0041F8DC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80422AE0 0041F8E0*/ PPC::Runtime::ASM::b(.L_80422B0C);
RUNTIME_PPC_JUMP_LABEL(.L_80422AE4, 0x80422AE4) //this is a jump label
/*80422AE4 0041F8E4*/ PPC::Runtime::ASM::addis(context->r0, context->r23, 0x1);
/*80422AE8 0041F8E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*80422AEC 0041F8EC*/ PPC::Runtime::ASM::bne(.L_80422AF8);
/*80422AF0 0041F8F0*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80422AF4 0041F8F4*/ PPC::Runtime::ASM::b(.L_80422B0C);
RUNTIME_PPC_JUMP_LABEL(.L_80422AF8, 0x80422AF8) //this is a jump label
/*80422AF8 0041F8F8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xfffe);
/*80422AFC 0041F8FC*/ PPC::Runtime::ASM::bne(.L_80422B08);
/*80422B00 0041F900*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*80422B04 0041F904*/ PPC::Runtime::ASM::b(.L_80422B0C);
RUNTIME_PPC_JUMP_LABEL(.L_80422B08, 0x80422B08) //this is a jump label
/*80422B08 0041F908*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r23));
RUNTIME_PPC_JUMP_LABEL(.L_80422B0C, 0x80422B0C) //this is a jump label
/*80422B0C 0041F90C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80422B10 0041F910*/ PPC::Runtime::ASM::beq(.L_80422B28);
/*80422B14 0041F914*/ PPC::Runtime::ASM::lis(context->r4, lbl_80504978 @ Get_MemoryOffset_HighBit);
/*80422B18 0041F918*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_480 @ Get_MemoryOffset_SDA21);
/*80422B1C 0041F91C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_80504978 @ Get_MemoryOffset_LowBit);
/*80422B20 0041F920*/ PPC::Runtime::ASM::li(context->r4, 0x2b6);
/*80422B24 0041F924*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80422B28, 0x80422B28) //this is a jump label
/*80422B28 0041F928*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80422B2C 0041F92C*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*80422B30 0041F930*/ PPC::Runtime::ASM::mr(context->r5, context->r25);
/*80422B34 0041F934*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80422B38 0041F938*/ PPC::Runtime::ASM::bl(fn_HSD_TExpColorInSub);
/*80422B3C 0041F93C*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80422B40 0041F940*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*80422B44 0041F944*/ PPC::Runtime::ASM::mr(context->r5, context->r27);
/*80422B48 0041F948*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*80422B4C 0041F94C*/ PPC::Runtime::ASM::bl(fn_HSD_TExpColorInSub);
/*80422B50 0041F950*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80422B54 0041F954*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*80422B58 0041F958*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*80422B5C 0041F95C*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*80422B60 0041F960*/ PPC::Runtime::ASM::bl(fn_HSD_TExpColorInSub);
/*80422B64 0041F964*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80422B68 0041F968*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80422B6C 0041F96C*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80422B70 0041F970*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*80422B74 0041F974*/ PPC::Runtime::ASM::bl(fn_HSD_TExpColorInSub);
/*80422B78 0041F978*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80422B7C 0041F97C*/ PPC::Runtime::ASM::bl(_restgpr_23);
/*80422B80 0041F980*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80422B84 0041F984*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80422B88 0041F988*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80422B8C 0041F98C*/ PPC::Runtime::ASM::blr();
}