//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A0470.hpp"
#include "fn_801A0430.hpp"
#include "fn_dededeReleaseCharge.hpp"
#include "fn_801A0444.hpp"
#include "fn_801BEEDC.hpp"



void fn_801BF350(PPC::Runtime::GCContext* context)
{
/*801BF350 001BC150*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BF354 001BC154*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BF358 001BC158*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF35C 001BC15C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF360 001BC160*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BF364 001BC164*/ PPC::Runtime::ASM::bl(fn_801A0470);
/*801BF368 001BC168*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF36C 001BC16C*/ PPC::Runtime::ASM::bl(fn_801A0430);
/*801BF370 001BC170*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BF374 001BC174*/ PPC::Runtime::ASM::beq(.L_801BF384);
/*801BF378 001BC178*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF37C 001BC17C*/ PPC::Runtime::ASM::bl(fn_dededeReleaseCharge);
/*801BF380 001BC180*/ PPC::Runtime::ASM::b(.L_801BF39C);
RUNTIME_PPC_JUMP_LABEL(.L_801BF384, 0x801BF384) //this is a jump label
/*801BF384 001BC184*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF388 001BC188*/ PPC::Runtime::ASM::bl(fn_801A0444);
/*801BF38C 001BC18C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BF390 001BC190*/ PPC::Runtime::ASM::beq(.L_801BF39C);
/*801BF394 001BC194*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF398 001BC198*/ PPC::Runtime::ASM::bl(fn_801BEEDC);
RUNTIME_PPC_JUMP_LABEL(.L_801BF39C, 0x801BF39C) //this is a jump label
/*801BF39C 001BC19C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF3A0 001BC1A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF3A4 001BC1A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BF3A8 001BC1A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BF3AC 001BC1AC*/ PPC::Runtime::ASM::blr();
}