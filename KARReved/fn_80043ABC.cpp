//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_80136AF0.hpp"
#include "fn_80136FD8.hpp"
#include "fn_80137470.hpp"
#include "fn_80071D7C.hpp"
#include "fn_8005E5D0.hpp"



void fn_80043ABC(PPC::Runtime::GCContext* context)
{
/*80043ABC 000408BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80043AC0 000408C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80043AC4 000408C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80043AC8 000408C8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80043ACC 000408CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b4, context->r3));
/*80043AD0 000408D0*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80043AD4 000408D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80043AD8 000408D8*/ PPC::Runtime::ASM::bgt(.L_80043AE4);
/*80043ADC 000408DC*/ PPC::Runtime::ASM::bl(fn_80136AF0);
/*80043AE0 000408E0*/ PPC::Runtime::ASM::b(.L_80043AF8);
RUNTIME_PPC_JUMP_LABEL(.L_80043AE4, 0x80043AE4) //this is a jump label
/*80043AE4 000408E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80043AE8 000408E8*/ PPC::Runtime::ASM::bne(.L_80043AF4);
/*80043AEC 000408EC*/ PPC::Runtime::ASM::bl(fn_80136FD8);
/*80043AF0 000408F0*/ PPC::Runtime::ASM::b(.L_80043AF8);
RUNTIME_PPC_JUMP_LABEL(.L_80043AF4, 0x80043AF4) //this is a jump label
/*80043AF4 000408F4*/ PPC::Runtime::ASM::bl(fn_80137470);
RUNTIME_PPC_JUMP_LABEL(.L_80043AF8, 0x80043AF8) //this is a jump label
/*80043AF8 000408F8*/ PPC::Runtime::ASM::bl(fn_80071D7C);
/*80043AFC 000408FC*/ PPC::Runtime::ASM::bl(fn_8005E5D0);
/*80043B00 00040900*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80043B04 00040904*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80043B08 00040908*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80043B0C 0004090C*/ PPC::Runtime::ASM::blr();
}