//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800CF598(PPC::Runtime::GCContext* context)
{
/*800CF598 000CC398*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800CF59C 000CC39C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CF5A0 000CC3A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CF5A4 000CC3A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CF5A8 000CC3A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CF5AC 000CC3AC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800CF5B0 000CC3B0*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CF5B4 000CC3B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CF5B8 000CC3B8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800CF5BC 000CC3BC*/ PPC::Runtime::ASM::bne(.L_800CF5D4);
/*800CF5C0 000CC3C0*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_901 @ Get_MemoryOffset_HighBit);
/*800CF5C4 000CC3C4*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800CF5C8 000CC3C8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_901 @ Get_MemoryOffset_LowBit);
/*800CF5CC 000CC3CC*/ PPC::Runtime::ASM::li(context->r4, 0x23d);
/*800CF5D0 000CC3D0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF5D4, 0x800CF5D4) //this is a jump label
/*800CF5D4 000CC3D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CF5D8 000CC3D8*/ PPC::Runtime::ASM::mulli(context->r0, context->r30, 0x18);
/*800CF5DC 000CC3DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800CF5E0 000CC3E0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800CF5E4 000CC3E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800CF5E8 000CC3E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800CF5EC 000CC3EC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CF5F0 000CC3F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CF5F4 000CC3F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CF5F8 000CC3F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800CF5FC 000CC3FC*/ PPC::Runtime::ASM::blr();
}