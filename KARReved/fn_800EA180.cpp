//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005E108.hpp"
#include "fn_8005E7D8.hpp"



void fn_800EA180(PPC::Runtime::GCContext* context)
{
/*800EA180 000E6F80*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EA184 000E6F84*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EA188 000E6F88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA18C 000E6F8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EA190 000E6F90*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800EA194 000E6F94*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800EA198 000E6F98*/ PPC::Runtime::ASM::bl(fn_8005E108);
/*800EA19C 000E6F9C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800EA1A0 000E6FA0*/ PPC::Runtime::ASM::beq(.L_800EA1B8);
/*800EA1A4 000E6FA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EA1A8 000E6FA8*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
/*800EA1AC 000E6FAC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800EA1B0 000E6FB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EA1B4 000E6FB4*/ PPC::Runtime::ASM::b(.L_800EA1BC);
RUNTIME_PPC_JUMP_LABEL(.L_800EA1B8, 0x800EA1B8) //this is a jump label
/*800EA1B8 000E6FB8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800EA1BC, 0x800EA1BC) //this is a jump label
/*800EA1BC 000E6FBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA1C0 000E6FC0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EA1C4 000E6FC4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EA1C8 000E6FC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EA1CC 000E6FCC*/ PPC::Runtime::ASM::blr();
}