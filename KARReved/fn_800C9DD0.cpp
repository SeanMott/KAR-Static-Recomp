//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5B94.hpp"
#include "fn_800B5AF0.hpp"
#include "fn_800B5B44.hpp"



void fn_800C9DD0(PPC::Runtime::GCContext* context)
{
/*800C9DD0 000C6BD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800C9DD4 000C6BD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C9DD8 000C6BD8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800C9DDC 000C6BDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C9DE0 000C6BE0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C9DE4 000C6BE4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800C9DE8 000C6BE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r3));
/*800C9DEC 000C6BEC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa9, context->r4));
/* 800C9DF0 000C6BF0  54 00 E7 FF */ extrwi. context->r0 , context->r0 , 1 , 27
/*800C9DF4 000C6BF4*/ PPC::Runtime::ASM::beq(.L_800C9E3C);
/*800C9DF8 000C6BF8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800C9DFC 000C6BFC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800C9E00 000C6C00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x184, context->r31));
/*800C9E04 000C6C04*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r31));
/*800C9E08 000C6C08*/ PPC::Runtime::ASM::bl(fn_800B5B94);
/*800C9E0C 000C6C0C*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800C9E10 000C6C10*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800C9E14 000C6C14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x234, context->r3));
/*800C9E18 000C6C18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x384, context->r3));
/*800C9E1C 000C6C1C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x1);
/*800C9E20 000C6C20*/ PPC::Runtime::ASM::bge(.L_800C9E30);
/*800C9E24 000C6C24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800C9E28 000C6C28*/ PPC::Runtime::ASM::bl(fn_800B5AF0);
/*800C9E2C 000C6C2C*/ PPC::Runtime::ASM::b(.L_800C9E38);
RUNTIME_PPC_JUMP_LABEL(.L_800C9E30, 0x800C9E30) //this is a jump label
/*800C9E30 000C6C30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800C9E34 000C6C34*/ PPC::Runtime::ASM::bl(fn_800B5B44);
RUNTIME_PPC_JUMP_LABEL(.L_800C9E38, 0x800C9E38) //this is a jump label
/*800C9E38 000C6C38*/ PPC::Runtime::ASM::li(context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800C9E3C, 0x800C9E3C) //this is a jump label
/*800C9E3C 000C6C3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800C9E40 000C6C40*/ PPC::Runtime::ASM::mr(context->r3, context->r5);
/*800C9E44 000C6C44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C9E48 000C6C48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C9E4C 000C6C4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800C9E50 000C6C50*/ PPC::Runtime::ASM::blr();
}