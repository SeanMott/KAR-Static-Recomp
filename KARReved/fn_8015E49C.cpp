//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013121C.hpp"
#include "fn_80059520.hpp"



void fn_8015E49C(PPC::Runtime::GCContext* context)
{
/*8015E49C 0015B29C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015E4A0 0015B2A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015E4A4 0015B2A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E4A8 0015B2A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015E4AC 0015B2AC*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015E4B0 0015B2B0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015E4B4 0015B2B4*/ PPC::Runtime::ASM::bl(fn_8013121C);
/*8015E4B8 0015B2B8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1262 @ Get_MemoryOffset_HighBit);
/*8015E4BC 0015B2BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8015E4C0 0015B2C0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1262 @ Get_MemoryOffset_LowBit);
/*8015E4C4 0015B2C4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8015E4C8 0015B2C8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x8bc);
/*8015E4CC 0015B2CC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8015E4D0 0015B2D0*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8015E4D4 0015B2D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E4D8 0015B2D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015E4DC 0015B2DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015E4E0 0015B2E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015E4E4 0015B2E4*/ PPC::Runtime::ASM::blr();
}