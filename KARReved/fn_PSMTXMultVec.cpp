//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_PSMTXMultVec(PPC::Runtime::GCContext* context)
{
/*803D1DEC 003CEBEC*/ PPC::Runtime::ASM::psq_l(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4)0, context->qr0);
/*803D1DF0 003CEBF0*/ PPC::Runtime::ASM::psq_l(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3)0, context->qr0);
/*803D1DF4 003CEBF4*/ PPC::Runtime::ASM::psq_l(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4)1, context->qr0);
/* 803D1DF8 003CEBF8  10 82 00 32 */ ps_mul context->f4 , context->f2 , context->f0
/*803D1DFC 003CEBFC*/ PPC::Runtime::ASM::psq_l(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3)0, context->qr0);
/* 803D1E00 003CEC00  10 A3 20 7A */ ps_madd context->f5 , context->f3 , context->f1 , context->f4
/*803D1E04 003CEC04*/ PPC::Runtime::ASM::psq_l(context->f8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3)0, context->qr0);
/* 803D1E08 003CEC08  10 C5 29 94 */ ps_sum0 context->f6 , context->f5 , context->f6 , context->f5
/*803D1E0C 003CEC0C*/ PPC::Runtime::ASM::psq_l(context->f9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3)0, context->qr0);
/* 803D1E10 003CEC10  11 48 00 32 */ ps_mul context->f10 , context->f8 , context->f0
/*803D1E14 003CEC14*/ PPC::Runtime::ASM::psq_st(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5)1, context->qr0);
/* 803D1E18 003CEC18  11 69 50 7A */ ps_madd context->f11 , context->f9 , context->f1 , context->f10
/*803D1E1C 003CEC1C*/ PPC::Runtime::ASM::psq_l(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3)0, context->qr0);
/* 803D1E20 003CEC20  11 8B 5B 14 */ ps_sum0 context->f12 , context->f11 , context->f12 , context->f11
/*803D1E24 003CEC24*/ PPC::Runtime::ASM::psq_l(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3)0, context->qr0);
/* 803D1E28 003CEC28  10 82 00 32 */ ps_mul context->f4 , context->f2 , context->f0
/*803D1E2C 003CEC2C*/ PPC::Runtime::ASM::psq_st(context->f12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5)1, context->qr0);
/* 803D1E30 003CEC30  10 A3 20 7A */ ps_madd context->f5 , context->f3 , context->f1 , context->f4
/* 803D1E34 003CEC34  10 C5 29 94 */ ps_sum0 context->f6 , context->f5 , context->f6 , context->f5
/*803D1E38 003CEC38*/ PPC::Runtime::ASM::psq_st(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5)1, context->qr0);
/*803D1E3C 003CEC3C*/ PPC::Runtime::ASM::blr();
}