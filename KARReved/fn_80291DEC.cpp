//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80311DB0.hpp"
#include "fn_80311EA0.hpp"



void fn_80291DEC(PPC::Runtime::GCContext* context)
{
/*80291DEC 0028EBEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80291DF0 0028EBF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80291DF4 0028EBF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80291DF8 0028EBF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80291DFC 0028EBFC*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*80291E00 0028EC00*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80291E04 0028EC04*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80291E08 0028EC08*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80291E0C 0028EC0C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*80291E10 0028EC10*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80291E14 0028EC14*/ PPC::Runtime::ASM::bctrl();
/*80291E18 0028EC18*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80291E1C 0028EC1C*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 24);
/*80291E20 0028EC20*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80291E24 0028EC24*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80291E28 0028EC28*/ PPC::Runtime::ASM::bl(fn_80311DB0);
/*80291E2C 0028EC2C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80291E30 0028EC30*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80291E34 0028EC34*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*80291E38 0028EC38*/ PPC::Runtime::ASM::bl(fn_80311EA0);
/*80291E3C 0028EC3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80291E40 0028EC40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80291E44 0028EC44*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80291E48 0028EC48*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80291E4C 0028EC4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80291E50 0028EC50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80291E54 0028EC54*/ PPC::Runtime::ASM::blr();
}