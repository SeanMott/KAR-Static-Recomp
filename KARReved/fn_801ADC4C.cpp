//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A5F2C.hpp"



void fn_801ADC4C(PPC::Runtime::GCContext* context)
{
/*801ADC4C 001AAA4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ADC50 001AAA50*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ADC54 001AAA54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ADC58 001AAA58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r3));
/*801ADC5C 001AAA5C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801ADC60 001AAA60*/ PPC::Runtime::ASM::bne(.L_801ADC68);
/*801ADC64 001AAA64*/ PPC::Runtime::ASM::bl(fn_801A5F2C);
RUNTIME_PPC_JUMP_LABEL(.L_801ADC68, 0x801ADC68) //this is a jump label
/*801ADC68 001AAA68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ADC6C 001AAA6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ADC70 001AAA70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ADC74 001AAA74*/ PPC::Runtime::ASM::blr();
}