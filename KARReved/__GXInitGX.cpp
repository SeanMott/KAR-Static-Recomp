//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "VIGetTvFormat.hpp"
#include "fn_GXSetCopyClear.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetTexCoordGen2.hpp"
#include "fn_GXSetNumTexGens.hpp"
#include "fn_GXClearVtxDesc.hpp"
#include "fn_GXInvalidateVtxCache.hpp"
#include "fn_GXSetArray.hpp"
#include "fn_803CAF94.hpp"
#include "fn_GXSetLineWidth.hpp"
#include "fn_GXSetPointSize.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXEnableTexOffsets.hpp"
#include "fn_GXLoadPosMtxImm.hpp"
#include "fn_GXLoadNrmMtxImm.hpp"
#include "fn_GXSetCurrentMtx.hpp"
#include "fn_GXLoadTexMtxImm.hpp"
#include "fn_GXLoadTexMtxImm.hpp"
#include "fn_GXSetViewport.hpp"
#include "fn_803D061C.hpp"
#include "fn_GXSetCoPlanar.hpp"
#include "fn_GXSetCullMode.hpp"
#include "fn_GXSetClipMode.hpp"
#include "fn_GXSetScissor.hpp"
#include "fn_GXSetScissorBoxOffset.hpp"
#include "fn_GXSetNumChans.hpp"
#include "fn_GXSetChanCtrl.hpp"
#include "fn_GXSetChanAmbColor.hpp"
#include "fn_GXSetChanMatColor.hpp"
#include "fn_GXSetChanCtrl.hpp"
#include "fn_GXSetChanAmbColor.hpp"
#include "fn_GXSetChanMatColor.hpp"
#include "fn_GXInvalidateTexAll.hpp"
#include "fn___GXDefaultTexRegionCallback.hpp"
#include "fn___GXDefaultTexRegionCallback.hpp"
#include "fn_GXSetTexRegionCallback.hpp"
#include "fn___GXDefaultTlutRegionCallback.hpp"
#include "fn___GXDefaultTlutRegionCallback.hpp"
#include "fn_GXSetTlutRegionCallback.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetTevOrder.hpp"
#include "fn_GXSetNumTevStages.hpp"
#include "fn_GXSetTevOp.hpp"
#include "fn_GXSetAlphaCompare.hpp"
#include "fn_GXSetZTexture.hpp"
#include "fn_GXSetTevKColorSel.hpp"
#include "fn_GXSetTevKAlphaSel.hpp"
#include "fn_GXSetTevSwapMode.hpp"
#include "fn_GXSetTevSwapModeTable.hpp"
#include "fn_GXSetTevSwapModeTable.hpp"
#include "fn_GXSetTevSwapModeTable.hpp"
#include "fn_GXSetTevSwapModeTable.hpp"
#include "fn_GXSetTevDirect.hpp"
#include "fn_GXSetNumIndStages.hpp"
#include "fn_GXSetIndTexCoordScale.hpp"
#include "fn_GXSetIndTexCoordScale.hpp"
#include "fn_GXSetIndTexCoordScale.hpp"
#include "fn_GXSetIndTexCoordScale.hpp"
#include "fn_GXSetFog.hpp"
#include "fn_GXSetFogRangeAdj.hpp"
#include "fn_GXSetBlendMode.hpp"
#include "fn_GXSetColorUpdate.hpp"
#include "fn_GXSetAlphaUpdate.hpp"
#include "fn_GXSetZMode.hpp"
#include "fn_GXSetZCompLoc.hpp"
#include "fn_GXSetDither.hpp"
#include "fn_GXSetDstAlpha.hpp"
#include "fn_GXSetPixelFmt.hpp"
#include "fn_GXSetFieldMask.hpp"
#include "fn_GXSetFieldMode.hpp"
#include "fn_GXSetDispCopySrc.hpp"
#include "fn_GXSetDispCopyDst.hpp"
#include "fn_GXSetDispCopyYScale.hpp"
#include "fn_GXSetCopyClamp.hpp"
#include "fn_GXSetCopyFilter.hpp"
#include "fn_GXSetDispCopyGamma.hpp"
#include "fn_GXSetDispCopyFrame2Field.hpp"
#include "fn_GXClearBoundingBo.hpp"
#include "fn_GXPokeColorUpdate.hpp"
#include "fn_GXPokeAlphaUpdate.hpp"
#include "fn_GXPokeDither.hpp"
#include "fn_GXPokeBlendMode.hpp"
#include "fn_GXPokeAlphaMode.hpp"
#include "fn_GXPokeAlphaRead.hpp"
#include "fn_GXPokeDstAlpha.hpp"
#include "fn_GXPokeZMode.hpp"
#include "fn_GXSetGPMetric.hpp"
#include "fn_GXClearGPMetric.hpp"



void __GXInitGX(PPC::Runtime::GCContext* context)
{
/*803C902C 003C5E2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C9030 003C5E30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C9034 003C5E34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x80, context->r1));
/*803C9038 003C5E38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*803C903C 003C5E3C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1));
/*803C9040 003C5E40*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803C9044 003C5E44*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805E5774 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9048 003C5E48*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805E5778 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C904C 003C5E4C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805E577C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9050 003C5E50*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803C9054 003C5E54*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C9058 003C5E58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C905C 003C5E5C*/ PPC::Runtime::ASM::bl(VIGetTvFormat);
/*803C9060 003C5E60*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*803C9064 003C5E64*/ PPC::Runtime::ASM::beq(.L_803C90B8);
/*803C9068 003C5E68*/ PPC::Runtime::ASM::bge(.L_803C907C);
/*803C906C 003C5E6C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803C9070 003C5E70*/ PPC::Runtime::ASM::beq(.L_803C9088);
/*803C9074 003C5E74*/ PPC::Runtime::ASM::bge(.L_803C9098);
/*803C9078 003C5E78*/ PPC::Runtime::ASM::b(.L_803C90C8);
RUNTIME_PPC_JUMP_LABEL(.L_803C907C, 0x803C907C) //this is a jump label
/*803C907C 003C5E7C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*803C9080 003C5E80*/ PPC::Runtime::ASM::beq(.L_803C90A8);
/*803C9084 003C5E84*/ PPC::Runtime::ASM::b(.L_803C90C8);
RUNTIME_PPC_JUMP_LABEL(.L_803C9088, 0x803C9088) //this is a jump label
/*803C9088 003C5E88*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F9C20 @ Get_MemoryOffset_HighBit);
/*803C908C 003C5E8C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F9C20 @ Get_MemoryOffset_LowBit);
/*803C9090 003C5E90*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803C9094 003C5E94*/ PPC::Runtime::ASM::b(.L_803C90D4);
RUNTIME_PPC_JUMP_LABEL(.L_803C9098, 0x803C9098) //this is a jump label
/*803C9098 003C5E98*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F9C98 @ Get_MemoryOffset_HighBit);
/*803C909C 003C5E9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F9C98 @ Get_MemoryOffset_LowBit);
/*803C90A0 003C5EA0*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803C90A4 003C5EA4*/ PPC::Runtime::ASM::b(.L_803C90D4);
RUNTIME_PPC_JUMP_LABEL(.L_803C90A8, 0x803C90A8) //this is a jump label
/*803C90A8 003C5EA8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F9CD4 @ Get_MemoryOffset_HighBit);
/*803C90AC 003C5EAC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F9CD4 @ Get_MemoryOffset_LowBit);
/*803C90B0 003C5EB0*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803C90B4 003C5EB4*/ PPC::Runtime::ASM::b(.L_803C90D4);
RUNTIME_PPC_JUMP_LABEL(.L_803C90B8, 0x803C90B8) //this is a jump label
/*803C90B8 003C5EB8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F9C5C @ Get_MemoryOffset_HighBit);
/*803C90BC 003C5EBC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F9C5C @ Get_MemoryOffset_LowBit);
/*803C90C0 003C5EC0*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803C90C4 003C5EC4*/ PPC::Runtime::ASM::b(.L_803C90D4);
RUNTIME_PPC_JUMP_LABEL(.L_803C90C8, 0x803C90C8) //this is a jump label
/*803C90C8 003C5EC8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F9C20 @ Get_MemoryOffset_HighBit);
/*803C90CC 003C5ECC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F9C20 @ Get_MemoryOffset_LowBit);
/*803C90D0 003C5ED0*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803C90D4, 0x803C90D4) //this is a jump label
/*803C90D4 003C5ED4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803C90D8 003C5ED8*/ PPC::Runtime::ASM::lis(context->r4, 0x100);
/*803C90DC 003C5EDC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*803C90E0 003C5EE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C90E4 003C5EE4*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*803C90E8 003C5EE8*/ PPC::Runtime::ASM::bl(fn_GXSetCopyClear);
/*803C90EC 003C5EEC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C90F0 003C5EF0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C90F4 003C5EF4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803C90F8 003C5EF8*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C90FC 003C5EFC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C9100 003C5F00*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C9104 003C5F04*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C9108 003C5F08*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C910C 003C5F0C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C9110 003C5F10*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*803C9114 003C5F14*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C9118 003C5F18*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C911C 003C5F1C*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C9120 003C5F20*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C9124 003C5F24*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C9128 003C5F28*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C912C 003C5F2C*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*803C9130 003C5F30*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C9134 003C5F34*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C9138 003C5F38*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C913C 003C5F3C*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C9140 003C5F40*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803C9144 003C5F44*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C9148 003C5F48*/ PPC::Runtime::ASM::li(context->r5, 0x7);
/*803C914C 003C5F4C*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C9150 003C5F50*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C9154 003C5F54*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C9158 003C5F58*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C915C 003C5F5C*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*803C9160 003C5F60*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C9164 003C5F64*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*803C9168 003C5F68*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C916C 003C5F6C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C9170 003C5F70*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C9174 003C5F74*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C9178 003C5F78*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803C917C 003C5F7C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C9180 003C5F80*/ PPC::Runtime::ASM::li(context->r5, 0x9);
/*803C9184 003C5F84*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C9188 003C5F88*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C918C 003C5F8C*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C9190 003C5F90*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C9194 003C5F94*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*803C9198 003C5F98*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C919C 003C5F9C*/ PPC::Runtime::ASM::li(context->r5, 0xa);
/*803C91A0 003C5FA0*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C91A4 003C5FA4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C91A8 003C5FA8*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C91AC 003C5FAC*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C91B0 003C5FB0*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*803C91B4 003C5FB4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C91B8 003C5FB8*/ PPC::Runtime::ASM::li(context->r5, 0xb);
/*803C91BC 003C5FBC*/ PPC::Runtime::ASM::li(context->r6, 0x3c);
/*803C91C0 003C5FC0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C91C4 003C5FC4*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*803C91C8 003C5FC8*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*803C91CC 003C5FCC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C91D0 003C5FD0*/ PPC::Runtime::ASM::bl(fn_GXSetNumTexGens);
/*803C91D4 003C5FD4*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*803C91D8 003C5FD8*/ PPC::Runtime::ASM::bl(fn_GXInvalidateVtxCache);
/*803C91DC 003C5FDC*/ PPC::Runtime::ASM::li(context->r29, 0x9);
/*803C91E0 003C5FE0*/ PPC::Runtime::ASM::b(.L_803C91E4);
RUNTIME_PPC_JUMP_LABEL(.L_803C91E4, 0x803C91E4) //this is a jump label
/*803C91E4 003C5FE4*/ PPC::Runtime::ASM::b(.L_803C91E8);
RUNTIME_PPC_JUMP_LABEL(.L_803C91E8, 0x803C91E8) //this is a jump label
/*803C91E8 003C5FE8*/ PPC::Runtime::ASM::b(.L_803C91EC);
RUNTIME_PPC_JUMP_LABEL(.L_803C91EC, 0x803C91EC) //this is a jump label
/*803C91EC 003C5FEC*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C91F0 003C5FF0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803C91F4 003C5FF4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C91F8 003C5FF8*/ PPC::Runtime::ASM::bl(fn_GXSetArray);
/*803C91FC 003C5FFC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*803C9200 003C6000*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x18);
/*803C9204 003C6004*/ PPC::Runtime::ASM::ble(.L_803C91EC);
/*803C9208 003C6008*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*803C920C 003C600C*/ PPC::Runtime::ASM::b(.L_803C9210);
RUNTIME_PPC_JUMP_LABEL(.L_803C9210, 0x803C9210) //this is a jump label
/*803C9210 003C6010*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F98AC @ Get_MemoryOffset_HighBit);
/*803C9214 003C6014*/ PPC::Runtime::ASM::addi(context->r30, context->r3, lbl_804F98AC @ Get_MemoryOffset_LowBit);
/*803C9218 003C6018*/ PPC::Runtime::ASM::b(.L_803C921C);
RUNTIME_PPC_JUMP_LABEL(.L_803C921C, 0x803C921C) //this is a jump label
/*803C921C 003C601C*/ PPC::Runtime::ASM::b(.L_803C9220);
RUNTIME_PPC_JUMP_LABEL(.L_803C9220, 0x803C9220) //this is a jump label
/*803C9220 003C6020*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803C9224 003C6024*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*803C9228 003C6028*/ PPC::Runtime::ASM::bl(fn_803CAF94);
/*803C922C 003C602C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*803C9230 003C6030*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x8);
/*803C9234 003C6034*/ PPC::Runtime::ASM::blt(.L_803C9220);
/*803C9238 003C6038*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*803C923C 003C603C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9240 003C6040*/ PPC::Runtime::ASM::bl(fn_GXSetLineWidth);
/*803C9244 003C6044*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*803C9248 003C6048*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C924C 003C604C*/ PPC::Runtime::ASM::bl(fn_GXSetPointSize);
/*803C9250 003C6050*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9254 003C6054*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9258 003C6058*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C925C 003C605C*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C9260 003C6060*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9264 003C6064*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9268 003C6068*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C926C 003C606C*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C9270 003C6070*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C9274 003C6074*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9278 003C6078*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C927C 003C607C*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C9280 003C6080*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803C9284 003C6084*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9288 003C6088*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C928C 003C608C*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C9290 003C6090*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*803C9294 003C6094*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9298 003C6098*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C929C 003C609C*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C92A0 003C60A0*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803C92A4 003C60A4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C92A8 003C60A8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C92AC 003C60AC*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C92B0 003C60B0*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*803C92B4 003C60B4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C92B8 003C60B8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C92BC 003C60BC*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C92C0 003C60C0*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*803C92C4 003C60C4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C92C8 003C60C8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C92CC 003C60CC*/ PPC::Runtime::ASM::bl(fn_GXEnableTexOffsets);
/*803C92D0 003C60D0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5780 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C92D4 003C60D4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*803C92D8 003C60D8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E5784 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C92DC 003C60DC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C92E0 003C60E0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803C92E4 003C60E4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*803C92E8 003C60E8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803C92EC 003C60EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*803C92F0 003C60F0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*803C92F4 003C60F4*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*803C92F8 003C60F8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803C92FC 003C60FC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*803C9300 003C6100*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*803C9304 003C6104*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*803C9308 003C6108*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*803C930C 003C610C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*803C9310 003C6110*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*803C9314 003C6114*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*803C9318 003C6118*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C931C 003C611C*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*803C9320 003C6120*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9324 003C6124*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*803C9328 003C6128*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*803C932C 003C612C*/ PPC::Runtime::ASM::li(context->r4, 0x3c);
/*803C9330 003C6130*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C9334 003C6134*/ PPC::Runtime::ASM::bl(fn_GXLoadTexMtxImm);
/*803C9338 003C6138*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*803C933C 003C613C*/ PPC::Runtime::ASM::li(context->r4, 0x7d);
/*803C9340 003C6140*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C9344 003C6144*/ PPC::Runtime::ASM::bl(fn_GXLoadTexMtxImm);
/*803C9348 003C6148*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803C934C 003C614C*/ PPC::Runtime::ASM::lis(context->r3, 0x4330);
/*803C9350 003C6150*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803C9354 003C6154*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*803C9358 003C6158*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5784 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C935C 003C615C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*803C9360 003C6160*/ PPC::Runtime::ASM::lfd(context->f4, STRUCT_DOUBLE_COUNT_1805E5790 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9364 003C6164*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*803C9368 003C6168*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803C936C 003C616C*/ PPC::Runtime::ASM::fmr(context->f5, context->f1);
/*803C9370 003C6170*/ PPC::Runtime::ASM::lfs(context->f6, STRUCT_FLOAT_COUNT_1805E5780 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9374 003C6174*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*803C9378 003C6178*/ PPC::Runtime::ASM::lfd(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803C937C 003C617C*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*803C9380 003C6180*/ PPC::Runtime::ASM::fsubs(context->f3, context->f3, context->f4);
/*803C9384 003C6184*/ PPC::Runtime::ASM::fsubs(context->f4, context->f0, context->f4);
/*803C9388 003C6188*/ PPC::Runtime::ASM::bl(fn_GXSetViewport);
/*803C938C 003C618C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F997C @ Get_MemoryOffset_HighBit);
/*803C9390 003C6190*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804F997C @ Get_MemoryOffset_LowBit);
/*803C9394 003C6194*/ PPC::Runtime::ASM::bl(fn_803D061C);
/*803C9398 003C6198*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C939C 003C619C*/ PPC::Runtime::ASM::bl(fn_GXSetCoPlanar);
/*803C93A0 003C61A0*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C93A4 003C61A4*/ PPC::Runtime::ASM::bl(fn_GXSetCullMode);
/*803C93A8 003C61A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C93AC 003C61AC*/ PPC::Runtime::ASM::bl(fn_GXSetClipMode);
/*803C93B0 003C61B0*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803C93B4 003C61B4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C93B8 003C61B8*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*803C93BC 003C61BC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C93C0 003C61C0*/ PPC::Runtime::ASM::bl(fn_GXSetScissor);
/*803C93C4 003C61C4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C93C8 003C61C8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C93CC 003C61CC*/ PPC::Runtime::ASM::bl(fn_GXSetScissorBoxOffset);
/*803C93D0 003C61D0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C93D4 003C61D4*/ PPC::Runtime::ASM::bl(fn_GXSetNumChans);
/*803C93D8 003C61D8*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*803C93DC 003C61DC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C93E0 003C61E0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C93E4 003C61E4*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803C93E8 003C61E8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C93EC 003C61EC*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*803C93F0 003C61F0*/ PPC::Runtime::ASM::li(context->r9, 0x2);
/*803C93F4 003C61F4*/ PPC::Runtime::ASM::bl(fn_GXSetChanCtrl);
/*803C93F8 003C61F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C93FC 003C61FC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x18);
/*803C9400 003C6200*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*803C9404 003C6204*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C9408 003C6208*/ PPC::Runtime::ASM::bl(fn_GXSetChanAmbColor);
/*803C940C 003C620C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C9410 003C6210*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*803C9414 003C6214*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*803C9418 003C6218*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C941C 003C621C*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*803C9420 003C6220*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803C9424 003C6224*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9428 003C6228*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C942C 003C622C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803C9430 003C6230*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C9434 003C6234*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*803C9438 003C6238*/ PPC::Runtime::ASM::li(context->r9, 0x2);
/*803C943C 003C623C*/ PPC::Runtime::ASM::bl(fn_GXSetChanCtrl);
/*803C9440 003C6240*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C9444 003C6244*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*803C9448 003C6248*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803C944C 003C624C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803C9450 003C6250*/ PPC::Runtime::ASM::bl(fn_GXSetChanAmbColor);
/*803C9454 003C6254*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803C9458 003C6258*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*803C945C 003C625C*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803C9460 003C6260*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C9464 003C6264*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*803C9468 003C6268*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*803C946C 003C626C*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9470 003C6270*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803C9474 003C6274*/ PPC::Runtime::ASM::lis(context->r3, fn___GXDefaultTexRegionCallback @ Get_MemoryOffset_HighBit);
/*803C9478 003C6278*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c8, context->r4));
/*803C947C 003C627C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn___GXDefaultTexRegionCallback @ Get_MemoryOffset_LowBit);
/*803C9480 003C6280*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r4));
/*803C9484 003C6284*/ PPC::Runtime::ASM::bl(fn_GXSetTexRegionCallback);
/*803C9488 003C6288*/ PPC::Runtime::ASM::lis(context->r3, fn___GXDefaultTlutRegionCallback @ Get_MemoryOffset_HighBit);
/*803C948C 003C628C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn___GXDefaultTlutRegionCallback @ Get_MemoryOffset_LowBit);
/*803C9490 003C6290*/ PPC::Runtime::ASM::bl(fn_GXSetTlutRegionCallback);
/*803C9494 003C6294*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9498 003C6298*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C949C 003C629C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C94A0 003C62A0*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C94A4 003C62A4*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C94A8 003C62A8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C94AC 003C62AC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C94B0 003C62B0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C94B4 003C62B4*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C94B8 003C62B8*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C94BC 003C62BC*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C94C0 003C62C0*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*803C94C4 003C62C4*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803C94C8 003C62C8*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C94CC 003C62CC*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C94D0 003C62D0*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803C94D4 003C62D4*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*803C94D8 003C62D8*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*803C94DC 003C62DC*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C94E0 003C62E0*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C94E4 003C62E4*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*803C94E8 003C62E8*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803C94EC 003C62EC*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803C94F0 003C62F0*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C94F4 003C62F4*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C94F8 003C62F8*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*803C94FC 003C62FC*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*803C9500 003C6300*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*803C9504 003C6304*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C9508 003C6308*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C950C 003C630C*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*803C9510 003C6310*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*803C9514 003C6314*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*803C9518 003C6318*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C951C 003C631C*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C9520 003C6320*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*803C9524 003C6324*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*803C9528 003C6328*/ PPC::Runtime::ASM::li(context->r5, 0x7);
/*803C952C 003C632C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*803C9530 003C6330*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C9534 003C6334*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*803C9538 003C6338*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C953C 003C633C*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C9540 003C6340*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C9544 003C6344*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C9548 003C6348*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*803C954C 003C634C*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C9550 003C6350*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C9554 003C6354*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C9558 003C6358*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C955C 003C635C*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*803C9560 003C6360*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C9564 003C6364*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C9568 003C6368*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C956C 003C636C*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C9570 003C6370*/ PPC::Runtime::ASM::li(context->r3, 0xb);
/*803C9574 003C6374*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C9578 003C6378*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C957C 003C637C*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C9580 003C6380*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C9584 003C6384*/ PPC::Runtime::ASM::li(context->r3, 0xc);
/*803C9588 003C6388*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C958C 003C638C*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C9590 003C6390*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C9594 003C6394*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C9598 003C6398*/ PPC::Runtime::ASM::li(context->r3, 0xd);
/*803C959C 003C639C*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C95A0 003C63A0*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C95A4 003C63A4*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C95A8 003C63A8*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C95AC 003C63AC*/ PPC::Runtime::ASM::li(context->r3, 0xe);
/*803C95B0 003C63B0*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C95B4 003C63B4*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C95B8 003C63B8*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C95BC 003C63BC*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C95C0 003C63C0*/ PPC::Runtime::ASM::li(context->r3, 0xf);
/*803C95C4 003C63C4*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*803C95C8 003C63C8*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*803C95CC 003C63CC*/ PPC::Runtime::ASM::li(context->r6, 0xff);
/*803C95D0 003C63D0*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*803C95D4 003C63D4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C95D8 003C63D8*/ PPC::Runtime::ASM::bl(fn_GXSetNumTevStages);
/*803C95DC 003C63DC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C95E0 003C63E0*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*803C95E4 003C63E4*/ PPC::Runtime::ASM::bl(fn_GXSetTevOp);
/*803C95E8 003C63E8*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*803C95EC 003C63EC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C95F0 003C63F0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C95F4 003C63F4*/ PPC::Runtime::ASM::li(context->r6, 0x7);
/*803C95F8 003C63F8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803C95FC 003C63FC*/ PPC::Runtime::ASM::bl(fn_GXSetAlphaCompare);
/*803C9600 003C6400*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9604 003C6404*/ PPC::Runtime::ASM::li(context->r4, 0x11);
/*803C9608 003C6408*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C960C 003C640C*/ PPC::Runtime::ASM::bl(fn_GXSetZTexture);
/*803C9610 003C6410*/ PPC::Runtime::ASM::b(.L_803C9614);
RUNTIME_PPC_JUMP_LABEL(.L_803C9614, 0x803C9614) //this is a jump label
/*803C9614 003C6414*/ PPC::Runtime::ASM::b(.L_803C9618);
RUNTIME_PPC_JUMP_LABEL(.L_803C9618, 0x803C9618) //this is a jump label
/*803C9618 003C6418*/ PPC::Runtime::ASM::b(.L_803C961C);
RUNTIME_PPC_JUMP_LABEL(.L_803C961C, 0x803C961C) //this is a jump label
/*803C961C 003C641C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C9620 003C6420*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*803C9624 003C6424*/ PPC::Runtime::ASM::bl(fn_GXSetTevKColorSel);
/*803C9628 003C6428*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C962C 003C642C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9630 003C6430*/ PPC::Runtime::ASM::bl(fn_GXSetTevKAlphaSel);
/*803C9634 003C6434*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C9638 003C6438*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C963C 003C643C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C9640 003C6440*/ PPC::Runtime::ASM::bl(fn_GXSetTevSwapMode);
/*803C9644 003C6444*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*803C9648 003C6448*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x10);
/*803C964C 003C644C*/ PPC::Runtime::ASM::blt(.L_803C961C);
/*803C9650 003C6450*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9654 003C6454*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9658 003C6458*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C965C 003C645C*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*803C9660 003C6460*/ PPC::Runtime::ASM::li(context->r7, 0x3);
/*803C9664 003C6464*/ PPC::Runtime::ASM::bl(fn_GXSetTevSwapModeTable);
/*803C9668 003C6468*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C966C 003C646C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9670 003C6470*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C9674 003C6474*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803C9678 003C6478*/ PPC::Runtime::ASM::li(context->r7, 0x3);
/*803C967C 003C647C*/ PPC::Runtime::ASM::bl(fn_GXSetTevSwapModeTable);
/*803C9680 003C6480*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C9684 003C6484*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C9688 003C6488*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C968C 003C648C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803C9690 003C6490*/ PPC::Runtime::ASM::li(context->r7, 0x3);
/*803C9694 003C6494*/ PPC::Runtime::ASM::bl(fn_GXSetTevSwapModeTable);
/*803C9698 003C6498*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803C969C 003C649C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*803C96A0 003C64A0*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803C96A4 003C64A4*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*803C96A8 003C64A8*/ PPC::Runtime::ASM::li(context->r7, 0x3);
/*803C96AC 003C64AC*/ PPC::Runtime::ASM::bl(fn_GXSetTevSwapModeTable);
/*803C96B0 003C64B0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803C96B4 003C64B4*/ PPC::Runtime::ASM::b(.L_803C96B8);
RUNTIME_PPC_JUMP_LABEL(.L_803C96B8, 0x803C96B8) //this is a jump label
/*803C96B8 003C64B8*/ PPC::Runtime::ASM::b(.L_803C96BC);
RUNTIME_PPC_JUMP_LABEL(.L_803C96BC, 0x803C96BC) //this is a jump label
/*803C96BC 003C64BC*/ PPC::Runtime::ASM::b(.L_803C96C0);
RUNTIME_PPC_JUMP_LABEL(.L_803C96C0, 0x803C96C0) //this is a jump label
/*803C96C0 003C64C0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C96C4 003C64C4*/ PPC::Runtime::ASM::bl(fn_GXSetTevDirect);
/*803C96C8 003C64C8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*803C96CC 003C64CC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x10);
/*803C96D0 003C64D0*/ PPC::Runtime::ASM::blt(.L_803C96C0);
/*803C96D4 003C64D4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C96D8 003C64D8*/ PPC::Runtime::ASM::bl(fn_GXSetNumIndStages);
/*803C96DC 003C64DC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C96E0 003C64E0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C96E4 003C64E4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C96E8 003C64E8*/ PPC::Runtime::ASM::bl(fn_GXSetIndTexCoordScale);
/*803C96EC 003C64EC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C96F0 003C64F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C96F4 003C64F4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C96F8 003C64F8*/ PPC::Runtime::ASM::bl(fn_GXSetIndTexCoordScale);
/*803C96FC 003C64FC*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*803C9700 003C6500*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9704 003C6504*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C9708 003C6508*/ PPC::Runtime::ASM::bl(fn_GXSetIndTexCoordScale);
/*803C970C 003C650C*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803C9710 003C6510*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9714 003C6514*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C9718 003C6518*/ PPC::Runtime::ASM::bl(fn_GXSetIndTexCoordScale);
/*803C971C 003C651C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E5780 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9720 003C6520*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803C9724 003C6524*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C9728 003C6528*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C972C 003C652C*/ PPC::Runtime::ASM::fmr(context->f4, context->f2);
/*803C9730 003C6530*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803C9734 003C6534*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5784 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9738 003C6538*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E5788 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C973C 003C653C*/ PPC::Runtime::ASM::bl(fn_GXSetFog);
/*803C9740 003C6540*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9744 003C6544*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9748 003C6548*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C974C 003C654C*/ PPC::Runtime::ASM::bl(fn_GXSetFogRangeAdj);
/*803C9750 003C6550*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9754 003C6554*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803C9758 003C6558*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*803C975C 003C655C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803C9760 003C6560*/ PPC::Runtime::ASM::bl(fn_GXSetBlendMode);
/*803C9764 003C6564*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9768 003C6568*/ PPC::Runtime::ASM::bl(fn_GXSetColorUpdate);
/*803C976C 003C656C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9770 003C6570*/ PPC::Runtime::ASM::bl(fn_GXSetAlphaUpdate);
/*803C9774 003C6574*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9778 003C6578*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*803C977C 003C657C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C9780 003C6580*/ PPC::Runtime::ASM::bl(fn_GXSetZMode);
/*803C9784 003C6584*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9788 003C6588*/ PPC::Runtime::ASM::bl(fn_GXSetZCompLoc);
/*803C978C 003C658C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9790 003C6590*/ PPC::Runtime::ASM::bl(fn_GXSetDither);
/*803C9794 003C6594*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9798 003C6598*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C979C 003C659C*/ PPC::Runtime::ASM::bl(fn_GXSetDstAlpha);
/*803C97A0 003C65A0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C97A4 003C65A4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C97A8 003C65A8*/ PPC::Runtime::ASM::bl(fn_GXSetPixelFmt);
/*803C97AC 003C65AC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C97B0 003C65B0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C97B4 003C65B4*/ PPC::Runtime::ASM::bl(fn_GXSetFieldMask);
/*803C97B8 003C65B8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803C97BC 003C65BC*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803C97C0 003C65C0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 1);
/*803C97C4 003C65C4*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*803C97C8 003C65C8*/ PPC::Runtime::ASM::bne(.L_803C97D4);
/*803C97CC 003C65CC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803C97D0 003C65D0*/ PPC::Runtime::ASM::b(.L_803C97D8);
RUNTIME_PPC_JUMP_LABEL(.L_803C97D4, 0x803C97D4) //this is a jump label
/*803C97D4 003C65D4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803C97D8, 0x803C97D8) //this is a jump label
/*803C97D8 003C65D8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803C97DC 003C65DC*/ PPC::Runtime::ASM::bl(fn_GXSetFieldMode);
/*803C97E0 003C65E0*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803C97E4 003C65E4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C97E8 003C65E8*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*803C97EC 003C65EC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C97F0 003C65F0*/ PPC::Runtime::ASM::bl(fn_GXSetDispCopySrc);
/*803C97F4 003C65F4*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803C97F8 003C65F8*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*803C97FC 003C65FC*/ PPC::Runtime::ASM::bl(fn_GXSetDispCopyDst);
/*803C9800 003C6600*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803C9804 003C6604*/ PPC::Runtime::ASM::lis(context->r3, 0x4330);
/*803C9808 003C6608*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*803C980C 003C660C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*803C9810 003C6610*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E5790 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C9814 003C6614*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*803C9818 003C6618*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*803C981C 003C661C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803C9820 003C6620*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*803C9824 003C6624*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803C9828 003C6628*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f2);
/*803C982C 003C662C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*803C9830 003C6630*/ PPC::Runtime::ASM::fdivs(context->f1, context->f1, context->f0);
/*803C9834 003C6634*/ PPC::Runtime::ASM::bl(fn_GXSetDispCopyYScale);
/*803C9838 003C6638*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*803C983C 003C663C*/ PPC::Runtime::ASM::bl(fn_GXSetCopyClamp);
/*803C9840 003C6640*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19, context->r31));
/*803C9844 003C6644*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x1a);
/*803C9848 003C6648*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0x32);
/*803C984C 003C664C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C9850 003C6650*/ PPC::Runtime::ASM::bl(fn_GXSetCopyFilter);
/*803C9854 003C6654*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9858 003C6658*/ PPC::Runtime::ASM::bl(fn_GXSetDispCopyGamma);
/*803C985C 003C665C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9860 003C6660*/ PPC::Runtime::ASM::bl(fn_GXSetDispCopyFrame2Field);
/*803C9864 003C6664*/ PPC::Runtime::ASM::bl(fn_GXClearBoundingBo);
/*803C9868 003C6668*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C986C 003C666C*/ PPC::Runtime::ASM::bl(fn_GXPokeColorUpdate);
/*803C9870 003C6670*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C9874 003C6674*/ PPC::Runtime::ASM::bl(fn_GXPokeAlphaUpdate);
/*803C9878 003C6678*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C987C 003C667C*/ PPC::Runtime::ASM::bl(fn_GXPokeDither);
/*803C9880 003C6680*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C9884 003C6684*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C9888 003C6688*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C988C 003C668C*/ PPC::Runtime::ASM::li(context->r6, 0xf);
/*803C9890 003C6690*/ PPC::Runtime::ASM::bl(fn_GXPokeBlendMode);
/*803C9894 003C6694*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*803C9898 003C6698*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C989C 003C669C*/ PPC::Runtime::ASM::bl(fn_GXPokeAlphaMode);
/*803C98A0 003C66A0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C98A4 003C66A4*/ PPC::Runtime::ASM::bl(fn_GXPokeAlphaRead);
/*803C98A8 003C66A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C98AC 003C66AC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803C98B0 003C66B0*/ PPC::Runtime::ASM::bl(fn_GXPokeDstAlpha);
/*803C98B4 003C66B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C98B8 003C66B8*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*803C98BC 003C66BC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803C98C0 003C66C0*/ PPC::Runtime::ASM::bl(fn_GXPokeZMode);
/*803C98C4 003C66C4*/ PPC::Runtime::ASM::li(context->r3, 0x23);
/*803C98C8 003C66C8*/ PPC::Runtime::ASM::li(context->r4, 0x16);
/*803C98CC 003C66CC*/ PPC::Runtime::ASM::bl(fn_GXSetGPMetric);
/*803C98D0 003C66D0*/ PPC::Runtime::ASM::bl(fn_GXClearGPMetric);
/*803C98D4 003C66D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*803C98D8 003C66D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*803C98DC 003C66DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1));
/*803C98E0 003C66E0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803C98E4 003C66E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x80);
/*803C98E8 003C66E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C98EC 003C66EC*/ PPC::Runtime::ASM::blr();
}