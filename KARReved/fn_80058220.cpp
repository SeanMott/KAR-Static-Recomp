//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80058220(PPC::Runtime::GCContext* context)
{
/*80058220 00055020*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80058224 00055024*/ PPC::Runtime::ASM::mflr(context->r0);
/*80058228 00055028*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_HighBit);
/*8005822C 0005502C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80058230 00055030*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80058234 00055034*/ PPC::Runtime::ASM::addi(context->r31, context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_LowBit);
/*80058238 00055038*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8005823C 0005503C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d8, context->r31));
/*80058240 00055040*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80058244 00055044*/ PPC::Runtime::ASM::bne(.L_8005825C);
/*80058248 00055048*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_186 @ Get_MemoryOffset_HighBit);
/*8005824C 0005504C*/ PPC::Runtime::ASM::li(context->r4, 0x98);
/*80058250 00055050*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_186 @ Get_MemoryOffset_LowBit);
/*80058254 00055054*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5240 @ Get_MemoryOffset_SDA21);
/*80058258 00055058*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005825C, 0x8005825C) //this is a jump label
/*8005825C 0005505C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_HighBit);
/*80058260 00055060*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80058264 00055064*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_LowBit);
/*80058268 00055068*/ PPC::Runtime::ASM::b(.L_8005828C);
RUNTIME_PPC_JUMP_LABEL(.L_8005826C, 0x8005826C) //this is a jump label
/*8005826C 0005506C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80058270 00055070*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x968, context->r4));
/*80058274 00055074*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80058278 00055078*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96c, context->r4));
/*8005827C 0005507C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x968, context->r4));
/*80058280 00055080*/ PPC::Runtime::ASM::mr(context->r6, context->r5);
/*80058284 00055084*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*80058288 00055088*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96c, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8005828C, 0x8005828C) //this is a jump label
/*8005828C 0005508C*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*80058290 00055090*/ PPC::Runtime::ASM::bne(.L_8005826C);
/*80058294 00055094*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_HighBit);
/*80058298 00055098*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8005829C 0005509C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_LowBit);
/*800582A0 000550A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d4, context->r4));
/*800582A4 000550A4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800582A8 000550A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d4, context->r4));
/*800582AC 000550AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d8, context->r31));
/*800582B0 000550B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800582B4 000550B4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800582B8 000550B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800582BC 000550BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800582C0 000550C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800582C4 000550C4*/ PPC::Runtime::ASM::blr();
}