//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800AFF20(PPC::Runtime::GCContext* context)
{
/*800AFF20 000ACD20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r3));
/*800AFF24 000ACD24*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800AFF28 000ACD28*/ PPC::Runtime::ASM::blt(.L_800AFF34);
/*800AFF2C 000ACD2C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x20);
/*800AFF30 000ACD30*/ PPC::Runtime::ASM::blt(.L_800AFF3C);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF34, 0x800AFF34) //this is a jump label
/*800AFF34 000ACD34*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800AFF38 000ACD38*/ PPC::Runtime::ASM::b(.L_800AFF50);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF3C, 0x800AFF3C) //this is a jump label
/*800AFF3C 000ACD3C*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800AFF40 000ACD40*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800AFF44 000ACD44*/ PPC::Runtime::ASM::addi(context->r4, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800AFF48 000ACD48*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*800AFF4C 000ACD4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800AFF50, 0x800AFF50) //this is a jump label
/*800AFF50 000ACD50*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800AFF54 000ACD54*/ PPC::Runtime::ASM::beq(.L_800AFF60);
/*800AFF58 000ACD58*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*800AFF5C 000ACD5C*/ PPC::Runtime::ASM::b(.L_800AFF64);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF60, 0x800AFF60) //this is a jump label
/*800AFF60 000ACD60*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF64, 0x800AFF64) //this is a jump label
/*800AFF64 000ACD64*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800AFF68 000ACD68*/ PPC::Runtime::ASM::beq(.L_800AFF74);
/*800AFF6C 000ACD6C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800AFF70 000ACD70*/ PPC::Runtime::ASM::b(.L_800AFF78);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF74, 0x800AFF74) //this is a jump label
/*800AFF74 000ACD74*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF78, 0x800AFF78) //this is a jump label
/*800AFF78 000ACD78*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800AFF7C 000ACD7C*/ PPC::Runtime::ASM::beq(.L_800AFF88);
/*800AFF80 000ACD80*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x14);
/*800AFF84 000ACD84*/ PPC::Runtime::ASM::b(.L_800AFF8C);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF88, 0x800AFF88) //this is a jump label
/*800AFF88 000ACD88*/ PPC::Runtime::ASM::li(context->r5, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800AFF8C, 0x800AFF8C) //this is a jump label
/*800AFF8C 000ACD8C*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800AFF90 000ACD90*/ PPC::Runtime::ASM::beqlr();
/*800AFF94 000ACD94*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800AFF98 000ACD98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800AFF9C 000ACD9C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r3));
/*800AFFA0 000ACDA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r3));
/*800AFFA4 000ACDA4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800AFFA8 000ACDA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800AFFAC 000ACDAC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r3));
/*800AFFB0 000ACDB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r3));
/*800AFFB4 000ACDB4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r5));
/*800AFFB8 000ACDB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r5));
/*800AFFBC 000ACDBC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r3));
/*800AFFC0 000ACDC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r3));
/*800AFFC4 000ACDC4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*800AFFC8 000ACDC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r5));
/*800AFFCC 000ACDCC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r3));
/*800AFFD0 000ACDD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r3));
/*800AFFD4 000ACDD4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r5));
/*800AFFD8 000ACDD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r5));
/*800AFFDC 000ACDDC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe0, context->r3));
/*800AFFE0 000ACDE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r3));
/*800AFFE4 000ACDE4*/ PPC::Runtime::ASM::blr();
}