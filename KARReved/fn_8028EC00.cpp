//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80297B8C.hpp"



void fn_8028EC00(PPC::Runtime::GCContext* context)
{
/*8028EC00 0028BA00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8028EC04 0028BA04*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028EC08 0028BA08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028EC0C 0028BA0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028EC10 0028BA10*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8028EC14 0028BA14*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 8028EC18 0028BA18  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028EC1C 0028BA1C*/ PPC::Runtime::ASM::beq(.L_8028ECC4);
/*8028EC20 0028BA20*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC24 0028BA24*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC28 0028BA28*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC2C 0028BA2C*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0xc);
/*8028EC30 0028BA30*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8028EC34 0028BA34*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8028EC38 0028BA38*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8028EC3C 0028BA3C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*8028EC40 0028BA40*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x10);
/*8028EC44 0028BA44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*8028EC48 0028BA48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028EC4C 0028BA4C*/ PPC::Runtime::ASM::bl(fn_80297B8C);
/*8028EC50 0028BA50*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028EC54 0028BA54*/ PPC::Runtime::ASM::beq(.L_8028EC88);
/*8028EC58 0028BA58*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028EC5C 0028BA5C*/ PPC::Runtime::ASM::beq(.L_8028EC88);
/*8028EC60 0028BA60*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028EC64 0028BA64*/ PPC::Runtime::ASM::beq(.L_8028EC88);
/*8028EC68 0028BA68*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028EC6C 0028BA6C*/ PPC::Runtime::ASM::beq(.L_8028EC88);
/*8028EC70 0028BA70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8028EC74 0028BA74*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028EC78 0028BA78*/ PPC::Runtime::ASM::beq(.L_8028EC88);
/*8028EC7C 0028BA7C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028EC80 0028BA80*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD96C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028EC84 0028BA84*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028EC88, 0x8028EC88) //this is a jump label
/*8028EC88 0028BA88*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8028EC8C 0028BA8C*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC90 0028BA90*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC94 0028BA94*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC98 0028BA98*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028EC9C 0028BA9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028ECA0 0028BAA0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028ECA4 0028BAA4*/ PPC::Runtime::ASM::beq(.L_8028ECB4);
/*8028ECA8 0028BAA8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028ECAC 0028BAAC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD970 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028ECB0 0028BAB0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028ECB4, 0x8028ECB4) //this is a jump label
/*8028ECB4 0028BAB4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8028ECB8 0028BAB8*/ PPC::Runtime::ASM::ble(.L_8028ECC4);
/*8028ECBC 0028BABC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028ECC0 0028BAC0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028ECC4, 0x8028ECC4) //this is a jump label
/*8028ECC4 0028BAC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028ECC8 0028BAC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028ECCC 0028BACC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028ECD0 0028BAD0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8028ECD4 0028BAD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028ECD8 0028BAD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8028ECDC 0028BADC*/ PPC::Runtime::ASM::blr();
}