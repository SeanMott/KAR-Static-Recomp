//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8019AEC4(PPC::Runtime::GCContext* context)
{
/*8019AEC4 00197CC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019AEC8 00197CC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019AECC 00197CCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019AED0 00197CD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019AED4 00197CD4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019AED8 00197CD8*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8019AEDC 00197CDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x670, context->r3));
/*8019AEE0 00197CE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*8019AEE4 00197CE4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8019AEE8 00197CE8*/ PPC::Runtime::ASM::beq(.L_8019AF00);
/*8019AEEC 00197CEC*/ PPC::Runtime::ASM::lis(context->r4, lbl_804AE184 @ Get_MemoryOffset_HighBit);
/*8019AEF0 00197CF0*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." Get_MemoryOffset_SDA21);
/*8019AEF4 00197CF4*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804AE184 @ Get_MemoryOffset_LowBit);
/*8019AEF8 00197CF8*/ PPC::Runtime::ASM::li(context->r4, 0x1e3);
/*8019AEFC 00197CFC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8019AF00, 0x8019AF00) //this is a jump label
/*8019AF00 00197D00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8019AF04 00197D04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8019AF08 00197D08*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8019AF0C 00197D0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8019AF10 00197D10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8019AF14 00197D14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8019AF18 00197D18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019AF1C 00197D1C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019AF20 00197D20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019AF24 00197D24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019AF28 00197D28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8019AF2C 00197D2C*/ PPC::Runtime::ASM::blr();
}