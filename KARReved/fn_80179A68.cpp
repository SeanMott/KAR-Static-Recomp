//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138BA4.hpp"



void fn_80179A68(PPC::Runtime::GCContext* context)
{
/*80179A68 00176868*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80179A6C 0017686C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80179A70 00176870*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80179A74 00176874*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80179A78 00176878*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*80179A7C 0017687C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80179A80 00176880*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80179A84 00176884*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80179A88 00176888*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*80179A8C 0017688C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80179A90 00176890*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80179A94 00176894*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80179A98 00176898*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*80179A9C 0017689C*/ PPC::Runtime::ASM::extsb(context->r4, context->r29);
/*80179AA0 001768A0*/ PPC::Runtime::ASM::mulli(context->r5, context->r0, 0x64);
/*80179AA4 001768A4*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80179AA8 001768A8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80179AAC 001768AC*/ PPC::Runtime::ASM::mulli(context->r4, context->r4, 0x14);
/*80179AB0 001768B0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r5);
/*80179AB4 001768B4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*80179AB8 001768B8*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*80179ABC 001768BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc8, context->r3));
/*80179AC0 001768C0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80179AC4 001768C4*/ PPC::Runtime::ASM::beq(.L_80179AE0);
/*80179AC8 001768C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80179ACC 001768CC*/ PPC::Runtime::ASM::extsb(context->r4, context->r31);
/*80179AD0 001768D0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0CE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80179AD4 001768D4*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r3));
/*80179AD8 001768D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*80179ADC 001768DC*/ PPC::Runtime::ASM::bl(fn_80138BA4);
RUNTIME_PPC_JUMP_LABEL(.L_80179AE0, 0x80179AE0) //this is a jump label
/*80179AE0 001768E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80179AE4 001768E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80179AE8 001768E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80179AEC 001768EC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80179AF0 001768F0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80179AF4 001768F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80179AF8 001768F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80179AFC 001768FC*/ PPC::Runtime::ASM::blr();
}