//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___StringRead.hpp"
#include "fn___StringRead.hpp"
#include "fn___sformatter.hpp"



void fn_sscanf(PPC::Runtime::GCContext* context)
{
/*803B6C88 003B3A88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x90, context->r1));
/*803B6C8C 003B3A8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B6C90 003B3A90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*803B6C94 003B3A94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r1));
/*803B6C98 003B3A98*/ PPC::Runtime::ASM::bne(cr1, .L_803B6CBC);
/*803B6C9C 003B3A9C*/ PPC::Runtime::ASM::stfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803B6CA0 003B3AA0*/ PPC::Runtime::ASM::stfd(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*803B6CA4 003B3AA4*/ PPC::Runtime::ASM::stfd(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*803B6CA8 003B3AA8*/ PPC::Runtime::ASM::stfd(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*803B6CAC 003B3AAC*/ PPC::Runtime::ASM::stfd(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*803B6CB0 003B3AB0*/ PPC::Runtime::ASM::stfd(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*803B6CB4 003B3AB4*/ PPC::Runtime::ASM::stfd(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*803B6CB8 003B3AB8*/ PPC::Runtime::ASM::stfd(context->f8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_803B6CBC, 0x803B6CBC) //this is a jump label
/*803B6CBC 003B3ABC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x98);
/*803B6CC0 003B3AC0*/ PPC::Runtime::ASM::addi(context->r0, context->r1, 0x8);
/*803B6CC4 003B3AC4*/ PPC::Runtime::ASM::lis(context->r12, 0x200);
/*803B6CC8 003B3AC8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803B6CCC 003B3ACC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803B6CD0 003B3AD0*/ PPC::Runtime::ASM::addi(context->r31, context->r1, 0x70);
/*803B6CD4 003B3AD4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B6CD8 003B3AD8*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803B6CDC 003B3ADC*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803B6CE0 003B3AE0*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B6CE4 003B3AE4*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B6CE8 003B3AE8*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803B6CEC 003B3AEC*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B6CF0 003B3AF0*/ PPC::Runtime::ASM::stw(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*803B6CF4 003B3AF4*/ PPC::Runtime::ASM::stw(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803B6CF8 003B3AF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1));
/*803B6CFC 003B3AFC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803B6D00 003B3B00*/ PPC::Runtime::ASM::beq(.L_803B6D10);
/*803B6D04 003B3B04*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803B6D08 003B3B08*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*803B6D0C 003B3B0C*/ PPC::Runtime::ASM::bne(.L_803B6D18);
RUNTIME_PPC_JUMP_LABEL(.L_803B6D10, 0x803B6D10) //this is a jump label
/*803B6D10 003B3B10*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*803B6D14 003B3B14*/ PPC::Runtime::ASM::b(.L_803B6D38);
RUNTIME_PPC_JUMP_LABEL(.L_803B6D18, 0x803B6D18) //this is a jump label
/*803B6D18 003B3B18*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803B6D1C 003B3B1C*/ PPC::Runtime::ASM::lis(context->r3, fn___StringRead @ Get_MemoryOffset_HighBit);
/*803B6D20 003B3B20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*803B6D24 003B3B24*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*803B6D28 003B3B28*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn___StringRead @ Get_MemoryOffset_LowBit);
/*803B6D2C 003B3B2C*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*803B6D30 003B3B30*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x68);
/*803B6D34 003B3B34*/ PPC::Runtime::ASM::bl(fn___sformatter);
RUNTIME_PPC_JUMP_LABEL(.L_803B6D38, 0x803B6D38) //this is a jump label
/*803B6D38 003B3B38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*803B6D3C 003B3B3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r1));
/*803B6D40 003B3B40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B6D44 003B3B44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x90);
/*803B6D48 003B3B48*/ PPC::Runtime::ASM::blr();
}