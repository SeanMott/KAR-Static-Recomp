//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191680.hpp"
#include "fn_8018B718.hpp"
#include "fn_8018B19C.hpp"
#include "fn_8019E6DC.hpp"
#include "fn_8019E6DC.hpp"
#include "fn_80195588.hpp"
#include "fn_80230E10.hpp"
#include "fn_80230E10.hpp"
#include "fn___apl__8C_VectorFR8C_Vector_CVector_Operator_PlusEquals.hpp"
#include "fn___apl__8C_VectorFR8C_Vector_CVector_Operator_PlusEquals.hpp"
#include "fn_8018B6C8.hpp"



void fn_8019ED80(PPC::Runtime::GCContext* context)
{
/*8019ED80 0019BB80*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*8019ED84 0019BB84*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019ED88 0019BB88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8019ED8C 0019BB8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8019ED90 0019BB90*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8019ED94 0019BB94*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8019ED98 0019BB98*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8019ED9C 0019BB9C*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8019EDA0 0019BBA0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r3));
/* 8019EDA4 0019BBA4  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8019EDA8 0019BBA8*/ PPC::Runtime::ASM::bne(.L_8019EF04);
/*8019EDAC 0019BBAC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8019EDB0 0019BBB0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*8019EDB4 0019BBB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8019EDB8 0019BBB8*/ PPC::Runtime::ASM::b(.L_8019EEFC);
RUNTIME_PPC_JUMP_LABEL(.L_8019EDBC, 0x8019EDBC) //this is a jump label
/*8019EDBC 0019BBBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*8019EDC0 0019BBC0*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*8019EDC4 0019BBC4*/ PPC::Runtime::ASM::bne(.L_8019EDD0);
/*8019EDC8 0019BBC8*/ PPC::Runtime::ASM::li(context->r30, 0x1);
/*8019EDCC 0019BBCC*/ PPC::Runtime::ASM::b(.L_8019EEF8);
RUNTIME_PPC_JUMP_LABEL(.L_8019EDD0, 0x8019EDD0) //this is a jump label
/*8019EDD0 0019BBD0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8019EDD4 0019BBD4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r29));
/* 8019EDD8 0019BBD8  54 60 D7 FF */ extrwi. context->r0 , context->r3 , 1 , 25
/*8019EDDC 0019BBDC*/ PPC::Runtime::ASM::bne(.L_8019EDE8);
/* 8019EDE0 0019BBE0  54 60 CF FF */ extrwi. context->r0 , context->r3 , 1 , 24
/*8019EDE4 0019BBE4*/ PPC::Runtime::ASM::beq(.L_8019EDF0);
RUNTIME_PPC_JUMP_LABEL(.L_8019EDE8, 0x8019EDE8) //this is a jump label
/*8019EDE8 0019BBE8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8019EDEC 0019BBEC*/ PPC::Runtime::ASM::b(.L_8019EDF4);
RUNTIME_PPC_JUMP_LABEL(.L_8019EDF0, 0x8019EDF0) //this is a jump label
/*8019EDF0 0019BBF0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8019EDF4, 0x8019EDF4) //this is a jump label
/*8019EDF4 0019BBF4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8019EDF8 0019BBF8*/ PPC::Runtime::ASM::bne(.L_8019EEF8);
/*8019EDFC 0019BBFC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r29));
/* 8019EE00 0019BC00  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8019EE04 0019BC04*/ PPC::Runtime::ASM::bne(.L_8019EEF8);
/*8019EE08 0019BC08*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8019EE0C 0019BC0C*/ PPC::Runtime::ASM::bl(fn_80191680);
/*8019EE10 0019BC10*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8019EE14 0019BC14*/ PPC::Runtime::ASM::bne(.L_8019EEF8);
/*8019EE18 0019BC18*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8019EE1C 0019BC1C*/ PPC::Runtime::ASM::beq(.L_8019EEF8);
/*8019EE20 0019BC20*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x674);
/*8019EE24 0019BC24*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x674);
/*8019EE28 0019BC28*/ PPC::Runtime::ASM::bl(fn_8018B718);
/*8019EE2C 0019BC2C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8019EE30 0019BC30*/ PPC::Runtime::ASM::beq(.L_8019EEE4);
/*8019EE34 0019BC34*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8019EE38 0019BC38*/ PPC::Runtime::ASM::mr(context->r7, context->r28);
/*8019EE3C 0019BC3C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x674);
/*8019EE40 0019BC40*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x10);
/*8019EE44 0019BC44*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*8019EE48 0019BC48*/ PPC::Runtime::ASM::addi(context->r8, context->r28, 0x674);
/*8019EE4C 0019BC4C*/ PPC::Runtime::ASM::addi(context->r9, context->r1, 0x1c);
/*8019EE50 0019BC50*/ PPC::Runtime::ASM::addi(context->r10, context->r1, 0xc);
/*8019EE54 0019BC54*/ PPC::Runtime::ASM::bl(fn_8018B19C);
/*8019EE58 0019BC58*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8019EE5C 0019BC5C*/ PPC::Runtime::ASM::beq(.L_8019EEC8);
/*8019EE60 0019BC60*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8019EE64 0019BC64*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8019EE68 0019BC68*/ PPC::Runtime::ASM::bl(fn_8019E6DC);
/*8019EE6C 0019BC6C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8019EE70 0019BC70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8019EE74 0019BC74*/ PPC::Runtime::ASM::bl(fn_8019E6DC);
/*8019EE78 0019BC78*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019EE7C 0019BC7C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8019EE80 0019BC80*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019EE84 0019BC84*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD814 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8019EE88 0019BC88*/ PPC::Runtime::ASM::fadds(context->f1, context->f1, context->f0);
/*8019EE8C 0019BC8C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r4));
/*8019EE90 0019BC90*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8019EE94 0019BC94*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*8019EE98 0019BC98*/ PPC::Runtime::ASM::bne(.L_8019EEA8);
/*8019EE9C 0019BC9C*/ PPC::Runtime::ASM::lis(context->r4, 0x2);
/*8019EEA0 0019BCA0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x28);
/*8019EEA4 0019BCA4*/ PPC::Runtime::ASM::b(.L_8019EEB0);
RUNTIME_PPC_JUMP_LABEL(.L_8019EEA8, 0x8019EEA8) //this is a jump label
/*8019EEA8 0019BCA8*/ PPC::Runtime::ASM::lis(context->r4, 0x2);
/*8019EEAC 0019BCAC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x27);
RUNTIME_PPC_JUMP_LABEL(.L_8019EEB0, 0x8019EEB0) //this is a jump label
/*8019EEB0 0019BCB0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E11F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8019EEB4 0019BCB4*/ PPC::Runtime::ASM::bl(fn_80195588);
/*8019EEB8 0019BCB8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8019EEBC 0019BCBC*/ PPC::Runtime::ASM::bl(fn_80230E10);
/*8019EEC0 0019BCC0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*8019EEC4 0019BCC4*/ PPC::Runtime::ASM::bl(fn_80230E10);
RUNTIME_PPC_JUMP_LABEL(.L_8019EEC8, 0x8019EEC8) //this is a jump label
/*8019EEC8 0019BCC8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8019EECC 0019BCCC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x1c);
/*8019EED0 0019BCD0*/ PPC::Runtime::ASM::bl(fn___apl__8C_VectorFR8C_Vector_CVector_Operator_PlusEquals);
/*8019EED4 0019BCD4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8019EED8 0019BCD8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*8019EEDC 0019BCDC*/ PPC::Runtime::ASM::bl(fn___apl__8C_VectorFR8C_Vector_CVector_Operator_PlusEquals);
/*8019EEE0 0019BCE0*/ PPC::Runtime::ASM::b(.L_8019EEF8);
RUNTIME_PPC_JUMP_LABEL(.L_8019EEE4, 0x8019EEE4) //this is a jump label
/*8019EEE4 0019BCE4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8019EEE8 0019BCE8*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*8019EEEC 0019BCEC*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x674);
/*8019EEF0 0019BCF0*/ PPC::Runtime::ASM::addi(context->r6, context->r29, 0x674);
/*8019EEF4 0019BCF4*/ PPC::Runtime::ASM::bl(fn_8018B6C8);
RUNTIME_PPC_JUMP_LABEL(.L_8019EEF8, 0x8019EEF8) //this is a jump label
/*8019EEF8 0019BCF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8019EEFC, 0x8019EEFC) //this is a jump label
/*8019EEFC 0019BCFC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8019EF00 0019BD00*/ PPC::Runtime::ASM::bne(.L_8019EDBC);
RUNTIME_PPC_JUMP_LABEL(.L_8019EF04, 0x8019EF04) //this is a jump label
/*8019EF04 0019BD04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8019EF08 0019BD08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8019EF0C 0019BD0C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*8019EF10 0019BD10*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8019EF14 0019BD14*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8019EF18 0019BD18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019EF1C 0019BD1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*8019EF20 0019BD20*/ PPC::Runtime::ASM::blr();
}