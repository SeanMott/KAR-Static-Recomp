//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E0270.hpp"
#include "fn_800E0270.hpp"
#include "fn_800E2BD0.hpp"
#include "fn_800E2BD0.hpp"
#include "fn_800F6090.hpp"
#include "fn_killWhispy.hpp"
#include "fn_800DBD6C.hpp"
#include "fn_800DBE18.hpp"



void fn_800FD204(PPC::Runtime::GCContext* context)
{
/*800FD204 000FA004*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FD208 000FA008*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FD20C 000FA00C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FD210 000FA010*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FD214 000FA014*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FD218 000FA018*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FD21C 000FA01C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FD220 000FA020*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD224 000FA024*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FD228 000FA028*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FD22C 000FA02C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r29));
/*800FD230 000FA030*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800FD234 000FA034*/ PPC::Runtime::ASM::beq(.L_800FD260);
/*800FD238 000FA038*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r29));
/*800FD23C 000FA03C*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800FD240 000FA040*/ PPC::Runtime::ASM::beq(.L_800FD260);
/*800FD244 000FA044*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800FD248 000FA048*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FD24C 000FA04C*/ PPC::Runtime::ASM::bl(fn_800E0270);
/*800FD250 000FA050*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r29));
/*800FD254 000FA054*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800FD258 000FA058*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800FD25C 000FA05C*/ PPC::Runtime::ASM::bl(fn_800E0270);
RUNTIME_PPC_JUMP_LABEL(.L_800FD260, 0x800FD260) //this is a jump label
/*800FD260 000FA060*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*800FD264 000FA064*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800FD268 000FA068*/ PPC::Runtime::ASM::beq(.L_800FD294);
/*800FD26C 000FA06C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r29));
/*800FD270 000FA070*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800FD274 000FA074*/ PPC::Runtime::ASM::beq(.L_800FD294);
/*800FD278 000FA078*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800FD27C 000FA07C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FD280 000FA080*/ PPC::Runtime::ASM::bl(fn_800E2BD0);
/*800FD284 000FA084*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r29));
/*800FD288 000FA088*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800FD28C 000FA08C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800FD290 000FA090*/ PPC::Runtime::ASM::bl(fn_800E2BD0);
RUNTIME_PPC_JUMP_LABEL(.L_800FD294, 0x800FD294) //this is a jump label
/*800FD294 000FA094*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*800FD298 000FA098*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800FD29C 000FA09C*/ PPC::Runtime::ASM::beq(.L_800FD2C8);
/*800FD2A0 000FA0A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800FD2A4 000FA0A4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800FD2A8 000FA0A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800FD2AC 000FA0AC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FD2B0 000FA0B0*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800FD2B4 000FA0B4*/ PPC::Runtime::ASM::bl(fn_800F6090);
/*800FD2B8 000FA0B8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FD2BC 000FA0BC*/ PPC::Runtime::ASM::bne(.L_800FD2C8);
/*800FD2C0 000FA0C0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF918 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD2C4 000FA0C4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800FD2C8, 0x800FD2C8) //this is a jump label
/*800FD2C8 000FA0C8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF918 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD2CC 000FA0CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800FD2D0 000FA0D0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*800FD2D4 000FA0D4*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800FD2D8 000FA0D8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FD2DC 000FA0DC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800FD2E0 000FA0E0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF91C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD2E4 000FA0E4*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FD2E8 000FA0E8*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FD2EC 000FA0EC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*800FD2F0 000FA0F0*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800FD2F4 000FA0F4*/ PPC::Runtime::ASM::beq(.L_800FD314);
/*800FD2F8 000FA0F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800FD2FC 000FA0FC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800FD300 000FA100*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800FD304 000FA104*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF91C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD308 000FA108*/ PPC::Runtime::ASM::bl(fn_800DBD6C);
/*800FD30C 000FA10C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800FD310 000FA110*/ PPC::Runtime::ASM::bl(fn_800DBE18);
RUNTIME_PPC_JUMP_LABEL(.L_800FD314, 0x800FD314) //this is a jump label
/*800FD314 000FA114*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FD318 000FA118*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FD31C 000FA11C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FD320 000FA120*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FD324 000FA124*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FD328 000FA128*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FD32C 000FA12C*/ PPC::Runtime::ASM::blr();
}