//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_AS_DeadWait.hpp"



void fn_801A5020(PPC::Runtime::GCContext* context)
{
/*801A5020 001A1E20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801A5024 001A1E24*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A5028 001A1E28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A502C 001A1E2C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801A5030 001A1E30*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801A5034 001A1E34*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A5038 001A1E38*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*801A503C 001A1E3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A5040 001A1E40*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A5044 001A1E44*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801A5048 001A1E48*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa38, context->r3));
/*801A504C 001A1E4C*/ PPC::Runtime::ASM::lfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa3c, context->r3));
/*801A5050 001A1E50*/ PPC::Runtime::ASM::beq(.L_801A5060);
/*801A5054 001A1E54*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2dc);
/*801A5058 001A1E58*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801A505C 001A1E5C*/ PPC::Runtime::ASM::b(.L_801A5064);
RUNTIME_PPC_JUMP_LABEL(.L_801A5060, 0x801A5060) //this is a jump label
/*801A5060 001A1E60*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E12E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_801A5064, 0x801A5064) //this is a jump label
/*801A5064 001A1E64*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12EC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A5068 001A1E68*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801A506C 001A1E6C*/ PPC::Runtime::ASM::bge(.L_801A50C8);
/*801A5070 001A1E70*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A5074 001A1E74*/ PPC::Runtime::ASM::fcmpo(cr0, context->f31, context->f0);
/*801A5078 001A1E78*/ PPC::Runtime::ASM::bge(.L_801A5084);
/*801A507C 001A1E7C*/ PPC::Runtime::ASM::fneg(context->f0, context->f31);
/*801A5080 001A1E80*/ PPC::Runtime::ASM::b(.L_801A5088);
RUNTIME_PPC_JUMP_LABEL(.L_801A5084, 0x801A5084) //this is a jump label
/*801A5084 001A1E84*/ PPC::Runtime::ASM::fmr(context->f0, context->f31);
RUNTIME_PPC_JUMP_LABEL(.L_801A5088, 0x801A5088) //this is a jump label
/*801A5088 001A1E88*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD814 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A508C 001A1E8C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x250, context->r3));
/*801A5090 001A1E90*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*801A5094 001A1E94*/ PPC::Runtime::ASM::bge(.L_801A50C8);
/*801A5098 001A1E98*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A509C 001A1E9C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f0);
/*801A50A0 001A1EA0*/ PPC::Runtime::ASM::bge(.L_801A50AC);
/*801A50A4 001A1EA4*/ PPC::Runtime::ASM::fneg(context->f0, context->f30);
/*801A50A8 001A1EA8*/ PPC::Runtime::ASM::b(.L_801A50B0);
RUNTIME_PPC_JUMP_LABEL(.L_801A50AC, 0x801A50AC) //this is a jump label
/*801A50AC 001A1EAC*/ PPC::Runtime::ASM::fmr(context->f0, context->f30);
RUNTIME_PPC_JUMP_LABEL(.L_801A50B0, 0x801A50B0) //this is a jump label
/*801A50B0 001A1EB0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*801A50B4 001A1EB4*/ PPC::Runtime::ASM::bge(.L_801A50C8);
/*801A50B8 001A1EB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A50BC 001A1EBC*/ PPC::Runtime::ASM::bl(fn_AS_DeadWait);
/*801A50C0 001A1EC0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A50C4 001A1EC4*/ PPC::Runtime::ASM::b(.L_801A50CC);
RUNTIME_PPC_JUMP_LABEL(.L_801A50C8, 0x801A50C8) //this is a jump label
/*801A50C8 001A1EC8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801A50CC, 0x801A50CC) //this is a jump label
/*801A50CC 001A1ECC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801A50D0 001A1ED0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801A50D4 001A1ED4*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*801A50D8 001A1ED8*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A50DC 001A1EDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A50E0 001A1EE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A50E4 001A1EE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A50E8 001A1EE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801A50EC 001A1EEC*/ PPC::Runtime::ASM::blr();
}