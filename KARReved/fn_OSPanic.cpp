//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "vprintf.hpp"
#include "OSReport.hpp"
#include "OSReport.hpp"
#include "fn_OSGetStackPointer.hpp"
#include "OSReport.hpp"
#include "PPCHalt.hpp"



void fn_OSPanic(PPC::Runtime::GCContext* context)
{
/*803D4D68 003D1B68*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D4D6C 003D1B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D4D70 003D1B70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x90, context->r1));
/*803D4D74 003D1B74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r1));
/*803D4D78 003D1B78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r1));
/*803D4D7C 003D1B7C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*803D4D80 003D1B80*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r1));
/*803D4D84 003D1B84*/ PPC::Runtime::ASM::bne(cr1, .L_803D4DA8);
/*803D4D88 003D1B88*/ PPC::Runtime::ASM::stfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803D4D8C 003D1B8C*/ PPC::Runtime::ASM::stfd(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*803D4D90 003D1B90*/ PPC::Runtime::ASM::stfd(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*803D4D94 003D1B94*/ PPC::Runtime::ASM::stfd(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*803D4D98 003D1B98*/ PPC::Runtime::ASM::stfd(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*803D4D9C 003D1B9C*/ PPC::Runtime::ASM::stfd(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*803D4DA0 003D1BA0*/ PPC::Runtime::ASM::stfd(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*803D4DA4 003D1BA4*/ PPC::Runtime::ASM::stfd(context->f8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_803D4DA8, 0x803D4DA8) //this is a jump label
/*803D4DA8 003D1BA8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803D4DAC 003D1BAC*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*803D4DB0 003D1BB0*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803D4DB4 003D1BB4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803D4DB8 003D1BB8*/ PPC::Runtime::ASM::addi(context->r29, context->r5, 0x0);
/*803D4DBC 003D1BBC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803D4DC0 003D1BC0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D4DC4 003D1BC4*/ PPC::Runtime::ASM::lis(context->r6, AT_13_804FAE08 @ Get_MemoryOffset_HighBit);
/*803D4DC8 003D1BC8*/ PPC::Runtime::ASM::addi(context->r31, context->r6, AT_13_804FAE08 @ Get_MemoryOffset_LowBit);
/*803D4DCC 003D1BCC*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D4DD0 003D1BD0*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D4DD4 003D1BD4*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D4DD8 003D1BD8*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D4DDC 003D1BDC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D4DE0 003D1BE0*/ PPC::Runtime::ASM::lis(context->r0, 0x300);
/*803D4DE4 003D1BE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803D4DE8 003D1BE8*/ PPC::Runtime::ASM::addi(context->r0, context->r1, 0x98);
/*803D4DEC 003D1BEC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x74);
/*803D4DF0 003D1BF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1));
/*803D4DF4 003D1BF4*/ PPC::Runtime::ASM::addi(context->r0, context->r1, 0x8);
/*803D4DF8 003D1BF8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803D4DFC 003D1BFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*803D4E00 003D1C00*/ PPC::Runtime::ASM::bl(vprintf);
/*803D4E04 003D1C04*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803D4E08 003D1C08*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803D4E0C 003D1C0C*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x0);
/*803D4E10 003D1C10*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*803D4E14 003D1C14*/ PPC::Runtime::ASM::bl(OSReport);
/*803D4E18 003D1C18*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*803D4E1C 003D1C1C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803D4E20 003D1C20*/ PPC::Runtime::ASM::bl(OSReport);
/*803D4E24 003D1C24*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803D4E28 003D1C28*/ PPC::Runtime::ASM::bl(fn_OSGetStackPointer);
/*803D4E2C 003D1C2C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803D4E30 003D1C30*/ PPC::Runtime::ASM::b(.L_803D4E50);
RUNTIME_PPC_JUMP_LABEL(.L_803D4E34, 0x803D4E34) //this is a jump label
/*803D4E34 003D1C34*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803D4E38 003D1C38*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*803D4E3C 003D1C3C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*803D4E40 003D1C40*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x40);
/*803D4E44 003D1C44*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803D4E48 003D1C48*/ PPC::Runtime::ASM::bl(OSReport);
/*803D4E4C 003D1C4C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803D4E50, 0x803D4E50) //this is a jump label
/*803D4E50 003D1C50*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*803D4E54 003D1C54*/ PPC::Runtime::ASM::beq(.L_803D4E70);
/*803D4E58 003D1C58*/ PPC::Runtime::ASM::addis(context->r0, context->r29, 0x1);
/*803D4E5C 003D1C5C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*803D4E60 003D1C60*/ PPC::Runtime::ASM::beq(.L_803D4E70);
/*803D4E64 003D1C64*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x10);
/*803D4E68 003D1C68*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*803D4E6C 003D1C6C*/ PPC::Runtime::ASM::blt(.L_803D4E34);
RUNTIME_PPC_JUMP_LABEL(.L_803D4E70, 0x803D4E70) //this is a jump label
/*803D4E70 003D1C70*/ PPC::Runtime::ASM::bl(PPCHalt);
/*803D4E74 003D1C74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*803D4E78 003D1C78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r1));
/*803D4E7C 003D1C7C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r1));
/*803D4E80 003D1C80*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*803D4E84 003D1C84*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r1));
/*803D4E88 003D1C88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x90);
/*803D4E8C 003D1C8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D4E90 003D1C90*/ PPC::Runtime::ASM::blr();
}