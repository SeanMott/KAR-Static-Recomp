//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80057898(PPC::Runtime::GCContext* context)
{
/*80057898 00054698*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005789C 0005469C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800578A0 000546A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800578A4 000546A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 800578A8 000546A8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*800578AC 000546AC*/ PPC::Runtime::ASM::bne(.L_800578C4);
/*800578B0 000546B0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_186 @ Get_MemoryOffset_HighBit);
/*800578B4 000546B4*/ PPC::Runtime::ASM::li(context->r4, 0x98);
/*800578B8 000546B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_186 @ Get_MemoryOffset_LowBit);
/*800578BC 000546BC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5240 @ Get_MemoryOffset_SDA21);
/*800578C0 000546C0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800578C4, 0x800578C4) //this is a jump label
/*800578C4 000546C4*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_HighBit);
/*800578C8 000546C8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800578CC 000546CC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_LowBit);
/*800578D0 000546D0*/ PPC::Runtime::ASM::b(.L_800578F4);
RUNTIME_PPC_JUMP_LABEL(.L_800578D4, 0x800578D4) //this is a jump label
/*800578D4 000546D4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800578D8 000546D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x968, context->r4));
/*800578DC 000546DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800578E0 000546E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96c, context->r4));
/*800578E4 000546E4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x968, context->r4));
/*800578E8 000546E8*/ PPC::Runtime::ASM::mr(context->r5, context->r6);
/*800578EC 000546EC*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800578F0 000546F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96c, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800578F4, 0x800578F4) //this is a jump label
/*800578F4 000546F4*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800578F8 000546F8*/ PPC::Runtime::ASM::bne(.L_800578D4);
/*800578FC 000546FC*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_HighBit);
/*80057900 00054700*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_LowBit);
/*80057904 00054704*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d4, context->r3));
/*80057908 00054708*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8005790C 0005470C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9d4, context->r3));
/*80057910 00054710*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80057914 00054714*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80057918 00054718*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005791C 0005471C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80057920 00054720*/ PPC::Runtime::ASM::blr();
}