//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80066F5C(PPC::Runtime::GCContext* context)
{
/*80066F5C 00063D5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80066F60 00063D60*/ PPC::Runtime::ASM::mflr(context->r0);
/*80066F64 00063D64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80066F68 00063D68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80066F6C 00063D6C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 80066F70 00063D70  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80066F74 00063D74*/ PPC::Runtime::ASM::beq(.L_80066FF0);
/*80066F78 00063D78*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*80066F7C 00063D7C*/ PPC::Runtime::ASM::blt(.L_80066FF0);
/*80066F80 00063D80*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x2);
/*80066F84 00063D84*/ PPC::Runtime::ASM::bge(.L_80066FF0);
/*80066F88 00063D88*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_222 @ Get_MemoryOffset_HighBit);
/*80066F8C 00063D8C*/ PPC::Runtime::ASM::slwi(context->r31, context->r4, 3);
/*80066F90 00063D90*/ PPC::Runtime::ASM::addi(context->r0, context->r5, MemoryOffset_222 @ Get_MemoryOffset_LowBit);
/*80066F94 00063D94*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*80066F98 00063D98*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetViewport);
/*80066F9C 00063D9C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_223 @ Get_MemoryOffset_HighBit);
/*80066FA0 00063DA0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80066FA4 00063DA4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, MemoryOffset_223 @ Get_MemoryOffset_LowBit);
/*80066FA8 00063DA8*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*80066FAC 00063DAC*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetScissor);
/*80066FB0 00063DB0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80066FB4 00063DB4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80066FB8 00063DB8*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewportf);
/*80066FBC 00063DBC*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80066FC0 00063DC0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80066FC4 00063DC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80066FC8 00063DC8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80066FCC 00063DCC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80066FD0 00063DD0*/ PPC::Runtime::ASM::fsubs(context->f3, context->f3, context->f0);
/*80066FD4 00063DD4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEB24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80066FD8 00063DD8*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*80066FDC 00063DDC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DEB20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80066FE0 00063DE0*/ PPC::Runtime::ASM::fdivs(context->f1, context->f3, context->f1);
/*80066FE4 00063DE4*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f0);
/*80066FE8 00063DE8*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f0);
/*80066FEC 00063DEC*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetAspect);
RUNTIME_PPC_JUMP_LABEL(.L_80066FF0, 0x80066FF0) //this is a jump label
/*80066FF0 00063DF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80066FF4 00063DF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80066FF8 00063DF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80066FFC 00063DFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80067000 00063E00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80067004 00063E04*/ PPC::Runtime::ASM::blr();
}