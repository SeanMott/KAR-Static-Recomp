//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012434C(PPC::Runtime::GCContext* context)
{
/*8012434C 0012114C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80124350 00121150*/ PPC::Runtime::ASM::mflr(context->r0);
/*80124354 00121154*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80124358 00121158*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012435C 0012115C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80124360 00121160*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80124364 00121164*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80124368 00121168*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012436C 0012116C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80124370 00121170*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*80124374 00121174*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_80124378, 0x80124378) //this is a jump label
/*80124378 00121178*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012437C 0012117C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r29);
/*80124380 00121180*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5f4, context->r30));
/*80124384 00121184*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80124388 00121188*/ PPC::Runtime::ASM::beq(.L_80124394);
/*8012438C 0012118C*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80124390 00121190*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5f4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80124394, 0x80124394) //this is a jump label
/*80124394 00121194*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80124398 00121198*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*8012439C 0012119C*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*801243A0 001211A0*/ PPC::Runtime::ASM::blt(.L_80124378);
/*801243A4 001211A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801243A8 001211A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801243AC 001211AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801243B0 001211B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801243B4 001211B4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801243B8 001211B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801243BC 001211BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801243C0 001211C0*/ PPC::Runtime::ASM::blr();
}