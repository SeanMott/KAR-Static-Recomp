//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn___GXSendFlushPrim(PPC::Runtime::GCContext* context)
{
/*803CC3A4 003C91A4*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC3A8 003C91A8*/ PPC::Runtime::ASM::li(context->r0, 0x98);
/*803CC3AC 003C91AC*/ PPC::Runtime::ASM::lis(context->r5, 0xcc01);
/*803CC3B0 003C91B0*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803CC3B4 003C91B4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803CC3B8 003C91B8*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r3));
/*803CC3BC 003C91BC*/ PPC::Runtime::ASM::mullw(context->r7, context->r6, context->r3);
/*803CC3C0 003C91C0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3C4 003C91C4*/ PPC::Runtime::ASM::sth(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3C8 003C91C8*/ PPC::Runtime::ASM::addi(context->r3, context->r7, 0x3);
/*803CC3CC 003C91CC*/ PPC::Runtime::ASM::cmplwi(context->r7, 0x0);
/*803CC3D0 003C91D0*/ PPC::Runtime::ASM::srwi(context->r3, context->r3, 2);
/*803CC3D4 003C91D4*/ PPC::Runtime::ASM::ble(.L_803CC41C);
/* 803CC3D8 003C91D8  54 60 E8 FF */ srwi. context->r0 , context->r3 , 3
/*803CC3DC 003C91DC*/ PPC::Runtime::ASM::mtctr(context->r0);
/*803CC3E0 003C91E0*/ PPC::Runtime::ASM::beq(.L_803CC410);
RUNTIME_PPC_JUMP_LABEL(.L_803CC3E4, 0x803CC3E4) //this is a jump label
/*803CC3E4 003C91E4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3E8 003C91E8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3EC 003C91EC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3F0 003C91F0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3F4 003C91F4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3F8 003C91F8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC3FC 003C91FC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC400 003C9200*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC404 003C9204*/ PPC::Runtime::ASM::bdnz(.L_803CC3E4);
/*803CC408 003C9208*/ PPC::Runtime::ASM::andi.(context->r3, context->r3, 0x7);
/*803CC40C 003C920C*/ PPC::Runtime::ASM::beq(.L_803CC41C);
RUNTIME_PPC_JUMP_LABEL(.L_803CC410, 0x803CC410) //this is a jump label
/*803CC410 003C9210*/ PPC::Runtime::ASM::mtctr(context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803CC414, 0x803CC414) //this is a jump label
/*803CC414 003C9214*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC418 003C9218*/ PPC::Runtime::ASM::bdnz(.L_803CC414);
RUNTIME_PPC_JUMP_LABEL(.L_803CC41C, 0x803CC41C) //this is a jump label
/*803CC41C 003C921C*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC420 003C9220*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803CC424 003C9224*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CC428 003C9228*/ PPC::Runtime::ASM::blr();
}