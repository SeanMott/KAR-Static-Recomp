//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204198.hpp"
#include "fn_800F3AC0.hpp"
#include "fn_802041B0.hpp"



void fn_801FED74(PPC::Runtime::GCContext* context)
{
/*801FED74 001FBB74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FED78 001FBB78*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FED7C 001FBB7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FED80 001FBB80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FED84 001FBB84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FED88 001FBB88*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801FED8C 001FBB8C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb08, context->r31));
/*801FED90 001FBB90*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801FED94 001FBB94*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb08, context->r31));
/*801FED98 001FBB98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*801FED9C 001FBB9C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4c);
/*801FEDA0 001FBBA0*/ PPC::Runtime::ASM::bge(.L_801FEDB8);
/*801FEDA4 001FBBA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801FEDA8 001FBBA8*/ PPC::Runtime::ASM::bl(fn_80204198);
/*801FEDAC 001FBBAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801FEDB0 001FBBB0*/ PPC::Runtime::ASM::bl(fn_800F3AC0);
/*801FEDB4 001FBBB4*/ PPC::Runtime::ASM::b(.L_801FEDC0);
RUNTIME_PPC_JUMP_LABEL(.L_801FEDB8, 0x801FEDB8) //this is a jump label
/*801FEDB8 001FBBB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801FEDBC 001FBBBC*/ PPC::Runtime::ASM::bl(fn_802041B0);
RUNTIME_PPC_JUMP_LABEL(.L_801FEDC0, 0x801FEDC0) //this is a jump label
/*801FEDC0 001FBBC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FEDC4 001FBBC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FEDC8 001FBBC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FEDCC 001FBBCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FEDD0 001FBBD0*/ PPC::Runtime::ASM::blr();
}