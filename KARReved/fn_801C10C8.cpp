//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801C0BBC.hpp"
#include "fn_801C0BBC.hpp"
#include "fn_801C0A50.hpp"



void fn_801C10C8(PPC::Runtime::GCContext* context)
{
/*801C10C8 001BDEC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C10CC 001BDECC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C10D0 001BDED0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E18E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C10D4 001BDED4*/ PPC::Runtime::ASM::li(context->r4, 0x36);
/*801C10D8 001BDED8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C10DC 001BDEDC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801C10E0 001BDEE0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801C10E4 001BDEE4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E18EC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801C10E8 001BDEE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C10EC 001BDEEC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C10F0 001BDEF0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x920, context->r3));
/*801C10F4 001BDEF4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x73);
/*801C10F8 001BDEF8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801C10FC 001BDEFC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801C1100 001BDF00*/ PPC::Runtime::ASM::lis(context->r3, fn_801C0BBC @ Get_MemoryOffset_HighBit);
/*801C1104 001BDF04*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
/*801C1108 001BDF08*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801C0BBC @ Get_MemoryOffset_LowBit);
/*801C110C 001BDF0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C1110 001BDF10*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r31));
/*801C1114 001BDF14*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r5, 7, 24, 24);
/*801C1118 001BDF18*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x928, context->r31));
/*801C111C 001BDF1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x914, context->r31));
/*801C1120 001BDF20*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C1124 001BDF24*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x34);
/*801C1128 001BDF28*/ PPC::Runtime::ASM::bl(fn_801C0A50);
/*801C112C 001BDF2C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801C1130 001BDF30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44c, context->r31));
/*801C1134 001BDF34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x448, context->r31));
/*801C1138 001BDF38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C113C 001BDF3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C1140 001BDF40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C1144 001BDF44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C1148 001BDF48*/ PPC::Runtime::ASM::blr();
}