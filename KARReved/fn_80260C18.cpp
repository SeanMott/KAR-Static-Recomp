//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_80260C18(PPC::Runtime::GCContext* context)
{
/*80260C18 0025DA18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80260C1C 0025DA1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80260C20 0025DA20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260C24 0025DA24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260C28 0025DA28*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80260C2C 0025DA2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80260C30 0025DA30*/ PPC::Runtime::ASM::bl(fn_80250340);
/*80260C34 0025DA34*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F88 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260C38 0025DA38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260C3C 0025DA3C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F8C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260C40 0025DA40*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*80260C44 0025DA44*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80260C48 0025DA48*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80260C4C 0025DA4C*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80260C50 0025DA50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260C54 0025DA54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260C58 0025DA58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80260C5C 0025DA5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80260C60 0025DA60*/ PPC::Runtime::ASM::blr();
}