//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000AAC4.hpp"
#include "fn_8000AF5C.hpp"
#include "fn_8000A97C.hpp"
#include "fn_800098C0.hpp"
#include "fn_8012A640.hpp"



void fn_80113F10(PPC::Runtime::GCContext* context)
{
/*80113F10 00110D10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80113F14 00110D14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80113F18 00110D18*/ PPC::Runtime::ASM::lis(context->r6, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80113F1C 00110D1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80113F20 00110D20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80113F24 00110D24*/ PPC::Runtime::ASM::addi(context->r31, context->r6, lbl_805578B8 @ Get_MemoryOffset_LowBit);
/*80113F28 00110D28*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80113F2C 00110D2C*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*80113F30 00110D30*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80113F34 00110D34*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*80113F38 00110D38*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80113F3C 00110D3C*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80113F40 00110D40*/ PPC::Runtime::ASM::bl(fn_8000AAC4);
/*80113F44 00110D44*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80113F48 00110D48*/ PPC::Runtime::ASM::bne(.L_80113F94);
/*80113F4C 00110D4C*/ PPC::Runtime::ASM::bl(fn_8000AF5C);
/*80113F50 00110D50*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80113F54 00110D54*/ PPC::Runtime::ASM::beq(.L_80113F5C);
/*80113F58 00110D58*/ PPC::Runtime::ASM::b(.L_80113F94);
RUNTIME_PPC_JUMP_LABEL(.L_80113F5C, 0x80113F5C) //this is a jump label
/*80113F5C 00110D5C*/ PPC::Runtime::ASM::bl(fn_8000A97C);
/*80113F60 00110D60*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80113F64 00110D64*/ PPC::Runtime::ASM::bne(.L_80113F94);
/*80113F68 00110D68*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80113F6C 00110D6C*/ PPC::Runtime::ASM::bl(fn_800098C0);
/*80113F70 00110D70*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80113F74 00110D74*/ PPC::Runtime::ASM::beq(.L_80113F94);
/*80113F78 00110D78*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r28);
/*80113F7C 00110D7C*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*80113F80 00110D80*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r3));
/*80113F84 00110D84*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*80113F88 00110D88*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*80113F8C 00110D8C*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*80113F90 00110D90*/ PPC::Runtime::ASM::bl(fn_8012A640);
RUNTIME_PPC_JUMP_LABEL(.L_80113F94, 0x80113F94) //this is a jump label
/*80113F94 00110D94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80113F98 00110D98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80113F9C 00110D9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80113FA0 00110DA0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80113FA4 00110DA4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80113FA8 00110DA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80113FAC 00110DAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80113FB0 00110DB0*/ PPC::Runtime::ASM::blr();
}