//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D7A40.hpp"
#include "fn_800F7930.hpp"
#include "fn_killWhispy.hpp"



void fn_800F9970(PPC::Runtime::GCContext* context)
{
/*800F9970 000F6770*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F9974 000F6774*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F9978 000F6778*/ PPC::Runtime::ASM::li(context->r5, 0xa);
/*800F997C 000F677C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800F9980 000F6780*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9984 000F6784*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9988 000F6788*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F998C 000F678C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9990 000F6790*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800F9994 000F6794*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9998 000F6798*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F999C 000F679C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1c);
/*800F99A0 000F67A0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r31));
/*800F99A4 000F67A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800F99A8 000F67A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F99AC 000F67AC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800F99B0 000F67B0*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*800F99B4 000F67B4*/ PPC::Runtime::ASM::bl(fn_800D7A40);
/*800F99B8 000F67B8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800F99BC 000F67BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800F99C0 000F67C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800F99C4 000F67C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800F99C8 000F67C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F99CC 000F67CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800F99D0 000F67D0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F99D4 000F67D4*/ PPC::Runtime::ASM::beq(.L_800F99E4);
/*800F99D8 000F67D8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800F99DC 000F67DC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F99E0 000F67E0*/ PPC::Runtime::ASM::bl(fn_800F7930);
RUNTIME_PPC_JUMP_LABEL(.L_800F99E4, 0x800F99E4) //this is a jump label
/*800F99E4 000F67E4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF888 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F99E8 000F67E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F99EC 000F67EC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF88C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F99F0 000F67F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F99F4 000F67F4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800F99F8 000F67F8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800F99FC 000F67FC*/ PPC::Runtime::ASM::li(context->r6, -0x1);
/*800F9A00 000F6800*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800F9A04 000F6804*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800F9A08 000F6808*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F9A0C 000F680C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F9A10 000F6810*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F9A14 000F6814*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9A18 000F6818*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9A1C 000F681C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F9A20 000F6820*/ PPC::Runtime::ASM::blr();
}