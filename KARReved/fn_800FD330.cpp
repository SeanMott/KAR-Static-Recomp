//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA084.hpp"
#include "fn_800F6090.hpp"
#include "fn_killWhispy.hpp"
#include "fn_800DBD6C.hpp"
#include "fn_800DBE18.hpp"



void fn_800FD330(PPC::Runtime::GCContext* context)
{
/*800FD330 000FA130*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800FD334 000FA134*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FD338 000FA138*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FD33C 000FA13C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FD340 000FA140*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FD344 000FA144*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FD348 000FA148*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FD34C 000FA14C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FD350 000FA150*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800FD354 000FA154*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FD358 000FA158*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD35C 000FA15C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r29));
/*800FD360 000FA160*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800FD364 000FA164*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*800FD368 000FA168*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FD36C 000FA16C*/ PPC::Runtime::ASM::bne(.L_800FD378);
/*800FD370 000FA170*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805DF918 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD374 000FA174*/ PPC::Runtime::ASM::b(.L_800FD3CC);
RUNTIME_PPC_JUMP_LABEL(.L_800FD378, 0x800FD378) //this is a jump label
/*800FD378 000FA178*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800FD37C 000FA17C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800FD380 000FA180*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FD384 000FA184*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800FD388 000FA188*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*800FD38C 000FA18C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800FD390 000FA190*/ PPC::Runtime::ASM::bne(.L_800FD3A8);
/*800FD394 000FA194*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1007 @ Get_MemoryOffset_HighBit);
/*800FD398 000FA198*/ PPC::Runtime::ASM::li(context->r4, 0x150);
/*800FD39C 000FA19C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1007 @ Get_MemoryOffset_LowBit);
/*800FD3A0 000FA1A0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6260 @ Get_MemoryOffset_SDA21);
/*800FD3A4 000FA1A4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FD3A8, 0x800FD3A8) //this is a jump label
/*800FD3A8 000FA1A8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800FD3AC 000FA1AC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FD3B0 000FA1B0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF918 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD3B4 000FA1B4*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*800FD3B8 000FA1B8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f2);
/*800FD3BC 000FA1BC*/ PPC::Runtime::ASM::bge(.L_800FD3C4);
/*800FD3C0 000FA1C0*/ PPC::Runtime::ASM::b(.L_800FD3C8);
RUNTIME_PPC_JUMP_LABEL(.L_800FD3C4, 0x800FD3C4) //this is a jump label
/*800FD3C4 000FA1C4*/ PPC::Runtime::ASM::fmr(context->f2, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800FD3C8, 0x800FD3C8) //this is a jump label
/*800FD3C8 000FA1C8*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
RUNTIME_PPC_JUMP_LABEL(.L_800FD3CC, 0x800FD3CC) //this is a jump label
/*800FD3CC 000FA1CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r29));
/*800FD3D0 000FA1D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800FD3D4 000FA1D4*/ PPC::Runtime::ASM::ble(.L_800FD3E4);
/*800FD3D8 000FA1D8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x118);
/*800FD3DC 000FA1DC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800FD3E0 000FA1E0*/ PPC::Runtime::ASM::bl(fn_800EA084);
RUNTIME_PPC_JUMP_LABEL(.L_800FD3E4, 0x800FD3E4) //this is a jump label
/*800FD3E4 000FA1E4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FD3E8 000FA1E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r29));
/*800FD3EC 000FA1EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*800FD3F0 000FA1F0*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800FD3F4 000FA1F4*/ PPC::Runtime::ASM::beq(.L_800FD420);
/*800FD3F8 000FA1F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800FD3FC 000FA1FC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800FD400 000FA200*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r31));
/*800FD404 000FA204*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FD408 000FA208*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800FD40C 000FA20C*/ PPC::Runtime::ASM::bl(fn_800F6090);
/*800FD410 000FA210*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FD414 000FA214*/ PPC::Runtime::ASM::bne(.L_800FD420);
/*800FD418 000FA218*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF918 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD41C 000FA21C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800FD420, 0x800FD420) //this is a jump label
/*800FD420 000FA220*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800FD424 000FA224*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*800FD428 000FA228*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800FD42C 000FA22C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800FD430 000FA230*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF91C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD434 000FA234*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*800FD438 000FA238*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF918 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD43C 000FA23C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FD440 000FA240*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FD444 000FA244*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*800FD448 000FA248*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*800FD44C 000FA24C*/ PPC::Runtime::ASM::beq(.L_800FD46C);
/*800FD450 000FA250*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800FD454 000FA254*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800FD458 000FA258*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800FD45C 000FA25C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF91C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FD460 000FA260*/ PPC::Runtime::ASM::bl(fn_800DBD6C);
/*800FD464 000FA264*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800FD468 000FA268*/ PPC::Runtime::ASM::bl(fn_800DBE18);
RUNTIME_PPC_JUMP_LABEL(.L_800FD46C, 0x800FD46C) //this is a jump label
/*800FD46C 000FA26C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FD470 000FA270*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FD474 000FA274*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FD478 000FA278*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FD47C 000FA27C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FD480 000FA280*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FD484 000FA284*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800FD488 000FA288*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FD48C 000FA28C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800FD490 000FA290*/ PPC::Runtime::ASM::blr();
}