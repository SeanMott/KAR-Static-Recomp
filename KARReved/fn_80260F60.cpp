//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80260F60(PPC::Runtime::GCContext* context)
{
/*80260F60 0025DD60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80260F64 0025DD64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80260F68 0025DD68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260F6C 0025DD6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260F70 0025DD70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260F74 0025DD74*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80260F78 0025DD78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80260F7C 0025DD7C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260F80 0025DD80*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80260F84 0025DD84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260F88 0025DD88*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260F8C 0025DD8C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80260F90 0025DD90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260F94 0025DD94*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260F98 0025DD98*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80260F9C 0025DD9C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260FA0 0025DDA0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80260FA4 0025DDA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80260FA8 0025DDA8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260FAC 0025DDAC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80260FB0 0025DDB0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80260FB4 0025DDB4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80260FB8 0025DDB8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80260FBC 0025DDBC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F94 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260FC0 0025DDC0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80260FC4 0025DDC4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80260FC8 0025DDC8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F90 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80260FCC 0025DDCC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80260FD0 0025DDD0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80260FD4 0025DDD4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80260FD8 0025DDD8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80260FDC 0025DDDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80260FE0 0025DDE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80260FE4 0025DDE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80260FE8 0025DDE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80260FEC 0025DDEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80260FF0 0025DDF0*/ PPC::Runtime::ASM::blr();
}