//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025F718(PPC::Runtime::GCContext* context)
{
/*8025F718 0025C518*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025F71C 0025C51C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025F720 0025C520*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F724 0025C524*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F728 0025C528*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025F72C 0025C52C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025F730 0025C530*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025F734 0025C534*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F738 0025C538*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025F73C 0025C53C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F740 0025C540*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F744 0025C544*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025F748 0025C548*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F74C 0025C54C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F750 0025C550*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025F754 0025C554*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F758 0025C558*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025F75C 0025C55C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F760 0025C560*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F764 0025C564*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025F768 0025C568*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F76C 0025C56C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025F770 0025C570*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025F774 0025C574*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F4C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F778 0025C578*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025F77C 0025C57C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F780 0025C580*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F784 0025C584*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025F788 0025C588*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025F78C 0025C58C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025F790 0025C590*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025F794 0025C594*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F798 0025C598*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F79C 0025C59C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025F7A0 0025C5A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025F7A4 0025C5A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025F7A8 0025C5A8*/ PPC::Runtime::ASM::blr();
}