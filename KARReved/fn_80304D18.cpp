//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFFB8.hpp"



void fn_80304D18(PPC::Runtime::GCContext* context)
{
/*80304D18 00301B18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80304D1C 00301B1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80304D20 00301B20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80304D24 00301B24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80304D28 00301B28*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80304D2C 00301B2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80304D30 00301B30  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80304D34 00301B34*/ PPC::Runtime::ASM::beq(.L_80304D90);
/*80304D38 00301B38*/ PPC::Runtime::ASM::lis(context->r3, lbl_804DB4D4 @ Get_MemoryOffset_HighBit);
/*80304D3C 00301B3C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804DB4D4 @ Get_MemoryOffset_LowBit);
/*80304D40 00301B40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80304D44 00301B44*/ PPC::Runtime::ASM::beq(.L_80304D80);
/*80304D48 00301B48*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D6F5C @ Get_MemoryOffset_HighBit);
/*80304D4C 00301B4C*/ PPC::Runtime::ASM::lis(context->r3, String_ "AC_RUN_LOO" 4 @ Get_MemoryOffset_HighBit);
/*80304D50 00301B50*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804D6F5C @ Get_MemoryOffset_LowBit);
/*80304D54 00301B54*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80304D58 00301B58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80304D5C 00301B5C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, String_ "AC_RUN_LOO" 4 @ Get_MemoryOffset_LowBit);
/*80304D60 00301B60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80304D64 00301B64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*80304D68 00301B68*/ PPC::Runtime::ASM::bl(fn_802EFFB8);
/*80304D6C 00301B6C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80304D70 00301B70*/ PPC::Runtime::ASM::beq(.L_80304D80);
/*80304D74 00301B74*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*80304D78 00301B78*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*80304D7C 00301B7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80304D80, 0x80304D80) //this is a jump label
/*80304D80 00301B80*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80304D84 00301B84*/ PPC::Runtime::ASM::ble(.L_80304D90);
/*80304D88 00301B88*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80304D8C 00301B8C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80304D90, 0x80304D90) //this is a jump label
/*80304D90 00301B90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80304D94 00301B94*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80304D98 00301B98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80304D9C 00301B9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80304DA0 00301BA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80304DA4 00301BA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80304DA8 00301BA8*/ PPC::Runtime::ASM::blr();
}