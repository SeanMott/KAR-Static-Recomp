//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8038CB78.hpp"



void fn_8038C434(PPC::Runtime::GCContext* context)
{
/*8038C434 00389234*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8038C438 00389238*/ PPC::Runtime::ASM::mflr(context->r0);
/*8038C43C 0038923C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038C440 00389240*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8038C444 00389244  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8038C448 00389248*/ PPC::Runtime::ASM::beq(.L_8038C464);
/*8038C44C 0038924C*/ PPC::Runtime::ASM::lis(context->r5, lbl_804F4DB8 @ Get_MemoryOffset_HighBit);
/*8038C450 00389250*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*8038C454 00389254*/ PPC::Runtime::ASM::addi(context->r0, context->r5, lbl_804F4DB8 @ Get_MemoryOffset_LowBit);
/*8038C458 00389258*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8038C45C 0038925C*/ PPC::Runtime::ASM::ble(.L_8038C464);
/*8038C460 00389260*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8038C464, 0x8038C464) //this is a jump label
/*8038C464 00389264*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038C468 00389268*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8038C46C 0038926C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038C470 00389270*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8038C474 00389274*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8038C478 00389278*/ PPC::Runtime::ASM::blr();
}