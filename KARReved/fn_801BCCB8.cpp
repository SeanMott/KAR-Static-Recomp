//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_AS_SwimWait.hpp"
#include "fn_AS_SwimWait.hpp"



void fn_801BCCB8(PPC::Runtime::GCContext* context)
{
/*801BCCB8 001B9AB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BCCBC 001B9ABC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BCCC0 001B9AC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BCCC4 001B9AC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*801BCCC8 001B9AC8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x7a);
/*801BCCCC 001B9ACC*/ PPC::Runtime::ASM::bne(.L_801BCCDC);
/*801BCCD0 001B9AD0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x298, context->r3));
/*801BCCD4 001B9AD4*/ PPC::Runtime::ASM::bl(fn_AS_SwimWait);
/*801BCCD8 001B9AD8*/ PPC::Runtime::ASM::b(.L_801BCCEC);
RUNTIME_PPC_JUMP_LABEL(.L_801BCCDC, 0x801BCCDC) //this is a jump label
/*801BCCDC 001B9ADC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801BCCE0 001B9AE0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E17F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BCCE4 001B9AE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r3));
/*801BCCE8 001B9AE8*/ PPC::Runtime::ASM::bl(fn_AS_SwimWait);
RUNTIME_PPC_JUMP_LABEL(.L_801BCCEC, 0x801BCCEC) //this is a jump label
/*801BCCEC 001B9AEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BCCF0 001B9AF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BCCF4 001B9AF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BCCF8 001B9AF8*/ PPC::Runtime::ASM::blr();
}