//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_8019FF94(PPC::Runtime::GCContext* context)
{
/*8019FF94 0019CD94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8019FF98 0019CD98*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019FF9C 0019CD9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8019FFA0 0019CDA0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*8019FFA4 0019CDA4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8019FFA8 0019CDA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019FFAC 0019CDAC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8019FFB0 0019CDB0*/ PPC::Runtime::ASM::bl(fn_80190948);
/*8019FFB4 0019CDB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*8019FFB8 0019CDB8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8019FFBC 0019CDBC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019FFC0 0019CDC0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019FFC4 0019CDC4*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*8019FFC8 0019CDC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8019FFCC 0019CDCC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019FFD0 0019CDD0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019FFD4 0019CDD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8019FFD8 0019CDD8*/ PPC::Runtime::ASM::blr();
}