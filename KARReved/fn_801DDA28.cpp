//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80192720.hpp"



void fn_801DDA28(PPC::Runtime::GCContext* context)
{
/*801DDA28 001DA828*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801DDA2C 001DA82C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DDA30 001DA830*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DDA34 001DA834*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DDA38 001DA838*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801DDA3C 001DA83C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801DDA40 001DA840*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801DDA44 001DA844*/ PPC::Runtime::ASM::beq(.L_801DDA7C);
/*801DDA48 001DA848*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801DDA4C 001DA84C*/ PPC::Runtime::ASM::bl(fn_80192720);
/*801DDA50 001DA850*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801DDA54 001DA854*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801DDA58 001DA858*/ PPC::Runtime::ASM::bl(fn_8040BCA0);
/*801DDA5C 001DA85C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801DDA60 001DA860*/ PPC::Runtime::ASM::beq(.L_801DDA6C);
/*801DDA64 001DA864*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801DDA68 001DA868*/ PPC::Runtime::ASM::b(.L_801DDA70);
RUNTIME_PPC_JUMP_LABEL(.L_801DDA6C, 0x801DDA6C) //this is a jump label
/*801DDA6C 001DA86C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801DDA70, 0x801DDA70) //this is a jump label
/*801DDA70 001DA870*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801DDA74 001DA874*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801DDA78 001DA878*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_801DDA7C, 0x801DDA7C) //this is a jump label
/*801DDA7C 001DA87C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DDA80 001DA880*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DDA84 001DA884*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DDA88 001DA888*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801DDA8C 001DA88C*/ PPC::Runtime::ASM::blr();
}