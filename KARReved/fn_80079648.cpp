//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"
#include "fn_80062CA4.hpp"



void fn_80079648(PPC::Runtime::GCContext* context)
{
/*80079648 00076448*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8007964C 0007644C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80079650 00076450*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80079654 00076454*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80079658 00076458*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8007965C 0007645C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80079660 00076460*/ PPC::Runtime::ASM::addi(context->r31, context->r30, 0x18);
/*80079664 00076464*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80079668 00076468*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8007966C 0007646C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80079670 00076470*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*80079674 00076474*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*80079678 00076478*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8007967C 0007647C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*80079680 00076480*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*80079684 00076484*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DED50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80079688 00076488*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*8007968C 0007648C*/ PPC::Runtime::ASM::beq(.L_800796A0);
/*80079690 00076490*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80079694 00076494*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80079698 00076498*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*8007969C 0007649C*/ PPC::Runtime::ASM::b(.L_800796AC);
RUNTIME_PPC_JUMP_LABEL(.L_800796A0, 0x800796A0) //this is a jump label
/*800796A0 000764A0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*800796A4 000764A4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*800796A8 000764A8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800796AC, 0x800796AC) //this is a jump label
/*800796AC 000764AC*/ PPC::Runtime::ASM::addi(context->r31, context->r30, 0x28);
/*800796B0 000764B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800796B4 000764B4*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*800796B8 000764B8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DED50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800796BC 000764BC*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*800796C0 000764C0*/ PPC::Runtime::ASM::beq(.L_800796D4);
/*800796C4 000764C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800796C8 000764C8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800796CC 000764CC*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*800796D0 000764D0*/ PPC::Runtime::ASM::b(.L_800796E0);
RUNTIME_PPC_JUMP_LABEL(.L_800796D4, 0x800796D4) //this is a jump label
/*800796D4 000764D4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*800796D8 000764D8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*800796DC 000764DC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800796E0, 0x800796E0) //this is a jump label
/*800796E0 000764E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800796E4 000764E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800796E8 000764E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800796EC 000764EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800796F0 000764F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800796F4 000764F4*/ PPC::Runtime::ASM::blr();
}