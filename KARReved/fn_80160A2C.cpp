//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801388A8.hpp"
#include "fn_801609BC.hpp"
#include "fn_801609BC.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138A00.hpp"



void fn_80160A2C(PPC::Runtime::GCContext* context)
{
/*80160A2C 0015D82C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80160A30 0015D830*/ PPC::Runtime::ASM::mflr(context->r0);
/*80160A34 0015D834*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80160A38 0015D838*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80160A3C 0015D83C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80160A40 0015D840*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80160A44 0015D844*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80160A48 0015D848*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80160A4C 0015D84C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23c, context->r3));
/*80160A50 0015D850*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80160A54 0015D854*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80160A58 0015D858*/ PPC::Runtime::ASM::bl(fn_801388A8);
/*80160A5C 0015D85C*/ PPC::Runtime::ASM::lis(context->r4, fn_801609BC @ Get_MemoryOffset_HighBit);
/*80160A60 0015D860*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80160A64 0015D864*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80160A68 0015D868*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*80160A6C 0015D86C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801609BC @ Get_MemoryOffset_LowBit);
/*80160A70 0015D870*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*80160A74 0015D874*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23c, context->r31));
/*80160A78 0015D878*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80160A7C 0015D87C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0950 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80160A80 0015D880*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80160A84 0015D884*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E0954 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80160A88 0015D888*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*80160A8C 0015D88C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80160A90 0015D890*/ PPC::Runtime::ASM::li(context->r4, 0xb3);
/*80160A94 0015D894*/ PPC::Runtime::ASM::bl(fn_80138A00);
/*80160A98 0015D898*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r31));
/*80160A9C 0015D89C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80160AA0 0015D8A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80160AA4 0015D8A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80160AA8 0015D8A8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80160AAC 0015D8AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80160AB0 0015D8B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80160AB4 0015D8B4*/ PPC::Runtime::ASM::blr();
}