//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EE73C.hpp"
#include "fn_800EE708.hpp"
#include "fn_8011120C.hpp"
#include "fn_800F7A64.hpp"
#include "fn_801018F8.hpp"
#include "fn_8010181C.hpp"
#include "fn_800F7D64.hpp"
#include "fn_80114010.hpp"
#include "fn_800ED784.hpp"



void fn_event_pillar_start(PPC::Runtime::GCContext* context)
{
/*8011111C 0010DF1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*80111120 0010DF20*/ PPC::Runtime::ASM::mflr(context->r0);
/*80111124 0010DF24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80111128 0010DF28*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8011112C 0010DF2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80111130 0010DF30*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80111134 0010DF34*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80111138 0010DF38*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8011113C 0010DF3C*/ PPC::Runtime::ASM::bl(fn_800EE73C);
/*80111140 0010DF40*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80111144 0010DF44*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80111148 0010DF48*/ PPC::Runtime::ASM::bl(fn_800EE708);
/*8011114C 0010DF4C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80111150 0010DF50*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*80111154 0010DF54*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*80111158 0010DF58*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*8011115C 0010DF5C*/ PPC::Runtime::ASM::bl(fn_8011120C);
/*80111160 0010DF60*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80111164 0010DF64*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80111168 0010DF68*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD740 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8011116C 0010DF6C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE330 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80111170 0010DF70*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*80111174 0010DF74*/ PPC::Runtime::ASM::b(.L_80111194);
RUNTIME_PPC_JUMP_LABEL(.L_80111178, 0x80111178) //this is a jump label
/*80111178 0010DF78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8011117C 0010DF7C*/ PPC::Runtime::ASM::bl(fn_800F7A64);
/*80111180 0010DF80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x28);
/*80111184 0010DF84*/ PPC::Runtime::ASM::bne(.L_80111190);
/*80111188 0010DF88*/ PPC::Runtime::ASM::stw(context->r30, STRUCT_BYTE4_COUNT_1805DD740 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8011118C 0010DF8C*/ PPC::Runtime::ASM::b(.L_8011119C);
RUNTIME_PPC_JUMP_LABEL(.L_80111190, 0x80111190) //this is a jump label
/*80111190 0010DF90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80111194, 0x80111194) //this is a jump label
/*80111194 0010DF94*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80111198 0010DF98*/ PPC::Runtime::ASM::bne(.L_80111178);
RUNTIME_PPC_JUMP_LABEL(.L_8011119C, 0x8011119C) //this is a jump label
/*8011119C 0010DF9C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD740 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801111A0 0010DFA0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801111A4 0010DFA4*/ PPC::Runtime::ASM::beq(.L_801111BC);
/*801111A8 0010DFA8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801111AC 0010DFAC*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*801111B0 0010DFB0*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*801111B4 0010DFB4*/ PPC::Runtime::ASM::bl(fn_801018F8);
/*801111B8 0010DFB8*/ PPC::Runtime::ASM::b(.L_801111D0);
RUNTIME_PPC_JUMP_LABEL(.L_801111BC, 0x801111BC) //this is a jump label
/*801111BC 0010DFBC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801111C0 0010DFC0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*801111C4 0010DFC4*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*801111C8 0010DFC8*/ PPC::Runtime::ASM::bl(fn_8010181C);
/*801111CC 0010DFCC*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DD740 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_801111D0, 0x801111D0) //this is a jump label
/*801111D0 0010DFD0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*801111D4 0010DFD4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*801111D8 0010DFD8*/ PPC::Runtime::ASM::bl(fn_800F7D64);
/*801111DC 0010DFDC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*801111E0 0010DFE0*/ PPC::Runtime::ASM::bl(fn_80114010);
/*801111E4 0010DFE4*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*801111E8 0010DFE8*/ PPC::Runtime::ASM::bl(fn_800ED784);
/*801111EC 0010DFEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801111F0 0010DFF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801111F4 0010DFF4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801111F8 0010DFF8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801111FC 0010DFFC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80111200 0010E000*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80111204 0010E004*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80111208 0010E008*/ PPC::Runtime::ASM::blr();
}