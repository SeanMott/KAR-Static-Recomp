//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8011A60C(PPC::Runtime::GCContext* context)
{
/*8011A60C 0011740C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8011A610 00117410*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011A614 00117414*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011A618 00117418*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011A61C 0011741C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011A620 00117420*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011A624 00117424*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011A628 00117428*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x200);
/*8011A62C 0011742C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8011A630 00117430*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8011A634, 0x8011A634) //this is a jump label
/*8011A634 00117434*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8011A638 00117438*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011A63C 0011743C*/ PPC::Runtime::ASM::beq(.L_8011A648);
/*8011A640 00117440*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8011A644 00117444*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8011A648, 0x8011A648) //this is a jump label
/*8011A648 00117448*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8011A64C 0011744C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8011A650 00117450*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8011A654 00117454*/ PPC::Runtime::ASM::blt(.L_8011A634);
/*8011A658 00117458*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011A65C 0011745C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011A660 00117460*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011A664 00117464*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011A668 00117468*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011A66C 0011746C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8011A670 00117470*/ PPC::Runtime::ASM::blr();
}