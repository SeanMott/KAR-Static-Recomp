//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000FCB0.hpp"



void fn_8000AC60(PPC::Runtime::GCContext* context)
{
/*8000AC60 00007A60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000AC64 00007A64*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000AC68 00007A68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AC6C 00007A6C*/ PPC::Runtime::ASM::bl(fn_8000FCB0);
/*8000AC70 00007A70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8000AC74 00007A74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AC78 00007A78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*8000AC7C 00007A7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AC80 00007A80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000AC84 00007A84*/ PPC::Runtime::ASM::blr();
}