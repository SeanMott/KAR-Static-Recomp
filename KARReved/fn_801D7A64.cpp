//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___flush_callback_Fv_zdOptionUse3.hpp"
#include "fn_8018A188.hpp"
#include "fn_80189D34.hpp"



void fn_801D7A64(PPC::Runtime::GCContext* context)
{
/*801D7A64 001D4864*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D7A68 001D4868*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D7A6C 001D486C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7A70 001D4870*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7A74 001D4874*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7A78 001D4878*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801D7A7C 001D487C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r3));
/*801D7A80 001D4880*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801D7A84 001D4884*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x190, context->r3));
/*801D7A88 001D4888*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x190);
/*801D7A8C 001D488C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D7A90 001D4890*/ PPC::Runtime::ASM::beq(.L_801D7AB0);
/*801D7A94 001D4894*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7A98 001D4898*/ PPC::Runtime::ASM::bl(fn___flush_callback_Fv_zdOptionUse3);
/*801D7A9C 001D489C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x310, context->r30));
/*801D7AA0 001D48A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7AA4 001D48A4*/ PPC::Runtime::ASM::bl(fn_8018A188);
/*801D7AA8 001D48A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D7AAC 001D48AC*/ PPC::Runtime::ASM::bl(fn_80189D34);
RUNTIME_PPC_JUMP_LABEL(.L_801D7AB0, 0x801D7AB0) //this is a jump label
/*801D7AB0 001D48B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D7AB4 001D48B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D7AB8 001D48B8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D7ABC 001D48BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D7AC0 001D48C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D7AC4 001D48C4*/ PPC::Runtime::ASM::blr();
}