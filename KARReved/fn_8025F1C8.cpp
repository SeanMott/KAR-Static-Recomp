//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025F1C8(PPC::Runtime::GCContext* context)
{
/*8025F1C8 0025BFC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025F1CC 0025BFCC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025F1D0 0025BFD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F1D4 0025BFD4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F1D8 0025BFD8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025F1DC 0025BFDC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025F1E0 0025BFE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025F1E4 0025BFE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F1E8 0025BFE8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025F1EC 0025BFEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F1F0 0025BFF0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F1F4 0025BFF4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025F1F8 0025BFF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F1FC 0025BFFC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F200 0025C000*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025F204 0025C004*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F208 0025C008*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025F20C 0025C00C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F210 0025C010*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F214 0025C014*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025F218 0025C018*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F21C 0025C01C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025F220 0025C020*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025F224 0025C024*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F3C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F228 0025C028*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025F22C 0025C02C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F230 0025C030*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F234 0025C034*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025F238 0025C038*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025F23C 0025C03C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025F240 0025C040*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025F244 0025C044*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F248 0025C048*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F24C 0025C04C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025F250 0025C050*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025F254 0025C054*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025F258 0025C058*/ PPC::Runtime::ASM::blr();
}