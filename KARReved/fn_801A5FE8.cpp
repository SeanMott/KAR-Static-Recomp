//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191680.hpp"
#include "fn_801ACFD0.hpp"



void fn_801A5FE8(PPC::Runtime::GCContext* context)
{
/*801A5FE8 001A2DE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A5FEC 001A2DEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A5FF0 001A2DF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A5FF4 001A2DF4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A5FF8 001A2DF8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A5FFC 001A2DFC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x934, context->r3));
/*801A6000 001A2E00*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801A6004 001A2E04*/ PPC::Runtime::ASM::beq(.L_801A6010);
/*801A6008 001A2E08*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801A600C 001A2E0C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801A6010, 0x801A6010) //this is a jump label
/*801A6010 001A2E10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A6014 001A2E14*/ PPC::Runtime::ASM::bl(fn_80191680);
/*801A6018 001A2E18*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A601C 001A2E1C*/ PPC::Runtime::ASM::beq(.L_801A602C);
/*801A6020 001A2E20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A6024 001A2E24*/ PPC::Runtime::ASM::bl(fn_801ACFD0);
/*801A6028 001A2E28*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801A602C, 0x801A602C) //this is a jump label
/*801A602C 001A2E2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A6030 001A2E30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A6034 001A2E34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A6038 001A2E38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A603C 001A2E3C*/ PPC::Runtime::ASM::blr();
}