//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn___AICallbackStackSwitch(PPC::Runtime::GCContext* context)
{
/*803DFCFC 003DCAFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DFD00 003DCB00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DFD04 003DCB04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803DFD08 003DCB08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DFD0C 003DCB0C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803DFD10 003DCB10*/ PPC::Runtime::ASM::lis(context->r5, STRUCT_BYTE4_COUNT_1805DDFCC @ Get_MemoryOffset_HighBit);
/*803DFD14 003DCB14*/ PPC::Runtime::ASM::addi(context->r5, context->r5, STRUCT_BYTE4_COUNT_1805DDFCC @ Get_MemoryOffset_LowBit);
/*803DFD18 003DCB18*/ PPC::Runtime::ASM::stw(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803DFD1C 003DCB1C*/ PPC::Runtime::ASM::lis(context->r5, STRUCT_BYTE4_COUNT_1805DDFC8 @ Get_MemoryOffset_HighBit);
/*803DFD20 003DCB20*/ PPC::Runtime::ASM::addi(context->r5, context->r5, STRUCT_BYTE4_COUNT_1805DDFC8 @ Get_MemoryOffset_LowBit);
/*803DFD24 003DCB24*/ PPC::Runtime::ASM::lwz(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803DFD28 003DCB28*/ PPC::Runtime::ASM::subi(context->r1, context->r1, 0x8);
/*803DFD2C 003DCB2C*/ PPC::Runtime::ASM::mtlr(context->r31);
/* 803DFD30 003DCB30  4E 80 00 21 */ blrl
/*803DFD34 003DCB34*/ PPC::Runtime::ASM::lis(context->r5, STRUCT_BYTE4_COUNT_1805DDFCC @ Get_MemoryOffset_HighBit);
/*803DFD38 003DCB38*/ PPC::Runtime::ASM::addi(context->r5, context->r5, STRUCT_BYTE4_COUNT_1805DDFCC @ Get_MemoryOffset_LowBit);
/*803DFD3C 003DCB3C*/ PPC::Runtime::ASM::lwz(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803DFD40 003DCB40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DFD44 003DCB44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803DFD48 003DCB48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803DFD4C 003DCB4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DFD50 003DCB50*/ PPC::Runtime::ASM::blr();
}