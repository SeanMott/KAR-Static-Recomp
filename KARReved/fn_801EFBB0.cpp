//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801EFBB0(PPC::Runtime::GCContext* context)
{
/*801EFBB0 001EC9B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EFBB4 001EC9B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EFBB8 001EC9B8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1F48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EFBBC 001EC9BC*/ PPC::Runtime::ASM::li(context->r4, 0x12);
/*801EFBC0 001EC9C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFBC4 001EC9C4*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801EFBC8 001EC9C8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1F4C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EFBCC 001EC9CC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801EFBD0 001EC9D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFBD4 001EC9D4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EFBD8 001EC9D8*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801EFBDC 001EC9DC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFBE0 001EC9E0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EFBE4 001EC9E4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801EFBE8 001EC9E8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFBEC 001EC9EC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFBF0 001EC9F0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801EFBF4 001EC9F4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801EFBF8 001EC9F8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801EFBFC 001EC9FC*/ PPC::Runtime::ASM::extrwi(context->r0, context->r3, 2, 26);
/*801EFC00 001ECA00*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801EFC04 001ECA04*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 4, 26, 27);
/*801EFC08 001ECA08*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801EFC0C 001ECA0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EFC10 001ECA10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EFC14 001ECA14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EFC18 001ECA18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EFC1C 001ECA1C*/ PPC::Runtime::ASM::blr();
}