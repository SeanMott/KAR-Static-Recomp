//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"



void fn_801FE110(PPC::Runtime::GCContext* context)
{
/*801FE110 001FAF10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801FE114 001FAF14*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FE118 001FAF18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801FE11C 001FAF1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801FE120 001FAF20*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FE124 001FAF24*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801FE128 001FAF28*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FE12C 001FAF2C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801FE130, 0x801FE130) //this is a jump label
/*801FE130 001FAF30*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r31));
/*801FE134 001FAF34*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*801FE138 001FAF38*/ PPC::Runtime::ASM::beq(.L_801FE1B4);
/*801FE13C 001FAF3C*/ PPC::Runtime::ASM::bne(.L_801FE150);
/*801FE140 001FAF40*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70E8 @ Get_MemoryOffset_SDA21);
/*801FE144 001FAF44*/ PPC::Runtime::ASM::li(context->r4, 0x4af);
/*801FE148 001FAF48*/ PPC::Runtime::ASM::li(context->r5, lbl_805D70F0 @ Get_MemoryOffset_SDA21);
/*801FE14C 001FAF4C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801FE150, 0x801FE150) //this is a jump label
/*801FE150 001FAF50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*801FE154 001FAF54*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*801FE158 001FAF58*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 9, 5);
/*801FE15C 001FAF5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*801FE160 001FAF60*/ PPC::Runtime::ASM::beq(.L_801FE1A4);
/*801FE164 001FAF64*/ PPC::Runtime::ASM::bne(.L_801FE178);
/*801FE168 001FAF68*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70E8 @ Get_MemoryOffset_SDA21);
/*801FE16C 001FAF6C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801FE170 001FAF70*/ PPC::Runtime::ASM::li(context->r5, lbl_805D70F0 @ Get_MemoryOffset_SDA21);
/*801FE174 001FAF74*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801FE178, 0x801FE178) //this is a jump label
/*801FE178 001FAF78*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*801FE17C 001FAF7C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801FE180 001FAF80*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*801FE184 001FAF84*/ PPC::Runtime::ASM::bne(.L_801FE194);
/*801FE188 001FAF88*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*801FE18C 001FAF8C*/ PPC::Runtime::ASM::beq(.L_801FE194);
/*801FE190 001FAF90*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801FE194, 0x801FE194) //this is a jump label
/*801FE194 001FAF94*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FE198 001FAF98*/ PPC::Runtime::ASM::bne(.L_801FE1A4);
/*801FE19C 001FAF9C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801FE1A0 001FAFA0*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_801FE1A4, 0x801FE1A4) //this is a jump label
/*801FE1A4 001FAFA4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x918);
/*801FE1A8 001FAFA8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801FE1AC 001FAFAC*/ PPC::Runtime::ASM::li(context->r5, 0x1c);
/*801FE1B0 001FAFB0*/ PPC::Runtime::ASM::bl(memset);
RUNTIME_PPC_JUMP_LABEL(.L_801FE1B4, 0x801FE1B4) //this is a jump label
/*801FE1B4 001FAFB4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801FE1B8 001FAFB8*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1c);
/*801FE1BC 001FAFBC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x2);
/*801FE1C0 001FAFC0*/ PPC::Runtime::ASM::blt(.L_801FE130);
/*801FE1C4 001FAFC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801FE1C8 001FAFC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801FE1CC 001FAFCC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801FE1D0 001FAFD0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FE1D4 001FAFD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FE1D8 001FAFD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801FE1DC 001FAFDC*/ PPC::Runtime::ASM::blr();
}