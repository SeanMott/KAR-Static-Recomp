//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801917A4.hpp"



void fn_801B975C(PPC::Runtime::GCContext* context)
{
/*801B975C 001B655C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801B9760 001B6560*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B9764 001B6564*/ PPC::Runtime::ASM::lis(context->r5, lbl_804AF7A0 @ Get_MemoryOffset_HighBit);
/*801B9768 001B6568*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801B976C 001B656C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801B9770 001B6570*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801B9774 001B6574*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B9778 001B6578*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801B977C 001B657C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801B9780 001B6580*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801B9784 001B6584*/ PPC::Runtime::ASM::lbz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa41, context->r3));
/*801B9788 001B6588*/ PPC::Runtime::ASM::lwz(context->r30, lbl_804AF7A0 @ Get_MemoryOffset_LowBit ( context->r5 ));
/*801B978C 001B658C*/ PPC::Runtime::ASM::bl(fn_801917A4);
/*801B9790 001B6590*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B9794 001B6594*/ PPC::Runtime::ASM::beq(.L_801B97AC);
/*801B9798 001B6598*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*801B979C 001B659C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x13);
/*801B97A0 001B65A0*/ PPC::Runtime::ASM::bne(.L_801B97AC);
/*801B97A4 001B65A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*801B97A8 001B65A8*/ PPC::Runtime::ASM::b(.L_801B989C);
RUNTIME_PPC_JUMP_LABEL(.L_801B97AC, 0x801B97AC) //this is a jump label
/*801B97AC 001B65AC*/ PPC::Runtime::ASM::subi(context->r0, context->r29, 0xd);
/*801B97B0 001B65B0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x6);
/*801B97B4 001B65B4*/ PPC::Runtime::ASM::bgt(.L_801B989C);
/*801B97B8 001B65B8*/ PPC::Runtime::ASM::lis(context->r3, jumptable_804AF7B0 @ Get_MemoryOffset_HighBit);
/*801B97BC 001B65BC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801B97C0 001B65C0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_804AF7B0 @ Get_MemoryOffset_LowBit);
/*801B97C4 001B65C4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*801B97C8 001B65C8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*801B97CC 001B65CC*/ PPC::Runtime::ASM::bctr();
/*801B97D0 001B65D0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801B97D4 001B65D4*/ PPC::Runtime::ASM::bne(.L_801B97E0);
/*801B97D8 001B65D8*/ PPC::Runtime::ASM::li(context->r30, 0x58);
/*801B97DC 001B65DC*/ PPC::Runtime::ASM::b(.L_801B989C);
RUNTIME_PPC_JUMP_LABEL(.L_801B97E0, 0x801B97E0) //this is a jump label
/*801B97E0 001B65E0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AF7A0 @ Get_MemoryOffset_HighBit);
/*801B97E4 001B65E4*/ PPC::Runtime::ASM::lwz(context->r0, lbl_804AF7A0 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*801B97E8 001B65E8*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r31);
/*801B97EC 001B65EC*/ PPC::Runtime::ASM::b(.L_801B989C);
/*801B97F0 001B65F0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801B97F4 001B65F4*/ PPC::Runtime::ASM::bne(.L_801B9800);
/*801B97F8 001B65F8*/ PPC::Runtime::ASM::li(context->r30, 0x59);
/*801B97FC 001B65FC*/ PPC::Runtime::ASM::b(.L_801B989C);
RUNTIME_PPC_JUMP_LABEL(.L_801B9800, 0x801B9800) //this is a jump label
/*801B9800 001B6600*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AF7A0 @ Get_MemoryOffset_HighBit);
/*801B9804 001B6604*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804AF7A0 @ Get_MemoryOffset_LowBit);
/*801B9808 001B6608*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801B980C 001B660C*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r31);
/*801B9810 001B6610*/ PPC::Runtime::ASM::b(.L_801B989C);
/*801B9814 001B6614*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801B9818 001B6618*/ PPC::Runtime::ASM::bne(.L_801B9824);
/*801B981C 001B661C*/ PPC::Runtime::ASM::li(context->r30, 0x5a);
/*801B9820 001B6620*/ PPC::Runtime::ASM::b(.L_801B989C);
RUNTIME_PPC_JUMP_LABEL(.L_801B9824, 0x801B9824) //this is a jump label
/*801B9824 001B6624*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AF7A0 @ Get_MemoryOffset_HighBit);
/*801B9828 001B6628*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804AF7A0 @ Get_MemoryOffset_LowBit);
/*801B982C 001B662C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801B9830 001B6630*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r31);
/*801B9834 001B6634*/ PPC::Runtime::ASM::b(.L_801B989C);
/*801B9838 001B6638*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801B983C 001B663C*/ PPC::Runtime::ASM::bne(.L_801B9848);
/*801B9840 001B6640*/ PPC::Runtime::ASM::li(context->r30, 0x5b);
/*801B9844 001B6644*/ PPC::Runtime::ASM::b(.L_801B989C);
RUNTIME_PPC_JUMP_LABEL(.L_801B9848, 0x801B9848) //this is a jump label
/*801B9848 001B6648*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AF7A0 @ Get_MemoryOffset_HighBit);
/*801B984C 001B664C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804AF7A0 @ Get_MemoryOffset_LowBit);
/*801B9850 001B6650*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801B9854 001B6654*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r31);
/*801B9858 001B6658*/ PPC::Runtime::ASM::b(.L_801B989C);
/*801B985C 001B665C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*801B9860 001B6660*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x13);
/*801B9864 001B6664*/ PPC::Runtime::ASM::bne(.L_801B9870);
/*801B9868 001B6668*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*801B986C 001B666C*/ PPC::Runtime::ASM::b(.L_801B989C);
RUNTIME_PPC_JUMP_LABEL(.L_801B9870, 0x801B9870) //this is a jump label
/*801B9870 001B6670*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*801B9874 001B6674*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*801B9878 001B6678*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x209);
/*801B987C 001B667C*/ PPC::Runtime::ASM::b(.L_801B989C);
/*801B9880 001B6680*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*801B9884 001B6684*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*801B9888 001B6688*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x205);
/*801B988C 001B668C*/ PPC::Runtime::ASM::b(.L_801B989C);
/*801B9890 001B6690*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*801B9894 001B6694*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*801B9898 001B6698*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x201);
RUNTIME_PPC_JUMP_LABEL(.L_801B989C, 0x801B989C) //this is a jump label
/*801B989C 001B669C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801B98A0 001B66A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801B98A4 001B66A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801B98A8 001B66A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801B98AC 001B66AC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B98B0 001B66B0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801B98B4 001B66B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B98B8 001B66B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801B98BC 001B66BC*/ PPC::Runtime::ASM::blr();
}