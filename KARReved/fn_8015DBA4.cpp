//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8015AA5C.hpp"
#include "fn_8015AA5C.hpp"



void fn_8015DBA4(PPC::Runtime::GCContext* context)
{
/*8015DBA4 0015A9A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015DBA8 0015A9A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015DBAC 0015A9AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015DBB0 0015A9B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015DBB4 0015A9B4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015DBB8 0015A9B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015DBBC 0015A9BC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8015DBC0 0015A9C0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015DBC4 0015A9C4*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8015DBC8 0015A9C8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015DBCC 0015A9CC*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8015DBD0 0015A9D0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8ac, context->r3));
/*8015DBD4 0015A9D4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8015DBD8 0015A9D8*/ PPC::Runtime::ASM::beq(.L_8015DC98);
/*8015DBDC 0015A9DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8015DBE0 0015A9E0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r30);
/*8015DBE4 0015A9E4*/ PPC::Runtime::ASM::stb(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15, context->r3));
/*8015DBE8 0015A9E8*/ PPC::Runtime::ASM::bne(.L_8015DC00);
/*8015DBEC 0015A9EC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r3));
/*8015DBF0 0015A9F0*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8015DBF4 0015A9F4*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*8015DBF8 0015A9F8*/ PPC::Runtime::ASM::bl(fn_8015AA5C);
/*8015DBFC 0015A9FC*/ PPC::Runtime::ASM::b(.L_8015DC10);
RUNTIME_PPC_JUMP_LABEL(.L_8015DC00, 0x8015DC00) //this is a jump label
/*8015DC00 0015AA00*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r3));
/*8015DC04 0015AA04*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8015DC08 0015AA08*/ PPC::Runtime::ASM::li(context->r4, 0xb);
/*8015DC0C 0015AA0C*/ PPC::Runtime::ASM::bl(fn_8015AA5C);
RUNTIME_PPC_JUMP_LABEL(.L_8015DC10, 0x8015DC10) //this is a jump label
/*8015DC10 0015AA10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*8015DC14 0015AA14*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8015DC18 0015AA18*/ PPC::Runtime::ASM::bne(.L_8015DC2C);
/*8015DC1C 0015AA1C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D69A0 @ Get_MemoryOffset_SDA21);
/*8015DC20 0015AA20*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8015DC24 0015AA24*/ PPC::Runtime::ASM::li(context->r5, lbl_805D69A8 @ Get_MemoryOffset_SDA21);
/*8015DC28 0015AA28*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8015DC2C, 0x8015DC2C) //this is a jump label
/*8015DC2C 0015AA2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8015DC30 0015AA30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015DC34 0015AA34*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8015DC38 0015AA38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8015DC3C 0015AA3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015DC40 0015AA40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8015DC44 0015AA44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8015DC48 0015AA48*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8015DC4C 0015AA4C*/ PPC::Runtime::ASM::bne(.L_8015DC98);
/*8015DC50 0015AA50*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8015DC54 0015AA54*/ PPC::Runtime::ASM::beq(.L_8015DC98);
/*8015DC58 0015AA58*/ PPC::Runtime::ASM::bne(.L_8015DC6C);
/*8015DC5C 0015AA5C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D69A0 @ Get_MemoryOffset_SDA21);
/*8015DC60 0015AA60*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8015DC64 0015AA64*/ PPC::Runtime::ASM::li(context->r5, lbl_805D69A8 @ Get_MemoryOffset_SDA21);
/*8015DC68 0015AA68*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8015DC6C, 0x8015DC6C) //this is a jump label
/*8015DC6C 0015AA6C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8015DC70 0015AA70*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8015DC74 0015AA74*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8015DC78 0015AA78*/ PPC::Runtime::ASM::bne(.L_8015DC88);
/*8015DC7C 0015AA7C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8015DC80 0015AA80*/ PPC::Runtime::ASM::beq(.L_8015DC88);
/*8015DC84 0015AA84*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8015DC88, 0x8015DC88) //this is a jump label
/*8015DC88 0015AA88*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8015DC8C 0015AA8C*/ PPC::Runtime::ASM::bne(.L_8015DC98);
/*8015DC90 0015AA90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8015DC94 0015AA94*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8015DC98, 0x8015DC98) //this is a jump label
/*8015DC98 0015AA98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015DC9C 0015AA9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015DCA0 0015AAA0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015DCA4 0015AAA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015DCA8 0015AAA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015DCAC 0015AAAC*/ PPC::Runtime::ASM::blr();
}