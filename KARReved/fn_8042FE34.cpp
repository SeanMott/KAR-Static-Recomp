//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_JOBJ_SetMtxDirtySub.hpp"



void fn_8042FE34(PPC::Runtime::GCContext* context)
{
/*8042FE34 0042CC34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8042FE38 0042CC38*/ PPC::Runtime::ASM::mflr(context->r0);
/*8042FE3C 0042CC3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8042FE40 0042CC40*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8042FE44 0042CC44*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8042FE48 0042CC48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8042FE4C 0042CC4C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8042FE50 0042CC50*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8042FE54 0042CC54*/ PPC::Runtime::ASM::bne(.L_8042FE68);
/*8042FE58 0042CC58*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_474 @ Get_MemoryOffset_SDA21);
/*8042FE5C 0042CC5C*/ PPC::Runtime::ASM::li(context->r4, 0x46b);
/*8042FE60 0042CC60*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_473 @ Get_MemoryOffset_SDA21);
/*8042FE64 0042CC64*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8042FE68, 0x8042FE68) //this is a jump label
/*8042FE68 0042CC68*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8042FE6C 0042CC6C*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f31);
/*8042FE70 0042CC70*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8042FE74 0042CC74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8042FE78 0042CC78*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8042FE7C 0042CC7C*/ PPC::Runtime::ASM::bne(.L_8042FEC8);
/*8042FE80 0042CC80*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8042FE84 0042CC84*/ PPC::Runtime::ASM::beq(.L_8042FEC8);
/*8042FE88 0042CC88*/ PPC::Runtime::ASM::bne(.L_8042FE9C);
/*8042FE8C 0042CC8C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_474 @ Get_MemoryOffset_SDA21);
/*8042FE90 0042CC90*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8042FE94 0042CC94*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_473 @ Get_MemoryOffset_SDA21);
/*8042FE98 0042CC98*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8042FE9C, 0x8042FE9C) //this is a jump label
/*8042FE9C 0042CC9C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8042FEA0 0042CCA0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8042FEA4 0042CCA4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8042FEA8 0042CCA8*/ PPC::Runtime::ASM::bne(.L_8042FEB8);
/*8042FEAC 0042CCAC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8042FEB0 0042CCB0*/ PPC::Runtime::ASM::beq(.L_8042FEB8);
/*8042FEB4 0042CCB4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8042FEB8, 0x8042FEB8) //this is a jump label
/*8042FEB8 0042CCB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8042FEBC 0042CCBC*/ PPC::Runtime::ASM::bne(.L_8042FEC8);
/*8042FEC0 0042CCC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8042FEC4 0042CCC4*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8042FEC8, 0x8042FEC8) //this is a jump label
/*8042FEC8 0042CCC8*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8042FECC 0042CCCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8042FED0 0042CCD0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8042FED4 0042CCD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8042FED8 0042CCD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8042FEDC 0042CCDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8042FEE0 0042CCE0*/ PPC::Runtime::ASM::blr();
}