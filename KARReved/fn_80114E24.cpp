//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "fn_801151E8.hpp"
#include "fn_801151E8.hpp"



void fn_80114E24(PPC::Runtime::GCContext* context)
{
/*80114E24 00111C24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80114E28 00111C28*/ PPC::Runtime::ASM::mflr(context->r0);
/*80114E2C 00111C2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80114E30 00111C30*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80114E34 00111C34*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*80114E38 00111C38*/ PPC::Runtime::ASM::lis(context->r7, lbl_805586FC @ Get_MemoryOffset_HighBit);
/*80114E3C 00111C3C*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*80114E40 00111C40*/ PPC::Runtime::ASM::addi(context->r3, context->r7, lbl_805586FC @ Get_MemoryOffset_LowBit);
/*80114E44 00111C44*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80114E48 00111C48*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*80114E4C 00111C4C*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*80114E50 00111C50*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 80114E54 00111C54  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80114E58 00111C58*/ PPC::Runtime::ASM::bne(.L_80114E7C);
/*80114E5C 00111C5C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1048 @ Get_MemoryOffset_HighBit);
/*80114E60 00111C60*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1048 @ Get_MemoryOffset_LowBit);
/*80114E64 00111C64*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80114E68 00111C68*/ PPC::Runtime::ASM::bl(OSReport);
/*80114E6C 00111C6C*/ PPC::Runtime::ASM::li(context->r3, String_ "iflib." Get_MemoryOffset_SDA21);
/*80114E70 00111C70*/ PPC::Runtime::ASM::li(context->r4, 0x9c4);
/*80114E74 00111C74*/ PPC::Runtime::ASM::li(context->r5, lbl_805D63A0 @ Get_MemoryOffset_SDA21);
/*80114E78 00111C78*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80114E7C, 0x80114E7C) //this is a jump label
/*80114E7C 00111C7C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80114E80 00111C80*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80114E84 00111C84*/ PPC::Runtime::ASM::li(context->r5, 0xe4);
/*80114E88 00111C88*/ PPC::Runtime::ASM::bl(memset);
/*80114E8C 00111C8C*/ PPC::Runtime::ASM::lis(context->r4, fn_801151E8 @ Get_MemoryOffset_HighBit);
/*80114E90 00111C90*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*80114E94 00111C94*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_801151E8 @ Get_MemoryOffset_LowBit);
/*80114E98 00111C98*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*80114E9C 00111C9C*/ PPC::Runtime::ASM::li(context->r4, 0x1b);
/*80114EA0 00111CA0*/ PPC::Runtime::ASM::bl(fn_GObj_AddUserData);
/*80114EA4 00111CA4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80114EA8 00111CA8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80114EAC 00111CAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80114EB0 00111CB0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80114EB4 00111CB4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80114EB8 00111CB8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r29, 4, 24, 27);
/*80114EBC 00111CBC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80114EC0 00111CC0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80114EC4 00111CC4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r30, 2, 28, 29);
/*80114EC8 00111CC8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80114ECC 00111CCC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80114ED0 00111CD0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 1, 30, 30);
/*80114ED4 00111CD4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80114ED8 00111CD8*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*80114EDC 00111CDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80114EE0 00111CE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80114EE4 00111CE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80114EE8 00111CE8*/ PPC::Runtime::ASM::blr();
}