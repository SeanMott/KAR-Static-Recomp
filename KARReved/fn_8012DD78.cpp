//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_80115114.hpp"
#include "fn_80115114.hpp"
#include "fn_80115114.hpp"



void fn_8012DD78(PPC::Runtime::GCContext* context)
{
/*8012DD78 0012AB78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8012DD7C 0012AB7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012DD80 0012AB80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012DD84 0012AB84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8012DD88 0012AB88*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8012DD8C 0012AB8C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8012DD90 0012AB90*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8012DD94 0012AB94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8012DD98 0012AB98*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8012DD9C 0012AB9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8012DDA0 0012ABA0*/ PPC::Runtime::ASM::rlwinm(context->r4, context->r4, 0, 28, 29);
/*8012DDA4 0012ABA4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*8012DDA8 0012ABA8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa38, context->r3));
/*8012DDAC 0012ABAC*/ PPC::Runtime::ASM::cmpw(context->r0, context->r30);
/*8012DDB0 0012ABB0*/ PPC::Runtime::ASM::beq(.L_8012DE58);
/*8012DDB4 0012ABB4*/ PPC::Runtime::ASM::lis(context->r4, 0x51ec);
/*8012DDB8 0012ABB8*/ PPC::Runtime::ASM::lis(context->r3, 0x6666);
/*8012DDBC 0012ABBC*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x7ae1);
/*8012DDC0 0012ABC0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/* 8012DDC4 0012ABC4  7C 80 F0 96 */ mulhw context->r4 , context->r0 , context->r30
/*8012DDC8 0012ABC8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x6667);
/*8012DDCC 0012ABCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*8012DDD0 0012ABD0*/ PPC::Runtime::ASM::srawi(context->r4, context->r4, 5);
/*8012DDD4 0012ABD4*/ PPC::Runtime::ASM::srwi(context->r5, context->r4, 31);
/*8012DDD8 0012ABD8*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r5);
/* 8012DDDC 0012ABDC  7C 00 28 96 */ mulhw context->r0 , context->r0 , context->r5
/*8012DDE0 0012ABE0*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 2);
/*8012DDE4 0012ABE4*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8012DDE8 0012ABE8*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8012DDEC 0012ABEC*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xa);
/*8012DDF0 0012ABF0*/ PPC::Runtime::ASM::subf(context->r4, context->r0, context->r5);
/*8012DDF4 0012ABF4*/ PPC::Runtime::ASM::bl(fn_80115114);
/*8012DDF8 0012ABF8*/ PPC::Runtime::ASM::lis(context->r4, 0x6666);
/*8012DDFC 0012ABFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*8012DE00 0012AC00*/ PPC::Runtime::ASM::addi(context->r6, context->r4, 0x6667);
/* 8012DE04 0012AC04  7C 06 F0 96 */ mulhw context->r0 , context->r6 , context->r30
/*8012DE08 0012AC08*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 2);
/*8012DE0C 0012AC0C*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8012DE10 0012AC10*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r4);
/* 8012DE14 0012AC14  7C 06 28 96 */ mulhw context->r0 , context->r6 , context->r5
/*8012DE18 0012AC18*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 2);
/*8012DE1C 0012AC1C*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8012DE20 0012AC20*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8012DE24 0012AC24*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xa);
/*8012DE28 0012AC28*/ PPC::Runtime::ASM::subf(context->r4, context->r0, context->r5);
/*8012DE2C 0012AC2C*/ PPC::Runtime::ASM::bl(fn_80115114);
/*8012DE30 0012AC30*/ PPC::Runtime::ASM::lis(context->r4, 0x6666);
/*8012DE34 0012AC34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*8012DE38 0012AC38*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x6667);
/* 8012DE3C 0012AC3C  7C 00 F0 96 */ mulhw context->r0 , context->r0 , context->r30
/*8012DE40 0012AC40*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 2);
/*8012DE44 0012AC44*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8012DE48 0012AC48*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r4);
/*8012DE4C 0012AC4C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xa);
/*8012DE50 0012AC50*/ PPC::Runtime::ASM::subf(context->r4, context->r0, context->r30);
/*8012DE54 0012AC54*/ PPC::Runtime::ASM::bl(fn_80115114);
RUNTIME_PPC_JUMP_LABEL(.L_8012DE58, 0x8012DE58) //this is a jump label
/*8012DE58 0012AC58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012DE5C 0012AC5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8012DE60 0012AC60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8012DE64 0012AC64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012DE68 0012AC68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8012DE6C 0012AC6C*/ PPC::Runtime::ASM::blr();
}