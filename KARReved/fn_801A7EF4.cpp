//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"



void fn_801A7EF4(PPC::Runtime::GCContext* context)
{
/*801A7EF4 001A4CF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801A7EF8 001A4CF8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A7EFC 001A4CFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A7F00 001A4D00*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*801A7F04 001A4D04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801A7F08 001A4D08*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*801A7F0C 001A4D0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801A7F10 001A4D10*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801A7F14 001A4D14*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A7F18 001A4D18*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801A7F1C 001A4D1C*/ PPC::Runtime::ASM::add(context->r3, context->r29, context->r0);
/*801A7F20 001A4D20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f0, context->r3));
/*801A7F24 001A4D24*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801A7F28 001A4D28*/ PPC::Runtime::ASM::beq(.L_801A7F7C);
/*801A7F2C 001A4D2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r29));
/*801A7F30 001A4D30*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A7F34 001A4D34*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A7F38 001A4D38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r3));
/*801A7F3C 001A4D3C*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*801A7F40 001A4D40*/ PPC::Runtime::ASM::mulli(context->r0, context->r31, 0xc);
/*801A7F44 001A4D44*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A7F48 001A4D48*/ PPC::Runtime::ASM::add(context->r3, context->r29, context->r0);
/*801A7F4C 001A4D4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x948, context->r3));
/*801A7F50 001A4D50*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801A7F54 001A4D54*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801A7F58 001A4D58*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A7F5C 001A4D5C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94c, context->r3));
/*801A7F60 001A4D60*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801A7F64 001A4D64*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801A7F68 001A4D68*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801A7F6C 001A4D6C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x950, context->r3));
/*801A7F70 001A4D70*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801A7F74 001A4D74*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801A7F78 001A4D78*/ PPC::Runtime::ASM::b(.L_801A7F8C);
RUNTIME_PPC_JUMP_LABEL(.L_801A7F7C, 0x801A7F7C) //this is a jump label
/*801A7F7C 001A4D7C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1328 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A7F80 001A4D80*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801A7F84 001A4D84*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801A7F88 001A4D88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801A7F8C, 0x801A7F8C) //this is a jump label
/*801A7F8C 001A4D8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A7F90 001A4D90*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801A7F94 001A4D94*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801A7F98 001A4D98*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A7F9C 001A4D9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A7FA0 001A4DA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801A7FA4 001A4DA4*/ PPC::Runtime::ASM::blr();
}