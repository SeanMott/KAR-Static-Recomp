//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112050.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_801202CC(PPC::Runtime::GCContext* context)
{
/*801202CC 0011D0CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801202D0 0011D0D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801202D4 0011D0D4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1072 @ Get_MemoryOffset_HighBit);
/*801202D8 0011D0D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801202DC 0011D0DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801202E0 0011D0E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801202E4 0011D0E4*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1072 @ Get_MemoryOffset_LowBit);
/*801202E8 0011D0E8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801202EC 0011D0EC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801202F0 0011D0F0*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x13c);
/*801202F4 0011D0F4*/ PPC::Runtime::ASM::bl(fn_80112050);
/*801202F8 0011D0F8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801202FC 0011D0FC*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80120300 0011D100*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80120304 0011D104*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*80120308 0011D108*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8012030C 0011D10C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80120310 0011D110*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80120314 0011D114*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80120318 0011D118*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x4);
/*8012031C 0011D11C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x1c);
/*80120320 0011D120*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80120324 0011D124*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80120328 0011D128*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8012032C 0011D12C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80120330 0011D130*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x8);
/*80120334 0011D134*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*80120338 0011D138*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8012033C 0011D13C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80120340 0011D140*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80120344 0011D144*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80120348 0011D148*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012034C 0011D14C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80120350 0011D150*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80120354 0011D154*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80120358 0011D158*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012035C 0011D15C*/ PPC::Runtime::ASM::blr();
}