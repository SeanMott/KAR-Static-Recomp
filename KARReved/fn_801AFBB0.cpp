//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191798.hpp"
#include "fn_AS_SwordSwing?.hpp"
#include "fn_AS_SwordSwing?.hpp"
#include "fn_8019F288.hpp"



void fn_801AFBB0(PPC::Runtime::GCContext* context)
{
/*801AFBB0 001AC9B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AFBB4 001AC9B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AFBB8 001AC9B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFBBC 001AC9BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AFBC0 001AC9C0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AFBC4 001AC9C4*/ PPC::Runtime::ASM::bl(fn_80191798);
/*801AFBC8 001AC9C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AFBCC 001AC9CC*/ PPC::Runtime::ASM::bne(.L_801AFBFC);
/*801AFBD0 001AC9D0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/* 801AFBD4 001AC9D4  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801AFBD8 001AC9D8*/ PPC::Runtime::ASM::bne(.L_801AFBFC);
/*801AFBDC 001AC9DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801AFBE0 001AC9E0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801AFBE4 001AC9E4*/ PPC::Runtime::ASM::bne(.L_801AFBFC);
/*801AFBE8 001AC9E8*/ PPC::Runtime::ASM::lis(context->r4, fn_AS_SwordSwing? @ Get_MemoryOffset_HighBit);
/*801AFBEC 001AC9EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AFBF0 001AC9F0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, fn_AS_SwordSwing? @ Get_MemoryOffset_LowBit);
/*801AFBF4 001AC9F4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x828);
/*801AFBF8 001AC9F8*/ PPC::Runtime::ASM::bl(fn_8019F288);
RUNTIME_PPC_JUMP_LABEL(.L_801AFBFC, 0x801AFBFC) //this is a jump label
/*801AFBFC 001AC9FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFC00 001ACA00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AFC04 001ACA04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AFC08 001ACA08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AFC0C 001ACA0C*/ PPC::Runtime::ASM::blr();
}