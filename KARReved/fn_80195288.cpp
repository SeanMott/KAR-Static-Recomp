//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_loadPlayer_isMachineBike.hpp"
#include "fn_loadPlayer_MachineI.hpp"



void fn_80195288(PPC::Runtime::GCContext* context)
{
/*80195288 00192088*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8019528C 0019208C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80195290 00192090*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80195294 00192094*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80195298 00192098*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8019529C 0019209C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801952A0 001920A0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801952A4 001920A4*/ PPC::Runtime::ASM::bne(.L_801952E0);
/*801952A8 001920A8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x826, context->r31));
/* 801952AC 001920AC  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801952B0 001920B0*/ PPC::Runtime::ASM::beq(.L_801952E0);
/*801952B4 001920B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801952B8 001920B8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r4);
/*801952BC 001920BC*/ PPC::Runtime::ASM::beq(.L_801952C8);
/*801952C0 001920C0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801952C4 001920C4*/ PPC::Runtime::ASM::bne(.L_801952E0);
RUNTIME_PPC_JUMP_LABEL(.L_801952C8, 0x801952C8) //this is a jump label
/*801952C8 001920C8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801952CC 001920CC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801952D0 001920D0*/ PPC::Runtime::ASM::bl(fn_loadPlayer_isMachineBike);
/*801952D4 001920D4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801952D8 001920D8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801952DC 001920DC*/ PPC::Runtime::ASM::bl(fn_loadPlayer_MachineI);
RUNTIME_PPC_JUMP_LABEL(.L_801952E0, 0x801952E0) //this is a jump label
/*801952E0 001920E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801952E4 001920E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801952E8 001920E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801952EC 001920EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801952F0 001920F0*/ PPC::Runtime::ASM::blr();
}