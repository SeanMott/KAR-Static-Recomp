//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80064C18.hpp"
#include "fn_80062ECC.hpp"



void fn_801CCB50(PPC::Runtime::GCContext* context)
{
/*801CCB50 001C9950*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*801CCB54 001C9954*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CCB58 001C9958*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*801CCB5C 001C995C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*801CCB60 001C9960*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*801CCB64 001C9964*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CCB68 001C9968*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801CCB6C 001C996C*/ PPC::Runtime::ASM::stfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CCB70 001C9970*/ PPC::Runtime::ASM::psq_st(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801CCB74 001C9974*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801CCB78 001C9978*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801CCB7C 001C997C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CCB80 001C9980*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E1A48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCB84 001C9984*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*801CCB88 001C9988*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*801CCB8C 001C998C*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*801CCB90 001C9990*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4a8, context->r3));
/*801CCB94 001C9994*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801CCB98 001C9998*/ PPC::Runtime::ASM::fmuls(context->f2, context->f3, context->f2);
/*801CCB9C 001C999C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801CCBA0 001C99A0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*801CCBA4 001C99A4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801CCBA8 001C99A8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801CCBAC 001C99AC*/ PPC::Runtime::ASM::fmuls(context->f31, context->f1, context->f2);
/*801CCBB0 001C99B0*/ PPC::Runtime::ASM::fmuls(context->f29, context->f1, context->f0);
/*801CCBB4 001C99B4*/ PPC::Runtime::ASM::bl(fn_80064C18);
/*801CCBB8 001C99B8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801CCBBC 001C99BC*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801CCBC0 001C99C0*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*801CCBC4 001C99C4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801CCBC8 001C99C8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801CCBCC 001C99CC*/ PPC::Runtime::ASM::bl(fn_80062ECC);
/*801CCBD0 001C99D0*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E1A38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCBD4 001C99D4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCBD8 001C99D8*/ PPC::Runtime::ASM::fsub(context->f6, context->f2, context->f1);
/*801CCBDC 001C99DC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f0);
/*801CCBE0 001C99E0*/ PPC::Runtime::ASM::frsp(context->f6, context->f6);
/*801CCBE4 001C99E4*/ PPC::Runtime::ASM::bge(.L_801CCC00);
/*801CCBE8 001C99E8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f6, context->f29);
/*801CCBEC 001C99EC*/ PPC::Runtime::ASM::bge(.L_801CCC64);
/*801CCBF0 001C99F0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f6, context->f31);
/*801CCBF4 001C99F4*/ PPC::Runtime::ASM::bge(.L_801CCC64);
/*801CCBF8 001C99F8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CCBFC 001C99FC*/ PPC::Runtime::ASM::b(.L_801CCC68);
RUNTIME_PPC_JUMP_LABEL(.L_801CCC00, 0x801CCC00) //this is a jump label
/*801CCC00 001C9A00*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCC04 001C9A04*/ PPC::Runtime::ASM::fsubs(context->f0, context->f29, context->f31);
/*801CCC08 001C9A08*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CCC0C 001C9A0C*/ PPC::Runtime::ASM::fdivs(context->f4, context->f1, context->f30);
/*801CCC10 001C9A10*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CCC14 001C9A14*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CCC18 001C9A18*/ PPC::Runtime::ASM::fmuls(context->f5, context->f3, context->f4);
/*801CCC1C 001C9A1C*/ PPC::Runtime::ASM::fmuls(context->f3, context->f2, context->f4);
/*801CCC20 001C9A20*/ PPC::Runtime::ASM::fmuls(context->f4, context->f1, context->f4);
/*801CCC24 001C9A24*/ PPC::Runtime::ASM::stfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CCC28 001C9A28*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CCC2C 001C9A2C*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CCC30 001C9A30*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*801CCC34 001C9A34*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*801CCC38 001C9A38*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f3);
/*801CCC3C 001C9A3C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*801CCC40 001C9A40*/ PPC::Runtime::ASM::fmadds(context->f1, context->f2, context->f5, context->f1);
/*801CCC44 001C9A44*/ PPC::Runtime::ASM::fmadds(context->f1, context->f3, context->f4, context->f1);
/*801CCC48 001C9A48*/ PPC::Runtime::ASM::fabs(context->f1, context->f1);
/*801CCC4C 001C9A4C*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
/*801CCC50 001C9A50*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f0, context->f31);
/*801CCC54 001C9A54*/ PPC::Runtime::ASM::fcmpo(cr0, context->f6, context->f0);
/*801CCC58 001C9A58*/ PPC::Runtime::ASM::bge(.L_801CCC64);
/*801CCC5C 001C9A5C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CCC60 001C9A60*/ PPC::Runtime::ASM::b(.L_801CCC68);
RUNTIME_PPC_JUMP_LABEL(.L_801CCC64, 0x801CCC64) //this is a jump label
/*801CCC64 001C9A64*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801CCC68, 0x801CCC68) //this is a jump label
/*801CCC68 001C9A68*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*801CCC6C 001C9A6C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*801CCC70 001C9A70*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801CCC74 001C9A74*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CCC78 001C9A78*/ PPC::Runtime::ASM::psq_l(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*801CCC7C 001C9A7C*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CCC80 001C9A80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801CCC84 001C9A84*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801CCC88 001C9A88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*801CCC8C 001C9A8C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CCC90 001C9A90*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CCC94 001C9A94*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*801CCC98 001C9A98*/ PPC::Runtime::ASM::blr();
}