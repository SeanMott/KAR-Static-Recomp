//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_80112058.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_8011AC3C(PPC::Runtime::GCContext* context)
{
/*8011AC3C 00117A3C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8011AC40 00117A40*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011AC44 00117A44*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1060 @ Get_MemoryOffset_HighBit);
/*8011AC48 00117A48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011AC4C 00117A4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011AC50 00117A50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011AC54 00117A54*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1060 @ Get_MemoryOffset_LowBit);
/*8011AC58 00117A58*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011AC5C 00117A5C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011AC60 00117A60*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011AC64 00117A64*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x21c);
/*8011AC68 00117A68*/ PPC::Runtime::ASM::bl(fn_80112058);
/*8011AC6C 00117A6C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011AC70 00117A70*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*8011AC74 00117A74*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8011AC78 00117A78*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*8011AC7C 00117A7C*/ PPC::Runtime::ASM::beq(.L_8011ACAC);
/*8011AC80 00117A80*/ PPC::Runtime::ASM::bge(.L_8011ACC8);
/*8011AC84 00117A84*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8011AC88 00117A88*/ PPC::Runtime::ASM::bge(.L_8011AC90);
/*8011AC8C 00117A8C*/ PPC::Runtime::ASM::b(.L_8011ACC8);
RUNTIME_PPC_JUMP_LABEL(.L_8011AC90, 0x8011AC90) //this is a jump label
/*8011AC90 00117A90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8011AC94 00117A94*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8011AC98 00117A98*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*8011AC9C 00117A9C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8011ACA0 00117AA0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8011ACA4 00117AA4*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8011ACA8 00117AA8*/ PPC::Runtime::ASM::b(.L_8011ACE0);
RUNTIME_PPC_JUMP_LABEL(.L_8011ACAC, 0x8011ACAC) //this is a jump label
/*8011ACAC 00117AAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8011ACB0 00117AB0*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x4);
/*8011ACB4 00117AB4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x1c);
/*8011ACB8 00117AB8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8011ACBC 00117ABC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8011ACC0 00117AC0*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8011ACC4 00117AC4*/ PPC::Runtime::ASM::b(.L_8011ACE0);
RUNTIME_PPC_JUMP_LABEL(.L_8011ACC8, 0x8011ACC8) //this is a jump label
/*8011ACC8 00117AC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8011ACCC 00117ACC*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x8);
/*8011ACD0 00117AD0*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*8011ACD4 00117AD4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8011ACD8 00117AD8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8011ACDC 00117ADC*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_8011ACE0, 0x8011ACE0) //this is a jump label
/*8011ACE0 00117AE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011ACE4 00117AE4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011ACE8 00117AE8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011ACEC 00117AEC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011ACF0 00117AF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011ACF4 00117AF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8011ACF8 00117AF8*/ PPC::Runtime::ASM::blr();
}