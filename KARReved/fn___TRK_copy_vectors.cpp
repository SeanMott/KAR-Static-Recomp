//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRK_memcpy.hpp"
#include "fn_TRK_flush_cache.hpp"



void fn___TRK_copy_vectors(PPC::Runtime::GCContext* context)
{
/*803C2018 003BEE18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803C201C 003BEE1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C2020 003BEE20*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056BDE0 @ Get_MemoryOffset_HighBit);
/*803C2024 003BEE24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C2028 003BEE28*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_18056BDE0 @ Get_MemoryOffset_LowBit);
/*803C202C 003BEE2C*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C2030 003BEE30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803C2034 003BEE34*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x44);
/*803C2038 003BEE38*/ PPC::Runtime::ASM::bgt(.L_803C2064);
/*803C203C 003BEE3C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4000);
/*803C2040 003BEE40*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x44);
/*803C2044 003BEE44*/ PPC::Runtime::ASM::ble(.L_803C2064);
/*803C2048 003BEE48*/ PPC::Runtime::ASM::lis(context->r3, gTRKCPUState @ Get_MemoryOffset_HighBit);
/*803C204C 003BEE4C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, gTRKCPUState @ Get_MemoryOffset_LowBit);
/*803C2050 003BEE50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x238, context->r3));
/* 803C2054 003BEE54  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*803C2058 003BEE58*/ PPC::Runtime::ASM::beq(.L_803C2064);
/*803C205C 003BEE5C*/ PPC::Runtime::ASM::li(context->r5, 0x44);
/*803C2060 003BEE60*/ PPC::Runtime::ASM::b(.L_803C206C);
RUNTIME_PPC_JUMP_LABEL(.L_803C2064, 0x803C2064) //this is a jump label
/*803C2064 003BEE64*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803C2068 003BEE68*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x44);
RUNTIME_PPC_JUMP_LABEL(.L_803C206C, 0x803C206C) //this is a jump label
/*803C206C 003BEE6C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804F9288 @ Get_MemoryOffset_HighBit);
/*803C2070 003BEE70*/ PPC::Runtime::ASM::lis(context->r3, gTRKCPUState @ Get_MemoryOffset_HighBit);
/*803C2074 003BEE74*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803C2078 003BEE78*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_804F9288 @ Get_MemoryOffset_LowBit);
/*803C207C 003BEE7C*/ PPC::Runtime::ASM::addi(context->r28, context->r3, gTRKCPUState @ Get_MemoryOffset_LowBit);
/*803C2080 003BEE80*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803C2084, 0x803C2084) //this is a jump label
/*803C2084 003BEE84*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803C2088 003BEE88*/ PPC::Runtime::ASM::slw(context->r0, context->r0, context->r30);
/*803C208C 003BEE8C*/ PPC::Runtime::ASM::and.(context->r0, context->r29, context->r0);
/*803C2090 003BEE90*/ PPC::Runtime::ASM::beq(.L_803C2120);
/*803C2094 003BEE94*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x4);
/*803C2098 003BEE98*/ PPC::Runtime::ASM::beq(.L_803C2120);
/*803C209C 003BEE9C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056BDE0 @ Get_MemoryOffset_HighBit);
/*803C20A0 003BEEA0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803C20A4 003BEEA4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_18056BDE0 @ Get_MemoryOffset_LowBit);
/*803C20A8 003BEEA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803C20AC 003BEEAC*/ PPC::Runtime::ASM::cmplw(context->r6, context->r3);
/*803C20B0 003BEEB0*/ PPC::Runtime::ASM::blt(.L_803C20D4);
/*803C20B4 003BEEB4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4000);
/*803C20B8 003BEEB8*/ PPC::Runtime::ASM::cmplw(context->r6, context->r0);
/*803C20BC 003BEEBC*/ PPC::Runtime::ASM::bge(.L_803C20D4);
/*803C20C0 003BEEC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x238, context->r28));
/* 803C20C4 003BEEC4  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*803C20C8 003BEEC8*/ PPC::Runtime::ASM::beq(.L_803C20D4);
/*803C20CC 003BEECC*/ PPC::Runtime::ASM::mr(context->r27, context->r6);
/*803C20D0 003BEED0*/ PPC::Runtime::ASM::b(.L_803C20FC);
RUNTIME_PPC_JUMP_LABEL(.L_803C20D4, 0x803C20D4) //this is a jump label
/*803C20D4 003BEED4*/ PPC::Runtime::ASM::lis(context->r0, 0x7e00);
/*803C20D8 003BEED8*/ PPC::Runtime::ASM::cmplw(context->r6, context->r0);
/*803C20DC 003BEEDC*/ PPC::Runtime::ASM::blt(.L_803C20F4);
/*803C20E0 003BEEE0*/ PPC::Runtime::ASM::lis(context->r0, 0x8000);
/*803C20E4 003BEEE4*/ PPC::Runtime::ASM::cmplw(context->r6, context->r0);
/*803C20E8 003BEEE8*/ PPC::Runtime::ASM::bgt(.L_803C20F4);
/*803C20EC 003BEEEC*/ PPC::Runtime::ASM::mr(context->r27, context->r6);
/*803C20F0 003BEEF0*/ PPC::Runtime::ASM::b(.L_803C20FC);
RUNTIME_PPC_JUMP_LABEL(.L_803C20F4, 0x803C20F4) //this is a jump label
/*803C20F4 003BEEF4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r6, 2);
/*803C20F8 003BEEF8*/ PPC::Runtime::ASM::oris(context->r27, context->r0, 0x8000);
RUNTIME_PPC_JUMP_LABEL(.L_803C20FC, 0x803C20FC) //this is a jump label
/*803C20FC 003BEEFC*/ PPC::Runtime::ASM::lis(context->r4, gTRKInterruptVectorTable @ Get_MemoryOffset_HighBit);
/*803C2100 003BEF00*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803C2104 003BEF04*/ PPC::Runtime::ASM::addi(context->r0, context->r4, gTRKInterruptVectorTable @ Get_MemoryOffset_LowBit);
/*803C2108 003BEF08*/ PPC::Runtime::ASM::li(context->r5, 0x100);
/*803C210C 003BEF0C*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r6);
/*803C2110 003BEF10*/ PPC::Runtime::ASM::bl(fn_TRK_memcpy);
/*803C2114 003BEF14*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803C2118 003BEF18*/ PPC::Runtime::ASM::li(context->r4, 0x100);
/*803C211C 003BEF1C*/ PPC::Runtime::ASM::bl(fn_TRK_flush_cache);
RUNTIME_PPC_JUMP_LABEL(.L_803C2120, 0x803C2120) //this is a jump label
/*803C2120 003BEF20*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*803C2124 003BEF24*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*803C2128 003BEF28*/ PPC::Runtime::ASM::cmpwi(context->r30, 0xe);
/*803C212C 003BEF2C*/ PPC::Runtime::ASM::ble(.L_803C2084);
/*803C2130 003BEF30*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C2134 003BEF34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C2138 003BEF38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C213C 003BEF3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803C2140 003BEF40*/ PPC::Runtime::ASM::blr();
}