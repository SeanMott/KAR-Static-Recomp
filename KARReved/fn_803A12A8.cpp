//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8038BEF4.hpp"
#include "fn_8038BF64.hpp"



void fn_803A12A8(PPC::Runtime::GCContext* context)
{
/*803A12A8 0039E0A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*803A12AC 0039E0AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803A12B0 0039E0B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803A12B4 0039E0B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*803A12B8 0039E0B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803A12BC 0039E0BC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F6CAC @ Get_MemoryOffset_HighBit);
/*803A12C0 0039E0C0*/ PPC::Runtime::ASM::lhz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42, context->r31));
/*803A12C4 0039E0C4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_804F6CAC @ Get_MemoryOffset_LowBit);
/*803A12C8 0039E0C8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*803A12CC 0039E0CC*/ PPC::Runtime::ASM::neg(context->r3, context->r6);
/*803A12D0 0039E0D0*/ PPC::Runtime::ASM::or(context->r3, context->r3, context->r6);
/*803A12D4 0039E0D4*/ PPC::Runtime::ASM::srwi(context->r5, context->r3, 31);
/*803A12D8 0039E0D8*/ PPC::Runtime::ASM::add(context->r5, context->r6, context->r5);
/*803A12DC 0039E0DC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*803A12E0 0039E0E0*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r5);
/*803A12E4 0039E0E4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*803A12E8 0039E0E8*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*803A12EC 0039E0EC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803A12F0 0039E0F0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803A12F4 0039E0F4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x18);
/* 803A12F8 0039E0F8  4C C6 32 42 */ crset context->cr1eq
/*803A12FC 0039E0FC*/ PPC::Runtime::ASM::bl(fn_sprintf);
/*803A1300 0039E100*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x24);
/*803A1304 0039E104*/ PPC::Runtime::ASM::bl(fn_8038BEF4);
/*803A1308 0039E108*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x24);
/*803A130C 0039E10C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x30);
/*803A1310 0039E110*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*803A1314 0039E114*/ PPC::Runtime::ASM::bl(fn_8038BF64);
/*803A1318 0039E118*/ PPC::Runtime::ASM::addic.(context->r0, context->r1, 0x24);
/*803A131C 0039E11C*/ PPC::Runtime::ASM::beq(.L_803A132C);
/*803A1320 0039E120*/ PPC::Runtime::ASM::lis(context->r3, lbl_804C0470 @ Get_MemoryOffset_HighBit);
/*803A1324 0039E124*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804C0470 @ Get_MemoryOffset_LowBit);
/*803A1328 0039E128*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_803A132C, 0x803A132C) //this is a jump label
/*803A132C 0039E12C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803A1330 0039E130*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*803A1334 0039E134*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803A1338 0039E138*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*803A133C 0039E13C*/ PPC::Runtime::ASM::blr();
}