//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__OSGetSystemTime.hpp"
#include "OSLoadContext.hpp"
#include "__OSGetSystemTime.hpp"
#include "PPCMtdec.hpp"
#include "PPCMtdec.hpp"
#include "PPCMtdec.hpp"
#include "OSLoadContext.hpp"
#include "InsertAlarm.hpp"
#include "__OSGetSystemTime.hpp"
#include "PPCMtdec.hpp"
#include "PPCMtdec.hpp"
#include "PPCMtdec.hpp"
#include "OSDisableScheduler.hpp"
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "OSEnableScheduler.hpp"
#include "__OSReschedule.hpp"
#include "OSLoadContext.hpp"



void DecrementerExceptionCallback(PPC::Runtime::GCContext* context)
{
/*803D32E0 003D00E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D32E4 003D00E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D32E8 003D00E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x2f0, context->r1));
/*803D32EC 003D00EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2ec, context->r1));
/*803D32F0 003D00F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e8, context->r1));
/*803D32F4 003D00F4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r1));
/*803D32F8 003D00F8*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*803D32FC 003D00FC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r1));
/*803D3300 003D0100*/ PPC::Runtime::ASM::bl(__OSGetSystemTime);
/*803D3304 003D0104*/ PPC::Runtime::ASM::lwz(context->r0, AlarmQueue_805DDEA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D3308 003D0108*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*803D330C 003D010C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803D3310 003D0110*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803D3314 003D0114*/ PPC::Runtime::ASM::mr(context->r31, context->r0);
/*803D3318 003D0118*/ PPC::Runtime::ASM::bne(.L_803D3324);
/*803D331C 003D011C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D3320 003D0120*/ PPC::Runtime::ASM::bl(OSLoadContext);
RUNTIME_PPC_JUMP_LABEL(.L_803D3324, 0x803D3324) //this is a jump label
/*803D3324 003D0124*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803D3328 003D0128*/ PPC::Runtime::ASM::xoris(context->r4, context->r30, 0x8000);
/*803D332C 003D012C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803D3330 003D0130*/ PPC::Runtime::ASM::xoris(context->r3, context->r0, 0x8000);
/*803D3334 003D0134*/ PPC::Runtime::ASM::subfc(context->r0, context->r5, context->r28);
/*803D3338 003D0138*/ PPC::Runtime::ASM::subfe(context->r3, context->r3, context->r4);
/*803D333C 003D013C*/ PPC::Runtime::ASM::subfe(context->r3, context->r4, context->r4);
/*803D3340 003D0140*/ PPC::Runtime::ASM::neg.(context->r3, context->r3);
/*803D3344 003D0144*/ PPC::Runtime::ASM::beq(.L_803D33C0);
/*803D3348 003D0148*/ PPC::Runtime::ASM::bl(__OSGetSystemTime);
/*803D334C 003D014C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803D3350 003D0150*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803D3354 003D0154*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803D3358 003D0158*/ PPC::Runtime::ASM::xoris(context->r5, context->r7, 0x8000);
/*803D335C 003D015C*/ PPC::Runtime::ASM::subfc(context->r8, context->r4, context->r6);
/*803D3360 003D0160*/ PPC::Runtime::ASM::subfe(context->r0, context->r3, context->r0);
/*803D3364 003D0164*/ PPC::Runtime::ASM::xoris(context->r6, context->r0, 0x8000);
/*803D3368 003D0168*/ PPC::Runtime::ASM::subfc(context->r0, context->r7, context->r8);
/*803D336C 003D016C*/ PPC::Runtime::ASM::subfe(context->r5, context->r5, context->r6);
/*803D3370 003D0170*/ PPC::Runtime::ASM::subfe(context->r5, context->r6, context->r6);
/*803D3374 003D0174*/ PPC::Runtime::ASM::neg.(context->r5, context->r5);
/*803D3378 003D0178*/ PPC::Runtime::ASM::beq(.L_803D3388);
/*803D337C 003D017C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D3380 003D0180*/ PPC::Runtime::ASM::bl(PPCMtdec);
/*803D3384 003D0184*/ PPC::Runtime::ASM::b(.L_803D33B8);
RUNTIME_PPC_JUMP_LABEL(.L_803D3388, 0x803D3388) //this is a jump label
/*803D3388 003D0188*/ PPC::Runtime::ASM::lis(context->r4, 0x8000);
/*803D338C 003D018C*/ PPC::Runtime::ASM::xoris(context->r3, context->r7, 0x8000);
/*803D3390 003D0190*/ PPC::Runtime::ASM::subfc(context->r0, context->r4, context->r8);
/*803D3394 003D0194*/ PPC::Runtime::ASM::subfe(context->r3, context->r3, context->r6);
/*803D3398 003D0198*/ PPC::Runtime::ASM::subfe(context->r3, context->r6, context->r6);
/*803D339C 003D019C*/ PPC::Runtime::ASM::neg.(context->r3, context->r3);
/*803D33A0 003D01A0*/ PPC::Runtime::ASM::beq(.L_803D33B0);
/*803D33A4 003D01A4*/ PPC::Runtime::ASM::mr(context->r3, context->r8);
/*803D33A8 003D01A8*/ PPC::Runtime::ASM::bl(PPCMtdec);
/*803D33AC 003D01AC*/ PPC::Runtime::ASM::b(.L_803D33B8);
RUNTIME_PPC_JUMP_LABEL(.L_803D33B0, 0x803D33B0) //this is a jump label
/*803D33B0 003D01B0*/ PPC::Runtime::ASM::subi(context->r3, context->r4, 0x1);
/*803D33B4 003D01B4*/ PPC::Runtime::ASM::bl(PPCMtdec);
RUNTIME_PPC_JUMP_LABEL(.L_803D33B8, 0x803D33B8) //this is a jump label
/*803D33B8 003D01B8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D33BC 003D01BC*/ PPC::Runtime::ASM::bl(OSLoadContext);
RUNTIME_PPC_JUMP_LABEL(.L_803D33C0, 0x803D33C0) //this is a jump label
/*803D33C0 003D01C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803D33C4 003D01C4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803D33C8 003D01C8*/ PPC::Runtime::ASM::stw(context->r3, AlarmQueue_805DDEA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D33CC 003D01CC*/ PPC::Runtime::ASM::bne(.L_803D33E0);
/*803D33D0 003D01D0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803D33D4 003D01D4*/ PPC::Runtime::ASM::li(context->r3, AlarmQueue_805DDEA8 @ Get_MemoryOffset_SDA21);
/*803D33D8 003D01D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803D33DC 003D01DC*/ PPC::Runtime::ASM::b(.L_803D33E8);
RUNTIME_PPC_JUMP_LABEL(.L_803D33E0, 0x803D33E0) //this is a jump label
/*803D33E0 003D01E0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803D33E4 003D01E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803D33E8, 0x803D33E8) //this is a jump label
/*803D33E8 003D01E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803D33EC 003D01EC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803D33F0 003D01F0*/ PPC::Runtime::ASM::xoris(context->r4, context->r6, 0x8000);
/*803D33F4 003D01F4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803D33F8 003D01F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803D33FC 003D01FC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*803D3400 003D0200*/ PPC::Runtime::ASM::xoris(context->r3, context->r0, 0x8000);
/*803D3404 003D0204*/ PPC::Runtime::ASM::subfc(context->r0, context->r5, context->r6);
/*803D3408 003D0208*/ PPC::Runtime::ASM::subfe(context->r3, context->r3, context->r4);
/*803D340C 003D020C*/ PPC::Runtime::ASM::subfe(context->r3, context->r4, context->r4);
/*803D3410 003D0210*/ PPC::Runtime::ASM::neg.(context->r3, context->r3);
/*803D3414 003D0214*/ PPC::Runtime::ASM::beq(.L_803D342C);
/*803D3418 003D0218*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803D341C 003D021C*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0x0);
/*803D3420 003D0220*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803D3424 003D0224*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803D3428 003D0228*/ PPC::Runtime::ASM::bl(InsertAlarm);
RUNTIME_PPC_JUMP_LABEL(.L_803D342C, 0x803D342C) //this is a jump label
/*803D342C 003D022C*/ PPC::Runtime::ASM::lwz(context->r28, AlarmQueue_805DDEA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D3430 003D0230*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*803D3434 003D0234*/ PPC::Runtime::ASM::beq(.L_803D34A8);
/*803D3438 003D0238*/ PPC::Runtime::ASM::bl(__OSGetSystemTime);
/*803D343C 003D023C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r28));
/*803D3440 003D0240*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803D3444 003D0244*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*803D3448 003D0248*/ PPC::Runtime::ASM::xoris(context->r5, context->r7, 0x8000);
/*803D344C 003D024C*/ PPC::Runtime::ASM::subfc(context->r8, context->r4, context->r6);
/*803D3450 003D0250*/ PPC::Runtime::ASM::subfe(context->r0, context->r3, context->r0);
/*803D3454 003D0254*/ PPC::Runtime::ASM::xoris(context->r6, context->r0, 0x8000);
/*803D3458 003D0258*/ PPC::Runtime::ASM::subfc(context->r0, context->r7, context->r8);
/*803D345C 003D025C*/ PPC::Runtime::ASM::subfe(context->r5, context->r5, context->r6);
/*803D3460 003D0260*/ PPC::Runtime::ASM::subfe(context->r5, context->r6, context->r6);
/*803D3464 003D0264*/ PPC::Runtime::ASM::neg.(context->r5, context->r5);
/*803D3468 003D0268*/ PPC::Runtime::ASM::beq(.L_803D3478);
/*803D346C 003D026C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D3470 003D0270*/ PPC::Runtime::ASM::bl(PPCMtdec);
/*803D3474 003D0274*/ PPC::Runtime::ASM::b(.L_803D34A8);
RUNTIME_PPC_JUMP_LABEL(.L_803D3478, 0x803D3478) //this is a jump label
/*803D3478 003D0278*/ PPC::Runtime::ASM::lis(context->r4, 0x8000);
/*803D347C 003D027C*/ PPC::Runtime::ASM::xoris(context->r3, context->r7, 0x8000);
/*803D3480 003D0280*/ PPC::Runtime::ASM::subfc(context->r0, context->r4, context->r8);
/*803D3484 003D0284*/ PPC::Runtime::ASM::subfe(context->r3, context->r3, context->r6);
/*803D3488 003D0288*/ PPC::Runtime::ASM::subfe(context->r3, context->r6, context->r6);
/*803D348C 003D028C*/ PPC::Runtime::ASM::neg.(context->r3, context->r3);
/*803D3490 003D0290*/ PPC::Runtime::ASM::beq(.L_803D34A0);
/*803D3494 003D0294*/ PPC::Runtime::ASM::mr(context->r3, context->r8);
/*803D3498 003D0298*/ PPC::Runtime::ASM::bl(PPCMtdec);
/*803D349C 003D029C*/ PPC::Runtime::ASM::b(.L_803D34A8);
RUNTIME_PPC_JUMP_LABEL(.L_803D34A0, 0x803D34A0) //this is a jump label
/*803D34A0 003D02A0*/ PPC::Runtime::ASM::subi(context->r3, context->r4, 0x1);
/*803D34A4 003D02A4*/ PPC::Runtime::ASM::bl(PPCMtdec);
RUNTIME_PPC_JUMP_LABEL(.L_803D34A8, 0x803D34A8) //this is a jump label
/*803D34A8 003D02A8*/ PPC::Runtime::ASM::bl(OSDisableScheduler);
/*803D34AC 003D02AC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*803D34B0 003D02B0*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803D34B4 003D02B4*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*803D34B8 003D02B8*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803D34BC 003D02BC*/ PPC::Runtime::ASM::addi(context->r12, context->r30, 0x0);
/*803D34C0 003D02C0*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803D34C4 003D02C4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803D34C8 003D02C8*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/* 803D34CC 003D02CC  4E 80 00 21 */ blrl
/*803D34D0 003D02D0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*803D34D4 003D02D4*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803D34D8 003D02D8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D34DC 003D02DC*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803D34E0 003D02E0*/ PPC::Runtime::ASM::bl(OSEnableScheduler);
/*803D34E4 003D02E4*/ PPC::Runtime::ASM::bl(__OSReschedule);
/*803D34E8 003D02E8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D34EC 003D02EC*/ PPC::Runtime::ASM::bl(OSLoadContext);
/*803D34F0 003D02F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4, context->r1));
/*803D34F4 003D02F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2ec, context->r1));
/*803D34F8 003D02F8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e8, context->r1));
/*803D34FC 003D02FC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r1));
/*803D3500 003D0300*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r1));
/*803D3504 003D0304*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x2f0);
/*803D3508 003D0308*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D350C 003D030C*/ PPC::Runtime::ASM::blr();
}