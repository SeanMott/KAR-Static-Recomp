//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__OSMaskInterrupts.hpp"
#include "__OSMaskInterrupts.hpp"
#include "fn_MWCallback.hpp"
#include "fn_MWCallback.hpp"
#include "fn_DBGHandler.hpp"
#include "fn_DBGHandler.hpp"
#include "__OSSetInterruptHandler.hpp"
#include "__OSUnmaskInterrupts.hpp"



void fn_DBInitInterrupts(PPC::Runtime::GCContext* context)
{
/*803F3CE0 003F0AE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F3CE4 003F0AE4*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*803F3CE8 003F0AE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803F3CEC 003F0AEC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, -0x8000);
/*803F3CF0 003F0AF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*803F3CF4 003F0AF4*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
/*803F3CF8 003F0AF8*/ PPC::Runtime::ASM::li(context->r3, 0x40);
/*803F3CFC 003F0AFC*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
/*803F3D00 003F0B00*/ PPC::Runtime::ASM::lis(context->r3, fn_MWCallback @ Get_MemoryOffset_HighBit);
/*803F3D04 003F0B04*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_MWCallback @ Get_MemoryOffset_LowBit);
/*803F3D08 003F0B08*/ PPC::Runtime::ASM::lis(context->r3, fn_DBGHandler @ Get_MemoryOffset_HighBit);
/*803F3D0C 003F0B0C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE15C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3D10 003F0B10*/ PPC::Runtime::ASM::addi(context->r4, context->r3, fn_DBGHandler @ Get_MemoryOffset_LowBit);
/*803F3D14 003F0B14*/ PPC::Runtime::ASM::li(context->r3, 0x19);
/*803F3D18 003F0B18*/ PPC::Runtime::ASM::bl(__OSSetInterruptHandler);
/*803F3D1C 003F0B1C*/ PPC::Runtime::ASM::li(context->r3, 0x40);
/*803F3D20 003F0B20*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803F3D24 003F0B24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803F3D28 003F0B28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*803F3D2C 003F0B2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F3D30 003F0B30*/ PPC::Runtime::ASM::blr();
}