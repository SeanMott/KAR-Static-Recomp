//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801B41A0.hpp"
#include "fn_AS_LoseCopyAbility.hpp"
#include "fn_801B43A4.hpp"



void fn_801B445C(PPC::Runtime::GCContext* context)
{
/*801B445C 001B125C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B4460 001B1260*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B4464 001B1264*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4468 001B1268*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B446C 001B126C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B4470 001B1270*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801B4474 001B1274*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B4478 001B1278*/ PPC::Runtime::ASM::beq(.L_801B4490);
/*801B447C 001B127C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4480 001B1280*/ PPC::Runtime::ASM::bl(fn_801B41A0);
/*801B4484 001B1284*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4488 001B1288*/ PPC::Runtime::ASM::bl(fn_AS_LoseCopyAbility);
/*801B448C 001B128C*/ PPC::Runtime::ASM::b(.L_801B4498);
RUNTIME_PPC_JUMP_LABEL(.L_801B4490, 0x801B4490) //this is a jump label
/*801B4490 001B1290*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4494 001B1294*/ PPC::Runtime::ASM::bl(fn_801B43A4);
RUNTIME_PPC_JUMP_LABEL(.L_801B4498, 0x801B4498) //this is a jump label
/*801B4498 001B1298*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B449C 001B129C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B44A0 001B12A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B44A4 001B12A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B44A8 001B12A8*/ PPC::Runtime::ASM::blr();
}