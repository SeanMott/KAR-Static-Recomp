//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F446C.hpp"
#include "fn_800FED48.hpp"



void fn_800FED20(PPC::Runtime::GCContext* context)
{
/*800FED20 000FBB20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FED24 000FBB24*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FED28 000FBB28*/ PPC::Runtime::ASM::li(context->r3, 0x30);
/*800FED2C 000FBB2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FED30 000FBB30*/ PPC::Runtime::ASM::bl(fn_800F446C);
/*800FED34 000FBB34*/ PPC::Runtime::ASM::bl(fn_800FED48);
/*800FED38 000FBB38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FED3C 000FBB3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FED40 000FBB40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FED44 000FBB44*/ PPC::Runtime::ASM::blr();
}