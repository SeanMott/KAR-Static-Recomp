//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A08A8.hpp"
#include "fn_800A1614.hpp"
#include "fn_800A0DD0.hpp"
#include "fn_800A0DD0.hpp"



void fn_800A8D94(PPC::Runtime::GCContext* context)
{
/*800A8D94 000A5B94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800A8D98 000A5B98*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A8D9C 000A5B9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A8DA0 000A5BA0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800A8DA4 000A5BA4*/ PPC::Runtime::ASM::bl(_savegpr_24);
/*800A8DA8 000A5BA8*/ PPC::Runtime::ASM::mr(context->r25, context->r3);
/*800A8DAC 000A5BAC*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_25 @ Get_MemoryOffset_HighBit);
/*800A8DB0 000A5BB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r25));
/*800A8DB4 000A5BB4*/ PPC::Runtime::ASM::mr(context->r26, context->r4);
/*800A8DB8 000A5BB8*/ PPC::Runtime::ASM::mr(context->r27, context->r5);
/*800A8DBC 000A5BBC*/ PPC::Runtime::ASM::addi(context->r31, context->r3, StructWithFuncPtrs_25 @ Get_MemoryOffset_LowBit);
/*800A8DC0 000A5BC0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A8DC4 000A5BC4*/ PPC::Runtime::ASM::bne(.L_800A8DD8);
/*800A8DC8 000A5BC8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*800A8DCC 000A5BCC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1c);
/*800A8DD0 000A5BD0*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800A8DD4 000A5BD4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8DD8, 0x800A8DD8) //this is a jump label
/*800A8DD8 000A5BD8*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800A8DDC 000A5BDC*/ PPC::Runtime::ASM::xor(context->r0, context->r26, context->r0);
/*800A8DE0 000A5BE0*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800A8DE4 000A5BE4*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r26);
/*800A8DE8 000A5BE8*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800A8DEC 000A5BEC  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800A8DF0 000A5BF0*/ PPC::Runtime::ASM::beq(.L_800A8E20);
/*800A8DF4 000A5BF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r25));
/*800A8DF8 000A5BF8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800A8DFC 000A5BFC*/ PPC::Runtime::ASM::beq(.L_800A8E08);
/*800A8E00 000A5C00*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800A8E04 000A5C04*/ PPC::Runtime::ASM::b(.L_800A8E0C);
RUNTIME_PPC_JUMP_LABEL(.L_800A8E08, 0x800A8E08) //this is a jump label
/*800A8E08 000A5C08*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800A8E0C, 0x800A8E0C) //this is a jump label
/*800A8E0C 000A5C0C*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r26);
/*800A8E10 000A5C10*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800A8E14 000A5C14*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800A8E18 000A5C18*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800A8E1C 000A5C1C*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800A8E20, 0x800A8E20) //this is a jump label
/*800A8E20 000A5C20*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A8E24 000A5C24*/ PPC::Runtime::ASM::bne(.L_800A8E48);
/*800A8E28 000A5C28*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*800A8E2C 000A5C2C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*800A8E30 000A5C30*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A8E34 000A5C34*/ PPC::Runtime::ASM::bl(OSReport);
/*800A8E38 000A5C38*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*800A8E3C 000A5C3C*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x3c);
/*800A8E40 000A5C40*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800A8E44 000A5C44*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8E48, 0x800A8E48) //this is a jump label
/*800A8E48 000A5C48*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A8E4C 000A5C4C*/ PPC::Runtime::ASM::slwi(context->r29, context->r26, 2);
/*800A8E50 000A5C50*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r25));
/*800A8E54 000A5C54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800A8E58 000A5C58*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800A8E5C 000A5C5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800A8E60 000A5C60*/ PPC::Runtime::ASM::lwzx(context->r30, context->r4, context->r29);
/*800A8E64 000A5C64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800A8E68 000A5C68*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800A8E6C 000A5C6C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A8E70 000A5C70*/ PPC::Runtime::ASM::bne(.L_800A8E84);
/*800A8E74 000A5C74*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*800A8E78 000A5C78*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x80);
/*800A8E7C 000A5C7C*/ PPC::Runtime::ASM::li(context->r4, 0x134);
/*800A8E80 000A5C80*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8E84, 0x800A8E84) //this is a jump label
/*800A8E84 000A5C84*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A8E88 000A5C88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r25));
/*800A8E8C 000A5C8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800A8E90 000A5C90*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800A8E94 000A5C94*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800A8E98 000A5C98*/ PPC::Runtime::ASM::bne(.L_800A8EAC);
/*800A8E9C 000A5C9C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*800A8EA0 000A5CA0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x1c);
/*800A8EA4 000A5CA4*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800A8EA8 000A5CA8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8EAC, 0x800A8EAC) //this is a jump label
/*800A8EAC 000A5CAC*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800A8EB0 000A5CB0*/ PPC::Runtime::ASM::xor(context->r0, context->r26, context->r0);
/*800A8EB4 000A5CB4*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800A8EB8 000A5CB8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r26);
/*800A8EBC 000A5CBC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800A8EC0 000A5CC0  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800A8EC4 000A5CC4*/ PPC::Runtime::ASM::beq(.L_800A8EF4);
/*800A8EC8 000A5CC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r25));
/*800A8ECC 000A5CCC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800A8ED0 000A5CD0*/ PPC::Runtime::ASM::beq(.L_800A8EDC);
/*800A8ED4 000A5CD4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800A8ED8 000A5CD8*/ PPC::Runtime::ASM::b(.L_800A8EE0);
RUNTIME_PPC_JUMP_LABEL(.L_800A8EDC, 0x800A8EDC) //this is a jump label
/*800A8EDC 000A5CDC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800A8EE0, 0x800A8EE0) //this is a jump label
/*800A8EE0 000A5CE0*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r26);
/*800A8EE4 000A5CE4*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800A8EE8 000A5CE8*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800A8EEC 000A5CEC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800A8EF0 000A5CF0*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800A8EF4, 0x800A8EF4) //this is a jump label
/*800A8EF4 000A5CF4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A8EF8 000A5CF8*/ PPC::Runtime::ASM::bne(.L_800A8F1C);
/*800A8EFC 000A5CFC*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*800A8F00 000A5D00*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*800A8F04 000A5D04*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A8F08 000A5D08*/ PPC::Runtime::ASM::bl(OSReport);
/*800A8F0C 000A5D0C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*800A8F10 000A5D10*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x3c);
/*800A8F14 000A5D14*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800A8F18 000A5D18*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A8F1C, 0x800A8F1C) //this is a jump label
/*800A8F1C 000A5D1C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r25));
/*800A8F20 000A5D20*/ PPC::Runtime::ASM::mr(context->r3, context->r25);
/*800A8F24 000A5D24*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r24));
/*800A8F28 000A5D28*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A8F2C 000A5D2C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800A8F30 000A5D30*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*800A8F34 000A5D34*/ PPC::Runtime::ASM::lwzx(context->r6, context->r5, context->r29);
/*800A8F38 000A5D38*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800A8F3C 000A5D3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r6));
/*800A8F40 000A5D40*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800A8F44 000A5D44*/ PPC::Runtime::ASM::lwzx(context->r24, context->r7, context->r0);
/*800A8F48 000A5D48*/ PPC::Runtime::ASM::bl(fn_800A08A8);
/*800A8F4C 000A5D4C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800A8F50 000A5D50*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800A8F54 000A5D54*/ PPC::Runtime::ASM::bl(fn_800A1614);
/*800A8F58 000A5D58*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800A8F5C 000A5D5C*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800A8F60 000A5D60*/ PPC::Runtime::ASM::b(.L_800A8FA0);
RUNTIME_PPC_JUMP_LABEL(.L_800A8F64, 0x800A8F64) //this is a jump label
/*800A8F64 000A5D64*/ PPC::Runtime::ASM::addi(context->r0, context->r29, 0x1);
/*800A8F68 000A5D68*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*800A8F6C 000A5D6C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*800A8F70 000A5D70*/ PPC::Runtime::ASM::slwi(context->r7, context->r30, 2);
/*800A8F74 000A5D74*/ PPC::Runtime::ASM::li(context->r4, lbl_805D5B98 @ Get_MemoryOffset_SDA21);
/*800A8F78 000A5D78*/ PPC::Runtime::ASM::lfsx(context->f1, context->r5, context->r25);
/*800A8F7C 000A5D7C*/ PPC::Runtime::ASM::mr(context->r3, context->r24);
/*800A8F80 000A5D80*/ PPC::Runtime::ASM::lfsx(context->f2, context->r5, context->r0);
/*800A8F84 000A5D84*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*800A8F88 000A5D88*/ PPC::Runtime::ASM::mr(context->r6, context->r27);
/*800A8F8C 000A5D8C*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r7);
/*800A8F90 000A5D90*/ PPC::Runtime::ASM::bl(fn_800A0DD0);
/*800A8F94 000A5D94*/ PPC::Runtime::ASM::xori(context->r30, context->r30, 0x1);
/*800A8F98 000A5D98*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0xc);
/*800A8F9C 000A5D9C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A8FA0, 0x800A8FA0) //this is a jump label
/*800A8FA0 000A5DA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*800A8FA4 000A5DA4*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800A8FA8 000A5DA8*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800A8FAC 000A5DAC*/ PPC::Runtime::ASM::blt(.L_800A8F64);
/*800A8FB0 000A5DB0*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xc);
/*800A8FB4 000A5DB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*800A8FB8 000A5DB8*/ PPC::Runtime::ASM::slwi(context->r7, context->r30, 2);
/*800A8FBC 000A5DBC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF110 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A8FC0 000A5DC0*/ PPC::Runtime::ASM::li(context->r4, lbl_805D5B98 @ Get_MemoryOffset_SDA21);
/*800A8FC4 000A5DC4*/ PPC::Runtime::ASM::lfsx(context->f1, context->r3, context->r0);
/*800A8FC8 000A5DC8*/ PPC::Runtime::ASM::mr(context->r3, context->r24);
/*800A8FCC 000A5DCC*/ PPC::Runtime::ASM::mr(context->r5, context->r26);
/*800A8FD0 000A5DD0*/ PPC::Runtime::ASM::mr(context->r6, context->r27);
/*800A8FD4 000A5DD4*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r7);
/*800A8FD8 000A5DD8*/ PPC::Runtime::ASM::bl(fn_800A0DD0);
/*800A8FDC 000A5DDC*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800A8FE0 000A5DE0*/ PPC::Runtime::ASM::bl(_restgpr_24);
/*800A8FE4 000A5DE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A8FE8 000A5DE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A8FEC 000A5DEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800A8FF0 000A5DF0*/ PPC::Runtime::ASM::blr();
}