//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_HSD_JObjSetupMatrixSub.hpp"
#include "fn_PSMTXMultVec.hpp"



void fn_HSD_WObjSetPositionZ(PPC::Runtime::GCContext* context)
{
/*8041AD9C 00417B9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041ADA0 00417BA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041ADA4 00417BA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041ADA8 00417BA8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041ADAC 00417BAC*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8041ADB0 00417BB0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041ADB4 00417BB4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/* 8041ADB8 00417BB8  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8041ADBC 00417BBC*/ PPC::Runtime::ASM::beq(.L_8041AE54);
/*8041ADC0 00417BC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/* 8041ADC4 00417BC4  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8041ADC8 00417BC8*/ PPC::Runtime::ASM::beq(.L_8041AE44);
/*8041ADCC 00417BCC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*8041ADD0 00417BD0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8041ADD4 00417BD4*/ PPC::Runtime::ASM::beq(.L_8041AE38);
/*8041ADD8 00417BD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8041ADDC 00417BDC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8041ADE0 00417BE0*/ PPC::Runtime::ASM::beq(.L_8041AE38);
/*8041ADE4 00417BE4*/ PPC::Runtime::ASM::beq(.L_8041AE28);
/*8041ADE8 00417BE8*/ PPC::Runtime::ASM::bne(.L_8041ADFC);
/*8041ADEC 00417BEC*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_497 @ Get_MemoryOffset_SDA21);
/*8041ADF0 00417BF0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8041ADF4 00417BF4*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_496 @ Get_MemoryOffset_SDA21);
/*8041ADF8 00417BF8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041ADFC, 0x8041ADFC) //this is a jump label
/*8041ADFC 00417BFC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8041AE00 00417C00*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8041AE04 00417C04*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8041AE08 00417C08*/ PPC::Runtime::ASM::bne(.L_8041AE18);
/*8041AE0C 00417C0C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8041AE10 00417C10*/ PPC::Runtime::ASM::beq(.L_8041AE18);
/*8041AE14 00417C14*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8041AE18, 0x8041AE18) //this is a jump label
/*8041AE18 00417C18*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8041AE1C 00417C1C*/ PPC::Runtime::ASM::beq(.L_8041AE28);
/*8041AE20 00417C20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041AE24 00417C24*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_8041AE28, 0x8041AE28) //this is a jump label
/*8041AE28 00417C28*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0xc);
/*8041AE2C 00417C2C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*8041AE30 00417C30*/ PPC::Runtime::ASM::mr(context->r5, context->r4);
/*8041AE34 00417C34*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
RUNTIME_PPC_JUMP_LABEL(.L_8041AE38, 0x8041AE38) //this is a jump label
/*8041AE38 00417C38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8041AE3C 00417C3C*/ PPC::Runtime::ASM::clrrwi(context->r0, context->r0, 1);
/*8041AE40 00417C40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8041AE44, 0x8041AE44) //this is a jump label
/*8041AE44 00417C44*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*8041AE48 00417C48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8041AE4C 00417C4C*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x2);
/*8041AE50 00417C50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8041AE54, 0x8041AE54) //this is a jump label
/*8041AE54 00417C54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041AE58 00417C58*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041AE5C 00417C5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041AE60 00417C60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8041AE64 00417C64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041AE68 00417C68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041AE6C 00417C6C*/ PPC::Runtime::ASM::blr();
}