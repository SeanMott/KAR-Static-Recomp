//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F7A64(PPC::Runtime::GCContext* context)
{
/*800F7A64 000F4864*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F7A68 000F4868*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7A6C 000F486C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7A70 000F4870*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7A74 000F4874*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F7A78 000F4878*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800F7A7C 000F487C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xf);
/*800F7A80 000F4880*/ PPC::Runtime::ASM::beq(.L_800F7A9C);
/*800F7A84 000F4884*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakulib." Get_MemoryOffset_HighBit);
/*800F7A88 000F4888*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_990 @ Get_MemoryOffset_HighBit);
/*800F7A8C 000F488C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakulib." Get_MemoryOffset_LowBit);
/*800F7A90 000F4890*/ PPC::Runtime::ASM::li(context->r4, 0x2d);
/*800F7A94 000F4894*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_990 @ Get_MemoryOffset_LowBit);
/*800F7A98 000F4898*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F7A9C, 0x800F7A9C) //this is a jump label
/*800F7A9C 000F489C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800F7AA0 000F48A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7AA4 000F48A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800F7AA8 000F48A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7AAC 000F48AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7AB0 000F48B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7AB4 000F48B4*/ PPC::Runtime::ASM::blr();
}