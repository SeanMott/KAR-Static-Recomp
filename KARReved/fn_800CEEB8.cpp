//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006BAC8.hpp"
#include "fn_800DE8A8.hpp"



void fn_800CEEB8(PPC::Runtime::GCContext* context)
{
/*800CEEB8 000CBCB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800CEEBC 000CBCBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CEEC0 000CBCC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CEEC4 000CBCC4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800CEEC8 000CBCC8*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800CEECC 000CBCCC*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CEED0 000CBCD0*/ PPC::Runtime::ASM::lis(context->r7, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800CEED4 000CBCD4*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800CEED8 000CBCD8*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*800CEEDC 000CBCDC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r6));
/*800CEEE0 000CBCE0*/ PPC::Runtime::ASM::mr(context->r28, context->r5);
/*800CEEE4 000CBCE4*/ PPC::Runtime::ASM::addi(context->r31, context->r7, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800CEEE8 000CBCE8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800CEEEC 000CBCEC*/ PPC::Runtime::ASM::bne(.L_800CEF00);
/*800CEEF0 000CBCF0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x5c);
/*800CEEF4 000CBCF4*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800CEEF8 000CBCF8*/ PPC::Runtime::ASM::li(context->r4, 0x157);
/*800CEEFC 000CBCFC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CEF00, 0x800CEF00) //this is a jump label
/*800CEF00 000CBD00*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*800CEF04 000CBD04*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800CEF08 000CBD08*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CEF0C 000CBD0C*/ PPC::Runtime::ASM::blt(.L_800CEF20);
/*800CEF10 000CBD10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800CEF14 000CBD14*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800CEF18 000CBD18*/ PPC::Runtime::ASM::bge(.L_800CEF20);
/*800CEF1C 000CBD1C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800CEF20, 0x800CEF20) //this is a jump label
/*800CEF20 000CBD20*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800CEF24 000CBD24*/ PPC::Runtime::ASM::bne(.L_800CEF38);
/*800CEF28 000CBD28*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800CEF2C 000CBD2C*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x74);
/*800CEF30 000CBD30*/ PPC::Runtime::ASM::li(context->r4, 0xb8);
/*800CEF34 000CBD34*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CEF38, 0x800CEF38) //this is a jump label
/*800CEF38 000CBD38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800CEF3C 000CBD3C*/ PPC::Runtime::ASM::slwi(context->r0, context->r27, 2);
/*800CEF40 000CBD40*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*800CEF44 000CBD44*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800CEF48 000CBD48*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800CEF4C 000CBD4C*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800CEF50 000CBD50*/ PPC::Runtime::ASM::bl(fn_8006BAC8);
/*800CEF54 000CBD54*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800CEF58 000CBD58*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800CEF5C 000CBD5C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800CEF60 000CBD60*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800CEF64 000CBD64*/ PPC::Runtime::ASM::bl(fn_800DE8A8);
/*800CEF68 000CBD68*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800CEF6C 000CBD6C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800CEF70 000CBD70*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800CEF74 000CBD74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CEF78 000CBD78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CEF7C 000CBD7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800CEF80 000CBD80*/ PPC::Runtime::ASM::blr();
}