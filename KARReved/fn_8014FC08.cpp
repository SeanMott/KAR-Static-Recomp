//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013120C.hpp"
#include "fn_80059520.hpp"



void fn_8014FC08(PPC::Runtime::GCContext* context)
{
/*8014FC08 0014CA08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8014FC0C 0014CA0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014FC10 0014CA10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014FC14 0014CA14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014FC18 0014CA18*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014FC1C 0014CA1C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8014FC20 0014CA20*/ PPC::Runtime::ASM::bl(fn_8013120C);
/*8014FC24 0014CA24*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1216 @ Get_MemoryOffset_HighBit);
/*8014FC28 0014CA28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8014FC2C 0014CA2C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1216 @ Get_MemoryOffset_LowBit);
/*8014FC30 0014CA30*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8014FC34 0014CA34*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x4f0);
/*8014FC38 0014CA38*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8014FC3C 0014CA3C*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8014FC40 0014CA40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014FC44 0014CA44*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014FC48 0014CA48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014FC4C 0014CA4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8014FC50 0014CA50*/ PPC::Runtime::ASM::blr();
}