//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E6610.hpp"
#include "fn_800E6754.hpp"



void fn_800E635C(PPC::Runtime::GCContext* context)
{
/*800E635C 000E315C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800E6360 000E3160*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E6364 000E3164*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E6368 000E3168*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E636C 000E316C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800E6370 000E3170*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r3));
/*800E6374 000E3174*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E6378 000E3178*/ PPC::Runtime::ASM::beq(.L_800E638C);
/*800E637C 000E317C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r31));
/*800E6380 000E3180*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E6384 000E3184*/ PPC::Runtime::ASM::beq(.L_800E638C);
/*800E6388 000E3188*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800E638C, 0x800E638C) //this is a jump label
/*800E638C 000E318C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xf8);
/*800E6390 000E3190*/ PPC::Runtime::ASM::bl(fn_800E6610);
/*800E6394 000E3194*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x100);
/*800E6398 000E3198*/ PPC::Runtime::ASM::bl(fn_800E6754);
/*800E639C 000E319C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E63A0 000E31A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E63A4 000E31A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E63A8 000E31A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800E63AC 000E31AC*/ PPC::Runtime::ASM::blr();
}