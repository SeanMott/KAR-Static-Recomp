//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80058920.hpp"
#include "fn_80058920.hpp"



void fn_80059798(PPC::Runtime::GCContext* context)
{
/*80059798 00056598*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005979C 0005659C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800597A0 000565A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800597A4 000565A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 800597A8 000565A8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*800597AC 000565AC*/ PPC::Runtime::ASM::bne(.L_800597C4);
/*800597B0 000565B0*/ PPC::Runtime::ASM::lis(context->r3, String_ "lbarchive." Get_MemoryOffset_HighBit);
/*800597B4 000565B4*/ PPC::Runtime::ASM::li(context->r4, 0x111);
/*800597B8 000565B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "lbarchive." Get_MemoryOffset_LowBit);
/*800597BC 000565BC*/ PPC::Runtime::ASM::li(context->r5, SoemStructBlobHandle_543 @ Get_MemoryOffset_SDA21);
/*800597C0 000565C0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800597C4, 0x800597C4) //this is a jump label
/*800597C4 000565C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/* 800597C8 000565C8  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*800597CC 000565CC*/ PPC::Runtime::ASM::bne(.L_800597E8);
/*800597D0 000565D0*/ PPC::Runtime::ASM::lis(context->r3, String_ "lbarchive." Get_MemoryOffset_HighBit);
/*800597D4 000565D4*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_204 @ Get_MemoryOffset_HighBit);
/*800597D8 000565D8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "lbarchive." Get_MemoryOffset_LowBit);
/*800597DC 000565DC*/ PPC::Runtime::ASM::li(context->r4, 0x112);
/*800597E0 000565E0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_204 @ Get_MemoryOffset_LowBit);
/*800597E4 000565E4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800597E8, 0x800597E8) //this is a jump label
/*800597E8 000565E8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r31));
/*800597EC 000565EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800597F0 000565F0*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x20);
/*800597F4 000565F4*/ PPC::Runtime::ASM::bl(fn_80058920);
/*800597F8 000565F8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800597FC 000565FC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80059800 00056600*/ PPC::Runtime::ASM::bl(fn_80058920);
/*80059804 00056604*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80059808 00056608*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005980C 0005660C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80059810 00056610*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80059814 00056614*/ PPC::Runtime::ASM::blr();
}