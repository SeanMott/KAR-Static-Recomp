//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSCancelAlarm.hpp"



void fn_8047F578(PPC::Runtime::GCContext* context)
{
/*8047F578 0047C378*/ PPC::Runtime::ASM::mflr(context->r0);
/*8047F57C 0047C37C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8047F580 0047C380*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*8047F584 0047C384*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047F588 0047C388*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8047F58C 0047C38C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8047F590 0047C390*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x9);
/*8047F594 0047C394*/ PPC::Runtime::ASM::bgt(.L_8047F634);
/*8047F598 0047C398*/ PPC::Runtime::ASM::lis(context->r3, jumptable_80534508 @ Get_MemoryOffset_HighBit);
/*8047F59C 0047C39C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, jumptable_80534508 @ Get_MemoryOffset_LowBit);
/*8047F5A0 0047C3A0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8047F5A4 0047C3A4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*8047F5A8 0047C3A8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*8047F5AC 0047C3AC*/ PPC::Runtime::ASM::bctr();
/*8047F5B0 0047C3B0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8047F5B4 0047C3B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F5B8 0047C3B8*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F5BC 0047C3BC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x27c, context->r31));
/*8047F5C0 0047C3C0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8047F5C4 0047C3C4*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 8047F5C8 0047C3C8  4E 80 00 21 */ blrl
/*8047F5CC 0047C3CC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8047F5D0 0047C3D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F5D4 0047C3D4*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F5D8 0047C3D8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8047F5DC 0047C3DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F5E0 0047C3E0*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F5E4 0047C3E4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8047F5E8 0047C3E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F5EC 0047C3EC*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F5F0 0047C3F0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8047F5F4 0047C3F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F5F8 0047C3F8*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F5FC 0047C3FC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8047F600 0047C400*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F604 0047C404*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F608 0047C408*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8047F60C 0047C40C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8047F610 0047C410*/ PPC::Runtime::ASM::b(.L_8047F634);
/*8047F614 0047C414*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x238);
/*8047F618 0047C418*/ PPC::Runtime::ASM::bl(fn_OSCancelAlarm);
/*8047F61C 0047C41C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x278, context->r31));
/*8047F620 0047C420*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8047F624 0047C424*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 8047F628 0047C428  4E 80 00 21 */ blrl
/*8047F62C 0047C42C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8047F630 0047C430*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8047F634, 0x8047F634) //this is a jump label
/*8047F634 0047C434*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8047F638 0047C438*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047F63C 0047C43C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*8047F640 0047C440*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8047F644 0047C444*/ PPC::Runtime::ASM::blr();
}