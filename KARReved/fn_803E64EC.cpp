//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___CARDSyncCallback.hpp"
#include "fn___CARDSyncCallback.hpp"
#include "fn_CARDMountAsync.hpp"
#include "fn___CARDSync.hpp"



void fn_803E64EC(PPC::Runtime::GCContext* context)
{
/*803E64EC 003E32EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E64F0 003E32F0*/ PPC::Runtime::ASM::lis(context->r6, fn___CARDSyncCallback @ Get_MemoryOffset_HighBit);
/*803E64F4 003E32F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E64F8 003E32F8*/ PPC::Runtime::ASM::addi(context->r6, context->r6, fn___CARDSyncCallback @ Get_MemoryOffset_LowBit);
/*803E64FC 003E32FC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E6500 003E3300*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E6504 003E3304*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E6508 003E3308*/ PPC::Runtime::ASM::bl(fn_CARDMountAsync);
/*803E650C 003E330C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E6510 003E3310*/ PPC::Runtime::ASM::bge(.L_803E6518);
/*803E6514 003E3314*/ PPC::Runtime::ASM::b(.L_803E6520);
RUNTIME_PPC_JUMP_LABEL(.L_803E6518, 0x803E6518) //this is a jump label
/*803E6518 003E3318*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E651C 003E331C*/ PPC::Runtime::ASM::bl(fn___CARDSync);
RUNTIME_PPC_JUMP_LABEL(.L_803E6520, 0x803E6520) //this is a jump label
/*803E6520 003E3320*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E6524 003E3324*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E6528 003E3328*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E652C 003E332C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E6530 003E3330*/ PPC::Runtime::ASM::blr();
}