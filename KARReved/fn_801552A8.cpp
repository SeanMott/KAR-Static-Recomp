//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013120C.hpp"
#include "fn_80059520.hpp"



void fn_801552A8(PPC::Runtime::GCContext* context)
{
/*801552A8 001520A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801552AC 001520AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801552B0 001520B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801552B4 001520B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801552B8 001520B8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801552BC 001520BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801552C0 001520C0*/ PPC::Runtime::ASM::bl(fn_8013120C);
/*801552C4 001520C4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1230 @ Get_MemoryOffset_HighBit);
/*801552C8 001520C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801552CC 001520CC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1230 @ Get_MemoryOffset_LowBit);
/*801552D0 001520D0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801552D4 001520D4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x64c);
/*801552D8 001520D8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801552DC 001520DC*/ PPC::Runtime::ASM::bl(fn_80059520);
/*801552E0 001520E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801552E4 001520E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801552E8 001520E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801552EC 001520EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801552F0 001520F0*/ PPC::Runtime::ASM::blr();
}