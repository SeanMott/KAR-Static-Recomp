//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "fn_TRKGetFreeBuffer.hpp"
#include "fn_TRKAppendBuffer_ui8.hpp"
#include "fn_TRKRequestSend.hpp"
#include "TRKGetBuffer.hpp"
#include "fn_TRKReleaseBuffer.hpp"
#include "fn_TRKReleaseBuffer.hpp"



void fn_HandleCloseFileSupportRequest(PPC::Runtime::GCContext* context)
{
/*803BF904 003BC704*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*803BF908 003BC708*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BF90C 003BC70C*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BF910 003BC710*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803BF914 003BC714*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*803BF918 003BC718*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803BF91C 003BC71C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*803BF920 003BC720*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803BF924 003BC724*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*803BF928 003BC728*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*803BF92C 003BC72C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803BF930 003BC730*/ PPC::Runtime::ASM::bl(memset);
/*803BF934 003BC734*/ PPC::Runtime::ASM::li(context->r3, 0xd3);
/*803BF938 003BC738*/ PPC::Runtime::ASM::li(context->r0, 0x40);
/*803BF93C 003BC73C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BF940 003BC740*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*803BF944 003BC744*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803BF948 003BC748*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BF94C 003BC74C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BF950 003BC750*/ PPC::Runtime::ASM::bl(fn_TRKGetFreeBuffer);
/* 803BF954 003BC754  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803BF958 003BC758*/ PPC::Runtime::ASM::bne(.L_803BF970);
/*803BF95C 003BC75C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BF960 003BC760*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*803BF964 003BC764*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BF968 003BC768*/ PPC::Runtime::ASM::bl(fn_TRKAppendBuffer_ui8);
/*803BF96C 003BC76C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BF970, 0x803BF970) //this is a jump label
/*803BF970 003BC770*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BF974 003BC774*/ PPC::Runtime::ASM::bne(.L_803BF9C4);
/*803BF978 003BC778*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BF97C 003BC77C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*803BF980 003BC780*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803BF984 003BC784*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*803BF988 003BC788*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*803BF98C 003BC78C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*803BF990 003BC790*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BF994 003BC794*/ PPC::Runtime::ASM::bl(fn_TRKRequestSend);
/* 803BF998 003BC798  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803BF99C 003BC79C*/ PPC::Runtime::ASM::bne(.L_803BF9AC);
/*803BF9A0 003BC7A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BF9A4 003BC7A4*/ PPC::Runtime::ASM::bl(TRKGetBuffer);
/*803BF9A8 003BC7A8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803BF9AC, 0x803BF9AC) //this is a jump label
/*803BF9AC 003BC7AC*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803BF9B0 003BC7B0*/ PPC::Runtime::ASM::bne(.L_803BF9BC);
/*803BF9B4 003BC7B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*803BF9B8 003BC7B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803BF9BC, 0x803BF9BC) //this is a jump label
/*803BF9BC 003BC7BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BF9C0 003BC7C0*/ PPC::Runtime::ASM::bl(fn_TRKReleaseBuffer);
RUNTIME_PPC_JUMP_LABEL(.L_803BF9C4, 0x803BF9C4) //this is a jump label
/*803BF9C4 003BC7C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BF9C8 003BC7C8*/ PPC::Runtime::ASM::bl(fn_TRKReleaseBuffer);
/*803BF9CC 003BC7CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*803BF9D0 003BC7D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803BF9D4 003BC7D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*803BF9D8 003BC7D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*803BF9DC 003BC7DC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*803BF9E0 003BC7E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BF9E4 003BC7E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*803BF9E8 003BC7E8*/ PPC::Runtime::ASM::blr();
}