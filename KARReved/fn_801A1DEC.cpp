//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80236C40.hpp"
#include "fn_8022B554.hpp"
#include "fn_8022D230.hpp"
#include "fn_80193F24.hpp"
#include "fn_80193D38.hpp"
#include "fn_80193EC4.hpp"
#include "fn_801C82F8.hpp"
#include "fn_8022CF54.hpp"
#include "fn_801C7C7C.hpp"
#include "fn_loadPlayer_isMachineBike.hpp"
#include "fn_IsLingering_TakeParam_EmissionController.hpp"
#include "fn_loadPlayer_MachineI.hpp"
#include "fn_80193CB0.hpp"
#include "fn_GphProc_cMuDie_6cMuDieFs.hpp"
#include "fn_setCameraToOnFoot.hpp"
#include "fn_801910E8.hpp"
#include "fn_801C7674.hpp"
#include "fn_8027A1F4.hpp"



void fn_801A1DEC(PPC::Runtime::GCContext* context)
{
/*801A1DEC 0019EBEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A1DF0 0019EBF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A1DF4 0019EBF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A1DF8 0019EBF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A1DFC 0019EBFC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A1E00 0019EC00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x810, context->r3));
/*801A1E04 0019EC04*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801A1E08 0019EC08*/ PPC::Runtime::ASM::beq(.L_801A1E44);
/*801A1E0C 0019EC0C*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801A1E10 0019EC10*/ PPC::Runtime::ASM::lis(context->r4, 0x6);
/*801A1E14 0019EC14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801A1E18 0019EC18*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x5aa8);
/*801A1E1C 0019EC1C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43c, context->r31));
/*801A1E20 0019EC20*/ PPC::Runtime::ASM::li(context->r6, 0xda);
/*801A1E24 0019EC24*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r7));
/*801A1E28 0019EC28*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*801A1E2C 0019EC2C*/ PPC::Runtime::ASM::lbz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1E30 0019EC30*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801A1E34 0019EC34*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801A1E38 0019EC38*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A1E3C 0019EC3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x810, context->r31));
/*801A1E40 0019EC40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x810, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801A1E44, 0x801A1E44) //this is a jump label
/*801A1E44 0019EC44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
/*801A1E48 0019EC48*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801A1E4C 0019EC4C*/ PPC::Runtime::ASM::beq(.L_801A1F24);
/*801A1E50 0019EC50*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801A1E54 0019EC54*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801A1E58 0019EC58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r31));
/*801A1E5C 0019EC5C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A1E60 0019EC60*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801A1E64 0019EC64*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*801A1E68 0019EC68*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801A1E6C 0019EC6C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1E70 0019EC70*/ PPC::Runtime::ASM::bl(fn_8022B554);
/*801A1E74 0019EC74*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1E78 0019EC78*/ PPC::Runtime::ASM::bl(fn_8022D230);
/*801A1E7C 0019EC7C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801A1E80 0019EC80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1E84 0019EC84*/ PPC::Runtime::ASM::bl(fn_80193F24);
/*801A1E88 0019EC88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1E8C 0019EC8C*/ PPC::Runtime::ASM::bl(fn_80193D38);
/*801A1E90 0019EC90*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f8, context->r31));
/*801A1E94 0019EC94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1E98 0019EC98*/ PPC::Runtime::ASM::bl(fn_80193EC4);
/*801A1E9C 0019EC9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A1EA0 0019ECA0*/ PPC::Runtime::ASM::bl(fn_801C82F8);
/*801A1EA4 0019ECA4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1EA8 0019ECA8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A1EAC 0019ECAC*/ PPC::Runtime::ASM::bl(fn_8022CF54);
/*801A1EB0 0019ECB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A1EB4 0019ECB4*/ PPC::Runtime::ASM::bl(fn_801C7C7C);
/*801A1EB8 0019ECB8*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801A1EBC 0019ECBC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1EC0 0019ECC0*/ PPC::Runtime::ASM::bl(fn_loadPlayer_isMachineBike);
/*801A1EC4 0019ECC4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A1EC8 0019ECC8*/ PPC::Runtime::ASM::bl(fn_IsLingering_TakeParam_EmissionController);
/*801A1ECC 0019ECCC*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801A1ED0 0019ECD0*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1ED4 0019ECD4*/ PPC::Runtime::ASM::bl(fn_loadPlayer_MachineI);
/*801A1ED8 0019ECD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1EDC 0019ECDC*/ PPC::Runtime::ASM::bl(fn_80193CB0);
/*801A1EE0 0019ECE0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x826, context->r31));
/*801A1EE4 0019ECE4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801A1EE8 0019ECE8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*801A1EEC 0019ECEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1EF0 0019ECF0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x826, context->r31));
/*801A1EF4 0019ECF4*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD814 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A1EF8 0019ECF8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x274, context->r4));
/*801A1EFC 0019ECFC*/ PPC::Runtime::ASM::bl(fn_GphProc_cMuDie_6cMuDieFs);
/*801A1F00 0019ED00*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1F04 0019ED04*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801A1F08 0019ED08*/ PPC::Runtime::ASM::bl(fn_setCameraToOnFoot);
/*801A1F0C 0019ED0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A1F10 0019ED10*/ PPC::Runtime::ASM::bl(fn_801910E8);
/*801A1F14 0019ED14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A1F18 0019ED18*/ PPC::Runtime::ASM::bl(fn_801C7674);
/*801A1F1C 0019ED1C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A1F20 0019ED20*/ PPC::Runtime::ASM::bl(fn_8027A1F4);
RUNTIME_PPC_JUMP_LABEL(.L_801A1F24, 0x801A1F24) //this is a jump label
/*801A1F24 0019ED24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A1F28 0019ED28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A1F2C 0019ED2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A1F30 0019ED30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A1F34 0019ED34*/ PPC::Runtime::ASM::blr();
}