//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204FAC.hpp"
#include "fn_80205310.hpp"
#include "fn_80209CE4.hpp"
#include "fn_801FC398.hpp"



void fn_802134BC(PPC::Runtime::GCContext* context)
{
/*802134BC 002102BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802134C0 002102C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802134C4 002102C4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*802134C8 002102C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802134CC 002102CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802134D0 002102D0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802134D4 002102D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r3));
/*802134D8 002102D8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*802134DC 002102DC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0a, context->r3));
/*802134E0 002102E0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x87c, context->r3));
/*802134E4 002102E4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c0, context->r3));
/*802134E8 002102E8*/ PPC::Runtime::ASM::bl(fn_80204FAC);
/*802134EC 002102EC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802134F0 002102F0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E25A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802134F4 002102F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r31));
/*802134F8 002102F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802134FC 002102FC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E259C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80213500 00210300*/ PPC::Runtime::ASM::bl(fn_80205310);
/*80213504 00210304*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80213508 00210308*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8021350C 0021030C*/ PPC::Runtime::ASM::bl(fn_80209CE4);
/*80213510 00210310*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2598 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80213514 00210314*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80213518 00210318*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E259C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8021351C 0021031C*/ PPC::Runtime::ASM::li(context->r4, 0xf);
/*80213520 00210320*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80213524 00210324*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80213528 00210328*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*8021352C 0021032C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80213530 00210330*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80213534 00210334*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80213538 00210338*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021353C 0021033C*/ PPC::Runtime::ASM::blr();
}