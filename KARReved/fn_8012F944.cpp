//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012F944(PPC::Runtime::GCContext* context)
{
/*8012F944 0012C744*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012F948 0012C748*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012F94C 0012C74C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012F950 0012C750*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012F954 0012C754*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012F958 0012C758*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012F95C 0012C75C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012F960 0012C760*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xd20);
/*8012F964 0012C764*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8012F968 0012C768*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8012F96C, 0x8012F96C) //this is a jump label
/*8012F96C 0012C76C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8012F970 0012C770*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012F974 0012C774*/ PPC::Runtime::ASM::beq(.L_8012F980);
/*8012F978 0012C778*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012F97C 0012C77C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012F980, 0x8012F980) //this is a jump label
/*8012F980 0012C780*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8012F984 0012C784*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8012F988 0012C788*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8012F98C 0012C78C*/ PPC::Runtime::ASM::blt(.L_8012F96C);
/*8012F990 0012C790*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012F994 0012C794*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012F998 0012C798*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012F99C 0012C79C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012F9A0 0012C7A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012F9A4 0012C7A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012F9A8 0012C7A8*/ PPC::Runtime::ASM::blr();
}