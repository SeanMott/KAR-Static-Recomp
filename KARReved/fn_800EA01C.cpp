//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D64C.hpp"



void fn_800EA01C(PPC::Runtime::GCContext* context)
{
/*800EA01C 000E6E1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EA020 000E6E20*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EA024 000E6E24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA028 000E6E28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800EA02C 000E6E2C*/ PPC::Runtime::ASM::bl(fn_8005D64C);
/*800EA030 000E6E30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA034 000E6E34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EA038 000E6E38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EA03C 000E6E3C*/ PPC::Runtime::ASM::blr();
}