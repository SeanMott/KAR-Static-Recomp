//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80291CAC(PPC::Runtime::GCContext* context)
{
/*80291CAC 0028EAAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80291CB0 0028EAB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80291CB4 0028EAB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291CB8 0028EAB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80291CBC 0028EABC  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80291CC0 0028EAC0*/ PPC::Runtime::ASM::beq(.L_80291CE4);
/*80291CC4 0028EAC4*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BD100 @ Get_MemoryOffset_HighBit);
/*80291CC8 0028EAC8*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*80291CCC 0028EACC*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BD100 @ Get_MemoryOffset_LowBit);
/*80291CD0 0028EAD0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80291CD4 0028EAD4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80291CD8 0028EAD8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDB9C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80291CDC 0028EADC*/ PPC::Runtime::ASM::ble(.L_80291CE4);
/*80291CE0 0028EAE0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80291CE4, 0x80291CE4) //this is a jump label
/*80291CE4 0028EAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291CE8 0028EAE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80291CEC 0028EAEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80291CF0 0028EAF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80291CF4 0028EAF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80291CF8 0028EAF8*/ PPC::Runtime::ASM::blr();
}