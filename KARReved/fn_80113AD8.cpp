//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80009888.hpp"
#include "fn_80009888.hpp"



void fn_80113AD8(PPC::Runtime::GCContext* context)
{
/*80113AD8 001108D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80113ADC 001108DC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80113AE0 001108E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80113AE4 001108E4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80113AE8 001108E8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80113AEC, 0x80113AEC) //this is a jump label
/*80113AEC 001108EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80113AF0 001108F0*/ PPC::Runtime::ASM::bl(fn_80009888);
/*80113AF4 001108F4*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80113AF8 001108F8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*80113AFC 001108FC*/ PPC::Runtime::ASM::beq(.L_80113B08);
/*80113B00 00110900*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80113B04 00110904*/ PPC::Runtime::ASM::bl(fn_80009888);
RUNTIME_PPC_JUMP_LABEL(.L_80113B08, 0x80113B08) //this is a jump label
/*80113B08 00110908*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80113B0C 0011090C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4);
/*80113B10 00110910*/ PPC::Runtime::ASM::blt(.L_80113AEC);
/*80113B14 00110914*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80113B18 00110918*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80113B1C 0011091C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80113B20 00110920*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80113B24 00110924*/ PPC::Runtime::ASM::blr();
}