//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_groundMovement.hpp"



void fn_AS_StarChargeRelease(PPC::Runtime::GCContext* context)
{
/*801ABC64 001A8A64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ABC68 001A8A68*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ABC6C 001A8A6C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E13D4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801ABC70 001A8A70*/ PPC::Runtime::ASM::li(context->r4, 0x2a);
/*801ABC74 001A8A74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ABC78 001A8A78*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801ABC7C 001A8A7C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801ABC80 001A8A80*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E13D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801ABC84 001A8A84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ABC88 001A8A88*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801ABC8C 001A8A8C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801ABC90 001A8A90*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801ABC94 001A8A94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ABC98 001A8A98*/ PPC::Runtime::ASM::bl(fn_groundMovement);
/*801ABC9C 001A8A9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ABCA0 001A8AA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ABCA4 001A8AA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ABCA8 001A8AA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ABCAC 001A8AAC*/ PPC::Runtime::ASM::blr();
}