//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hsdNew.hpp"
#include "fn___assert.hpp"



void fn_HSD_TObjAlloc(PPC::Runtime::GCContext* context)
{
/*803F7894 003F4694*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803F7898 003F4698*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F789C 003F469C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F78A0 003F46A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803F78A4 003F46A4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1hsdNew @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F78A8 003F46A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803F78AC 003F46AC*/ PPC::Runtime::ASM::beq(.L_803F78B4);
/*803F78B0 003F46B0*/ PPC::Runtime::ASM::b(.L_803F78BC);
RUNTIME_PPC_JUMP_LABEL(.L_803F78B4, 0x803F78B4) //this is a jump label
/*803F78B4 003F46B4*/ PPC::Runtime::ASM::lis(context->r3, lbl_80501E30 @ Get_MemoryOffset_HighBit);
/*803F78B8 003F46B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80501E30 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_803F78BC, 0x803F78BC) //this is a jump label
/*803F78BC 003F46BC*/ PPC::Runtime::ASM::bl(fn_hsdNew);
/* 803F78C0 003F46C0  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803F78C4 003F46C4*/ PPC::Runtime::ASM::bne(.L_803F78D8);
/*803F78C8 003F46C8*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_1278 @ Get_MemoryOffset_SDA21);
/*803F78CC 003F46CC*/ PPC::Runtime::ASM::li(context->r4, 0x855);
/*803F78D0 003F46D0*/ PPC::Runtime::ASM::li(context->r5, String_ "ne" 3 @ Get_MemoryOffset_SDA21);
/*803F78D4 003F46D4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_803F78D8, 0x803F78D8) //this is a jump label
/*803F78D8 003F46D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F78DC 003F46DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803F78E0 003F46E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803F78E4 003F46E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F78E8 003F46E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803F78EC 003F46EC*/ PPC::Runtime::ASM::blr();
}