//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800547E0.hpp"
#include "fn_800549A0.hpp"
#include "fn_killWhispy.hpp"



void fn_8010DDF8(PPC::Runtime::GCContext* context)
{
/*8010DDF8 0010ABF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8010DDFC 0010ABFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010DE00 0010AC00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010DE04 0010AC04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8010DE08 0010AC08*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8010DE0C 0010AC0C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8010DE10 0010AC10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010DE14 0010AC14*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010DE18 0010AC18*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010DE1C 0010AC1C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r4));
/*8010DE20 0010AC20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010DE24 0010AC24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010DE28 0010AC28*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*8010DE2C 0010AC2C*/ PPC::Runtime::ASM::lwzx(context->r31, context->r4, context->r0);
/*8010DE30 0010AC30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8010DE34 0010AC34*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*8010DE38 0010AC38*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8010DE3C 0010AC3C*/ PPC::Runtime::ASM::bne(.L_8010DE7C);
/*8010DE40 0010AC40*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8010DE44 0010AC44*/ PPC::Runtime::ASM::bl(fn_800549A0);
/*8010DE48 0010AC48*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8010DE4C 0010AC4C*/ PPC::Runtime::ASM::bne(.L_8010DE7C);
/*8010DE50 0010AC50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8010DE54 0010AC54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8010DE58 0010AC58*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFAE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010DE5C 0010AC5C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8010DE60 0010AC60*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010DE64 0010AC64*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8010DE68 0010AC68*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DFAE4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8010DE6C 0010AC6C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8010DE70 0010AC70*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r6));
/*8010DE74 0010AC74*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*8010DE78 0010AC78*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_8010DE7C, 0x8010DE7C) //this is a jump label
/*8010DE7C 0010AC7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010DE80 0010AC80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8010DE84 0010AC84*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8010DE88 0010AC88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010DE8C 0010AC8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8010DE90 0010AC90*/ PPC::Runtime::ASM::blr();
}