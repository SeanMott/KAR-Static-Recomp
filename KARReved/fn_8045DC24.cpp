//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_8045DC24(PPC::Runtime::GCContext* context)
{
/*8045DC24 0045AA24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8045DC28 0045AA28*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045DC2C 0045AA2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DC30 0045AA30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8045DC34 0045AA34*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8045DC38 0045AA38*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8045DC3C 0045AA3C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8045DC40 0045AA40*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8045DC44 0045AA44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8045DC48 0045AA48*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8045DC4C 0045AA4C*/ PPC::Runtime::ASM::bne(.L_8045DC5C);
/*8045DC50 0045AA50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8045DC54 0045AA54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8045DC58 0045AA58*/ PPC::Runtime::ASM::b(.L_8045DC68);
RUNTIME_PPC_JUMP_LABEL(.L_8045DC5C, 0x8045DC5C) //this is a jump label
/*8045DC5C 0045AA5C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8045DC60 0045AA60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8045DC64 0045AA64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8045DC68, 0x8045DC68) //this is a jump label
/*8045DC68 0045AA68*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8045DC6C 0045AA6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8045DC70 0045AA70*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8045DC74 0045AA74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045DC78 0045AA78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8045DC7C 0045AA7C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8045DC80 0045AA80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045DC84 0045AA84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045DC88 0045AA88*/ PPC::Runtime::ASM::blr();
}