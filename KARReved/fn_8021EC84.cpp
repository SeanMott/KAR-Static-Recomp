//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802361A0.hpp"
#include "fn_8021F1BC.hpp"
#include "fn_8020C70C.hpp"
#include "fn_8020C6E0.hpp"
#include "fn_801FBF2C.hpp"



void fn_8021EC84(PPC::Runtime::GCContext* context)
{
/*8021EC84 0021BA84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8021EC88 0021BA88*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021EC8C 0021BA8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021EC90 0021BA90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021EC94 0021BA94*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8021EC98 0021BA98*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4a, context->r3));
/*8021EC9C 0021BA9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8021ECA0 0021BAA0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4a, context->r31));
/*8021ECA4 0021BAA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb60, context->r31));
/*8021ECA8 0021BAA8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb64, context->r31));
/*8021ECAC 0021BAAC*/ PPC::Runtime::ASM::bl(fn_802361A0);
/*8021ECB0 0021BAB0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8021ECB4 0021BAB4*/ PPC::Runtime::ASM::bne(.L_8021ECF4);
/*8021ECB8 0021BAB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb74, context->r31));
/*8021ECBC 0021BABC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8021ECC0 0021BAC0*/ PPC::Runtime::ASM::beq(.L_8021ECCC);
/*8021ECC4 0021BAC4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8021ECC8 0021BAC8*/ PPC::Runtime::ASM::bl(fn_8021F1BC);
RUNTIME_PPC_JUMP_LABEL(.L_8021ECCC, 0x8021ECCC) //this is a jump label
/*8021ECCC 0021BACC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8021ECD0 0021BAD0*/ PPC::Runtime::ASM::bl(fn_8020C70C);
/*8021ECD4 0021BAD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8021ECD8 0021BAD8*/ PPC::Runtime::ASM::bl(fn_8020C6E0);
/*8021ECDC 0021BADC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb78, context->r31));
/*8021ECE0 0021BAE0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8021ECE4 0021BAE4*/ PPC::Runtime::ASM::beq(.L_8021ECEC);
/*8021ECE8 0021BAE8*/ PPC::Runtime::ASM::bl(fn_80428F64);
RUNTIME_PPC_JUMP_LABEL(.L_8021ECEC, 0x8021ECEC) //this is a jump label
/*8021ECEC 0021BAEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8021ECF0 0021BAF0*/ PPC::Runtime::ASM::bl(fn_801FBF2C);
RUNTIME_PPC_JUMP_LABEL(.L_8021ECF4, 0x8021ECF4) //this is a jump label
/*8021ECF4 0021BAF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8021ECF8 0021BAF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021ECFC 0021BAFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8021ED00 0021BB00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8021ED04 0021BB04*/ PPC::Runtime::ASM::blr();
}