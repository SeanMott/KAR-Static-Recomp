//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800811CC.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD410.hpp"
#include "fn_800AD410.hpp"
#include "fn_800ABA74.hpp"



void fn_800AE058(PPC::Runtime::GCContext* context)
{
/*800AE058 000AAE58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AE05C 000AAE5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AE060 000AAE60*/ PPC::Runtime::ASM::lis(context->r4, lbl_805570A0 @ Get_MemoryOffset_HighBit);
/*800AE064 000AAE64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE068 000AAE68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE06C 000AAE6C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE070 000AAE70*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_805570A0 @ Get_MemoryOffset_LowBit);
/*800AE074 000AAE74*/ PPC::Runtime::ASM::bl(fn_800811CC);
/*800AE078 000AAE78*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*800AE07C 000AAE7C*/ PPC::Runtime::ASM::bne(.L_800AE0B4);
/*800AE080 000AAE80*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE084 000AAE84*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE088 000AAE88*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800AE08C 000AAE8C*/ PPC::Runtime::ASM::lis(context->r4, StructWithStructs_57 @ Get_MemoryOffset_HighBit);
/*800AE090 000AAE90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AE094 000AAE94*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithStructs_57 @ Get_MemoryOffset_LowBit);
/*800AE098 000AAE98*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800AE09C 000AAE9C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800AE0A0 000AAEA0*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800AE0A4 000AAEA4*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE0A8 000AAEA8*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD410 @ Get_MemoryOffset_HighBit);
/*800AE0AC 000AAEAC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD410 @ Get_MemoryOffset_LowBit);
/*800AE0B0 000AAEB0*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800AE0B4, 0x800AE0B4) //this is a jump label
/*800AE0B4 000AAEB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE0B8 000AAEB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AE0BC 000AAEBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE0C0 000AAEC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AE0C4 000AAEC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AE0C8 000AAEC8*/ PPC::Runtime::ASM::blr();
}