//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204878.hpp"
#include "fn_8018D284.hpp"



void fn_80202130(PPC::Runtime::GCContext* context)
{
/*80202130 001FEF30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80202134 001FEF34*/ PPC::Runtime::ASM::mflr(context->r0);
/*80202138 001FEF38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020213C 001FEF3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80202140 001FEF40*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80202144 001FEF44*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80202148 001FEF48*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8020214C 001FEF4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*80202150 001FEF50*/ PPC::Runtime::ASM::b(.L_80202178);
RUNTIME_PPC_JUMP_LABEL(.L_80202154, 0x80202154) //this is a jump label
/*80202154 001FEF54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80202158 001FEF58*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*8020215C 001FEF5C*/ PPC::Runtime::ASM::beq(.L_80202174);
/*80202160 001FEF60*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80202164 001FEF64*/ PPC::Runtime::ASM::bl(fn_80204878);
/*80202168 001FEF68*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8020216C 001FEF6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r30));
/*80202170 001FEF70*/ PPC::Runtime::ASM::bl(fn_8018D284);
RUNTIME_PPC_JUMP_LABEL(.L_80202174, 0x80202174) //this is a jump label
/*80202174 001FEF74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80202178, 0x80202178) //this is a jump label
/*80202178 001FEF78*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8020217C 001FEF7C*/ PPC::Runtime::ASM::bne(.L_80202154);
/*80202180 001FEF80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80202184 001FEF84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80202188 001FEF88*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8020218C 001FEF8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80202190 001FEF90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80202194 001FEF94*/ PPC::Runtime::ASM::blr();
}