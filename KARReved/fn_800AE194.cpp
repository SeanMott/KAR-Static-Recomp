//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD410.hpp"
#include "fn_800AD410.hpp"
#include "fn_800ABA74.hpp"



void fn_800AE194(PPC::Runtime::GCContext* context)
{
/*800AE194 000AAF94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AE198 000AAF98*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AE19C 000AAF9C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AE1A0 000AAFA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE1A4 000AAFA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE1A8 000AAFA8*/ PPC::Runtime::ASM::bne(.L_800AE1E0);
/*800AE1AC 000AAFAC*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE1B0 000AAFB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE1B4 000AAFB4*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800AE1B8 000AAFB8*/ PPC::Runtime::ASM::lis(context->r4, StructWithStructs_60 @ Get_MemoryOffset_HighBit);
/*800AE1BC 000AAFBC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AE1C0 000AAFC0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithStructs_60 @ Get_MemoryOffset_LowBit);
/*800AE1C4 000AAFC4*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800AE1C8 000AAFC8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800AE1CC 000AAFCC*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800AE1D0 000AAFD0*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE1D4 000AAFD4*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD410 @ Get_MemoryOffset_HighBit);
/*800AE1D8 000AAFD8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD410 @ Get_MemoryOffset_LowBit);
/*800AE1DC 000AAFDC*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800AE1E0, 0x800AE1E0) //this is a jump label
/*800AE1E0 000AAFE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE1E4 000AAFE4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AE1E8 000AAFE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE1EC 000AAFEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AE1F0 000AAFF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AE1F4 000AAFF4*/ PPC::Runtime::ASM::blr();
}