//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802410D4.hpp"
#include "fn_80235008.hpp"
#include "fn_80235008.hpp"
#include "fn_802344DC.hpp"



void fn_8023BCCC(PPC::Runtime::GCContext* context)
{
/*8023BCCC 00238ACC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8023BCD0 00238AD0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8023BCD4 00238AD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8023BCD8 00238AD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8023BCDC 00238ADC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8023BCE0 00238AE0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8023BCE4 00238AE4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8023BCE8 00238AE8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8023BCEC 00238AEC*/ PPC::Runtime::ASM::bl(fn_802410D4);
/*8023BCF0 00238AF0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8023BCF4 00238AF4*/ PPC::Runtime::ASM::bne(.L_8023BD00);
/*8023BCF8 00238AF8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8023BCFC 00238AFC*/ PPC::Runtime::ASM::b(.L_8023BD74);
RUNTIME_PPC_JUMP_LABEL(.L_8023BD00, 0x8023BD00) //this is a jump label
/*8023BD00 00238B00*/ PPC::Runtime::ASM::lis(context->r3, 0x68dc);
/*8023BD04 00238B04*/ PPC::Runtime::ASM::lis(context->r4, lbl_8055D7A0 @ Get_MemoryOffset_HighBit);
/*8023BD08 00238B08*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x7453);
/*8023BD0C 00238B0C*/ PPC::Runtime::ASM::slwi(context->r3, context->r30, 3);
/* 8023BD10 00238B10  7C 00 E8 96 */ mulhw context->r0 , context->r0 , context->r29
/*8023BD14 00238B14*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_8055D7A0 @ Get_MemoryOffset_LowBit);
/*8023BD18 00238B18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24c, context->r4));
/*8023BD1C 00238B1C*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*8023BD20 00238B20*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r3);
/*8023BD24 00238B24*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*8023BD28 00238B28*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 12);
/*8023BD2C 00238B2C*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 31);
/*8023BD30 00238B30*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r4);
/*8023BD34 00238B34*/ PPC::Runtime::ASM::bl(fn_8043294C);
/* 8023BD38 00238B38  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8023BD3C 00238B3C*/ PPC::Runtime::ASM::beq(.L_8023BD70);
/*8023BD40 00238B40*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B4E08 @ Get_MemoryOffset_HighBit);
/*8023BD44 00238B44*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_804B4E08 @ Get_MemoryOffset_LowBit);
/*8023BD48 00238B48*/ PPC::Runtime::ASM::bl(fn_8042BA60);
/*8023BD4C 00238B4C*/ PPC::Runtime::ASM::lis(context->r4, fn_80235008 @ Get_MemoryOffset_HighBit);
/*8023BD50 00238B50*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8023BD54 00238B54*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_80235008 @ Get_MemoryOffset_LowBit);
/*8023BD58 00238B58*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8023BD5C 00238B5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r31));
/*8023BD60 00238B60*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*8023BD64 00238B64*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8023BD68 00238B68*/ PPC::Runtime::ASM::bl(fn_802344DC);
/*8023BD6C 00238B6C*/ PPC::Runtime::ASM::b(.L_8023BD74);
RUNTIME_PPC_JUMP_LABEL(.L_8023BD70, 0x8023BD70) //this is a jump label
/*8023BD70 00238B70*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8023BD74, 0x8023BD74) //this is a jump label
/*8023BD74 00238B74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8023BD78 00238B78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8023BD7C 00238B7C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8023BD80 00238B80*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8023BD84 00238B84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8023BD88 00238B88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8023BD8C 00238B8C*/ PPC::Runtime::ASM::blr();
}