//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80055DA0.hpp"
#include "fn_800E9958.hpp"



void fn_800E895C(PPC::Runtime::GCContext* context)
{
/*800E895C 000E575C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800E8960 000E5760*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E8964 000E5764*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800E8968 000E5768*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800E896C 000E576C*/ PPC::Runtime::ASM::bl(_savegpr_23);
/*800E8970 000E5770*/ PPC::Runtime::ASM::mr(context->r23, context->r3);
/*800E8974 000E5774*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_960 @ Get_MemoryOffset_HighBit);
/*800E8978 000E5778*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E897C 000E577C*/ PPC::Runtime::ASM::addi(context->r27, context->r23, 0x454);
/*800E8980 000E5780*/ PPC::Runtime::ASM::addi(context->r29, context->r4, MemoryOffset_960 @ Get_MemoryOffset_LowBit);
/*800E8984 000E5784*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3));
/*800E8988 000E5788*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800E898C 000E578C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r23));
/*800E8990 000E5790*/ PPC::Runtime::ASM::beq(.L_800E8CA8);
/*800E8994 000E5794*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E8998 000E5798*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x64);
/*800E899C 000E579C*/ PPC::Runtime::ASM::blt(.L_800E89BC);
/*800E89A0 000E57A0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x9c);
/*800E89A4 000E57A4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800E89A8 000E57A8*/ PPC::Runtime::ASM::bl(OSReport);
/*800E89AC 000E57AC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xb0);
/*800E89B0 000E57B0*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xbc);
/*800E89B4 000E57B4*/ PPC::Runtime::ASM::li(context->r4, 0x97);
/*800E89B8 000E57B8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E89BC, 0x800E89BC) //this is a jump label
/*800E89BC 000E57BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E89C0 000E57C0*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 3);
/*800E89C4 000E57C4*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800E89C8 000E57C8*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800E89CC 000E57CC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800E89D0 000E57D0*/ PPC::Runtime::ASM::mr(context->r25, context->r26);
/*800E89D4 000E57D4*/ PPC::Runtime::ASM::li(context->r24, 0x0);
/*800E89D8 000E57D8*/ PPC::Runtime::ASM::b(.L_800E8C9C);
RUNTIME_PPC_JUMP_LABEL(.L_800E89DC, 0x800E89DC) //this is a jump label
/*800E89DC 000E57DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800E89E0 000E57E0*/ PPC::Runtime::ASM::bl(fn_80055DA0);
/*800E89E4 000E57E4*/ PPC::Runtime::ASM::bl(fn_JObj_LoadJoint);
/*800E89E8 000E57E8*/ PPC::Runtime::ASM::stwx(context->r3, context->r31, context->r26);
/*800E89EC 000E57EC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E89F0 000E57F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E89F4 000E57F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800E89F8 000E57F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E89FC 000E57FC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E8A00 000E5800*/ PPC::Runtime::ASM::bne(.L_800E8A14);
/*800E8A04 000E5804*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E8A08 000E5808*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xc);
/*800E8A0C 000E580C*/ PPC::Runtime::ASM::li(context->r4, 0x13f);
/*800E8A10 000E5810*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8A14, 0x800E8A14) //this is a jump label
/*800E8A14 000E5814*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E8A18 000E5818*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800E8A1C 000E581C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E8A20 000E5820*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E8A24 000E5824*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800E8A28 000E5828*/ PPC::Runtime::ASM::bne(.L_800E8A3C);
/*800E8A2C 000E582C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E8A30 000E5830*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x38);
/*800E8A34 000E5834*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800E8A38 000E5838*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8A3C, 0x800E8A3C) //this is a jump label
/*800E8A3C 000E583C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800E8A40 000E5840*/ PPC::Runtime::ASM::xor(context->r0, context->r24, context->r0);
/*800E8A44 000E5844*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800E8A48 000E5848*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r24);
/*800E8A4C 000E584C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800E8A50 000E5850  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800E8A54 000E5854*/ PPC::Runtime::ASM::beq(.L_800E8A84);
/*800E8A58 000E5858*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800E8A5C 000E585C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E8A60 000E5860*/ PPC::Runtime::ASM::beq(.L_800E8A6C);
/*800E8A64 000E5864*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E8A68 000E5868*/ PPC::Runtime::ASM::b(.L_800E8A70);
RUNTIME_PPC_JUMP_LABEL(.L_800E8A6C, 0x800E8A6C) //this is a jump label
/*800E8A6C 000E586C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E8A70, 0x800E8A70) //this is a jump label
/*800E8A70 000E5870*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r24);
/*800E8A74 000E5874*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800E8A78 000E5878*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800E8A7C 000E587C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800E8A80 000E5880*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800E8A84, 0x800E8A84) //this is a jump label
/*800E8A84 000E5884*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E8A88 000E5888*/ PPC::Runtime::ASM::bne(.L_800E8AAC);
/*800E8A8C 000E588C*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*800E8A90 000E5890*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x48);
/*800E8A94 000E5894*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800E8A98 000E5898*/ PPC::Runtime::ASM::bl(OSReport);
/*800E8A9C 000E589C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E8AA0 000E58A0*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x58);
/*800E8AA4 000E58A4*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800E8AA8 000E58A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8AAC, 0x800E8AAC) //this is a jump label
/*800E8AAC 000E58AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800E8AB0 000E58B0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800E8AB4 000E58B4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800E8AB8 000E58B8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800E8ABC 000E58BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800E8AC0 000E58C0*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800E8AC4 000E58C4*/ PPC::Runtime::ASM::lwzx(context->r4, context->r3, context->r25);
/*800E8AC8 000E58C8*/ PPC::Runtime::ASM::lwzx(context->r3, context->r31, context->r26);
/*800E8ACC 000E58CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*800E8AD0 000E58D0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800E8AD4 000E58D4*/ PPC::Runtime::ASM::lwzx(context->r4, context->r7, context->r0);
/*800E8AD8 000E58D8*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAddAnim);
/*800E8ADC 000E58DC*/ PPC::Runtime::ASM::lwzx(context->r3, context->r31, context->r26);
/*800E8AE0 000E58E0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800E8AE4 000E58E4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF758 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E8AE8 000E58E8*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnimByFlags);
/*800E8AEC 000E58EC*/ PPC::Runtime::ASM::lwzx(context->r3, context->r31, context->r26);
/*800E8AF0 000E58F0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF75C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E8AF4 000E58F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r3));
/*800E8AF8 000E58F8*/ PPC::Runtime::ASM::bl(fn_HSD_AObjSetRate);
/*800E8AFC 000E58FC*/ PPC::Runtime::ASM::lwzx(context->r3, context->r31, context->r26);
/*800E8B00 000E5900*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*800E8B04 000E5904*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800E8B08 000E5908*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*800E8B0C 000E590C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800E8B10 000E5910*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r26);
/*800E8B14 000E5914*/ PPC::Runtime::ASM::bne(.L_800E8B28);
/*800E8B18 000E5918*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E8B1C 000E591C*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x38);
/*800E8B20 000E5920*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800E8B24 000E5924*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8B28, 0x800E8B28) //this is a jump label
/*800E8B28 000E5928*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800E8B2C 000E592C*/ PPC::Runtime::ASM::xor(context->r0, context->r24, context->r0);
/*800E8B30 000E5930*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800E8B34 000E5934*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r24);
/*800E8B38 000E5938*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800E8B3C 000E593C  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800E8B40 000E5940*/ PPC::Runtime::ASM::beq(.L_800E8B70);
/*800E8B44 000E5944*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800E8B48 000E5948*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800E8B4C 000E594C*/ PPC::Runtime::ASM::beq(.L_800E8B58);
/*800E8B50 000E5950*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800E8B54 000E5954*/ PPC::Runtime::ASM::b(.L_800E8B5C);
RUNTIME_PPC_JUMP_LABEL(.L_800E8B58, 0x800E8B58) //this is a jump label
/*800E8B58 000E5958*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800E8B5C, 0x800E8B5C) //this is a jump label
/*800E8B5C 000E595C*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r24);
/*800E8B60 000E5960*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800E8B64 000E5964*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800E8B68 000E5968*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800E8B6C 000E596C*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800E8B70, 0x800E8B70) //this is a jump label
/*800E8B70 000E5970*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E8B74 000E5974*/ PPC::Runtime::ASM::bne(.L_800E8B98);
/*800E8B78 000E5978*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*800E8B7C 000E597C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x48);
/*800E8B80 000E5980*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800E8B84 000E5984*/ PPC::Runtime::ASM::bl(OSReport);
/*800E8B88 000E5988*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800E8B8C 000E598C*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x58);
/*800E8B90 000E5990*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800E8B94 000E5994*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8B98, 0x800E8B98) //this is a jump label
/*800E8B98 000E5998*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800E8B9C 000E599C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800E8BA0 000E59A0*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*800E8BA4 000E59A4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800E8BA8 000E59A8*/ PPC::Runtime::ASM::lwzx(context->r28, context->r5, context->r25);
/*800E8BAC 000E59AC*/ PPC::Runtime::ASM::bl(fn_800E9958);
/*800E8BB0 000E59B0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E8BB4 000E59B4*/ PPC::Runtime::ASM::beq(.L_800E8C88);
/*800E8BB8 000E59B8*/ PPC::Runtime::ASM::li(context->r3, 0x98);
/*800E8BBC 000E59BC*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800E8BC0 000E59C0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800E8BC4 000E59C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*800E8BC8 000E59C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r23));
/*800E8BCC 000E59CC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800E8BD0 000E59D0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800E8BD4 000E59D4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*800E8BD8 000E59D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800E8BDC 000E59DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800E8BE0 000E59E0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800E8BE4 000E59E4*/ PPC::Runtime::ASM::bne(.L_800E8BF8);
/*800E8BE8 000E59E8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6148 @ Get_MemoryOffset_SDA21);
/*800E8BEC 000E59EC*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*800E8BF0 000E59F0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6150 @ Get_MemoryOffset_SDA21);
/*800E8BF4 000E59F4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8BF8, 0x800E8BF8) //this is a jump label
/*800E8BF8 000E59F8*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800E8BFC 000E59FC*/ PPC::Runtime::ASM::beq(.L_800E8C40);
/*800E8C00 000E5A00*/ PPC::Runtime::ASM::bne(.L_800E8C14);
/*800E8C04 000E5A04*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6148 @ Get_MemoryOffset_SDA21);
/*800E8C08 000E5A08*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*800E8C0C 000E5A0C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6150 @ Get_MemoryOffset_SDA21);
/*800E8C10 000E5A10*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8C14, 0x800E8C14) //this is a jump label
/*800E8C14 000E5A14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800E8C18 000E5A18*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800E8C1C 000E5A1C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*800E8C20 000E5A20*/ PPC::Runtime::ASM::bne(.L_800E8C30);
/*800E8C24 000E5A24*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*800E8C28 000E5A28*/ PPC::Runtime::ASM::beq(.L_800E8C30);
/*800E8C2C 000E5A2C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8C30, 0x800E8C30) //this is a jump label
/*800E8C30 000E5A30*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E8C34 000E5A34*/ PPC::Runtime::ASM::beq(.L_800E8C40);
/*800E8C38 000E5A38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8C3C 000E5A3C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_800E8C40, 0x800E8C40) //this is a jump label
/*800E8C40 000E5A40*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x44);
/*800E8C44 000E5A44*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x4);
/*800E8C48 000E5A48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8C4C 000E5A4C*/ PPC::Runtime::ASM::bl(fn_PSMTXCopy);
/*800E8C50 000E5A50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E8C54 000E5A54*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x34);
/*800E8C58 000E5A58*/ PPC::Runtime::ASM::bl(fn_PSMTXCopy);
/*800E8C5C 000E5A5C*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x4);
/*800E8C60 000E5A60*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x64);
/*800E8C64 000E5A64*/ PPC::Runtime::ASM::bl(fn_PSMTXCopy);
/*800E8C68 000E5A68*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x64);
/*800E8C6C 000E5A6C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800E8C70 000E5A70*/ PPC::Runtime::ASM::bl(fn_804159A0);
/*800E8C74 000E5A74*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r28));
/*800E8C78 000E5A78*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800E8C7C 000E5A7C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*800E8C80 000E5A80*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r28));
/*800E8C84 000E5A84*/ PPC::Runtime::ASM::b(.L_800E8C90);
RUNTIME_PPC_JUMP_LABEL(.L_800E8C88, 0x800E8C88) //this is a jump label
/*800E8C88 000E5A88*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800E8C8C 000E5A8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800E8C90, 0x800E8C90) //this is a jump label
/*800E8C90 000E5A90*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x8);
/*800E8C94 000E5A94*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x4);
/*800E8C98 000E5A98*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8C9C, 0x800E8C9C) //this is a jump label
/*800E8C9C 000E5A9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800E8CA0 000E5AA0*/ PPC::Runtime::ASM::cmpw(context->r24, context->r0);
/*800E8CA4 000E5AA4*/ PPC::Runtime::ASM::blt(.L_800E89DC);
RUNTIME_PPC_JUMP_LABEL(.L_800E8CA8, 0x800E8CA8) //this is a jump label
/*800E8CA8 000E5AA8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800E8CAC 000E5AAC*/ PPC::Runtime::ASM::bl(_restgpr_23);
/*800E8CB0 000E5AB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800E8CB4 000E5AB4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E8CB8 000E5AB8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800E8CBC 000E5ABC*/ PPC::Runtime::ASM::blr();
}