//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800B55B0(PPC::Runtime::GCContext* context)
{
/*800B55B0 000B23B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B55B4 000B23B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B55B8 000B23B8*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B55BC 000B23BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B55C0 000B23C0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B55C4 000B23C4*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/*800B55C8 000B23C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B55CC 000B23CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B55D0 000B23D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B55D4 000B23D4*/ PPC::Runtime::ASM::blr();
}