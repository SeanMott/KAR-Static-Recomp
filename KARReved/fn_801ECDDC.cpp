//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CC2A4.hpp"
#include "fn_801CF340.hpp"
#include "fn_80064C18.hpp"



void fn_801ECDDC(PPC::Runtime::GCContext* context)
{
/*801ECDDC 001E9BDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801ECDE0 001E9BE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ECDE4 001E9BE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801ECDE8 001E9BE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801ECDEC 001E9BEC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801ECDF0 001E9BF0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801ECDF4 001E9BF4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801ECDF8 001E9BF8*/ PPC::Runtime::ASM::bl(fn_801CC2A4);
/*801ECDFC 001E9BFC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801ECE00 001E9C00*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801ECE04 001E9C04*/ PPC::Runtime::ASM::bl(fn_801CF340);
/*801ECE08 001E9C08*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x76c, context->r30));
/*801ECE0C 001E9C0C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ECE10 001E9C10*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x768, context->r30));
/*801ECE14 001E9C14*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*801ECE18 001E9C18*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801ECE1C 001E9C1C*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x770, context->r30));
/*801ECE20 001E9C20*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801ECE24 001E9C24*/ PPC::Runtime::ASM::fmadds(context->f1, context->f2, context->f1, context->f0);
/*801ECE28 001E9C28*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1E80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801ECE2C 001E9C2C*/ PPC::Runtime::ASM::fmadds(context->f1, context->f4, context->f3, context->f1);
/*801ECE30 001E9C30*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801ECE34 001E9C34*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*801ECE38 001E9C38*/ PPC::Runtime::ASM::bne(.L_801ECE54);
/*801ECE3C 001E9C3C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801ECE40 001E9C40*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*801ECE44 001E9C44*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801ECE48 001E9C48*/ PPC::Runtime::ASM::bl(fn_80064C18);
/*801ECE4C 001E9C4C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801ECE50 001E9C50*/ PPC::Runtime::ASM::b(.L_801ECE58);
RUNTIME_PPC_JUMP_LABEL(.L_801ECE54, 0x801ECE54) //this is a jump label
/*801ECE54 001E9C54*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801ECE58, 0x801ECE58) //this is a jump label
/*801ECE58 001E9C58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801ECE5C 001E9C5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801ECE60 001E9C60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801ECE64 001E9C64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ECE68 001E9C68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801ECE6C 001E9C6C*/ PPC::Runtime::ASM::blr();
}