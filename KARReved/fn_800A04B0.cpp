//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_8009F260.hpp"



void fn_800A04B0(PPC::Runtime::GCContext* context)
{
/*800A04B0 0009D2B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800A04B4 0009D2B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A04B8 0009D2B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A04BC 0009D2BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800A04C0 0009D2C0*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800A04C4 0009D2C4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x2);
/*800A04C8 0009D2C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800A04CC 0009D2CC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800A04D0 0009D2D0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A04D4 0009D2D4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800A04D8 0009D2D8*/ PPC::Runtime::ASM::bne(.L_800A057C);
/*800A04DC 0009D2DC*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*800A04E0 0009D2E0*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*800A04E4 0009D2E4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A04E8 0009D2E8*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A04EC 0009D2EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A04F0 0009D2F0*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*800A04F4 0009D2F4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800A04F8 0009D2F8*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A04FC 0009D2FC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A0500 0009D300*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A0504 0009D304*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*800A0508 0009D308*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800A050C 0009D30C*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*800A0510 0009D310*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A0514 0009D314*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*800A0518 0009D318*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800A051C 0009D31C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*800A0520 0009D320*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800A0524 0009D324*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*800A0528 0009D328*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*800A052C 0009D32C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800A0530 0009D330*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*800A0534 0009D334*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800A0538 0009D338*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A053C 0009D33C*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*800A0540 0009D340*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800A0544 0009D344*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800A0548 0009D348*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*800A054C 0009D34C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800A0550 0009D350*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A0554 0009D354*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*800A0558 0009D358*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A055C 0009D35C*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*800A0560 0009D360*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A0564 0009D364*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*800A0568 0009D368*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_21 @ Get_MemoryOffset_HighBit);
/*800A056C 0009D36C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800A0570 0009D370*/ PPC::Runtime::ASM::addi(context->r5, context->r4, StructWithFuncPtrs_21 @ Get_MemoryOffset_LowBit);
/*800A0574 0009D374*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800A0578 0009D378*/ PPC::Runtime::ASM::bl(fn_8009F260);
RUNTIME_PPC_JUMP_LABEL(.L_800A057C, 0x800A057C) //this is a jump label
/*800A057C 0009D37C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800A0580 0009D380*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800A0584 0009D384*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800A0588 0009D388*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800A058C 0009D38C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A0590 0009D390*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800A0594 0009D394*/ PPC::Runtime::ASM::blr();
}