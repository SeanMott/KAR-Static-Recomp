//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_CARDProbeEx.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_8045B848(PPC::Runtime::GCContext* context)
{
/*8045B848 00458648*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8045B84C 0045864C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045B850 00458650*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8045B854 00458654*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8045B858 00458658*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*8045B85C 0045865C*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*8045B860 00458660*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8045B864 00458664*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_HighBit);
/*8045B868 00458668*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*8045B86C 0045866C*/ PPC::Runtime::ASM::addi(context->r29, context->r4, STRUCT_BYTE4_COUNT_18059A880 @ Get_MemoryOffset_LowBit);
/*8045B870 00458670*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8045B874, 0x8045B874) //this is a jump label
/*8045B874 00458674*/ PPC::Runtime::ASM::addi(context->r31, context->r29, 0x608);
/*8045B878 00458678*/ PPC::Runtime::ASM::addi(context->r30, context->r29, 0x604);
/*8045B87C 0045867C*/ PPC::Runtime::ASM::li(context->r25, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8045B880, 0x8045B880) //this is a jump label
/*8045B880 00458680*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8045B884 00458684*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8045B888 00458688*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*8045B88C 0045868C*/ PPC::Runtime::ASM::bl(fn_CARDProbeEx);
/*8045B890 00458690*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8045B894 00458694*/ PPC::Runtime::ASM::beq(.L_8045B8A4);
/*8045B898 00458698*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
/*8045B89C 0045869C*/ PPC::Runtime::ASM::cmpwi(context->r25, 0xa);
/*8045B8A0 004586A0*/ PPC::Runtime::ASM::blt(.L_8045B880);
RUNTIME_PPC_JUMP_LABEL(.L_8045B8A4, 0x8045B8A4) //this is a jump label
/*8045B8A4 004586A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x600, context->r29));
/*8045B8A8 004586A8*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*8045B8AC 004586AC*/ PPC::Runtime::ASM::beq(.L_8045B984);
/*8045B8B0 004586B0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8045B8B4 004586B4*/ PPC::Runtime::ASM::bne(.L_8045B8C8);
/*8045B8B8 004586B8*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*8045B8BC 004586BC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8045B8C0 004586C0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8045B8C4 004586C4*/ PPC::Runtime::ASM::b(.L_8045B9A4);
RUNTIME_PPC_JUMP_LABEL(.L_8045B8C8, 0x8045B8C8) //this is a jump label
/*8045B8C8 004586C8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8045B8CC 004586CC*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x5);
/*8045B8D0 004586D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60c, context->r29));
/*8045B8D4 004586D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x610, context->r29));
/*8045B8D8 004586D8*/ PPC::Runtime::ASM::beq(.L_8045B960);
/*8045B8DC 004586DC*/ PPC::Runtime::ASM::bge(.L_8045B90C);
/*8045B8E0 004586E0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0xe);
/*8045B8E4 004586E4*/ PPC::Runtime::ASM::beq(.L_8045B978);
/*8045B8E8 004586E8*/ PPC::Runtime::ASM::bge(.L_8045B8F8);
/*8045B8EC 004586EC*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x80);
/*8045B8F0 004586F0*/ PPC::Runtime::ASM::beq(.L_8045B960);
/*8045B8F4 004586F4*/ PPC::Runtime::ASM::b(.L_8045B978);
RUNTIME_PPC_JUMP_LABEL(.L_8045B8F8, 0x8045B8F8) //this is a jump label
/*8045B8F8 004586F8*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x6);
/*8045B8FC 004586FC*/ PPC::Runtime::ASM::bge(.L_8045B970);
/*8045B900 00458700*/ PPC::Runtime::ASM::cmpwi(context->r3, -0xc);
/*8045B904 00458704*/ PPC::Runtime::ASM::bge(.L_8045B978);
/*8045B908 00458708*/ PPC::Runtime::ASM::b(.L_8045B968);
RUNTIME_PPC_JUMP_LABEL(.L_8045B90C, 0x8045B90C) //this is a jump label
/*8045B90C 0045870C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8045B910 00458710*/ PPC::Runtime::ASM::beq(.L_8045B938);
/*8045B914 00458714*/ PPC::Runtime::ASM::bge(.L_8045B928);
/*8045B918 00458718*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x3);
/*8045B91C 0045871C*/ PPC::Runtime::ASM::beq(.L_8045B940);
/*8045B920 00458720*/ PPC::Runtime::ASM::bge(.L_8045B948);
/*8045B924 00458724*/ PPC::Runtime::ASM::b(.L_8045B950);
RUNTIME_PPC_JUMP_LABEL(.L_8045B928, 0x8045B928) //this is a jump label
/*8045B928 00458728*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8045B92C 0045872C*/ PPC::Runtime::ASM::beq(.L_8045B978);
/*8045B930 00458730*/ PPC::Runtime::ASM::bge(.L_8045B978);
/*8045B934 00458734*/ PPC::Runtime::ASM::b(.L_8045B958);
RUNTIME_PPC_JUMP_LABEL(.L_8045B938, 0x8045B938) //this is a jump label
/*8045B938 00458738*/ PPC::Runtime::ASM::li(context->r0, 0xb);
/*8045B93C 0045873C*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B940, 0x8045B940) //this is a jump label
/*8045B940 00458740*/ PPC::Runtime::ASM::li(context->r0, 0xe);
/*8045B944 00458744*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B948, 0x8045B948) //this is a jump label
/*8045B948 00458748*/ PPC::Runtime::ASM::li(context->r0, 0xf);
/*8045B94C 0045874C*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B950, 0x8045B950) //this is a jump label
/*8045B950 00458750*/ PPC::Runtime::ASM::li(context->r0, 0x6);
/*8045B954 00458754*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B958, 0x8045B958) //this is a jump label
/*8045B958 00458758*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8045B95C 0045875C*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B960, 0x8045B960) //this is a jump label
/*8045B960 00458760*/ PPC::Runtime::ASM::li(context->r0, 0xd);
/*8045B964 00458764*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B968, 0x8045B968) //this is a jump label
/*8045B968 00458768*/ PPC::Runtime::ASM::li(context->r0, 0x9);
/*8045B96C 0045876C*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B970, 0x8045B970) //this is a jump label
/*8045B970 00458770*/ PPC::Runtime::ASM::li(context->r0, 0xa);
/*8045B974 00458774*/ PPC::Runtime::ASM::b(.L_8045B97C);
RUNTIME_PPC_JUMP_LABEL(.L_8045B978, 0x8045B978) //this is a jump label
/*8045B978 00458778*/ PPC::Runtime::ASM::li(context->r0, 0xc);
RUNTIME_PPC_JUMP_LABEL(.L_8045B97C, 0x8045B97C) //this is a jump label
/*8045B97C 0045877C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x614, context->r29));
/*8045B980 00458780*/ PPC::Runtime::ASM::li(context->r27, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8045B984, 0x8045B984) //this is a jump label
/*8045B984 00458784*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8045B988 00458788*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x600, context->r29));
/*8045B98C 0045878C*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x2);
/*8045B990 00458790*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1c);
/*8045B994 00458794*/ PPC::Runtime::ASM::blt(.L_8045B874);
/*8045B998 00458798*/ PPC::Runtime::ASM::mr(context->r3, context->r26);
/*8045B99C 0045879C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8045B9A0 004587A0*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
RUNTIME_PPC_JUMP_LABEL(.L_8045B9A4, 0x8045B9A4) //this is a jump label
/*8045B9A4 004587A4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8045B9A8 004587A8*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*8045B9AC 004587AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8045B9B0 004587B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045B9B4 004587B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8045B9B8 004587B8*/ PPC::Runtime::ASM::blr();
}