//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80062CA4.hpp"



void fn_801C7A0C(PPC::Runtime::GCContext* context)
{
/*801C7A0C 001C480C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C7A10 001C4810*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C7A14 001C4814*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C7A18 001C4818*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C7A1C 001C481C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C7A20 001C4820*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801C7A24 001C4824*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C7A28 001C4828*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x460, context->r3));
/*801C7A2C 001C482C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r3));
/*801C7A30 001C4830*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*801C7A34 001C4834*/ PPC::Runtime::ASM::lwzx(context->r31, context->r3, context->r0);
/*801C7A38 001C4838*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801C7A3C 001C483C*/ PPC::Runtime::ASM::bne(.L_801C7A50);
/*801C7A40 001C4840*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6FB8 @ Get_MemoryOffset_SDA21);
/*801C7A44 001C4844*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*801C7A48 001C4848*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6FC0 @ Get_MemoryOffset_SDA21);
/*801C7A4C 001C484C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801C7A50, 0x801C7A50) //this is a jump label
/*801C7A50 001C4850*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801C7A54 001C4854*/ PPC::Runtime::ASM::beq(.L_801C7A98);
/*801C7A58 001C4858*/ PPC::Runtime::ASM::bne(.L_801C7A6C);
/*801C7A5C 001C485C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6FB8 @ Get_MemoryOffset_SDA21);
/*801C7A60 001C4860*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801C7A64 001C4864*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6FC0 @ Get_MemoryOffset_SDA21);
/*801C7A68 001C4868*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801C7A6C, 0x801C7A6C) //this is a jump label
/*801C7A6C 001C486C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801C7A70 001C4870*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801C7A74 001C4874*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*801C7A78 001C4878*/ PPC::Runtime::ASM::bne(.L_801C7A88);
/*801C7A7C 001C487C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*801C7A80 001C4880*/ PPC::Runtime::ASM::beq(.L_801C7A88);
/*801C7A84 001C4884*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801C7A88, 0x801C7A88) //this is a jump label
/*801C7A88 001C4888*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C7A8C 001C488C*/ PPC::Runtime::ASM::beq(.L_801C7A98);
/*801C7A90 001C4890*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C7A94 001C4894*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_801C7A98, 0x801C7A98) //this is a jump label
/*801C7A98 001C4898*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*801C7A9C 001C489C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801C7AA0 001C48A0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801C7AA4 001C48A4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801C7AA8 001C48A8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r31));
/*801C7AAC 001C48AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801C7AB0 001C48B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r31));
/*801C7AB4 001C48B4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801C7AB8 001C48B8*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801C7ABC 001C48BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C7AC0 001C48C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C7AC4 001C48C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C7AC8 001C48C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C7ACC 001C48CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C7AD0 001C48D0*/ PPC::Runtime::ASM::blr();
}