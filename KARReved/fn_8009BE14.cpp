//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8009BE14(PPC::Runtime::GCContext* context)
{
/*8009BE14 00098C14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8009BE18 00098C18*/ PPC::Runtime::ASM::mflr(context->r0);
/*8009BE1C 00098C1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8009BE20 00098C20*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8009BE24 00098C24*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*8009BE28 00098C28*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*8009BE2C 00098C2C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8009BE30 00098C30*/ PPC::Runtime::ASM::mulli(context->r29, context->r27, 0xc);
/*8009BE34 00098C34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BE38 00098C38*/ PPC::Runtime::ASM::slwi(context->r28, context->r5, 2);
/*8009BE3C 00098C3C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r3, context->r28);
/*8009BE40 00098C40*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*8009BE44 00098C44*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r29);
/*8009BE48 00098C48*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/* 8009BE4C 00098C4C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8009BE50 00098C50*/ PPC::Runtime::ASM::beq(.L_8009BE9C);
/*8009BE54 00098C54*/ PPC::Runtime::ASM::bne(.L_8009BE70);
/*8009BE58 00098C58*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_632 @ Get_MemoryOffset_HighBit);
/*8009BE5C 00098C5C*/ PPC::Runtime::ASM::lis(context->r5, StructWithFuncPtrs_17 @ Get_MemoryOffset_HighBit);
/*8009BE60 00098C60*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_632 @ Get_MemoryOffset_LowBit);
/*8009BE64 00098C64*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*8009BE68 00098C68*/ PPC::Runtime::ASM::addi(context->r5, context->r5, StructWithFuncPtrs_17 @ Get_MemoryOffset_LowBit);
/*8009BE6C 00098C6C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8009BE70, 0x8009BE70) //this is a jump label
/*8009BE70 00098C70*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8009BE74 00098C74*/ PPC::Runtime::ASM::slwi(context->r3, context->r27, 3);
/*8009BE78 00098C78*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xc);
/*8009BE7C 00098C7C*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r28);
/*8009BE80 00098C80*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1c);
/*8009BE84 00098C84*/ PPC::Runtime::ASM::lwzx(context->r3, context->r30, context->r5);
/*8009BE88 00098C88*/ PPC::Runtime::ASM::lhzx(context->r0, context->r4, context->r0);
/*8009BE8C 00098C8C*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r31);
/*8009BE90 00098C90*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 1);
/*8009BE94 00098C94*/ PPC::Runtime::ASM::lhzx(context->r3, context->r3, context->r0);
/*8009BE98 00098C98*/ PPC::Runtime::ASM::b(.L_8009BF18);
RUNTIME_PPC_JUMP_LABEL(.L_8009BE9C, 0x8009BE9C) //this is a jump label
/*8009BE9C 00098C9C*/ PPC::Runtime::ASM::slwi(context->r3, context->r27, 3);
/*8009BEA0 00098CA0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*8009BEA4 00098CA4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1c);
/*8009BEA8 00098CA8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8009BEAC 00098CAC*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r0);
/*8009BEB0 00098CB0*/ PPC::Runtime::ASM::ble(.L_8009BF14);
/*8009BEB4 00098CB4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x8);
/*8009BEB8 00098CB8*/ PPC::Runtime::ASM::subi(context->r3, context->r31, 0x8);
/*8009BEBC 00098CBC*/ PPC::Runtime::ASM::ble(.L_8009BEFC);
/*8009BEC0 00098CC0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x7);
/*8009BEC4 00098CC4*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 3);
/*8009BEC8 00098CC8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*8009BECC 00098CCC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8009BED0 00098CD0*/ PPC::Runtime::ASM::ble(.L_8009BEFC);
RUNTIME_PPC_JUMP_LABEL(.L_8009BED4, 0x8009BED4) //this is a jump label
/*8009BED4 00098CD4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8009BED8 00098CD8*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x8);
/*8009BEDC 00098CDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEE0 00098CE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEE4 00098CE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEE8 00098CE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEEC 00098CEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEF0 00098CF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEF4 00098CF4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8009BEF8 00098CF8*/ PPC::Runtime::ASM::bdnz(.L_8009BED4);
RUNTIME_PPC_JUMP_LABEL(.L_8009BEFC, 0x8009BEFC) //this is a jump label
/*8009BEFC 00098CFC*/ PPC::Runtime::ASM::subf(context->r0, context->r5, context->r31);
/*8009BF00 00098D00*/ PPC::Runtime::ASM::mtctr(context->r0);
/*8009BF04 00098D04*/ PPC::Runtime::ASM::cmpw(context->r5, context->r31);
/*8009BF08 00098D08*/ PPC::Runtime::ASM::bge(.L_8009BF14);
RUNTIME_PPC_JUMP_LABEL(.L_8009BF0C, 0x8009BF0C) //this is a jump label
/*8009BF0C 00098D0C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8009BF10 00098D10*/ PPC::Runtime::ASM::bdnz(.L_8009BF0C);
RUNTIME_PPC_JUMP_LABEL(.L_8009BF14, 0x8009BF14) //this is a jump label
/*8009BF14 00098D14*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8009BF18, 0x8009BF18) //this is a jump label
/*8009BF18 00098D18*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8009BF1C 00098D1C*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8009BF20 00098D20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8009BF24 00098D24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8009BF28 00098D28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8009BF2C 00098D2C*/ PPC::Runtime::ASM::blr();
}