//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80288BD0(PPC::Runtime::GCContext* context)
{
/*80288BD0 002859D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80288BD4 002859D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80288BD8 002859D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80288BDC 002859DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80288BE0 002859E0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80288BE4 002859E4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80288BE8 002859E8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80288BEC 002859EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80288BF0 002859F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80288BF4 002859F4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*80288BF8 002859F8*/ PPC::Runtime::ASM::add(context->r30, context->r31, context->r0);
/*80288BFC 002859FC*/ PPC::Runtime::ASM::b(.L_80288C1C);
RUNTIME_PPC_JUMP_LABEL(.L_80288C00, 0x80288C00) //this is a jump label
/*80288C00 00285A00*/ PPC::Runtime::ASM::subi(context->r30, context->r30, 0x8);
/*80288C04 00285A04*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80288C08 00285A08*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80288C0C 00285A0C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80288C10 00285A10*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*80288C14 00285A14*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80288C18 00285A18*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_80288C1C, 0x80288C1C) //this is a jump label
/*80288C1C 00285A1C*/ PPC::Runtime::ASM::cmplw(context->r30, context->r31);
/*80288C20 00285A20*/ PPC::Runtime::ASM::bgt(.L_80288C00);
/*80288C24 00285A24*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80288C28 00285A28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80288C2C 00285A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80288C30 00285A30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80288C34 00285A34*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80288C38 00285A38*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80288C3C 00285A3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80288C40 00285A40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80288C44 00285A44*/ PPC::Runtime::ASM::blr();
}