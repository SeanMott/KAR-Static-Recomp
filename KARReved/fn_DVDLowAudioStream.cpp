//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSCreateAlarm.hpp"
#include "AlarmHandlerForTimeout.hpp"
#include "AlarmHandlerForTimeout.hpp"
#include "OSSetAlarm.hpp"



void fn_DVDLowAudioStream(PPC::Runtime::GCContext* context)
{
/*803C4BB0 003C19B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C4BB4 003C19B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C4BB8 003C19B8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C4BBC 003C19BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803C4BC0 003C19C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C4BC4 003C19C4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C4BC8 003C19C8*/ PPC::Runtime::ASM::stw(context->r6, Callback_805DDD48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C4BCC 003C19CC*/ PPC::Runtime::ASM::lis(context->r6, 0xcc00);
/*803C4BD0 003C19D0*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x6000);
/*803C4BD4 003C19D4*/ PPC::Runtime::ASM::stw(context->r0, StopAtNextInt_805DDD40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C4BD8 003C19D8*/ PPC::Runtime::ASM::oris(context->r0, context->r3, 0xe100);
/*803C4BDC 003C19DC*/ PPC::Runtime::ASM::lis(context->r3, AlarmForTimeout_8056CBA8 @ Get_MemoryOffset_HighBit);
/*803C4BE0 003C19E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r6));
/*803C4BE4 003C19E4*/ PPC::Runtime::ASM::srwi(context->r0, context->r5, 2);
/*803C4BE8 003C19E8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, AlarmForTimeout_8056CBA8 @ Get_MemoryOffset_LowBit);
/*803C4BEC 003C19EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r6));
/*803C4BF0 003C19F0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803C4BF4 003C19F4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803C4BF8 003C19F8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r6));
/*803C4BFC 003C19FC*/ PPC::Runtime::ASM::lis(context->r4, 0x8000);
/*803C4C00 003C1A00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r6));
/*803C4C04 003C1A04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r4));
/*803C4C08 003C1A08*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 2);
/*803C4C0C 003C1A0C*/ PPC::Runtime::ASM::mulli(context->r30, context->r0, 0xa);
/*803C4C10 003C1A10*/ PPC::Runtime::ASM::bl(OSCreateAlarm);
/*803C4C14 003C1A14*/ PPC::Runtime::ASM::lis(context->r3, AlarmHandlerForTimeout @ Get_MemoryOffset_HighBit);
/*803C4C18 003C1A18*/ PPC::Runtime::ASM::addi(context->r7, context->r3, AlarmHandlerForTimeout @ Get_MemoryOffset_LowBit);
/*803C4C1C 003C1A1C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803C4C20 003C1A20*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x0);
/*803C4C24 003C1A24*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803C4C28 003C1A28*/ PPC::Runtime::ASM::bl(OSSetAlarm);
/*803C4C2C 003C1A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803C4C30 003C1A30*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C4C34 003C1A34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C4C38 003C1A38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803C4C3C 003C1A3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803C4C40 003C1A40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C4C44 003C1A44*/ PPC::Runtime::ASM::blr();
}