//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802975C0.hpp"



void fn_8028E940(PPC::Runtime::GCContext* context)
{
/*8028E940 0028B740*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8028E944 0028B744*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028E948 0028B748*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028E94C 0028B74C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028E950 0028B750*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8028E954 0028B754*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 8028E958 0028B758  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028E95C 0028B75C*/ PPC::Runtime::ASM::beq(.L_8028EA04);
/*8028E960 0028B760*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E964 0028B764*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E968 0028B768*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E96C 0028B76C*/ PPC::Runtime::ASM::addi(context->r7, context->r30, 0xc);
/*8028E970 0028B770*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8028E974 0028B774*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8028E978 0028B778*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8028E97C 0028B77C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0xc);
/*8028E980 0028B780*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x10);
/*8028E984 0028B784*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*8028E988 0028B788*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028E98C 0028B78C*/ PPC::Runtime::ASM::bl(fn_802975C0);
/*8028E990 0028B790*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028E994 0028B794*/ PPC::Runtime::ASM::beq(.L_8028E9C8);
/*8028E998 0028B798*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028E99C 0028B79C*/ PPC::Runtime::ASM::beq(.L_8028E9C8);
/*8028E9A0 0028B7A0*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028E9A4 0028B7A4*/ PPC::Runtime::ASM::beq(.L_8028E9C8);
/*8028E9A8 0028B7A8*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028E9AC 0028B7AC*/ PPC::Runtime::ASM::beq(.L_8028E9C8);
/*8028E9B0 0028B7B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8028E9B4 0028B7B4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028E9B8 0028B7B8*/ PPC::Runtime::ASM::beq(.L_8028E9C8);
/*8028E9BC 0028B7BC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028E9C0 0028B7C0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD97C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028E9C4 0028B7C4*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028E9C8, 0x8028E9C8) //this is a jump label
/*8028E9C8 0028B7C8*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8028E9CC 0028B7CC*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E9D0 0028B7D0*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E9D4 0028B7D4*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E9D8 0028B7D8*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E9DC 0028B7DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028E9E0 0028B7E0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028E9E4 0028B7E4*/ PPC::Runtime::ASM::beq(.L_8028E9F4);
/*8028E9E8 0028B7E8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028E9EC 0028B7EC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD980 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028E9F0 0028B7F0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028E9F4, 0x8028E9F4) //this is a jump label
/*8028E9F4 0028B7F4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8028E9F8 0028B7F8*/ PPC::Runtime::ASM::ble(.L_8028EA04);
/*8028E9FC 0028B7FC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028EA00 0028B800*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028EA04, 0x8028EA04) //this is a jump label
/*8028EA04 0028B804*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028EA08 0028B808*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028EA0C 0028B80C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8028EA10 0028B810*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8028EA14 0028B814*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028EA18 0028B818*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8028EA1C 0028B81C*/ PPC::Runtime::ASM::blr();
}