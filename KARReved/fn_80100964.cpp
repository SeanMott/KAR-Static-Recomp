//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"



void fn_80100964(PPC::Runtime::GCContext* context)
{
/*80100964 000FD764*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80100968 000FD768*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010096C 000FD76C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80100970 000FD770*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80100974 000FD774*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80100978 000FD778*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010097C 000FD77C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80100980 000FD780*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80100984 000FD784*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80100988 000FD788*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*8010098C 000FD78C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/* 80100990 000FD790  54 60 DF FF */ extrwi. context->r0 , context->r3 , 1 , 26
/*80100994 000FD794*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80100998 000FD798*/ PPC::Runtime::ASM::beq(.L_80100A28);
/*8010099C 000FD79C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801009A0 000FD7A0*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 5, 26, 26);
/*801009A4 000FD7A4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*801009A8 000FD7A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*801009AC 000FD7AC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r30));
/*801009B0 000FD7B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*801009B4 000FD7B4*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801009B8 000FD7B8*/ PPC::Runtime::ASM::fsubs(context->f31, context->f1, context->f0);
/*801009BC 000FD7BC*/ PPC::Runtime::ASM::bne(.L_801009D0);
/*801009C0 000FD7C0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D62A0 @ Get_MemoryOffset_SDA21);
/*801009C4 000FD7C4*/ PPC::Runtime::ASM::li(context->r4, 0x3c6);
/*801009C8 000FD7C8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D62A8 @ Get_MemoryOffset_SDA21);
/*801009CC 000FD7CC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801009D0, 0x801009D0) //this is a jump label
/*801009D0 000FD7D0*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*801009D4 000FD7D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801009D8 000FD7D8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*801009DC 000FD7DC*/ PPC::Runtime::ASM::bne(.L_80100A28);
/*801009E0 000FD7E0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801009E4 000FD7E4*/ PPC::Runtime::ASM::beq(.L_80100A28);
/*801009E8 000FD7E8*/ PPC::Runtime::ASM::bne(.L_801009FC);
/*801009EC 000FD7EC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D62A0 @ Get_MemoryOffset_SDA21);
/*801009F0 000FD7F0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801009F4 000FD7F4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D62A8 @ Get_MemoryOffset_SDA21);
/*801009F8 000FD7F8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801009FC, 0x801009FC) //this is a jump label
/*801009FC 000FD7FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80100A00 000FD800*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80100A04 000FD804*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80100A08 000FD808*/ PPC::Runtime::ASM::bne(.L_80100A18);
/*80100A0C 000FD80C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80100A10 000FD810*/ PPC::Runtime::ASM::beq(.L_80100A18);
/*80100A14 000FD814*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80100A18, 0x80100A18) //this is a jump label
/*80100A18 000FD818*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80100A1C 000FD81C*/ PPC::Runtime::ASM::bne(.L_80100A28);
/*80100A20 000FD820*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80100A24 000FD824*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80100A28, 0x80100A28) //this is a jump label
/*80100A28 000FD828*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*80100A2C 000FD82C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80100A30 000FD830*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF948 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80100A34 000FD834*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*80100A38 000FD838*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*80100A3C 000FD83C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80100A40 000FD840*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
/*80100A44 000FD844*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80100A48 000FD848*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80100A4C 000FD84C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80100A50 000FD850*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*80100A54 000FD854*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80100A58 000FD858*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*80100A5C 000FD85C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80100A60 000FD860*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80100A64 000FD864*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80100A68 000FD868*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80100A6C 000FD86C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80100A70 000FD870*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80100A74 000FD874*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80100A78 000FD878*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80100A7C 000FD87C*/ PPC::Runtime::ASM::blr();
}