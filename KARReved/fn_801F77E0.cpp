//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801F3600.hpp"



void fn_801F77E0(PPC::Runtime::GCContext* context)
{
/*801F77E0 001F45E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801F77E4 001F45E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F77E8 001F45E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F77EC 001F45EC*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801F77F0 001F45F0*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*801F77F4 001F45F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F77F8 001F45F8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801F77FC 001F45FC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801F7800 001F4600*/ PPC::Runtime::ASM::bl(fn_801F3600);
/*801F7804 001F4604*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F7808 001F4608*/ PPC::Runtime::ASM::beq(.L_801F78D8);
/*801F780C 001F460C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r30));
/*801F7810 001F4610*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*801F7814 001F4614*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801F7818 001F4618*/ PPC::Runtime::ASM::bne(.L_801F782C);
/*801F781C 001F461C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70C0 @ Get_MemoryOffset_SDA21);
/*801F7820 001F4620*/ PPC::Runtime::ASM::li(context->r4, 0x2ec);
/*801F7824 001F4624*/ PPC::Runtime::ASM::li(context->r5, lbl_805D70C8 @ Get_MemoryOffset_SDA21);
/*801F7828 001F4628*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F782C, 0x801F782C) //this is a jump label
/*801F782C 001F462C*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E20B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7830 001F4630*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801F7834 001F4634*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc44, context->r30));
/*801F7838 001F4638*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*801F783C 001F463C*/ PPC::Runtime::ASM::fmul(context->f0, context->f1, context->f0);
/*801F7840 001F4640*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E20D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7844 001F4644*/ PPC::Runtime::ASM::fmadd(context->f31, context->f1, context->f0, context->f31);
/*801F7848 001F4648*/ PPC::Runtime::ASM::frsp(context->f31, context->f31);
/*801F784C 001F464C*/ PPC::Runtime::ASM::bne(.L_801F7860);
/*801F7850 001F4650*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70C0 @ Get_MemoryOffset_SDA21);
/*801F7854 001F4654*/ PPC::Runtime::ASM::li(context->r4, 0x2a4);
/*801F7858 001F4658*/ PPC::Runtime::ASM::li(context->r5, lbl_805D70C8 @ Get_MemoryOffset_SDA21);
/*801F785C 001F465C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F7860, 0x801F7860) //this is a jump label
/*801F7860 001F4660*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801F7864 001F4664*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 14, 14);
/*801F7868 001F4668*/ PPC::Runtime::ASM::beq(.L_801F7880);
/*801F786C 001F466C*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1 @ Get_MemoryOffset_HighBit);
/*801F7870 001F4670*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70C0 @ Get_MemoryOffset_SDA21);
/*801F7874 001F4674*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1 @ Get_MemoryOffset_LowBit);
/*801F7878 001F4678*/ PPC::Runtime::ASM::li(context->r4, 0x2a5);
/*801F787C 001F467C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F7880, 0x801F7880) //this is a jump label
/*801F7880 001F4680*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*801F7884 001F4684*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801F7888 001F4688*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*801F788C 001F468C*/ PPC::Runtime::ASM::bne(.L_801F78D8);
/*801F7890 001F4690*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801F7894 001F4694*/ PPC::Runtime::ASM::beq(.L_801F78D8);
/*801F7898 001F4698*/ PPC::Runtime::ASM::bne(.L_801F78AC);
/*801F789C 001F469C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D70C0 @ Get_MemoryOffset_SDA21);
/*801F78A0 001F46A0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801F78A4 001F46A4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D70C8 @ Get_MemoryOffset_SDA21);
/*801F78A8 001F46A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F78AC, 0x801F78AC) //this is a jump label
/*801F78AC 001F46AC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801F78B0 001F46B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801F78B4 001F46B4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*801F78B8 001F46B8*/ PPC::Runtime::ASM::bne(.L_801F78C8);
/*801F78BC 001F46BC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*801F78C0 001F46C0*/ PPC::Runtime::ASM::beq(.L_801F78C8);
/*801F78C4 001F46C4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801F78C8, 0x801F78C8) //this is a jump label
/*801F78C8 001F46C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F78CC 001F46CC*/ PPC::Runtime::ASM::bne(.L_801F78D8);
/*801F78D0 001F46D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F78D4 001F46D4*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_801F78D8, 0x801F78D8) //this is a jump label
/*801F78D8 001F46D8*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*801F78DC 001F46DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F78E0 001F46E0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801F78E4 001F46E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F78E8 001F46E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801F78EC 001F46EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F78F0 001F46F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801F78F4 001F46F4*/ PPC::Runtime::ASM::blr();
}