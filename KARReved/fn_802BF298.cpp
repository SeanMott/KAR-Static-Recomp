//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80285130.hpp"



void fn_802BF298(PPC::Runtime::GCContext* context)
{
/*802BF298 002BC098*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802BF29C 002BC09C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802BF2A0 002BC0A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802BF2A4 002BC0A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802BF2A8 002BC0A8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802BF2AC 002BC0AC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802BF2B0 002BC0B0*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*802BF2B4 002BC0B4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/* 802BF2B8 002BC0B8  7C 7C 1B 79 */ mr. context->r28 , context->r3
/*802BF2BC 002BC0BC*/ PPC::Runtime::ASM::beq(.L_802BF33C);
/*802BF2C0 002BC0C0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804CB09C @ Get_MemoryOffset_HighBit);
/*802BF2C4 002BC0C4*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*802BF2C8 002BC0C8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_804CB09C @ Get_MemoryOffset_LowBit);
/*802BF2CC 002BC0CC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*802BF2D0 002BC0D0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*802BF2D4 002BC0D4*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x10);
/*802BF2D8 002BC0D8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x58);
/*802BF2DC 002BC0DC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*802BF2E0 002BC0E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_802BF2E4, 0x802BF2E4) //this is a jump label
/*802BF2E4 002BC0E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac, context->r28));
/*802BF2E8 002BC0E8*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r31);
/*802BF2EC 002BC0EC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*802BF2F0 002BC0F0*/ PPC::Runtime::ASM::beq(.L_802BF308);
/*802BF2F4 002BC0F4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802BF2F8 002BC0F8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*802BF2FC 002BC0FC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*802BF300 002BC100*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802BF304 002BC104*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_802BF308, 0x802BF308) //this is a jump label
/*802BF308 002BC108*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*802BF30C 002BC10C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*802BF310 002BC110*/ PPC::Runtime::ASM::cmplwi(context->r30, 0xc);
/*802BF314 002BC114*/ PPC::Runtime::ASM::blt(.L_802BF2E4);
/*802BF318 002BC118*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac, context->r28));
/*802BF31C 002BC11C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
/*802BF320 002BC120*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*802BF324 002BC124*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802BF328 002BC128*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802BF32C 002BC12C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r29);
/*802BF330 002BC130*/ PPC::Runtime::ASM::ble(.L_802BF33C);
/*802BF334 002BC134*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*802BF338 002BC138*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802BF33C, 0x802BF33C) //this is a jump label
/*802BF33C 002BC13C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802BF340 002BC140*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*802BF344 002BC144*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802BF348 002BC148*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802BF34C 002BC14C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802BF350 002BC150*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*802BF354 002BC154*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802BF358 002BC158*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802BF35C 002BC15C*/ PPC::Runtime::ASM::blr();
}