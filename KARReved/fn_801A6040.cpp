//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801A6040(PPC::Runtime::GCContext* context)
{
/*801A6040 001A2E40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A6044 001A2E44*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A6048 001A2E48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A604C 001A2E4C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x938, context->r3));
/*801A6050 001A2E50*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801A6054 001A2E54*/ PPC::Runtime::ASM::beq(.L_801A6060);
/*801A6058 001A2E58*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801A605C 001A2E5C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801A6060, 0x801A6060) //this is a jump label
/*801A6060 001A2E60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A6064 001A2E64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A6068 001A2E68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A606C 001A2E6C*/ PPC::Runtime::ASM::blr();
}