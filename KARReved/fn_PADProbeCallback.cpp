//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_SIGetResponse.hpp"
#include "fn_SISetCommand.hpp"
#include "fn_SIEnablePolling.hpp"
#include "memset.hpp"
#include "fn_PADTypeAndStatusCallback.hpp"
#include "fn_PADTypeAndStatusCallback.hpp"
#include "fn_SIGetTypeAsync.hpp"



void fn_PADProbeCallback(PPC::Runtime::GCContext* context)
{
/*803DBF94 003D8D94*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DBF98 003D8D98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/* 803DBF9C 003D8D9C  54 80 07 3F */ clrlwi. context->r0 , context->r4 , 28
/*803DBFA0 003D8DA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803DBFA4 003D8DA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803DBFA8 003D8DA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803DBFAC 003D8DAC*/ PPC::Runtime::ASM::bne(.L_803DC000);
/*803DBFB0 003D8DB0*/ PPC::Runtime::ASM::lwz(context->r30, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFB4 003D8DB4*/ PPC::Runtime::ASM::lis(context->r31, 0x8000);
/*803DBFB8 003D8DB8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDF44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFBC 003D8DBC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x1c);
/*803DBFC0 003D8DC0*/ PPC::Runtime::ASM::srw(context->r0, context->r31, context->r30);
/*803DBFC4 003D8DC4*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803DBFC8 003D8DC8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFCC 003D8DCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803DBFD0 003D8DD0*/ PPC::Runtime::ASM::bl(fn_SIGetResponse);
/*803DBFD4 003D8DD4*/ PPC::Runtime::ASM::lwz(context->r0, StructValues_31 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFD8 003D8DD8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803DBFDC 003D8DDC*/ PPC::Runtime::ASM::oris(context->r4, context->r0, 0x40);
/*803DBFE0 003D8DE0*/ PPC::Runtime::ASM::bl(fn_SISetCommand);
/*803DBFE4 003D8DE4*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDF44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFE8 003D8DE8*/ PPC::Runtime::ASM::bl(fn_SIEnablePolling);
/*803DBFEC 003D8DEC*/ PPC::Runtime::ASM::lwz(context->r0, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFF0 003D8DF0*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDF50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DBFF4 003D8DF4*/ PPC::Runtime::ASM::srw(context->r0, context->r31, context->r0);
/*803DBFF8 003D8DF8*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803DBFFC 003D8DFC*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803DC000, 0x803DC000) //this is a jump label
/*803DC000 003D8E00*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DDF48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DC004 003D8E04*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r5);
/*803DC008 003D8E08*/ PPC::Runtime::ASM::stw(context->r0, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DC00C 003D8E0C*/ PPC::Runtime::ASM::lwz(context->r4, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DC010 003D8E10*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x20);
/*803DC014 003D8E14*/ PPC::Runtime::ASM::beq(.L_803DC054);
/*803DC018 003D8E18*/ PPC::Runtime::ASM::lis(context->r0, 0x8000);
/*803DC01C 003D8E1C*/ PPC::Runtime::ASM::srw(context->r0, context->r0, context->r4);
/*803DC020 003D8E20*/ PPC::Runtime::ASM::andc(context->r0, context->r5, context->r0);
/*803DC024 003D8E24*/ PPC::Runtime::ASM::mulli(context->r4, context->r4, 0xc);
/*803DC028 003D8E28*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DC02C 003D8E2C*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056E360 @ Get_MemoryOffset_HighBit);
/*803DC030 003D8E30*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_8056E360 @ Get_MemoryOffset_LowBit);
/*803DC034 003D8E34*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*803DC038 003D8E38*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803DC03C 003D8E3C*/ PPC::Runtime::ASM::li(context->r5, 0xc);
/*803DC040 003D8E40*/ PPC::Runtime::ASM::bl(memset);
/*803DC044 003D8E44*/ PPC::Runtime::ASM::lis(context->r4, fn_PADTypeAndStatusCallback @ Get_MemoryOffset_HighBit);
/*803DC048 003D8E48*/ PPC::Runtime::ASM::lwz(context->r3, StructValues_33 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DC04C 003D8E4C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_PADTypeAndStatusCallback @ Get_MemoryOffset_LowBit);
/*803DC050 003D8E50*/ PPC::Runtime::ASM::bl(fn_SIGetTypeAsync);
RUNTIME_PPC_JUMP_LABEL(.L_803DC054, 0x803DC054) //this is a jump label
/*803DC054 003D8E54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803DC058 003D8E58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803DC05C 003D8E5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803DC060 003D8E60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803DC064 003D8E64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DC068 003D8E68*/ PPC::Runtime::ASM::blr();
}