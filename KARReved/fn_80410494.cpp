//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8042122C.hpp"
#include "fn_HSD_ObjInit.hpp"
#include "fn_UnreserveEXI2Port.hpp"
#include "fn_UnreserveEXI2Port2.hpp"



void fn_80410494(PPC::Runtime::GCContext* context)
{
/*80410494 0040D294*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80410498 0040D298*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041049C 0040D29C*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_HSD_1 @ Get_MemoryOffset_HighBit);
/*804104A0 0040D2A0*/ PPC::Runtime::ASM::lis(context->r3, String_ "sysdolphin_base_librar" 2 @ Get_MemoryOffset_HighBit);
/*804104A4 0040D2A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*804104A8 0040D2A8*/ PPC::Runtime::ASM::addi(context->r10, context->r4, StructWithFuncPtrs_HSD_1 @ Get_MemoryOffset_LowBit);
/*804104AC 0040D2AC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "sysdolphin_base_librar" 2 @ Get_MemoryOffset_LowBit);
/*804104B0 0040D2B0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*804104B4 0040D2B4*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r10));
/*804104B8 0040D2B8*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r10));
/*804104BC 0040D2BC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r10));
/*804104C0 0040D2C0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r10));
/*804104C4 0040D2C4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r10));
/*804104C8 0040D2C8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r10));
/*804104CC 0040D2CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r10));
/*804104D0 0040D2D0*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*804104D4 0040D2D4*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804104D8 0040D2D8*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*804104DC 0040D2DC*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804104E0 0040D2E0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*804104E4 0040D2E4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*804104E8 0040D2E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*804104EC 0040D2EC*/ PPC::Runtime::ASM::bl(fn_8042122C);
/*804104F0 0040D2F0*/ PPC::Runtime::ASM::addi(context->r31, context->r1, 0x8);
/*804104F4 0040D2F4*/ PPC::Runtime::ASM::b(.L_80410504);
RUNTIME_PPC_JUMP_LABEL(.L_804104F8, 0x804104F8) //this is a jump label
/*804104F8 0040D2F8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*804104FC 0040D2FC*/ PPC::Runtime::ASM::bctrl();
/*80410500 0040D300*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_80410504, 0x80410504) //this is a jump label
/*80410504 0040D304*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80410508 0040D308*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*8041050C 0040D30C*/ PPC::Runtime::ASM::bne(.L_804104F8);
/*80410510 0040D310*/ PPC::Runtime::ASM::bl(fn_HSD_ObjInit);
/*80410514 0040D314*/ PPC::Runtime::ASM::bl(fn_UnreserveEXI2Port);
/*80410518 0040D318*/ PPC::Runtime::ASM::bl(fn_UnreserveEXI2Port2);
/*8041051C 0040D31C*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180589A54 @ Get_MemoryOffset_HighBit);
/*80410520 0040D320*/ PPC::Runtime::ASM::addi(context->r4, context->r4, STRUCT_BYTE4_COUNT_180589A54 @ Get_MemoryOffset_LowBit);
/*80410524 0040D324*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*80410528 0040D328*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8041052C 0040D32C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80410530 0040D330*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80410534 0040D334*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80410538 0040D338*/ PPC::Runtime::ASM::blr();
}