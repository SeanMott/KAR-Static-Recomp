//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025DC08(PPC::Runtime::GCContext* context)
{
/*8025DC08 0025AA08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025DC0C 0025AA0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025DC10 0025AA10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025DC14 0025AA14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025DC18 0025AA18*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025DC1C 0025AA1C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025DC20 0025AA20*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025DC24 0025AA24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025DC28 0025AA28*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025DC2C 0025AA2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025DC30 0025AA30*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025DC34 0025AA34*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025DC38 0025AA38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025DC3C 0025AA3C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025DC40 0025AA40*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025DC44 0025AA44*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025DC48 0025AA48*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025DC4C 0025AA4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025DC50 0025AA50*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025DC54 0025AA54*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025DC58 0025AA58*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025DC5C 0025AA5C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025DC60 0025AA60*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025DC64 0025AA64*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EFC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025DC68 0025AA68*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025DC6C 0025AA6C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025DC70 0025AA70*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EF8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025DC74 0025AA74*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025DC78 0025AA78*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025DC7C 0025AA7C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025DC80 0025AA80*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025DC84 0025AA84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025DC88 0025AA88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025DC8C 0025AA8C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025DC90 0025AA90*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025DC94 0025AA94*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025DC98 0025AA98*/ PPC::Runtime::ASM::blr();
}