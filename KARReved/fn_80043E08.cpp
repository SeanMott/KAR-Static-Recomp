//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80043E08(PPC::Runtime::GCContext* context)
{
/*80043E08 00040C08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80043E0C 00040C0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80043E10 00040C10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80043E14 00040C14*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80043E18 00040C18*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80043E1C 00040C1C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d4, context->r3));
/*80043E20 00040C20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80043E24 00040C24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80043E28 00040C28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80043E2C 00040C2C*/ PPC::Runtime::ASM::blr();
}