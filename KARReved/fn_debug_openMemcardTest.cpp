//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_debug_common?.hpp"
#include "fn_debug_common?.hpp"
#include "fn_800ABA74.hpp"



void fn_debug_openMemcardTest(PPC::Runtime::GCContext* context)
{
/*800ADC58 000AAA58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADC5C 000AAA5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADC60 000AAA60*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADC64 000AAA64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADC68 000AAA68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADC6C 000AAA6C*/ PPC::Runtime::ASM::bne(.L_800ADCA4);
/*800ADC70 000AAA70*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADC74 000AAA74*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADC78 000AAA78*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADC7C 000AAA7C*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_36 @ Get_MemoryOffset_HighBit);
/*800ADC80 000AAA80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADC84 000AAA84*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_36 @ Get_MemoryOffset_LowBit);
/*800ADC88 000AAA88*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADC8C 000AAA8C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADC90 000AAA90*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADC94 000AAA94*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADC98 000AAA98*/ PPC::Runtime::ASM::lis(context->r4, fn_debug_common? @ Get_MemoryOffset_HighBit);
/*800ADC9C 000AAA9C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_debug_common? @ Get_MemoryOffset_LowBit);
/*800ADCA0 000AAAA0*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADCA4, 0x800ADCA4) //this is a jump label
/*800ADCA4 000AAAA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADCA8 000AAAA8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADCAC 000AAAAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADCB0 000AAAB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADCB4 000AAAB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADCB8 000AAAB8*/ PPC::Runtime::ASM::blr();
}