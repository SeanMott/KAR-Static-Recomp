//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800799BC(PPC::Runtime::GCContext* context)
{
/*800799BC 000767BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800799C0 000767C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800799C4 000767C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800799C8 000767C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800799CC 000767CC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800799D0 000767D0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD620 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800799D4 000767D4*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*800799D8 000767D8*/ PPC::Runtime::ASM::bne(.L_800799E8);
/*800799DC 000767DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800799E0 000767E0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD620 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800799E4 000767E4*/ PPC::Runtime::ASM::b(.L_80079A3C);
RUNTIME_PPC_JUMP_LABEL(.L_800799E8, 0x800799E8) //this is a jump label
/*800799E8 000767E8*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
/*800799EC 000767EC*/ PPC::Runtime::ASM::b(.L_80079A0C);
RUNTIME_PPC_JUMP_LABEL(.L_800799F0, 0x800799F0) //this is a jump label
/*800799F0 000767F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800799F4 000767F4*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*800799F8 000767F8*/ PPC::Runtime::ASM::bne(.L_80079A08);
/*800799FC 000767FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80079A00 00076800*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80079A04 00076804*/ PPC::Runtime::ASM::b(.L_80079A3C);
RUNTIME_PPC_JUMP_LABEL(.L_80079A08, 0x80079A08) //this is a jump label
/*80079A08 00076808*/ PPC::Runtime::ASM::mr(context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80079A0C, 0x80079A0C) //this is a jump label
/*80079A0C 0007680C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80079A10 00076810*/ PPC::Runtime::ASM::bne(.L_800799F0);
/*80079A14 00076814*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_556 @ Get_MemoryOffset_HighBit);
/*80079A18 00076818*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80079A1C 0007681C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_556 @ Get_MemoryOffset_LowBit);
/*80079A20 00076820*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80079A24 00076824*/ PPC::Runtime::ASM::bl(OSReport);
/*80079A28 00076828*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_557 @ Get_MemoryOffset_HighBit);
/*80079A2C 0007682C*/ PPC::Runtime::ASM::li(context->r4, 0x43);
/*80079A30 00076830*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_557 @ Get_MemoryOffset_LowBit);
/*80079A34 00076834*/ PPC::Runtime::ASM::li(context->r5, lbl_805D53F0 @ Get_MemoryOffset_SDA21);
/*80079A38 00076838*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80079A3C, 0x80079A3C) //this is a jump label
/*80079A3C 0007683C*/ PPC::Runtime::ASM::lis(context->r3, lbl_805529D0 @ Get_MemoryOffset_HighBit);
/*80079A40 00076840*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80079A44 00076844*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805529D0 @ Get_MemoryOffset_LowBit);
/*80079A48 00076848*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*80079A4C 0007684C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80079A50 00076850*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80079A54 00076854*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80079A58 00076858*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80079A5C 0007685C*/ PPC::Runtime::ASM::blr();
}