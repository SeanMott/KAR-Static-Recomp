//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E1AE8.hpp"



void fn_801E1AC4(PPC::Runtime::GCContext* context)
{
/*801E1AC4 001DE8C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E1AC8 001DE8C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E1ACC 001DE8CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E1AD0 001DE8D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801E1AD4 001DE8D4*/ PPC::Runtime::ASM::bl(fn_801E1AE8);
/*801E1AD8 001DE8D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E1ADC 001DE8DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E1AE0 001DE8E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E1AE4 001DE8E4*/ PPC::Runtime::ASM::blr();
}