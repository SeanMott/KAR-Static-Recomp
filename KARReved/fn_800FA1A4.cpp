//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA1D0.hpp"
#include "fn_800E9F50.hpp"
#include "fn_800EA084.hpp"



void fn_800FA1A4(PPC::Runtime::GCContext* context)
{
/*800FA1A4 000F6FA4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FA1A8 000F6FA8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FA1AC 000F6FAC*/ PPC::Runtime::ASM::addi(context->r6, context->r4, 0x44);
/*800FA1B0 000F6FB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FA1B4 000F6FB4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FA1B8 000F6FB8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800FA1BC 000F6FBC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FA1C0 000F6FC0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA1C4 000F6FC4*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800FA1C8 000F6FC8*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800FA1CC 000F6FCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r4));
/*800FA1D0 000F6FD0*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FA1D4 000F6FD4*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800FA1D8 000F6FD8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FA1DC 000F6FDC*/ PPC::Runtime::ASM::ble(.L_800FA218);
RUNTIME_PPC_JUMP_LABEL(.L_800FA1E0, 0x800FA1E0) //this is a jump label
/*800FA1E0 000F6FE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r6));
/*800FA1E4 000F6FE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r6));
/*800FA1E8 000F6FE8*/ PPC::Runtime::ASM::mulli(context->r3, context->r3, 0x140);
/*800FA1EC 000F6FEC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r5));
/*800FA1F0 000F6FF0*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x24);
/*800FA1F4 000F6FF4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800FA1F8 000F6FF8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x24);
/*800FA1FC 000F6FFC*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r0);
/*800FA200 000F7000*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 7);
/*800FA204 000F7004*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x11);
/*800FA208 000F7008*/ PPC::Runtime::ASM::bne(.L_800FA210);
/*800FA20C 000F700C*/ PPC::Runtime::ASM::addi(context->r28, context->r6, 0x60);
RUNTIME_PPC_JUMP_LABEL(.L_800FA210, 0x800FA210) //this is a jump label
/*800FA210 000F7010*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x20);
/*800FA214 000F7014*/ PPC::Runtime::ASM::bdnz(.L_800FA1E0);
RUNTIME_PPC_JUMP_LABEL(.L_800FA218, 0x800FA218) //this is a jump label
/*800FA218 000F7018*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800FA21C 000F701C*/ PPC::Runtime::ASM::beq(.L_800FA280);
/*800FA220 000F7020*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800FA224 000F7024*/ PPC::Runtime::ASM::mr(context->r30, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_800FA228, 0x800FA228) //this is a jump label
/*800FA228 000F7028*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x134);
/*800FA22C 000F702C*/ PPC::Runtime::ASM::bl(fn_800EA1D0);
/*800FA230 000F7030*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FA234 000F7034*/ PPC::Runtime::ASM::bne(.L_800FA270);
/*800FA238 000F7038*/ PPC::Runtime::ASM::mulli(context->r30, context->r29, 0x14);
/*800FA23C 000F703C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FA240 000F7040*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800FA244 000F7044*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800FA248 000F7048*/ PPC::Runtime::ASM::add(context->r4, context->r31, context->r30);
/*800FA24C 000F704C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r6));
/*800FA250 000F7050*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r4));
/*800FA254 000F7054*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r6));
/*800FA258 000F7058*/ PPC::Runtime::ASM::bl(fn_800E9F50);
/*800FA25C 000F705C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x134);
/*800FA260 000F7060*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FA264 000F7064*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*800FA268 000F7068*/ PPC::Runtime::ASM::bl(fn_800EA084);
/*800FA26C 000F706C*/ PPC::Runtime::ASM::b(.L_800FA280);
RUNTIME_PPC_JUMP_LABEL(.L_800FA270, 0x800FA270) //this is a jump label
/*800FA270 000F7070*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*800FA274 000F7074*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x14);
/*800FA278 000F7078*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*800FA27C 000F707C*/ PPC::Runtime::ASM::blt(.L_800FA228);
RUNTIME_PPC_JUMP_LABEL(.L_800FA280, 0x800FA280) //this is a jump label
/*800FA280 000F7080*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FA284 000F7084*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FA288 000F7088*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FA28C 000F708C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FA290 000F7090*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800FA294 000F7094*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FA298 000F7098*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FA29C 000F709C*/ PPC::Runtime::ASM::blr();
}