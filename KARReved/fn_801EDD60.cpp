//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D0C08.hpp"



void fn_801EDD60(PPC::Runtime::GCContext* context)
{
/*801EDD60 001EAB60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EDD64 001EAB64*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EDD68 001EAB68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EDD6C 001EAB6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EDD70 001EAB70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EDD74 001EAB74*/ PPC::Runtime::ASM::bl(fn_801D0C08);
/*801EDD78 001EAB78*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EDD7C 001EAB7C*/ PPC::Runtime::ASM::beq(.L_801EDD98);
/*801EDD80 001EAB80*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
/*801EDD84 001EAB84*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EDD88 001EAB88*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 4, 27, 27);
/*801EDD8C 001EAB8C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EDD90 001EAB90*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a3f, context->r31));
/*801EDD94 001EAB94*/ PPC::Runtime::ASM::b(.L_801EDD9C);
RUNTIME_PPC_JUMP_LABEL(.L_801EDD98, 0x801EDD98) //this is a jump label
/*801EDD98 001EAB98*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801EDD9C, 0x801EDD9C) //this is a jump label
/*801EDD9C 001EAB9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EDDA0 001EABA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EDDA4 001EABA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EDDA8 001EABA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EDDAC 001EABAC*/ PPC::Runtime::ASM::blr();
}