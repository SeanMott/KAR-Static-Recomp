//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025F9C0(PPC::Runtime::GCContext* context)
{
/*8025F9C0 0025C7C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025F9C4 0025C7C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025F9C8 0025C7C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F9CC 0025C7CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F9D0 0025C7D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025F9D4 0025C7D4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025F9D8 0025C7D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025F9DC 0025C7DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F9E0 0025C7E0*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025F9E4 0025C7E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F9E8 0025C7E8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025F9EC 0025C7EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025F9F0 0025C7F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F9F4 0025C7F4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025F9F8 0025C7F8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025F9FC 0025C7FC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025FA00 0025C800*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025FA04 0025C804*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FA08 0025C808*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025FA0C 0025C80C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025FA10 0025C810*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025FA14 0025C814*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025FA18 0025C818*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025FA1C 0025C81C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F54 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FA20 0025C820*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025FA24 0025C824*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025FA28 0025C828*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FA2C 0025C82C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025FA30 0025C830*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025FA34 0025C834*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025FA38 0025C838*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025FA3C 0025C83C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FA40 0025C840*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FA44 0025C844*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025FA48 0025C848*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025FA4C 0025C84C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025FA50 0025C850*/ PPC::Runtime::ASM::blr();
}