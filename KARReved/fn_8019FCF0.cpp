//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_8019FCF0(PPC::Runtime::GCContext* context)
{
/*8019FCF0 0019CAF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8019FCF4 0019CAF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019FCF8 0019CAF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8019FCFC 0019CAFC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*8019FD00 0019CB00*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*8019FD04 0019CB04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019FD08 0019CB08*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8019FD0C 0019CB0C*/ PPC::Runtime::ASM::bl(fn_80190948);
/*8019FD10 0019CB10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*8019FD14 0019CB14*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8019FD18 0019CB18*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019FD1C 0019CB1C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8019FD20 0019CB20*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*8019FD24 0019CB24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8019FD28 0019CB28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019FD2C 0019CB2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019FD30 0019CB30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8019FD34 0019CB34*/ PPC::Runtime::ASM::blr();
}