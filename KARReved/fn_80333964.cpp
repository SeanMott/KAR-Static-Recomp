//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80289768.hpp"
#include "fn_8028967C.hpp"
#include "fn_80289730.hpp"



void fn_80333964(PPC::Runtime::GCContext* context)
{
/*80333964 00330764*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80333968 00330768*/ PPC::Runtime::ASM::mflr(context->r0);
/*8033396C 0033076C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80333970 00330770*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80333974 00330774*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80333978 00330778*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8033397C 0033077C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80333980 00330780*/ PPC::Runtime::ASM::bl(fn_HSD_Randf);
/*80333984 00330784*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E418C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80333988 00330788*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8033398C 0033078C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E41F4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80333990 00330790*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80333994 00330794*/ PPC::Runtime::ASM::fmadds(context->f0, context->f2, context->f1, context->f0);
/*80333998 00330798*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*8033399C 0033079C*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*803339A0 003307A0*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*803339A4 003307A4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803339A8 003307A8*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*803339AC 003307AC*/ PPC::Runtime::ASM::bl(fn_80289768);
/*803339B0 003307B0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803339B4 003307B4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803339B8 003307B8*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*803339BC 003307BC*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*803339C0 003307C0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E4120 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803339C4 003307C4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E4280 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803339C8 003307C8*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*803339CC 003307CC*/ PPC::Runtime::ASM::bl(fn_8028967C);
/*803339D0 003307D0*/ PPC::Runtime::ASM::li(context->r3, 0x78);
/*803339D4 003307D4*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*803339D8 003307D8*/ PPC::Runtime::ASM::xoris(context->r3, context->r3, 0x8000);
/*803339DC 003307DC*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*803339E0 003307E0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803339E4 003307E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803339E8 003307E8*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E4228 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803339EC 003307EC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803339F0 003307F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803339F4 003307F4*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803339F8 003307F8*/ PPC::Runtime::ASM::fsubs(context->f31, context->f0, context->f1);
/*803339FC 003307FC*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/*80333A00 00330800*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80333A04 00330804*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*80333A08 00330808*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*80333A0C 0033080C*/ PPC::Runtime::ASM::bl(fn_80289730);
/*80333A10 00330810*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80333A14 00330814*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80333A18 00330818*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80333A1C 0033081C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80333A20 00330820*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80333A24 00330824*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80333A28 00330828*/ PPC::Runtime::ASM::blr();
}