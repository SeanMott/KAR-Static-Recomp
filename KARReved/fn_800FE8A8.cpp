//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D4BF4.hpp"
#include "fn_800D4ADC.hpp"



void fn_800FE8A8(PPC::Runtime::GCContext* context)
{
/*800FE8A8 000FB6A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FE8AC 000FB6AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FE8B0 000FB6B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FE8B4 000FB6B4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800FE8B8 000FB6B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FE8BC 000FB6BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FE8C0 000FB6C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FE8C4 000FB6C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FE8C8 000FB6C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800FE8CC 000FB6CC*/ PPC::Runtime::ASM::bl(fn_800D4BF4);
/*800FE8D0 000FB6D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r31));
/*800FE8D4 000FB6D4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800FE8D8 000FB6D8*/ PPC::Runtime::ASM::bl(fn_800D4ADC);
/*800FE8DC 000FB6DC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FE8E0 000FB6E0*/ PPC::Runtime::ASM::beq(.L_800FE8F4);
/*800FE8E4 000FB6E4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
/*800FE8E8 000FB6E8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800FE8EC 000FB6EC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*800FE8F0 000FB6F0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800FE8F4, 0x800FE8F4) //this is a jump label
/*800FE8F4 000FB6F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FE8F8 000FB6F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FE8FC 000FB6FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FE900 000FB700*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FE904 000FB704*/ PPC::Runtime::ASM::blr();
}