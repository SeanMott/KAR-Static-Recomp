//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005C6DC.hpp"



void fn_8005D3BC(PPC::Runtime::GCContext* context)
{
/*8005D3BC 0005A1BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005D3C0 0005A1C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005D3C4 0005A1C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D3C8 0005A1C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D3CC 0005A1CC*/ PPC::Runtime::ASM::bl(fn_8005C6DC);
/*8005D3D0 0005A1D0*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005D3D4 0005A1D4*/ PPC::Runtime::ASM::bne(.L_8005D3E0);
/*8005D3D8 0005A1D8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8005D3DC 0005A1DC*/ PPC::Runtime::ASM::b(.L_8005D428);
RUNTIME_PPC_JUMP_LABEL(.L_8005D3E0, 0x8005D3E0) //this is a jump label
/*8005D3E0 0005A1E0*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005D3E4 0005A1E4*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*8005D3E8 0005A1E8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005D3EC 0005A1EC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8005D3F0 0005A1F0*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r3);
/*8005D3F4 0005A1F4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x22);
/*8005D3F8 0005A1F8*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43, context->r5));
/*8005D3FC 0005A1FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D400 0005A200*/ PPC::Runtime::ASM::li(context->r4, 0x3e7);
/*8005D404 0005A204*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a1, context->r5));
/*8005D408 0005A208*/ PPC::Runtime::ASM::bl(fn_80444984);
/*8005D40C 0005A20C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8005D410 0005A210*/ PPC::Runtime::ASM::bne(.L_8005D428);
/*8005D414 0005A214*/ PPC::Runtime::ASM::lis(context->r3, String_lbaudio.c @ Get_MemoryOffset_HighBit);
/*8005D418 0005A218*/ PPC::Runtime::ASM::li(context->r4, 0x709);
/*8005D41C 0005A21C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_lbaudio.c @ Get_MemoryOffset_LowBit);
/*8005D420 0005A220*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5290 @ Get_MemoryOffset_SDA21);
/*8005D424 0005A224*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8005D428, 0x8005D428) //this is a jump label
/*8005D428 0005A228*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005D42C 0005A22C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005D430 0005A230*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005D434 0005A234*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005D438 0005A238*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005D43C 0005A23C*/ PPC::Runtime::ASM::blr();
}