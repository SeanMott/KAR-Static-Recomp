//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "fn_8004A2BC.hpp"
#include "fn_8000C148.hpp"
#include "fn_80007F6C.hpp"
#include "fn_800080C0.hpp"
#include "fn_80038C40.hpp"
#include "fn_80046D48.hpp"



void fn_800078E4(PPC::Runtime::GCContext* context)
{
/*800078E4 000046E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800078E8 000046E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800078EC 000046EC*/ PPC::Runtime::ASM::lis(context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_HighBit);
/*800078F0 000046F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800078F4 000046F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800078F8 000046F8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, structOffset_MaybeAPlayerDataStructOffset @ Get_MemoryOffset_LowBit);
/*800078FC 000046FC*/ PPC::Runtime::ASM::li(context->r5, 0x114);
/*80007900 00004700*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80007904 00004704*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xfa8);
/*80007908 00004708*/ PPC::Runtime::ASM::bl(memset);
/*8000790C 0000470C*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80007910 00004710*/ PPC::Runtime::ASM::bl(fn_8004A2BC);
/*80007914 00004714*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80007918, 0x80007918) //this is a jump label
/*80007918 00004718*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*8000791C 0000471C*/ PPC::Runtime::ASM::bl(fn_8000C148);
/*80007920 00004720*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80007924 00004724*/ PPC::Runtime::ASM::bne(.L_80007940);
/*80007928 00004728*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*8000792C 0000472C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80007930 00004730*/ PPC::Runtime::ASM::bl(fn_80007F6C);
/*80007934 00004734*/ PPC::Runtime::ASM::extsb(context->r3, context->r31);
/*80007938 00004738*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8000793C 0000473C*/ PPC::Runtime::ASM::bl(fn_800080C0);
RUNTIME_PPC_JUMP_LABEL(.L_80007940, 0x80007940) //this is a jump label
/*80007940 00004740*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80007944 00004744*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x18);
/*80007948 00004748*/ PPC::Runtime::ASM::blt(.L_80007918);
/*8000794C 0000474C*/ PPC::Runtime::ASM::bl(fn_80038C40);
/*80007950 00004750*/ PPC::Runtime::ASM::bl(fn_80046D48);
/*80007954 00004754*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80007958 00004758*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000795C 0000475C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80007960 00004760*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80007964 00004764*/ PPC::Runtime::ASM::blr();
}