//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80057A9C(PPC::Runtime::GCContext* context)
{
/*80057A9C 0005489C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80057AA0 000548A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80057AA4 000548A4*/ PPC::Runtime::ASM::addi(context->r6, context->r3, 0xc);
/*80057AA8 000548A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80057AAC 000548AC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80057AB0 000548B0*/ PPC::Runtime::ASM::b(.L_80057AF4);
RUNTIME_PPC_JUMP_LABEL(.L_80057AB4, 0x80057AB4) //this is a jump label
/*80057AB4 000548B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80057AB8 000548B8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r4);
/*80057ABC 000548BC*/ PPC::Runtime::ASM::bne(.L_80057AEC);
/*80057AC0 000548C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80057AC4 000548C4*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_HighBit);
/*80057AC8 000548C8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180537510 @ Get_MemoryOffset_LowBit);
/*80057ACC 000548CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80057AD0 000548D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x968, context->r4));
/*80057AD4 000548D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80057AD8 000548D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96c, context->r4));
/*80057ADC 000548DC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x968, context->r4));
/*80057AE0 000548E0*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*80057AE4 000548E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x96c, context->r4));
/*80057AE8 000548E8*/ PPC::Runtime::ASM::b(.L_80057B20);
RUNTIME_PPC_JUMP_LABEL(.L_80057AEC, 0x80057AEC) //this is a jump label
/*80057AEC 000548EC*/ PPC::Runtime::ASM::mr(context->r6, context->r5);
/*80057AF0 000548F0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_80057AF4, 0x80057AF4) //this is a jump label
/*80057AF4 000548F4*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*80057AF8 000548F8*/ PPC::Runtime::ASM::bne(.L_80057AB4);
/*80057AFC 000548FC*/ PPC::Runtime::ASM::lis(context->r3, String_ "ErrorFormatStrlbMemFreeToHea" Get_MemoryOffset_HighBit);
/*80057B00 00054900*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "ErrorFormatStrlbMemFreeToHea" Get_MemoryOffset_LowBit);
/*80057B04 00054904*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80057B08 00054908*/ PPC::Runtime::ASM::bl(OSReport);
/*80057B0C 0005490C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_186 @ Get_MemoryOffset_HighBit);
/*80057B10 00054910*/ PPC::Runtime::ASM::li(context->r4, 0x11e);
/*80057B14 00054914*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_186 @ Get_MemoryOffset_LowBit);
/*80057B18 00054918*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5248 @ Get_MemoryOffset_SDA21);
/*80057B1C 0005491C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80057B20, 0x80057B20) //this is a jump label
/*80057B20 00054920*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80057B24 00054924*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80057B28 00054928*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80057B2C 0005492C*/ PPC::Runtime::ASM::blr();
}