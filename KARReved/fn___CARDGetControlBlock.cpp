//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn___CARDGetControlBlock(PPC::Runtime::GCContext* context)
{
/*803E2D88 003DFB88*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E2D8C 003DFB8C*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0x110);
/*803E2D90 003DFB90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E2D94 003DFB94*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E2D98 003DFB98*/ PPC::Runtime::ASM::lis(context->r5, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E2D9C 003DFB9C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E2DA0 003DFBA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E2DA4 003DFBA4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E2DA8 003DFBA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E2DAC 003DFBAC*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r6);
/*803E2DB0 003DFBB0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E2DB4 003DFBB4*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*803E2DB8 003DFBB8*/ PPC::Runtime::ASM::blt(.L_803E2DD0);
/*803E2DBC 003DFBBC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*803E2DC0 003DFBC0*/ PPC::Runtime::ASM::bge(.L_803E2DD0);
/*803E2DC4 003DFBC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r30));
/*803E2DC8 003DFBC8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E2DCC 003DFBCC*/ PPC::Runtime::ASM::bne(.L_803E2DD8);
RUNTIME_PPC_JUMP_LABEL(.L_803E2DD0, 0x803E2DD0) //this is a jump label
/*803E2DD0 003DFBD0*/ PPC::Runtime::ASM::li(context->r3, -0x80);
/*803E2DD4 003DFBD4*/ PPC::Runtime::ASM::b(.L_803E2E24);
RUNTIME_PPC_JUMP_LABEL(.L_803E2DD8, 0x803E2DD8) //this is a jump label
/*803E2DD8 003DFBD8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E2DDC 003DFBDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803E2DE0 003DFBE0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803E2DE4 003DFBE4*/ PPC::Runtime::ASM::bne(.L_803E2DF0);
/*803E2DE8 003DFBE8*/ PPC::Runtime::ASM::li(context->r31, -0x3);
/*803E2DEC 003DFBEC*/ PPC::Runtime::ASM::b(.L_803E2E1C);
RUNTIME_PPC_JUMP_LABEL(.L_803E2DF0, 0x803E2DF0) //this is a jump label
/*803E2DF0 003DFBF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803E2DF4 003DFBF4*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*803E2DF8 003DFBF8*/ PPC::Runtime::ASM::bne(.L_803E2E04);
/*803E2DFC 003DFBFC*/ PPC::Runtime::ASM::li(context->r31, -0x1);
/*803E2E00 003DFC00*/ PPC::Runtime::ASM::b(.L_803E2E1C);
RUNTIME_PPC_JUMP_LABEL(.L_803E2E04, 0x803E2E04) //this is a jump label
/*803E2E04 003DFC04*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*803E2E08 003DFC08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803E2E0C 003DFC0C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E2E10 003DFC10*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803E2E14 003DFC14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r30));
/*803E2E18 003DFC18*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_803E2E1C, 0x803E2E1C) //this is a jump label
/*803E2E1C 003DFC1C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E2E20 003DFC20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_803E2E24, 0x803E2E24) //this is a jump label
/*803E2E24 003DFC24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E2E28 003DFC28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E2E2C 003DFC2C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E2E30 003DFC30*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E2E34 003DFC34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E2E38 003DFC38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E2E3C 003DFC3C*/ PPC::Runtime::ASM::blr();
}