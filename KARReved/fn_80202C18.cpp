//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80202C80.hpp"



void fn_80202C18(PPC::Runtime::GCContext* context)
{
/*80202C18 001FFA18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80202C1C 001FFA1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80202C20 001FFA20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80202C24 001FFA24*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 2);
/*80202C28 001FFA28*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80202C2C 001FFA2C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80202C30 001FFA30*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80202C34 001FFA34*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*80202C38 001FFA38*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x41e, context->r3));
/*80202C3C 001FFA3C*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*80202C40 001FFA40*/ PPC::Runtime::ASM::beq(.L_80202C68);
/*80202C44 001FFA44*/ PPC::Runtime::ASM::sth(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x41e, context->r3));
/*80202C48 001FFA48*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80202C4C, 0x80202C4C) //this is a jump label
/*80202C4C 001FFA4C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80202C50 001FFA50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x414);
/*80202C54 001FFA54*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x2b8);
/*80202C58 001FFA58*/ PPC::Runtime::ASM::bl(fn_80202C80);
/*80202C5C 001FFA5C*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80202C60 001FFA60*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*80202C64 001FFA64*/ PPC::Runtime::ASM::blt(.L_80202C4C);
RUNTIME_PPC_JUMP_LABEL(.L_80202C68, 0x80202C68) //this is a jump label
/*80202C68 001FFA68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80202C6C 001FFA6C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80202C70 001FFA70*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80202C74 001FFA74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80202C78 001FFA78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80202C7C 001FFA7C*/ PPC::Runtime::ASM::blr();
}