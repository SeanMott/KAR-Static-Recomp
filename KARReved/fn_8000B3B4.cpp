//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000B3B4(PPC::Runtime::GCContext* context)
{
/*8000B3B4 000081B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000B3B8 000081B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000B3BC 000081BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B3C0 000081C0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000B3C4 000081C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000B3C8 000081C8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x377, context->r3));
/*8000B3CC 000081CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000B3D0 000081D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000B3D4 000081D4*/ PPC::Runtime::ASM::blr();
}