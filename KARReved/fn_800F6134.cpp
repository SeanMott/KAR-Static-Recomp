//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800F6134(PPC::Runtime::GCContext* context)
{
/*800F6134 000F2F34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F6138 000F2F38*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F613C 000F2F3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F6140 000F2F40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F6144 000F2F44*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800F6148 000F2F48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/* 800F614C 000F2F4C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*800F6150 000F2F50*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F6154 000F2F54*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F6158 000F2F58*/ PPC::Runtime::ASM::mr(context->r28, context->r30);
/*800F615C 000F2F5C*/ PPC::Runtime::ASM::beq(.L_800F616C);
/*800F6160 000F2F60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800F6164 000F2F64*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 19, 19);
/*800F6168 000F2F68*/ PPC::Runtime::ASM::beq(.L_800F6174);
RUNTIME_PPC_JUMP_LABEL(.L_800F616C, 0x800F616C) //this is a jump label
/*800F616C 000F2F6C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF7E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F6170 000F2F70*/ PPC::Runtime::ASM::b(.L_800F6254);
RUNTIME_PPC_JUMP_LABEL(.L_800F6174, 0x800F6174) //this is a jump label
/*800F6174 000F2F74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800F6178 000F2F78*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F617C 000F2F7C*/ PPC::Runtime::ASM::bne(.L_800F61B8);
/*800F6180 000F2F80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r30));
/*800F6184 000F2F84*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F6188 000F2F88*/ PPC::Runtime::ASM::bne(.L_800F61A4);
/*800F618C 000F2F8C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_984 @ Get_MemoryOffset_HighBit);
/*800F6190 000F2F90*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_985 @ Get_MemoryOffset_HighBit);
/*800F6194 000F2F94*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_984 @ Get_MemoryOffset_LowBit);
/*800F6198 000F2F98*/ PPC::Runtime::ASM::li(context->r4, 0x1d5);
/*800F619C 000F2F9C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_985 @ Get_MemoryOffset_LowBit);
/*800F61A0 000F2FA0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F61A4, 0x800F61A4) //this is a jump label
/*800F61A4 000F2FA4*/ PPC::Runtime::ASM::mr(context->r12, context->r31);
/*800F61A8 000F2FA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r30));
/*800F61AC 000F2FAC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800F61B0 000F2FB0*/ PPC::Runtime::ASM::bctrl();
/*800F61B4 000F2FB4*/ PPC::Runtime::ASM::b(.L_800F6254);
RUNTIME_PPC_JUMP_LABEL(.L_800F61B8, 0x800F61B8) //this is a jump label
/*800F61B8 000F2FB8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r30));
/*800F61BC 000F2FBC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F61C0 000F2FC0*/ PPC::Runtime::ASM::beq(.L_800F61D4);
/*800F61C4 000F2FC4*/ PPC::Runtime::ASM::mr(context->r12, context->r31);
/*800F61C8 000F2FC8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800F61CC 000F2FCC*/ PPC::Runtime::ASM::bctrl();
/*800F61D0 000F2FD0*/ PPC::Runtime::ASM::b(.L_800F6254);
RUNTIME_PPC_JUMP_LABEL(.L_800F61D4, 0x800F61D4) //this is a jump label
/*800F61D4 000F2FD4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800F61D8 000F2FD8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F61DC 000F2FDC*/ PPC::Runtime::ASM::bne(.L_800F61EC);
/*800F61E0 000F2FE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800F61E4 000F2FE4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F61E8 000F2FE8*/ PPC::Runtime::ASM::beq(.L_800F61F8);
RUNTIME_PPC_JUMP_LABEL(.L_800F61EC, 0x800F61EC) //this is a jump label
/*800F61EC 000F2FEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800F61F0 000F2FF0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 19, 19);
/*800F61F4 000F2FF4*/ PPC::Runtime::ASM::beq(.L_800F623C);
RUNTIME_PPC_JUMP_LABEL(.L_800F61F8, 0x800F61F8) //this is a jump label
/*800F61F8 000F2FF8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_984 @ Get_MemoryOffset_HighBit);
/*800F61FC 000F2FFC*/ PPC::Runtime::ASM::addi(context->r29, context->r3, MemoryOffset_984 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_800F6200, 0x800F6200) //this is a jump label
/*800F6200 000F3000*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800F6204 000F3004*/ PPC::Runtime::ASM::cmplw(context->r3, context->r28);
/*800F6208 000F3008*/ PPC::Runtime::ASM::bne(.L_800F6220);
/*800F620C 000F300C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800F6210 000F3010*/ PPC::Runtime::ASM::li(context->r4, 0x1e3);
/*800F6214 000F3014*/ PPC::Runtime::ASM::li(context->r5, lbl_805D61C8 @ Get_MemoryOffset_SDA21);
/*800F6218 000F3018*/ PPC::Runtime::ASM::bl(fn___assert);
/*800F621C 000F301C*/ PPC::Runtime::ASM::b(.L_800F6200);
RUNTIME_PPC_JUMP_LABEL(.L_800F6220, 0x800F6220) //this is a jump label
/*800F6220 000F3020*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F6224 000F3024*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F6228 000F3028*/ PPC::Runtime::ASM::beq(.L_800F6234);
/*800F622C 000F302C*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*800F6230 000F3030*/ PPC::Runtime::ASM::b(.L_800F61B8);
RUNTIME_PPC_JUMP_LABEL(.L_800F6234, 0x800F6234) //this is a jump label
/*800F6234 000F3034*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F6238 000F3038*/ PPC::Runtime::ASM::b(.L_800F6200);
RUNTIME_PPC_JUMP_LABEL(.L_800F623C, 0x800F623C) //this is a jump label
/*800F623C 000F303C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F6240 000F3040*/ PPC::Runtime::ASM::beq(.L_800F624C);
/*800F6244 000F3044*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F6248 000F3048*/ PPC::Runtime::ASM::b(.L_800F61B8);
RUNTIME_PPC_JUMP_LABEL(.L_800F624C, 0x800F624C) //this is a jump label
/*800F624C 000F304C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800F6250 000F3050*/ PPC::Runtime::ASM::b(.L_800F61B8);
RUNTIME_PPC_JUMP_LABEL(.L_800F6254, 0x800F6254) //this is a jump label
/*800F6254 000F3054*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F6258 000F3058*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800F625C 000F305C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F6260 000F3060*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F6264 000F3064*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F6268 000F3068*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F626C 000F306C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F6270 000F3070*/ PPC::Runtime::ASM::blr();
}