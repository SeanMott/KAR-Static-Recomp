//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802440AC(PPC::Runtime::GCContext* context)
{
/*802440AC 00240EAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802440B0 00240EB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802440B4 00240EB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802440B8 00240EB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802440BC 00240EBC*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*802440C0 00240EC0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802440C4 00240EC4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*802440C8 00240EC8*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*802440CC 00240ECC*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*802440D0 00240ED0*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
/*802440D4 00240ED4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802440D8 00240ED8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802440DC 00240EDC*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*802440E0 00240EE0*/ PPC::Runtime::ASM::bl(fn_PSMTXMultVec);
/*802440E4 00240EE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802440E8 00240EE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802440EC 00240EEC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802440F0 00240EF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802440F4 00240EF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802440F8 00240EF8*/ PPC::Runtime::ASM::blr();
}