//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80394C60(PPC::Runtime::GCContext* context)
{
/*80394C60 00391A60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80394C64 00391A64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80394C68 00391A68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80394C6C 00391A6C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80394C70 00391A70*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80394C74 00391A74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80394C78 00391A78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80394C7C 00391A7C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80394C80 00391A80*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805E4FA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80394C84 00391A84*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80394C88 00391A88*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80394C8C 00391A8C*/ PPC::Runtime::ASM::li(context->r31, 0x2);
RUNTIME_PPC_JUMP_LABEL(.L_80394C90, 0x80394C90) //this is a jump label
/*80394C90 00391A90*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r29, 24);
/*80394C94 00391A94*/ PPC::Runtime::ASM::bl(fn_HSD_PadRumbleFree);
/*80394C98 00391A98*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80394C9C 00391A9C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80394CA0 00391AA0*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x4);
/*80394CA4 00391AA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80394CA8 00391AA8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*80394CAC 00391AAC*/ PPC::Runtime::ASM::blt(.L_80394C90);
/*80394CB0 00391AB0*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80394CB4 00391AB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80394CB8 00391AB8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80394CBC 00391ABC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80394CC0 00391AC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80394CC4 00391AC4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80394CC8 00391AC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80394CCC 00391ACC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80394CD0 00391AD0*/ PPC::Runtime::ASM::blr();
}