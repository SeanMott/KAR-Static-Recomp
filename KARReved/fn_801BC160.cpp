//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Interrupt_CheckForJump.hpp"
#include "fn_801A234C.hpp"
#include "fn_801907E8.hpp"
#include "fn_80190708.hpp"
#include "fn_801A2D9C.hpp"
#include "fn_801A24C8.hpp"
#include "fn_801A234C.hpp"
#include "fn_801B8510.hpp"



void fn_801BC160(PPC::Runtime::GCContext* context)
{
/*801BC160 001B8F60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BC164 001B8F64*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BC168 001B8F68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BC16C 001B8F6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BC170 001B8F70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BC174 001B8F74*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForJump);
/*801BC178 001B8F78*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BC17C 001B8F7C*/ PPC::Runtime::ASM::beq(.L_801BC1E0);
/*801BC180 001B8F80*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BC184 001B8F84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC188 001B8F88*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*801BC18C 001B8F8C*/ PPC::Runtime::ASM::bl(fn_801A234C);
/*801BC190 001B8F90*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xa6c);
/*801BC194 001B8F94*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801BC198 001B8F98*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E17B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BC19C 001B8F9C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*801BC1A0 001B8FA0*/ PPC::Runtime::ASM::beq(.L_801BC1CC);
/*801BC1A4 001B8FA4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa6c, context->r31));
/*801BC1A8 001B8FA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC1AC 001B8FAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa70, context->r31));
/*801BC1B0 001B8FB0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x324);
/*801BC1B4 001B8FB4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x330);
/*801BC1B8 001B8FB8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
/*801BC1BC 001B8FBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r31));
/*801BC1C0 001B8FC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa74, context->r31));
/*801BC1C4 001B8FC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r31));
/*801BC1C8 001B8FC8*/ PPC::Runtime::ASM::bl(fn_801907E8);
RUNTIME_PPC_JUMP_LABEL(.L_801BC1CC, 0x801BC1CC) //this is a jump label
/*801BC1CC 001B8FCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC1D0 001B8FD0*/ PPC::Runtime::ASM::bl(fn_80190708);
/*801BC1D4 001B8FD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC1D8 001B8FD8*/ PPC::Runtime::ASM::bl(fn_801A2D9C);
/*801BC1DC 001B8FDC*/ PPC::Runtime::ASM::b(.L_801BC20C);
RUNTIME_PPC_JUMP_LABEL(.L_801BC1E0, 0x801BC1E0) //this is a jump label
/*801BC1E0 001B8FE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
/*801BC1E4 001B8FE4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801BC1E8 001B8FE8*/ PPC::Runtime::ASM::beq(.L_801BC20C);
/*801BC1EC 001B8FEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC1F0 001B8FF0*/ PPC::Runtime::ASM::bl(fn_801A24C8);
/*801BC1F4 001B8FF4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BC1F8 001B8FF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC1FC 001B8FFC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*801BC200 001B9000*/ PPC::Runtime::ASM::bl(fn_801A234C);
/*801BC204 001B9004*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC208 001B9008*/ PPC::Runtime::ASM::bl(fn_801B8510);
RUNTIME_PPC_JUMP_LABEL(.L_801BC20C, 0x801BC20C) //this is a jump label
/*801BC20C 001B900C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BC210 001B9010*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BC214 001B9014*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BC218 001B9018*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BC21C 001B901C*/ PPC::Runtime::ASM::blr();
}