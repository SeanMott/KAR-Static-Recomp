//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_menu_getCurrentMenuID.hpp"
#include "fn_8000A188.hpp"
#include "fn_setCameraToOnFoot.hpp"
#include "fn_80190C14.hpp"
#include "fn_801C8158.hpp"
#include "fn_setEmptyVehicleHitbox.hpp"
#include "fn_8022CF54.hpp"
#include "fn_getOffBike_giveUpwardMomemtum.hpp"
#include "fn_80199EE0.hpp"
#include "fn_801A2DE0.hpp"
#include "fn_80199C64.hpp"
#include "fn_8019537C.hpp"
#include "fn_EnableMetroTRKInterrupts.hpp"



void fn_80193F98(PPC::Runtime::GCContext* context)
{
/*80193F98 00190D98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80193F9C 00190D9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80193FA0 00190DA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80193FA4 00190DA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80193FA8 00190DA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80193FAC 00190DAC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80193FB0 00190DB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r3));
/*80193FB4 00190DB4*/ PPC::Runtime::ASM::bl(fn_menu_getCurrentMenuID);
/*80193FB8 00190DB8*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80193FBC 00190DBC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*80193FC0 00190DC0*/ PPC::Runtime::ASM::bne(.L_80193FD0);
/*80193FC4 00190DC4*/ PPC::Runtime::ASM::bl(fn_8000A188);
/*80193FC8 00190DC8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80193FCC 00190DCC*/ PPC::Runtime::ASM::bne(.L_80193FDC);
RUNTIME_PPC_JUMP_LABEL(.L_80193FD0, 0x80193FD0) //this is a jump label
/*80193FD0 00190DD0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80193FD4 00190DD4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80193FD8 00190DD8*/ PPC::Runtime::ASM::bl(fn_setCameraToOnFoot);
RUNTIME_PPC_JUMP_LABEL(.L_80193FDC, 0x80193FDC) //this is a jump label
/*80193FDC 00190DDC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80193FE0 00190DE0*/ PPC::Runtime::ASM::bl(fn_80190C14);
/*80193FE4 00190DE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r30));
/*80193FE8 00190DE8*/ PPC::Runtime::ASM::bl(fn_801C8158);
/*80193FEC 00190DEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r30));
/*80193FF0 00190DF0*/ PPC::Runtime::ASM::bl(fn_setEmptyVehicleHitbox);
/*80193FF4 00190DF4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80193FF8 00190DF8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80193FFC 00190DFC*/ PPC::Runtime::ASM::bl(fn_8022CF54);
/*80194000 00190E00*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80194004 00190E04*/ PPC::Runtime::ASM::bl(fn_getOffBike_giveUpwardMomemtum);
/*80194008 00190E08*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8019400C 00190E0C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80194010 00190E10*/ PPC::Runtime::ASM::bl(fn_80199EE0);
/*80194014 00190E14*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80194018 00190E18*/ PPC::Runtime::ASM::bl(fn_801A2DE0);
/*8019401C 00190E1C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E10B4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80194020 00190E20*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80194024 00190E24*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x390, context->r30));
/*80194028 00190E28*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r4));
/*8019402C 00190E2C*/ PPC::Runtime::ASM::bl(fn_80199C64);
/*80194030 00190E30*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80194034 00190E34*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80194038 00190E38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r30));
/*8019403C 00190E3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f8, context->r30));
/*80194040 00190E40*/ PPC::Runtime::ASM::bl(fn_8019537C);
/*80194044 00190E44*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*80194048 00190E48*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8019404C 00190E4C*/ PPC::Runtime::ASM::bl(fn_EnableMetroTRKInterrupts);
/*80194050 00190E50*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80194054 00190E54*/ PPC::Runtime::ASM::li(context->r0, 0x14);
/*80194058 00190E58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4a0, context->r30));
/*8019405C 00190E5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x770, context->r30));
/*80194060 00190E60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x774, context->r30));
/*80194064 00190E64*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80194068 00190E68*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8019406C 00190E6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80194070 00190E70*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80194074 00190E74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80194078 00190E78*/ PPC::Runtime::ASM::blr();
}