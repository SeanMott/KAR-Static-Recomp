//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A718C.hpp"



void fn_800A7A34(PPC::Runtime::GCContext* context)
{
/*800A7A34 000A4834*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A7A38 000A4838*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A7A3C 000A483C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800A7A40 000A4840*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A7A44 000A4844*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A7A48 000A4848*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A7A4C 000A484C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A7A50 000A4850*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A7A54 000A4854*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800A7A58 000A4858*/ PPC::Runtime::ASM::bne(.L_800A7AAC);
/*800A7A5C 000A485C*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A7A60 000A4860*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_652 @ Get_MemoryOffset_HighBit);
/*800A7A64 000A4864*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_653 @ Get_MemoryOffset_HighBit);
/*800A7A68 000A4868*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*800A7A6C 000A486C*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_652 @ Get_MemoryOffset_LowBit);
/*800A7A70 000A4870*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_653 @ Get_MemoryOffset_LowBit);
/*800A7A74 000A4874*/ PPC::Runtime::ASM::b(.L_800A7AA4);
RUNTIME_PPC_JUMP_LABEL(.L_800A7A78, 0x800A7A78) //this is a jump label
/*800A7A78 000A4878*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800A7A7C 000A487C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xd);
/*800A7A80 000A4880*/ PPC::Runtime::ASM::beq(.L_800A7A94);
/*800A7A84 000A4884*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800A7A88 000A4888*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*800A7A8C 000A488C*/ PPC::Runtime::ASM::li(context->r4, 0x395);
/*800A7A90 000A4890*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A7A94, 0x800A7A94) //this is a jump label
/*800A7A94 000A4894*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*800A7A98 000A4898*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800A7A9C 000A489C*/ PPC::Runtime::ASM::bl(fn_800A718C);
/*800A7AA0 000A48A0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800A7AA4, 0x800A7AA4) //this is a jump label
/*800A7AA4 000A48A4*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800A7AA8 000A48A8*/ PPC::Runtime::ASM::bne(.L_800A7A78);
RUNTIME_PPC_JUMP_LABEL(.L_800A7AAC, 0x800A7AAC) //this is a jump label
/*800A7AAC 000A48AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A7AB0 000A48B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A7AB4 000A48B4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A7AB8 000A48B8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A7ABC 000A48BC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A7AC0 000A48C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A7AC4 000A48C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A7AC8 000A48C8*/ PPC::Runtime::ASM::blr();
}