//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800B7FDC(PPC::Runtime::GCContext* context)
{
/*800B7FDC 000B4DDC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800B7FE0 000B4DE0*/ PPC::Runtime::ASM::blt(.L_800B7FEC);
/*800B7FE4 000B4DE4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800B7FE8 000B4DE8*/ PPC::Runtime::ASM::blt(.L_800B7FF4);
RUNTIME_PPC_JUMP_LABEL(.L_800B7FEC, 0x800B7FEC) //this is a jump label
/*800B7FEC 000B4DEC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B7FF0 000B4DF0*/ PPC::Runtime::ASM::b(.L_800B8008);
RUNTIME_PPC_JUMP_LABEL(.L_800B7FF4, 0x800B7FF4) //this is a jump label
/*800B7FF4 000B4DF4*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B7FF8 000B4DF8*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800B7FFC 000B4DFC*/ PPC::Runtime::ASM::addi(context->r3, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B8000 000B4E00*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800B8004 000B4E04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B8008, 0x800B8008) //this is a jump label
/*800B8008 000B4E08*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B800C 000B4E0C*/ PPC::Runtime::ASM::beq(.L_800B8018);
/*800B8010 000B4E10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800B8014 000B4E14*/ PPC::Runtime::ASM::b(.L_800B801C);
RUNTIME_PPC_JUMP_LABEL(.L_800B8018, 0x800B8018) //this is a jump label
/*800B8018 000B4E18*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800B801C, 0x800B801C) //this is a jump label
/*800B801C 000B4E1C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B8020 000B4E20*/ PPC::Runtime::ASM::bne(.L_800B802C);
/*800B8024 000B4E24*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B8028 000B4E28*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800B802C, 0x800B802C) //this is a jump label
/*800B802C 000B4E2C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/* 800B8030 000B4E30  54 00 E7 FF */ extrwi. context->r0 , context->r0 , 1 , 27
/*800B8034 000B4E34*/ PPC::Runtime::ASM::beq(.L_800B8040);
/*800B8038 000B4E38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B803C 000B4E3C*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800B8040, 0x800B8040) //this is a jump label
/*800B8040 000B4E40*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x71, context->r3));
/*800B8044 000B4E44*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*800B8048 000B4E48*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*800B804C 000B4E4C*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*800B8050 000B4E50*/ PPC::Runtime::ASM::blr();
}