//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80057514(PPC::Runtime::GCContext* context)
{
/*80057514 00054314*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80057518 00054318*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005751C 0005431C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80057520 00054320*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80057524 00054324*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80057528 00054328*/ PPC::Runtime::ASM::b(.L_80057564);
RUNTIME_PPC_JUMP_LABEL(.L_8005752C, 0x8005752C) //this is a jump label
/*8005752C 0005432C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/* 80057530 00054330  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*80057534 00054334*/ PPC::Runtime::ASM::bne(.L_80057550);
/*80057538 00054338*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005753C 0005433C*/ PPC::Runtime::ASM::bl(fn_HSD_LObjGetFlags);
/*80057540 00054340*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 26, 26);
/*80057544 00054344*/ PPC::Runtime::ASM::bne(.L_80057550);
/*80057548 00054348*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8005754C 0005434C*/ PPC::Runtime::ASM::b(.L_80057584);
RUNTIME_PPC_JUMP_LABEL(.L_80057550, 0x80057550) //this is a jump label
/*80057550 00054350*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80057554 00054354*/ PPC::Runtime::ASM::bne(.L_80057560);
/*80057558 00054358*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8005755C 0005435C*/ PPC::Runtime::ASM::b(.L_80057564);
RUNTIME_PPC_JUMP_LABEL(.L_80057560, 0x80057560) //this is a jump label
/*80057560 00054360*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80057564, 0x80057564) //this is a jump label
/*80057564 00054364*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80057568 00054368*/ PPC::Runtime::ASM::bne(.L_8005752C);
/*8005756C 0005436C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_185 @ Get_MemoryOffset_HighBit);
/*80057570 00054370*/ PPC::Runtime::ASM::li(context->r4, 0x2e);
/*80057574 00054374*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_185 @ Get_MemoryOffset_LowBit);
/*80057578 00054378*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5238 @ Get_MemoryOffset_SDA21);
/*8005757C 0005437C*/ PPC::Runtime::ASM::bl(fn___assert);
/*80057580 00054380*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80057584, 0x80057584) //this is a jump label
/*80057584 00054384*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80057588 00054388*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8005758C 0005438C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80057590 00054390*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80057594 00054394*/ PPC::Runtime::ASM::blr();
}