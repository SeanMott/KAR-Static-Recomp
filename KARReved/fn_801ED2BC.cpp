//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D7E5C.hpp"



void fn_801ED2BC(PPC::Runtime::GCContext* context)
{
/*801ED2BC 001EA0BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ED2C0 001EA0C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ED2C4 001EA0C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1E80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801ED2C8 001EA0C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ED2CC 001EA0CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ED2D0 001EA0D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801ED2D4 001EA0D4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801ED2D8 001EA0D8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x390, context->r3));
/*801ED2DC 001EA0DC*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*801ED2E0 001EA0E0*/ PPC::Runtime::ASM::bne(.L_801ED318);
/*801ED2E4 001EA0E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r30));
/*801ED2E8 001EA0E8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
/*801ED2EC 001EA0EC*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*801ED2F0 001EA0F0*/ PPC::Runtime::ASM::bne(.L_801ED318);
/*801ED2F4 001EA0F4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x324);
/*801ED2F8 001EA0F8*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801ED2FC 001EA0FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*801ED300 001EA100*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801ED304 001EA104*/ PPC::Runtime::ASM::bge(.L_801ED318);
/*801ED308 001EA108*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r30));
/*801ED30C 001EA10C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801ED310 001EA110*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*801ED314 001EA114*/ PPC::Runtime::ASM::bl(fn_801D7E5C);
RUNTIME_PPC_JUMP_LABEL(.L_801ED318, 0x801ED318) //this is a jump label
/*801ED318 001EA118*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ED31C 001EA11C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ED320 001EA120*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801ED324 001EA124*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ED328 001EA128*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ED32C 001EA12C*/ PPC::Runtime::ASM::blr();
}