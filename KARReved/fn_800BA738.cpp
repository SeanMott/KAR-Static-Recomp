//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800B5AF0.hpp"



void fn_800BA738(PPC::Runtime::GCContext* context)
{
/*800BA738 000B7538*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800BA73C 000B753C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BA740 000B7540*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800BA744 000B7544*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BA748 000B7548*/ PPC::Runtime::ASM::blt(.L_800BA754);
/*800BA74C 000B754C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800BA750 000B7550*/ PPC::Runtime::ASM::blt(.L_800BA75C);
RUNTIME_PPC_JUMP_LABEL(.L_800BA754, 0x800BA754) //this is a jump label
/*800BA754 000B7554*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BA758 000B7558*/ PPC::Runtime::ASM::b(.L_800BA770);
RUNTIME_PPC_JUMP_LABEL(.L_800BA75C, 0x800BA75C) //this is a jump label
/*800BA75C 000B755C*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BA760 000B7560*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800BA764 000B7564*/ PPC::Runtime::ASM::addi(context->r3, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BA768 000B7568*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800BA76C 000B756C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800BA770, 0x800BA770) //this is a jump label
/*800BA770 000B7570*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BA774 000B7574*/ PPC::Runtime::ASM::beq(.L_800BA780);
/*800BA778 000B7578*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BA77C 000B757C*/ PPC::Runtime::ASM::b(.L_800BA784);
RUNTIME_PPC_JUMP_LABEL(.L_800BA780, 0x800BA780) //this is a jump label
/*800BA780 000B7580*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BA784, 0x800BA784) //this is a jump label
/*800BA784 000B7584*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BA788 000B7588*/ PPC::Runtime::ASM::beq(.L_800BA794);
/*800BA78C 000B758C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800BA790 000B7590*/ PPC::Runtime::ASM::b(.L_800BA798);
RUNTIME_PPC_JUMP_LABEL(.L_800BA794, 0x800BA794) //this is a jump label
/*800BA794 000B7594*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BA798, 0x800BA798) //this is a jump label
/*800BA798 000B7598*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BA79C 000B759C*/ PPC::Runtime::ASM::beq(.L_800BA7A4);
/*800BA7A0 000B75A0*/ PPC::Runtime::ASM::bl(fn_800B5AF0);
RUNTIME_PPC_JUMP_LABEL(.L_800BA7A4, 0x800BA7A4) //this is a jump label
/*800BA7A4 000B75A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BA7A8 000B75A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BA7AC 000B75AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800BA7B0 000B75B0*/ PPC::Runtime::ASM::blr();
}