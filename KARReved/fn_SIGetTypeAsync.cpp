//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "SIGetType.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_SIGetTypeAsync(PPC::Runtime::GCContext* context)
{
/*803E9D20 003E6B20*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E9D24 003E6B24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E9D28 003E6B28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E9D2C 003E6B2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E9D30 003E6B30*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x0);
/*803E9D34 003E6B34*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E9D38 003E6B38*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E9D3C 003E6B3C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E9D40 003E6B40*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*803E9D44 003E6B44*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E9D48 003E6B48*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803E9D4C 003E6B4C*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*803E9D50 003E6B50*/ PPC::Runtime::ASM::bl(SIGetType);
/*803E9D54 003E6B54*/ PPC::Runtime::ASM::lis(context->r4, Type_804FCC38 @ Get_MemoryOffset_HighBit);
/*803E9D58 003E6B58*/ PPC::Runtime::ASM::slwi(context->r5, context->r28, 2);
/*803E9D5C 003E6B5C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, Type_804FCC38 @ Get_MemoryOffset_LowBit);
/*803E9D60 003E6B60*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r5);
/*803E9D64 003E6B64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803E9D68 003E6B68*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803E9D6C 003E6B6C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 24, 24);
/*803E9D70 003E6B70*/ PPC::Runtime::ASM::beq(.L_803E9E1C);
/*803E9D74 003E6B74*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056E888 @ Get_MemoryOffset_HighBit);
/*803E9D78 003E6B78*/ PPC::Runtime::ASM::slwi(context->r4, context->r28, 4);
/*803E9D7C 003E6B7C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_8056E888 @ Get_MemoryOffset_LowBit);
/*803E9D80 003E6B80*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r4);
/*803E9D84 003E6B84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803E9D88 003E6B88*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803E9D8C 003E6B8C*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*803E9D90 003E6B90*/ PPC::Runtime::ASM::beq(.L_803E9E30);
/*803E9D94 003E6B94*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E9D98 003E6B98*/ PPC::Runtime::ASM::bne(.L_803E9DA8);
/*803E9D9C 003E6B9C*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*803E9DA0 003E6BA0*/ PPC::Runtime::ASM::stwx(context->r31, context->r4, context->r0);
/*803E9DA4 003E6BA4*/ PPC::Runtime::ASM::b(.L_803E9E30);
RUNTIME_PPC_JUMP_LABEL(.L_803E9DA8, 0x803E9DA8) //this is a jump label
/*803E9DA8 003E6BA8*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x4);
/*803E9DAC 003E6BAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803E9DB0 003E6BB0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803E9DB4 003E6BB4*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*803E9DB8 003E6BB8*/ PPC::Runtime::ASM::beq(.L_803E9E30);
/*803E9DBC 003E6BBC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E9DC0 003E6BC0*/ PPC::Runtime::ASM::bne(.L_803E9DD0);
/*803E9DC4 003E6BC4*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*803E9DC8 003E6BC8*/ PPC::Runtime::ASM::stwx(context->r31, context->r4, context->r0);
/*803E9DCC 003E6BCC*/ PPC::Runtime::ASM::b(.L_803E9E30);
RUNTIME_PPC_JUMP_LABEL(.L_803E9DD0, 0x803E9DD0) //this is a jump label
/*803E9DD0 003E6BD0*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803E9DD4 003E6BD4*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803E9DD8 003E6BD8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*803E9DDC 003E6BDC*/ PPC::Runtime::ASM::beq(.L_803E9E30);
/*803E9DE0 003E6BE0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E9DE4 003E6BE4*/ PPC::Runtime::ASM::bne(.L_803E9DF4);
/*803E9DE8 003E6BE8*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*803E9DEC 003E6BEC*/ PPC::Runtime::ASM::stwx(context->r31, context->r4, context->r0);
/*803E9DF0 003E6BF0*/ PPC::Runtime::ASM::b(.L_803E9E30);
RUNTIME_PPC_JUMP_LABEL(.L_803E9DF4, 0x803E9DF4) //this is a jump label
/*803E9DF4 003E6BF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803E9DF8 003E6BF8*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*803E9DFC 003E6BFC*/ PPC::Runtime::ASM::cmplw(context->r0, context->r31);
/*803E9E00 003E6C00*/ PPC::Runtime::ASM::beq(.L_803E9E30);
/*803E9E04 003E6C04*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E9E08 003E6C08*/ PPC::Runtime::ASM::bne(.L_803E9E30);
/*803E9E0C 003E6C0C*/ PPC::Runtime::ASM::slwi(context->r0, context->r5, 2);
/*803E9E10 003E6C10*/ PPC::Runtime::ASM::stwx(context->r31, context->r4, context->r0);
/*803E9E14 003E6C14*/ PPC::Runtime::ASM::b(.L_803E9E30);
/*803E9E18 003E6C18*/ PPC::Runtime::ASM::b(.L_803E9E30);
RUNTIME_PPC_JUMP_LABEL(.L_803E9E1C, 0x803E9E1C) //this is a jump label
/*803E9E1C 003E6C1C*/ PPC::Runtime::ASM::addi(context->r12, context->r31, 0x0);
/*803E9E20 003E6C20*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E9E24 003E6C24*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*803E9E28 003E6C28*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/* 803E9E2C 003E6C2C  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E9E30, 0x803E9E30) //this is a jump label
/*803E9E30 003E6C30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803E9E34 003E6C34*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E9E38 003E6C38*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803E9E3C 003E6C3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E9E40 003E6C40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E9E44 003E6C44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E9E48 003E6C48*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E9E4C 003E6C4C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E9E50 003E6C50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E9E54 003E6C54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E9E58 003E6C58*/ PPC::Runtime::ASM::blr();
}