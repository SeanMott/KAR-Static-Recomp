//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802102D4.hpp"
#include "fn_8020FFFC.hpp"
#include "fn_802102D4.hpp"
#include "fn_8020FFFC.hpp"
#include "fn_80210B68.hpp"
#include "fn_80210B68.hpp"
#include "fn_80210B68.hpp"
#include "fn_802042FC.hpp"



void fn_8020FE74(PPC::Runtime::GCContext* context)
{
/*8020FE74 0020CC74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8020FE78 0020CC78*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020FE7C 0020CC7C*/ PPC::Runtime::ASM::lis(context->r6, fn_802102D4 @ Get_MemoryOffset_HighBit);
/*8020FE80 0020CC80*/ PPC::Runtime::ASM::lis(context->r5, fn_8020FFFC @ Get_MemoryOffset_HighBit);
/*8020FE84 0020CC84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020FE88 0020CC88*/ PPC::Runtime::ASM::addi(context->r7, context->r6, fn_802102D4 @ Get_MemoryOffset_LowBit);
/*8020FE8C 0020CC8C*/ PPC::Runtime::ASM::addi(context->r6, context->r5, fn_8020FFFC @ Get_MemoryOffset_LowBit);
/*8020FE90 0020CC90*/ PPC::Runtime::ASM::lis(context->r4, fn_80210B68 @ Get_MemoryOffset_HighBit);
/*8020FE94 0020CC94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020FE98 0020CC98*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8020FE9C 0020CC9C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_80210B68 @ Get_MemoryOffset_LowBit);
/*8020FEA0 0020CCA0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8020FEA4 0020CCA4*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xadc, context->r3));
/*8020FEA8 0020CCA8*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xae0, context->r3));
/*8020FEAC 0020CCAC*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xae4, context->r3));
/*8020FEB0 0020CCB0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xab4, context->r3));
/*8020FEB4 0020CCB4*/ PPC::Runtime::ASM::sth(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4e, context->r3));
/*8020FEB8 0020CCB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xad4, context->r3));
/*8020FEBC 0020CCBC*/ PPC::Runtime::ASM::bl(fn_80210B68);
/*8020FEC0 0020CCC0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8020FEC4 0020CCC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x530, context->r31));
/*8020FEC8 0020CCC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8020FECC 0020CCCC*/ PPC::Runtime::ASM::bl(fn_802042FC);
/*8020FED0 0020CCD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020FED4 0020CCD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8020FED8 0020CCD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020FEDC 0020CCDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8020FEE0 0020CCE0*/ PPC::Runtime::ASM::blr();
}