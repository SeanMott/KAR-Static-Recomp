//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F446C.hpp"
#include "fn_800FFD3C.hpp"



void fn_800FFD04(PPC::Runtime::GCContext* context)
{
/*800FFD04 000FCB04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800FFD08 000FCB08*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FFD0C 000FCB0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FFD10 000FCB10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FFD14 000FCB14*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800FFD18 000FCB18*/ PPC::Runtime::ASM::li(context->r3, 0x32);
/*800FFD1C 000FCB1C*/ PPC::Runtime::ASM::bl(fn_800F446C);
/*800FFD20 000FCB20*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800FFD24 000FCB24*/ PPC::Runtime::ASM::bl(fn_800FFD3C);
/*800FFD28 000FCB28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FFD2C 000FCB2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800FFD30 000FCB30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FFD34 000FCB34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800FFD38 000FCB38*/ PPC::Runtime::ASM::blr();
}