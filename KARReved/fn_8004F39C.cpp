//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80281F10.hpp"
#include "fn_80281ECC.hpp"



void fn_8004F39C(PPC::Runtime::GCContext* context)
{
/*8004F39C 0004C19C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8004F3A0 0004C1A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8004F3A4 0004C1A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004F3A8 0004C1A8*/ PPC::Runtime::ASM::bl(fn_80281F10);
/*8004F3AC 0004C1AC*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*8004F3B0 0004C1B0*/ PPC::Runtime::ASM::bl(fn_80281ECC);
/*8004F3B4 0004C1B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004F3B8 0004C1B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8004F3BC 0004C1BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8004F3C0 0004C1C0*/ PPC::Runtime::ASM::blr();
}