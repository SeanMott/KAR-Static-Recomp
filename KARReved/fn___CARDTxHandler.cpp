//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "EXIDeselect.hpp"
#include "EXIUnlock.hpp"
#include "fn_EXIProbe.hpp"



void fn___CARDTxHandler(PPC::Runtime::GCContext* context)
{
/*803E2050 003DEE50*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E2054 003DEE54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E2058 003DEE58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803E205C 003DEE5C*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E2060 003DEE60*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*803E2064 003DEE64*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E2068 003DEE68*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E206C 003DEE6C*/ PPC::Runtime::ASM::mulli(context->r4, context->r27, 0x110);
/*803E2070 003DEE70*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803E2074 003DEE74*/ PPC::Runtime::ASM::add(context->r29, context->r0, context->r4);
/*803E2078 003DEE78*/ PPC::Runtime::ASM::bl(EXIDeselect);
/*803E207C 003DEE7C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E2080 003DEE80*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803E2084 003DEE84*/ PPC::Runtime::ASM::srwi(context->r31, context->r0, 5);
/*803E2088 003DEE88*/ PPC::Runtime::ASM::bl(EXIUnlock);
/*803E208C 003DEE8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r29));
/*803E2090 003DEE90*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803E2094 003DEE94*/ PPC::Runtime::ASM::mr(context->r28, context->r0);
/*803E2098 003DEE98*/ PPC::Runtime::ASM::beq(.L_803E20E4);
/*803E209C 003DEE9C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803E20A0 003DEEA0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803E20A4 003DEEA4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r29));
/*803E20A8 003DEEA8*/ PPC::Runtime::ASM::bne(.L_803E20C0);
/*803E20AC 003DEEAC*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803E20B0 003DEEB0*/ PPC::Runtime::ASM::bl(fn_EXIProbe);
/*803E20B4 003DEEB4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E20B8 003DEEB8*/ PPC::Runtime::ASM::beq(.L_803E20C0);
/*803E20BC 003DEEBC*/ PPC::Runtime::ASM::li(context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803E20C0, 0x803E20C0) //this is a jump label
/*803E20C0 003DEEC0*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*803E20C4 003DEEC4*/ PPC::Runtime::ASM::beq(.L_803E20D0);
/*803E20C8 003DEEC8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E20CC 003DEECC*/ PPC::Runtime::ASM::b(.L_803E20D4);
RUNTIME_PPC_JUMP_LABEL(.L_803E20D0, 0x803E20D0) //this is a jump label
/*803E20D0 003DEED0*/ PPC::Runtime::ASM::li(context->r4, -0x3);
RUNTIME_PPC_JUMP_LABEL(.L_803E20D4, 0x803E20D4) //this is a jump label
/*803E20D4 003DEED4*/ PPC::Runtime::ASM::addi(context->r12, context->r28, 0x0);
/*803E20D8 003DEED8*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E20DC 003DEEDC*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/* 803E20E0 003DEEE0  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E20E4, 0x803E20E4) //this is a jump label
/*803E20E4 003DEEE4*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E20E8 003DEEE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803E20EC 003DEEEC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803E20F0 003DEEF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E20F4 003DEEF4*/ PPC::Runtime::ASM::blr();
}