//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8019F850.hpp"



void fn_80191C38(PPC::Runtime::GCContext* context)
{
/*80191C38 0018EA38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80191C3C 0018EA3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80191C40 0018EA40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80191C44 0018EA44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80191C48 0018EA48*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80191C4C 0018EA4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*80191C50 0018EA50*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1a);
/*80191C54 0018EA54*/ PPC::Runtime::ASM::beq(.L_80191C70);
/*80191C58 0018EA58*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80191C5C 0018EA5C*/ PPC::Runtime::ASM::bl(fn_8019F850);
/*80191C60 0018EA60*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x825, context->r31));
/*80191C64 0018EA64*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80191C68 0018EA68*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*80191C6C 0018EA6C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x825, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80191C70, 0x80191C70) //this is a jump label
/*80191C70 0018EA70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80191C74 0018EA74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80191C78 0018EA78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80191C7C 0018EA7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80191C80 0018EA80*/ PPC::Runtime::ASM::blr();
}