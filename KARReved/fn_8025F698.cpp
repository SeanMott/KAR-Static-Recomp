//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025F698(PPC::Runtime::GCContext* context)
{
/*8025F698 0025C498*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025F69C 0025C49C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025F6A0 0025C4A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F6A4 0025C4A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F6A8 0025C4A8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025F6AC 0025C4AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025F6B0 0025C4B0*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025F6B4 0025C4B4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F6B8 0025C4B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025F6BC 0025C4BC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F4C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025F6C0 0025C4C0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025F6C4 0025C4C4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025F6C8 0025C4C8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025F6CC 0025C4CC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025F6D0 0025C4D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025F6D4 0025C4D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025F6D8 0025C4D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025F6DC 0025C4DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025F6E0 0025C4E0*/ PPC::Runtime::ASM::blr();
}