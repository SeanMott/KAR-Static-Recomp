//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000AF38.hpp"



void fn_801DECBC(PPC::Runtime::GCContext* context)
{
/*801DECBC 001DBABC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801DECC0 001DBAC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DECC4 001DBAC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DECC8 001DBAC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DECCC 001DBACC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801DECD0 001DBAD0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DECD4 001DBAD4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DECD8 001DBAD8*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*801DECDC 001DBADC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DECE0 001DBAE0*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801DECE4 001DBAE4*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DD860 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DECE8 001DBAE8*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*801DECEC 001DBAEC*/ PPC::Runtime::ASM::beq(.L_801DED6C);
/*801DECF0 001DBAF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r6));
/*801DECF4 001DBAF4*/ PPC::Runtime::ASM::bl(fn_8000AF38);
/*801DECF8 001DBAF8*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*801DECFC 001DBAFC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801DED00 001DBB00*/ PPC::Runtime::ASM::bne(.L_801DED18);
/*801DED04 001DBB04*/ PPC::Runtime::ASM::add(context->r4, context->r30, context->r28);
/*801DED08 001DBB08*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r4));
/*801DED0C 001DBB0C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*801DED10 001DBB10*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r4));
/*801DED14 001DBB14*/ PPC::Runtime::ASM::b(.L_801DED6C);
RUNTIME_PPC_JUMP_LABEL(.L_801DED18, 0x801DED18) //this is a jump label
/*801DED18 001DBB18*/ PPC::Runtime::ASM::cmpwi(context->r31, -0x1);
/*801DED1C 001DBB1C*/ PPC::Runtime::ASM::beq(.L_801DED6C);
/*801DED20 001DBB20*/ PPC::Runtime::ASM::add(context->r31, context->r30, context->r31);
/*801DED24 001DBB24*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801DED28 001DBB28*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*801DED2C 001DBB2C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x80);
/*801DED30 001DBB30*/ PPC::Runtime::ASM::blt(.L_801DED4C);
/*801DED34 001DBB34*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0E10 @ Get_MemoryOffset_HighBit);
/*801DED38 001DBB38*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0E20 @ Get_MemoryOffset_HighBit);
/*801DED3C 001DBB3C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0E10 @ Get_MemoryOffset_LowBit);
/*801DED40 001DBB40*/ PPC::Runtime::ASM::li(context->r4, 0x263);
/*801DED44 001DBB44*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0E20 @ Get_MemoryOffset_LowBit);
/*801DED48 001DBB48*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DED4C, 0x801DED4C) //this is a jump label
/*801DED4C 001DBB4C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801DED50 001DBB50*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*801DED54 001DBB54*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*801DED58 001DBB58*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801DED5C 001DBB5C*/ PPC::Runtime::ASM::bne(.L_801DED6C);
/*801DED60 001DBB60*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*801DED64 001DBB64*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*801DED68 001DBB68*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801DED6C, 0x801DED6C) //this is a jump label
/*801DED6C 001DBB6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DED70 001DBB70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DED74 001DBB74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DED78 001DBB78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DED7C 001DBB7C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DED80 001DBB80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DED84 001DBB84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801DED88 001DBB88*/ PPC::Runtime::ASM::blr();
}