//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80075D90.hpp"



void fn_8007859C(PPC::Runtime::GCContext* context)
{
/*8007859C 0007539C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800785A0 000753A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800785A4 000753A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800785A8 000753A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800785AC 000753AC*/ PPC::Runtime::ASM::bl(fn_80075D90);
/*800785B0 000753B0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800785B4 000753B4*/ PPC::Runtime::ASM::beq(.L_800785EC);
/*800785B8 000753B8*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1805DD5E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800785BC 000753BC*/ PPC::Runtime::ASM::b(.L_800785DC);
RUNTIME_PPC_JUMP_LABEL(.L_800785C0, 0x800785C0) //this is a jump label
/*800785C0 000753C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800785C4 000753C4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800785C8 000753C8*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800785CC 000753CC*/ PPC::Runtime::ASM::beq(.L_800785D8);
/*800785D0 000753D0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800785D4 000753D4*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800785D8, 0x800785D8) //this is a jump label
/*800785D8 000753D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800785DC, 0x800785DC) //this is a jump label
/*800785DC 000753DC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800785E0 000753E0*/ PPC::Runtime::ASM::bne(.L_800785C0);
/*800785E4 000753E4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800785E8 000753E8*/ PPC::Runtime::ASM::b(.L_800785F0);
RUNTIME_PPC_JUMP_LABEL(.L_800785EC, 0x800785EC) //this is a jump label
/*800785EC 000753EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800785F0, 0x800785F0) //this is a jump label
/*800785F0 000753F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800785F4 000753F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800785F8 000753F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800785FC 000753FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80078600 00075400*/ PPC::Runtime::ASM::blr();
}