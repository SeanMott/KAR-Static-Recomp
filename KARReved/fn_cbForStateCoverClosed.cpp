//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__DVDStoreErrorCode.hpp"
#include "DVDReset.hpp"
#include "cbForStateError.hpp"
#include "fn_stateCheckID.hpp"
#include "fn_cbForStateGettingError.hpp"
#include "fn_cbForStateGettingError.hpp"
#include "fn_DVDLowRequestError.hpp"



void fn_cbForStateCoverClosed(PPC::Runtime::GCContext* context)
{
/*803C6660 003C3460*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C6664 003C3464*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x10);
/*803C6668 003C3468*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C666C 003C346C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*803C6670 003C3470*/ PPC::Runtime::ASM::bne(.L_803C669C);
/*803C6674 003C3474*/ PPC::Runtime::ASM::lwz(context->r4, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C6678 003C3478*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*803C667C 003C347C*/ PPC::Runtime::ASM::lis(context->r3, 0x123);
/*803C6680 003C3480*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*803C6684 003C3484*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4568);
/*803C6688 003C3488*/ PPC::Runtime::ASM::bl(__DVDStoreErrorCode);
/*803C668C 003C348C*/ PPC::Runtime::ASM::bl(DVDReset);
/*803C6690 003C3490*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803C6694 003C3494*/ PPC::Runtime::ASM::bl(cbForStateError);
/*803C6698 003C3498*/ PPC::Runtime::ASM::b(.L_803C66C0);
RUNTIME_PPC_JUMP_LABEL(.L_803C669C, 0x803C669C) //this is a jump label
/* 803C669C 003C349C  54 60 07 FF */ clrlwi. context->r0 , context->r3 , 31
/*803C66A0 003C34A0*/ PPC::Runtime::ASM::beq(.L_803C66B4);
/*803C66A4 003C34A4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C66A8 003C34A8*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDDDC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C66AC 003C34AC*/ PPC::Runtime::ASM::bl(fn_stateCheckID);
/*803C66B0 003C34B0*/ PPC::Runtime::ASM::b(.L_803C66C0);
RUNTIME_PPC_JUMP_LABEL(.L_803C66B4, 0x803C66B4) //this is a jump label
/*803C66B4 003C34B4*/ PPC::Runtime::ASM::lis(context->r3, fn_cbForStateGettingError @ Get_MemoryOffset_HighBit);
/*803C66B8 003C34B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn_cbForStateGettingError @ Get_MemoryOffset_LowBit);
/*803C66BC 003C34BC*/ PPC::Runtime::ASM::bl(fn_DVDLowRequestError);
RUNTIME_PPC_JUMP_LABEL(.L_803C66C0, 0x803C66C0) //this is a jump label
/*803C66C0 003C34C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803C66C4 003C34C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*803C66C8 003C34C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C66CC 003C34CC*/ PPC::Runtime::ASM::blr();
}