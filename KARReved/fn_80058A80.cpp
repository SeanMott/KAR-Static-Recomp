//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80057924.hpp"



void fn_80058A80(PPC::Runtime::GCContext* context)
{
/*80058A80 00055880*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80058A84 00055884*/ PPC::Runtime::ASM::mflr(context->r0);
/*80058A88 00055888*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80058A8C 0005588C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80058A90 00055890*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*80058A94 00055894*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_175 @ Get_MemoryOffset_HighBit);
/*80058A98 00055898*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_175 @ Get_MemoryOffset_LowBit);
/*80058A9C 0005589C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x160);
/*80058AA0 000558A0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058AA4 000558A4*/ PPC::Runtime::ASM::bl(OSReport);
/*80058AA8 000558A8*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_HighBit);
/*80058AAC 000558AC*/ PPC::Runtime::ASM::addi(context->r29, context->r31, 0x138);
/*80058AB0 000558B0*/ PPC::Runtime::ASM::addi(context->r28, context->r3, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_LowBit);
/*80058AB4 000558B4*/ PPC::Runtime::ASM::li(context->r26, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80058AB8, 0x80058AB8) //this is a jump label
/*80058AB8 000558B8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80058ABC 000558BC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5258 @ Get_MemoryOffset_SDA21);
/*80058AC0 000558C0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058AC4 000558C4*/ PPC::Runtime::ASM::bl(OSReport);
/*80058AC8 000558C8*/ PPC::Runtime::ASM::addi(context->r27, context->r28, 0x10);
/*80058ACC 000558CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*80058AD0 000558D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80058AD4 000558D4*/ PPC::Runtime::ASM::bne(.L_80058B34);
/*80058AD8 000558D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r27));
/*80058ADC 000558DC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80058AE0 000558E0*/ PPC::Runtime::ASM::bne(.L_80058AF4);
/*80058AE4 000558E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*80058AE8 000558E8*/ PPC::Runtime::ASM::bl(fn_OSCheckHeap);
/*80058AEC 000558EC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80058AF0 000558F0*/ PPC::Runtime::ASM::b(.L_80058B00);
RUNTIME_PPC_JUMP_LABEL(.L_80058AF4, 0x80058AF4) //this is a jump label
/*80058AF4 000558F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
/*80058AF8 000558F8*/ PPC::Runtime::ASM::bl(fn_80057924);
/*80058AFC 000558FC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_80058B00, 0x80058B00) //this is a jump label
/*80058B00 00055900*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r27));
/*80058B04 00055904*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x178);
/*80058B08 00055908*/ PPC::Runtime::ASM::subf(context->r0, context->r30, context->r0);
/*80058B0C 0005590C*/ PPC::Runtime::ASM::srwi(context->r4, context->r0, 10);
/*80058B10 00055910*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058B14 00055914*/ PPC::Runtime::ASM::bl(OSReport);
/*80058B18 00055918*/ PPC::Runtime::ASM::srawi(context->r0, context->r30, 10);
/*80058B1C 0005591C*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*80058B20 00055920*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x184);
/*80058B24 00055924*/ PPC::Runtime::ASM::addze(context->r4, context->r0);
/*80058B28 00055928*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058B2C 0005592C*/ PPC::Runtime::ASM::bl(OSReport);
/*80058B30 00055930*/ PPC::Runtime::ASM::b(.L_80058B40);
RUNTIME_PPC_JUMP_LABEL(.L_80058B34, 0x80058B34) //this is a jump label
/*80058B34 00055934*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x194);
/*80058B38 00055938*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058B3C 0005593C*/ PPC::Runtime::ASM::bl(OSReport);
RUNTIME_PPC_JUMP_LABEL(.L_80058B40, 0x80058B40) //this is a jump label
/*80058B40 00055940*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r27));
/*80058B44 00055944*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1b8);
/*80058B48 00055948*/ PPC::Runtime::ASM::srwi(context->r4, context->r5, 10);
/*80058B4C 0005594C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058B50 00055950*/ PPC::Runtime::ASM::bl(OSReport);
/*80058B54 00055954*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r27));
/*80058B58 00055958*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1c4);
/*80058B5C 0005595C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r27));
/*80058B60 00055960*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r0);
/*80058B64 00055964*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058B68 00055968*/ PPC::Runtime::ASM::bl(OSReport);
/*80058B6C 0005596C*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
/*80058B70 00055970*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1c);
/*80058B74 00055974*/ PPC::Runtime::ASM::cmpwi(context->r26, 0xa);
/*80058B78 00055978*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*80058B7C 0005597C*/ PPC::Runtime::ASM::blt(.L_80058AB8);
/*80058B80 00055980*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_HighBit);
/*80058B84 00055984*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1d0);
/*80058B88 00055988*/ PPC::Runtime::ASM::addi(context->r5, context->r4, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_LowBit);
/*80058B8C 0005598C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80058B90 00055990*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80058B94 00055994*/ PPC::Runtime::ASM::subf(context->r5, context->r4, context->r0);
/*80058B98 00055998*/ PPC::Runtime::ASM::srawi(context->r0, context->r5, 10);
/*80058B9C 0005599C*/ PPC::Runtime::ASM::addze(context->r4, context->r0);
/*80058BA0 000559A0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058BA4 000559A4*/ PPC::Runtime::ASM::bl(OSReport);
/*80058BA8 000559A8*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_HighBit);
/*80058BAC 000559AC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1f0);
/*80058BB0 000559B0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, STRUCT_BYTE4_COUNT_180537F40 @ Get_MemoryOffset_LowBit);
/*80058BB4 000559B4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*80058BB8 000559B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*80058BBC 000559BC*/ PPC::Runtime::ASM::subf(context->r5, context->r4, context->r0);
/*80058BC0 000559C0*/ PPC::Runtime::ASM::srawi(context->r0, context->r5, 10);
/*80058BC4 000559C4*/ PPC::Runtime::ASM::addze(context->r4, context->r0);
/*80058BC8 000559C8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80058BCC 000559CC*/ PPC::Runtime::ASM::bl(OSReport);
/*80058BD0 000559D0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80058BD4 000559D4*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*80058BD8 000559D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80058BDC 000559DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80058BE0 000559E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80058BE4 000559E4*/ PPC::Runtime::ASM::blr();
}