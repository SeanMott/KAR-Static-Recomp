//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"
#include "fn_801D1F50.hpp"



void fn_801D2144(PPC::Runtime::GCContext* context)
{
/*801D2144 001CEF44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D2148 001CEF48*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D214C 001CEF4C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x1);
/*801D2150 001CEF50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D2154 001CEF54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D2158 001CEF58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D215C 001CEF5C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801D2160 001CEF60*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r3));
/*801D2164 001CEF64*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3a, context->r3));
/*801D2168 001CEF68*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r5, 31);
/*801D216C 001CEF6C*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 1, 24);
/*801D2170 001CEF70*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*801D2174 001CEF74*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*801D2178 001CEF78*/ PPC::Runtime::ASM::srwi(context->r31, context->r0, 5);
/*801D217C 001CEF7C*/ PPC::Runtime::ASM::beq(.L_801D21FC);
/*801D2180 001CEF80*/ PPC::Runtime::ASM::bge(.L_801D2190);
/*801D2184 001CEF84*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*801D2188 001CEF88*/ PPC::Runtime::ASM::bge(.L_801D219C);
/*801D218C 001CEF8C*/ PPC::Runtime::ASM::b(.L_801D22B8);
RUNTIME_PPC_JUMP_LABEL(.L_801D2190, 0x801D2190) //this is a jump label
/*801D2190 001CEF90*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x3);
/*801D2194 001CEF94*/ PPC::Runtime::ASM::bge(.L_801D22B8);
/*801D2198 001CEF98*/ PPC::Runtime::ASM::b(.L_801D225C);
RUNTIME_PPC_JUMP_LABEL(.L_801D219C, 0x801D219C) //this is a jump label
/*801D219C 001CEF9C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801D21A0 001CEFA0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D21A4 001CEFA4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D21A8 001CEFA8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D21AC 001CEFAC*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801D21B0 001CEFB0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D21B4 001CEFB4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D21B8 001CEFB8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D21BC 001CEFBC*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*801D21C0 001CEFC0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D21C4 001CEFC4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D21C8 001CEFC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D21CC 001CEFCC*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*801D21D0 001CEFD0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D21D4 001CEFD4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D21D8 001CEFD8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D21DC 001CEFDC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801D21E0 001CEFE0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801D21E4 001CEFE4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D21E8 001CEFE8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D21EC 001CEFEC*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*801D21F0 001CEFF0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801D21F4 001CEFF4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D21F8 001CEFF8*/ PPC::Runtime::ASM::b(.L_801D22B8);
RUNTIME_PPC_JUMP_LABEL(.L_801D21FC, 0x801D21FC) //this is a jump label
/*801D21FC 001CEFFC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801D2200 001CF000*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2204 001CF004*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2208 001CF008*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D220C 001CF00C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801D2210 001CF010*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2214 001CF014*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2218 001CF018*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D221C 001CF01C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*801D2220 001CF020*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2224 001CF024*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2228 001CF028*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D222C 001CF02C*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*801D2230 001CF030*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2234 001CF034*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2238 001CF038*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D223C 001CF03C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801D2240 001CF040*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801D2244 001CF044*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2248 001CF048*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D224C 001CF04C*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*801D2250 001CF050*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801D2254 001CF054*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2258 001CF058*/ PPC::Runtime::ASM::b(.L_801D22B8);
RUNTIME_PPC_JUMP_LABEL(.L_801D225C, 0x801D225C) //this is a jump label
/*801D225C 001CF05C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801D2260 001CF060*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2264 001CF064*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2268 001CF068*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D226C 001CF06C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801D2270 001CF070*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2274 001CF074*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2278 001CF078*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D227C 001CF07C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801D2280 001CF080*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2284 001CF084*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2288 001CF088*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D228C 001CF08C*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*801D2290 001CF090*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801D2294 001CF094*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D2298 001CF098*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D229C 001CF09C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*801D22A0 001CF0A0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801D22A4 001CF0A4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
/*801D22A8 001CF0A8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801D22AC 001CF0AC*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*801D22B0 001CF0B0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*801D22B4 001CF0B4*/ PPC::Runtime::ASM::bl(fn_801D1F50);
RUNTIME_PPC_JUMP_LABEL(.L_801D22B8, 0x801D22B8) //this is a jump label
/*801D22B8 001CF0B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D22BC 001CF0BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D22C0 001CF0C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801D22C4 001CF0C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D22C8 001CF0C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D22CC 001CF0CC*/ PPC::Runtime::ASM::blr();
}