//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_strcpy.hpp"
#include "strlen.hpp"
#include "strchr.hpp"
#include "fn_80482D48.hpp"
#include "fn_80482D48.hpp"
#include "memmove.hpp"
#include "fn_strcpy.hpp"
#include "strlen.hpp"
#include "fn_strcpy.hpp"
#include "fn_strcpy.hpp"



void fn_80483CC0(PPC::Runtime::GCContext* context)
{
/*80483CC0 00480AC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80483CC4 00480AC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80483CC8 00480AC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*80483CCC 00480ACC*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80483CD0 00480AD0*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*80483CD4 00480AD4*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*80483CD8 00480AD8*/ PPC::Runtime::ASM::addi(context->r31, context->r5, 0x0);
/*80483CDC 00480ADC*/ PPC::Runtime::ASM::addi(context->r29, context->r6, 0x0);
/*80483CE0 00480AE0*/ PPC::Runtime::ASM::addi(context->r30, context->r27, 0x0);
/*80483CE4 00480AE4*/ PPC::Runtime::ASM::bl(fn_strcpy);
/*80483CE8 00480AE8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80483CEC 00480AEC*/ PPC::Runtime::ASM::bl(strlen);
/*80483CF0 00480AF0*/ PPC::Runtime::ASM::add(context->r27, context->r27, context->r3);
/*80483CF4 00480AF4*/ PPC::Runtime::ASM::li(context->r0, 0x20);
/*80483CF8 00480AF8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*80483CFC 00480AFC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80483D00 00480B00*/ PPC::Runtime::ASM::li(context->r4, 0x3c);
/*80483D04 00480B04*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*80483D08 00480B08*/ PPC::Runtime::ASM::bl(strchr);
/*80483D0C 00480B0C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80483D10 00480B10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80483D14 00480B14*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80483D18 00480B18*/ PPC::Runtime::ASM::beq(.L_80483D34);
/*80483D1C 00480B1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*80483D20 00480B20*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x18);
/*80483D24 00480B24*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x1c);
/*80483D28 00480B28*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_332 @ Get_MemoryOffset_SDA21);
/*80483D2C 00480B2C*/ PPC::Runtime::ASM::bl(fn_80482D48);
/*80483D30 00480B30*/ PPC::Runtime::ASM::b(.L_80483D48);
RUNTIME_PPC_JUMP_LABEL(.L_80483D34, 0x80483D34) //this is a jump label
/*80483D34 00480B34*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80483D38 00480B38*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x18);
/*80483D3C 00480B3C*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x1c);
/*80483D40 00480B40*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_331 @ Get_MemoryOffset_SDA21);
/*80483D44 00480B44*/ PPC::Runtime::ASM::bl(fn_80482D48);
RUNTIME_PPC_JUMP_LABEL(.L_80483D48, 0x80483D48) //this is a jump label
/*80483D48 00480B48*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80483D4C 00480B4C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*80483D50 00480B50*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80483D54 00480B54*/ PPC::Runtime::ASM::bl(memmove);
/*80483D58 00480B58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80483D5C 00480B5C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80483D60 00480B60*/ PPC::Runtime::ASM::stbx(context->r3, context->r27, context->r0);
/*80483D64 00480B64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80483D68 00480B68*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80483D6C 00480B6C*/ PPC::Runtime::ASM::bgt(.L_80483D78);
/*80483D70 00480B70*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*80483D74 00480B74*/ PPC::Runtime::ASM::b(.L_80483DC0);
RUNTIME_PPC_JUMP_LABEL(.L_80483D78, 0x80483D78) //this is a jump label
/*80483D78 00480B78*/ PPC::Runtime::ASM::add(context->r27, context->r27, context->r0);
/*80483D7C 00480B7C*/ PPC::Runtime::ASM::li(context->r0, 0x20);
/*80483D80 00480B80*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*80483D84 00480B84*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*80483D88 00480B88*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*80483D8C 00480B8C*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*80483D90 00480B90*/ PPC::Runtime::ASM::bl(fn_strcpy);
/*80483D94 00480B94*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80483D98 00480B98*/ PPC::Runtime::ASM::bl(strlen);
/*80483D9C 00480B9C*/ PPC::Runtime::ASM::add(context->r27, context->r27, context->r3);
/*80483DA0 00480BA0*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*80483DA4 00480BA4*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_329 @ Get_MemoryOffset_SDA21);
/*80483DA8 00480BA8*/ PPC::Runtime::ASM::bl(fn_strcpy);
/*80483DAC 00480BAC*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x2);
/*80483DB0 00480BB0*/ PPC::Runtime::ASM::li(context->r4, MemoryOffset_329 @ Get_MemoryOffset_SDA21);
/*80483DB4 00480BB4*/ PPC::Runtime::ASM::bl(fn_strcpy);
/*80483DB8 00480BB8*/ PPC::Runtime::ASM::addi(context->r0, context->r27, 0x4);
/*80483DBC 00480BBC*/ PPC::Runtime::ASM::subf(context->r3, context->r30, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80483DC0, 0x80483DC0) //this is a jump label
/*80483DC0 00480BC0*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80483DC4 00480BC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80483DC8 00480BC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80483DCC 00480BCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80483DD0 00480BD0*/ PPC::Runtime::ASM::blr();
}