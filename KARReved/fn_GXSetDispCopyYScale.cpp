//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___cvt_fp2unsigned.hpp"



void fn_GXSetDispCopyYScale(PPC::Runtime::GCContext* context)
{
/*803CC904 003C9704*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CC908 003C9708*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CC90C 003C970C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*803CC910 003C9710*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E5798 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC914 003C9714*/ PPC::Runtime::ASM::fdivs(context->f1, context->f0, context->f1);
/*803CC918 003C9718*/ PPC::Runtime::ASM::bl(fn___cvt_fp2unsigned);
/*803CC91C 003C971C*/ PPC::Runtime::ASM::clrlwi(context->r6, context->r3, 23);
/*803CC920 003C9720*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC924 003C9724*/ PPC::Runtime::ASM::li(context->r0, 0x61);
/*803CC928 003C9728*/ PPC::Runtime::ASM::lis(context->r3, 0xcc01);
/*803CC92C 003C972C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CC930 003C9730*/ PPC::Runtime::ASM::oris(context->r0, context->r6, 0x4e00);
/*803CC934 003C9734*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803CC938 003C9738*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CC93C 003C973C*/ PPC::Runtime::ASM::subfic(context->r3, context->r6, 0x100);
/*803CC940 003C9740*/ PPC::Runtime::ASM::subic(context->r0, context->r3, 0x1);
/*803CC944 003C9744*/ PPC::Runtime::ASM::sth(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803CC948 003C9748*/ PPC::Runtime::ASM::subfe(context->r0, context->r0, context->r3);
/*803CC94C 003C974C*/ PPC::Runtime::ASM::clrlslwi(context->r0, context->r0, 24, 10);
/*803CC950 003C9750*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ec, context->r4));
/*803CC954 003C9754*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x80);
/*803CC958 003C9758*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x0);
/*803CC95C 003C975C*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 22, 20);
/*803CC960 003C9760*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CC964 003C9764*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ec, context->r4));
/*803CC968 003C9768*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r4));
/*803CC96C 003C976C*/ PPC::Runtime::ASM::extrwi(context->r4, context->r0, 10, 12);
/*803CC970 003C9770*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 30, 14, 23);
/*803CC974 003C9774*/ PPC::Runtime::ASM::divwu(context->r3, context->r0, context->r6);
/*803CC978 003C9778*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
/*803CC97C 003C977C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*803CC980 003C9780*/ PPC::Runtime::ASM::ble(.L_803CC9B0);
/*803CC984 003C9784*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x100);
/*803CC988 003C9788*/ PPC::Runtime::ASM::bge(.L_803CC9B0);
/*803CC98C 003C978C*/ PPC::Runtime::ASM::b(.L_803CC994);
RUNTIME_PPC_JUMP_LABEL(.L_803CC990, 0x803CC990) //this is a jump label
/*803CC990 003C9790*/ PPC::Runtime::ASM::srwi(context->r5, context->r5, 1);
RUNTIME_PPC_JUMP_LABEL(.L_803CC994, 0x803CC994) //this is a jump label
/* 803CC994 003C9794  54 A0 07 FF */ clrlwi. context->r0 , context->r5 , 31
/*803CC998 003C9798*/ PPC::Runtime::ASM::beq(.L_803CC990);
/*803CC99C 003C979C*/ PPC::Runtime::ASM::divwu(context->r0, context->r4, context->r5);
/*803CC9A0 003C97A0*/ PPC::Runtime::ASM::mullw(context->r0, context->r0, context->r5);
/*803CC9A4 003C97A4*/ PPC::Runtime::ASM::subf.(context->r0, context->r0, context->r4);
/*803CC9A8 003C97A8*/ PPC::Runtime::ASM::bne(.L_803CC9B0);
/*803CC9AC 003C97AC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803CC9B0, 0x803CC9B0) //this is a jump label
/*803CC9B0 003C97B0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x400);
/*803CC9B4 003C97B4*/ PPC::Runtime::ASM::ble(.L_803CC9BC);
/*803CC9B8 003C97B8*/ PPC::Runtime::ASM::li(context->r3, 0x400);
RUNTIME_PPC_JUMP_LABEL(.L_803CC9BC, 0x803CC9BC) //this is a jump label
/*803CC9BC 003C97BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803CC9C0 003C97C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*803CC9C4 003C97C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CC9C8 003C97C8*/ PPC::Runtime::ASM::blr();
}