//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "__OSUnmaskInterrupts.hpp"
#include "__OSUnmaskInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "__EXIProbe.hpp"



void EXIDeselect(PPC::Runtime::GCContext* context)
{
/*803EACEC 003E7AEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EACF0 003E7AF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EACF4 003E7AF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803EACF8 003E7AF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EACFC 003E7AFC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EAD00 003E7B00*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EAD04 003E7B04*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EAD08 003E7B08*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803EAD0C 003E7B0C*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EAD10 003E7B10*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EAD14 003E7B14*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EAD18 003E7B18*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r4);
/*803EAD1C 003E7B1C*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EAD20 003E7B20*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*803EAD24 003E7B24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAD28 003E7B28*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 29, 29);
/*803EAD2C 003E7B2C*/ PPC::Runtime::ASM::bne(.L_803EAD40);
/*803EAD30 003E7B30*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803EAD34 003E7B34*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAD38 003E7B38*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EAD3C 003E7B3C*/ PPC::Runtime::ASM::b(.L_803EADDC);
RUNTIME_PPC_JUMP_LABEL(.L_803EAD40, 0x803EAD40) //this is a jump label
/*803EAD40 003E7B40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAD44 003E7B44*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 30, 28);
/*803EAD48 003E7B48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAD4C 003E7B4C*/ PPC::Runtime::ASM::mulli(context->r0, context->r31, 0x14);
/*803EAD50 003E7B50*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803EAD54 003E7B54*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x6800);
/*803EAD58 003E7B58*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*803EAD5C 003E7B5C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803EAD60 003E7B60*/ PPC::Runtime::ASM::andi.(context->r0, context->r29, 0x405);
/*803EAD64 003E7B64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803EAD68 003E7B68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAD6C 003E7B6C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*803EAD70 003E7B70*/ PPC::Runtime::ASM::beq(.L_803EADA0);
/*803EAD74 003E7B74*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x1);
/*803EAD78 003E7B78*/ PPC::Runtime::ASM::beq(.L_803EAD98);
/*803EAD7C 003E7B7C*/ PPC::Runtime::ASM::bge(.L_803EADA0);
/*803EAD80 003E7B80*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*803EAD84 003E7B84*/ PPC::Runtime::ASM::bge(.L_803EAD8C);
/*803EAD88 003E7B88*/ PPC::Runtime::ASM::b(.L_803EADA0);
RUNTIME_PPC_JUMP_LABEL(.L_803EAD8C, 0x803EAD8C) //this is a jump label
/*803EAD8C 003E7B8C*/ PPC::Runtime::ASM::lis(context->r3, 0x10);
/*803EAD90 003E7B90*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803EAD94 003E7B94*/ PPC::Runtime::ASM::b(.L_803EADA0);
RUNTIME_PPC_JUMP_LABEL(.L_803EAD98, 0x803EAD98) //this is a jump label
/*803EAD98 003E7B98*/ PPC::Runtime::ASM::lis(context->r3, 0x2);
/*803EAD9C 003E7B9C*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
RUNTIME_PPC_JUMP_LABEL(.L_803EADA0, 0x803EADA0) //this is a jump label
/*803EADA0 003E7BA0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803EADA4 003E7BA4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EADA8 003E7BA8*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x2);
/*803EADAC 003E7BAC*/ PPC::Runtime::ASM::beq(.L_803EADD8);
/*803EADB0 003E7BB0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r29, 0, 24, 24);
/*803EADB4 003E7BB4*/ PPC::Runtime::ASM::beq(.L_803EADD8);
/*803EADB8 003E7BB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803EADBC 003E7BBC*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EADC0 003E7BC0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EADC4 003E7BC4*/ PPC::Runtime::ASM::beq(.L_803EADD0);
/*803EADC8 003E7BC8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803EADCC 003E7BCC*/ PPC::Runtime::ASM::b(.L_803EADDC);
RUNTIME_PPC_JUMP_LABEL(.L_803EADD0, 0x803EADD0) //this is a jump label
/*803EADD0 003E7BD0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EADD4 003E7BD4*/ PPC::Runtime::ASM::b(.L_803EADDC);
RUNTIME_PPC_JUMP_LABEL(.L_803EADD8, 0x803EADD8) //this is a jump label
/*803EADD8 003E7BD8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EADDC, 0x803EADDC) //this is a jump label
/*803EADDC 003E7BDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803EADE0 003E7BE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803EADE4 003E7BE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803EADE8 003E7BE8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EADEC 003E7BEC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803EADF0 003E7BF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803EADF4 003E7BF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EADF8 003E7BF8*/ PPC::Runtime::ASM::blr();
}