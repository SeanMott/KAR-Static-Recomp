//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AF4E4.hpp"
#include "fn_800AF4E4.hpp"
#include "fn_800ABA74.hpp"



void fn_debug_openRumbleTest(PPC::Runtime::GCContext* context)
{
/*800ADB90 000AA990*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADB94 000AA994*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADB98 000AA998*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADB9C 000AA99C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADBA0 000AA9A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADBA4 000AA9A4*/ PPC::Runtime::ASM::bne(.L_800ADBDC);
/*800ADBA8 000AA9A8*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADBAC 000AA9AC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADBB0 000AA9B0*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADBB4 000AA9B4*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_34_MaybeRumbleMenu @ Get_MemoryOffset_HighBit);
/*800ADBB8 000AA9B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADBBC 000AA9BC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_34_MaybeRumbleMenu @ Get_MemoryOffset_LowBit);
/*800ADBC0 000AA9C0*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADBC4 000AA9C4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADBC8 000AA9C8*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADBCC 000AA9CC*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADBD0 000AA9D0*/ PPC::Runtime::ASM::lis(context->r4, fn_800AF4E4 @ Get_MemoryOffset_HighBit);
/*800ADBD4 000AA9D4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AF4E4 @ Get_MemoryOffset_LowBit);
/*800ADBD8 000AA9D8*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADBDC, 0x800ADBDC) //this is a jump label
/*800ADBDC 000AA9DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADBE0 000AA9E0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADBE4 000AA9E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADBE8 000AA9E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADBEC 000AA9EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADBF0 000AA9F0*/ PPC::Runtime::ASM::blr();
}