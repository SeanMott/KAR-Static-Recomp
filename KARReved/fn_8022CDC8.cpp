//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8022CDC8(PPC::Runtime::GCContext* context)
{
/*8022CDC8 00229BC8*/ PPC::Runtime::ASM::mulli(context->r4, context->r3, 0x90c);
/*8022CDCC 00229BCC*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18055A9F0 @ Get_MemoryOffset_HighBit);
/*8022CDD0 00229BD0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8022CDD4 00229BD4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18055A9F0 @ Get_MemoryOffset_LowBit);
/*8022CDD8 00229BD8*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*8022CDDC 00229BDC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8022CDE0 00229BE0*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*8022CDE4 00229BE4*/ PPC::Runtime::ASM::slw(context->r0, context->r4, context->r6);
/*8022CDE8 00229BE8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8022CDEC 00229BEC*/ PPC::Runtime::ASM::extrwi(context->r5, context->r5, 3, 22);
/*8022CDF0 00229BF0*/ PPC::Runtime::ASM::and.(context->r0, context->r5, context->r0);
/*8022CDF4 00229BF4*/ PPC::Runtime::ASM::beq(.L_8022CDFC);
/*8022CDF8 00229BF8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8022CDFC, 0x8022CDFC) //this is a jump label
/*8022CDFC 00229BFC*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*8022CE00 00229C00*/ PPC::Runtime::ASM::slw(context->r0, context->r4, context->r6);
/*8022CE04 00229C04*/ PPC::Runtime::ASM::and.(context->r0, context->r5, context->r0);
/*8022CE08 00229C08*/ PPC::Runtime::ASM::beq(.L_8022CE10);
/*8022CE0C 00229C0C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8022CE10, 0x8022CE10) //this is a jump label
/*8022CE10 00229C10*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*8022CE14 00229C14*/ PPC::Runtime::ASM::slw(context->r0, context->r4, context->r6);
/*8022CE18 00229C18*/ PPC::Runtime::ASM::and.(context->r0, context->r5, context->r0);
/*8022CE1C 00229C1C*/ PPC::Runtime::ASM::beqlr();
/*8022CE20 00229C20*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x1);
/*8022CE24 00229C24*/ PPC::Runtime::ASM::blr();
}