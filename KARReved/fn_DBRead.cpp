//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_DBGRead.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_DBRead(PPC::Runtime::GCContext* context)
{
/*803F3BB8 003F09B8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F3BBC 003F09BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803F3BC0 003F09C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803F3BC4 003F09C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803F3BC8 003F09C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803F3BCC 003F09CC*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803F3BD0 003F09D0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F3BD4 003F09D4*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803F3BD8 003F09D8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803F3BDC 003F09DC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE160 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3BE0 003F09E0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803F3BE4 003F09E4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 15, 15);
/*803F3BE8 003F09E8*/ PPC::Runtime::ASM::beq(.L_803F3BF4);
/*803F3BEC 003F09EC*/ PPC::Runtime::ASM::li(context->r3, 0x1000);
/*803F3BF0 003F09F0*/ PPC::Runtime::ASM::b(.L_803F3BF8);
RUNTIME_PPC_JUMP_LABEL(.L_803F3BF4, 0x803F3BF4) //this is a jump label
/*803F3BF4 003F09F4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803F3BF8, 0x803F3BF8) //this is a jump label
/*803F3BF8 003F09F8*/ PPC::Runtime::ASM::addis(context->r3, context->r3, 0x2);
/*803F3BFC 003F09FC*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x3);
/*803F3C00 003F0A00*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/*803F3C04 003F0A04*/ PPC::Runtime::ASM::clrrwi(context->r5, context->r0, 2);
/*803F3C08 003F0A08*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x2000);
/*803F3C0C 003F0A0C*/ PPC::Runtime::ASM::bl(fn_DBGRead);
/*803F3C10 003F0A10*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803F3C14 003F0A14*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DE164 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3C18 003F0A18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803F3C1C 003F0A1C*/ PPC::Runtime::ASM::stb(context->r0, SkipAddress_44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803F3C20 003F0A20*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803F3C24 003F0A24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803F3C28 003F0A28*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803F3C2C 003F0A2C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803F3C30 003F0A30*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803F3C34 003F0A34*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F3C38 003F0A38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803F3C3C 003F0A3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F3C40 003F0A40*/ PPC::Runtime::ASM::blr();
}