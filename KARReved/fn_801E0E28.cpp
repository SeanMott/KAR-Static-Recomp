//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CAF90.hpp"
#include "fn_GetTopGroundSpeedAndModifyIt.hpp"
#include "fn_801CB074.hpp"



void fn_801E0E28(PPC::Runtime::GCContext* context)
{
/*801E0E28 001DDC28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E0E2C 001DDC2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E0E30 001DDC30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0E34 001DDC34*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0E38 001DDC38*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E0E3C 001DDC3C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r3));
/* 801E0E40 001DDC40  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*801E0E44 001DDC44*/ PPC::Runtime::ASM::bne(.L_801E0E84);
/*801E0E48 001DDC48*/ PPC::Runtime::ASM::bl(fn_801CAF90);
/*801E0E4C 001DDC4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E0E50 001DDC50*/ PPC::Runtime::ASM::bl(fn_GetTopGroundSpeedAndModifyIt);
/*801E0E54 001DDC54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E0E58 001DDC58*/ PPC::Runtime::ASM::bl(fn_801CB074);
/*801E0E5C 001DDC5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801E0E60 001DDC60*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6F98 @ Get_MemoryOffset_SDA21);
/*801E0E64 001DDC64*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801E0E68 001DDC68*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*801E0E6C 001DDC6C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*801E0E70 001DDC70*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801E0E74 001DDC74*/ PPC::Runtime::ASM::beq(.L_801E0E84);
/*801E0E78 001DDC78*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E0E7C 001DDC7C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801E0E80 001DDC80*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801E0E84, 0x801E0E84) //this is a jump label
/*801E0E84 001DDC84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0E88 001DDC88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E0E8C 001DDC8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E0E90 001DDC90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E0E94 001DDC94*/ PPC::Runtime::ASM::blr();
}