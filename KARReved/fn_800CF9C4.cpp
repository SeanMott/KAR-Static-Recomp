//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E1F48.hpp"



void fn_800CF9C4(PPC::Runtime::GCContext* context)
{
/*800CF9C4 000CC7C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800CF9C8 000CC7C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CF9CC 000CC7CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800CF9D0 000CC7D0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800CF9D4 000CC7D4*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800CF9D8 000CC7D8*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CF9DC 000CC7DC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800CF9E0 000CC7E0*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800CF9E4 000CC7E4*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800CF9E8 000CC7E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CF9EC 000CC7EC*/ PPC::Runtime::ASM::addi(context->r29, context->r5, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800CF9F0 000CC7F0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800CF9F4 000CC7F4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800CF9F8 000CC7F8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800CF9FC 000CC7FC*/ PPC::Runtime::ASM::bne(.L_800CFA10);
/*800CFA00 000CC800*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x9c);
/*800CFA04 000CC804*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800CFA08 000CC808*/ PPC::Runtime::ASM::li(context->r4, 0x2bd);
/*800CFA0C 000CC80C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CFA10, 0x800CFA10) //this is a jump label
/*800CFA10 000CC810*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800CFA14 000CC814*/ PPC::Runtime::ASM::beq(.L_800CFA2C);
/*800CFA18 000CC818*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x81, context->r28));
/*800CFA1C 000CC81C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800CFA20 000CC820*/ PPC::Runtime::ASM::beq(.L_800CFA2C);
/*800CFA24 000CC824*/ PPC::Runtime::ASM::cmpw(context->r27, context->r30);
/*800CFA28 000CC828*/ PPC::Runtime::ASM::bne(.L_800CFA34);
RUNTIME_PPC_JUMP_LABEL(.L_800CFA2C, 0x800CFA2C) //this is a jump label
/*800CFA2C 000CC82C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CFA30 000CC830*/ PPC::Runtime::ASM::b(.L_800CFB1C);
RUNTIME_PPC_JUMP_LABEL(.L_800CFA34, 0x800CFA34) //this is a jump label
/*800CFA34 000CC834*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CFA38 000CC838*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800CFA3C 000CC83C*/ PPC::Runtime::ASM::bne(.L_800CFA50);
/*800CFA40 000CC840*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x68);
/*800CFA44 000CC844*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xe0);
/*800CFA48 000CC848*/ PPC::Runtime::ASM::li(context->r4, 0xef);
/*800CFA4C 000CC84C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CFA50, 0x800CFA50) //this is a jump label
/*800CFA50 000CC850*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*800CFA54 000CC854*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CFA58 000CC858*/ PPC::Runtime::ASM::blt(.L_800CFA6C);
/*800CFA5C 000CC85C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r31));
/*800CFA60 000CC860*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800CFA64 000CC864*/ PPC::Runtime::ASM::bge(.L_800CFA6C);
/*800CFA68 000CC868*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800CFA6C, 0x800CFA6C) //this is a jump label
/*800CFA6C 000CC86C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800CFA70 000CC870*/ PPC::Runtime::ASM::bne(.L_800CFA84);
/*800CFA74 000CC874*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x68);
/*800CFA78 000CC878*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xec);
/*800CFA7C 000CC87C*/ PPC::Runtime::ASM::li(context->r4, 0xf0);
/*800CFA80 000CC880*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CFA84, 0x800CFA84) //this is a jump label
/*800CFA84 000CC884*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CFA88 000CC888*/ PPC::Runtime::ASM::mulli(context->r3, context->r27, 0x2c);
/*800CFA8C 000CC88C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r31));
/*800CFA90 000CC890*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800CFA94 000CC894*/ PPC::Runtime::ASM::add(context->r28, context->r4, context->r3);
/*800CFA98 000CC898*/ PPC::Runtime::ASM::bne(.L_800CFAAC);
/*800CFA9C 000CC89C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x68);
/*800CFAA0 000CC8A0*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xe0);
/*800CFAA4 000CC8A4*/ PPC::Runtime::ASM::li(context->r4, 0xef);
/*800CFAA8 000CC8A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CFAAC, 0x800CFAAC) //this is a jump label
/*800CFAAC 000CC8AC*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*800CFAB0 000CC8B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CFAB4 000CC8B4*/ PPC::Runtime::ASM::blt(.L_800CFAC8);
/*800CFAB8 000CC8B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r31));
/*800CFABC 000CC8BC*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*800CFAC0 000CC8C0*/ PPC::Runtime::ASM::bge(.L_800CFAC8);
/*800CFAC4 000CC8C4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800CFAC8, 0x800CFAC8) //this is a jump label
/*800CFAC8 000CC8C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800CFACC 000CC8CC*/ PPC::Runtime::ASM::bne(.L_800CFAE0);
/*800CFAD0 000CC8D0*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x68);
/*800CFAD4 000CC8D4*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0xec);
/*800CFAD8 000CC8D8*/ PPC::Runtime::ASM::li(context->r4, 0xf0);
/*800CFADC 000CC8DC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CFAE0, 0x800CFAE0) //this is a jump label
/*800CFAE0 000CC8E0*/ PPC::Runtime::ASM::mulli(context->r0, context->r30, 0x2c);
/*800CFAE4 000CC8E4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r31));
/*800CFAE8 000CC8E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CFAEC 000CC8EC*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800CFAF0 000CC8F0*/ PPC::Runtime::ASM::add(context->r5, context->r5, context->r0);
/*800CFAF4 000CC8F4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x10);
/*800CFAF8 000CC8F8*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0xc);
/*800CFAFC 000CC8FC*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x8);
/*800CFB00 000CC900*/ PPC::Runtime::ASM::bl(fn_800E1F48);
/*800CFB04 000CC904*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800CFB08 000CC908*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*800CFB0C 000CC90C*/ PPC::Runtime::ASM::beq(.L_800CFB18);
/*800CFB10 000CC910*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800CFB14 000CC914*/ PPC::Runtime::ASM::b(.L_800CFB1C);
RUNTIME_PPC_JUMP_LABEL(.L_800CFB18, 0x800CFB18) //this is a jump label
/*800CFB18 000CC918*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800CFB1C, 0x800CFB1C) //this is a jump label
/*800CFB1C 000CC91C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800CFB20 000CC920*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800CFB24 000CC924*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800CFB28 000CC928*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CFB2C 000CC92C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800CFB30 000CC930*/ PPC::Runtime::ASM::blr();
}