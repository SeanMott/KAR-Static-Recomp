//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn___assert.hpp"
#include "fn_8044A080.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_8044A250(PPC::Runtime::GCContext* context)
{
/*8044A250 00447050*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8044A254 00447054*/ PPC::Runtime::ASM::mflr(context->r0);
/*8044A258 00447058*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8044A25C 0044705C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8044A260 00447060*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8044A264 00447064*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8044A268 00447068*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8044A26C 0044706C*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8044A270 00447070*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8044A274 00447074*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8044A278 00447078*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*8044A27C 0044707C*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8044A280 00447080*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r28, 26);
/*8044A284 00447084*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_HighBit);
/*8044A288 00447088*/ PPC::Runtime::ASM::mulli(context->r5, context->r0, 0x98);
/*8044A28C 0044708C*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x0);
/*8044A290 00447090*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180597660 @ Get_MemoryOffset_LowBit);
/*8044A294 00447094*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8044A298 00447098*/ PPC::Runtime::ASM::add(context->r29, context->r0, context->r5);
/*8044A29C 0044709C*/ PPC::Runtime::ASM::ble(.L_8044A2B0);
/*8044A2A0 004470A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8044A2A4 004470A4*/ PPC::Runtime::ASM::cmpw(context->r0, context->r28);
/*8044A2A8 004470A8*/ PPC::Runtime::ASM::bne(.L_8044A2B0);
/*8044A2AC 004470AC*/ PPC::Runtime::ASM::b(.L_8044A2B4);
RUNTIME_PPC_JUMP_LABEL(.L_8044A2B0, 0x8044A2B0) //this is a jump label
/*8044A2B0 004470B0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8044A2B4, 0x8044A2B4) //this is a jump label
/*8044A2B4 004470B4*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8044A2B8 004470B8*/ PPC::Runtime::ASM::beq(.L_8044A318);
/*8044A2BC 004470BC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r29));
/* 8044A2C0 004470C0  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*8044A2C4 004470C4*/ PPC::Runtime::ASM::bne(.L_8044A318);
/*8044A2C8 004470C8*/ PPC::Runtime::ASM::subfic(context->r0, context->r30, 0x1);
/*8044A2CC 004470CC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8044A2D0 004470D0*/ PPC::Runtime::ASM::orc(context->r3, context->r4, context->r30);
/*8044A2D4 004470D4*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 1);
/*8044A2D8 004470D8*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 8044A2DC 004470DC  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*8044A2E0 004470E0*/ PPC::Runtime::ASM::bne(.L_8044A2E8);
/*8044A2E4 004470E4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8044A2E8, 0x8044A2E8) //this is a jump label
/*8044A2E8 004470E8*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*8044A2EC 004470EC*/ PPC::Runtime::ASM::bne(.L_8044A304);
/*8044A2F0 004470F0*/ PPC::Runtime::ASM::lis(context->r4, lbl_805093B0 @ Get_MemoryOffset_HighBit);
/*8044A2F4 004470F4*/ PPC::Runtime::ASM::li(context->r3, String_ "synth." Get_MemoryOffset_SDA21);
/*8044A2F8 004470F8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_805093B0 @ Get_MemoryOffset_LowBit);
/*8044A2FC 004470FC*/ PPC::Runtime::ASM::li(context->r4, 0x88a);
/*8044A300 00447100*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8044A304, 0x8044A304) //this is a jump label
/*8044A304 00447104*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*8044A308 00447108*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8044A30C 0044710C*/ PPC::Runtime::ASM::add(context->r4, context->r29, context->r0);
/*8044A310 00447110*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*8044A314 00447114*/ PPC::Runtime::ASM::bl(fn_8044A080);
RUNTIME_PPC_JUMP_LABEL(.L_8044A318, 0x8044A318) //this is a jump label
/*8044A318 00447118*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8044A31C 0044711C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8044A320 00447120*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8044A324 00447124*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8044A328 00447128*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8044A32C 0044712C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8044A330 00447130*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8044A334 00447134*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8044A338 00447138*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8044A33C 0044713C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8044A340 00447140*/ PPC::Runtime::ASM::blr();
}