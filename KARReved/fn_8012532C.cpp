//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114EEC.hpp"



void fn_8012532C(PPC::Runtime::GCContext* context)
{
/*8012532C 0012212C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80125330 00122130*/ PPC::Runtime::ASM::mflr(context->r0);
/*80125334 00122134*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80125338 00122138*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012533C 0012213C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35c, context->r3));
/*80125340 00122140*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80125344 00122144*/ PPC::Runtime::ASM::beq(.L_8012534C);
/*80125348 00122148*/ PPC::Runtime::ASM::bl(fn_80114EEC);
RUNTIME_PPC_JUMP_LABEL(.L_8012534C, 0x8012534C) //this is a jump label
/*8012534C 0012214C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80125350 00122150*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80125354 00122154*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80125358 00122158*/ PPC::Runtime::ASM::blr();
}