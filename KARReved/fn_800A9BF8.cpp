//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800AB5A4.hpp"
#include "fn_800AB4C0.hpp"
#include "fn_dbPutString.hpp"
#include "fn_800AA074.hpp"
#include "fn_dbPutString.hpp"
#include "fn_800AA790.hpp"



void fn_800A9BF8(PPC::Runtime::GCContext* context)
{
/*800A9BF8 000A69F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800A9BFC 000A69FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A9C00 000A6A00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9C04 000A6A04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A9C08 000A6A08*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800A9C0C 000A6A0C*/ PPC::Runtime::ASM::bl(fn_800AB5A4);
/*800A9C10 000A6A10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9C14 000A6A14*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A9C18 000A6A18*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800A9C1C 000A6A1C*/ PPC::Runtime::ASM::bl(fn_800AB4C0);
/*800A9C20 000A6A20*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9C24 000A6A24*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9C28 000A6A28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f44, context->r4));
/*800A9C2C 000A6A2C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*800A9C30 000A6A30*/ PPC::Runtime::ASM::beq(.L_800A9C7C);
/*800A9C34 000A6A34*/ PPC::Runtime::ASM::bge(.L_800A9C48);
/*800A9C38 000A6A38*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800A9C3C 000A6A3C*/ PPC::Runtime::ASM::beq(.L_800A9C54);
/*800A9C40 000A6A40*/ PPC::Runtime::ASM::bge(.L_800A9C70);
/*800A9C44 000A6A44*/ PPC::Runtime::ASM::b(.L_800A9CA0);
RUNTIME_PPC_JUMP_LABEL(.L_800A9C48, 0x800A9C48) //this is a jump label
/*800A9C48 000A6A48*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*800A9C4C 000A6A4C*/ PPC::Runtime::ASM::bge(.L_800A9CA0);
/*800A9C50 000A6A50*/ PPC::Runtime::ASM::b(.L_800A9C98);
RUNTIME_PPC_JUMP_LABEL(.L_800A9C54, 0x800A9C54) //this is a jump label
/*800A9C54 000A6A54*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_655 @ Get_MemoryOffset_HighBit);
/*800A9C58 000A6A58*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r4));
/*800A9C5C 000A6A5C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, MemoryOffset_655 @ Get_MemoryOffset_LowBit);
/*800A9C60 000A6A60*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9C64 000A6A64*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A9C68 000A6A68*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800A9C6C 000A6A6C*/ PPC::Runtime::ASM::b(.L_800A9CA0);
RUNTIME_PPC_JUMP_LABEL(.L_800A9C70, 0x800A9C70) //this is a jump label
/*800A9C70 000A6A70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9C74 000A6A74*/ PPC::Runtime::ASM::bl(fn_800AA074);
/*800A9C78 000A6A78*/ PPC::Runtime::ASM::b(.L_800A9CA0);
RUNTIME_PPC_JUMP_LABEL(.L_800A9C7C, 0x800A9C7C) //this is a jump label
/*800A9C7C 000A6A7C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_656 @ Get_MemoryOffset_HighBit);
/*800A9C80 000A6A80*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
/*800A9C84 000A6A84*/ PPC::Runtime::ASM::addi(context->r4, context->r3, MemoryOffset_656 @ Get_MemoryOffset_LowBit);
/*800A9C88 000A6A88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9C8C 000A6A8C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A9C90 000A6A90*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800A9C94 000A6A94*/ PPC::Runtime::ASM::b(.L_800A9CA0);
RUNTIME_PPC_JUMP_LABEL(.L_800A9C98, 0x800A9C98) //this is a jump label
/*800A9C98 000A6A98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9C9C 000A6A9C*/ PPC::Runtime::ASM::bl(fn_800AA790);
RUNTIME_PPC_JUMP_LABEL(.L_800A9CA0, 0x800A9CA0) //this is a jump label
/*800A9CA0 000A6AA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9CA4 000A6AA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A9CA8 000A6AA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A9CAC 000A6AAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800A9CB0 000A6AB0*/ PPC::Runtime::ASM::blr();
}