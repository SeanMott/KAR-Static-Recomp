//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190A88.hpp"
#include "fn_8027A08C.hpp"
#include "fn_Rider_ActionStateChange.hpp"



void fn_801A3388(PPC::Runtime::GCContext* context)
{
/*801A3388 001A0188*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A338C 001A018C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A3390 001A0190*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A3394 001A0194*/ PPC::Runtime::ASM::li(context->r0, 0x78);
/*801A3398 001A0198*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A339C 001A019C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A33A0 001A01A0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa84, context->r3));
/*801A33A4 001A01A4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*801A33A8 001A01A8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*801A33AC 001A01AC*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8c, context->r3));
/*801A33B0 001A01B0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa90, context->r3));
/*801A33B4 001A01B4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*801A33B8 001A01B8*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa94, context->r3));
/*801A33BC 001A01BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa88, context->r3));
/*801A33C0 001A01C0*/ PPC::Runtime::ASM::bl(fn_80190A88);
/*801A33C4 001A01C4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801A33C8 001A01C8*/ PPC::Runtime::ASM::bl(fn_8027A08C);
/*801A33CC 001A01CC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E12A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A33D0 001A01D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A33D4 001A01D4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E12AC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A33D8 001A01D8*/ PPC::Runtime::ASM::li(context->r4, 0x18);
/*801A33DC 001A01DC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801A33E0 001A01E0*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801A33E4 001A01E4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801A33E8 001A01E8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801A33EC 001A01EC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A33F0 001A01F0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A33F4 001A01F4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801A33F8 001A01F8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A33FC 001A01FC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801A3400 001A0200*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801A3404 001A0204*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r31));
/*801A3408 001A0208*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A340C 001A020C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A3410 001A0210*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A3414 001A0214*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A3418 001A0218*/ PPC::Runtime::ASM::blr();
}