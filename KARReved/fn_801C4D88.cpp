//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801C45C0.hpp"
#include "fn_801C19C8.hpp"



void fn_801C4D88(PPC::Runtime::GCContext* context)
{
/*801C4D88 001C1B88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C4D8C 001C1B8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C4D90 001C1B90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4D94 001C1B94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4D98 001C1B98*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C4D9C 001C1B9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r3));
/*801C4DA0 001C1BA0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801C4DA4 001C1BA4*/ PPC::Runtime::ASM::beq(.L_801C4DBC);
/*801C4DA8 001C1BA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
/*801C4DAC 001C1BAC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801C4DB0 001C1BB0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801C4DB4 001C1BB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x924, context->r31));
/*801C4DB8 001C1BB8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C4DBC, 0x801C4DBC) //this is a jump label
/*801C4DBC 001C1BBC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4DC0 001C1BC0*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801C4DC4 001C1BC4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C4DC8 001C1BC8*/ PPC::Runtime::ASM::beq(.L_801C4DE8);
/*801C4DCC 001C1BCC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4DD0 001C1BD0*/ PPC::Runtime::ASM::bl(fn_801C45C0);
/*801C4DD4 001C1BD4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C4DD8 001C1BD8*/ PPC::Runtime::ASM::bl(fn_801C19C8);
/*801C4DDC 001C1BDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C4DE0 001C1BE0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*801C4DE4 001C1BE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C4DE8, 0x801C4DE8) //this is a jump label
/*801C4DE8 001C1BE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C4DEC 001C1BEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C4DF0 001C1BF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C4DF4 001C1BF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C4DF8 001C1BF8*/ PPC::Runtime::ASM::blr();
}