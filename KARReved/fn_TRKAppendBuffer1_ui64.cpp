//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRK_memcpy.hpp"



void fn_TRKAppendBuffer1_ui64(PPC::Runtime::GCContext* context)
{
/*803BDF00 003BAD00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803BDF04 003BAD04*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BDF08 003BAD08*/ PPC::Runtime::ASM::lis(context->r4, gTRKBigEndian @ Get_MemoryOffset_HighBit);
/*803BDF0C 003BAD0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803BDF10 003BAD10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803BDF14 003BAD14*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803BDF18 003BAD18*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803BDF1C 003BAD1C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BDF20 003BAD20*/ PPC::Runtime::ASM::lwz(context->r0, gTRKBigEndian @ Get_MemoryOffset_LowBit ( context->r4 ));
/*803BDF24 003BAD24*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BDF28 003BAD28*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803BDF2C 003BAD2C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BDF30 003BAD30*/ PPC::Runtime::ASM::beq(.L_803BDF3C);
/*803BDF34 003BAD34*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803BDF38 003BAD38*/ PPC::Runtime::ASM::b(.L_803BDF80);
RUNTIME_PPC_JUMP_LABEL(.L_803BDF3C, 0x803BDF3C) //this is a jump label
/*803BDF3C 003BAD3C*/ PPC::Runtime::ASM::lbz(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf, context->r1));
/*803BDF40 003BAD40*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*803BDF44 003BAD44*/ PPC::Runtime::ASM::lbz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe, context->r1));
/*803BDF48 003BAD48*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r1));
/*803BDF4C 003BAD4C*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BDF50 003BAD50*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb, context->r1));
/*803BDF54 003BAD54*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r1));
/*803BDF58 003BAD58*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r1));
/*803BDF5C 003BAD5C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BDF60 003BAD60*/ PPC::Runtime::ASM::stb(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BDF64 003BAD64*/ PPC::Runtime::ASM::stb(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11, context->r1));
/*803BDF68 003BAD68*/ PPC::Runtime::ASM::stb(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r1));
/*803BDF6C 003BAD6C*/ PPC::Runtime::ASM::stb(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r1));
/*803BDF70 003BAD70*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BDF74 003BAD74*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15, context->r1));
/*803BDF78 003BAD78*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r1));
/*803BDF7C 003BAD7C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x17, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_803BDF80, 0x803BDF80) //this is a jump label
/*803BDF80 003BAD80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803BDF84 003BAD84*/ PPC::Runtime::ASM::li(context->r29, 0x8);
/*803BDF88 003BAD88*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803BDF8C 003BAD8C*/ PPC::Runtime::ASM::subfic(context->r0, context->r3, 0x880);
/*803BDF90 003BAD90*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x8);
/*803BDF94 003BAD94*/ PPC::Runtime::ASM::bge(.L_803BDFA0);
/*803BDF98 003BAD98*/ PPC::Runtime::ASM::li(context->r30, 0x301);
/*803BDF9C 003BAD9C*/ PPC::Runtime::ASM::mr(context->r29, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803BDFA0, 0x803BDFA0) //this is a jump label
/*803BDFA0 003BADA0*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x1);
/*803BDFA4 003BADA4*/ PPC::Runtime::ASM::bne(.L_803BDFB8);
/*803BDFA8 003BADA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803BDFAC 003BADAC*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*803BDFB0 003BADB0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*803BDFB4 003BADB4*/ PPC::Runtime::ASM::b(.L_803BDFC8);
RUNTIME_PPC_JUMP_LABEL(.L_803BDFB8, 0x803BDFB8) //this is a jump label
/*803BDFB8 003BADB8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x10);
/*803BDFBC 003BADBC*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*803BDFC0 003BADC0*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r3);
/*803BDFC4 003BADC4*/ PPC::Runtime::ASM::bl(fn_TRK_memcpy);
RUNTIME_PPC_JUMP_LABEL(.L_803BDFC8, 0x803BDFC8) //this is a jump label
/*803BDFC8 003BADC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803BDFCC 003BADCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803BDFD0 003BADD0*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r29);
/*803BDFD4 003BADD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803BDFD8 003BADD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803BDFDC 003BADDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803BDFE0 003BADE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803BDFE4 003BADE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803BDFE8 003BADE8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BDFEC 003BADEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803BDFF0 003BADF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BDFF4 003BADF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803BDFF8 003BADF8*/ PPC::Runtime::ASM::blr();
}