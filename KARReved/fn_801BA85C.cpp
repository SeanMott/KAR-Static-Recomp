//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_calculatePowerUpSpawnShootAngle?.hpp"
#include "fn_801907E8.hpp"
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_Interrupt_CheckForRun.hpp"
#include "fn_Interrupt_CheckForSwim.hpp"
#include "fn_801BAADC.hpp"



void fn_801BA85C(PPC::Runtime::GCContext* context)
{
/*801BA85C 001B765C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*801BA860 001B7660*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BA864 001B7664*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801BA868 001B7668*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801BA86C 001B766C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BA870 001B7670*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r3));
/*801BA874 001B7674*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801BA878 001B7678*/ PPC::Runtime::ASM::beq(.L_801BA8DC);
/*801BA87C 001B767C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
/*801BA880 001B7680*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x300);
/*801BA884 001B7684*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r31));
/*801BA888 001B7688*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*801BA88C 001B768C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BA890 001B7690*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BA894 001B7694*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r31));
/*801BA898 001B7698*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801BA89C 001B769C*/ PPC::Runtime::ASM::bl(fn_calculatePowerUpSpawnShootAngle?);
/*801BA8A0 001B76A0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801BA8A4 001B76A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BA8A8 001B76A8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801BA8AC 001B76AC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801BA8B0 001B76B0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801BA8B4 001B76B4*/ PPC::Runtime::ASM::fneg(context->f2, context->f2);
/*801BA8B8 001B76B8*/ PPC::Runtime::ASM::fneg(context->f1, context->f1);
/*801BA8BC 001B76BC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801BA8C0 001B76C0*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801BA8C4 001B76C4*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BA8C8 001B76C8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801BA8CC 001B76CC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801BA8D0 001B76D0*/ PPC::Runtime::ASM::bl(fn_801907E8);
/*801BA8D4 001B76D4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801BA8D8 001B76D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801BA8DC, 0x801BA8DC) //this is a jump label
/*801BA8DC 001B76DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BA8E0 001B76E0*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801BA8E4 001B76E4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BA8E8 001B76E8*/ PPC::Runtime::ASM::beq(.L_801BA92C);
/*801BA8EC 001B76EC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xa60);
/*801BA8F0 001B76F0*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801BA8F4 001B76F4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1778 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BA8F8 001B76F8*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*801BA8FC 001B76FC*/ PPC::Runtime::ASM::beq(.L_801BA920);
/*801BA900 001B7700*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BA904 001B7704*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForRun);
/*801BA908 001B7708*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BA90C 001B770C*/ PPC::Runtime::ASM::bne(.L_801BA92C);
/*801BA910 001B7710*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BA914 001B7714*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForSwim);
/*801BA918 001B7718*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BA91C 001B771C*/ PPC::Runtime::ASM::bne(.L_801BA92C);
RUNTIME_PPC_JUMP_LABEL(.L_801BA920, 0x801BA920) //this is a jump label
/*801BA920 001B7720*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BA924 001B7724*/ PPC::Runtime::ASM::bl(fn_801BAADC);
/*801BA928 001B7728*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BA92C, 0x801BA92C) //this is a jump label
/*801BA92C 001B772C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801BA930 001B7730*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801BA934 001B7734*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BA938 001B7738*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*801BA93C 001B773C*/ PPC::Runtime::ASM::blr();
}