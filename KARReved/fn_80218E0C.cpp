//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80204FAC.hpp"
#include "fn_80205310.hpp"
#include "fn_801FC398.hpp"
#include "fn_8021A428.hpp"



void fn_80218E0C(PPC::Runtime::GCContext* context)
{
/*80218E0C 00215C0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80218E10 00215C10*/ PPC::Runtime::ASM::mflr(context->r0);
/*80218E14 00215C14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80218E18 00215C18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80218E1C 00215C1C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80218E20 00215C20*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c0, context->r3));
/*80218E24 00215C24*/ PPC::Runtime::ASM::bl(fn_80204FAC);
/*80218E28 00215C28*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80218E2C 00215C2C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2690 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80218E30 00215C30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r31));
/*80218E34 00215C34*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80218E38 00215C38*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E268C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80218E3C 00215C3C*/ PPC::Runtime::ASM::bl(fn_80205310);
/*80218E40 00215C40*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2688 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80218E44 00215C44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80218E48 00215C48*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E268C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80218E4C 00215C4C*/ PPC::Runtime::ASM::li(context->r4, 0x14);
/*80218E50 00215C50*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80218E54 00215C54*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80218E58 00215C58*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80218E5C 00215C5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80218E60 00215C60*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80218E64 00215C64*/ PPC::Runtime::ASM::beq(.L_80218E70);
/*80218E68 00215C68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80218E6C 00215C6C*/ PPC::Runtime::ASM::bl(fn_8021A428);
RUNTIME_PPC_JUMP_LABEL(.L_80218E70, 0x80218E70) //this is a jump label
/*80218E70 00215C70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80218E74 00215C74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80218E78 00215C78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80218E7C 00215C7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80218E80 00215C80*/ PPC::Runtime::ASM::blr();
}