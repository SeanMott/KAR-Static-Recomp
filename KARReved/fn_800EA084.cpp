//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005F3E8.hpp"
#include "fn_8005F528.hpp"



void fn_800EA084(PPC::Runtime::GCContext* context)
{
/*800EA084 000E6E84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EA088 000E6E88*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EA08C 000E6E8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA090 000E6E90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 800EA094 000E6E94  7C 9F 23 79 */ mr. context->r31 , context->r4
/*800EA098 000E6E98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800EA09C 000E6E9C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800EA0A0 000E6EA0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800EA0A4 000E6EA4*/ PPC::Runtime::ASM::blt(.L_800EA0B8);
/*800EA0A8 000E6EA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800EA0AC 000E6EAC*/ PPC::Runtime::ASM::cmpw(context->r31, context->r0);
/*800EA0B0 000E6EB0*/ PPC::Runtime::ASM::bge(.L_800EA0B8);
/*800EA0B4 000E6EB4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800EA0B8, 0x800EA0B8) //this is a jump label
/*800EA0B8 000E6EB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800EA0BC 000E6EBC*/ PPC::Runtime::ASM::bne(.L_800EA0D8);
/*800EA0C0 000E6EC0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_961 @ Get_MemoryOffset_HighBit);
/*800EA0C4 000E6EC4*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_963 @ Get_MemoryOffset_HighBit);
/*800EA0C8 000E6EC8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_961 @ Get_MemoryOffset_LowBit);
/*800EA0CC 000E6ECC*/ PPC::Runtime::ASM::li(context->r4, 0x12c);
/*800EA0D0 000E6ED0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_963 @ Get_MemoryOffset_LowBit);
/*800EA0D4 000E6ED4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EA0D8, 0x800EA0D8) //this is a jump label
/*800EA0D8 000E6ED8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800EA0DC 000E6EDC*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 3);
/*800EA0E0 000E6EE0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800EA0E4 000E6EE4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/* 800EA0E8 000E6EE8  54 00 C0 02 */ extlwi context->r0 , context->r0 , 2 , 24
/*800EA0EC 000E6EEC*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 31);
/*800EA0F0 000E6EF0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*800EA0F4 000E6EF4*/ PPC::Runtime::ASM::beq(.L_800EA110);
/*800EA0F8 000E6EF8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EA0FC 000E6EFC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800EA100 000E6F00*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800EA104 000E6F04*/ PPC::Runtime::ASM::bl(fn_8005F3E8);
/*800EA108 000E6F08*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*800EA10C 000E6F0C*/ PPC::Runtime::ASM::b(.L_800EA124);
RUNTIME_PPC_JUMP_LABEL(.L_800EA110, 0x800EA110) //this is a jump label
/*800EA110 000E6F10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EA114 000E6F14*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800EA118 000E6F18*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*800EA11C 000E6F1C*/ PPC::Runtime::ASM::bl(fn_8005F528);
/*800EA120 000E6F20*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800EA124, 0x800EA124) //this is a jump label
/*800EA124 000E6F24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EA128 000E6F28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800EA12C 000E6F2C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800EA130 000E6F30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EA134 000E6F34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EA138 000E6F38*/ PPC::Runtime::ASM::blr();
}