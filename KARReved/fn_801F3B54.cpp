//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D1CD0.hpp"
#include "fn_8000A2A0.hpp"
#include "fn_801CF1B8.hpp"
#include "fn_801CC708.hpp"
#include "fn_801C9B7C.hpp"
#include "fn_801CA00C.hpp"
#include "fn_801F508C.hpp"



void fn_801F3B54(PPC::Runtime::GCContext* context)
{
/*801F3B54 001F0954*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F3B58 001F0958*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F3B5C 001F095C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801F3B60 001F0960*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801F3B64 001F0964*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F3B68 001F0968*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F3B6C 001F096C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F3B70 001F0970*/ PPC::Runtime::ASM::bl(fn_801D1CD0);
/*801F3B74 001F0974*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801F3B78 001F0978*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801F3B7C 001F097C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E206C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F3B80 001F0980*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r4));
/*801F3B84 001F0984*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r4));
/*801F3B88 001F0988*/ PPC::Runtime::ASM::fmuls(context->f2, context->f2, context->f0);
/*801F3B8C 001F098C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2064 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F3B90 001F0990*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f1);
/*801F3B94 001F0994*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4c, context->r31));
/*801F3B98 001F0998*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1588, context->r31));
/*801F3B9C 001F099C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x158c, context->r31));
/*801F3BA0 001F09A0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15a0, context->r31));
/*801F3BA4 001F09A4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15ac, context->r31));
/*801F3BA8 001F09A8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15a8, context->r31));
/*801F3BAC 001F09AC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15b4, context->r31));
/*801F3BB0 001F09B0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15b0, context->r31));
/*801F3BB4 001F09B4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15bc, context->r31));
/*801F3BB8 001F09B8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15b8, context->r31));
/*801F3BBC 001F09BC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15c4, context->r31));
/*801F3BC0 001F09C0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15c0, context->r31));
/*801F3BC4 001F09C4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x159d, context->r31));
/*801F3BC8 001F09C8*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x159e, context->r31));
/*801F3BCC 001F09CC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc50, context->r31));
/*801F3BD0 001F09D0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc54, context->r31));
/*801F3BD4 001F09D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15d0, context->r31));
/*801F3BD8 001F09D8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801F3BDC 001F09DC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15d0, context->r31));
/*801F3BE0 001F09E0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15cc, context->r31));
/*801F3BE4 001F09E4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15c8, context->r31));
/*801F3BE8 001F09E8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1594, context->r31));
/*801F3BEC 001F09EC*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x159c, context->r31));
/*801F3BF0 001F09F0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x540, context->r31));
/*801F3BF4 001F09F4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6ec, context->r31));
/*801F3BF8 001F09F8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5b0, context->r31));
/*801F3BFC 001F09FC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f0, context->r31));
/*801F3C00 001F0A00*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3b, context->r31));
/* 801F3C04 001F0A04  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*801F3C08 001F0A08*/ PPC::Runtime::ASM::beq(.L_801F3C58);
/*801F3C0C 001F0A0C*/ PPC::Runtime::ASM::bl(fn_8000A2A0);
/*801F3C10 001F0A10*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801F3C14 001F0A14*/ PPC::Runtime::ASM::bne(.L_801F3C58);
/*801F3C18 001F0A18*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2070 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F3C1C 001F0A1C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F3C20 001F0A20*/ PPC::Runtime::ASM::bl(fn_801CF1B8);
/*801F3C24 001F0A24*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb5c, context->r31));
/*801F3C28 001F0A28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F3C2C 001F0A2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb60, context->r31));
/*801F3C30 001F0A30*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xb5c);
/*801F3C34 001F0A34*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r31));
/*801F3C38 001F0A38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r31));
/*801F3C3C 001F0A3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb64, context->r31));
/*801F3C40 001F0A40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801F3C44 001F0A44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb58, context->r31));
/*801F3C48 001F0A48*/ PPC::Runtime::ASM::bl(fn_801CC708);
/*801F3C4C 001F0A4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F3C50 001F0A50*/ PPC::Runtime::ASM::bl(fn_801C9B7C);
/*801F3C54 001F0A54*/ PPC::Runtime::ASM::b(.L_801F3C68);
RUNTIME_PPC_JUMP_LABEL(.L_801F3C58, 0x801F3C58) //this is a jump label
/*801F3C58 001F0A58*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801F3C5C 001F0A5C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F3C60 001F0A60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb58, context->r31));
/*801F3C64 001F0A64*/ PPC::Runtime::ASM::bl(fn_801CA00C);
RUNTIME_PPC_JUMP_LABEL(.L_801F3C68, 0x801F3C68) //this is a jump label
/*801F3C68 001F0A68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F3C6C 001F0A6C*/ PPC::Runtime::ASM::bl(fn_801F508C);
/*801F3C70 001F0A70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F3C74 001F0A74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F3C78 001F0A78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F3C7C 001F0A7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F3C80 001F0A80*/ PPC::Runtime::ASM::blr();
}