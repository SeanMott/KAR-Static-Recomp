//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_stGetCurrentStageKind.hpp"
#include "fn_800DB774.hpp"
#include "fn_800DB774.hpp"



void fn_8010F92C(PPC::Runtime::GCContext* context)
{
/*8010F92C 0010C72C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8010F930 0010C730*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010F934 0010C734*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010F938 0010C738*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010F93C 0010C73C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010F940 0010C740*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010F944 0010C744*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8010F948 0010C748*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010F94C 0010C74C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*8010F950 0010C750*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8010F954 0010C754*/ PPC::Runtime::ASM::bl(fn_stGetCurrentStageKind);
/*8010F958 0010C758*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x21);
/*8010F95C 0010C75C*/ PPC::Runtime::ASM::beq(.L_8010F9A4);
/*8010F960 0010C760*/ PPC::Runtime::ASM::bge(.L_8010F9D8);
/*8010F964 0010C764*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x13);
/*8010F968 0010C768*/ PPC::Runtime::ASM::beq(.L_8010F970);
/*8010F96C 0010C76C*/ PPC::Runtime::ASM::b(.L_8010F9D8);
RUNTIME_PPC_JUMP_LABEL(.L_8010F970, 0x8010F970) //this is a jump label
/*8010F970 0010C770*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8010F974 0010C774*/ PPC::Runtime::ASM::mr(context->r29, context->r31);
/*8010F978 0010C778*/ PPC::Runtime::ASM::b(.L_8010F994);
RUNTIME_PPC_JUMP_LABEL(.L_8010F97C, 0x8010F97C) //this is a jump label
/*8010F97C 0010C77C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8010F980 0010C780*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8010F984 0010C784*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r29);
/*8010F988 0010C788*/ PPC::Runtime::ASM::bl(fn_800DB774);
/*8010F98C 0010C78C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*8010F990 0010C790*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8010F994, 0x8010F994) //this is a jump label
/*8010F994 0010C794*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8010F998 0010C798*/ PPC::Runtime::ASM::cmpw(context->r31, context->r0);
/*8010F99C 0010C79C*/ PPC::Runtime::ASM::blt(.L_8010F97C);
/*8010F9A0 0010C7A0*/ PPC::Runtime::ASM::b(.L_8010F9EC);
RUNTIME_PPC_JUMP_LABEL(.L_8010F9A4, 0x8010F9A4) //this is a jump label
/*8010F9A4 0010C7A4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8010F9A8 0010C7A8*/ PPC::Runtime::ASM::mr(context->r29, context->r31);
/*8010F9AC 0010C7AC*/ PPC::Runtime::ASM::b(.L_8010F9C8);
RUNTIME_PPC_JUMP_LABEL(.L_8010F9B0, 0x8010F9B0) //this is a jump label
/*8010F9B0 0010C7B0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8010F9B4 0010C7B4*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8010F9B8 0010C7B8*/ PPC::Runtime::ASM::lwzx(context->r4, context->r4, context->r29);
/*8010F9BC 0010C7BC*/ PPC::Runtime::ASM::bl(fn_800DB774);
/*8010F9C0 0010C7C0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*8010F9C4 0010C7C4*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8010F9C8, 0x8010F9C8) //this is a jump label
/*8010F9C8 0010C7C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8010F9CC 0010C7CC*/ PPC::Runtime::ASM::cmpw(context->r31, context->r0);
/*8010F9D0 0010C7D0*/ PPC::Runtime::ASM::blt(.L_8010F9B0);
/*8010F9D4 0010C7D4*/ PPC::Runtime::ASM::b(.L_8010F9EC);
RUNTIME_PPC_JUMP_LABEL(.L_8010F9D8, 0x8010F9D8) //this is a jump label
/*8010F9D8 0010C7D8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1041 @ Get_MemoryOffset_HighBit);
/*8010F9DC 0010C7DC*/ PPC::Runtime::ASM::li(context->r4, 0x43);
/*8010F9E0 0010C7E0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1041 @ Get_MemoryOffset_LowBit);
/*8010F9E4 0010C7E4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6378 @ Get_MemoryOffset_SDA21);
/*8010F9E8 0010C7E8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8010F9EC, 0x8010F9EC) //this is a jump label
/*8010F9EC 0010C7EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010F9F0 0010C7F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010F9F4 0010C7F4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010F9F8 0010C7F8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010F9FC 0010C7FC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8010FA00 0010C800*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010FA04 0010C804*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8010FA08 0010C808*/ PPC::Runtime::ASM::blr();
}