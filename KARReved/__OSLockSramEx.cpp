//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void __OSLockSramEx(PPC::Runtime::GCContext* context)
{
/*803D90B0 003D5EB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D90B4 003D5EB4*/ PPC::Runtime::ASM::lis(context->r3, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D90B8 003D5EB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D90BC 003D5EBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803D90C0 003D5EC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803D90C4 003D5EC4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D90C8 003D5EC8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D90CC 003D5ECC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*803D90D0 003D5ED0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*803D90D4 003D5ED4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D90D8 003D5ED8*/ PPC::Runtime::ASM::beq(.L_803D90E8);
/*803D90DC 003D5EDC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D90E0 003D5EE0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D90E4 003D5EE4*/ PPC::Runtime::ASM::b(.L_803D90F8);
RUNTIME_PPC_JUMP_LABEL(.L_803D90E8, 0x803D90E8) //this is a jump label
/*803D90E8 003D5EE8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803D90EC 003D5EEC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D90F0 003D5EF0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x14);
/*803D90F4 003D5EF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D90F8, 0x803D90F8) //this is a jump label
/*803D90F8 003D5EF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D90FC 003D5EFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803D9100 003D5F00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803D9104 003D5F04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D9108 003D5F08*/ PPC::Runtime::ASM::blr();
}