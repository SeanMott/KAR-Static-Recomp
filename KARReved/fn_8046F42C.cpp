//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_8046F42C(PPC::Runtime::GCContext* context)
{
/*8046F42C 0046C22C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046F430 0046C230*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046F434 0046C234*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*8046F438 0046C238*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046F43C 0046C23C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046F440 0046C240*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*8046F444 0046C244*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046F448 0046C248*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*8046F44C 0046C24C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046F450 0046C250*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*8046F454 0046C254*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8046F458 0046C258*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*8046F45C 0046C25C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x11);
/*8046F460 0046C260*/ PPC::Runtime::ASM::beq(.L_8046F46C);
/*8046F464 0046C264*/ PPC::Runtime::ASM::li(context->r31, -0xc);
/*8046F468 0046C268*/ PPC::Runtime::ASM::b(.L_8046F490);
RUNTIME_PPC_JUMP_LABEL(.L_8046F46C, 0x8046F46C) //this is a jump label
/*8046F46C 0046C26C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8046F470 0046C270*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8046F474 0046C274*/ PPC::Runtime::ASM::beq(.L_8046F480);
/*8046F478 0046C278*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd8, context->r28));
/*8046F47C 0046C27C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8046F480, 0x8046F480) //this is a jump label
/*8046F480 0046C280*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8046F484 0046C284*/ PPC::Runtime::ASM::beq(.L_8046F490);
/*8046F488 0046C288*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd4, context->r28));
/*8046F48C 0046C28C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_8046F490, 0x8046F490) //this is a jump label
/*8046F490 0046C290*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8046F494 0046C294*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8046F498 0046C298*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8046F49C 0046C29C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046F4A0 0046C2A0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046F4A4 0046C2A4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046F4A8 0046C2A8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046F4AC 0046C2AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*8046F4B0 0046C2B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046F4B4 0046C2B4*/ PPC::Runtime::ASM::blr();
}