//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011245C.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_8012FA34(PPC::Runtime::GCContext* context)
{
/*8012FA34 0012C834*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012FA38 0012C838*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012FA3C 0012C83C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1126 @ Get_MemoryOffset_HighBit);
/*8012FA40 0012C840*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012FA44 0012C844*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012FA48 0012C848*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012FA4C 0012C84C*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1126 @ Get_MemoryOffset_LowBit);
/*8012FA50 0012C850*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012FA54 0012C854*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012FA58 0012C858*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0xd34);
/*8012FA5C 0012C85C*/ PPC::Runtime::ASM::bl(fn_8011245C);
/*8012FA60 0012C860*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8012FA64 0012C864*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*8012FA68 0012C868*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8012FA6C 0012C86C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*8012FA70 0012C870*/ PPC::Runtime::ASM::beq(.L_8012FAA0);
/*8012FA74 0012C874*/ PPC::Runtime::ASM::bge(.L_8012FABC);
/*8012FA78 0012C878*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8012FA7C 0012C87C*/ PPC::Runtime::ASM::bge(.L_8012FA84);
/*8012FA80 0012C880*/ PPC::Runtime::ASM::b(.L_8012FABC);
RUNTIME_PPC_JUMP_LABEL(.L_8012FA84, 0x8012FA84) //this is a jump label
/*8012FA84 0012C884*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8012FA88 0012C888*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8012FA8C 0012C88C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*8012FA90 0012C890*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8012FA94 0012C894*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8012FA98 0012C898*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8012FA9C 0012C89C*/ PPC::Runtime::ASM::b(.L_8012FAD4);
RUNTIME_PPC_JUMP_LABEL(.L_8012FAA0, 0x8012FAA0) //this is a jump label
/*8012FAA0 0012C8A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8012FAA4 0012C8A4*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8012FAA8 0012C8A8*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x1c);
/*8012FAAC 0012C8AC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8012FAB0 0012C8B0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8012FAB4 0012C8B4*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8012FAB8 0012C8B8*/ PPC::Runtime::ASM::b(.L_8012FAD4);
RUNTIME_PPC_JUMP_LABEL(.L_8012FABC, 0x8012FABC) //this is a jump label
/*8012FABC 0012C8BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8012FAC0 0012C8C0*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8012FAC4 0012C8C4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*8012FAC8 0012C8C8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8012FACC 0012C8CC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8012FAD0 0012C8D0*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_8012FAD4, 0x8012FAD4) //this is a jump label
/*8012FAD4 0012C8D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012FAD8 0012C8D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012FADC 0012C8DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012FAE0 0012C8E0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012FAE4 0012C8E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012FAE8 0012C8E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012FAEC 0012C8EC*/ PPC::Runtime::ASM::blr();
}