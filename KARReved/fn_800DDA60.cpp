//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800DDA60(PPC::Runtime::GCContext* context)
{
/*800DDA60 000DA860*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800DDA64 000DA864*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DDA68 000DA868*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDA6C 000DA86C*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DDA70 000DA870*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800DDA74 000DA874*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800DDA78 000DA878*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800DDA7C 000DA87C*/ PPC::Runtime::ASM::mr(context->r31, context->r30);
/*800DDA80 000DA880*/ PPC::Runtime::ASM::slwi(context->r29, context->r4, 1);
/*800DDA84 000DA884*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800DDA88 000DA888*/ PPC::Runtime::ASM::b(.L_800DDAC8);
RUNTIME_PPC_JUMP_LABEL(.L_800DDA8C, 0x800DDA8C) //this is a jump label
/*800DDA8C 000DA88C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r26));
/*800DDA90 000DA890*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r30);
/*800DDA94 000DA894*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800DDA98 000DA898*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x1a);
/*800DDA9C 000DA89C*/ PPC::Runtime::ASM::beq(.L_800DDAAC);
/*800DDAA0 000DA8A0*/ PPC::Runtime::ASM::subis(context->r0, context->r4, 0x200);
/*800DDAA4 000DA8A4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1a);
/*800DDAA8 000DA8A8*/ PPC::Runtime::ASM::bne(.L_800DDAC0);
RUNTIME_PPC_JUMP_LABEL(.L_800DDAAC, 0x800DDAAC) //this is a jump label
/*800DDAAC 000DA8AC*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800DDAB0 000DA8B0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800DDAB4 000DA8B4*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DDAB8 000DA8B8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*800DDABC 000DA8BC*/ PPC::Runtime::ASM::sth(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_800DDAC0, 0x800DDAC0) //this is a jump label
/*800DDAC0 000DA8C0*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x140);
/*800DDAC4 000DA8C4*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DDAC8, 0x800DDAC8) //this is a jump label
/*800DDAC8 000DA8C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r26));
/*800DDACC 000DA8CC*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800DDAD0 000DA8D0*/ PPC::Runtime::ASM::blt(.L_800DDA8C);
/*800DDAD4 000DA8D4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800DDAD8 000DA8D8*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800DDADC 000DA8DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DDAE0 000DA8E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DDAE4 000DA8E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800DDAE8 000DA8E8*/ PPC::Runtime::ASM::blr();
}