//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRKGetFreeBuffer.hpp"
#include "fn_TRKTargetAddStopInfo.hpp"
#include "fn_TRKTargetAddExceptionInfo.hpp"
#include "fn_TRKRequestSend.hpp"
#include "fn_TRKReleaseBuffer.hpp"
#include "fn_TRKReleaseBuffer.hpp"



void fn_TRKDoNotifyStopped(PPC::Runtime::GCContext* context)
{
/*803BFF40 003BCD40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803BFF44 003BCD44*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BFF48 003BCD48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BFF4C 003BCD4C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803BFF50 003BCD50*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BFF54 003BCD54*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BFF58 003BCD58*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803BFF5C 003BCD5C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*803BFF60 003BCD60*/ PPC::Runtime::ASM::bl(fn_TRKGetFreeBuffer);
/* 803BFF64 003BCD64  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803BFF68 003BCD68*/ PPC::Runtime::ASM::bne(.L_803BFFBC);
/*803BFF6C 003BCD6C*/ PPC::Runtime::ASM::bne(.L_803BFF8C);
/*803BFF70 003BCD70*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x90);
/*803BFF74 003BCD74*/ PPC::Runtime::ASM::bne(.L_803BFF84);
/*803BFF78 003BCD78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BFF7C 003BCD7C*/ PPC::Runtime::ASM::bl(fn_TRKTargetAddStopInfo);
/*803BFF80 003BCD80*/ PPC::Runtime::ASM::b(.L_803BFF8C);
RUNTIME_PPC_JUMP_LABEL(.L_803BFF84, 0x803BFF84) //this is a jump label
/*803BFF84 003BCD84*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BFF88 003BCD88*/ PPC::Runtime::ASM::bl(fn_TRKTargetAddExceptionInfo);
RUNTIME_PPC_JUMP_LABEL(.L_803BFF8C, 0x803BFF8C) //this is a jump label
/*803BFF8C 003BCD8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BFF90 003BCD90*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*803BFF94 003BCD94*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803BFF98 003BCD98*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*803BFF9C 003BCD9C*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*803BFFA0 003BCDA0*/ PPC::Runtime::ASM::bl(fn_TRKRequestSend);
/* 803BFFA4 003BCDA4  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803BFFA8 003BCDA8*/ PPC::Runtime::ASM::bne(.L_803BFFB4);
/*803BFFAC 003BCDAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BFFB0 003BCDB0*/ PPC::Runtime::ASM::bl(fn_TRKReleaseBuffer);
RUNTIME_PPC_JUMP_LABEL(.L_803BFFB4, 0x803BFFB4) //this is a jump label
/*803BFFB4 003BCDB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BFFB8 003BCDB8*/ PPC::Runtime::ASM::bl(fn_TRKReleaseBuffer);
RUNTIME_PPC_JUMP_LABEL(.L_803BFFBC, 0x803BFFBC) //this is a jump label
/*803BFFBC 003BCDBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BFFC0 003BCDC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803BFFC4 003BCDC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BFFC8 003BCDC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BFFCC 003BCDCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BFFD0 003BCDD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803BFFD4 003BCDD4*/ PPC::Runtime::ASM::blr();
}