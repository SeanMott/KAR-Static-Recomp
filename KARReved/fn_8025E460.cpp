//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025E460(PPC::Runtime::GCContext* context)
{
/*8025E460 0025B260*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E464 0025B264*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E468 0025B268*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E46C 0025B26C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E470 0025B270*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E474 0025B274*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025E478 0025B278*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E47C 0025B27C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E480 0025B280*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025E484 0025B284*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E488 0025B288*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E48C 0025B28C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025E490 0025B290*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E494 0025B294*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E498 0025B298*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025E49C 0025B29C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E4A0 0025B2A0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025E4A4 0025B2A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E4A8 0025B2A8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E4AC 0025B2AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025E4B0 0025B2B0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E4B4 0025B2B4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025E4B8 0025B2B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025E4BC 0025B2BC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F14 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E4C0 0025B2C0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025E4C4 0025B2C4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E4C8 0025B2C8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F10 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E4CC 0025B2CC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E4D0 0025B2D0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E4D4 0025B2D4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025E4D8 0025B2D8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E4DC 0025B2DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E4E0 0025B2E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E4E4 0025B2E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E4E8 0025B2E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E4EC 0025B2EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E4F0 0025B2F0*/ PPC::Runtime::ASM::blr();
}