//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D2F80(PPC::Runtime::GCContext* context)
{
/*800D2F80 000CFD80*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D2F84 000CFD84*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 6);
/*800D2F88 000CFD88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r4));
/*800D2F8C 000CFD8C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800D2F90 000CFD90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3));
/*800D2F94 000CFD94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r3));
/*800D2F98 000CFD98*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*800D2F9C 000CFD9C*/ PPC::Runtime::ASM::beq(.L_800D2FA4);
/*800D2FA0 000CFDA0*/ PPC::Runtime::ASM::b(.L_800D2FAC);
RUNTIME_PPC_JUMP_LABEL(.L_800D2FA4, 0x800D2FA4) //this is a jump label
/*800D2FA4 000CFDA4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800D2FA8 000CFDA8*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_800D2FAC, 0x800D2FAC) //this is a jump label
/*800D2FAC 000CFDAC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800D2FB0 000CFDB0*/ PPC::Runtime::ASM::blr();
}