//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013121C.hpp"
#include "fn_80059520.hpp"



void fn_8015E7D8(PPC::Runtime::GCContext* context)
{
/*8015E7D8 0015B5D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015E7DC 0015B5DC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015E7E0 0015B5E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E7E4 0015B5E4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015E7E8 0015B5E8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015E7EC 0015B5EC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015E7F0 0015B5F0*/ PPC::Runtime::ASM::bl(fn_8013121C);
/*8015E7F4 0015B5F4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1263 @ Get_MemoryOffset_HighBit);
/*8015E7F8 0015B5F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8015E7FC 0015B5FC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1263 @ Get_MemoryOffset_LowBit);
/*8015E800 0015B600*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8015E804 0015B604*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x8d0);
/*8015E808 0015B608*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8015E80C 0015B60C*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8015E810 0015B610*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015E814 0015B614*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015E818 0015B618*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015E81C 0015B61C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015E820 0015B620*/ PPC::Runtime::ASM::blr();
}