//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "memcpy.hpp"
#include "memcpy.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_SOGetResolver(PPC::Runtime::GCContext* context)
{
/*8047AD40 00477B40*/ PPC::Runtime::ASM::mflr(context->r0);
/*8047AD44 00477B44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8047AD48 00477B48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8047AD4C 00477B4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8047AD50 00477B50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8047AD54 00477B54*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*8047AD58 00477B58*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047AD5C 00477B5C*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*8047AD60 00477B60*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8047AD64 00477B64*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DE68C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8047AD68 00477B68*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*8047AD6C 00477B6C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8047AD70 00477B70*/ PPC::Runtime::ASM::beq(.L_8047AD7C);
/*8047AD74 00477B74*/ PPC::Runtime::ASM::li(context->r30, -0x27);
/*8047AD78 00477B78*/ PPC::Runtime::ASM::b(.L_8047ADC0);
RUNTIME_PPC_JUMP_LABEL(.L_8047AD7C, 0x8047AD7C) //this is a jump label
/*8047AD7C 00477B7C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8047AD80 00477B80*/ PPC::Runtime::ASM::beq(.L_8047AD9C);
/*8047AD84 00477B84*/ PPC::Runtime::ASM::lis(context->r3, lbl_805C1CB0 @ Get_MemoryOffset_HighBit);
/*8047AD88 00477B88*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_805C1CB0 @ Get_MemoryOffset_LowBit);
/*8047AD8C 00477B8C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*8047AD90 00477B90*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x790);
/*8047AD94 00477B94*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8047AD98 00477B98*/ PPC::Runtime::ASM::bl(memcpy);
RUNTIME_PPC_JUMP_LABEL(.L_8047AD9C, 0x8047AD9C) //this is a jump label
/*8047AD9C 00477B9C*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8047ADA0 00477BA0*/ PPC::Runtime::ASM::beq(.L_8047ADBC);
/*8047ADA4 00477BA4*/ PPC::Runtime::ASM::lis(context->r3, lbl_805C1CB0 @ Get_MemoryOffset_HighBit);
/*8047ADA8 00477BA8*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_805C1CB0 @ Get_MemoryOffset_LowBit);
/*8047ADAC 00477BAC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*8047ADB0 00477BB0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x794);
/*8047ADB4 00477BB4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8047ADB8 00477BB8*/ PPC::Runtime::ASM::bl(memcpy);
RUNTIME_PPC_JUMP_LABEL(.L_8047ADBC, 0x8047ADBC) //this is a jump label
/*8047ADBC 00477BBC*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8047ADC0, 0x8047ADC0) //this is a jump label
/*8047ADC0 00477BC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8047ADC4 00477BC4*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8047ADC8 00477BC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8047ADCC 00477BCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8047ADD0 00477BD0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8047ADD4 00477BD4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8047ADD8 00477BD8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8047ADDC 00477BDC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8047ADE0 00477BE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8047ADE4 00477BE4*/ PPC::Runtime::ASM::blr();
}