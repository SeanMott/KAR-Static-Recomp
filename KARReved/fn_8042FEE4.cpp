//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_JOBJ_SetMtxDirtySub.hpp"



void fn_8042FEE4(PPC::Runtime::GCContext* context)
{
/*8042FEE4 0042CCE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8042FEE8 0042CCE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8042FEEC 0042CCEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8042FEF0 0042CCF0*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8042FEF4 0042CCF4*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8042FEF8 0042CCF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8042FEFC 0042CCFC  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8042FF00 0042CD00*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*8042FF04 0042CD04*/ PPC::Runtime::ASM::bne(.L_8042FF18);
/*8042FF08 0042CD08*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_474 @ Get_MemoryOffset_SDA21);
/*8042FF0C 0042CD0C*/ PPC::Runtime::ASM::li(context->r4, 0x460);
/*8042FF10 0042CD10*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_473 @ Get_MemoryOffset_SDA21);
/*8042FF14 0042CD14*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8042FF18, 0x8042FF18) //this is a jump label
/*8042FF18 0042CD18*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8042FF1C 0042CD1C*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f31);
/*8042FF20 0042CD20*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8042FF24 0042CD24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8042FF28 0042CD28*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8042FF2C 0042CD2C*/ PPC::Runtime::ASM::bne(.L_8042FF78);
/*8042FF30 0042CD30*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8042FF34 0042CD34*/ PPC::Runtime::ASM::beq(.L_8042FF78);
/*8042FF38 0042CD38*/ PPC::Runtime::ASM::bne(.L_8042FF4C);
/*8042FF3C 0042CD3C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_474 @ Get_MemoryOffset_SDA21);
/*8042FF40 0042CD40*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8042FF44 0042CD44*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_473 @ Get_MemoryOffset_SDA21);
/*8042FF48 0042CD48*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8042FF4C, 0x8042FF4C) //this is a jump label
/*8042FF4C 0042CD4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8042FF50 0042CD50*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8042FF54 0042CD54*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8042FF58 0042CD58*/ PPC::Runtime::ASM::bne(.L_8042FF68);
/*8042FF5C 0042CD5C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8042FF60 0042CD60*/ PPC::Runtime::ASM::beq(.L_8042FF68);
/*8042FF64 0042CD64*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8042FF68, 0x8042FF68) //this is a jump label
/*8042FF68 0042CD68*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8042FF6C 0042CD6C*/ PPC::Runtime::ASM::bne(.L_8042FF78);
/*8042FF70 0042CD70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8042FF74 0042CD74*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8042FF78, 0x8042FF78) //this is a jump label
/*8042FF78 0042CD78*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8042FF7C 0042CD7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8042FF80 0042CD80*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8042FF84 0042CD84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8042FF88 0042CD88*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8042FF8C 0042CD8C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8042FF90 0042CD90*/ PPC::Runtime::ASM::blr();
}