//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_80446820.hpp"
#include "fn_80445CF4.hpp"



void fn_80445AD4(PPC::Runtime::GCContext* context)
{
/*80445AD4 004428D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80445AD8 004428D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80445ADC 004428DC*/ PPC::Runtime::ASM::lis(context->r4, lbl_8058ECA0 @ Get_MemoryOffset_HighBit);
/*80445AE0 004428E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80445AE4 004428E4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_8058ECA0 @ Get_MemoryOffset_LowBit);
/*80445AE8 004428E8*/ PPC::Runtime::ASM::cmplw(context->r3, context->r4);
/*80445AEC 004428EC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80445AF0 004428F0*/ PPC::Runtime::ASM::bne(.L_80445AFC);
/*80445AF4 004428F4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80445AF8 004428F8*/ PPC::Runtime::ASM::b(.L_80445B24);
RUNTIME_PPC_JUMP_LABEL(.L_80445AFC, 0x80445AFC) //this is a jump label
/*80445AFC 004428FC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x40);
/*80445B00 00442900*/ PPC::Runtime::ASM::cmplw(context->r3, context->r0);
/*80445B04 00442904*/ PPC::Runtime::ASM::bne(.L_80445B10);
/*80445B08 00442908*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*80445B0C 0044290C*/ PPC::Runtime::ASM::b(.L_80445B24);
RUNTIME_PPC_JUMP_LABEL(.L_80445B10, 0x80445B10) //this is a jump label
/*80445B10 00442910*/ PPC::Runtime::ASM::lis(context->r3, lbl_80508BE0 @ Get_MemoryOffset_HighBit);
/*80445B14 00442914*/ PPC::Runtime::ASM::li(context->r4, 0xb0);
/*80445B18 00442918*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80508BE0 @ Get_MemoryOffset_LowBit);
/*80445B1C 0044291C*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_347 @ Get_MemoryOffset_SDA21);
/*80445B20 00442920*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80445B24, 0x80445B24) //this is a jump label
/*80445B24 00442924*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80445B28 00442928*/ PPC::Runtime::ASM::li(context->r3, SkipAddress_15 @ Get_MemoryOffset_SDA21);
/*80445B2C 0044292C*/ PPC::Runtime::ASM::stb(context->r0, SkipAddress_20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80445B30 00442930*/ PPC::Runtime::ASM::stbx(context->r0, context->r3, context->r31);
/*80445B34 00442934*/ PPC::Runtime::ASM::bl(fn_80446820);
/*80445B38 00442938*/ PPC::Runtime::ASM::bl(fn_80445CF4);
/*80445B3C 0044293C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80445B40 00442940*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80445B44 00442944*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80445B48 00442948*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80445B4C 0044294C*/ PPC::Runtime::ASM::blr();
}