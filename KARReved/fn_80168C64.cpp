//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801689BC.hpp"



void fn_80168C64(PPC::Runtime::GCContext* context)
{
/*80168C64 00165A64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80168C68 00165A68*/ PPC::Runtime::ASM::mflr(context->r0);
/*80168C6C 00165A6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80168C70 00165A70*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80168C74 00165A74*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80168C78 00165A78*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80168C7C 00165A7C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80168C80 00165A80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80168C84 00165A84*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80168C88 00165A88*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80168C8C 00165A8C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80168C90 00165A90*/ PPC::Runtime::ASM::bl(fn_801689BC);
/*80168C94 00165A94*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80168C98 00165A98*/ PPC::Runtime::ASM::bne(.L_80168CAC);
/*80168C9C 00165A9C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B18 @ Get_MemoryOffset_SDA21);
/*80168CA0 00165AA0*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80168CA4 00165AA4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B20 @ Get_MemoryOffset_SDA21);
/*80168CA8 00165AA8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80168CAC, 0x80168CAC) //this is a jump label
/*80168CAC 00165AAC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80168CB0 00165AB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80168CB4 00165AB4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80168CB8 00165AB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80168CBC 00165ABC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80168CC0 00165AC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80168CC4 00165AC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80168CC8 00165AC8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80168CCC 00165ACC*/ PPC::Runtime::ASM::bne(.L_80168D18);
/*80168CD0 00165AD0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80168CD4 00165AD4*/ PPC::Runtime::ASM::beq(.L_80168D18);
/*80168CD8 00165AD8*/ PPC::Runtime::ASM::bne(.L_80168CEC);
/*80168CDC 00165ADC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6B18 @ Get_MemoryOffset_SDA21);
/*80168CE0 00165AE0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80168CE4 00165AE4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6B20 @ Get_MemoryOffset_SDA21);
/*80168CE8 00165AE8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80168CEC, 0x80168CEC) //this is a jump label
/*80168CEC 00165AEC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80168CF0 00165AF0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80168CF4 00165AF4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80168CF8 00165AF8*/ PPC::Runtime::ASM::bne(.L_80168D08);
/*80168CFC 00165AFC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80168D00 00165B00*/ PPC::Runtime::ASM::beq(.L_80168D08);
/*80168D04 00165B04*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80168D08, 0x80168D08) //this is a jump label
/*80168D08 00165B08*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80168D0C 00165B0C*/ PPC::Runtime::ASM::bne(.L_80168D18);
/*80168D10 00165B10*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80168D14 00165B14*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80168D18, 0x80168D18) //this is a jump label
/*80168D18 00165B18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80168D1C 00165B1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80168D20 00165B20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80168D24 00165B24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80168D28 00165B28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80168D2C 00165B2C*/ PPC::Runtime::ASM::blr();
}