//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_VIGetNextField(PPC::Runtime::GCContext* context)
{
/*803DF470 003DC270*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DF474 003DC274*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DF478 003DC278*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803DF47C 003DC27C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DF480 003DC280*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803DF484 003DC284*/ PPC::Runtime::ASM::lis(context->r4, 0xcc00);
/*803DF488 003DC288*/ PPC::Runtime::ASM::addi(context->r8, context->r4, 0x2000);
/*803DF48C 003DC28C*/ PPC::Runtime::ASM::lhzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r8));
/*803DF490 003DC290*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x2000);
/*803DF494 003DC294*/ PPC::Runtime::ASM::clrlwi(context->r6, context->r0, 21);
RUNTIME_PPC_JUMP_LABEL(.L_803DF498, 0x803DF498) //this is a jump label
/*803DF498 003DC298*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r8));
/*803DF49C 003DC29C*/ PPC::Runtime::ASM::mr(context->r7, context->r6);
/*803DF4A0 003DC2A0*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e, context->r5));
/*803DF4A4 003DC2A4*/ PPC::Runtime::ASM::clrlwi(context->r6, context->r0, 21);
/*803DF4A8 003DC2A8*/ PPC::Runtime::ASM::cmplw(context->r7, context->r6);
/*803DF4AC 003DC2AC*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r4, 21);
/*803DF4B0 003DC2B0*/ PPC::Runtime::ASM::bne(.L_803DF498);
/*803DF4B4 003DC2B4*/ PPC::Runtime::ASM::lwz(context->r7, STRUCT_BYTE4_COUNT_1805DDFA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DF4B8 003DC2B8*/ PPC::Runtime::ASM::subi(context->r0, context->r6, 0x1);
/*803DF4BC 003DC2BC*/ PPC::Runtime::ASM::subi(context->r5, context->r4, 0x1);
/*803DF4C0 003DC2C0*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r7));
/*803DF4C4 003DC2C4*/ PPC::Runtime::ASM::slwi(context->r6, context->r0, 1);
/*803DF4C8 003DC2C8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r7));
/*803DF4CC 003DC2CC*/ PPC::Runtime::ASM::divwu(context->r4, context->r5, context->r4);
/*803DF4D0 003DC2D0*/ PPC::Runtime::ASM::add(context->r4, context->r6, context->r4);
/*803DF4D4 003DC2D4*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*803DF4D8 003DC2D8*/ PPC::Runtime::ASM::bge(.L_803DF4E4);
/*803DF4DC 003DC2DC*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*803DF4E0 003DC2E0*/ PPC::Runtime::ASM::b(.L_803DF4E8);
RUNTIME_PPC_JUMP_LABEL(.L_803DF4E4, 0x803DF4E4) //this is a jump label
/*803DF4E4 003DC2E4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803DF4E8, 0x803DF4E8) //this is a jump label
/*803DF4E8 003DC2E8*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803DF4EC 003DC2EC*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056E490 @ Get_MemoryOffset_HighBit);
/*803DF4F0 003DC2F0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8056E490 @ Get_MemoryOffset_LowBit);
/*803DF4F4 003DC2F4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r3));
/*803DF4F8 003DC2F8*/ PPC::Runtime::ASM::xori(context->r3, context->r31, 0x1);
/*803DF4FC 003DC2FC*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 31);
/*803DF500 003DC300*/ PPC::Runtime::ASM::xor(context->r3, context->r3, context->r0);
/*803DF504 003DC304*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803DF508 003DC308*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803DF50C 003DC30C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803DF510 003DC310*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DF514 003DC314*/ PPC::Runtime::ASM::blr();
}