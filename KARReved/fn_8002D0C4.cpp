//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8002D0C4(PPC::Runtime::GCContext* context)
{
/*8002D0C4 00029EC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8002D0C8 00029EC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8002D0CC 00029ECC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8002D0D0 00029ED0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8002D0D4 00029ED4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8002D0D8 00029ED8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cf, context->r3));
/*8002D0DC 00029EDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8002D0E0 00029EE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8002D0E4 00029EE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8002D0E8 00029EE8*/ PPC::Runtime::ASM::blr();
}