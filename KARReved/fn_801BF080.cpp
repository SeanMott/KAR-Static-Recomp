//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A0388.hpp"
#include "fn_801C0764.hpp"
#include "fn_HEAP_bLock.hpp"
#include "fn_801BF2F8.hpp"



void fn_801BF080(PPC::Runtime::GCContext* context)
{
/*801BF080 001BBE80*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BF084 001BBE84*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BF088 001BBE88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF08C 001BBE8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF090 001BBE90*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BF094 001BBE94*/ PPC::Runtime::ASM::bl(fn_801A0388);
/*801BF098 001BBE98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF09C 001BBE9C*/ PPC::Runtime::ASM::bl(fn_801C0764);
/*801BF0A0 001BBEA0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BF0A4 001BBEA4*/ PPC::Runtime::ASM::bne(.L_801BF0C0);
/*801BF0A8 001BBEA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF0AC 001BBEAC*/ PPC::Runtime::ASM::bl(fn_HEAP_bLock);
/*801BF0B0 001BBEB0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BF0B4 001BBEB4*/ PPC::Runtime::ASM::beq(.L_801BF0C0);
/*801BF0B8 001BBEB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF0BC 001BBEBC*/ PPC::Runtime::ASM::bl(fn_801BF2F8);
RUNTIME_PPC_JUMP_LABEL(.L_801BF0C0, 0x801BF0C0) //this is a jump label
/*801BF0C0 001BBEC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF0C4 001BBEC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF0C8 001BBEC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BF0CC 001BBECC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BF0D0 001BBED0*/ PPC::Runtime::ASM::blr();
}