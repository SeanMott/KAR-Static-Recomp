//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8020B490.hpp"



void fn_80216364(PPC::Runtime::GCContext* context)
{
/*80216364 00213164*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80216368 00213168*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021636C 0021316C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2604 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80216370 00213170*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80216374 00213174*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x974, context->r3));
/*80216378 00213178*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r3));
/*8021637C 0021317C*/ PPC::Runtime::ASM::fadds(context->f1, context->f2, context->f1);
/*80216380 00213180*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x974, context->r3));
/*80216384 00213184*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x974, context->r3));
/*80216388 00213188*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8021638C 0021318C*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80216390 00213190*/ PPC::Runtime::ASM::bne(.L_802163B8);
/*80216394 00213194*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x974, context->r3));
/*80216398 00213198*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2600 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8021639C 0021319C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r3));
/*802163A0 002131A0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*802163A4 002131A4*/ PPC::Runtime::ASM::bge(.L_802163AC);
/*802163A8 002131A8*/ PPC::Runtime::ASM::fneg(context->f1, context->f1);
RUNTIME_PPC_JUMP_LABEL(.L_802163AC, 0x802163AC) //this is a jump label
/*802163AC 002131AC*/ PPC::Runtime::ASM::fneg(context->f0, context->f1);
/*802163B0 002131B0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r3));
/*802163B4 002131B4*/ PPC::Runtime::ASM::b(.L_802163E4);
RUNTIME_PPC_JUMP_LABEL(.L_802163B8, 0x802163B8) //this is a jump label
/*802163B8 002131B8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2608 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802163BC 002131BC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*802163C0 002131C0*/ PPC::Runtime::ASM::cror(eq, lt, eq);
/*802163C4 002131C4*/ PPC::Runtime::ASM::bne(.L_802163E4);
/*802163C8 002131C8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x974, context->r3));
/*802163CC 002131CC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2600 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802163D0 002131D0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r3));
/*802163D4 002131D4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*802163D8 002131D8*/ PPC::Runtime::ASM::bge(.L_802163E0);
/*802163DC 002131DC*/ PPC::Runtime::ASM::fneg(context->f1, context->f1);
RUNTIME_PPC_JUMP_LABEL(.L_802163E0, 0x802163E0) //this is a jump label
/*802163E0 002131E0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4c, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_802163E4, 0x802163E4) //this is a jump label
/*802163E4 002131E4*/ PPC::Runtime::ASM::bl(fn_8020B490);
/*802163E8 002131E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802163EC 002131EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802163F0 002131F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802163F4 002131F4*/ PPC::Runtime::ASM::blr();
}