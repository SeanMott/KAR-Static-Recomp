//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C7B98.hpp"
#include "fn_801C812C.hpp"
#include "fn_801C8138.hpp"
#include "fn_801B78D0.hpp"



void fn_801B7844(PPC::Runtime::GCContext* context)
{
/*801B7844 001B4644*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B7848 001B4648*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B784C 001B464C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B7850 001B4650*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7854 001B4654*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B7858 001B4658*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r3));
/*801B785C 001B465C*/ PPC::Runtime::ASM::bl(fn_801C7B98);
/*801B7860 001B4660*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B7864 001B4664*/ PPC::Runtime::ASM::beq(.L_801B7894);
/*801B7868 001B4668*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801B786C 001B466C*/ PPC::Runtime::ASM::bl(fn_801C812C);
/*801B7870 001B4670*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r31));
/*801B7874 001B4674*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*801B7878 001B4678*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r31));
/*801B787C 001B467C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801B7880 001B4680*/ PPC::Runtime::ASM::bl(fn_801C8138);
/*801B7884 001B4684*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B7888 001B4688*/ PPC::Runtime::ASM::bl(fn_801B78D0);
/*801B788C 001B468C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801B7890 001B4690*/ PPC::Runtime::ASM::b(.L_801B7898);
RUNTIME_PPC_JUMP_LABEL(.L_801B7894, 0x801B7894) //this is a jump label
/*801B7894 001B4694*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801B7898, 0x801B7898) //this is a jump label
/*801B7898 001B4698*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B789C 001B469C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B78A0 001B46A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B78A4 001B46A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B78A8 001B46A8*/ PPC::Runtime::ASM::blr();
}