//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn___GXSetDirtyState.hpp"
#include "fn_PPCSync.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_GXSetDrawDone(PPC::Runtime::GCContext* context)
{
/*803CBDB8 003C8BB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CBDBC 003C8BBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CBDC0 003C8BC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803CBDC4 003C8BC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803CBDC8 003C8BC8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803CBDCC 003C8BCC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803CBDD0 003C8BD0*/ PPC::Runtime::ASM::li(context->r0, 0x61);
/*803CBDD4 003C8BD4*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CBDD8 003C8BD8*/ PPC::Runtime::ASM::lis(context->r6, 0xcc01);
/*803CBDDC 003C8BDC*/ PPC::Runtime::ASM::lis(context->r5, 0x4500);
/*803CBDE0 003C8BE0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r6));
/*803CBDE4 003C8BE4*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x2);
/*803CBDE8 003C8BE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r6));
/*803CBDEC 003C8BEC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803CBDF0 003C8BF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r4));
/*803CBDF4 003C8BF4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803CBDF8 003C8BF8*/ PPC::Runtime::ASM::beq(.L_803CBE00);
/*803CBDFC 003C8BFC*/ PPC::Runtime::ASM::bl(fn___GXSetDirtyState);
RUNTIME_PPC_JUMP_LABEL(.L_803CBE00, 0x803CBE00) //this is a jump label
/*803CBE00 003C8C00*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803CBE04 003C8C04*/ PPC::Runtime::ASM::lis(context->r3, 0xcc01);
/*803CBE08 003C8C08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE0C 003C8C0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE10 003C8C10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE14 003C8C14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE18 003C8C18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE1C 003C8C1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE20 003C8C20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE24 003C8C24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CBE28 003C8C28*/ PPC::Runtime::ASM::bl(fn_PPCSync);
/*803CBE2C 003C8C2C*/ PPC::Runtime::ASM::stb(context->r31, SkipAddress_52 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CBE30 003C8C30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803CBE34 003C8C34*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803CBE38 003C8C38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803CBE3C 003C8C3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803CBE40 003C8C40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803CBE44 003C8C44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803CBE48 003C8C48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CBE4C 003C8C4C*/ PPC::Runtime::ASM::blr();
}