//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___CARDSyncCallback.hpp"
#include "fn___CARDSyncCallback.hpp"
#include "fn_CARDSetStatusAsync.hpp"
#include "fn___CARDSync.hpp"



void fn_803E84E0(PPC::Runtime::GCContext* context)
{
/*803E84E0 003E52E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E84E4 003E52E4*/ PPC::Runtime::ASM::lis(context->r6, fn___CARDSyncCallback @ Get_MemoryOffset_HighBit);
/*803E84E8 003E52E8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E84EC 003E52EC*/ PPC::Runtime::ASM::addi(context->r6, context->r6, fn___CARDSyncCallback @ Get_MemoryOffset_LowBit);
/*803E84F0 003E52F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E84F4 003E52F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E84F8 003E52F8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E84FC 003E52FC*/ PPC::Runtime::ASM::bl(fn_CARDSetStatusAsync);
/*803E8500 003E5300*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E8504 003E5304*/ PPC::Runtime::ASM::bge(.L_803E850C);
/*803E8508 003E5308*/ PPC::Runtime::ASM::b(.L_803E8514);
RUNTIME_PPC_JUMP_LABEL(.L_803E850C, 0x803E850C) //this is a jump label
/*803E850C 003E530C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E8510 003E5310*/ PPC::Runtime::ASM::bl(fn___CARDSync);
RUNTIME_PPC_JUMP_LABEL(.L_803E8514, 0x803E8514) //this is a jump label
/*803E8514 003E5314*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E8518 003E5318*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E851C 003E531C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E8520 003E5320*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E8524 003E5324*/ PPC::Runtime::ASM::blr();
}