//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___SITransfer.hpp"



void fn_AlarmHandler(PPC::Runtime::GCContext* context)
{
/*803E96CC 003E64CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E96D0 003E64D0*/ PPC::Runtime::ASM::lis(context->r4, lbl_8056E7A8 @ Get_MemoryOffset_HighBit);
/*803E96D4 003E64D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E96D8 003E64D8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_8056E7A8 @ Get_MemoryOffset_LowBit);
/*803E96DC 003E64DC*/ PPC::Runtime::ASM::lis(context->r4, 0x6666);
/*803E96E0 003E64E0*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*803E96E4 003E64E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E96E8 003E64E8*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x6667);
/* 803E96EC 003E64EC  7C 03 00 96 */ mulhw context->r0 , context->r3 , context->r0
/*803E96F0 003E64F0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E96F4 003E64F4*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 4);
/*803E96F8 003E64F8*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*803E96FC 003E64FC*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*803E9700 003E6500*/ PPC::Runtime::ASM::lis(context->r3, Packet_8056E728 @ Get_MemoryOffset_HighBit);
/*803E9704 003E6504*/ PPC::Runtime::ASM::slwi(context->r4, context->r0, 5);
/*803E9708 003E6508*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Packet_8056E728 @ Get_MemoryOffset_LowBit);
/*803E970C 003E650C*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*803E9710 003E6510*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803E9714 003E6514*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*803E9718 003E6518*/ PPC::Runtime::ASM::beq(.L_803E9744);
/*803E971C 003E651C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803E9720 003E6520*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803E9724 003E6524*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803E9728 003E6528*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803E972C 003E652C*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803E9730 003E6530*/ PPC::Runtime::ASM::bl(fn___SITransfer);
/*803E9734 003E6534*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E9738 003E6538*/ PPC::Runtime::ASM::beq(.L_803E9744);
/*803E973C 003E653C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*803E9740 003E6540*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_803E9744, 0x803E9744) //this is a jump label
/*803E9744 003E6544*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E9748 003E6548*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E974C 003E654C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E9750 003E6550*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E9754 003E6554*/ PPC::Runtime::ASM::blr();
}