//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802509A0.hpp"
#include "fn_spawnItem.hpp"
#include "fn_80254040.hpp"



void fn_PowerUp_SpawnFromSky(PPC::Runtime::GCContext* context)
{
/*800ECDF4 000E9BF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x80, context->r1));
/*800ECDF8 000E9BF8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ECDFC 000E9BFC*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*800ECE00 000E9C00*/ PPC::Runtime::ASM::mr(context->r12, context->r4);
/*800ECE04 000E9C04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*800ECE08 000E9C08*/ PPC::Runtime::ASM::mr(context->r11, context->r7);
/*800ECE0C 000E9C0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*800ECE10 000E9C10*/ PPC::Runtime::ASM::mr(context->r31, context->r10);
/*800ECE14 000E9C14*/ PPC::Runtime::ASM::bne(.L_800ECE20);
/*800ECE18 000E9C18*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ECE1C 000E9C1C*/ PPC::Runtime::ASM::b(.L_800ECF98);
RUNTIME_PPC_JUMP_LABEL(.L_800ECE20, 0x800ECE20) //this is a jump label
/*800ECE20 000E9C20*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800ECE24 000E9C24*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800ECE28 000E9C28*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800ECE2C 000E9C2C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800ECE30 000E9C30*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF764 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ECE34 000E9C34*/ PPC::Runtime::ASM::mr(context->r10, context->r5);
/*800ECE38 000E9C38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ECE3C 000E9C3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*800ECE40 000E9C40*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*800ECE44 000E9C44*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800ECE48 000E9C48*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800ECE4C 000E9C4C*/ PPC::Runtime::ASM::mr(context->r8, context->r11);
/*800ECE50 000E9C50*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ECE54 000E9C54*/ PPC::Runtime::ASM::mr(context->r9, context->r12);
/*800ECE58 000E9C58*/ PPC::Runtime::ASM::bl(fn_802509A0);
/*800ECE5C 000E9C5C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x2);
/*800ECE60 000E9C60*/ PPC::Runtime::ASM::beq(.L_800ECEB0);
/*800ECE64 000E9C64*/ PPC::Runtime::ASM::bge(.L_800ECE78);
/*800ECE68 000E9C68*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800ECE6C 000E9C6C*/ PPC::Runtime::ASM::beq(.L_800ECE88);
/*800ECE70 000E9C70*/ PPC::Runtime::ASM::bge(.L_800ECE9C);
/*800ECE74 000E9C74*/ PPC::Runtime::ASM::b(.L_800ECEE8);
RUNTIME_PPC_JUMP_LABEL(.L_800ECE78, 0x800ECE78) //this is a jump label
/*800ECE78 000E9C78*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4);
/*800ECE7C 000E9C7C*/ PPC::Runtime::ASM::beq(.L_800ECED4);
/*800ECE80 000E9C80*/ PPC::Runtime::ASM::bge(.L_800ECEE8);
/*800ECE84 000E9C84*/ PPC::Runtime::ASM::b(.L_800ECEC4);
RUNTIME_PPC_JUMP_LABEL(.L_800ECE88, 0x800ECE88) //this is a jump label
/*800ECE88 000E9C88*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ECE8C 000E9C8C*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*800ECE90 000E9C90*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*800ECE94 000E9C94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800ECE98 000E9C98*/ PPC::Runtime::ASM::b(.L_800ECEF8);
RUNTIME_PPC_JUMP_LABEL(.L_800ECE9C, 0x800ECE9C) //this is a jump label
/*800ECE9C 000E9C9C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ECEA0 000E9CA0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800ECEA4 000E9CA4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*800ECEA8 000E9CA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800ECEAC 000E9CAC*/ PPC::Runtime::ASM::b(.L_800ECEF8);
RUNTIME_PPC_JUMP_LABEL(.L_800ECEB0, 0x800ECEB0) //this is a jump label
/*800ECEB0 000E9CB0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800ECEB4 000E9CB4*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*800ECEB8 000E9CB8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*800ECEBC 000E9CBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800ECEC0 000E9CC0*/ PPC::Runtime::ASM::b(.L_800ECEF8);
RUNTIME_PPC_JUMP_LABEL(.L_800ECEC4, 0x800ECEC4) //this is a jump label
/*800ECEC4 000E9CC4*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800ECEC8 000E9CC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*800ECECC 000E9CCC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800ECED0 000E9CD0*/ PPC::Runtime::ASM::b(.L_800ECEF8);
RUNTIME_PPC_JUMP_LABEL(.L_800ECED4, 0x800ECED4) //this is a jump label
/*800ECED4 000E9CD4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800ECED8 000E9CD8*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*800ECEDC 000E9CDC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*800ECEE0 000E9CE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*800ECEE4 000E9CE4*/ PPC::Runtime::ASM::b(.L_800ECEF8);
RUNTIME_PPC_JUMP_LABEL(.L_800ECEE8, 0x800ECEE8) //this is a jump label
/*800ECEE8 000E9CE8*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*800ECEEC 000E9CEC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800ECEF0 000E9CF0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*800ECEF4 000E9CF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800ECEF8, 0x800ECEF8) //this is a jump label
/*800ECEF8 000E9CF8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF770 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ECEFC 000E9CFC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF764 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ECF00 000E9D00*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800ECF04 000E9D04*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ECF08 000E9D08*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*800ECF0C 000E9D0C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800ECF10 000E9D10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800ECF14 000E9D14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800ECF18 000E9D18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a8, context->r3));
/* 800ECF1C 000E9D1C  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*800ECF20 000E9D20*/ PPC::Runtime::ASM::beq(.L_800ECF80);
/*800ECF24 000E9D24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800ECF28 000E9D28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800ECF2C 000E9D2C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800ECF30 000E9D30*/ PPC::Runtime::ASM::beq(.L_800ECF80);
/*800ECF34 000E9D34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800ECF38 000E9D38*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800ECF3C 000E9D3C*/ PPC::Runtime::ASM::beq(.L_800ECF80);
/*800ECF40 000E9D40*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800ECF44 000E9D44*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800ECF48 000E9D48*/ PPC::Runtime::ASM::bne(.L_800ECF80);
/*800ECF4C 000E9D4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800ECF50 000E9D50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800ECF54 000E9D54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800ECF58 000E9D58*/ PPC::Runtime::ASM::subf.(context->r3, context->r3, context->r0);
/*800ECF5C 000E9D5C*/ PPC::Runtime::ASM::bge(.L_800ECF64);
/*800ECF60 000E9D60*/ PPC::Runtime::ASM::neg(context->r3, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_800ECF64, 0x800ECF64) //this is a jump label
/*800ECF64 000E9D64*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800ECF68 000E9D68*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800ECF6C 000E9D6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*800ECF70 000E9D70*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800ECF74 000E9D74*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*800ECF78 000E9D78*/ PPC::Runtime::ASM::add(context->r0, context->r0, context->r3);
/*800ECF7C 000E9D7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800ECF80, 0x800ECF80) //this is a jump label
/*800ECF80 000E9D80*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*800ECF84 000E9D84*/ PPC::Runtime::ASM::bl(fn_spawnItem);
/* 800ECF88 000E9D88  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*800ECF8C 000E9D8C*/ PPC::Runtime::ASM::beq(.L_800ECF94);
/*800ECF90 000E9D90*/ PPC::Runtime::ASM::bl(fn_80254040);
RUNTIME_PPC_JUMP_LABEL(.L_800ECF94, 0x800ECF94) //this is a jump label
/*800ECF94 000E9D94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_800ECF98, 0x800ECF98) //this is a jump label
/*800ECF98 000E9D98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*800ECF9C 000E9D9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7c, context->r1));
/*800ECFA0 000E9DA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ECFA4 000E9DA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x80);
/*800ECFA8 000E9DA8*/ PPC::Runtime::ASM::blr();
}