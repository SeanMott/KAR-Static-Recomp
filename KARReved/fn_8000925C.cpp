//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000925C(PPC::Runtime::GCContext* context)
{
/*8000925C 0000605C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80009260 00006060*/ PPC::Runtime::ASM::mflr(context->r0);
/*80009264 00006064*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80009268 00006068*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000926C 0000606C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0xac8);
/*80009270 00006070*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80009274 00006074*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80009278 00006078*/ PPC::Runtime::ASM::b(.L_80009298);
RUNTIME_PPC_JUMP_LABEL(.L_8000927C, 0x8000927C) //this is a jump label
/*8000927C 0000607C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80009280 00006080*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80009284 00006084*/ PPC::Runtime::ASM::bne(.L_80009290);
/*80009288 00006088*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8000928C 0000608C*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_80009290, 0x80009290) //this is a jump label
/*80009290 00006090*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x30);
/*80009294 00006094*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80009298, 0x80009298) //this is a jump label
/*80009298 00006098*/ PPC::Runtime::ASM::extsb(context->r0, context->r5);
/*8000929C 0000609C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x5);
/*800092A0 000060A0*/ PPC::Runtime::ASM::blt(.L_8000927C);
/*800092A4 000060A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800092A8 000060A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800092AC 000060AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800092B0 000060B0*/ PPC::Runtime::ASM::blr();
}