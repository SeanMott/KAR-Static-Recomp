//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802765D4(PPC::Runtime::GCContext* context)
{
/*802765D4 002733D4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802765D8 002733D8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802765DC 002733DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802765E0 002733E0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802765E4 002733E4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802765E8 002733E8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802765EC 002733EC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B7F30 @ Get_MemoryOffset_HighBit);
/*802765F0 002733F0*/ PPC::Runtime::ASM::lha(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r30));
/*802765F4 002733F4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_804B7F30 @ Get_MemoryOffset_LowBit);
/*802765F8 002733F8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*802765FC 002733FC*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*80276600 00273400*/ PPC::Runtime::ASM::blt(.L_80276610);
/*80276604 00273404*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x8);
/*80276608 00273408*/ PPC::Runtime::ASM::bgt(.L_80276610);
/*8027660C 0027340C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80276610, 0x80276610) //this is a jump label
/*80276610 00273410*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80276614 00273414*/ PPC::Runtime::ASM::bne(.L_80276628);
/*80276618 00273418*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xcbc);
/*8027661C 0027341C*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xcf0);
/*80276620 00273420*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80276624 00273424*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80276628, 0x80276628) //this is a jump label
/*80276628 00273428*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r30));
/*8027662C 0027342C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80276630 00273430*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80276634 00273434*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*80276638 00273438*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8027663C 0027343C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80276640 00273440*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80276644 00273444*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80276648 00273448*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8027664C 0027344C*/ PPC::Runtime::ASM::blr();
}