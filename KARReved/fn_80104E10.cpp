//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7B48.hpp"
#include "fn_800D4BF4.hpp"
#include "fn_80105464.hpp"
#include "fn_80105018.hpp"
#include "fn_80254114.hpp"
#include "fn_glxCopyMatrix_TakeParams_Float4By4Ref_NlMaxtrix4Ref.hpp"
#include "fn_80252F4C.hpp"
#include "fn_80252E58.hpp"



void fn_80104E10(PPC::Runtime::GCContext* context)
{
/*80104E10 00101C10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x80, context->r1));
/*80104E14 00101C14*/ PPC::Runtime::ASM::mflr(context->r0);
/*80104E18 00101C18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*80104E1C 00101C1C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*80104E20 00101C20*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1)0, context->qr0);
/*80104E24 00101C24*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*80104E28 00101C28*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*80104E2C 00101C2C*/ PPC::Runtime::ASM::stfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*80104E30 00101C30*/ PPC::Runtime::ASM::psq_st(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*80104E34 00101C34*/ PPC::Runtime::ASM::stfd(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*80104E38 00101C38*/ PPC::Runtime::ASM::psq_st(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*80104E3C 00101C3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80104E40 00101C40*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80104E44 00101C44*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80104E48 00101C48*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80104E4C 00101C4C*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*80104E50 00101C50*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*80104E54 00101C54*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80104E58 00101C58*/ PPC::Runtime::ASM::beq(.L_80104E70);
/*80104E5C 00101C5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80104E60 00101C60*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*80104E64 00101C64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80104E68 00101C68*/ PPC::Runtime::ASM::bl(fn_800F7B48);
/*80104E6C 00101C6C*/ PPC::Runtime::ASM::b(.L_80104E7C);
RUNTIME_PPC_JUMP_LABEL(.L_80104E70, 0x80104E70) //this is a jump label
/*80104E70 00101C70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*80104E74 00101C74*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*80104E78 00101C78*/ PPC::Runtime::ASM::bl(fn_800D4BF4);
RUNTIME_PPC_JUMP_LABEL(.L_80104E7C, 0x80104E7C) //this is a jump label
/*80104E7C 00101C7C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80104E80 00101C80*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80104E84 00101C84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*80104E88 00101C88*/ PPC::Runtime::ASM::lis(context->r31, 0x4330);
/*80104E8C 00101C8C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80104E90 00101C90*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*80104E94 00101C94*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80104E98 00101C98*/ PPC::Runtime::ASM::lfd(context->f30, STRUCT_DOUBLE_COUNT_1805DF9D8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104E9C 00101C9C*/ PPC::Runtime::ASM::lfd(context->f31, STRUCT_DOUBLE_COUNT_1805DF9E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104EA0 00101CA0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80104EA4 00101CA4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*80104EA8 00101CA8*/ PPC::Runtime::ASM::fadds(context->f0, context->f2, context->f0);
/*80104EAC 00101CAC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80104EB0 00101CB0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r28));
/*80104EB4 00101CB4*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*80104EB8 00101CB8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80104EBC 00101CBC*/ PPC::Runtime::ASM::b(.L_80104FCC);
RUNTIME_PPC_JUMP_LABEL(.L_80104EC0, 0x80104EC0) //this is a jump label
/*80104EC0 00101CC0*/ PPC::Runtime::ASM::bl(fn_HSD_Randf);
/*80104EC4 00101CC4*/ PPC::Runtime::ASM::xoris(context->r3, context->r29, 0x8000);
/*80104EC8 00101CC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*80104ECC 00101CCC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80104ED0 00101CD0*/ PPC::Runtime::ASM::xoris(context->r0, context->r0, 0x8000);
/*80104ED4 00101CD4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80104ED8 00101CD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80104EDC 00101CDC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80104EE0 00101CE0*/ PPC::Runtime::ASM::lfd(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80104EE4 00101CE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80104EE8 00101CE8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f0);
/*80104EEC 00101CEC*/ PPC::Runtime::ASM::fsubs(context->f0, context->f3, context->f31);
/*80104EF0 00101CF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80104EF4 00101CF4*/ PPC::Runtime::ASM::fadds(context->f1, context->f0, context->f1);
/*80104EF8 00101CF8*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80104EFC 00101CFC*/ PPC::Runtime::ASM::fsub(context->f0, context->f0, context->f31);
/*80104F00 00101D00*/ PPC::Runtime::ASM::fmul(context->f1, context->f30, context->f1);
/*80104F04 00101D04*/ PPC::Runtime::ASM::fdiv(context->f29, context->f1, context->f0);
/*80104F08 00101D08*/ PPC::Runtime::ASM::frsp(context->f29, context->f29);
/*80104F0C 00101D0C*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80104F10 00101D10*/ PPC::Runtime::ASM::beq(.L_80104F2C);
/*80104F14 00101D14*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakubreakcommon." Get_MemoryOffset_HighBit);
/*80104F18 00101D18*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_1023 @ Get_MemoryOffset_HighBit);
/*80104F1C 00101D1C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakubreakcommon." Get_MemoryOffset_LowBit);
/*80104F20 00101D20*/ PPC::Runtime::ASM::li(context->r4, 0xd9);
/*80104F24 00101D24*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_1023 @ Get_MemoryOffset_LowBit);
/*80104F28 00101D28*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80104F2C, 0x80104F2C) //this is a jump label
/*80104F2C 00101D2C*/ PPC::Runtime::ASM::bl(fn_HSD_Randf);
/*80104F30 00101D30*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80104F34 00101D34*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80104F38 00101D38*/ PPC::Runtime::ASM::fsubs(context->f0, context->f0, context->f2);
/*80104F3C 00101D3C*/ PPC::Runtime::ASM::fmadds(context->f28, context->f0, context->f1, context->f2);
/*80104F40 00101D40*/ PPC::Runtime::ASM::fmr(context->f1, context->f29);
/*80104F44 00101D44*/ PPC::Runtime::ASM::bl(fn_80105464);
/*80104F48 00101D48*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80104F4C 00101D4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80104F50 00101D50*/ PPC::Runtime::ASM::fmadds(context->f2, context->f28, context->f1, context->f2);
/*80104F54 00101D54*/ PPC::Runtime::ASM::fmr(context->f1, context->f29);
/*80104F58 00101D58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80104F5C 00101D5C*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80104F60 00101D60*/ PPC::Runtime::ASM::bl(fn_80105018);
/*80104F64 00101D64*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80104F68 00101D68*/ PPC::Runtime::ASM::fmadds(context->f0, context->f28, context->f1, context->f0);
/*80104F6C 00101D6C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80104F70 00101D70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*80104F74 00101D74*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80104F78 00101D78*/ PPC::Runtime::ASM::beq(.L_80104F84);
/*80104F7C 00101D7C*/ PPC::Runtime::ASM::bl(fn_80254114);
/*80104F80 00101D80*/ PPC::Runtime::ASM::b(.L_80104F90);
RUNTIME_PPC_JUMP_LABEL(.L_80104F84, 0x80104F84) //this is a jump label
/*80104F84 00101D84*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*80104F88 00101D88*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r28));
/*80104F8C 00101D8C*/ PPC::Runtime::ASM::bl(fn_glxCopyMatrix_TakeParams_Float4By4Ref_NlMaxtrix4Ref);
RUNTIME_PPC_JUMP_LABEL(.L_80104F90, 0x80104F90) //this is a jump label
/*80104F90 00101D90*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*80104F94 00101D94*/ PPC::Runtime::ASM::beq(.L_80104FC8);
/*80104F98 00101D98*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF9C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104F9C 00101D9C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*80104FA0 00101DA0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80104FA4 00101DA4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*80104FA8 00101DA8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r28));
/*80104FAC 00101DAC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80104FB0 00101DB0*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
/*80104FB4 00101DB4*/ PPC::Runtime::ASM::bl(fn_80252F4C);
/*80104FB8 00101DB8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80104FBC 00101DBC*/ PPC::Runtime::ASM::beq(.L_80104FC8);
/*80104FC0 00101DC0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r28));
/*80104FC4 00101DC4*/ PPC::Runtime::ASM::bl(fn_80252E58);
RUNTIME_PPC_JUMP_LABEL(.L_80104FC8, 0x80104FC8) //this is a jump label
/*80104FC8 00101DC8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80104FCC, 0x80104FCC) //this is a jump label
/*80104FCC 00101DCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*80104FD0 00101DD0*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*80104FD4 00101DD4*/ PPC::Runtime::ASM::blt(.L_80104EC0);
/*80104FD8 00101DD8*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1)0, context->qr0);
/*80104FDC 00101DDC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*80104FE0 00101DE0*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*80104FE4 00101DE4*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*80104FE8 00101DE8*/ PPC::Runtime::ASM::psq_l(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*80104FEC 00101DEC*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*80104FF0 00101DF0*/ PPC::Runtime::ASM::psq_l(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*80104FF4 00101DF4*/ PPC::Runtime::ASM::lfd(context->f28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*80104FF8 00101DF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80104FFC 00101DFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80105000 00101E00*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80105004 00101E04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*80105008 00101E08*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8010500C 00101E0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80105010 00101E10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x80);
/*80105014 00101E14*/ PPC::Runtime::ASM::blr();
}