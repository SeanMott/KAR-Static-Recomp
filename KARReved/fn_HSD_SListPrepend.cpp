//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_ObjAlloc.hpp"
#include "fn___assert.hpp"
#include "memset.hpp"
#include "fn_HSD_SListPrependList.hpp"



void fn_HSD_SListPrepend(PPC::Runtime::GCContext* context)
{
/*8041BD48 00418B48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041BD4C 00418B4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041BD50 00418B50*/ PPC::Runtime::ASM::lis(context->r5, lbl_8058BE28 @ Get_MemoryOffset_HighBit);
/*8041BD54 00418B54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041BD58 00418B58*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041BD5C 00418B5C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041BD60 00418B60*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8041BD64 00418B64*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BD68 00418B68*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8041BD6C 00418B6C*/ PPC::Runtime::ASM::addi(context->r3, context->r5, lbl_8058BE28 @ Get_MemoryOffset_LowBit);
/*8041BD70 00418B70*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 8041BD74 00418B74  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8041BD78 00418B78*/ PPC::Runtime::ASM::bne(.L_8041BD8C);
/*8041BD7C 00418B7C*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_491 @ Get_MemoryOffset_SDA21);
/*8041BD80 00418B80*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*8041BD84 00418B84*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_490 @ Get_MemoryOffset_SDA21);
/*8041BD88 00418B88*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041BD8C, 0x8041BD8C) //this is a jump label
/*8041BD8C 00418B8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041BD90 00418B90*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8041BD94 00418B94*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*8041BD98 00418B98*/ PPC::Runtime::ASM::bl(memset);
/*8041BD9C 00418B9C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8041BDA0 00418BA0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8041BDA4 00418BA4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8041BDA8 00418BA8*/ PPC::Runtime::ASM::bl(fn_HSD_SListPrependList);
/*8041BDAC 00418BAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041BDB0 00418BB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041BDB4 00418BB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041BDB8 00418BB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BDBC 00418BBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041BDC0 00418BC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041BDC4 00418BC4*/ PPC::Runtime::ASM::blr();
}