//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_801AA198.hpp"
#include "fn_sndAuxCallbackPrepareDelay.hpp"



void fn_801B71E4(PPC::Runtime::GCContext* context)
{
/*801B71E4 001B3FE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801B71E8 001B3FE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B71EC 001B3FEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801B71F0 001B3FF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801B71F4 001B3FF4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B71F8 001B3FF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r3));
/*801B71FC 001B3FFC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801B7200 001B4000*/ PPC::Runtime::ASM::beq(.L_801B7248);
/*801B7204 001B4004*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E16B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B7208 001B4008*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801B720C 001B400C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801B7210 001B4010*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801B7214 001B4014*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B7218 001B4018*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801B721C 001B401C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*801B7220 001B4020*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801B7224 001B4024*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801B7228 001B4028*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r3));
/*801B722C 001B402C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 4);
/*801B7230 001B4030*/ PPC::Runtime::ASM::lwzx(context->r3, context->r6, context->r0);
/*801B7234 001B4034*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*801B7238 001B4038*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa20, context->r31));
/*801B723C 001B403C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801B7240 001B4040*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801B7244 001B4044*/ PPC::Runtime::ASM::bl(fn_801AA198);
RUNTIME_PPC_JUMP_LABEL(.L_801B7248, 0x801B7248) //this is a jump label
/*801B7248 001B4048*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B724C 001B404C*/ PPC::Runtime::ASM::bl(fn_sndAuxCallbackPrepareDelay);
/*801B7250 001B4050*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801B7254 001B4054*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801B7258 001B4058*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B725C 001B405C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801B7260 001B4060*/ PPC::Runtime::ASM::blr();
}