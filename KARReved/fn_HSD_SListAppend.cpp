//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_ObjAlloc.hpp"
#include "fn___assert.hpp"
#include "memset.hpp"
#include "fn_HSD_SListAppendList.hpp"



void fn_HSD_SListAppend(PPC::Runtime::GCContext* context)
{
/*8041BCC8 00418AC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8041BCCC 00418ACC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041BCD0 00418AD0*/ PPC::Runtime::ASM::lis(context->r5, lbl_8058BE28 @ Get_MemoryOffset_HighBit);
/*8041BCD4 00418AD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041BCD8 00418AD8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041BCDC 00418ADC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041BCE0 00418AE0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8041BCE4 00418AE4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BCE8 00418AE8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8041BCEC 00418AEC*/ PPC::Runtime::ASM::addi(context->r3, context->r5, lbl_8058BE28 @ Get_MemoryOffset_LowBit);
/*8041BCF0 00418AF0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 8041BCF4 00418AF4  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8041BCF8 00418AF8*/ PPC::Runtime::ASM::bne(.L_8041BD0C);
/*8041BCFC 00418AFC*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_491 @ Get_MemoryOffset_SDA21);
/*8041BD00 00418B00*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*8041BD04 00418B04*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_490 @ Get_MemoryOffset_SDA21);
/*8041BD08 00418B08*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041BD0C, 0x8041BD0C) //this is a jump label
/*8041BD0C 00418B0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041BD10 00418B10*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8041BD14 00418B14*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*8041BD18 00418B18*/ PPC::Runtime::ASM::bl(memset);
/*8041BD1C 00418B1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8041BD20 00418B20*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8041BD24 00418B24*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8041BD28 00418B28*/ PPC::Runtime::ASM::bl(fn_HSD_SListAppendList);
/*8041BD2C 00418B2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8041BD30 00418B30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8041BD34 00418B34*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8041BD38 00418B38*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BD3C 00418B3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041BD40 00418B40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8041BD44 00418B44*/ PPC::Runtime::ASM::blr();
}