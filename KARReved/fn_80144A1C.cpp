//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80144A1C(PPC::Runtime::GCContext* context)
{
/*80144A1C 0014181C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80144A20 00141820*/ PPC::Runtime::ASM::mflr(context->r0);
/*80144A24 00141824*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80144A28 00141828*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80144A2C 0014182C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80144A30 00141830*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80144A34 00141834*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80144A38 00141838*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80144A3C 0014183C*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80144A40 00141840*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x28);
/*80144A44 00141844*/ PPC::Runtime::ASM::slwi(context->r30, context->r0, 3);
/*80144A48 00141848*/ PPC::Runtime::ASM::add(context->r31, context->r29, context->r30);
/*80144A4C 0014184C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80144A50 00141850*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80144A54 00141854*/ PPC::Runtime::ASM::beq(.L_80144A64);
/*80144A58 00141858*/ PPC::Runtime::ASM::bl(fn_8044F350);
/*80144A5C 0014185C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80144A60 00141860*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80144A64, 0x80144A64) //this is a jump label
/*80144A64 00141864*/ PPC::Runtime::ASM::add(context->r30, context->r29, context->r30);
/*80144A68 00141868*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*80144A6C 0014186C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80144A70 00141870*/ PPC::Runtime::ASM::beq(.L_80144A80);
/*80144A74 00141874*/ PPC::Runtime::ASM::bl(fn_8044F350);
/*80144A78 00141878*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80144A7C 0014187C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80144A80, 0x80144A80) //this is a jump label
/*80144A80 00141880*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80144A84 00141884*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80144A88 00141888*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80144A8C 0014188C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80144A90 00141890*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80144A94 00141894*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80144A98 00141898*/ PPC::Runtime::ASM::blr();
}