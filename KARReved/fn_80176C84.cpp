//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80176C84(PPC::Runtime::GCContext* context)
{
/*80176C84 00173A84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80176C88 00173A88*/ PPC::Runtime::ASM::mflr(context->r0);
/*80176C8C 00173A8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80176C90 00173A90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80176C94 00173A94*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80176C98 00173A98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80176C9C 00173A9C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80176CA0 00173AA0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80176CA4, 0x80176CA4) //this is a jump label
/*80176CA4 00173AA4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80176CA8 00173AA8*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80176CAC 00173AAC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80176CB0 00173AB0*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80176CB4 00173AB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xce0, context->r30));
/*80176CB8 00173AB8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80176CBC 00173ABC*/ PPC::Runtime::ASM::beq(.L_80176CC8);
/*80176CC0 00173AC0*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80176CC4 00173AC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xce0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80176CC8, 0x80176CC8) //this is a jump label
/*80176CC8 00173AC8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80176CCC 00173ACC*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80176CD0 00173AD0*/ PPC::Runtime::ASM::blt(.L_80176CA4);
/*80176CD4 00173AD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80176CD8 00173AD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80176CDC 00173ADC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80176CE0 00173AE0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80176CE4 00173AE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80176CE8 00173AE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80176CEC 00173AEC*/ PPC::Runtime::ASM::blr();
}