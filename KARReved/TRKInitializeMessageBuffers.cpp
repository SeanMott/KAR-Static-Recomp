//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRKReleaseMutex2.hpp"
#include "fn_TRKAcquireMutex.hpp"
#include "fn_TRKReleaseMutex.hpp"



void TRKInitializeMessageBuffers(PPC::Runtime::GCContext* context)
{
/*803BE2F4 003BB0F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803BE2F8 003BB0F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BE2FC 003BB0FC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80569E90 @ Get_MemoryOffset_HighBit);
/*803BE300 003BB100*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BE304 003BB104*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BE308 003BB108*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803BE30C 003BB10C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BE310 003BB110*/ PPC::Runtime::ASM::addi(context->r30, context->r3, lbl_80569E90 @ Get_MemoryOffset_LowBit);
/*803BE314 003BB114*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BE318 003BB118*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803BE31C, 0x803BE31C) //this is a jump label
/*803BE31C 003BB11C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803BE320 003BB120*/ PPC::Runtime::ASM::bl(fn_TRKReleaseMutex2);
/*803BE324 003BB124*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803BE328 003BB128*/ PPC::Runtime::ASM::bl(fn_TRKAcquireMutex);
/*803BE32C 003BB12C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803BE330 003BB130*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803BE334 003BB134*/ PPC::Runtime::ASM::bl(fn_TRKReleaseMutex);
/*803BE338 003BB138*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*803BE33C 003BB13C*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x890);
/*803BE340 003BB140*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x3);
/*803BE344 003BB144*/ PPC::Runtime::ASM::blt(.L_803BE31C);
/*803BE348 003BB148*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BE34C 003BB14C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803BE350 003BB150*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803BE354 003BB154*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803BE358 003BB158*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803BE35C 003BB15C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BE360 003BB160*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803BE364 003BB164*/ PPC::Runtime::ASM::blr();
}