//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80285960.hpp"
#include "fn_80285960.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80286188.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80285130.hpp"



void fn_802A1CEC(PPC::Runtime::GCContext* context)
{
/*802A1CEC 0029EAEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A1CF0 0029EAF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A1CF4 0029EAF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A1CF8 0029EAF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A1CFC 0029EAFC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A1D00 0029EB00*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A1D04 0029EB04  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A1D08 0029EB08*/ PPC::Runtime::ASM::beq(.L_802A1E34);
/*802A1D0C 0029EB0C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804CB330 @ Get_MemoryOffset_HighBit);
/*802A1D10 0029EB10*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1500);
/*802A1D14 0029EB14*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804CB330 @ Get_MemoryOffset_LowBit);
/*802A1D18 0029EB18*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D1C 0029EB1C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A1D20 0029EB20*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A1D24 0029EB24*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A1D28 0029EB28*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A1D2C 0029EB2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A1D30 0029EB30*/ PPC::Runtime::ASM::bl(fn_80285960);
/*802A1D34 0029EB34*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1440);
/*802A1D38 0029EB38*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D3C 0029EB3C*/ PPC::Runtime::ASM::bl(fn_80285960);
/*802A1D40 0029EB40*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x133c);
/*802A1D44 0029EB44*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D48 0029EB48*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1D4C 0029EB4C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1238);
/*802A1D50 0029EB50*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D54 0029EB54*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1D58 0029EB58*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1134);
/*802A1D5C 0029EB5C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D60 0029EB60*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1D64 0029EB64*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1030);
/*802A1D68 0029EB68*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D6C 0029EB6C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1D70 0029EB70*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xf2c);
/*802A1D74 0029EB74*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D78 0029EB78*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1D7C 0029EB7C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xe28);
/*802A1D80 0029EB80*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D84 0029EB84*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1D88 0029EB88*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xd68);
/*802A1D8C 0029EB8C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D90 0029EB90*/ PPC::Runtime::ASM::bl(fn_80286188);
/*802A1D94 0029EB94*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xc64);
/*802A1D98 0029EB98*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1D9C 0029EB9C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DA0 0029EBA0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xb60);
/*802A1DA4 0029EBA4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DA8 0029EBA8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DAC 0029EBAC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xa5c);
/*802A1DB0 0029EBB0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DB4 0029EBB4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DB8 0029EBB8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x958);
/*802A1DBC 0029EBBC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DC0 0029EBC0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DC4 0029EBC4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x854);
/*802A1DC8 0029EBC8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DCC 0029EBCC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DD0 0029EBD0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x750);
/*802A1DD4 0029EBD4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DD8 0029EBD8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DDC 0029EBDC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x64c);
/*802A1DE0 0029EBE0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DE4 0029EBE4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DE8 0029EBE8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x548);
/*802A1DEC 0029EBEC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DF0 0029EBF0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1DF4 0029EBF4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x444);
/*802A1DF8 0029EBF8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1DFC 0029EBFC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1E00 0029EC00*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x340);
/*802A1E04 0029EC04*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1E08 0029EC08*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A1E0C 0029EC0C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A1E10 0029EC10*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A1E14 0029EC14*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*802A1E18 0029EC18*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A1E1C 0029EC1C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A1E20 0029EC20*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A1E24 0029EC24*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A1E28 0029EC28*/ PPC::Runtime::ASM::ble(.L_802A1E34);
/*802A1E2C 0029EC2C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A1E30 0029EC30*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A1E34, 0x802A1E34) //this is a jump label
/*802A1E34 0029EC34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A1E38 0029EC38*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A1E3C 0029EC3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A1E40 0029EC40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A1E44 0029EC44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A1E48 0029EC48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A1E4C 0029EC4C*/ PPC::Runtime::ASM::blr();
}