//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80131214.hpp"
#include "fn_80059520.hpp"



void fn_80158CFC(PPC::Runtime::GCContext* context)
{
/*80158CFC 00155AFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80158D00 00155B00*/ PPC::Runtime::ASM::mflr(context->r0);
/*80158D04 00155B04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80158D08 00155B08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80158D0C 00155B0C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80158D10 00155B10*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80158D14 00155B14*/ PPC::Runtime::ASM::bl(fn_80131214);
/*80158D18 00155B18*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1246 @ Get_MemoryOffset_HighBit);
/*80158D1C 00155B1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80158D20 00155B20*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1246 @ Get_MemoryOffset_LowBit);
/*80158D24 00155B24*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80158D28 00155B28*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x75c);
/*80158D2C 00155B2C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80158D30 00155B30*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80158D34 00155B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80158D38 00155B38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80158D3C 00155B3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80158D40 00155B40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80158D44 00155B44*/ PPC::Runtime::ASM::blr();
}