//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800C3510.hpp"



void fn_800C51A8(PPC::Runtime::GCContext* context)
{
/*800C51A8 000C1FA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800C51AC 000C1FAC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800C51B0 000C1FB0*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_29 @ Get_MemoryOffset_HighBit);
/*800C51B4 000C1FB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800C51B8 000C1FB8*/ PPC::Runtime::ASM::addi(context->r7, context->r5, MemoryOffset_29 @ Get_MemoryOffset_LowBit);
/*800C51BC 000C1FBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800C51C0 000C1FC0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800C51C4 000C1FC4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r4));
/*800C51C8 000C1FC8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800C51CC 000C1FCC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/* 800C51D0 000C1FD0  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*800C51D4 000C1FD4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r7));
/*800C51D8 000C1FD8*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C51DC 000C1FDC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C51E0 000C1FE0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800C51E4 000C1FE4*/ PPC::Runtime::ASM::bne(.L_800C51F4);
/*800C51E8 000C1FE8*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C51EC 000C1FEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C51F0 000C1FF0*/ PPC::Runtime::ASM::b(.L_800C523C);
RUNTIME_PPC_JUMP_LABEL(.L_800C51F4, 0x800C51F4) //this is a jump label
/*800C51F4 000C1FF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r4));
/*800C51F8 000C1FF8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800C51FC 000C1FFC*/ PPC::Runtime::ASM::beq(.L_800C5220);
/*800C5200 000C2000*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r3));
/* 800C5204 000C2004  54 60 07 FF */ clrlwi. context->r0 , context->r3 , 31
/*800C5208 000C2008*/ PPC::Runtime::ASM::bne(.L_800C5214);
/* 800C520C 000C200C  54 60 FF FF */ extrwi. context->r0 , context->r3 , 1 , 30
/*800C5210 000C2010*/ PPC::Runtime::ASM::beq(.L_800C5220);
RUNTIME_PPC_JUMP_LABEL(.L_800C5214, 0x800C5214) //this is a jump label
/*800C5214 000C2014*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C5218 000C2018*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C521C 000C201C*/ PPC::Runtime::ASM::b(.L_800C523C);
RUNTIME_PPC_JUMP_LABEL(.L_800C5220, 0x800C5220) //this is a jump label
/*800C5220 000C2020*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800C5224 000C2024*/ PPC::Runtime::ASM::bl(fn_800C3510);
/*800C5228 000C2028*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*800C522C 000C202C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C5230 000C2030*/ PPC::Runtime::ASM::bne(.L_800C523C);
/*800C5234 000C2034*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800C5238 000C2038*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800C523C, 0x800C523C) //this is a jump label
/*800C523C 000C203C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800C5240 000C2040*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800C5244 000C2044*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800C5248 000C2048*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800C524C 000C204C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800C5250 000C2050*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800C5254 000C2054*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800C5258 000C2058*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800C525C 000C205C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800C5260 000C2060*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800C5264 000C2064*/ PPC::Runtime::ASM::blr();
}