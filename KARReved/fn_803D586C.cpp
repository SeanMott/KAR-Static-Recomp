//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSDisableScheduler.hpp"
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "__OSStopAudioSystem.hpp"
#include "fn_AISetStreamVolLeft.hpp"
#include "fn_AISetStreamVolRight.hpp"
#include "fn_VIInit.hpp"
#include "fn_VISetBlack.hpp"
#include "fn_VIFlush.hpp"
#include "OSEnableInterrupts.hpp"
#include "fn_VIGetRetraceCount.hpp"
#include "fn_VIGetRetraceCount.hpp"
#include "OSGetTime.hpp"
#include "fn_803D85F8.hpp"
#include "OSGetTime.hpp"
#include "OSDisableInterrupts.hpp"
#include "fn_803D85F8.hpp"
#include "OSDefaultExceptionHandler.hpp"
#include "OSDefaultExceptionHandler.hpp"
#include "__OSSetExceptionHandler.hpp"
#include "fn_803CBC48.hpp"
#include "OSSetArenaLo.hpp"
#include "OSSetArenaHi.hpp"
#include "OSGetArenaHi.hpp"
#include "fn_803D59C0.hpp"
#include "fn_803D59C0.hpp"
#include "fn_803D4738.hpp"



void fn_803D586C(PPC::Runtime::GCContext* context)
{
/*803D586C 003D266C*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D5870 003D2670*/ PPC::Runtime::ASM::lis(context->r6, STRUCT_BYTE4_COUNT_18056D5F8 @ Get_MemoryOffset_HighBit);
/*803D5874 003D2674*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D5878 003D2678*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*803D587C 003D267C*/ PPC::Runtime::ASM::stmw(context->r23, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D5880 003D2680*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*803D5884 003D2684*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*803D5888 003D2688*/ PPC::Runtime::ASM::addi(context->r29, context->r5, 0x0);
/*803D588C 003D268C*/ PPC::Runtime::ASM::addi(context->r31, context->r6, STRUCT_BYTE4_COUNT_18056D5F8 @ Get_MemoryOffset_LowBit);
/*803D5890 003D2690*/ PPC::Runtime::ASM::lis(context->r30, 0x8000);
/*803D5894 003D2694*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D5898 003D2698*/ PPC::Runtime::ASM::bl(OSDisableScheduler);
/*803D589C 003D269C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*803D58A0 003D26A0*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803D58A4 003D26A4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x10);
/*803D58A8 003D26A8*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803D58AC 003D26AC*/ PPC::Runtime::ASM::bl(__OSStopAudioSystem);
/*803D58B0 003D26B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D58B4 003D26B4*/ PPC::Runtime::ASM::bl(fn_AISetStreamVolLeft);
/*803D58B8 003D26B8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D58BC 003D26BC*/ PPC::Runtime::ASM::bl(fn_AISetStreamVolRight);
/*803D58C0 003D26C0*/ PPC::Runtime::ASM::bl(fn_VIInit);
/*803D58C4 003D26C4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803D58C8 003D26C8*/ PPC::Runtime::ASM::bl(fn_VISetBlack);
/*803D58CC 003D26CC*/ PPC::Runtime::ASM::bl(fn_VIFlush);
/*803D58D0 003D26D0*/ PPC::Runtime::ASM::bl(OSEnableInterrupts);
/*803D58D4 003D26D4*/ PPC::Runtime::ASM::bl(fn_VIGetRetraceCount);
/*803D58D8 003D26D8*/ PPC::Runtime::ASM::mr(context->r23, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803D58DC, 0x803D58DC) //this is a jump label
/*803D58DC 003D26DC*/ PPC::Runtime::ASM::bl(fn_VIGetRetraceCount);
/*803D58E0 003D26E0*/ PPC::Runtime::ASM::subf(context->r0, context->r23, context->r3);
/*803D58E4 003D26E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*803D58E8 003D26E8*/ PPC::Runtime::ASM::blt(.L_803D58DC);
/*803D58EC 003D26EC*/ PPC::Runtime::ASM::bl(OSGetTime);
/*803D58F0 003D26F0*/ PPC::Runtime::ASM::lis(context->r5, 0x8000);
/*803D58F4 003D26F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r5));
/*803D58F8 003D26F8*/ PPC::Runtime::ASM::lis(context->r5, 0x1062);
/*803D58FC 003D26FC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4dd3);
/*803D5900 003D2700*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 2);
/*803D5904 003D2704*/ PPC::Runtime::ASM::mulhwu(context->r0, context->r5, context->r0);
/*803D5908 003D2708*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 6);
/*803D590C 003D270C*/ PPC::Runtime::ASM::mulli(context->r25, context->r0, 0x3e8);
/*803D5910 003D2710*/ PPC::Runtime::ASM::addi(context->r23, context->r4, 0x0);
/*803D5914 003D2714*/ PPC::Runtime::ASM::addi(context->r24, context->r3, 0x0);
/*803D5918 003D2718*/ PPC::Runtime::ASM::li(context->r26, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803D591C, 0x803D591C) //this is a jump label
/*803D591C 003D271C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D5920 003D2720*/ PPC::Runtime::ASM::bl(fn_803D85F8);
/*803D5924 003D2724*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803D5928 003D2728*/ PPC::Runtime::ASM::bne(.L_803D5954);
/*803D592C 003D272C*/ PPC::Runtime::ASM::bl(OSGetTime);
/*803D5930 003D2730*/ PPC::Runtime::ASM::subfc(context->r5, context->r23, context->r4);
/*803D5934 003D2734*/ PPC::Runtime::ASM::subfe(context->r0, context->r24, context->r3);
/*803D5938 003D2738*/ PPC::Runtime::ASM::xoris(context->r4, context->r0, 0x8000);
/*803D593C 003D273C*/ PPC::Runtime::ASM::xoris(context->r3, context->r26, 0x8000);
/*803D5940 003D2740*/ PPC::Runtime::ASM::subfc(context->r0, context->r25, context->r5);
/*803D5944 003D2744*/ PPC::Runtime::ASM::subfe(context->r3, context->r3, context->r4);
/*803D5948 003D2748*/ PPC::Runtime::ASM::subfe(context->r3, context->r4, context->r4);
/*803D594C 003D274C*/ PPC::Runtime::ASM::neg.(context->r3, context->r3);
/*803D5950 003D2750*/ PPC::Runtime::ASM::bne(.L_803D591C);
RUNTIME_PPC_JUMP_LABEL(.L_803D5954, 0x803D5954) //this is a jump label
/*803D5954 003D2754*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D5958 003D2758*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803D595C 003D275C*/ PPC::Runtime::ASM::bl(fn_803D85F8);
/*803D5960 003D2760*/ PPC::Runtime::ASM::lis(context->r3, OSDefaultExceptionHandler @ Get_MemoryOffset_HighBit);
/*803D5964 003D2764*/ PPC::Runtime::ASM::addi(context->r4, context->r3, OSDefaultExceptionHandler @ Get_MemoryOffset_LowBit);
/*803D5968 003D2768*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*803D596C 003D276C*/ PPC::Runtime::ASM::bl(__OSSetExceptionHandler);
/*803D5970 003D2770*/ PPC::Runtime::ASM::bl(fn_803CBC48);
/*803D5974 003D2774*/ PPC::Runtime::ASM::lis(context->r3, 0x8120);
/*803D5978 003D2778*/ PPC::Runtime::ASM::bl(OSSetArenaLo);
/*803D597C 003D277C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*803D5980 003D2780*/ PPC::Runtime::ASM::bl(OSSetArenaHi);
/*803D5984 003D2784*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*803D5988 003D2788*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803D598C 003D278C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803D5990 003D2790*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803D5994 003D2794*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803D5998 003D2798*/ PPC::Runtime::ASM::bl(OSGetArenaHi);
/*803D599C 003D279C*/ PPC::Runtime::ASM::lis(context->r5, fn_803D59C0 @ Get_MemoryOffset_HighBit);
/*803D59A0 003D27A0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0x0);
/*803D59A4 003D27A4*/ PPC::Runtime::ASM::addi(context->r3, context->r5, fn_803D59C0 @ Get_MemoryOffset_LowBit);
/*803D59A8 003D27A8*/ PPC::Runtime::ASM::bl(fn_803D4738);
/*803D59AC 003D27AC*/ PPC::Runtime::ASM::lmw(context->r23, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D59B0 003D27B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803D59B4 003D27B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*803D59B8 003D27B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D59BC 003D27BC*/ PPC::Runtime::ASM::blr();
}