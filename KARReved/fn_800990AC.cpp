//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800990AC(PPC::Runtime::GCContext* context)
{
/*800990AC 00095EAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0xa0, context->r1));
/*800990B0 00095EB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800990B4 00095EB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r1));
/*800990B8 00095EB8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r1));
/*800990BC 00095EBC*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r1)0, context->qr0);
/*800990C0 00095EC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r1));
/*800990C4 00095EC4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r1));
/*800990C8 00095EC8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*800990CC 00095ECC*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800990D0 00095ED0*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*800990D4 00095ED4*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r4));
/*800990D8 00095ED8*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800990DC 00095EDC*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800990E0 00095EE0*/ PPC::Runtime::ASM::subi(context->r4, context->r6, 0xff);
/*800990E4 00095EE4*/ PPC::Runtime::ASM::subfic(context->r3, context->r6, 0xff);
/*800990E8 00095EE8*/ PPC::Runtime::ASM::nor(context->r3, context->r4, context->r3);
/*800990EC 00095EEC*/ PPC::Runtime::ASM::srawi(context->r3, context->r3, 31);
/*800990F0 00095EF0*/ PPC::Runtime::ASM::andc(context->r31, context->r0, context->r3);
/*800990F4 00095EF4*/ PPC::Runtime::ASM::cmplw(context->r5, context->r31);
/*800990F8 00095EF8*/ PPC::Runtime::ASM::bne(.L_800992A0);
/*800990FC 00095EFC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80099100 00095F00*/ PPC::Runtime::ASM::bl(fn_GXSetColorUpdate);
/*80099104 00095F04*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099108 00095F08*/ PPC::Runtime::ASM::bl(fn_GXSetAlphaUpdate);
/*8009910C 00095F0C*/ PPC::Runtime::ASM::subfic(context->r0, context->r31, 0x2);
/*80099110 00095F10*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*80099114 00095F14*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*80099118 00095F18*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*8009911C 00095F1C*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*80099120 00095F20*/ PPC::Runtime::ASM::li(context->r6, 0x5);
/*80099124 00095F24*/ PPC::Runtime::ASM::bl(fn_GXSetBlendMode);
/*80099128 00095F28*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*8009912C 00095F2C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80099130 00095F30*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80099134 00095F34*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*80099138 00095F38*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009913C 00095F3C*/ PPC::Runtime::ASM::bl(fn_GXSetAlphaCompare);
/*80099140 00095F40*/ PPC::Runtime::ASM::subfic(context->r3, context->r31, 0x2);
/*80099144 00095F44*/ PPC::Runtime::ASM::subi(context->r0, context->r31, 0x2);
/*80099148 00095F48*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*8009914C 00095F4C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80099150 00095F50*/ PPC::Runtime::ASM::srwi(context->r5, context->r0, 31);
/*80099154 00095F54*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*80099158 00095F58*/ PPC::Runtime::ASM::bl(fn_GXSetZMode);
/*8009915C 00095F5C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099160 00095F60*/ PPC::Runtime::ASM::bl(fn_GXSetZCompLoc);
/*80099164 00095F64*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099168 00095F68*/ PPC::Runtime::ASM::bl(fn_GXSetNumTexGens);
/*8009916C 00095F6C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099170 00095F70*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80099174 00095F74*/ PPC::Runtime::ASM::bl(fn_GX_blr);
/*80099178 00095F78*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8009917C 00095F7C*/ PPC::Runtime::ASM::bl(fn_GXSetNumTevStages);
/*80099180 00095F80*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099184 00095F84*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*80099188 00095F88*/ PPC::Runtime::ASM::li(context->r5, 0xff);
/*8009918C 00095F8C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*80099190 00095F90*/ PPC::Runtime::ASM::bl(fn_GXSetTevOrder);
/*80099194 00095F94*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099198 00095F98*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8009919C 00095F9C*/ PPC::Runtime::ASM::bl(fn_GXSetTevOp);
/*800991A0 00095FA0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DEFF8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800991A4 00095FA4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*800991A8 00095FA8*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800991AC 00095FAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800991B0 00095FB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800991B4 00095FB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800991B8 00095FB8*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*800991BC 00095FBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800991C0 00095FC0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800991C4 00095FC4*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800991C8 00095FC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800991CC 00095FCC*/ PPC::Runtime::ASM::bl(fn_GXSetChanAmbColor);
/*800991D0 00095FD0*/ PPC::Runtime::ASM::bl(fn_HSD_LObjGetLightMaskDiffuse);
/*800991D4 00095FD4*/ PPC::Runtime::ASM::mr(context->r7, context->r3);
/*800991D8 00095FD8*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800991DC 00095FDC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800991E0 00095FE0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800991E4 00095FE4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800991E8 00095FE8*/ PPC::Runtime::ASM::li(context->r8, 0x2);
/*800991EC 00095FEC*/ PPC::Runtime::ASM::li(context->r9, 0x2);
/*800991F0 00095FF0*/ PPC::Runtime::ASM::bl(fn_GXSetChanCtrl);
/*800991F4 00095FF4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800991F8 00095FF8*/ PPC::Runtime::ASM::bl(fn_GXSetNumChans);
/*800991FC 00095FFC*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80099200 00096000*/ PPC::Runtime::ASM::bl(fn_GXSetCullMode);
/*80099204 00096004*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*80099208 00096008*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x1c);
/*8009920C 0009600C*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*80099210 00096010*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80099214 00096014*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x4c);
/*80099218 00096018*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8009921C 0009601C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*80099220 00096020*/ PPC::Runtime::ASM::bl(fn_PSMTXTrans);
/*80099224 00096024*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*80099228 00096028*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x4c);
/*8009922C 0009602C*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*80099230 00096030*/ PPC::Runtime::ASM::bl(fn_PSMTXConcat);
/*80099234 00096034*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80099238 00096038*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x4c);
/*8009923C 0009603C*/ PPC::Runtime::ASM::fmr(context->f2, context->f31);
/*80099240 00096040*/ PPC::Runtime::ASM::fmr(context->f3, context->f31);
/*80099244 00096044*/ PPC::Runtime::ASM::bl(fn_PSMTXScale);
/*80099248 00096048*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*8009924C 0009604C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x4c);
/*80099250 00096050*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*80099254 00096054*/ PPC::Runtime::ASM::bl(fn_PSMTXConcat);
/*80099258 00096058*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*8009925C 0009605C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80099260 00096060*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*80099264 00096064*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*80099268 00096068*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8009926C 0009606C*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*80099270 00096070*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*80099274 00096074*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80099278 00096078*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*8009927C 0009607C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80099280 00096080*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*80099284 00096084*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80099288 00096088*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x18);
/*8009928C 0009608C*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*80099290 00096090*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80099294 00096094*/ PPC::Runtime::ASM::bl(fn_GXSetChanMatColor);
/*80099298 00096098*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*8009929C 0009609C*/ PPC::Runtime::ASM::bl(fn_803D026C);
RUNTIME_PPC_JUMP_LABEL(.L_800992A0, 0x800992A0) //this is a jump label
/*800992A0 000960A0*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r1)0, context->qr0);
/*800992A4 000960A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r1));
/*800992A8 000960A8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r1));
/*800992AC 000960AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r1));
/*800992B0 000960B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r1));
/*800992B4 000960B4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r1));
/*800992B8 000960B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800992BC 000960BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0xa0);
/*800992C0 000960C0*/ PPC::Runtime::ASM::blr();
}