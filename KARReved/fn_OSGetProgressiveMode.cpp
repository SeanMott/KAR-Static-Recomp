//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_UnlockSram.hpp"



void fn_OSGetProgressiveMode(PPC::Runtime::GCContext* context)
{
/*803D96B4 003D64B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D96B8 003D64B8*/ PPC::Runtime::ASM::lis(context->r3, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D96BC 003D64BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D96C0 003D64C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803D96C4 003D64C4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D96C8 003D64C8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D96CC 003D64CC*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D96D0 003D64D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*803D96D4 003D64D4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*803D96D8 003D64D8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D96DC 003D64DC*/ PPC::Runtime::ASM::beq(.L_803D96EC);
/*803D96E0 003D64E0*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D96E4 003D64E4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803D96E8 003D64E8*/ PPC::Runtime::ASM::b(.L_803D96F8);
RUNTIME_PPC_JUMP_LABEL(.L_803D96EC, 0x803D96EC) //this is a jump label
/*803D96EC 003D64EC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803D96F0 003D64F0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D96F4 003D64F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D96F8, 0x803D96F8) //this is a jump label
/*803D96F8 003D64F8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D96FC 003D64FC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9700 003D6500*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803D9704 003D6504*/ PPC::Runtime::ASM::extrwi(context->r31, context->r0, 1, 24);
/*803D9708 003D6508*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
/*803D970C 003D650C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803D9710 003D6510*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D9714 003D6514*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803D9718 003D6518*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803D971C 003D651C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D9720 003D6520*/ PPC::Runtime::ASM::blr();
}