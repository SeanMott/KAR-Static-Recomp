//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000C0E0.hpp"



void fn_8000DD4C(PPC::Runtime::GCContext* context)
{
/*8000DD4C 0000AB4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*8000DD50 0000AB50*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000DD54 0000AB54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8000DD58 0000AB58*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*8000DD5C 0000AB5C*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*8000DD60 0000AB60*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000DD64 0000AB64*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000DD68 0000AB68*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000DD6C 0000AB6C*/ PPC::Runtime::ASM::addi(context->r28, context->r1, 0x8);
/*8000DD70 0000AB70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000DD74 0000AB74*/ PPC::Runtime::ASM::mr(context->r29, context->r28);
/*8000DD78 0000AB78*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*8000DD7C 0000AB7C*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*8000DD80 0000AB80*/ PPC::Runtime::ASM::li(context->r27, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8000DD84, 0x8000DD84) //this is a jump label
/*8000DD84 0000AB84*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19, context->r30));
/*8000DD88 0000AB88*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DD8C 0000AB8C*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*8000DD90 0000AB90*/ PPC::Runtime::ASM::beq(.L_8000DDF8);
/*8000DD94 0000AB94*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r30));
/*8000DD98 0000AB98*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DD9C 0000AB9C*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*8000DDA0 0000ABA0*/ PPC::Runtime::ASM::beq(.L_8000DDF8);
/*8000DDA4 0000ABA4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b, context->r30));
/*8000DDA8 0000ABA8*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DDAC 0000ABAC*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*8000DDB0 0000ABB0*/ PPC::Runtime::ASM::beq(.L_8000DDF8);
/*8000DDB4 0000ABB4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*8000DDB8 0000ABB8*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DDBC 0000ABBC*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*8000DDC0 0000ABC0*/ PPC::Runtime::ASM::beq(.L_8000DDF8);
/*8000DDC4 0000ABC4*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x8);
/*8000DDC8 0000ABC8*/ PPC::Runtime::ASM::bne(.L_8000DDDC);
/*8000DDCC 0000ABCC*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*8000DDD0 0000ABD0*/ PPC::Runtime::ASM::bl(fn_8000C0E0);
/*8000DDD4 0000ABD4*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*8000DDD8 0000ABD8*/ PPC::Runtime::ASM::beq(.L_8000DDF8);
RUNTIME_PPC_JUMP_LABEL(.L_8000DDDC, 0x8000DDDC) //this is a jump label
/*8000DDDC 0000ABDC*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8000DDE0 0000ABE0*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8000DDE4 0000ABE4*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
/*8000DDE8 0000ABE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8000DDEC 0000ABEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8000DDF0 0000ABF0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x8);
/*8000DDF4 0000ABF4*/ PPC::Runtime::ASM::add(context->r25, context->r25, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_8000DDF8, 0x8000DDF8) //this is a jump label
/*8000DDF8 0000ABF8*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*8000DDFC 0000ABFC*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x9);
/*8000DE00 0000AC00*/ PPC::Runtime::ASM::blt(.L_8000DD84);
/*8000DE04 0000AC04*/ PPC::Runtime::ASM::mr(context->r3, context->r25);
/*8000DE08 0000AC08*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8000DE0C 0000AC0C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000DE10 0000AC10*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8000DE14 0000AC14*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8000DE18 0000AC18*/ PPC::Runtime::ASM::mtctr(context->r26);
/*8000DE1C 0000AC1C*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x0);
/*8000DE20 0000AC20*/ PPC::Runtime::ASM::ble(.L_8000DE50);
RUNTIME_PPC_JUMP_LABEL(.L_8000DE24, 0x8000DE24) //this is a jump label
/*8000DE24 0000AC24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*8000DE28 0000AC28*/ PPC::Runtime::ASM::add(context->r6, context->r6, context->r0);
/*8000DE2C 0000AC2C*/ PPC::Runtime::ASM::cmpw(context->r3, context->r6);
/*8000DE30 0000AC30*/ PPC::Runtime::ASM::bge(.L_8000DE44);
/*8000DE34 0000AC34*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*8000DE38 0000AC38*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8000DE3C 0000AC3C*/ PPC::Runtime::ASM::lwzx(context->r5, context->r3, context->r0);
/*8000DE40 0000AC40*/ PPC::Runtime::ASM::b(.L_8000DE50);
RUNTIME_PPC_JUMP_LABEL(.L_8000DE44, 0x8000DE44) //this is a jump label
/*8000DE44 0000AC44*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x8);
/*8000DE48 0000AC48*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
/*8000DE4C 0000AC4C*/ PPC::Runtime::ASM::bdnz(.L_8000DE24);
RUNTIME_PPC_JUMP_LABEL(.L_8000DE50, 0x8000DE50) //this is a jump label
/*8000DE50 0000AC50*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b, context->r30));
/*8000DE54 0000AC54*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*8000DE58 0000AC58*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*8000DE5C 0000AC5C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r30));
/*8000DE60 0000AC60*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b, context->r30));
/*8000DE64 0000AC64*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19, context->r30));
/*8000DE68 0000AC68*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r30));
/*8000DE6C 0000AC6C*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19, context->r30));
/*8000DE70 0000AC70*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa97, context->r31));
/*8000DE74 0000AC74*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*8000DE78 0000AC78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*8000DE7C 0000AC7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000DE80 0000AC80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*8000DE84 0000AC84*/ PPC::Runtime::ASM::blr();
}