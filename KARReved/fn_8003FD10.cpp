//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000CC18.hpp"
#include "fn_acos.hpp"
#include "fn_8000CCB8.hpp"
#include "fn_800088C8.hpp"
#include "fn_8005A348.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_80046DA0.hpp"
#include "fn_80046DC8.hpp"
#include "fn_800088C8.hpp"
#include "fn_80038D1C.hpp"
#include "fn_80038D44.hpp"
#include "fn_800088C8.hpp"



void fn_8003FD10(PPC::Runtime::GCContext* context)
{
/*8003FD10 0003CB10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8003FD14 0003CB14*/ PPC::Runtime::ASM::mflr(context->r0);
/*8003FD18 0003CB18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003FD1C 0003CB1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003FD20 0003CB20*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8003FD24 0003CB24*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8003FD28 0003CB28*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003FD2C 0003CB2C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8003FD30 0003CB30*/ PPC::Runtime::ASM::bl(fn_8000CC18);
/*8003FD34 0003CB34*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*8003FD38 0003CB38*/ PPC::Runtime::ASM::bne(.L_8003FD58);
/*8003FD3C 0003CB3C*/ PPC::Runtime::ASM::bl(fn_acos);
/*8003FD40 0003CB40*/ PPC::Runtime::ASM::bl(fn_8000CCB8);
/*8003FD44 0003CB44*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8003FD48 0003CB48*/ PPC::Runtime::ASM::li(context->r3, 0x19);
/*8003FD4C 0003CB4C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39b, context->r31));
/*8003FD50 0003CB50*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*8003FD54 0003CB54*/ PPC::Runtime::ASM::b(.L_8003FDBC);
RUNTIME_PPC_JUMP_LABEL(.L_8003FD58, 0x8003FD58) //this is a jump label
/*8003FD58 0003CB58*/ PPC::Runtime::ASM::bl(fn_8005A348);
/*8003FD5C 0003CB5C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003FD60 0003CB60*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x399, context->r3));
/*8003FD64 0003CB64*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8003FD68 0003CB68*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8003FD6C 0003CB6C*/ PPC::Runtime::ASM::bne(.L_8003FD98);
/*8003FD70 0003CB70*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8003FD74 0003CB74*/ PPC::Runtime::ASM::beq(.L_8003FD80);
/*8003FD78 0003CB78*/ PPC::Runtime::ASM::bl(fn_80046DA0);
/*8003FD7C 0003CB7C*/ PPC::Runtime::ASM::b(.L_8003FD84);
RUNTIME_PPC_JUMP_LABEL(.L_8003FD80, 0x8003FD80) //this is a jump label
/*8003FD80 0003CB80*/ PPC::Runtime::ASM::bl(fn_80046DC8);
RUNTIME_PPC_JUMP_LABEL(.L_8003FD84, 0x8003FD84) //this is a jump label
/*8003FD84 0003CB84*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*8003FD88 0003CB88*/ PPC::Runtime::ASM::li(context->r3, 0x15);
/*8003FD8C 0003CB8C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39b, context->r31));
/*8003FD90 0003CB90*/ PPC::Runtime::ASM::bl(fn_800088C8);
/*8003FD94 0003CB94*/ PPC::Runtime::ASM::b(.L_8003FDBC);
RUNTIME_PPC_JUMP_LABEL(.L_8003FD98, 0x8003FD98) //this is a jump label
/*8003FD98 0003CB98*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8003FD9C 0003CB9C*/ PPC::Runtime::ASM::beq(.L_8003FDA8);
/*8003FDA0 0003CBA0*/ PPC::Runtime::ASM::bl(fn_80038D1C);
/*8003FDA4 0003CBA4*/ PPC::Runtime::ASM::b(.L_8003FDAC);
RUNTIME_PPC_JUMP_LABEL(.L_8003FDA8, 0x8003FDA8) //this is a jump label
/*8003FDA8 0003CBA8*/ PPC::Runtime::ASM::bl(fn_80038D44);
RUNTIME_PPC_JUMP_LABEL(.L_8003FDAC, 0x8003FDAC) //this is a jump label
/*8003FDAC 0003CBAC*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*8003FDB0 0003CBB0*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8003FDB4 0003CBB4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x39b, context->r31));
/*8003FDB8 0003CBB8*/ PPC::Runtime::ASM::bl(fn_800088C8);
RUNTIME_PPC_JUMP_LABEL(.L_8003FDBC, 0x8003FDBC) //this is a jump label
/*8003FDBC 0003CBBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003FDC0 0003CBC0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003FDC4 0003CBC4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8003FDC8 0003CBC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8003FDCC 0003CBCC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8003FDD0 0003CBD0*/ PPC::Runtime::ASM::blr();
}