//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8005E7D8.hpp"
#include "fn_8011582C.hpp"



void fn_8011C648(PPC::Runtime::GCContext* context)
{
/*8011C648 00119448*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8011C64C 0011944C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011C650 00119450*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011C654 00119454*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011C658 00119458*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8011C65C 0011945C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011C660 00119460*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011C664 00119464*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8011C668 00119468*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8011C66C, 0x8011C66C) //this is a jump label
/*8011C66C 0011946C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011C670 00119470*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*8011C674 00119474*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8011C678 00119478*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*8011C67C 0011947C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r30));
/*8011C680 00119480*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011C684 00119484*/ PPC::Runtime::ASM::beq(.L_8011C6AC);
/*8011C688 00119488*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8011C68C 0011948C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*8011C690 00119490*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8011C694 00119494*/ PPC::Runtime::ASM::beq(.L_8011C6A0);
/*8011C698 00119498*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
/*8011C69C 0011949C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_8011C6A0, 0x8011C6A0) //this is a jump label
/*8011C6A0 001194A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r30));
/*8011C6A4 001194A4*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8011C6A8 001194A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8011C6AC, 0x8011C6AC) //this is a jump label
/*8011C6AC 001194AC*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8011C6B0 001194B0*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*8011C6B4 001194B4*/ PPC::Runtime::ASM::blt(.L_8011C66C);
/*8011C6B8 001194B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8011C6BC 001194BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8011C6C0 001194C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8011C6C4 001194C4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011C6C8 001194C8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8011C6CC 001194CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011C6D0 001194D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8011C6D4 001194D4*/ PPC::Runtime::ASM::blr();
}