//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006A250.hpp"
#include "fn_8006A3F0.hpp"
#include "fn_801D6668.hpp"
#include "fn_801CB0C0.hpp"
#include "fn_8006A3F0.hpp"
#include "fn_801E1EC4.hpp"
#include "fn_8006A3F0.hpp"
#include "fn_8006A3F0.hpp"
#include "fn_8018CD70.hpp"
#include "fn_8006A3F0.hpp"
#include "fn_8018CD70.hpp"
#include "fn_8006A3F0.hpp"



void fn_801D5CE4(PPC::Runtime::GCContext* context)
{
/*801D5CE4 001D2AE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D5CE8 001D2AE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D5CEC 001D2AEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5CF0 001D2AF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D5CF4 001D2AF4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801D5CF8 001D2AF8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5CFC 001D2AFC*/ PPC::Runtime::ASM::bl(fn_8006A250);
/*801D5D00 001D2B00*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x944, context->r31));
/*801D5D04 001D2B04*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1B80 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5D08 001D2B08*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*801D5D0C 001D2B0C*/ PPC::Runtime::ASM::beq(.L_801D5D28);
/*801D5D10 001D2B10*/ PPC::Runtime::ASM::lwz(context->r4, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5D14 001D2B14*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5D18 001D2B18*/ PPC::Runtime::ASM::li(context->r5, 0x19);
/*801D5D1C 001D2B1C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801D5D20 001D2B20*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*801D5D24 001D2B24*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D5D28, 0x801D5D28) //this is a jump label
/*801D5D28 001D2B28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D5D2C 001D2B2C*/ PPC::Runtime::ASM::bl(fn_801D6668);
/*801D5D30 001D2B30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D5D34 001D2B34*/ PPC::Runtime::ASM::bl(fn_801CB0C0);
/*801D5D38 001D2B38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xba8, context->r31));
/*801D5D3C 001D2B3C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801D5D40 001D2B40*/ PPC::Runtime::ASM::beq(.L_801D5D5C);
/*801D5D44 001D2B44*/ PPC::Runtime::ASM::lwz(context->r4, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5D48 001D2B48*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5D4C 001D2B4C*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*801D5D50 001D2B50*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801D5D54 001D2B54*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*801D5D58 001D2B58*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D5D5C, 0x801D5D5C) //this is a jump label
/*801D5D5C 001D2B5C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D5D60 001D2B60*/ PPC::Runtime::ASM::bl(fn_801E1EC4);
/*801D5D64 001D2B64*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801D5D68 001D2B68*/ PPC::Runtime::ASM::beq(.L_801D5D84);
/*801D5D6C 001D2B6C*/ PPC::Runtime::ASM::lwz(context->r4, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5D70 001D2B70*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5D74 001D2B74*/ PPC::Runtime::ASM::li(context->r5, 0x30);
/*801D5D78 001D2B78*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801D5D7C 001D2B7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*801D5D80 001D2B80*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D5D84, 0x801D5D84) //this is a jump label
/*801D5D84 001D2B84*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r31));
/* 801D5D88 001D2B88  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801D5D8C 001D2B8C*/ PPC::Runtime::ASM::beq(.L_801D5DA8);
/*801D5D90 001D2B90*/ PPC::Runtime::ASM::lwz(context->r4, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5D94 001D2B94*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5D98 001D2B98*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*801D5D9C 001D2B9C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801D5DA0 001D2BA0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*801D5DA4 001D2BA4*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D5DA8, 0x801D5DA8) //this is a jump label
/*801D5DA8 001D2BA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801D5DAC 001D2BAC*/ PPC::Runtime::ASM::bl(fn_8018CD70);
/*801D5DB0 001D2BB0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*801D5DB4 001D2BB4*/ PPC::Runtime::ASM::bne(.L_801D5DD0);
/*801D5DB8 001D2BB8*/ PPC::Runtime::ASM::lwz(context->r4, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5DBC 001D2BBC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5DC0 001D2BC0*/ PPC::Runtime::ASM::li(context->r5, 0x3);
/*801D5DC4 001D2BC4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801D5DC8 001D2BC8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*801D5DCC 001D2BCC*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D5DD0, 0x801D5DD0) //this is a jump label
/*801D5DD0 001D2BD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801D5DD4 001D2BD4*/ PPC::Runtime::ASM::bl(fn_8018CD70);
/*801D5DD8 001D2BD8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*801D5DDC 001D2BDC*/ PPC::Runtime::ASM::bne(.L_801D5DF8);
/*801D5DE0 001D2BE0*/ PPC::Runtime::ASM::lwz(context->r4, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5DE4 001D2BE4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc8);
/*801D5DE8 001D2BE8*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*801D5DEC 001D2BEC*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801D5DF0 001D2BF0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*801D5DF4 001D2BF4*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
RUNTIME_PPC_JUMP_LABEL(.L_801D5DF8, 0x801D5DF8) //this is a jump label
/*801D5DF8 001D2BF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801D5DFC 001D2BFC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6F98 @ Get_MemoryOffset_SDA21);
/*801D5E00 001D2C00*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801D5E04 001D2C04*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*801D5E08 001D2C08*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/*801D5E0C 001D2C0C*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801D5E10 001D2C10*/ PPC::Runtime::ASM::beq(.L_801D5E20);
/*801D5E14 001D2C14*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801D5E18 001D2C18*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801D5E1C 001D2C1C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801D5E20, 0x801D5E20) //this is a jump label
/*801D5E20 001D2C20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5E24 001D2C24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801D5E28 001D2C28*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D5E2C 001D2C2C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D5E30 001D2C30*/ PPC::Runtime::ASM::blr();
}