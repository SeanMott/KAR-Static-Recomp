//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"



void fn_80082308(PPC::Runtime::GCContext* context)
{
/*80082308 0007F108*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8008230C 0007F10C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80082310 0007F110*/ PPC::Runtime::ASM::lis(context->r3, lbl_80552E08 @ Get_MemoryOffset_HighBit);
/*80082314 0007F114*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80082318 0007F118*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008231C 0007F11C*/ PPC::Runtime::ASM::addi(context->r7, context->r3, lbl_80552E08 @ Get_MemoryOffset_LowBit);
/*80082320 0007F120*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80082324 0007F124*/ PPC::Runtime::ASM::li(context->r5, 0x14);
/*80082328 0007F128*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*8008232C 0007F12C*/ PPC::Runtime::ASM::rlwimi(context->r6, context->r4, 7, 24, 24);
/*80082330 0007F130*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r7));
/*80082334 0007F134*/ PPC::Runtime::ASM::addi(context->r3, context->r7, 0x10);
/*80082338 0007F138*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8008233C 0007F13C*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*80082340 0007F140*/ PPC::Runtime::ASM::bl(memset);
/*80082344 0007F144*/ PPC::Runtime::ASM::lis(context->r3, lbl_80552E08 @ Get_MemoryOffset_HighBit);
/*80082348 0007F148*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*8008234C 0007F14C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80552E08 @ Get_MemoryOffset_LowBit);
/*80082350 0007F150*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80082354 0007F154*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*80082358 0007F158*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*8008235C 0007F15C*/ PPC::Runtime::ASM::beq(.L_8008237C);
/*80082360 0007F160*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r4));
/*80082364 0007F164*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 26, 24);
/*80082368 0007F168*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r4));
/*8008236C 0007F16C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80082370 0007F170*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
/*80082374 0007F174*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 25);
/*80082378 0007F178*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x26, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8008237C, 0x8008237C) //this is a jump label
/*8008237C 0007F17C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80082380 0007F180*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80082384 0007F184*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80082388 0007F188*/ PPC::Runtime::ASM::blr();
}