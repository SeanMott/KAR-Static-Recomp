//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803EF698.hpp"
#include "fn_HandleReverb.hpp"
#include "fn_HandleReverb.hpp"
#include "fn_HandleReverb.hpp"



void fn_803EFEEC(PPC::Runtime::GCContext* context)
{
/*803EFEEC 003ECCEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EFEF0 003ECCF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EFEF4 003ECCF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*803EFEF8 003ECCF8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*803EFEFC 003ECCFC*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*803EFF00 003ECD00*/ PPC::Runtime::ASM::stfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803EFF04 003ECD04*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EFF08 003ECD08*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*803EFF0C 003ECD0C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c4, context->r27));
/*803EFF10 003ECD10*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803EFF14 003ECD14*/ PPC::Runtime::ASM::bne(.L_803EFFD0);
/*803EFF18 003ECD18*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*803EFF1C 003ECD1C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803EFF20 003ECD20*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803EFF24 003ECD24*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803EFF28 003ECD28*/ PPC::Runtime::ASM::b(.L_803EFF2C);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF2C, 0x803EFF2C) //this is a jump label
/*803EFF2C 003ECD2C*/ PPC::Runtime::ASM::lfs(context->f30, STRUCT_FLOAT_COUNT_1805E5984 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803EFF30 003ECD30*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805E594C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803EFF34 003ECD34*/ PPC::Runtime::ASM::lfs(context->f29, STRUCT_FLOAT_COUNT_1805E5948 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803EFF38 003ECD38*/ PPC::Runtime::ASM::b(.L_803EFF3C);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF3C, 0x803EFF3C) //this is a jump label
/*803EFF3C 003ECD3C*/ PPC::Runtime::ASM::b(.L_803EFFC4);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF40, 0x803EFF40) //this is a jump label
/*803EFF40 003ECD40*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r31, 24);
/*803EFF44 003ECD44*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*803EFF48 003ECD48*/ PPC::Runtime::ASM::beq(.L_803EFF9C);
/*803EFF4C 003ECD4C*/ PPC::Runtime::ASM::bge(.L_803EFF5C);
/*803EFF50 003ECD50*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EFF54 003ECD54*/ PPC::Runtime::ASM::bge(.L_803EFF68);
/*803EFF58 003ECD58*/ PPC::Runtime::ASM::b(.L_803EFFC0);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF5C, 0x803EFF5C) //this is a jump label
/*803EFF5C 003ECD5C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*803EFF60 003ECD60*/ PPC::Runtime::ASM::bge(.L_803EFFC0);
/*803EFF64 003ECD64*/ PPC::Runtime::ASM::b(.L_803EFFB0);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF68, 0x803EFF68) //this is a jump label
/*803EFF68 003ECD68*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a8, context->r27));
/*803EFF6C 003ECD6C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f29, context->f0);
/*803EFF70 003ECD70*/ PPC::Runtime::ASM::beq(.L_803EFF88);
/*803EFF74 003ECD74*/ PPC::Runtime::ASM::fmuls(context->f1, context->f30, context->f0);
/*803EFF78 003ECD78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EFF7C 003ECD7C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*803EFF80 003ECD80*/ PPC::Runtime::ASM::fsubs(context->f2, context->f31, context->f1);
/*803EFF84 003ECD84*/ PPC::Runtime::ASM::bl(fn_803EF698);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF88, 0x803EFF88) //this is a jump label
/*803EFF88 003ECD88*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803EFF8C 003ECD8C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*803EFF90 003ECD90*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803EFF94 003ECD94*/ PPC::Runtime::ASM::bl(fn_HandleReverb);
/*803EFF98 003ECD98*/ PPC::Runtime::ASM::b(.L_803EFFC0);
RUNTIME_PPC_JUMP_LABEL(.L_803EFF9C, 0x803EFF9C) //this is a jump label
/*803EFF9C 003ECD9C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EFFA0 003ECDA0*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*803EFFA4 003ECDA4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803EFFA8 003ECDA8*/ PPC::Runtime::ASM::bl(fn_HandleReverb);
/*803EFFAC 003ECDAC*/ PPC::Runtime::ASM::b(.L_803EFFC0);
RUNTIME_PPC_JUMP_LABEL(.L_803EFFB0, 0x803EFFB0) //this is a jump label
/*803EFFB0 003ECDB0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*803EFFB4 003ECDB4*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*803EFFB8 003ECDB8*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803EFFBC 003ECDBC*/ PPC::Runtime::ASM::bl(fn_HandleReverb);
RUNTIME_PPC_JUMP_LABEL(.L_803EFFC0, 0x803EFFC0) //this is a jump label
/*803EFFC0 003ECDC0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EFFC4, 0x803EFFC4) //this is a jump label
/*803EFFC4 003ECDC4*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r31, 24);
/*803EFFC8 003ECDC8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x3);
/*803EFFCC 003ECDCC*/ PPC::Runtime::ASM::blt(.L_803EFF40);
RUNTIME_PPC_JUMP_LABEL(.L_803EFFD0, 0x803EFFD0) //this is a jump label
/*803EFFD0 003ECDD0*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803EFFD4 003ECDD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803EFFD8 003ECDD8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*803EFFDC 003ECDDC*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*803EFFE0 003ECDE0*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803EFFE4 003ECDE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*803EFFE8 003ECDE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EFFEC 003ECDEC*/ PPC::Runtime::ASM::blr();
}