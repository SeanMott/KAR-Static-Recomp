//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_80062CA4.hpp"
#include "fn_80062CA4.hpp"
#include "fn_8019407C.hpp"
#include "fn_801C868C.hpp"
#include "fn_8021F428.hpp"



void fn_spawnGordo(PPC::Runtime::GCContext* context)
{
/*801AA028 001A6E28*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*801AA02C 001A6E2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AA030 001A6E30*/ PPC::Runtime::ASM::li(context->r6, 0x10);
/*801AA034 001A6E34*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801AA038 001A6E38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*801AA03C 001A6E3C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801AA040 001A6E40*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x24);
/*801AA044 001A6E44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*801AA048 001A6E48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*801AA04C 001A6E4C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801AA050 001A6E50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r3));
/*801AA054 001A6E54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r3));
/*801AA058 001A6E58*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AA05C 001A6E5C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801AA060 001A6E60*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801AA064 001A6E64*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801AA068 001A6E68*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801AA06C 001A6E6C*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*801AA070 001A6E70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r30));
/*801AA074 001A6E74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801AA078 001A6E78*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801AA07C 001A6E7C*/ PPC::Runtime::ASM::bne(.L_801AA090);
/*801AA080 001A6E80*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6F50 @ Get_MemoryOffset_SDA21);
/*801AA084 001A6E84*/ PPC::Runtime::ASM::li(context->r4, 0x47c);
/*801AA088 001A6E88*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6F58 @ Get_MemoryOffset_SDA21);
/*801AA08C 001A6E8C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801AA090, 0x801AA090) //this is a jump label
/*801AA090 001A6E90*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801AA094 001A6E94*/ PPC::Runtime::ASM::beq(.L_801AA0D8);
/*801AA098 001A6E98*/ PPC::Runtime::ASM::bne(.L_801AA0AC);
/*801AA09C 001A6E9C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6F50 @ Get_MemoryOffset_SDA21);
/*801AA0A0 001A6EA0*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801AA0A4 001A6EA4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6F58 @ Get_MemoryOffset_SDA21);
/*801AA0A8 001A6EA8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801AA0AC, 0x801AA0AC) //this is a jump label
/*801AA0AC 001A6EAC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801AA0B0 001A6EB0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801AA0B4 001A6EB4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*801AA0B8 001A6EB8*/ PPC::Runtime::ASM::bne(.L_801AA0C8);
/*801AA0BC 001A6EBC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*801AA0C0 001A6EC0*/ PPC::Runtime::ASM::beq(.L_801AA0C8);
/*801AA0C4 001A6EC4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801AA0C8, 0x801AA0C8) //this is a jump label
/*801AA0C8 001A6EC8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AA0CC 001A6ECC*/ PPC::Runtime::ASM::beq(.L_801AA0D8);
/*801AA0D0 001A6ED0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AA0D4 001A6ED4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_801AA0D8, 0x801AA0D8) //this is a jump label
/*801AA0D8 001A6ED8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*801AA0DC 001A6EDC*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x30);
/*801AA0E0 001A6EE0*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801AA0E4 001A6EE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801AA0E8 001A6EE8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r31));
/*801AA0EC 001A6EEC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801AA0F0 001A6EF0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r31));
/*801AA0F4 001A6EF4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801AA0F8 001A6EF8*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801AA0FC 001A6EFC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*801AA100 001A6F00*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x3c);
/*801AA104 001A6F04*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801AA108 001A6F08*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801AA10C 001A6F0C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r31));
/*801AA110 001A6F10*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801AA114 001A6F14*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r31));
/*801AA118 001A6F18*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801AA11C 001A6F1C*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*801AA120 001A6F20*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1348 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801AA124 001A6F24*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801AA128 001A6F28*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801AA12C 001A6F2C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*801AA130 001A6F30*/ PPC::Runtime::ASM::bl(fn_8019407C);
/*801AA134 001A6F34*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801AA138 001A6F38*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801AA13C 001A6F3C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r30));
/*801AA140 001A6F40*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AA144 001A6F44*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801AA148 001A6F48*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801AA14C 001A6F4C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*801AA150 001A6F50*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r30));
/*801AA154 001A6F54*/ PPC::Runtime::ASM::fadds(context->f0, context->f2, context->f0);
/*801AA158 001A6F58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*801AA15C 001A6F5C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r30));
/*801AA160 001A6F60*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801AA164 001A6F64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*801AA168 001A6F68*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801AA16C 001A6F6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r30));
/*801AA170 001A6F70*/ PPC::Runtime::ASM::bl(fn_801C868C);
/*801AA174 001A6F74*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*801AA178 001A6F78*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*801AA17C 001A6F7C*/ PPC::Runtime::ASM::bl(fn_8021F428);
/*801AA180 001A6F80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*801AA184 001A6F84*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*801AA188 001A6F88*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*801AA18C 001A6F8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AA190 001A6F90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*801AA194 001A6F94*/ PPC::Runtime::ASM::blr();
}