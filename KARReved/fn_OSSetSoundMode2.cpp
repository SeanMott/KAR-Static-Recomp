//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_UnlockSram.hpp"
#include "fn_UnlockSram.hpp"



void fn_OSSetSoundMode2(PPC::Runtime::GCContext* context)
{
/*803D9724 003D6524*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D9728 003D6528*/ PPC::Runtime::ASM::lis(context->r4, Scb_8056D900 @ Get_MemoryOffset_HighBit);
/*803D972C 003D652C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D9730 003D6530*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803D9734 003D6534*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D9738 003D6538*/ PPC::Runtime::ASM::addi(context->r31, context->r4, Scb_8056D900 @ Get_MemoryOffset_LowBit);
/*803D973C 003D653C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D9740 003D6540*/ PPC::Runtime::ASM::clrlslwi(context->r30, context->r3, 31, 7);
/*803D9744 003D6544*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D9748 003D6548*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*803D974C 003D654C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x48);
/*803D9750 003D6550*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D9754 003D6554*/ PPC::Runtime::ASM::beq(.L_803D9764);
/*803D9758 003D6558*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D975C 003D655C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803D9760 003D6560*/ PPC::Runtime::ASM::b(.L_803D9770);
RUNTIME_PPC_JUMP_LABEL(.L_803D9764, 0x803D9764) //this is a jump label
/*803D9764 003D6564*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*803D9768 003D6568*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D976C 003D656C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_803D9770, 0x803D9770) //this is a jump label
/*803D9770 003D6570*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D9774 003D6574*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r3, 0, 24, 24);
/*803D9778 003D6578*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*803D977C 003D657C*/ PPC::Runtime::ASM::bne(.L_803D9790);
/*803D9780 003D6580*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D9784 003D6584*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803D9788 003D6588*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
/*803D978C 003D658C*/ PPC::Runtime::ASM::b(.L_803D97B0);
RUNTIME_PPC_JUMP_LABEL(.L_803D9790, 0x803D9790) //this is a jump label
/*803D9790 003D6590*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r3, 0, 25, 23);
/*803D9794 003D6594*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D9798 003D6598*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803D979C 003D659C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803D97A0 003D65A0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D97A4 003D65A4*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r30);
/*803D97A8 003D65A8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13, context->r31));
/*803D97AC 003D65AC*/ PPC::Runtime::ASM::bl(fn_UnlockSram);
RUNTIME_PPC_JUMP_LABEL(.L_803D97B0, 0x803D97B0) //this is a jump label
/*803D97B0 003D65B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D97B4 003D65B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D97B8 003D65B8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D97BC 003D65BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803D97C0 003D65C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D97C4 003D65C4*/ PPC::Runtime::ASM::blr();
}