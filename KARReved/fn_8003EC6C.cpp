//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8003EC6C(PPC::Runtime::GCContext* context)
{
/*8003EC6C 0003BA6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8003EC70 0003BA70*/ PPC::Runtime::ASM::mflr(context->r0);
/*8003EC74 0003BA74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003EC78 0003BA78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003EC7C 0003BA7C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8003EC80 0003BA80*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8003EC84 0003BA84*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8003EC88 0003BA88*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*8003EC8C 0003BA8C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38a, context->r4));
/*8003EC90 0003BA90*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*8003EC94 0003BA94*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x63);
/*8003EC98 0003BA98*/ PPC::Runtime::ASM::bge(.L_8003ECA4);
/*8003EC9C 0003BA9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8003ECA0 0003BAA0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38a, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8003ECA4, 0x8003ECA4) //this is a jump label
/*8003ECA4 0003BAA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8003ECA8 0003BAA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8003ECAC 0003BAAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8003ECB0 0003BAB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8003ECB4 0003BAB4*/ PPC::Runtime::ASM::blr();
}