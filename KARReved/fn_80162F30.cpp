//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_801389D8.hpp"
#include "fn_80138AC8.hpp"



void fn_80162F30(PPC::Runtime::GCContext* context)
{
/*80162F30 0015FD30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80162F34 0015FD34*/ PPC::Runtime::ASM::mflr(context->r0);
/*80162F38 0015FD38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80162F3C 0015FD3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80162F40 0015FD40*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80162F44 0015FD44*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80162F48 0015FD48*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80162F4C 0015FD4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x964, context->r3));
/*80162F50 0015FD50*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80162F54 0015FD54*/ PPC::Runtime::ASM::beq(.L_80162F9C);
/*80162F58 0015FD58*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80162F5C 0015FD5C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80162F60 0015FD60*/ PPC::Runtime::ASM::xoris(context->r4, context->r0, 0x8000);
/*80162F64 0015FD64*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*80162F68 0015FD68*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80162F6C 0015FD6C*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E09C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80162F70 0015FD70*/ PPC::Runtime::ASM::stb(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*80162F74 0015FD74*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E09C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80162F78 0015FD78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80162F7C 0015FD7C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x960, context->r3));
/*80162F80 0015FD80*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80162F84 0015FD84*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80162F88 0015FD88*/ PPC::Runtime::ASM::fsubs(context->f1, context->f0, context->f1);
/*80162F8C 0015FD8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80162F90 0015FD90*/ PPC::Runtime::ASM::bl(fn_801389D8);
/*80162F94 0015FD94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80162F98 0015FD98*/ PPC::Runtime::ASM::bl(fn_80138AC8);
RUNTIME_PPC_JUMP_LABEL(.L_80162F9C, 0x80162F9C) //this is a jump label
/*80162F9C 0015FD9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80162FA0 0015FDA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80162FA4 0015FDA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80162FA8 0015FDA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80162FAC 0015FDAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80162FB0 0015FDB0*/ PPC::Runtime::ASM::blr();
}