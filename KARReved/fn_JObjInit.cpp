//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_JObjInit(PPC::Runtime::GCContext* context)
{
/*8040DC70 0040AA70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8040DC74 0040AA74*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040DC78 0040AA78*/ PPC::Runtime::ASM::lis(context->r4, lbl_805037C8 @ Get_MemoryOffset_HighBit);
/*8040DC7C 0040AA7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040DC80 0040AA80*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_805037C8 @ Get_MemoryOffset_LowBit);
/*8040DC84 0040AA84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040DC88 0040AA88*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8040DC8C 0040AA8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8040DC90 0040AA90*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*8040DC94 0040AA94*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8040DC98 0040AA98*/ PPC::Runtime::ASM::bctrl();
/*8040DC9C 0040AA9C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8040DCA0 0040AAA0*/ PPC::Runtime::ASM::blt(.L_8040DCC0);
/*8040DCA4 0040AAA4*/ PPC::Runtime::ASM::li(context->r0, 0x40);
/*8040DCA8 0040AAA8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E5B10 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040DCAC 0040AAAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8040DCB0 0040AAB0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040DCB4 0040AAB4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8040DCB8 0040AAB8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8040DCBC 0040AABC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8040DCC0, 0x8040DCC0) //this is a jump label
/*8040DCC0 0040AAC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040DCC4 0040AAC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8040DCC8 0040AAC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040DCCC 0040AACC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8040DCD0 0040AAD0*/ PPC::Runtime::ASM::blr();
}