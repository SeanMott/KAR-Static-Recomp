//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80059818.hpp"
#include "fn_80073FA4.hpp"
#include "fn_LoadDatsForCityTrial.hpp"
#include "fn_80059818.hpp"
#include "fn_80059520.hpp"
#include "fn_80139A88.hpp"
#include "fn_8013B014.hpp"
#include "fn_80139B24.hpp"
#include "fn_8013A74C.hpp"
#include "fn_80167580.hpp"
#include "fn_801677A8.hpp"
#include "fn_80168478.hpp"
#include "fn_801687A4.hpp"
#include "fn_80168A98.hpp"
#include "fn_80168D30.hpp"
#include "fn_8016904C.hpp"
#include "fn_8016985C.hpp"
#include "fn_80169B28.hpp"
#include "fn_8016A000.hpp"
#include "fn_80169448.hpp"
#include "fn_8016AAE8.hpp"
#include "fn_8016AFA8.hpp"
#include "fn_8016180C.hpp"
#include "fn_80071DC0.hpp"
#include "fn_802337E4.hpp"



void fn_80136BA4(PPC::Runtime::GCContext* context)
{
/*80136BA4 001339A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80136BA8 001339A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80136BAC 001339AC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80136BB0 001339B0*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1133 @ Get_MemoryOffset_HighBit);
/*80136BB4 001339B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80136BB8 001339B8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80136BBC 001339BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80136BC0 001339C0*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_1133 @ Get_MemoryOffset_LowBit);
/*80136BC4 001339C4*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*80136BC8 001339C8*/ PPC::Runtime::ASM::stb(context->r0, lbl_80558788 @ Get_MemoryOffset_LowBit ( context->r3 ));
/*80136BCC 001339CC*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD7E0 @ Get_MemoryOffset_SDA21);
/*80136BD0 001339D0*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80136BD4 001339D4*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80136BD8 001339D8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80136BDC 001339DC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80136BE0 001339E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r3));
/*80136BE4 001339E4*/ PPC::Runtime::ASM::bl(fn_80073FA4);
/*80136BE8 001339E8*/ PPC::Runtime::ASM::bl(fn_LoadDatsForCityTrial);
/*80136BEC 001339EC*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0xec);
/*80136BF0 001339F0*/ PPC::Runtime::ASM::li(context->r3, STRUCT_BYTE4_COUNT_1805DD7A8 @ Get_MemoryOffset_SDA21);
/*80136BF4 001339F4*/ PPC::Runtime::ASM::bl(fn_80059818);
/*80136BF8 001339F8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD7A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80136BFC 001339FC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80136C00 00133A00*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x304);
/*80136C04 00133A04*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80136C08 00133A08*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80136C0C 00133A0C*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80136C10 00133A10*/ PPC::Runtime::ASM::lis(context->r3, lbl_80558788 @ Get_MemoryOffset_HighBit);
/*80136C14 00133A14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80136C18 00133A18*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80558788 @ Get_MemoryOffset_LowBit);
/*80136C1C 00133A1C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80136C20 00133A20*/ PPC::Runtime::ASM::lis(context->r3, lbl_80559A90 @ Get_MemoryOffset_HighBit);
/*80136C24 00133A24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa44, context->r4));
/*80136C28 00133A28*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80559A90 @ Get_MemoryOffset_LowBit);
/*80136C2C 00133A2C*/ PPC::Runtime::ASM::li(context->r4, 0x1f0);
/*80136C30 00133A30*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAllocInit);
/*80136C34 00133A34*/ PPC::Runtime::ASM::bl(fn_80139A88);
/*80136C38 00133A38*/ PPC::Runtime::ASM::bl(fn_8013B014);
/*80136C3C 00133A3C*/ PPC::Runtime::ASM::bl(fn_80139B24);
/*80136C40 00133A40*/ PPC::Runtime::ASM::bl(fn_8013A74C);
/*80136C44 00133A44*/ PPC::Runtime::ASM::bl(fn_80167580);
/*80136C48 00133A48*/ PPC::Runtime::ASM::bl(fn_801677A8);
/*80136C4C 00133A4C*/ PPC::Runtime::ASM::bl(fn_80168478);
/*80136C50 00133A50*/ PPC::Runtime::ASM::bl(fn_801687A4);
/*80136C54 00133A54*/ PPC::Runtime::ASM::bl(fn_80168A98);
/*80136C58 00133A58*/ PPC::Runtime::ASM::bl(fn_80168D30);
/*80136C5C 00133A5C*/ PPC::Runtime::ASM::bl(fn_8016904C);
/*80136C60 00133A60*/ PPC::Runtime::ASM::bl(fn_8016985C);
/*80136C64 00133A64*/ PPC::Runtime::ASM::bl(fn_80169B28);
/*80136C68 00133A68*/ PPC::Runtime::ASM::bl(fn_8016A000);
/*80136C6C 00133A6C*/ PPC::Runtime::ASM::bl(fn_80169448);
/*80136C70 00133A70*/ PPC::Runtime::ASM::bl(fn_8016AAE8);
/*80136C74 00133A74*/ PPC::Runtime::ASM::bl(fn_8016AFA8);
/*80136C78 00133A78*/ PPC::Runtime::ASM::bl(fn_8016180C);
/*80136C7C 00133A7C*/ PPC::Runtime::ASM::bl(fn_80071DC0);
/*80136C80 00133A80*/ PPC::Runtime::ASM::bl(fn_802337E4);
/*80136C84 00133A84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80136C88 00133A88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80136C8C 00133A8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80136C90 00133A90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80136C94 00133A94*/ PPC::Runtime::ASM::blr();
}