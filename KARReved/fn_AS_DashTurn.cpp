//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801A2D80.hpp"
#include "fn_801907E8.hpp"
#include "fn_801A2E7C.hpp"
#include "fn_801A2FE8.hpp"



void fn_AS_DashTurn(PPC::Runtime::GCContext* context)
{
/*801BC06C 001B8E6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801BC070 001B8E70*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BC074 001B8E74*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E17B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BC078 001B8E78*/ PPC::Runtime::ASM::li(context->r4, 0x75);
/*801BC07C 001B8E7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801BC080 001B8E80*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801BC084 001B8E84*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801BC088 001B8E88*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E17BC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BC08C 001B8E8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801BC090 001B8E90*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BC094 001B8E94*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801BC098 001B8E98*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801BC09C 001B8E9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r3));
/*801BC0A0 001B8EA0*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801BC0A4 001B8EA4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC0A8 001B8EA8*/ PPC::Runtime::ASM::bl(fn_801A2D80);
/*801BC0AC 001B8EAC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
/*801BC0B0 001B8EB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC0B4 001B8EB4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801BC0B8 001B8EB8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x330);
/*801BC0BC 001B8EBC*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801BC0C0 001B8EC0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801BC0C4 001B8EC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r31));
/*801BC0C8 001B8EC8*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801BC0CC 001B8ECC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BC0D0 001B8ED0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r31));
/*801BC0D4 001B8ED4*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801BC0D8 001B8ED8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801BC0DC 001B8EDC*/ PPC::Runtime::ASM::bl(fn_801907E8);
/*801BC0E0 001B8EE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC0E4 001B8EE4*/ PPC::Runtime::ASM::bl(fn_801A2E7C);
/*801BC0E8 001B8EE8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BC0EC 001B8EEC*/ PPC::Runtime::ASM::bl(fn_801A2FE8);
/*801BC0F0 001B8EF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801BC0F4 001B8EF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801BC0F8 001B8EF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BC0FC 001B8EFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801BC100 001B8F00*/ PPC::Runtime::ASM::blr();
}