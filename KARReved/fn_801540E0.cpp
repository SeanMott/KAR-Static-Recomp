//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_801540E0(PPC::Runtime::GCContext* context)
{
/*801540E0 00150EE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801540E4 00150EE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801540E8 00150EE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801540EC 00150EEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801540F0 00150EF0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801540F4 00150EF4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801540F8 00150EF8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801540FC 00150EFC*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80154100, 0x80154100) //this is a jump label
/*80154100 00150F00*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80154104 00150F04*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80154108 00150F08*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8015410C 00150F0C*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80154110 00150F10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5e8, context->r30));
/*80154114 00150F14*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80154118 00150F18*/ PPC::Runtime::ASM::beq(.L_80154124);
/*8015411C 00150F1C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80154120 00150F20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5e8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80154124, 0x80154124) //this is a jump label
/*80154124 00150F24*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80154128 00150F28*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8015412C 00150F2C*/ PPC::Runtime::ASM::blt(.L_80154100);
/*80154130 00150F30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80154134 00150F34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80154138 00150F38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015413C 00150F3C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80154140 00150F40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80154144 00150F44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80154148 00150F48*/ PPC::Runtime::ASM::blr();
}