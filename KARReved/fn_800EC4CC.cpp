//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EBF70.hpp"
#include "fn_CT_SpawnPowerUpStatInTheAirSoItCanFall.hpp"
#include "fn_CT_SpawnPowerUpStatInTheAirSoItCanFall.hpp"
#include "fn_800EC564.hpp"



void fn_800EC4CC(PPC::Runtime::GCContext* context)
{
/*800EC4CC 000E92CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EC4D0 000E92D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EC4D4 000E92D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EC4D8 000E92D8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC4DC 000E92DC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800EC4E0 000E92E0*/ PPC::Runtime::ASM::beq(.L_800EC554);
/*800EC4E4 000E92E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800EC4E8 000E92E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800EC4EC 000E92EC*/ PPC::Runtime::ASM::bne(.L_800EC4F4);
/*800EC4F0 000E92F0*/ PPC::Runtime::ASM::b(.L_800EC554);
RUNTIME_PPC_JUMP_LABEL(.L_800EC4F4, 0x800EC4F4) //this is a jump label
/*800EC4F4 000E92F4*/ PPC::Runtime::ASM::beq(.L_800EC554);
/*800EC4F8 000E92F8*/ PPC::Runtime::ASM::bl(fn_800EBF70);
/*800EC4FC 000E92FC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC500 000E9300*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*800EC504 000E9304*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EC508 000E9308*/ PPC::Runtime::ASM::bne(.L_800EC518);
/*800EC50C 000E930C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800EC510 000E9310*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EC514 000E9314*/ PPC::Runtime::ASM::beq(.L_800EC550);
RUNTIME_PPC_JUMP_LABEL(.L_800EC518, 0x800EC518) //this is a jump label
/*800EC518 000E9318*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*800EC51C 000E931C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*800EC520 000E9320*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800EC524 000E9324*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/*800EC528 000E9328*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC52C 000E932C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800EC530 000E9330*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EC534 000E9334*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800EC538 000E9338*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800EC53C 000E933C*/ PPC::Runtime::ASM::beq(.L_800EC550);
/*800EC540 000E9340*/ PPC::Runtime::ASM::lis(context->r4, fn_CT_SpawnPowerUpStatInTheAirSoItCanFall @ Get_MemoryOffset_HighBit);
/*800EC544 000E9344*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800EC548 000E9348*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_CT_SpawnPowerUpStatInTheAirSoItCanFall @ Get_MemoryOffset_LowBit);
/*800EC54C 000E934C*/ PPC::Runtime::ASM::bl(fn_804288A4);
RUNTIME_PPC_JUMP_LABEL(.L_800EC550, 0x800EC550) //this is a jump label
/*800EC550 000E9350*/ PPC::Runtime::ASM::bl(fn_800EC564);
RUNTIME_PPC_JUMP_LABEL(.L_800EC554, 0x800EC554) //this is a jump label
/*800EC554 000E9354*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EC558 000E9358*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EC55C 000E935C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EC560 000E9360*/ PPC::Runtime::ASM::blr();
}