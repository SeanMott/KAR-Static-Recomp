//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80098E30.hpp"
#include "fn_8009EB30.hpp"



void fn_8009ECFC(PPC::Runtime::GCContext* context)
{
/*8009ECFC 0009BAFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8009ED00 0009BB00*/ PPC::Runtime::ASM::mflr(context->r0);
/*8009ED04 0009BB04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009ED08 0009BB08*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/* 8009ED0C 0009BB0C  7C BF 2B 79 */ mr. context->r31 , context->r5
/*8009ED10 0009BB10*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009ED14 0009BB14*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8009ED18 0009BB18*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009ED1C 0009BB1C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8009ED20 0009BB20*/ PPC::Runtime::ASM::bne(.L_8009EDC4);
/*8009ED24 0009BB24*/ PPC::Runtime::ASM::bl(fn_GXClearVtxDesc);
/*8009ED28 0009BB28*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*8009ED2C 0009BB2C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009ED30 0009BB30*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009ED34 0009BB34*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009ED38 0009BB38*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*8009ED3C 0009BB3C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8009ED40 0009BB40*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009ED44 0009BB44*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009ED48 0009BB48*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009ED4C 0009BB4C*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*8009ED50 0009BB50*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8009ED54 0009BB54*/ PPC::Runtime::ASM::bl(fn_GXSetVtxDesc);
/*8009ED58 0009BB58*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009ED5C 0009BB5C*/ PPC::Runtime::ASM::li(context->r4, 0xa);
/*8009ED60 0009BB60*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8009ED64 0009BB64*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*8009ED68 0009BB68*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8009ED6C 0009BB6C*/ PPC::Runtime::ASM::bl(fn_GXSetVtxAttrFmt);
/*8009ED70 0009BB70*/ PPC::Runtime::ASM::bl(fn_COBJ_GetCurrent);
/*8009ED74 0009BB74*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8009ED78 0009BB78*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetViewingMtx);
/*8009ED7C 0009BB7C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009ED80 0009BB80*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009ED84 0009BB84*/ PPC::Runtime::ASM::bl(fn_GXLoadPosMtxImm);
/*8009ED88 0009BB88*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009ED8C 0009BB8C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8009ED90 0009BB90*/ PPC::Runtime::ASM::bl(fn_PSMTXInvXpose);
/*8009ED94 0009BB94*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8009ED98 0009BB98*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8009ED9C 0009BB9C*/ PPC::Runtime::ASM::bl(fn_GXLoadNrmMtxImm);
/*8009EDA0 0009BBA0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8009EDA4 0009BBA4*/ PPC::Runtime::ASM::bl(fn_GXSetCurrentMtx);
/*8009EDA8 0009BBA8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8009EDAC 0009BBAC*/ PPC::Runtime::ASM::bl(fn_80098E30);
/*8009EDB0 0009BBB0*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_637 @ Get_MemoryOffset_HighBit);
/*8009EDB4 0009BBB4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8009EDB8 0009BBB8*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_637 @ Get_MemoryOffset_LowBit);
/*8009EDBC 0009BBBC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8009EDC0 0009BBC0*/ PPC::Runtime::ASM::bl(fn_8009EB30);
RUNTIME_PPC_JUMP_LABEL(.L_8009EDC4, 0x8009EDC4) //this is a jump label
/*8009EDC4 0009BBC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8009EDC8 0009BBC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8009EDCC 0009BBCC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8009EDD0 0009BBD0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8009EDD4 0009BBD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8009EDD8 0009BBD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8009EDDC 0009BBDC*/ PPC::Runtime::ASM::blr();
}