//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRKAcquireMutex.hpp"
#include "fn_TRKReleaseMutex.hpp"
#include "fn_usr_puts_serial.hpp"



void fn_TRKGetFreeBuffer(PPC::Runtime::GCContext* context)
{
/*803BE22C 003BB02C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803BE230 003BB030*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BE234 003BB034*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BE238 003BB038*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803BE23C 003BB03C*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BE240 003BB040*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*803BE244 003BB044*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*803BE248 003BB048*/ PPC::Runtime::ASM::li(context->r30, 0x300);
/*803BE24C 003BB04C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*803BE250 003BB050*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803BE254 003BB054*/ PPC::Runtime::ASM::b(.L_803BE2C0);
RUNTIME_PPC_JUMP_LABEL(.L_803BE258, 0x803BE258) //this is a jump label
/*803BE258 003BB058*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*803BE25C 003BB05C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803BE260 003BB060*/ PPC::Runtime::ASM::blt(.L_803BE27C);
/*803BE264 003BB064*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x3);
/*803BE268 003BB068*/ PPC::Runtime::ASM::bge(.L_803BE27C);
/*803BE26C 003BB06C*/ PPC::Runtime::ASM::mulli(context->r4, context->r29, 0x890);
/*803BE270 003BB070*/ PPC::Runtime::ASM::lis(context->r3, lbl_80569E90 @ Get_MemoryOffset_HighBit);
/*803BE274 003BB074*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_80569E90 @ Get_MemoryOffset_LowBit);
/*803BE278 003BB078*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
RUNTIME_PPC_JUMP_LABEL(.L_803BE27C, 0x803BE27C) //this is a jump label
/*803BE27C 003BB07C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803BE280 003BB080*/ PPC::Runtime::ASM::bl(fn_TRKAcquireMutex);
/*803BE284 003BB084*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803BE288 003BB088*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803BE28C 003BB08C*/ PPC::Runtime::ASM::bne(.L_803BE2B4);
/*803BE290 003BB090*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803BE294 003BB094*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803BE298 003BB098*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*803BE29C 003BB09C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803BE2A0 003BB0A0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803BE2A4 003BB0A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*803BE2A8 003BB0A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*803BE2AC 003BB0AC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r27));
/*803BE2B0 003BB0B0*/ PPC::Runtime::ASM::li(context->r29, 0x3);
RUNTIME_PPC_JUMP_LABEL(.L_803BE2B4, 0x803BE2B4) //this is a jump label
/*803BE2B4 003BB0B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803BE2B8 003BB0B8*/ PPC::Runtime::ASM::bl(fn_TRKReleaseMutex);
/*803BE2BC 003BB0BC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803BE2C0, 0x803BE2C0) //this is a jump label
/*803BE2C0 003BB0C0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x3);
/*803BE2C4 003BB0C4*/ PPC::Runtime::ASM::blt(.L_803BE258);
/*803BE2C8 003BB0C8*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x300);
/*803BE2CC 003BB0CC*/ PPC::Runtime::ASM::bne(.L_803BE2DC);
/*803BE2D0 003BB0D0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_87 @ Get_MemoryOffset_HighBit);
/*803BE2D4 003BB0D4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_87 @ Get_MemoryOffset_LowBit);
/*803BE2D8 003BB0D8*/ PPC::Runtime::ASM::bl(fn_usr_puts_serial);
RUNTIME_PPC_JUMP_LABEL(.L_803BE2DC, 0x803BE2DC) //this is a jump label
/*803BE2DC 003BB0DC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803BE2E0 003BB0E0*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BE2E4 003BB0E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803BE2E8 003BB0E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BE2EC 003BB0EC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803BE2F0 003BB0F0*/ PPC::Runtime::ASM::blr();
}