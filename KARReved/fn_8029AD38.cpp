//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029AD38(PPC::Runtime::GCContext* context)
{
/*8029AD38 00297B38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029AD3C 00297B3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029AD40 00297B40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AD44 00297B44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AD48 00297B48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AD4C 00297B4C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029AD50 00297B50*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029AD54 00297B54*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029AD58 00297B58*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AD5C 00297B5C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AD60 00297B60*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029AD64 00297B64*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AD68 00297B68*/ PPC::Runtime::ASM::bctrl();
/*8029AD6C 00297B6C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029AD70 00297B70*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AD74 00297B74*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AD78 00297B78*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029AD7C 00297B7C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AD80 00297B80*/ PPC::Runtime::ASM::bctrl();
/*8029AD84 00297B84*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029AD88 00297B88*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029AD8C 00297B8C*/ PPC::Runtime::ASM::li(context->r5, 0x6);
/*8029AD90 00297B90*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029AD94 00297B94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AD98 00297B98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AD9C 00297B9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029ADA0 00297BA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029ADA4 00297BA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029ADA8 00297BA8*/ PPC::Runtime::ASM::blr();
}