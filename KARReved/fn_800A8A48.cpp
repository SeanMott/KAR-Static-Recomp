//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007D440.hpp"
#include "fn_8007D440.hpp"
#include "fn_8007D440.hpp"



void fn_800A8A48(PPC::Runtime::GCContext* context)
{
/*800A8A48 000A5848*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800A8A4C 000A584C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A8A50 000A5850*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A8A54 000A5854*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A8A58 000A5858*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A8A5C 000A585C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800A8A60 000A5860*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A8A64 000A5864*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x725, context->r31));
/* 800A8A68 000A5868  54 00 EF FF */ extrwi. context->r0 , context->r0 , 1 , 28
/*800A8A6C 000A586C*/ PPC::Runtime::ASM::beq(.L_800A8AA0);
/*800A8A70 000A5870*/ PPC::Runtime::ASM::bl(fn_8007D440);
/*800A8A74 000A5874*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 25, 25);
/*800A8A78 000A5878*/ PPC::Runtime::ASM::beq(.L_800A8AA0);
/*800A8A7C 000A587C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A8A80 000A5880*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A8A84 000A5884*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r4));
/*800A8A88 000A5888*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800A8A8C 000A588C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*800A8A90 000A5890*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r4));
/*800A8A94 000A5894*/ PPC::Runtime::ASM::blt(.L_800A8AA0);
/*800A8A98 000A5898*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A8A9C 000A589C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800A8AA0, 0x800A8AA0) //this is a jump label
/*800A8AA0 000A58A0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x725, context->r31));
/* 800A8AA4 000A58A4  54 00 E7 FF */ extrwi. context->r0 , context->r0 , 1 , 27
/*800A8AA8 000A58A8*/ PPC::Runtime::ASM::beq(.L_800A8B40);
/*800A8AAC 000A58AC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800A8AB0 000A58B0*/ PPC::Runtime::ASM::bl(fn_8007D440);
/*800A8AB4 000A58B4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 25, 25);
/*800A8AB8 000A58B8*/ PPC::Runtime::ASM::beq(.L_800A8AF0);
/*800A8ABC 000A58BC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A8AC0 000A58C0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A8AC4 000A58C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r4));
/*800A8AC8 000A58C8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800A8ACC 000A58CC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*800A8AD0 000A58D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r4));
/*800A8AD4 000A58D4*/ PPC::Runtime::ASM::blt(.L_800A8AE0);
/*800A8AD8 000A58D8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A8ADC 000A58DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f34, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800A8AE0, 0x800A8AE0) //this is a jump label
/*800A8AE0 000A58E0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A8AE4 000A58E4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A8AE8 000A58E8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A8AEC 000A58EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f38, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800A8AF0, 0x800A8AF0) //this is a jump label
/*800A8AF0 000A58F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800A8AF4 000A58F4*/ PPC::Runtime::ASM::bl(fn_8007D440);
/*800A8AF8 000A58F8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 26, 26);
/*800A8AFC 000A58FC*/ PPC::Runtime::ASM::beq(.L_800A8B40);
/*800A8B00 000A5900*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A8B04 000A5904*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A8B08 000A5908*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f38, context->r4));
/*800A8B0C 000A590C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800A8B10 000A5910*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f38, context->r4));
/*800A8B14 000A5914*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800A8B18 000A5918*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800A8B1C 000A591C*/ PPC::Runtime::ASM::beq(.L_800A8B28);
/*800A8B20 000A5920*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800A8B24 000A5924*/ PPC::Runtime::ASM::b(.L_800A8B2C);
RUNTIME_PPC_JUMP_LABEL(.L_800A8B28, 0x800A8B28) //this is a jump label
/*800A8B28 000A5928*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800A8B2C, 0x800A8B2C) //this is a jump label
/*800A8B2C 000A592C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f38, context->r4));
/*800A8B30 000A5930*/ PPC::Runtime::ASM::cmpw(context->r0, context->r3);
/*800A8B34 000A5934*/ PPC::Runtime::ASM::blt(.L_800A8B40);
/*800A8B38 000A5938*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A8B3C 000A593C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f38, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800A8B40, 0x800A8B40) //this is a jump label
/*800A8B40 000A5940*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A8B44 000A5944*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800A8B48 000A5948*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800A8B4C 000A594C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A8B50 000A5950*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800A8B54 000A5954*/ PPC::Runtime::ASM::blr();
}