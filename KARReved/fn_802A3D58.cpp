//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802A4B3C.hpp"
#include "fn_802A487C.hpp"
#include "fn_802A4724.hpp"
#include "fn_802A4524.hpp"
#include "fn_802A4414.hpp"
#include "fn_802A419C.hpp"
#include "fn_802A4038.hpp"
#include "fn_802BF298.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802A3E7C.hpp"
#include "fn_80286188.hpp"
#include "fn_80286188.hpp"
#include "fn_80285130.hpp"



void fn_802A3D58(PPC::Runtime::GCContext* context)
{
/*802A3D58 002A0B58*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A3D5C 002A0B5C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A3D60 002A0B60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A3D64 002A0B64*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A3D68 002A0B68*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A3D6C 002A0B6C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A3D70 002A0B70  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A3D74 002A0B74*/ PPC::Runtime::ASM::beq(.L_802A3E60);
/*802A3D78 002A0B78*/ PPC::Runtime::ASM::lis(context->r4, lbl_804CB174 @ Get_MemoryOffset_HighBit);
/*802A3D7C 002A0B7C*/ PPC::Runtime::ASM::addis(context->r3, context->r30, 0x1);
/*802A3D80 002A0B80*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804CB174 @ Get_MemoryOffset_LowBit);
/*802A3D84 002A0B84*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A3D88 002A0B88*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A3D8C 002A0B8C*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A3D90 002A0B90*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3D94 002A0B94*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A3D98 002A0B98*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x3884);
/*802A3D9C 002A0B9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A3DA0 002A0BA0*/ PPC::Runtime::ASM::bl(fn_802A4B3C);
/*802A3DA4 002A0BA4*/ PPC::Runtime::ASM::addis(context->r3, context->r30, 0x1);
/*802A3DA8 002A0BA8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DAC 002A0BAC*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x6bf4);
/*802A3DB0 002A0BB0*/ PPC::Runtime::ASM::bl(fn_802A487C);
/*802A3DB4 002A0BB4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7f14);
/*802A3DB8 002A0BB8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DBC 002A0BBC*/ PPC::Runtime::ASM::bl(fn_802A4724);
/*802A3DC0 002A0BC0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5be4);
/*802A3DC4 002A0BC4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DC8 002A0BC8*/ PPC::Runtime::ASM::bl(fn_802A4524);
/*802A3DCC 002A0BCC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4d04);
/*802A3DD0 002A0BD0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DD4 002A0BD4*/ PPC::Runtime::ASM::bl(fn_802A4414);
/*802A3DD8 002A0BD8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1fac);
/*802A3DDC 002A0BDC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DE0 002A0BE0*/ PPC::Runtime::ASM::bl(fn_802A419C);
/*802A3DE4 002A0BE4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9b0);
/*802A3DE8 002A0BE8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DEC 002A0BEC*/ PPC::Runtime::ASM::bl(fn_802A4038);
/*802A3DF0 002A0BF0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x800);
/*802A3DF4 002A0BF4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3DF8 002A0BF8*/ PPC::Runtime::ASM::bl(fn_802BF298);
/*802A3DFC 002A0BFC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6fc);
/*802A3E00 002A0C00*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3E04 002A0C04*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A3E08 002A0C08*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5f8);
/*802A3E0C 002A0C0C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3E10 002A0C10*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A3E14 002A0C14*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4f4);
/*802A3E18 002A0C18*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3E1C 002A0C1C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A3E20 002A0C20*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x32c);
/*802A3E24 002A0C24*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3E28 002A0C28*/ PPC::Runtime::ASM::bl(fn_802A3E7C);
/*802A3E2C 002A0C2C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x26c);
/*802A3E30 002A0C30*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3E34 002A0C34*/ PPC::Runtime::ASM::bl(fn_80286188);
/*802A3E38 002A0C38*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A3E3C 002A0C3C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A3E40 002A0C40*/ PPC::Runtime::ASM::bl(fn_80286188);
/*802A3E44 002A0C44*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A3E48 002A0C48*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A3E4C 002A0C4C*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A3E50 002A0C50*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A3E54 002A0C54*/ PPC::Runtime::ASM::ble(.L_802A3E60);
/*802A3E58 002A0C58*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A3E5C 002A0C5C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A3E60, 0x802A3E60) //this is a jump label
/*802A3E60 002A0C60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A3E64 002A0C64*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A3E68 002A0C68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A3E6C 002A0C6C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A3E70 002A0C70*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A3E74 002A0C74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A3E78 002A0C78*/ PPC::Runtime::ASM::blr();
}