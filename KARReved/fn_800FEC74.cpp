//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA1D0.hpp"
#include "fn_800EA084.hpp"
#include "fn_800EA180.hpp"



void fn_800FEC74(PPC::Runtime::GCContext* context)
{
/*800FEC74 000FBA74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FEC78 000FBA78*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FEC7C 000FBA7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FEC80 000FBA80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FEC84 000FBA84*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FEC88 000FBA88*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FEC8C 000FBA8C*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800FEC90 000FBA90*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FEC94 000FBA94*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FEC98 000FBA98*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800FEC9C 000FBA9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FECA0 000FBAA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FECA4 000FBAA4*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800FECA8 000FBAA8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FECAC 000FBAAC*/ PPC::Runtime::ASM::ble(.L_800FECF0);
RUNTIME_PPC_JUMP_LABEL(.L_800FECB0, 0x800FECB0) //this is a jump label
/*800FECB0 000FBAB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r4));
/*800FECB4 000FBAB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FECB8 000FBAB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r3));
/*800FECBC 000FBABC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800FECC0 000FBAC0*/ PPC::Runtime::ASM::bne(.L_800FECE4);
/*800FECC4 000FBAC4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*800FECC8 000FBAC8*/ PPC::Runtime::ASM::bl(fn_800EA1D0);
/*800FECCC 000FBACC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800FECD0 000FBAD0*/ PPC::Runtime::ASM::bne(.L_800FECF0);
/*800FECD4 000FBAD4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*800FECD8 000FBAD8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FECDC 000FBADC*/ PPC::Runtime::ASM::bl(fn_800EA084);
/*800FECE0 000FBAE0*/ PPC::Runtime::ASM::b(.L_800FECF0);
RUNTIME_PPC_JUMP_LABEL(.L_800FECE4, 0x800FECE4) //this is a jump label
/*800FECE4 000FBAE4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*800FECE8 000FBAE8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*800FECEC 000FBAEC*/ PPC::Runtime::ASM::bdnz(.L_800FECB0);
RUNTIME_PPC_JUMP_LABEL(.L_800FECF0, 0x800FECF0) //this is a jump label
/*800FECF0 000FBAF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FECF4 000FBAF4*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800FECF8 000FBAF8*/ PPC::Runtime::ASM::bne(.L_800FED04);
/*800FECFC 000FBAFC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*800FED00 000FBB00*/ PPC::Runtime::ASM::bl(fn_800EA180);
RUNTIME_PPC_JUMP_LABEL(.L_800FED04, 0x800FED04) //this is a jump label
/*800FED04 000FBB04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FED08 000FBB08*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FED0C 000FBB0C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FED10 000FBB10*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FED14 000FBB14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FED18 000FBB18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FED1C 000FBB1C*/ PPC::Runtime::ASM::blr();
}