//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800BAD8C(PPC::Runtime::GCContext* context)
{
/*800BAD8C 000B7B8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800BAD90 000B7B90*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BAD94 000B7B94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800BAD98 000B7B98*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800BAD9C 000B7B9C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800BADA0 000B7BA0*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800BADA4 000B7BA4*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*800BADA8 000B7BA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800BADAC 000B7BAC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800BADB0 000B7BB0*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*800BADB4 000B7BB4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800BADB8 000B7BB8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800BADBC 000B7BBC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800BADC0 000B7BC0*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetEyeVector?);
/*800BADC4 000B7BC4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800BADC8 000B7BC8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800BADCC 000B7BCC*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetEyePosition);
/*800BADD0 000B7BD0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800BADD4 000B7BD4*/ PPC::Runtime::ASM::fneg(context->f0, context->f31);
/*800BADD8 000B7BD8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800BADDC 000B7BDC*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800BADE0 000B7BE0*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BADE4 000B7BE4*/ PPC::Runtime::ASM::fsubs(context->f2, context->f2, context->f1);
/*800BADE8 000B7BE8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800BADEC 000B7BEC*/ PPC::Runtime::ASM::fsubs(context->f3, context->f4, context->f3);
/*800BADF0 000B7BF0*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800BADF4 000B7BF4*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800BADF8 000B7BF8*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f1);
/*800BADFC 000B7BFC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800BAE00 000B7C00*/ PPC::Runtime::ASM::fsubs(context->f4, context->f5, context->f4);
/*800BAE04 000B7C04*/ PPC::Runtime::ASM::fmadds(context->f1, context->f3, context->f2, context->f1);
/*800BAE08 000B7C08*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800BAE0C 000B7C0C*/ PPC::Runtime::ASM::fmadds(context->f30, context->f4, context->f2, context->f1);
/*800BAE10 000B7C10*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f0);
/*800BAE14 000B7C14*/ PPC::Runtime::ASM::bge(.L_800BAE20);
/*800BAE18 000B7C18*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF264 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BAE1C 000B7C1C*/ PPC::Runtime::ASM::b(.L_800BAE70);
RUNTIME_PPC_JUMP_LABEL(.L_800BAE20, 0x800BAE20) //this is a jump label
/*800BAE20 000B7C20*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f31);
/*800BAE24 000B7C24*/ PPC::Runtime::ASM::ble(.L_800BAE64);
/*800BAE28 000B7C28*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800BAE2C 000B7C2C*/ PPC::Runtime::ASM::bl(fn_HSD_CObjGetFov);
/*800BAE30 000B7C30*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF27C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BAE34 000B7C34*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF278 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800BAE38 000B7C38*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f1);
/*800BAE3C 000B7C3C*/ PPC::Runtime::ASM::fmuls(context->f1, context->f0, context->f1);
/*800BAE40 000B7C40*/ PPC::Runtime::ASM::bl(fn_tan);
/*800BAE44 000B7C44*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*800BAE48 000B7C48*/ PPC::Runtime::ASM::frsp(context->f3, context->f1);
/*800BAE4C 000B7C4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800BAE50 000B7C50*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f0);
/*800BAE54 000B7C54*/ PPC::Runtime::ASM::fmuls(context->f0, context->f30, context->f3);
/*800BAE58 000B7C58*/ PPC::Runtime::ASM::fmuls(context->f1, context->f31, context->f1);
/*800BAE5C 000B7C5C*/ PPC::Runtime::ASM::fdivs(context->f1, context->f1, context->f0);
/*800BAE60 000B7C60*/ PPC::Runtime::ASM::b(.L_800BAE70);
RUNTIME_PPC_JUMP_LABEL(.L_800BAE64, 0x800BAE64) //this is a jump label
/*800BAE64 000B7C64*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*800BAE68 000B7C68*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*800BAE6C 000B7C6C*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_800BAE70, 0x800BAE70) //this is a jump label
/*800BAE70 000B7C70*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*800BAE74 000B7C74*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800BAE78 000B7C78*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*800BAE7C 000B7C7C*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800BAE80 000B7C80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800BAE84 000B7C84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800BAE88 000B7C88*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800BAE8C 000B7C8C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BAE90 000B7C90*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800BAE94 000B7C94*/ PPC::Runtime::ASM::blr();
}