//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000CD40(PPC::Runtime::GCContext* context)
{
/*8000CD40 00009B40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000CD44 00009B44*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000CD48 00009B48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000CD4C 00009B4C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000CD50 00009B50*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8000CD54 00009B54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000CD58 00009B58*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*8000CD5C 00009B5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000CD60 00009B60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000CD64 00009B64*/ PPC::Runtime::ASM::blr();
}