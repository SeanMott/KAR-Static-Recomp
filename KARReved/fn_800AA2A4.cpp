//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800AA2A4(PPC::Runtime::GCContext* context)
{
/*800AA2A4 000A70A4*/ PPC::Runtime::ASM::clrlwi(context->r8, context->r6, 24);
/*800AA2A8 000A70A8*/ PPC::Runtime::ASM::lis(context->r9, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AA2AC 000A70AC*/ PPC::Runtime::ASM::neg(context->r0, context->r8);
/*800AA2B0 000A70B0*/ PPC::Runtime::ASM::li(context->r3, 0x800);
/*800AA2B4 000A70B4*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r8);
/*800AA2B8 000A70B8*/ PPC::Runtime::ASM::addi(context->r9, context->r9, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AA2BC 000A70BC*/ PPC::Runtime::ASM::srawi(context->r8, context->r0, 31);
/*800AA2C0 000A70C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f58, context->r9));
/*800AA2C4 000A70C4*/ PPC::Runtime::ASM::andc(context->r9, context->r3, context->r8);
/*800AA2C8 000A70C8*/ PPC::Runtime::ASM::ori(context->r8, context->r9, 0x200);
/*800AA2CC 000A70CC*/ PPC::Runtime::ASM::and.(context->r3, context->r5, context->r8);
/*800AA2D0 000A70D0*/ PPC::Runtime::ASM::beq(.L_800AA310);
/*800AA2D4 000A70D4*/ PPC::Runtime::ASM::and.(context->r3, context->r4, context->r8);
/*800AA2D8 000A70D8*/ PPC::Runtime::ASM::beq(.L_800AA2EC);
/*800AA2DC 000A70DC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800AA2E0 000A70E0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800AA2E4 000A70E4*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800AA2E8 000A70E8*/ PPC::Runtime::ASM::b(.L_800AA2FC);
RUNTIME_PPC_JUMP_LABEL(.L_800AA2EC, 0x800AA2EC) //this is a jump label
/*800AA2EC 000A70EC*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0xa);
/*800AA2F0 000A70F0*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800AA2F4 000A70F4*/ PPC::Runtime::ASM::add(context->r3, context->r8, context->r3);
/*800AA2F8 000A70F8*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA2FC, 0x800AA2FC) //this is a jump label
/*800AA2FC 000A70FC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*800AA300 000A7100*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xff);
/*800AA304 000A7104*/ PPC::Runtime::ASM::ble(.L_800AA310);
/*800AA308 000A7108*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AA30C 000A710C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA310, 0x800AA310) //this is a jump label
/*800AA310 000A7110*/ PPC::Runtime::ASM::ori(context->r8, context->r9, 0x100);
/*800AA314 000A7114*/ PPC::Runtime::ASM::and.(context->r3, context->r5, context->r8);
/*800AA318 000A7118*/ PPC::Runtime::ASM::beq(.L_800AA358);
/*800AA31C 000A711C*/ PPC::Runtime::ASM::and.(context->r3, context->r4, context->r8);
/*800AA320 000A7120*/ PPC::Runtime::ASM::beq(.L_800AA334);
/*800AA324 000A7124*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
/*800AA328 000A7128*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800AA32C 000A712C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
/*800AA330 000A7130*/ PPC::Runtime::ASM::b(.L_800AA344);
RUNTIME_PPC_JUMP_LABEL(.L_800AA334, 0x800AA334) //this is a jump label
/*800AA334 000A7134*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0xa);
/*800AA338 000A7138*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
/*800AA33C 000A713C*/ PPC::Runtime::ASM::add(context->r3, context->r8, context->r3);
/*800AA340 000A7140*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA344, 0x800AA344) //this is a jump label
/*800AA344 000A7144*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
/*800AA348 000A7148*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xff);
/*800AA34C 000A714C*/ PPC::Runtime::ASM::ble(.L_800AA358);
/*800AA350 000A7150*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AA354 000A7154*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA358, 0x800AA358) //this is a jump label
/*800AA358 000A7158*/ PPC::Runtime::ASM::ori(context->r8, context->r9, 0x400);
/*800AA35C 000A715C*/ PPC::Runtime::ASM::and.(context->r3, context->r5, context->r8);
/*800AA360 000A7160*/ PPC::Runtime::ASM::beq(.L_800AA3A0);
/*800AA364 000A7164*/ PPC::Runtime::ASM::and.(context->r3, context->r4, context->r8);
/*800AA368 000A7168*/ PPC::Runtime::ASM::beq(.L_800AA37C);
/*800AA36C 000A716C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
/*800AA370 000A7170*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800AA374 000A7174*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
/*800AA378 000A7178*/ PPC::Runtime::ASM::b(.L_800AA38C);
RUNTIME_PPC_JUMP_LABEL(.L_800AA37C, 0x800AA37C) //this is a jump label
/*800AA37C 000A717C*/ PPC::Runtime::ASM::mulli(context->r3, context->r0, 0xa);
/*800AA380 000A7180*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
/*800AA384 000A7184*/ PPC::Runtime::ASM::add(context->r3, context->r8, context->r3);
/*800AA388 000A7188*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA38C, 0x800AA38C) //this is a jump label
/*800AA38C 000A718C*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
/*800AA390 000A7190*/ PPC::Runtime::ASM::cmplwi(context->r3, 0xff);
/*800AA394 000A7194*/ PPC::Runtime::ASM::ble(.L_800AA3A0);
/*800AA398 000A7198*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AA39C 000A719C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA3A0, 0x800AA3A0) //this is a jump label
/* 800AA3A0 000A71A0  54 C3 06 3F */ clrlwi. context->r3 , context->r6 , 24
/*800AA3A4 000A71A4*/ PPC::Runtime::ASM::beqlr();
/*800AA3A8 000A71A8*/ PPC::Runtime::ASM::rlwinm.(context->r3, context->r5, 0, 20, 20);
/*800AA3AC 000A71AC*/ PPC::Runtime::ASM::beqlr();
/*800AA3B0 000A71B0*/ PPC::Runtime::ASM::rlwinm.(context->r3, context->r4, 0, 20, 20);
/*800AA3B4 000A71B4*/ PPC::Runtime::ASM::beq(.L_800AA3C8);
/*800AA3B8 000A71B8*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
/*800AA3BC 000A71BC*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*800AA3C0 000A71C0*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
/*800AA3C4 000A71C4*/ PPC::Runtime::ASM::b(.L_800AA3D8);
RUNTIME_PPC_JUMP_LABEL(.L_800AA3C8, 0x800AA3C8) //this is a jump label
/*800AA3C8 000A71C8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0xa);
/*800AA3CC 000A71CC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
/*800AA3D0 000A71D0*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*800AA3D4 000A71D4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
RUNTIME_PPC_JUMP_LABEL(.L_800AA3D8, 0x800AA3D8) //this is a jump label
/*800AA3D8 000A71D8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
/*800AA3DC 000A71DC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xff);
/* 800AA3E0 000A71E0  4C 81 00 20 */ blelr
/*800AA3E4 000A71E4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800AA3E8 000A71E8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r7));
/*800AA3EC 000A71EC*/ PPC::Runtime::ASM::blr();
}