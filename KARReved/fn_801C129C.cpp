//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C15E0.hpp"
#include "fn_801C15F4.hpp"
#include "fn_801C15E0.hpp"
#include "fn_801C15F4.hpp"
#include "fn_80236C40.hpp"
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801C1400.hpp"



void fn_801C129C(PPC::Runtime::GCContext* context)
{
/*801C129C 001BE09C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801C12A0 001BE0A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C12A4 001BE0A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801C12A8 001BE0A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801C12AC 001BE0AC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C12B0 001BE0B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r3));
/*801C12B4 001BE0B4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801C12B8 001BE0B8*/ PPC::Runtime::ASM::beq(.L_801C1320);
/*801C12BC 001BE0BC*/ PPC::Runtime::ASM::lis(context->r3, fn_801C15E0 @ Get_MemoryOffset_HighBit);
/*801C12C0 001BE0C0*/ PPC::Runtime::ASM::lis(context->r4, fn_801C15F4 @ Get_MemoryOffset_HighBit);
/*801C12C4 001BE0C4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801C15E0 @ Get_MemoryOffset_LowBit);
/*801C12C8 001BE0C8*/ PPC::Runtime::ASM::lis(context->r3, 0x4);
/*801C12CC 001BE0CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x800, context->r31));
/*801C12D0 001BE0D0*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801C15F4 @ Get_MemoryOffset_LowBit);
/*801C12D4 001BE0D4*/ PPC::Runtime::ASM::subi(context->r4, context->r3, 0x564f);
/*801C12D8 001BE0D8*/ PPC::Runtime::ASM::addi(context->r9, context->r1, 0x8);
/*801C12DC 001BE0DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x804, context->r31));
/*801C12E0 001BE0E0*/ PPC::Runtime::ASM::li(context->r6, 0xd6);
/*801C12E4 001BE0E4*/ PPC::Runtime::ASM::li(context->r8, 0x3);
/*801C12E8 001BE0E8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c8, context->r31));
/*801C12EC 001BE0EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x348, context->r31));
/*801C12F0 001BE0F0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*801C12F4 001BE0F4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C12F8 001BE0F8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801C12FC 001BE0FC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801C1300 001BE100*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x440, context->r31));
/*801C1304 001BE104*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r7));
/*801C1308 001BE108*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801C130C 001BE10C*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801C1310 001BE110*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44c, context->r31));
/*801C1314 001BE114*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801C1318 001BE118*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x448, context->r31));
/*801C131C 001BE11C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801C1320, 0x801C1320) //this is a jump label
/*801C1320 001BE120*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C1324 001BE124*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801C1328 001BE128*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C132C 001BE12C*/ PPC::Runtime::ASM::beq(.L_801C1338);
/*801C1330 001BE130*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C1334 001BE134*/ PPC::Runtime::ASM::bl(fn_801C1400);
RUNTIME_PPC_JUMP_LABEL(.L_801C1338, 0x801C1338) //this is a jump label
/*801C1338 001BE138*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801C133C 001BE13C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801C1340 001BE140*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C1344 001BE144*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801C1348 001BE148*/ PPC::Runtime::ASM::blr();
}