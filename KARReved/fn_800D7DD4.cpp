//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E63B0.hpp"
#include "fn_800E63D4.hpp"



void fn_800D7DD4(PPC::Runtime::GCContext* context)
{
/*800D7DD4 000D4BD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D7DD8 000D4BD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D7DDC 000D4BDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D7DE0 000D4BE0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D7DE4 000D4BE4*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800D7DE8 000D4BE8*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800D7DEC 000D4BEC*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*800D7DF0 000D4BF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800D7DF4 000D4BF4*/ PPC::Runtime::ASM::mr(context->r28, context->r5);
/*800D7DF8 000D4BF8*/ PPC::Runtime::ASM::mr(context->r29, context->r6);
/*800D7DFC 000D4BFC*/ PPC::Runtime::ASM::mr(context->r30, context->r7);
/*800D7E00 000D4C00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800D7E04 000D4C04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800D7E08 000D4C08*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D7E0C 000D4C0C*/ PPC::Runtime::ASM::beq(.L_800D7E60);
/*800D7E10 000D4C10*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800D7E14 000D4C14*/ PPC::Runtime::ASM::bne(.L_800D7E40);
/*800D7E18 000D4C18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x71c, context->r31));
/* 800D7E1C 000D4C1C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800D7E20 000D4C20*/ PPC::Runtime::ASM::beq(.L_800D7E2C);
/*800D7E24 000D4C24*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D7E28 000D4C28*/ PPC::Runtime::ASM::bl(fn_800E63B0);
RUNTIME_PPC_JUMP_LABEL(.L_800D7E2C, 0x800D7E2C) //this is a jump label
/*800D7E2C 000D4C2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D7E30 000D4C30*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800D7E34 000D4C34*/ PPC::Runtime::ASM::mr(context->r5, context->r28);
/*800D7E38 000D4C38*/ PPC::Runtime::ASM::mr(context->r6, context->r29);
/*800D7E3C 000D4C3C*/ PPC::Runtime::ASM::bl(fn_800E63D4);
RUNTIME_PPC_JUMP_LABEL(.L_800D7E40, 0x800D7E40) //this is a jump label
/*800D7E40 000D4C40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r26));
/*800D7E44 000D4C44*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D7E48 000D4C48*/ PPC::Runtime::ASM::bl(fn_LooseBallAnims_GetDesperationInfo_TakeParam_UnsignedInt);
/*800D7E4C 000D4C4C*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*800D7E50 000D4C50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800D7E54 000D4C54*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800D7E58 000D4C58*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800D7E5C 000D4C5C*/ PPC::Runtime::ASM::bl(fn_8040A7B8);
RUNTIME_PPC_JUMP_LABEL(.L_800D7E60, 0x800D7E60) //this is a jump label
/*800D7E60 000D4C60*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D7E64 000D4C64*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800D7E68 000D4C68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D7E6C 000D4C6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D7E70 000D4C70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D7E74 000D4C74*/ PPC::Runtime::ASM::blr();
}