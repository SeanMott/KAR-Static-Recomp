//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8028AC98.hpp"



void fn_8031F4C4(PPC::Runtime::GCContext* context)
{
/*8031F4C4 0031C2C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8031F4C8 0031C2C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8031F4CC 0031C2CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031F4D0 0031C2D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8031F4D4 0031C2D4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8031F4D8 0031C2D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*8031F4DC 0031C2DC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8031F4E0 0031C2E0*/ PPC::Runtime::ASM::beq(.L_8031F4EC);
/*8031F4E4 0031C2E4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x3);
/*8031F4E8 0031C2E8*/ PPC::Runtime::ASM::bne(.L_8031F518);
RUNTIME_PPC_JUMP_LABEL(.L_8031F4EC, 0x8031F4EC) //this is a jump label
/*8031F4EC 0031C2EC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8031F4F0 0031C2F0*/ PPC::Runtime::ASM::li(context->r3, 0x78);
/*8031F4F4 0031C2F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*8031F4F8 0031C2F8*/ PPC::Runtime::ASM::li(context->r4, 0x5a);
/*8031F4FC 0031C2FC*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*8031F500 0031C300*/ PPC::Runtime::ASM::bl(fn_8028AC98);
/*8031F504 0031C304*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r31));
/*8031F508 0031C308*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8031F50C 0031C30C*/ PPC::Runtime::ASM::lhz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8031F510 0031C310*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8031F514 0031C314*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_8031F518, 0x8031F518) //this is a jump label
/*8031F518 0031C318*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8031F51C 0031C31C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8031F520 0031C320*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8031F524 0031C324*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8031F528 0031C328*/ PPC::Runtime::ASM::blr();
}