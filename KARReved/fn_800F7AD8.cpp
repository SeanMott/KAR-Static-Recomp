//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_JObj_GetWorldPosition.hpp"



void fn_800F7AD8(PPC::Runtime::GCContext* context)
{
/*800F7AD8 000F48D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F7ADC 000F48DC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F7AE0 000F48E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7AE4 000F48E4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7AE8 000F48E8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800F7AEC 000F48EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7AF0 000F48F0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F7AF4 000F48F4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F7AF8 000F48F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F7AFC 000F48FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800F7B00 000F4900*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F7B04 000F4904*/ PPC::Runtime::ASM::bne(.L_800F7B20);
/*800F7B08 000F4908*/ PPC::Runtime::ASM::lis(context->r3, String_Debug_ "gryakulib." Get_MemoryOffset_HighBit);
/*800F7B0C 000F490C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_991 @ Get_MemoryOffset_HighBit);
/*800F7B10 000F4910*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_Debug_ "gryakulib." Get_MemoryOffset_LowBit);
/*800F7B14 000F4914*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*800F7B18 000F4918*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_991 @ Get_MemoryOffset_LowBit);
/*800F7B1C 000F491C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F7B20, 0x800F7B20) //this is a jump label
/*800F7B20 000F4920*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r30));
/*800F7B24 000F4924*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*800F7B28 000F4928*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F7B2C 000F492C*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*800F7B30 000F4930*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7B34 000F4934*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F7B38 000F4938*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7B3C 000F493C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7B40 000F4940*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7B44 000F4944*/ PPC::Runtime::ASM::blr();
}