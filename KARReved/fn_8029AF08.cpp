//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8029AF08(PPC::Runtime::GCContext* context)
{
/*8029AF08 00297D08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8029AF0C 00297D0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8029AF10 00297D10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AF14 00297D14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AF18 00297D18*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AF1C 00297D1C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8029AF20 00297D20*/ PPC::Runtime::ASM::bl(fn_GXInvalidateTexAll);
/*8029AF24 00297D24*/ PPC::Runtime::ASM::bl(fn_80391B1C);
/*8029AF28 00297D28*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AF2C 00297D2C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AF30 00297D30*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r12));
/*8029AF34 00297D34*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AF38 00297D38*/ PPC::Runtime::ASM::bctrl();
/*8029AF3C 00297D3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8029AF40 00297D40*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8029AF44 00297D44*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8029AF48 00297D48*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r12));
/*8029AF4C 00297D4C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8029AF50 00297D50*/ PPC::Runtime::ASM::bctrl();
/*8029AF54 00297D54*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8029AF58 00297D58*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*8029AF5C 00297D5C*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*8029AF60 00297D60*/ PPC::Runtime::ASM::bl(fn_80391C1C);
/*8029AF64 00297D64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8029AF68 00297D68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8029AF6C 00297D6C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8029AF70 00297D70*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8029AF74 00297D74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8029AF78 00297D78*/ PPC::Runtime::ASM::blr();
}