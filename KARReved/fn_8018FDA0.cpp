//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80196244.hpp"
#include "fn_8019121C.hpp"
#include "fn_8019E2A0.hpp"
#include "fn_80194740.hpp"
#include "fn_80192D94.hpp"
#include "fn_801954C8.hpp"
#include "fn_80197A6C.hpp"
#include "fn_8019C498.hpp"
#include "fn_801903DC.hpp"



void fn_8018FDA0(PPC::Runtime::GCContext* context)
{
/*8018FDA0 0018CBA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8018FDA4 0018CBA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8018FDA8 0018CBA8*/ PPC::Runtime::ASM::lis(context->r4, lbl_80559E38 @ Get_MemoryOffset_HighBit);
/*8018FDAC 0018CBAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018FDB0 0018CBB0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018FDB4 0018CBB4*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80559E38 @ Get_MemoryOffset_LowBit);
/*8018FDB8 0018CBB8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8018FDBC 0018CBBC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8018FDC0 0018CBC0*/ PPC::Runtime::ASM::bl(fn_80196244);
/*8018FDC4 0018CBC4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FDC8 0018CBC8*/ PPC::Runtime::ASM::bl(fn_8019121C);
/*8018FDCC 0018CBCC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FDD0 0018CBD0*/ PPC::Runtime::ASM::bl(fn_8019E2A0);
/*8018FDD4 0018CBD4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4f4);
/*8018FDD8 0018CBD8*/ PPC::Runtime::ASM::bl(fn_80194740);
/*8018FDDC 0018CBDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x66c, context->r30));
/*8018FDE0 0018CBE0*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8018FDE4 0018CBE4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FDE8 0018CBE8*/ PPC::Runtime::ASM::bl(fn_80192D94);
/*8018FDEC 0018CBEC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FDF0 0018CBF0*/ PPC::Runtime::ASM::bl(fn_801954C8);
/*8018FDF4 0018CBF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*8018FDF8 0018CBF8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804ADBD8 @ Get_MemoryOffset_HighBit);
/*8018FDFC 0018CBFC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804ADBD8 @ Get_MemoryOffset_LowBit);
/*8018FE00 0018CC00*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8018FE04 0018CC04*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*8018FE08 0018CC08*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*8018FE0C 0018CC0C*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*8018FE10 0018CC10*/ PPC::Runtime::ASM::beq(.L_8018FE20);
/*8018FE14 0018CC14*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FE18 0018CC18*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8018FE1C 0018CC1C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8018FE20, 0x8018FE20) //this is a jump label
/*8018FE20 0018CC20*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FE24 0018CC24*/ PPC::Runtime::ASM::bl(fn_80197A6C);
/*8018FE28 0018CC28*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FE2C 0018CC2C*/ PPC::Runtime::ASM::bl(fn_8019C498);
/*8018FE30 0018CC30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8018FE34 0018CC34*/ PPC::Runtime::ASM::bl(fn_801903DC);
/*8018FE38 0018CC38*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r30));
/*8018FE3C 0018CC3C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*8018FE40 0018CC40*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE44 0018CC44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b8, context->r30));
/*8018FE48 0018CC48*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x58);
/*8018FE4C 0018CC4C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE50 0018CC50*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r30));
/*8018FE54 0018CC54*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x84);
/*8018FE58 0018CC58*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE5C 0018CC5C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r30));
/*8018FE60 0018CC60*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x144);
/*8018FE64 0018CC64*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE68 0018CC68*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c0, context->r30));
/*8018FE6C 0018CC6C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x84);
/*8018FE70 0018CC70*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE74 0018CC74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x790, context->r30));
/*8018FE78 0018CC78*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x108);
/*8018FE7C 0018CC7C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE80 0018CC80*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8018FE84 0018CC84*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8018FE88 0018CC88*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8018FE8C 0018CC8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8018FE90 0018CC90*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8018FE94 0018CC94*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8018FE98 0018CC98*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8018FE9C 0018CC9C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8018FEA0 0018CCA0*/ PPC::Runtime::ASM::blr();
}