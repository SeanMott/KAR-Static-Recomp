//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFFB8.hpp"



void fn_803075A0(PPC::Runtime::GCContext* context)
{
/*803075A0 003043A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803075A4 003043A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803075A8 003043A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803075AC 003043AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803075B0 003043B0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*803075B4 003043B4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 803075B8 003043B8  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*803075BC 003043BC*/ PPC::Runtime::ASM::beq(.L_80307618);
/*803075C0 003043C0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804DC254 @ Get_MemoryOffset_HighBit);
/*803075C4 003043C4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804DC254 @ Get_MemoryOffset_LowBit);
/*803075C8 003043C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803075CC 003043CC*/ PPC::Runtime::ASM::beq(.L_80307608);
/*803075D0 003043D0*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D6F5C @ Get_MemoryOffset_HighBit);
/*803075D4 003043D4*/ PPC::Runtime::ASM::lis(context->r3, String_ "AC_RUN_LOO" 6 @ Get_MemoryOffset_HighBit);
/*803075D8 003043D8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804D6F5C @ Get_MemoryOffset_LowBit);
/*803075DC 003043DC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803075E0 003043E0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803075E4 003043E4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, String_ "AC_RUN_LOO" 6 @ Get_MemoryOffset_LowBit);
/*803075E8 003043E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*803075EC 003043EC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*803075F0 003043F0*/ PPC::Runtime::ASM::bl(fn_802EFFB8);
/*803075F4 003043F4*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*803075F8 003043F8*/ PPC::Runtime::ASM::beq(.L_80307608);
/*803075FC 003043FC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*80307600 00304400*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*80307604 00304404*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80307608, 0x80307608) //this is a jump label
/*80307608 00304408*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8030760C 0030440C*/ PPC::Runtime::ASM::ble(.L_80307618);
/*80307610 00304410*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80307614 00304414*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80307618, 0x80307618) //this is a jump label
/*80307618 00304418*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8030761C 0030441C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80307620 00304420*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80307624 00304424*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80307628 00304428*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8030762C 0030442C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80307630 00304430*/ PPC::Runtime::ASM::blr();
}