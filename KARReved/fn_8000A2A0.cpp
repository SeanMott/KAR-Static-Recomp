//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A2A0(PPC::Runtime::GCContext* context)
{
/*8000A2A0 000070A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A2A4 000070A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A2A8 000070A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A2AC 000070AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000A2B0 000070B0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A2B4 000070B4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A2B8 000070B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/* 8000A2BC 000070BC  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*8000A2C0 000070C0*/ PPC::Runtime::ASM::beq(.L_8000A2E4);
/*8000A2C4 000070C4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_126 @ Get_MemoryOffset_HighBit);
/*8000A2C8 000070C8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_126 @ Get_MemoryOffset_LowBit);
/*8000A2CC 000070CC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8000A2D0 000070D0*/ PPC::Runtime::ASM::bl(OSReport);
/*8000A2D4 000070D4*/ PPC::Runtime::ASM::li(context->r3, String_ "gmlib." Get_MemoryOffset_SDA21);
/*8000A2D8 000070D8*/ PPC::Runtime::ASM::li(context->r4, 0x421);
/*8000A2DC 000070DC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D5120 @ Get_MemoryOffset_SDA21);
/*8000A2E0 000070E0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8000A2E4, 0x8000A2E4) //this is a jump label
/*8000A2E4 000070E4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r31));
/*8000A2E8 000070E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000A2EC 000070EC*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 26);
/*8000A2F0 000070F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A2F4 000070F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A2F8 000070F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A2FC 000070FC*/ PPC::Runtime::ASM::blr();
}