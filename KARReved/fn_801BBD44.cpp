//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_AS_Wait2?.hpp"



void fn_801BBD44(PPC::Runtime::GCContext* context)
{
/*801BBD44 001B8B44*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BBD48 001B8B48*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BBD4C 001B8B4C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E17B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801BBD50 001B8B50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BBD54 001B8B54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BBD58 001B8B58*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BBD5C 001B8B5C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x298, context->r3));
/*801BBD60 001B8B60*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801BBD64 001B8B64*/ PPC::Runtime::ASM::ble(.L_801BBD70);
/*801BBD68 001B8B68*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801BBD6C 001B8B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801BBD70, 0x801BBD70) //this is a jump label
/*801BBD70 001B8B70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBD74 001B8B74*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801BBD78 001B8B78*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BBD7C 001B8B7C*/ PPC::Runtime::ASM::beq(.L_801BBDA0);
/*801BBD80 001B8B80*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2dc);
/*801BBD84 001B8B84*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801BBD88 001B8B88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801BBD8C 001B8B8C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r3));
/*801BBD90 001B8B90*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801BBD94 001B8B94*/ PPC::Runtime::ASM::bge(.L_801BBDA0);
/*801BBD98 001B8B98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBD9C 001B8B9C*/ PPC::Runtime::ASM::bl(fn_AS_Wait2?);
RUNTIME_PPC_JUMP_LABEL(.L_801BBDA0, 0x801BBDA0) //this is a jump label
/*801BBDA0 001B8BA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BBDA4 001B8BA4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BBDA8 001B8BA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BBDAC 001B8BAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BBDB0 001B8BB0*/ PPC::Runtime::ASM::blr();
}