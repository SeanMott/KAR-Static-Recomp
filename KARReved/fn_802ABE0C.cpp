//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_802ABFB4.hpp"
#include "fn_80285F98.hpp"
#include "fn_803792B8.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80284C8C.hpp"
#include "fn_80285130.hpp"



void fn_802ABE0C(PPC::Runtime::GCContext* context)
{
/*802ABE0C 002A8C0C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802ABE10 002A8C10*/ PPC::Runtime::ASM::mflr(context->r0);
/*802ABE14 002A8C14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802ABE18 002A8C18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802ABE1C 002A8C1C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802ABE20 002A8C20*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802ABE24 002A8C24  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802ABE28 002A8C28*/ PPC::Runtime::ASM::beq(.L_802ABF98);
/*802ABE2C 002A8C2C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804CAEC8 @ Get_MemoryOffset_HighBit);
/*802ABE30 002A8C30*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x609c);
/*802ABE34 002A8C34*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804CAEC8 @ Get_MemoryOffset_LowBit);
/*802ABE38 002A8C38*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE3C 002A8C3C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802ABE40 002A8C40*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802ABE44 002A8C44*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802ABE48 002A8C48*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802ABE4C 002A8C4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802ABE50 002A8C50*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE54 002A8C54*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5f98);
/*802ABE58 002A8C58*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE5C 002A8C5C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE60 002A8C60*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5e94);
/*802ABE64 002A8C64*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE68 002A8C68*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE6C 002A8C6C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5d90);
/*802ABE70 002A8C70*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE74 002A8C74*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE78 002A8C78*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5c8c);
/*802ABE7C 002A8C7C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE80 002A8C80*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE84 002A8C84*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5b88);
/*802ABE88 002A8C88*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE8C 002A8C8C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE90 002A8C90*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5a84);
/*802ABE94 002A8C94*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABE98 002A8C98*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABE9C 002A8C9C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5980);
/*802ABEA0 002A8CA0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEA4 002A8CA4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABEA8 002A8CA8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x587c);
/*802ABEAC 002A8CAC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEB0 002A8CB0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802ABEB4 002A8CB4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4ca8);
/*802ABEB8 002A8CB8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEBC 002A8CBC*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABEC0 002A8CC0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x40d4);
/*802ABEC4 002A8CC4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEC8 002A8CC8*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABECC 002A8CCC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3500);
/*802ABED0 002A8CD0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABED4 002A8CD4*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABED8 002A8CD8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x292c);
/*802ABEDC 002A8CDC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEE0 002A8CE0*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABEE4 002A8CE4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1d58);
/*802ABEE8 002A8CE8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEEC 002A8CEC*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABEF0 002A8CF0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1184);
/*802ABEF4 002A8CF4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABEF8 002A8CF8*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABEFC 002A8CFC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5b0);
/*802ABF00 002A8D00*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABF04 002A8D04*/ PPC::Runtime::ASM::bl(fn_802ABFB4);
/*802ABF08 002A8D08*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x518);
/*802ABF0C 002A8D0C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABF10 002A8D10*/ PPC::Runtime::ASM::bl(fn_80285F98);
/*802ABF14 002A8D14*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4dc);
/*802ABF18 002A8D18*/ PPC::Runtime::ASM::beq(.L_802ABF64);
/*802ABF1C 002A8D1C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BE104 @ Get_MemoryOffset_HighBit);
/*802ABF20 002A8D20*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BE104 @ Get_MemoryOffset_LowBit);
/*802ABF24 002A8D24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4dc, context->r30));
/*802ABF28 002A8D28*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ec, context->r30));
/*802ABF2C 002A8D2C*/ PPC::Runtime::ASM::cmpwi(context->r4, -0x1);
/*802ABF30 002A8D30*/ PPC::Runtime::ASM::beq(.L_802ABF3C);
/*802ABF34 002A8D34*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDC70 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802ABF38 002A8D38*/ PPC::Runtime::ASM::bl(fn_803792B8);
RUNTIME_PPC_JUMP_LABEL(.L_802ABF3C, 0x802ABF3C) //this is a jump label
/*802ABF3C 002A8D3C*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x4dc);
/*802ABF40 002A8D40*/ PPC::Runtime::ASM::beq(.L_802ABF64);
/*802ABF44 002A8D44*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BE0C4 @ Get_MemoryOffset_HighBit);
/*802ABF48 002A8D48*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4dc);
/*802ABF4C 002A8D4C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BE0C4 @ Get_MemoryOffset_LowBit);
/*802ABF50 002A8D50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4dc, context->r30));
/*802ABF54 002A8D54*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4dc, context->r30));
/*802ABF58 002A8D58*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r12));
/*802ABF5C 002A8D5C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*802ABF60 002A8D60*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_802ABF64, 0x802ABF64) //this is a jump label
/*802ABF64 002A8D64*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x344);
/*802ABF68 002A8D68*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABF6C 002A8D6C*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*802ABF70 002A8D70*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802ABF74 002A8D74*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802ABF78 002A8D78*/ PPC::Runtime::ASM::bl(fn_80284C8C);
/*802ABF7C 002A8D7C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802ABF80 002A8D80*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802ABF84 002A8D84*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802ABF88 002A8D88*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802ABF8C 002A8D8C*/ PPC::Runtime::ASM::ble(.L_802ABF98);
/*802ABF90 002A8D90*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802ABF94 002A8D94*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802ABF98, 0x802ABF98) //this is a jump label
/*802ABF98 002A8D98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802ABF9C 002A8D9C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802ABFA0 002A8DA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802ABFA4 002A8DA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802ABFA8 002A8DA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802ABFAC 002A8DAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802ABFB0 002A8DB0*/ PPC::Runtime::ASM::blr();
}