//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801A2D80.hpp"
#include "fn_80190760.hpp"
#include "fn_8019A588.hpp"
#include "fn_80064C18.hpp"
#include "fn_801A2FE8.hpp"
#include "fn_801A2E7C.hpp"
#include "fn_80191758.hpp"
#include "fn_801A2CEC.hpp"
#include "fn_JObj_GetWorldPosition.hpp"
#include "fn_80236C40.hpp"
#include "fn_801B9664.hpp"
#include "fn_80195588.hpp"



void fn_AS_DeadHitGround(PPC::Runtime::GCContext* context)
{
/*801A5250 001A2050*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*801A5254 001A2054*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A5258 001A2058*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E12F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A525C 001A205C*/ PPC::Runtime::ASM::li(context->r4, 0x15);
/*801A5260 001A2060*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801A5264 001A2064*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801A5268 001A2068*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801A526C 001A206C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1300 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A5270 001A2070*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801A5274 001A2074*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A5278 001A2078*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801A527C 001A207C*/ PPC::Runtime::ASM::li(context->r6, 0x4);
/*801A5280 001A2080*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x808, context->r3));
/*801A5284 001A2084*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801A5288 001A2088*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A528C 001A208C*/ PPC::Runtime::ASM::bl(fn_801A2D80);
/*801A5290 001A2090*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A5294 001A2094*/ PPC::Runtime::ASM::bl(fn_80190760);
/*801A5298 001A2098*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A529C 001A209C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A52A0 001A20A0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*801A52A4 001A20A4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5d4, context->r31));
/*801A52A8 001A20A8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r31));
/*801A52AC 001A20AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r31));
/*801A52B0 001A20B0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801A52B4 001A20B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801A52B8 001A20B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r31));
/*801A52BC 001A20BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A52C0 001A20C0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801A52C4 001A20C4*/ PPC::Runtime::ASM::bl(fn_8019A588);
/*801A52C8 001A20C8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*801A52CC 001A20CC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x2c);
/*801A52D0 001A20D0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x2dc);
/*801A52D4 001A20D4*/ PPC::Runtime::ASM::bl(fn_80064C18);
/*801A52D8 001A20D8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*801A52DC 001A20DC*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801A52E0 001A20E0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A52E4 001A20E4*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*801A52E8 001A20E8*/ PPC::Runtime::ASM::beq(.L_801A5314);
/*801A52EC 001A20EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801A52F0 001A20F0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E12FC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A52F4 001A20F4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801A52F8 001A20F8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r31));
/*801A52FC 001A20FC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801A5300 001A2100*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801A5304 001A2104*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e0, context->r31));
/*801A5308 001A2108*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801A530C 001A210C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*801A5310 001A2110*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801A5314, 0x801A5314) //this is a jump label
/*801A5314 001A2114*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A5318 001A2118*/ PPC::Runtime::ASM::bl(fn_801A2FE8);
/*801A531C 001A211C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r31));
/*801A5320 001A2120*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A5324 001A2124*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801A5328 001A2128*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A532C 001A212C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x822, context->r31));
/*801A5330 001A2130*/ PPC::Runtime::ASM::bl(fn_801A2E7C);
/*801A5334 001A2134*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E12F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A5338 001A2138*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A533C 001A213C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A5340 001A2140*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801A5344 001A2144*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A5348 001A2148*/ PPC::Runtime::ASM::bl(fn_80191758);
/*801A534C 001A214C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A5350 001A2150*/ PPC::Runtime::ASM::beq(.L_801A53B0);
/*801A5354 001A2154*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A5358 001A2158*/ PPC::Runtime::ASM::bl(fn_801A2CEC);
/*801A535C 001A215C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A5360 001A2160*/ PPC::Runtime::ASM::beq(.L_801A53B0);
/*801A5364 001A2164*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801A5368 001A2168*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*801A536C 001A216C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A5370 001A2170*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r3));
/*801A5374 001A2174*/ PPC::Runtime::ASM::bl(fn_JObj_GetWorldPosition);
/*801A5378 001A2178*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801A537C 001A217C*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x8);
/*801A5380 001A2180*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43c, context->r31));
/*801A5384 001A2184*/ PPC::Runtime::ASM::li(context->r4, 0x4e96);
/*801A5388 001A2188*/ PPC::Runtime::ASM::li(context->r6, 0x64);
/*801A538C 001A218C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801A5390 001A2190*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801A5394 001A2194*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A5398 001A2198*/ PPC::Runtime::ASM::bl(fn_801B9664);
/*801A539C 001A219C*/ PPC::Runtime::ASM::lis(context->r4, 0x2);
/*801A53A0 001A21A0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1300 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A53A4 001A21A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A53A8 001A21A8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x3c);
/*801A53AC 001A21AC*/ PPC::Runtime::ASM::bl(fn_80195588);
RUNTIME_PPC_JUMP_LABEL(.L_801A53B0, 0x801A53B0) //this is a jump label
/*801A53B0 001A21B0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A53B4 001A21B4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A53B8 001A21B8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 0, 31, 31);
/*801A53BC 001A21BC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x823, context->r31));
/*801A53C0 001A21C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801A53C4 001A21C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801A53C8 001A21C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A53CC 001A21CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*801A53D0 001A21D0*/ PPC::Runtime::ASM::blr();
}