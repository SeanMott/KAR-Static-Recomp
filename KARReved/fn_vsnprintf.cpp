//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___StringWrite.hpp"
#include "fn___StringWrite.hpp"
#include "__pformatter.hpp"



void fn_vsnprintf(PPC::Runtime::GCContext* context)
{
/*803B4C74 003B1A74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803B4C78 003B1A78*/ PPC::Runtime::ASM::mflr(context->r0);
/*803B4C7C 003B1A7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B4C80 003B1A80*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803B4C84 003B1A84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B4C88 003B1A88*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*803B4C8C 003B1A8C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*803B4C90 003B1A90*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B4C94 003B1A94*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803B4C98 003B1A98*/ PPC::Runtime::ASM::lis(context->r3, fn___StringWrite @ Get_MemoryOffset_HighBit);
/*803B4C9C 003B1A9C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803B4CA0 003B1AA0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, fn___StringWrite @ Get_MemoryOffset_LowBit);
/*803B4CA4 003B1AA4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803B4CA8 003B1AA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803B4CAC 003B1AAC*/ PPC::Runtime::ASM::bl(__pformatter);
/*803B4CB0 003B1AB0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*803B4CB4 003B1AB4*/ PPC::Runtime::ASM::beq(.L_803B4CD0);
/*803B4CB8 003B1AB8*/ PPC::Runtime::ASM::cmplw(context->r3, context->r31);
/*803B4CBC 003B1ABC*/ PPC::Runtime::ASM::subi(context->r4, context->r31, 0x1);
/*803B4CC0 003B1AC0*/ PPC::Runtime::ASM::bge(.L_803B4CC8);
/*803B4CC4 003B1AC4*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_803B4CC8, 0x803B4CC8) //this is a jump label
/*803B4CC8 003B1AC8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803B4CCC 003B1ACC*/ PPC::Runtime::ASM::stbx(context->r0, context->r30, context->r4);
RUNTIME_PPC_JUMP_LABEL(.L_803B4CD0, 0x803B4CD0) //this is a jump label
/*803B4CD0 003B1AD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803B4CD4 003B1AD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803B4CD8 003B1AD8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803B4CDC 003B1ADC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803B4CE0 003B1AE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803B4CE4 003B1AE4*/ PPC::Runtime::ASM::blr();
}