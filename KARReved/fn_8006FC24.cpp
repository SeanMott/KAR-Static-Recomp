//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80071024.hpp"



void fn_8006FC24(PPC::Runtime::GCContext* context)
{
/*8006FC24 0006CA24*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8006FC28 0006CA28*/ PPC::Runtime::ASM::mflr(context->r0);
/*8006FC2C 0006CA2C*/ PPC::Runtime::ASM::mr(context->r6, context->r3);
/*8006FC30 0006CA30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8006FC34 0006CA34*/ PPC::Runtime::ASM::mulli(context->r0, context->r5, 0xc);
/*8006FC38 0006CA38*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8006FC3C 0006CA3C*/ PPC::Runtime::ASM::add(context->r5, context->r4, context->r0);
/*8006FC40 0006CA40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8006FC44 0006CA44*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8006FC48 0006CA48*/ PPC::Runtime::ASM::bne(.L_8006FC54);
/*8006FC4C 0006CA4C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8006FC50 0006CA50*/ PPC::Runtime::ASM::b(.L_8006FC60);
RUNTIME_PPC_JUMP_LABEL(.L_8006FC54, 0x8006FC54) //this is a jump label
/*8006FC54 0006CA54*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8006FC58 0006CA58*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*8006FC5C 0006CA5C*/ PPC::Runtime::ASM::bl(fn_80071024);
RUNTIME_PPC_JUMP_LABEL(.L_8006FC60, 0x8006FC60) //this is a jump label
/*8006FC60 0006CA60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8006FC64 0006CA64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8006FC68 0006CA68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8006FC6C 0006CA6C*/ PPC::Runtime::ASM::blr();
}