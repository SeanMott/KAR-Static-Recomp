//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_cbForCancelSync3.hpp"



void fn_SendCallback(PPC::Runtime::GCContext* context)
{
/*8046F760 0046C560*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046F764 0046C564*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*8046F768 0046C568*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046F76C 0046C56C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*8046F770 0046C570*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8046F774 0046C574*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*8046F778 0046C578*/ PPC::Runtime::ASM::bge(.L_8046F780);
/*8046F77C 0046C57C*/ PPC::Runtime::ASM::b(.L_8046F784);
RUNTIME_PPC_JUMP_LABEL(.L_8046F780, 0x8046F780) //this is a jump label
/*8046F780 0046C580*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8046F784, 0x8046F784) //this is a jump label
/*8046F784 0046C584*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8046F788 0046C588*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8046F78C 0046C58C*/ PPC::Runtime::ASM::beq(.L_8046F79C);
/*8046F790 0046C590*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8046F794 0046C594*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046F798 0046C598*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8046F79C, 0x8046F79C) //this is a jump label
/*8046F79C 0046C59C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r31));
/*8046F7A0 0046C5A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8046F7A4 0046C5A4*/ PPC::Runtime::ASM::beq(.L_8046F7B4);
/*8046F7A8 0046C5A8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046F7AC 0046C5AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r31));
/*8046F7B0 0046C5B0*/ PPC::Runtime::ASM::b(.L_8046F7CC);
RUNTIME_PPC_JUMP_LABEL(.L_8046F7B4, 0x8046F7B4) //this is a jump label
/*8046F7B4 0046C5B4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8046F7B8 0046C5B8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8046F7BC 0046C5BC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8046F7C0 0046C5C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8046F7C4 0046C5C4*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 8046F7C8 0046C5C8  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_8046F7CC, 0x8046F7CC) //this is a jump label
/*8046F7CC 0046C5CC*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8046F7D0 0046C5D0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8046F7D4 0046C5D4*/ PPC::Runtime::ASM::ble(.L_8046F7E8);
/*8046F7D8 0046C5D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r31));
/*8046F7DC 0046C5DC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8046F7E0 0046C5E0*/ PPC::Runtime::ASM::bne(.L_8046F7E8);
/*8046F7E4 0046C5E4*/ PPC::Runtime::ASM::bl(fn_cbForCancelSync3);
RUNTIME_PPC_JUMP_LABEL(.L_8046F7E8, 0x8046F7E8) //this is a jump label
/*8046F7E8 0046C5E8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046F7EC 0046C5EC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8046F7F0 0046C5F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*8046F7F4 0046C5F4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046F7F8 0046C5F8*/ PPC::Runtime::ASM::blr();
}