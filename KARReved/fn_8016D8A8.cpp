//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138B10.hpp"



void fn_8016D8A8(PPC::Runtime::GCContext* context)
{
/*8016D8A8 0016A6A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8016D8AC 0016A6AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016D8B0 0016A6B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016D8B4 0016A6B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8016D8B8 0016A6B8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8016D8BC 0016A6BC*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8016D8C0 0016A6C0*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8016D8C4 0016A6C4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0xb40);
/*8016D8C8 0016A6C8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8016D8CC 0016A6CC*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r0);
/*8016D8D0 0016A6D0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8016D8D4 0016A6D4*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*8016D8D8 0016A6D8*/ PPC::Runtime::ASM::beq(.L_8016D904);
/*8016D8DC 0016A6DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r5));
/*8016D8E0 0016A6E0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8016D8E4 0016A6E4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd, context->r3));
/*8016D8E8 0016A6E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r5));
/*8016D8EC 0016A6EC*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8016D8F0 0016A6F0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8016D8F4 0016A6F4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0B40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8016D8F8 0016A6F8*/ PPC::Runtime::ASM::slwi(context->r4, context->r0, 1);
/*8016D8FC 0016A6FC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E0B44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8016D900 0016A700*/ PPC::Runtime::ASM::bl(fn_80138B10);
RUNTIME_PPC_JUMP_LABEL(.L_8016D904, 0x8016D904) //this is a jump label
/*8016D904 0016A704*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8016D908 0016A708*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8016D90C 0016A70C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016D910 0016A710*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8016D914 0016A714*/ PPC::Runtime::ASM::blr();
}