//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFFB8.hpp"



void fn_80304DD0(PPC::Runtime::GCContext* context)
{
/*80304DD0 00301BD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80304DD4 00301BD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80304DD8 00301BD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80304DDC 00301BDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80304DE0 00301BE0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80304DE4 00301BE4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80304DE8 00301BE8  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80304DEC 00301BEC*/ PPC::Runtime::ASM::beq(.L_80304E48);
/*80304DF0 00301BF0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804DB7B8 @ Get_MemoryOffset_HighBit);
/*80304DF4 00301BF4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804DB7B8 @ Get_MemoryOffset_LowBit);
/*80304DF8 00301BF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80304DFC 00301BFC*/ PPC::Runtime::ASM::beq(.L_80304E38);
/*80304E00 00301C00*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D6F5C @ Get_MemoryOffset_HighBit);
/*80304E04 00301C04*/ PPC::Runtime::ASM::lis(context->r3, String_ "AC_RUN_LOO" 4 @ Get_MemoryOffset_HighBit);
/*80304E08 00301C08*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804D6F5C @ Get_MemoryOffset_LowBit);
/*80304E0C 00301C0C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80304E10 00301C10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80304E14 00301C14*/ PPC::Runtime::ASM::addi(context->r4, context->r3, String_ "AC_RUN_LOO" 4 @ Get_MemoryOffset_LowBit);
/*80304E18 00301C18*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80304E1C 00301C1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*80304E20 00301C20*/ PPC::Runtime::ASM::bl(fn_802EFFB8);
/*80304E24 00301C24*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80304E28 00301C28*/ PPC::Runtime::ASM::beq(.L_80304E38);
/*80304E2C 00301C2C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*80304E30 00301C30*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*80304E34 00301C34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80304E38, 0x80304E38) //this is a jump label
/*80304E38 00301C38*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80304E3C 00301C3C*/ PPC::Runtime::ASM::ble(.L_80304E48);
/*80304E40 00301C40*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80304E44 00301C44*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80304E48, 0x80304E48) //this is a jump label
/*80304E48 00301C48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80304E4C 00301C4C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80304E50 00301C50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80304E54 00301C54*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80304E58 00301C58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80304E5C 00301C5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80304E60 00301C60*/ PPC::Runtime::ASM::blr();
}