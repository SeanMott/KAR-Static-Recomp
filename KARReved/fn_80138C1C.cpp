//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80055ACC.hpp"
#include "fn_800550BC.hpp"



void fn_80138C1C(PPC::Runtime::GCContext* context)
{
/*80138C1C 00135A1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80138C20 00135A20*/ PPC::Runtime::ASM::mflr(context->r0);
/*80138C24 00135A24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80138C28 00135A28*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80138C2C 00135A2C*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80138C30 00135A30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80138C34 00135A34*/ PPC::Runtime::ASM::xoris(context->r4, context->r4, 0x8000);
/*80138C38 00135A38*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*80138C3C 00135A3C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80138C40 00135A40*/ PPC::Runtime::ASM::fmr(context->f31, context->f1);
/*80138C44 00135A44*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E0170 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80138C48 00135A48*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80138C4C 00135A4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80138C50 00135A50*/ PPC::Runtime::ASM::lfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80138C54 00135A54*/ PPC::Runtime::ASM::fsubs(context->f1, context->f0, context->f1);
/*80138C58 00135A58*/ PPC::Runtime::ASM::bl(fn_80055ACC);
/*80138C5C 00135A5C*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80138C60 00135A60*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80138C64 00135A64*/ PPC::Runtime::ASM::li(context->r4, 0x400);
/*80138C68 00135A68*/ PPC::Runtime::ASM::bl(fn_800550BC);
/*80138C6C 00135A6C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80138C70 00135A70*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80138C74 00135A74*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80138C78 00135A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80138C7C 00135A7C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80138C80 00135A80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80138C84 00135A84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80138C88 00135A88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80138C8C 00135A8C*/ PPC::Runtime::ASM::blr();
}