//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E096C.hpp"
#include "fn_8019203C.hpp"
#include "fn_8022D024.hpp"
#include "fn_8022D03C.hpp"
#include "fn_801D6668.hpp"
#include "fn_GetTopGroundSpeedAndModifyIt.hpp"



void fn_801CAD40(PPC::Runtime::GCContext* context)
{
/*801CAD40 001C7B40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801CAD44 001C7B44*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CAD48 001C7B48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CAD4C 001C7B4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CAD50 001C7B50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CAD54 001C7B54*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801CAD58 001C7B58*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CAD5C 001C7B5C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801CAD60 001C7B60*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x94c);
/*801CAD64 001C7B64*/ PPC::Runtime::ASM::bl(fn_801E096C);
/*801CAD68 001C7B68*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*801CAD6C 001C7B6C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801CAD70 001C7B70*/ PPC::Runtime::ASM::beq(.L_801CAD80);
/*801CAD74 001C7B74*/ PPC::Runtime::ASM::bl(fn_8019203C);
/*801CAD78 001C7B78*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801CAD7C 001C7B7C*/ PPC::Runtime::ASM::b(.L_801CAD84);
RUNTIME_PPC_JUMP_LABEL(.L_801CAD80, 0x801CAD80) //this is a jump label
/*801CAD80 001C7B80*/ PPC::Runtime::ASM::li(context->r31, 0x5);
RUNTIME_PPC_JUMP_LABEL(.L_801CAD84, 0x801CAD84) //this is a jump label
/*801CAD84 001C7B84*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*801CAD88 001C7B88*/ PPC::Runtime::ASM::beq(.L_801CADA4);
/*801CAD8C 001C7B8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801CAD90 001C7B90*/ PPC::Runtime::ASM::bl(fn_8022D024);
/*801CAD94 001C7B94*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*801CAD98 001C7B98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801CAD9C 001C7B9C*/ PPC::Runtime::ASM::add(context->r4, context->r30, context->r0);
/*801CADA0 001C7BA0*/ PPC::Runtime::ASM::bl(fn_8022D03C);
RUNTIME_PPC_JUMP_LABEL(.L_801CADA4, 0x801CADA4) //this is a jump label
/*801CADA4 001C7BA4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801CADA8 001C7BA8*/ PPC::Runtime::ASM::bl(fn_801D6668);
/*801CADAC 001C7BAC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3b, context->r29));
/* 801CADB0 001C7BB0  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801CADB4 001C7BB4*/ PPC::Runtime::ASM::bne(.L_801CADC0);
/*801CADB8 001C7BB8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801CADBC 001C7BBC*/ PPC::Runtime::ASM::bl(fn_GetTopGroundSpeedAndModifyIt);
RUNTIME_PPC_JUMP_LABEL(.L_801CADC0, 0x801CADC0) //this is a jump label
/*801CADC0 001C7BC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CADC4 001C7BC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CADC8 001C7BC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CADCC 001C7BCC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CADD0 001C7BD0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CADD4 001C7BD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801CADD8 001C7BD8*/ PPC::Runtime::ASM::blr();
}