//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801AFC10.hpp"
#include "fn_801AFC10.hpp"
#include "fn_801A889C.hpp"



void fn_801B05BC(PPC::Runtime::GCContext* context)
{
/*801B05BC 001AD3BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B05C0 001AD3C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B05C4 001AD3C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E14B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B05C8 001AD3C8*/ PPC::Runtime::ASM::li(context->r4, 0x57);
/*801B05CC 001AD3CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B05D0 001AD3D0*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B05D4 001AD3D4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B05D8 001AD3D8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E14BC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B05DC 001AD3DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B05E0 001AD3E0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B05E4 001AD3E4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B05E8 001AD3E8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B05EC 001AD3EC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B05F0 001AD3F0*/ PPC::Runtime::ASM::lis(context->r3, fn_801AFC10 @ Get_MemoryOffset_HighBit);
/*801B05F4 001AD3F4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801B05F8 001AD3F8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801AFC10 @ Get_MemoryOffset_LowBit);
/*801B05FC 001AD3FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B0600 001AD400*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B0604 001AD404*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r5, 7, 24, 24);
/*801B0608 001AD408*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B060C 001AD40C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x938, context->r31));
/*801B0610 001AD410*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801B0614 001AD414*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1d0);
/*801B0618 001AD418*/ PPC::Runtime::ASM::bl(fn_801A889C);
/*801B061C 001AD41C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B0620 001AD420*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44c, context->r31));
/*801B0624 001AD424*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x448, context->r31));
/*801B0628 001AD428*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B062C 001AD42C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B0630 001AD430*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B0634 001AD434*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B0638 001AD438*/ PPC::Runtime::ASM::blr();
}