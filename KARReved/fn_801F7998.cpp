//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801F5FD8.hpp"
#include "fn_ColourBlendScreenTransition_Update_TakeParam_Float.hpp"
#include "fn_801F6004.hpp"
#include "fn_ColourBlendScreenTransition_Update_TakeParam_Float.hpp"



void fn_801F7998(PPC::Runtime::GCContext* context)
{
/*801F7998 001F4798*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801F799C 001F479C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F79A0 001F47A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F79A4 001F47A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F79A8 001F47A8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801F79AC 001F47AC*/ PPC::Runtime::ASM::bl(fn_801F5FD8);
/*801F79B0 001F47B0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E20B0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F79B4 001F47B4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801F79B8 001F47B8*/ PPC::Runtime::ASM::ble(.L_801F79F0);
/*801F79BC 001F47BC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801F79C0 001F47C0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F79C4 001F47C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E20C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F79C8 001F47C8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*801F79CC 001F47CC*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E20B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F79D0 001F47D0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*801F79D4 001F47D4*/ PPC::Runtime::ASM::lfd(context->f1, STRUCT_DOUBLE_COUNT_1805E20D8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F79D8 001F47D8*/ PPC::Runtime::ASM::fmul(context->f0, context->f2, context->f0);
/*801F79DC 001F47DC*/ PPC::Runtime::ASM::frsp(context->f0, context->f0);
/*801F79E0 001F47E0*/ PPC::Runtime::ASM::fdiv(context->f1, context->f1, context->f0);
/*801F79E4 001F47E4*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
/*801F79E8 001F47E8*/ PPC::Runtime::ASM::bl(fn_ColourBlendScreenTransition_Update_TakeParam_Float);
/*801F79EC 001F47EC*/ PPC::Runtime::ASM::b(.L_801F7A34);
RUNTIME_PPC_JUMP_LABEL(.L_801F79F0, 0x801F79F0) //this is a jump label
/*801F79F0 001F47F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F79F4 001F47F4*/ PPC::Runtime::ASM::bl(fn_801F6004);
/*801F79F8 001F47F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801F79FC 001F47FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801F7A00 001F4800*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E20C0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7A04 001F4804*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*801F7A08 001F4808*/ PPC::Runtime::ASM::lfd(context->f3, STRUCT_DOUBLE_COUNT_1805E20B8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F7A0C 001F480C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f0);
/*801F7A10 001F4810*/ PPC::Runtime::ASM::fmul(context->f0, context->f3, context->f0);
/*801F7A14 001F4814*/ PPC::Runtime::ASM::frsp(context->f0, context->f0);
/*801F7A18 001F4818*/ PPC::Runtime::ASM::fdivs(context->f1, context->f1, context->f0);
/*801F7A1C 001F481C*/ PPC::Runtime::ASM::bl(fn_ColourBlendScreenTransition_Update_TakeParam_Float);
/*801F7A20 001F4820*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc44, context->r31));
/*801F7A24 001F4824*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc40, context->r31));
/*801F7A28 001F4828*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f1);
/*801F7A2C 001F482C*/ PPC::Runtime::ASM::ble(.L_801F7A34);
/*801F7A30 001F4830*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc44, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801F7A34, 0x801F7A34) //this is a jump label
/*801F7A34 001F4834*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F7A38 001F4838*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801F7A3C 001F483C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F7A40 001F4840*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801F7A44 001F4844*/ PPC::Runtime::ASM::blr();
}