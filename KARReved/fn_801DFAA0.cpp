//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E02E8.hpp"
#include "fn_801C7D18.hpp"
#include "fn_801C82E0.hpp"
#include "fn_801C7F34.hpp"
#include "fn_801C7DE4.hpp"
#include "fn_801C7DF4.hpp"
#include "fn_801E02E8.hpp"
#include "fn_801E1714.hpp"



void fn_801DFAA0(PPC::Runtime::GCContext* context)
{
/*801DFAA0 001DC8A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801DFAA4 001DC8A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DFAA8 001DC8A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DFAAC 001DC8AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DFAB0 001DC8B0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DFAB4 001DC8B4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DFAB8 001DC8B8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DFABC 001DC8BC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD860 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DFAC0 001DC8C0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801DFAC4 001DC8C4*/ PPC::Runtime::ASM::beq(.L_801DFB94);
/*801DFAC8 001DC8C8*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*801DFACC 001DC8CC*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*801DFAD0 001DC8D0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801DFAD4, 0x801DFAD4) //this is a jump label
/*801DFAD4 001DC8D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801DFAD8 001DC8D8*/ PPC::Runtime::ASM::bl(fn_801E02E8);
/* 801DFADC 001DC8DC  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*801DFAE0 001DC8E0*/ PPC::Runtime::ASM::beq(.L_801DFB40);
/*801DFAE4 001DC8E4*/ PPC::Runtime::ASM::bl(fn_801C7D18);
/*801DFAE8 001DC8E8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801DFAEC 001DC8EC*/ PPC::Runtime::ASM::bne(.L_801DFB40);
/*801DFAF0 001DC8F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801DFAF4 001DC8F4*/ PPC::Runtime::ASM::bl(fn_801C82E0);
/*801DFAF8 001DC8F8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801DFAFC 001DC8FC*/ PPC::Runtime::ASM::bne(.L_801DFB40);
/*801DFB00 001DC900*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801DFB04 001DC904*/ PPC::Runtime::ASM::bl(fn_801C7F34);
/*801DFB08 001DC908*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DFB0C 001DC90C*/ PPC::Runtime::ASM::bne(.L_801DFB40);
/*801DFB10 001DC910*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801DFB14 001DC914*/ PPC::Runtime::ASM::bl(fn_801C7DE4);
/*801DFB18 001DC918*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DFB1C 001DC91C*/ PPC::Runtime::ASM::bne(.L_801DFB40);
/*801DFB20 001DC920*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801DFB24 001DC924*/ PPC::Runtime::ASM::bl(fn_801C7DF4);
/*801DFB28 001DC928*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DFB2C 001DC92C*/ PPC::Runtime::ASM::bne(.L_801DFB40);
/*801DFB30 001DC930*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801DFB34 001DC934*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*801DFB38 001DC938*/ PPC::Runtime::ASM::slw(context->r0, context->r0, context->r31);
/*801DFB3C 001DC93C*/ PPC::Runtime::ASM::or(context->r28, context->r28, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_801DFB40, 0x801DFB40) //this is a jump label
/*801DFB40 001DC940*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*801DFB44 001DC944*/ PPC::Runtime::ASM::cmpwi(context->r31, 0xa);
/*801DFB48 001DC948*/ PPC::Runtime::ASM::blt(.L_801DFAD4);
/*801DFB4C 001DC94C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801DFB50 001DC950*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*801DFB54 001DC954*/ PPC::Runtime::ASM::subi(context->r29, context->r29, 0x5);
RUNTIME_PPC_JUMP_LABEL(.L_801DFB58, 0x801DFB58) //this is a jump label
/*801DFB58 001DC958*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*801DFB5C 001DC95C*/ PPC::Runtime::ASM::ble(.L_801DFB94);
/*801DFB60 001DC960*/ PPC::Runtime::ASM::slw(context->r0, context->r31, context->r30);
/*801DFB64 001DC964*/ PPC::Runtime::ASM::and.(context->r0, context->r28, context->r0);
/*801DFB68 001DC968*/ PPC::Runtime::ASM::beq(.L_801DFB88);
/*801DFB6C 001DC96C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801DFB70 001DC970*/ PPC::Runtime::ASM::bl(fn_801E02E8);
/*801DFB74 001DC974*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801DFB78 001DC978*/ PPC::Runtime::ASM::beq(.L_801DFB88);
/*801DFB7C 001DC97C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801DFB80 001DC980*/ PPC::Runtime::ASM::bl(fn_801E1714);
/*801DFB84 001DC984*/ PPC::Runtime::ASM::subi(context->r29, context->r29, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801DFB88, 0x801DFB88) //this is a jump label
/*801DFB88 001DC988*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*801DFB8C 001DC98C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0xa);
/*801DFB90 001DC990*/ PPC::Runtime::ASM::blt(.L_801DFB58);
RUNTIME_PPC_JUMP_LABEL(.L_801DFB94, 0x801DFB94) //this is a jump label
/*801DFB94 001DC994*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DFB98 001DC998*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DFB9C 001DC99C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DFBA0 001DC9A0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DFBA4 001DC9A4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DFBA8 001DC9A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DFBAC 001DC9AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801DFBB0 001DC9B0*/ PPC::Runtime::ASM::blr();
}