//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025970C(PPC::Runtime::GCContext* context)
{
/*8025970C 0025650C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80259710 00256510*/ PPC::Runtime::ASM::mflr(context->r0);
/*80259714 00256514*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80259718 00256518*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025971C 0025651C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80259720 00256520*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80259724 00256524*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80259728 00256528*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025972C 0025652C*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80259730 00256530*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259734 00256534*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259738 00256538*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025973C 0025653C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259740 00256540*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259744 00256544*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80259748 00256548*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025974C 0025654C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80259750 00256550*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259754 00256554*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259758 00256558*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025975C 0025655C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259760 00256560*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80259764 00256564*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80259768 00256568*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E34 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025976C 0025656C*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80259770 00256570*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259774 00256574*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80259778 00256578*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025977C 0025657C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80259780 00256580*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80259784 00256584*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80259788 00256588*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025978C 0025658C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80259790 00256590*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80259794 00256594*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80259798 00256598*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025979C 0025659C*/ PPC::Runtime::ASM::blr();
}