//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8038DA24.hpp"



void fn_8038C35C(PPC::Runtime::GCContext* context)
{
/*8038C35C 0038915C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8038C360 00389160*/ PPC::Runtime::ASM::mflr(context->r0);
/*8038C364 00389164*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8038C368 00389168*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8038C36C 0038916C*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8038C370 00389170*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8038C374 00389174*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8038C378 00389178*/ PPC::Runtime::ASM::bl(fn_OSGetFontEncode);
/*8038C37C 0038917C*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r3, 16);
/*8038C380 00389180*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*8038C384 00389184*/ PPC::Runtime::ASM::bne(.L_8038C40C);
/*8038C388 00389188*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F4DB8 @ Get_MemoryOffset_HighBit);
/*8038C38C 0038918C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038C390 00389190*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F4DB8 @ Get_MemoryOffset_LowBit);
/*8038C394 00389194*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8038C398 00389198*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8038C39C 0038919C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8038C3A0 003891A0*/ PPC::Runtime::ASM::bl(fn_8038DA24);
/*8038C3A4 003891A4*/ PPC::Runtime::ASM::sth(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8038C3A8 003891A8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8038C3AC 003891AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038C3B0 003891B0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8038C3B4 003891B4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x81);
/*8038C3B8 003891B8*/ PPC::Runtime::ASM::blt(.L_8038C3C4);
/*8038C3BC 003891BC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x9f);
/*8038C3C0 003891C0*/ PPC::Runtime::ASM::ble(.L_8038C3D4);
RUNTIME_PPC_JUMP_LABEL(.L_8038C3C4, 0x8038C3C4) //this is a jump label
/*8038C3C4 003891C4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xe0);
/*8038C3C8 003891C8*/ PPC::Runtime::ASM::blt(.L_8038C3D8);
/*8038C3CC 003891CC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xef);
/*8038C3D0 003891D0*/ PPC::Runtime::ASM::bgt(.L_8038C3D8);
RUNTIME_PPC_JUMP_LABEL(.L_8038C3D4, 0x8038C3D4) //this is a jump label
/*8038C3D4 003891D4*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8038C3D8, 0x8038C3D8) //this is a jump label
/*8038C3D8 003891D8*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r4, 24);
/*8038C3DC 003891DC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F4DB8 @ Get_MemoryOffset_HighBit);
/*8038C3E0 003891E0*/ PPC::Runtime::ASM::neg(context->r0, context->r5);
/*8038C3E4 003891E4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038C3E8 003891E8*/ PPC::Runtime::ASM::or(context->r5, context->r0, context->r5);
/*8038C3EC 003891EC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F4DB8 @ Get_MemoryOffset_LowBit);
/*8038C3F0 003891F0*/ PPC::Runtime::ASM::srwi(context->r3, context->r5, 31);
/*8038C3F4 003891F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8038C3F8 003891F8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*8038C3FC 003891FC*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r0);
/*8038C400 00389200*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038C404 00389204*/ PPC::Runtime::ASM::mr(context->r30, context->r0);
/*8038C408 00389208*/ PPC::Runtime::ASM::b(.L_8038C418);
RUNTIME_PPC_JUMP_LABEL(.L_8038C40C, 0x8038C40C) //this is a jump label
/*8038C40C 0038920C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8038C410 00389210*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8038C414 00389214*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8038C418, 0x8038C418) //this is a jump label
/*8038C418 00389218*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8038C41C 0038921C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8038C420 00389220*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8038C424 00389224*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8038C428 00389228*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8038C42C 0038922C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8038C430 00389230*/ PPC::Runtime::ASM::blr();
}