//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E9A4C.hpp"
#include "fn_800E9EA8.hpp"
#include "fn_800E9F30.hpp"



void fn_800F77DC(PPC::Runtime::GCContext* context)
{
/*800F77DC 000F45DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F77E0 000F45E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F77E4 000F45E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F77E8 000F45E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F77EC 000F45EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F77F0 000F45F0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800F77F4 000F45F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F77F8 000F45F8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*800F77FC 000F45FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*800F7800 000F4600*/ PPC::Runtime::ASM::bl(fn_800E9A4C);
/*800F7804 000F4604*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800F7808 000F4608*/ PPC::Runtime::ASM::beq(.L_800F7834);
/*800F780C 000F460C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800F7810 000F4610*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r30));
/*800F7814 000F4614*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800F7818 000F4618*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r30));
/*800F781C 000F461C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800F7820 000F4620*/ PPC::Runtime::ASM::bl(fn_800E9EA8);
/*800F7824 000F4624*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r30));
/*800F7828 000F4628*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800F782C 000F462C*/ PPC::Runtime::ASM::bl(fn_800E9F30);
/*800F7830 000F4630*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800F7834, 0x800F7834) //this is a jump label
/*800F7834 000F4634*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F7838 000F4638*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F783C 000F463C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F7840 000F4640*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F7844 000F4644*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F7848 000F4648*/ PPC::Runtime::ASM::blr();
}