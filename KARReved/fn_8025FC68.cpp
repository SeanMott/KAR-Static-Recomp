//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025FC68(PPC::Runtime::GCContext* context)
{
/*8025FC68 0025CA68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025FC6C 0025CA6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025FC70 0025CA70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FC74 0025CA74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FC78 0025CA78*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025FC7C 0025CA7C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025FC80 0025CA80*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025FC84 0025CA84*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FC88 0025CA88*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025FC8C 0025CA8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FC90 0025CA90*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025FC94 0025CA94*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025FC98 0025CA98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FC9C 0025CA9C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025FCA0 0025CAA0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025FCA4 0025CAA4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025FCA8 0025CAA8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025FCAC 0025CAAC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FCB0 0025CAB0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025FCB4 0025CAB4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025FCB8 0025CAB8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025FCBC 0025CABC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025FCC0 0025CAC0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025FCC4 0025CAC4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FCC8 0025CAC8*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025FCCC 0025CACC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025FCD0 0025CAD0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FCD4 0025CAD4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025FCD8 0025CAD8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025FCDC 0025CADC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025FCE0 0025CAE0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025FCE4 0025CAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FCE8 0025CAE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FCEC 0025CAEC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025FCF0 0025CAF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025FCF4 0025CAF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025FCF8 0025CAF8*/ PPC::Runtime::ASM::blr();
}