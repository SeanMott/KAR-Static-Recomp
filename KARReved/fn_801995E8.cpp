//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80055658.hpp"



void fn_801995E8(PPC::Runtime::GCContext* context)
{
/*801995E8 001963E8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801995EC 001963EC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801995F0 001963F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801995F4 001963F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801995F8 001963F8*/ PPC::Runtime::ASM::slwi(context->r31, context->r4, 4);
/*801995FC 001963FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80199600 00196400*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80199604 00196404*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80199608 00196408*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8019960C 0019640C*/ PPC::Runtime::ASM::b(.L_80199638);
RUNTIME_PPC_JUMP_LABEL(.L_80199610, 0x80199610) //this is a jump label
/*80199610 00196410*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r29));
/*80199614 00196414*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*80199618 00196418*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/* 8019961C 0019641C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80199620 00196420*/ PPC::Runtime::ASM::beq(.L_80199630);
/*80199624 00196424*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80199628 00196428*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8019962C 0019642C*/ PPC::Runtime::ASM::bl(fn_80055658);
RUNTIME_PPC_JUMP_LABEL(.L_80199630, 0x80199630) //this is a jump label
/*80199630 00196430*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x10);
/*80199634 00196434*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80199638, 0x80199638) //this is a jump label
/*80199638 00196438*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r29));
/*8019963C 0019643C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80199640 00196440*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80199644 00196444*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80199648 00196448*/ PPC::Runtime::ASM::blt(.L_80199610);
/*8019964C 0019644C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80199650 00196450*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80199654 00196454*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80199658 00196458*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019965C 0019645C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80199660 00196460*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80199664 00196464*/ PPC::Runtime::ASM::blr();
}