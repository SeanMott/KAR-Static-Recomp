//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_801B63E0.hpp"
#include "fn_801B5DEC.hpp"
#include "fn_801B63E0.hpp"
#include "fn_801B5DCC.hpp"
#include "fn_801B5DEC.hpp"
#include "fn_801B5DCC.hpp"



void fn_801B62BC(PPC::Runtime::GCContext* context)
{
/*801B62BC 001B30BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B62C0 001B30C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B62C4 001B30C4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1678 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B62C8 001B30C8*/ PPC::Runtime::ASM::li(context->r4, 0x45);
/*801B62CC 001B30CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B62D0 001B30D0*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B62D4 001B30D4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B62D8 001B30D8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B62DC 001B30DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B62E0 001B30E0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B62E4 001B30E4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa24, context->r3));
/*801B62E8 001B30E8*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B62EC 001B30EC*/ PPC::Runtime::ASM::lis(context->r3, fn_801B63E0 @ Get_MemoryOffset_HighBit);
/*801B62F0 001B30F0*/ PPC::Runtime::ASM::lis(context->r4, fn_801B5DEC @ Get_MemoryOffset_HighBit);
/*801B62F4 001B30F4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B63E0 @ Get_MemoryOffset_LowBit);
/*801B62F8 001B30F8*/ PPC::Runtime::ASM::lis(context->r3, fn_801B5DCC @ Get_MemoryOffset_HighBit);
/*801B62FC 001B30FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7d0, context->r31));
/*801B6300 001B3100*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801B5DEC @ Get_MemoryOffset_LowBit);
/*801B6304 001B3104*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B5DCC @ Get_MemoryOffset_LowBit);
/*801B6308 001B3108*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B630C 001B310C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B6310 001B3110*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B6314 001B3114*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B6318 001B3118*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B631C 001B311C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B6320 001B3120*/ PPC::Runtime::ASM::blr();
}