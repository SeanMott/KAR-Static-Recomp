//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80215E5C(PPC::Runtime::GCContext* context)
{
/*80215E5C 00212C5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80215E60 00212C60*/ PPC::Runtime::ASM::mflr(context->r0);
/*80215E64 00212C64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80215E68 00212C68*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80215E6C 00212C6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80215E70 00212C70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80215E74 00212C74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80215E78 00212C78*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80215E7C 00212C7C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E25F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80215E80 00212C80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80215E84 00212C84*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E25F4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80215E88 00212C88*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80215E8C 00212C8C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80215E90 00212C90*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80215E94 00212C94*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80215E98 00212C98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80215E9C 00212C9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80215EA0 00212CA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80215EA4 00212CA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80215EA8 00212CA8*/ PPC::Runtime::ASM::blr();
}