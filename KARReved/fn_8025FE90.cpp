//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025FE90(PPC::Runtime::GCContext* context)
{
/*8025FE90 0025CC90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025FE94 0025CC94*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025FE98 0025CC98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FE9C 0025CC9C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FEA0 0025CCA0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025FEA4 0025CCA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025FEA8 0025CCA8*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025FEAC 0025CCAC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F60 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FEB0 0025CCB0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025FEB4 0025CCB4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F64 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025FEB8 0025CCB8*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025FEBC 0025CCBC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025FEC0 0025CCC0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025FEC4 0025CCC4*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025FEC8 0025CCC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025FECC 0025CCCC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025FED0 0025CCD0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025FED4 0025CCD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025FED8 0025CCD8*/ PPC::Runtime::ASM::blr();
}