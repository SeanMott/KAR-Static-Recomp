//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005612C.hpp"
#include "fn_80055ACC.hpp"
#include "fn_800550BC.hpp"
#include "fn_800550F4.hpp"



void fn_800F5F88(PPC::Runtime::GCContext* context)
{
/*800F5F88 000F2D88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F5F8C 000F2D8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F5F90 000F2D90*/ PPC::Runtime::ASM::mulli(context->r5, context->r5, 0x14);
/*800F5F94 000F2D94*/ PPC::Runtime::ASM::slwi(context->r8, context->r4, 3);
/*800F5F98 000F2D98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F5F9C 000F2D9C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F5FA0 000F2DA0*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x4);
/*800F5FA4 000F2DA4*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*800F5FA8 000F2DA8*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F5FAC 000F2DAC*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*800F5FB0 000F2DB0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F5FB4 000F2DB4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F5FB8 000F2DB8*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800F5FBC 000F2DBC*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800F5FC0 000F2DC0*/ PPC::Runtime::ASM::lwz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r3));
/*800F5FC4 000F2DC4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r7));
/*800F5FC8 000F2DC8*/ PPC::Runtime::ASM::lwzx(context->r31, context->r9, context->r8);
/*800F5FCC 000F2DCC*/ PPC::Runtime::ASM::lwzx(context->r4, context->r3, context->r0);
/*800F5FD0 000F2DD0*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800F5FD4 000F2DD4*/ PPC::Runtime::ASM::beq(.L_800F6010);
/*800F5FD8 000F2DD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F5FDC 000F2DDC*/ PPC::Runtime::ASM::bl(fn_8005612C);
/*800F5FE0 000F2DE0*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*800F5FE4 000F2DE4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F5FE8 000F2DE8*/ PPC::Runtime::ASM::bl(fn_80055ACC);
/*800F5FEC 000F2DEC*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*800F5FF0 000F2DF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F5FF4 000F2DF4*/ PPC::Runtime::ASM::li(context->r4, 0x400);
/*800F5FF8 000F2DF8*/ PPC::Runtime::ASM::bl(fn_800550BC);
/*800F5FFC 000F2DFC*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*800F6000 000F2E00*/ PPC::Runtime::ASM::beq(.L_800F6010);
/*800F6004 000F2E04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F6008 000F2E08*/ PPC::Runtime::ASM::li(context->r4, 0x400);
/*800F600C 000F2E0C*/ PPC::Runtime::ASM::bl(fn_800550F4);
RUNTIME_PPC_JUMP_LABEL(.L_800F6010, 0x800F6010) //this is a jump label
/*800F6010 000F2E10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F6014 000F2E14*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800F6018 000F2E18*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F601C 000F2E1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F6020 000F2E20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F6024 000F2E24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F6028 000F2E28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F602C 000F2E2C*/ PPC::Runtime::ASM::blr();
}