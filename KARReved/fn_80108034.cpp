//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA064.hpp"



void fn_80108034(PPC::Runtime::GCContext* context)
{
/*80108034 00104E34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80108038 00104E38*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010803C 00104E3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80108040 00104E40*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*80108044 00104E44*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*80108048 00104E48*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010804C 00104E4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*80108050 00104E50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r29));
/*80108054 00104E54*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80108058 00104E58*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*8010805C 00104E5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r29));
/*80108060 00104E60*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*80108064 00104E64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r29));
/*80108068 00104E68*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*8010806C 00104E6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r29));
/*80108070 00104E70*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
/*80108074 00104E74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x160, context->r29));
/*80108078 00104E78*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8010807C 00104E7C*/ PPC::Runtime::ASM::beq(.L_801080D4);
/*80108080 00104E80*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*80108084 00104E84*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80108088 00104E88*/ PPC::Runtime::ASM::li(context->r31, -0x1);
/*8010808C 00104E8C*/ PPC::Runtime::ASM::b(.L_801080C0);
RUNTIME_PPC_JUMP_LABEL(.L_80108090, 0x80108090) //this is a jump label
/*80108090 00104E90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x160, context->r29));
/*80108094 00104E94*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r30);
/*80108098 00104E98*/ PPC::Runtime::ASM::subfic(context->r4, context->r3, -0x1);
/*8010809C 00104E9C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*801080A0 00104EA0*/ PPC::Runtime::ASM::or(context->r0, context->r4, context->r0);
/* 801080A4 00104EA4  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*801080A8 00104EA8*/ PPC::Runtime::ASM::beq(.L_801080B8);
/*801080AC 00104EAC*/ PPC::Runtime::ASM::bl(fn_800EA064);
/*801080B0 00104EB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x160, context->r29));
/*801080B4 00104EB4*/ PPC::Runtime::ASM::stwx(context->r31, context->r3, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_801080B8, 0x801080B8) //this is a jump label
/*801080B8 00104EB8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*801080BC 00104EBC*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801080C0, 0x801080C0) //this is a jump label
/*801080C0 00104EC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*801080C4 00104EC4*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*801080C8 00104EC8*/ PPC::Runtime::ASM::blt(.L_80108090);
/*801080CC 00104ECC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x160, context->r29));
/*801080D0 00104ED0*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_801080D4, 0x801080D4) //this is a jump label
/*801080D4 00104ED4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*801080D8 00104ED8*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*801080DC 00104EDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801080E0 00104EE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801080E4 00104EE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801080E8 00104EE8*/ PPC::Runtime::ASM::blr();
}