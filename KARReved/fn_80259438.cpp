//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80259438(PPC::Runtime::GCContext* context)
{
/*80259438 00256238*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025943C 0025623C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80259440 00256240*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80259444 00256244*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80259448 00256248*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025944C 0025624C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80259450 00256250*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80259454 00256254*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259458 00256258*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025945C 0025625C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259460 00256260*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259464 00256264*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80259468 00256268*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025946C 0025626C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259470 00256270*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80259474 00256274*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80259478 00256278*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025947C 0025627C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80259480 00256280*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80259484 00256284*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80259488 00256288*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025948C 0025628C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80259490 00256290*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80259494 00256294*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E2C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80259498 00256298*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025949C 0025629C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802594A0 002562A0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E28 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802594A4 002562A4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802594A8 002562A8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802594AC 002562AC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*802594B0 002562B0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802594B4 002562B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802594B8 002562B8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802594BC 002562BC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802594C0 002562C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802594C4 002562C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802594C8 002562C8*/ PPC::Runtime::ASM::blr();
}