//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_JObjUnref.hpp"



void fn_8042B77C(PPC::Runtime::GCContext* context)
{
/*8042B77C 0042857C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8042B780 00428580*/ PPC::Runtime::ASM::mflr(context->r0);
/*8042B784 00428584*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18058C808 @ Get_MemoryOffset_HighBit);
/*8042B788 00428588*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8042B78C 0042858C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8042B790 00428590*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8042B794 00428594*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8042B798 00428598*/ PPC::Runtime::ASM::addi(context->r30, context->r3, STRUCT_BYTE4_COUNT_18058C808 @ Get_MemoryOffset_LowBit);
/*8042B79C 0042859C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8042B7A0 004285A0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8042B7A4, 0x8042B7A4) //this is a jump label
/*8042B7A4 004285A4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8042B7A8 004285A8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8042B7AC 004285AC*/ PPC::Runtime::ASM::beq(.L_8042B7B8);
/*8042B7B0 004285B0*/ PPC::Runtime::ASM::bl(fn_HSD_JObjUnref);
/*8042B7B4 004285B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8042B7B8, 0x8042B7B8) //this is a jump label
/*8042B7B8 004285B8*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8042B7BC 004285BC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8042B7C0 004285C0*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x100);
/*8042B7C4 004285C4*/ PPC::Runtime::ASM::blt(.L_8042B7A4);
/*8042B7C8 004285C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8042B7CC 004285CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8042B7D0 004285D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8042B7D4 004285D4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8042B7D8 004285D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8042B7DC 004285DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8042B7E0 004285E0*/ PPC::Runtime::ASM::blr();
}