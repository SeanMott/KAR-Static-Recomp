//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_8014932C(PPC::Runtime::GCContext* context)
{
/*8014932C 0014612C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80149330 00146130*/ PPC::Runtime::ASM::mflr(context->r0);
/*80149334 00146134*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80149338 00146138*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8014933C 0014613C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80149340 00146140*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80149344 00146144*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80149348 00146148*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8014934C 0014614C*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80149350, 0x80149350) //this is a jump label
/*80149350 00146150*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80149354 00146154*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*80149358 00146158*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 2);
/*8014935C 0014615C*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*80149360 00146160*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
/*80149364 00146164*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80149368 00146168*/ PPC::Runtime::ASM::beq(.L_80149374);
/*8014936C 0014616C*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80149370 00146170*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80149374, 0x80149374) //this is a jump label
/*80149374 00146174*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80149378 00146178*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*8014937C 0014617C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*80149380 00146180*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80149384 00146184*/ PPC::Runtime::ASM::beq(.L_80149390);
/*80149388 00146188*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8014938C 0014618C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80149390, 0x80149390) //this is a jump label
/*80149390 00146190*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80149394 00146194*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x6);
/*80149398 00146198*/ PPC::Runtime::ASM::blt(.L_80149350);
/*8014939C 0014619C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801493A0 001461A0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801493A4 001461A4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801493A8 001461A8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801493AC 001461AC*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801493B0 001461B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801493B4 001461B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801493B8 001461B8*/ PPC::Runtime::ASM::blr();
}