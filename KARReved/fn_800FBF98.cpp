//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800FC0A0.hpp"



void fn_800FBF98(PPC::Runtime::GCContext* context)
{
/*800FBF98 000F8D98*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800FBF9C 000F8D9C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FBFA0 000F8DA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FBFA4 000F8DA4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FBFA8 000F8DA8*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800FBFAC 000F8DAC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800FBFB0 000F8DB0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FBFB4 000F8DB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FBFB8 000F8DB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FBFBC 000F8DBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*800FBFC0 000F8DC0*/ PPC::Runtime::ASM::slwi(context->r3, context->r0, 2);
/*800FBFC4 000F8DC4*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800FBFC8 000F8DC8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*800FBFCC 000F8DCC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800FBFD0 000F8DD0*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800FBFD4 000F8DD4*/ PPC::Runtime::ASM::b(.L_800FC034);
RUNTIME_PPC_JUMP_LABEL(.L_800FBFD8, 0x800FBFD8) //this is a jump label
/*800FBFD8 000F8DD8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*800FBFDC 000F8DDC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800FBFE0 000F8DE0*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBFE4 000F8DE4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r31);
/*800FBFE8 000F8DE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800FBFEC 000F8DEC*/ PPC::Runtime::ASM::b(.L_800FC004);
RUNTIME_PPC_JUMP_LABEL(.L_800FBFF0, 0x800FBFF0) //this is a jump label
/*800FBFF0 000F8DF0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*800FBFF4 000F8DF4*/ PPC::Runtime::ASM::bne(.L_800FBFFC);
/*800FBFF8 000F8DF8*/ PPC::Runtime::ASM::b(.L_800FC024);
RUNTIME_PPC_JUMP_LABEL(.L_800FBFFC, 0x800FBFFC) //this is a jump label
/*800FBFFC 000F8DFC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800FC000 000F8E00*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800FC004, 0x800FC004) //this is a jump label
/*800FC004 000F8E04*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*800FC008 000F8E08*/ PPC::Runtime::ASM::bne(.L_800FBFF0);
/*800FC00C 000F8E0C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1003 @ Get_MemoryOffset_HighBit);
/*800FC010 000F8E10*/ PPC::Runtime::ASM::li(context->r4, 0x96c);
/*800FC014 000F8E14*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_1003 @ Get_MemoryOffset_LowBit);
/*800FC018 000F8E18*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6248 @ Get_MemoryOffset_SDA21);
/*800FC01C 000F8E1C*/ PPC::Runtime::ASM::bl(fn___assert);
/*800FC020 000F8E20*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800FC024, 0x800FC024) //this is a jump label
/*800FC024 000F8E24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r30));
/*800FC028 000F8E28*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*800FC02C 000F8E2C*/ PPC::Runtime::ASM::stwx(context->r4, context->r3, context->r31);
/*800FC030 000F8E30*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_800FC034, 0x800FC034) //this is a jump label
/*800FC034 000F8E34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*800FC038 000F8E38*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800FC03C 000F8E3C*/ PPC::Runtime::ASM::blt(.L_800FBFD8);
/*800FC040 000F8E40*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800FC044 000F8E44*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800FC048 000F8E48*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*800FC04C 000F8E4C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FC050 000F8E50*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r30));
/*800FC054 000F8E54*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*800FC058 000F8E58*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r30));
/*800FC05C 000F8E5C*/ PPC::Runtime::ASM::bl(fn_800FC0A0);
/*800FC060 000F8E60*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800FC064 000F8E64*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800FC068 000F8E68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FC06C 000F8E6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FC070 000F8E70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800FC074 000F8E74*/ PPC::Runtime::ASM::blr();
}