//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8025BA28.hpp"
#include "fn_8025BA28.hpp"
#include "fn_80255438.hpp"



void fn_8025BB78(PPC::Runtime::GCContext* context)
{
/*8025BB78 00258978*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025BB7C 0025897C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025BB80 00258980*/ PPC::Runtime::ASM::lis(context->r4, fn_8025BA28 @ Get_MemoryOffset_HighBit);
/*8025BB84 00258984*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BB88 00258988*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8025BA28 @ Get_MemoryOffset_LowBit);
/*8025BB8C 0025898C*/ PPC::Runtime::ASM::bl(fn_80255438);
/*8025BB90 00258990*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BB94 00258994*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025BB98 00258998*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025BB9C 0025899C*/ PPC::Runtime::ASM::blr();
}