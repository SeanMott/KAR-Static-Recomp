//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000AE50(PPC::Runtime::GCContext* context)
{
/*8000AE50 00007C50*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000AE54 00007C54*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000AE58 00007C58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AE5C 00007C5C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000AE60 00007C60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000AE64 00007C64*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5ad, context->r3));
/*8000AE68 00007C68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000AE6C 00007C6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000AE70 00007C70*/ PPC::Runtime::ASM::blr();
}