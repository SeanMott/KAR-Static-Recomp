//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80341F90(PPC::Runtime::GCContext* context)
{
/*80341F90 0033ED90*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80341F94 0033ED94*/ PPC::Runtime::ASM::mflr(context->r0);
/*80341F98 0033ED98*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80341F9C 0033ED9C*/ PPC::Runtime::ASM::li(context->r5, lbl_805DB0D0 @ Get_MemoryOffset_SDA21);
/*80341FA0 0033EDA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80341FA4 0033EDA4*/ PPC::Runtime::ASM::li(context->r6, lbl_805DB0C8 @ Get_MemoryOffset_SDA21);
/*80341FA8 0033EDA8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80341FAC 0033EDAC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80341FB0 0033EDB0*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*80341FB4 0033EDB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80341FB8 0033EDB8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E8474 @ Get_MemoryOffset_HighBit);
/*80341FBC 0033EDBC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E8474 @ Get_MemoryOffset_LowBit);
/*80341FC0 0033EDC0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*80341FC4 0033EDC4*/ PPC::Runtime::ASM::bne(.L_80341FD0);
/*80341FC8 0033EDC8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804E83B0 @ Get_MemoryOffset_HighBit);
/*80341FCC 0033EDCC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804E83B0 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_80341FD0, 0x80341FD0) //this is a jump label
/*80341FD0 0033EDD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80341FD4 0033EDD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80341FD8 0033EDD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80341FDC 0033EDDC*/ PPC::Runtime::ASM::blr();
}