//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005EB60.hpp"



void fn_800AF314(PPC::Runtime::GCContext* context)
{
/*800AF314 000AC114*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AF318 000AC118*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AF31C 000AC11C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AF320 000AC120*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF324 000AC124*/ PPC::Runtime::ASM::bne(.L_800AF330);
/*800AF328 000AC128*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*800AF32C 000AC12C*/ PPC::Runtime::ASM::bl(fn_8005EB60);
RUNTIME_PPC_JUMP_LABEL(.L_800AF330, 0x800AF330) //this is a jump label
/*800AF330 000AC130*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF334 000AC134*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AF338 000AC138*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AF33C 000AC13C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AF340 000AC140*/ PPC::Runtime::ASM::blr();
}