//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801925C0.hpp"



void fn_8022D054(PPC::Runtime::GCContext* context)
{
/*8022D054 00229E54*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8022D058 00229E58*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022D05C 00229E5C*/ PPC::Runtime::ASM::mulli(context->r4, context->r3, 0x90c);
/*8022D060 00229E60*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18055A9F0 @ Get_MemoryOffset_HighBit);
/*8022D064 00229E64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022D068 00229E68*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18055A9F0 @ Get_MemoryOffset_LowBit);
/*8022D06C 00229E6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8022D070 00229E70*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r4);
/*8022D074 00229E74*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8022D078 00229E78*/ PPC::Runtime::ASM::mr(context->r30, context->r31);
/*8022D07C 00229E7C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022D080 00229E80*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8022D084, 0x8022D084) //this is a jump label
/*8022D084 00229E84*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r30));
/*8022D088 00229E88*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8022D08C 00229E8C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x44);
/*8022D090 00229E90*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f0);
/*8022D094 00229E94*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8022D098 00229E98*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022D09C 00229E9C*/ PPC::Runtime::ASM::bl(fn_801925C0);
/*8022D0A0 00229EA0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8022D0A4 00229EA4*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8022D0A8 00229EA8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x9);
/*8022D0AC 00229EAC*/ PPC::Runtime::ASM::blt(.L_8022D084);
/*8022D0B0 00229EB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022D0B4 00229EB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8022D0B8 00229EB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8022D0BC 00229EBC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022D0C0 00229EC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022D0C4 00229EC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8022D0C8 00229EC8*/ PPC::Runtime::ASM::blr();
}