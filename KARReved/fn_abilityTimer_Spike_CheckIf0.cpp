//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_abilityTimerDecreaser.hpp"
#include "fn_abilityTimer_Spike_remove.hpp"
#include "fn_AS_LoseCopyAbility.hpp"
#include "fn_800547E0.hpp"
#include "fn_ability_Spike_changeNeedle.hpp"
#include "fn_80236C40.hpp"
#include "fn_ability_Spike_changeNeedle.hpp"
#include "fn_801B3A20.hpp"



void fn_abilityTimer_Spike_CheckIf0(PPC::Runtime::GCContext* context)
{
/*801B3904 001B0704*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B3908 001B0708*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B390C 001B070C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3910 001B0710*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3914 001B0714*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B3918 001B0718*/ PPC::Runtime::ASM::bl(fn_abilityTimerDecreaser);
/*801B391C 001B071C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
/*801B3920 001B0720*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801B3924 001B0724*/ PPC::Runtime::ASM::bne(.L_801B393C);
/*801B3928 001B0728*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B392C 001B072C*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Spike_remove);
/*801B3930 001B0730*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3934 001B0734*/ PPC::Runtime::ASM::bl(fn_AS_LoseCopyAbility);
/*801B3938 001B0738*/ PPC::Runtime::ASM::b(.L_801B3A0C);
RUNTIME_PPC_JUMP_LABEL(.L_801B393C, 0x801B393C) //this is a jump label
/*801B393C 001B073C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3940 001B0740*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 3, 25);
/*801B3944 001B0744*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x2);
/*801B3948 001B0748*/ PPC::Runtime::ASM::beq(.L_801B3A0C);
/*801B394C 001B074C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801B3950 001B0750*/ PPC::Runtime::ASM::beq(.L_801B3A0C);
/*801B3954 001B0754*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8fc, context->r31));
/*801B3958 001B0758*/ PPC::Runtime::ASM::bl(fn_800547E0);
/*801B395C 001B075C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801B3960 001B0760*/ PPC::Runtime::ASM::bne(.L_801B3A0C);
/*801B3964 001B0764*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3968 001B0768*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801B396C 001B076C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 3, 28, 28);
/*801B3970 001B0770*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3974 001B0774*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa00, context->r31));
/*801B3978 001B0778*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 3, 25);
/*801B397C 001B077C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801B3980 001B0780*/ PPC::Runtime::ASM::beq(.L_801B3A0C);
/*801B3984 001B0784*/ PPC::Runtime::ASM::bge(.L_801B3994);
/*801B3988 001B0788*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801B398C 001B078C*/ PPC::Runtime::ASM::bge(.L_801B39A0);
/*801B3990 001B0790*/ PPC::Runtime::ASM::b(.L_801B3A0C);
RUNTIME_PPC_JUMP_LABEL(.L_801B3994, 0x801B3994) //this is a jump label
/*801B3994 001B0794*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*801B3998 001B0798*/ PPC::Runtime::ASM::bge(.L_801B3A0C);
/*801B399C 001B079C*/ PPC::Runtime::ASM::b(.L_801B39F8);
RUNTIME_PPC_JUMP_LABEL(.L_801B39A0, 0x801B39A0) //this is a jump label
/*801B39A0 001B07A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B39A4 001B07A4*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*801B39A8 001B07A8*/ PPC::Runtime::ASM::bl(fn_ability_Spike_changeNeedle);
/*801B39AC 001B07AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
/*801B39B0 001B07B0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801B39B4 001B07B4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B39B8 001B07B8*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r3);
/*801B39BC 001B07BC*/ PPC::Runtime::ASM::xor(context->r3, context->r4, context->r3);
/*801B39C0 001B07C0*/ PPC::Runtime::ASM::or.(context->r0, context->r3, context->r0);
/*801B39C4 001B07C4*/ PPC::Runtime::ASM::bne(.L_801B3A0C);
/*801B39C8 001B07C8*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r31));
/*801B39CC 001B07CC*/ PPC::Runtime::ASM::lis(context->r4, 0x6);
/*801B39D0 001B07D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801B39D4 001B07D4*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x5a7a);
/*801B39D8 001B07D8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x43c, context->r31));
/*801B39DC 001B07DC*/ PPC::Runtime::ASM::li(context->r6, 0xc8);
/*801B39E0 001B07E0*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r7));
/*801B39E4 001B07E4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801B39E8 001B07E8*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*801B39EC 001B07EC*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B39F0 001B07F0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
/*801B39F4 001B07F4*/ PPC::Runtime::ASM::b(.L_801B3A0C);
RUNTIME_PPC_JUMP_LABEL(.L_801B39F8, 0x801B39F8) //this is a jump label
/*801B39F8 001B07F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B39FC 001B07FC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801B3A00 001B0800*/ PPC::Runtime::ASM::bl(fn_ability_Spike_changeNeedle);
/*801B3A04 001B0804*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3A08 001B0808*/ PPC::Runtime::ASM::bl(fn_801B3A20);
RUNTIME_PPC_JUMP_LABEL(.L_801B3A0C, 0x801B3A0C) //this is a jump label
/*801B3A0C 001B080C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3A10 001B0810*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3A14 001B0814*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B3A18 001B0818*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B3A1C 001B081C*/ PPC::Runtime::ASM::blr();
}