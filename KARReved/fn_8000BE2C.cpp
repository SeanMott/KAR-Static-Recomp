//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000BE2C(PPC::Runtime::GCContext* context)
{
/*8000BE2C 00008C2C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000BE30 00008C30*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000BE34 00008C34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BE38 00008C38*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BE3C 00008C3C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8000BE40 00008C40*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BE44 00008C44*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8000BE48 00008C48*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000BE4C 00008C4C*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*8000BE50 00008C50*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0x9);
/*8000BE54 00008C54*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0xd21);
/*8000BE58 00008C58*/ PPC::Runtime::ASM::stbx(context->r31, context->r3, context->r0);
/*8000BE5C 00008C5C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000BE60 00008C60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8000BE64 00008C64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000BE68 00008C68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000BE6C 00008C6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000BE70 00008C70*/ PPC::Runtime::ASM::blr();
}