//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802503C0.hpp"
#include "fn_8018C824.hpp"
#include "fn_80252090.hpp"
#include "fn_8018C668.hpp"
#include "fn_80251894.hpp"
#include "fn_802514A4.hpp"
#include "fn_80251F04.hpp"
#include "fn_80251DDC.hpp"
#include "fn_8025186C.hpp"
#include "fn_80251F1C.hpp"



void fn_8024F488(PPC::Runtime::GCContext* context)
{
/*8024F488 0024C288*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*8024F48C 0024C28C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8024F490 0024C290*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8024F494 0024C294*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8024F498 0024C298*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*8024F49C 0024C29C*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8024F4A0 0024C2A0*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8024F4A4 0024C2A4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8024F4A8 0024C2A8*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*8024F4AC 0024C2AC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*8024F4B0 0024C2B0*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*8024F4B4 0024C2B4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8024F4B8 0024C2B8*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*8024F4BC 0024C2BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8024F4C0 0024C2C0*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*8024F4C4 0024C2C4*/ PPC::Runtime::ASM::mr(context->r28, context->r5);
/*8024F4C8 0024C2C8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024F4CC 0024C2CC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r30));
/*8024F4D0 0024C2D0*/ PPC::Runtime::ASM::bl(fn_802503C0);
/*8024F4D4 0024C2D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*8024F4D8 0024C2D8*/ PPC::Runtime::ASM::bl(fn_8018C824);
/*8024F4DC 0024C2DC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r30));
/* 8024F4E0 0024C2E0  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*8024F4E4 0024C2E4*/ PPC::Runtime::ASM::beq(.L_8024F4F0);
/*8024F4E8 0024C2E8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024F4EC 0024C2EC*/ PPC::Runtime::ASM::bl(fn_80252090);
RUNTIME_PPC_JUMP_LABEL(.L_8024F4F0, 0x8024F4F0) //this is a jump label
/*8024F4F0 0024C2F0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r28, 0, 30, 30);
/*8024F4F4 0024C2F4*/ PPC::Runtime::ASM::bne(.L_8024F518);
/*8024F4F8 0024C2F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*8024F4FC 0024C2FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/*8024F500 0024C300*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*8024F504 0024C304*/ PPC::Runtime::ASM::beq(.L_8024F510);
/*8024F508 0024C308*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8024F50C 0024C30C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8024F510, 0x8024F510) //this is a jump label
/*8024F510 0024C310*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r30));
/*8024F514 0024C314*/ PPC::Runtime::ASM::bl(fn_8018C668);
RUNTIME_PPC_JUMP_LABEL(.L_8024F518, 0x8024F518) //this is a jump label
/*8024F518 0024C318*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35a, context->r30));
/*8024F51C 0024C31C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8024F520 0024C320*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 7, 24, 24);
/*8024F524 0024C324*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35a, context->r30));
/*8024F528 0024C328*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r30));
/*8024F52C 0024C32C*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*8024F530 0024C330*/ PPC::Runtime::ASM::blt(.L_8024F548);
/*8024F534 0024C334*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r29);
/*8024F538 0024C338*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r30));
/*8024F53C 0024C33C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x14);
/*8024F540 0024C340*/ PPC::Runtime::ASM::add(context->r29, context->r3, context->r0);
/*8024F544 0024C344*/ PPC::Runtime::ASM::b(.L_8024F554);
RUNTIME_PPC_JUMP_LABEL(.L_8024F548, 0x8024F548) //this is a jump label
/*8024F548 0024C348*/ PPC::Runtime::ASM::mulli(context->r0, context->r29, 0x14);
/*8024F54C 0024C34C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r30));
/*8024F550 0024C350*/ PPC::Runtime::ASM::add(context->r29, context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_8024F554, 0x8024F554) //this is a jump label
/*8024F554 0024C354*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r28, 0, 28, 28);
/*8024F558 0024C358*/ PPC::Runtime::ASM::bne(.L_8024F63C);
/*8024F55C 0024C35C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8024F560 0024C360*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r30));
/*8024F564 0024C364*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r30));
/*8024F568 0024C368*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*8024F56C 0024C36C*/ PPC::Runtime::ASM::beq(.L_8024F604);
/*8024F570 0024C370*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*8024F574 0024C374*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 4);
/*8024F578 0024C378*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8024F57C 0024C37C*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*8024F580 0024C380*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r30));
/*8024F584 0024C384*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r30));
/*8024F588 0024C388*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8024F58C 0024C38C*/ PPC::Runtime::ASM::beq(.L_8024F63C);
/*8024F590 0024C390*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*8024F594 0024C394*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*8024F598 0024C398*/ PPC::Runtime::ASM::fmr(context->f2, context->f31);
/*8024F59C 0024C39C*/ PPC::Runtime::ASM::bl(fn_80251894);
/*8024F5A0 0024C3A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024F5A4 0024C3A4*/ PPC::Runtime::ASM::bl(fn_802514A4);
/* 8024F5A8 0024C3A8  57 80 07 FF */ clrlwi. context->r0 , context->r28 , 31
/*8024F5AC 0024C3AC*/ PPC::Runtime::ASM::bne(.L_8024F5C8);
/*8024F5B0 0024C3B0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r30));
/*8024F5B4 0024C3B4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024F5B8 0024C3B8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8024F5BC 0024C3BC*/ PPC::Runtime::ASM::bl(fn_80251F04);
/*8024F5C0 0024C3C0*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*8024F5C4 0024C3C4*/ PPC::Runtime::ASM::bl(fn_80251DDC);
RUNTIME_PPC_JUMP_LABEL(.L_8024F5C8, 0x8024F5C8) //this is a jump label
/*8024F5C8 0024C3C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r30));
/*8024F5CC 0024C3CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/* 8024F5D0 0024C3D0  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*8024F5D4 0024C3D4*/ PPC::Runtime::ASM::beq(.L_8024F63C);
/*8024F5D8 0024C3D8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2C70 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8024F5DC 0024C3DC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r30));
/*8024F5E0 0024C3E0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x198, context->r30));
/*8024F5E4 0024C3E4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r30));
/*8024F5E8 0024C3E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x17c, context->r30));
/*8024F5EC 0024C3EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x180, context->r30));
/*8024F5F0 0024C3F0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x188, context->r30));
/*8024F5F4 0024C3F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18c, context->r30));
/*8024F5F8 0024C3F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x184, context->r30));
/*8024F5FC 0024C3FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x190, context->r30));
/*8024F600 0024C400*/ PPC::Runtime::ASM::b(.L_8024F63C);
RUNTIME_PPC_JUMP_LABEL(.L_8024F604, 0x8024F604) //this is a jump label
/*8024F604 0024C404*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8024F608 0024C408*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*8024F60C 0024C40C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r30));
/*8024F610 0024C410*/ PPC::Runtime::ASM::beq(.L_8024F62C);
/*8024F614 0024C414*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*8024F618 0024C418*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8024F61C 0024C41C*/ PPC::Runtime::ASM::li(context->r4, 0x15);
/*8024F620 0024C420*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnimAllByFlags);
/*8024F624 0024C424*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8024F628 0024C428*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
RUNTIME_PPC_JUMP_LABEL(.L_8024F62C, 0x8024F62C) //this is a jump label
/*8024F62C 0024C42C*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*8024F630 0024C430*/ PPC::Runtime::ASM::bl(fn_8025186C);
/*8024F634 0024C434*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024F638 0024C438*/ PPC::Runtime::ASM::bl(fn_80251F1C);
RUNTIME_PPC_JUMP_LABEL(.L_8024F63C, 0x8024F63C) //this is a jump label
/*8024F63C 0024C43C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8024F640 0024C440*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8024F644 0024C444*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r30));
/*8024F648 0024C448*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8024F64C 0024C44C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r30));
/*8024F650 0024C450*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*8024F654 0024C454*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x330, context->r30));
/*8024F658 0024C458*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*8024F65C 0024C45C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x334, context->r30));
/*8024F660 0024C460*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x338, context->r30));
/*8024F664 0024C464*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*8024F668 0024C468*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8024F66C 0024C46C*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8024F670 0024C470*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8024F674 0024C474*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8024F678 0024C478*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8024F67C 0024C47C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8024F680 0024C480*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8024F684 0024C484*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*8024F688 0024C488*/ PPC::Runtime::ASM::blr();
}