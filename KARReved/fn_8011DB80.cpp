//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114F04.hpp"



void fn_8011DB80(PPC::Runtime::GCContext* context)
{
/*8011DB80 0011A980*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011DB84 0011A984*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011DB88 0011A988*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011DB8C 0011A98C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011DB90 0011A990*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011DB94 0011A994*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011DB98 0011A998*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*8011DB9C 0011A99C*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8011DBA0 0011A9A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r3));
/*8011DBA4 0011A9A4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011DBA8 0011A9A8*/ PPC::Runtime::ASM::beq(.L_8011DBB0);
/*8011DBAC 0011A9AC*/ PPC::Runtime::ASM::bl(fn_80114F04);
RUNTIME_PPC_JUMP_LABEL(.L_8011DBB0, 0x8011DBB0) //this is a jump label
/*8011DBB0 0011A9B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011DBB4 0011A9B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011DBB8 0011A9B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011DBBC 0011A9BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011DBC0 0011A9C0*/ PPC::Runtime::ASM::blr();
}