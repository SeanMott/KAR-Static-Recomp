//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_802190BC(PPC::Runtime::GCContext* context)
{
/*802190BC 00215EBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802190C0 00215EC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802190C4 00215EC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802190C8 00215EC8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*802190CC 00215ECC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802190D0 00215ED0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*802190D4 00215ED4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*802190D8 00215ED8*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*802190DC 00215EDC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2688 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802190E0 00215EE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*802190E4 00215EE4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E268C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802190E8 00215EE8*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*802190EC 00215EEC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802190F0 00215EF0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802190F4 00215EF4*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*802190F8 00215EF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802190FC 00215EFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80219100 00215F00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80219104 00215F04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80219108 00215F08*/ PPC::Runtime::ASM::blr();
}