//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8028E7E0.hpp"



void fn_8028E760(PPC::Runtime::GCContext* context)
{
/*8028E760 0028B560*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8028E764 0028B564*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028E768 0028B568*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028E76C 0028B56C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028E770 0028B570*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8028E774 0028B574*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8028E778 0028B578  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028E77C 0028B57C*/ PPC::Runtime::ASM::beq(.L_8028E7C4);
/*8028E780 0028B580*/ PPC::Runtime::ASM::lis(context->r4, lbl_804BD528 @ Get_MemoryOffset_HighBit);
/*8028E784 0028B584*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4);
/*8028E788 0028B588*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804BD528 @ Get_MemoryOffset_LowBit);
/*8028E78C 0028B58C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*8028E790 0028B590*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028E794 0028B594*/ PPC::Runtime::ASM::bl(fn_8028E7E0);
/*8028E798 0028B598*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8028E79C 0028B59C*/ PPC::Runtime::ASM::beq(.L_8028E7B4);
/*8028E7A0 0028B5A0*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BD504 @ Get_MemoryOffset_HighBit);
/*8028E7A4 0028B5A4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028E7A8 0028B5A8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BD504 @ Get_MemoryOffset_LowBit);
/*8028E7AC 0028B5AC*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028E7B0 0028B5B0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDB5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8028E7B4, 0x8028E7B4) //this is a jump label
/*8028E7B4 0028B5B4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8028E7B8 0028B5B8*/ PPC::Runtime::ASM::ble(.L_8028E7C4);
/*8028E7BC 0028B5BC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028E7C0 0028B5C0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028E7C4, 0x8028E7C4) //this is a jump label
/*8028E7C4 0028B5C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028E7C8 0028B5C8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028E7CC 0028B5CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028E7D0 0028B5D0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8028E7D4 0028B5D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028E7D8 0028B5D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028E7DC 0028B5DC*/ PPC::Runtime::ASM::blr();
}