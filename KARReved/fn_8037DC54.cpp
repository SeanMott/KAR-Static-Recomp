//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80064770.hpp"
#include "fn_8028B2CC.hpp"



void fn_8037DC54(PPC::Runtime::GCContext* context)
{
/*8037DC54 0037AA54*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*8037DC58 0037AA58*/ PPC::Runtime::ASM::mflr(context->r0);
/*8037DC5C 0037AA5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*8037DC60 0037AA60*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*8037DC64 0037AA64*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*8037DC68 0037AA68*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*8037DC6C 0037AA6C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8037DC70 0037AA70*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8037DC74 0037AA74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*8037DC78 0037AA78*/ PPC::Runtime::ASM::bl(fn_HSD_CObjSetCurrent?);
/*8037DC7C 0037AA7C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8037DC80 0037AA80*/ PPC::Runtime::ASM::beq(.L_8037DDC4);
/*8037DC84 0037AA84*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8037DC88 0037AA88*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x10);
/*8037DC8C 0037AA8C*/ PPC::Runtime::ASM::bl(fn_80064770);
/*8037DC90 0037AA90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*8037DC94 0037AA94*/ PPC::Runtime::ASM::bl(fn_8028B2CC);
/*8037DC98 0037AA98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*8037DC9C 0037AA9C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8037DCA0 0037AAA0*/ PPC::Runtime::ASM::bl(fn_80402D58);
/*8037DCA4 0037AAA4*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*8037DCA8 0037AAA8*/ PPC::Runtime::ASM::bl(fn_GXSetCullMode);
/*8037DCAC 0037AAAC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8037DCB0 0037AAB0*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*8037DCB4 0037AAB4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8037DCB8 0037AAB8*/ PPC::Runtime::ASM::bl(fn_GXSetZMode);
/*8037DCBC 0037AABC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8037DCC0 0037AAC0*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8037DCC4 0037AAC4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8037DCC8 0037AAC8*/ PPC::Runtime::ASM::li(context->r6, 0x1e);
/*8037DCCC 0037AACC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8037DCD0 0037AAD0*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*8037DCD4 0037AAD4*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*8037DCD8 0037AAD8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8037DCDC 0037AADC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8037DCE0 0037AAE0*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*8037DCE4 0037AAE4*/ PPC::Runtime::ASM::li(context->r6, 0x21);
/*8037DCE8 0037AAE8*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8037DCEC 0037AAEC*/ PPC::Runtime::ASM::li(context->r8, 0x7d);
/*8037DCF0 0037AAF0*/ PPC::Runtime::ASM::bl(fn_GXSetTexCoordGen2);
/*8037DCF4 0037AAF4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8037DCF8 0037AAF8*/ PPC::Runtime::ASM::li(context->r4, 0xf);
/*8037DCFC 0037AAFC*/ PPC::Runtime::ASM::li(context->r5, 0xf);
/*8037DD00 0037AB00*/ PPC::Runtime::ASM::li(context->r6, 0xc);
/*8037DD04 0037AB04*/ PPC::Runtime::ASM::li(context->r7, 0x8);
/*8037DD08 0037AB08*/ PPC::Runtime::ASM::bl(fn_GXSetTevColorIn);
/*8037DD0C 0037AB0C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8037DD10 0037AB10*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8037DD14 0037AB14*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8037DD18 0037AB18*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8037DD1C 0037AB1C*/ PPC::Runtime::ASM::li(context->r7, 0x1);
/*8037DD20 0037AB20*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*8037DD24 0037AB24*/ PPC::Runtime::ASM::bl(fn_GXSetTevColorOp);
/*8037DD28 0037AB28*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8037DD2C 0037AB2C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8037DD30 0037AB30*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*8037DD34 0037AB34*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8037DD38 0037AB38*/ PPC::Runtime::ASM::bl(fn_GXSetBlendMode);
/*8037DD3C 0037AB3C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDB00 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8037DD40 0037AB40*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8037DD44 0037AB44*/ PPC::Runtime::ASM::li(context->r5, lbl_805DBD08 @ Get_MemoryOffset_SDA21);
/*8037DD48 0037AB48*/ PPC::Runtime::ASM::li(context->r6, lbl_805DBD00 @ Get_MemoryOffset_SDA21);
/*8037DD4C 0037AB4C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8037DD50 0037AB50*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*8037DD54 0037AB54*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8037DD58 0037AB58*/ PPC::Runtime::ASM::b(.L_8037DDA0);
RUNTIME_PPC_JUMP_LABEL(.L_8037DD5C, 0x8037DD5C) //this is a jump label
/*8037DD5C 0037AB5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*8037DD60 0037AB60*/ PPC::Runtime::ASM::cmpw(context->r0, context->r30);
/*8037DD64 0037AB64*/ PPC::Runtime::ASM::bne(.L_8037DD88);
/*8037DD68 0037AB68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8037DD6C 0037AB6C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x10);
/*8037DD70 0037AB70*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8037DD74 0037AB74*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*8037DD78 0037AB78*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*8037DD7C 0037AB7C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r12));
/*8037DD80 0037AB80*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8037DD84 0037AB84*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8037DD88, 0x8037DD88) //this is a jump label
/*8037DD88 0037AB88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8037DD8C 0037AB8C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8037DD90 0037AB90*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r12));
/*8037DD94 0037AB94*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8037DD98 0037AB98*/ PPC::Runtime::ASM::bctrl();
/*8037DD9C 0037AB9C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_8037DDA0, 0x8037DDA0) //this is a jump label
/*8037DDA0 0037ABA0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8037DDA4 0037ABA4*/ PPC::Runtime::ASM::bne(.L_8037DD5C);
/*8037DDA8 0037ABA8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8037DDAC 0037ABAC*/ PPC::Runtime::ASM::bl(fn_GXSetTevDirect);
/*8037DDB0 0037ABB0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8037DDB4 0037ABB4*/ PPC::Runtime::ASM::bl(fn_GXSetNumIndStages);
/*8037DDB8 0037ABB8*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8037DDBC 0037ABBC*/ PPC::Runtime::ASM::bl(fn_HSD_StateInvalidate);
/*8037DDC0 0037ABC0*/ PPC::Runtime::ASM::bl(fn_HSD_CObjEndCurrent);
RUNTIME_PPC_JUMP_LABEL(.L_8037DDC4, 0x8037DDC4) //this is a jump label
/*8037DDC4 0037ABC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*8037DDC8 0037ABC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*8037DDCC 0037ABCC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1));
/*8037DDD0 0037ABD0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8037DDD4 0037ABD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8037DDD8 0037ABD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*8037DDDC 0037ABDC*/ PPC::Runtime::ASM::blr();
}