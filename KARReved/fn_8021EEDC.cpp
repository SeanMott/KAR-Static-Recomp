//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8021EEDC(PPC::Runtime::GCContext* context)
{
/*8021EEDC 0021BCDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8021EEE0 0021BCE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8021EEE4 0021BCE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8021EEE8 0021BCE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8021EEEC 0021BCEC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8021EEF0 0021BCF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8021EEF4 0021BCF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r4));
/*8021EEF8 0021BCF8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8021EEFC 0021BCFC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8021EF00 0021BD00*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8021EF04 0021BD04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*8021EF08 0021BD08*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2d8, context->r4));
/*8021EF0C 0021BD0C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb14, context->r4));
/*8021EF10 0021BD10*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8021EF14 0021BD14*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*8021EF18 0021BD18*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb68, context->r4));
/*8021EF1C 0021BD1C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8021EF20 0021BD20*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb6c, context->r4));
/*8021EF24 0021BD24*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f0);
/*8021EF28 0021BD28*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb70, context->r4));
/*8021EF2C 0021BD2C*/ PPC::Runtime::ASM::fmuls(context->f2, context->f2, context->f3);
/*8021EF30 0021BD30*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f3);
/*8021EF34 0021BD34*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f3);
/*8021EF38 0021BD38*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8021EF3C 0021BD3C*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021EF40 0021BD40*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8021EF44 0021BD44*/ PPC::Runtime::ASM::bne(.L_8021EF58);
/*8021EF48 0021BD48*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7198 @ Get_MemoryOffset_SDA21);
/*8021EF4C 0021BD4C*/ PPC::Runtime::ASM::li(context->r4, 0x316);
/*8021EF50 0021BD50*/ PPC::Runtime::ASM::li(context->r5, lbl_805D71A0 @ Get_MemoryOffset_SDA21);
/*8021EF54 0021BD54*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8021EF58, 0x8021EF58) //this is a jump label
/*8021EF58 0021BD58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8021EF5C 0021BD5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8021EF60 0021BD60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8021EF64 0021BD64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8021EF68 0021BD68*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*8021EF6C 0021BD6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*8021EF70 0021BD70*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8021EF74 0021BD74*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8021EF78 0021BD78*/ PPC::Runtime::ASM::bne(.L_8021EFC4);
/*8021EF7C 0021BD7C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8021EF80 0021BD80*/ PPC::Runtime::ASM::beq(.L_8021EFC4);
/*8021EF84 0021BD84*/ PPC::Runtime::ASM::bne(.L_8021EF98);
/*8021EF88 0021BD88*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7198 @ Get_MemoryOffset_SDA21);
/*8021EF8C 0021BD8C*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8021EF90 0021BD90*/ PPC::Runtime::ASM::li(context->r5, lbl_805D71A0 @ Get_MemoryOffset_SDA21);
/*8021EF94 0021BD94*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8021EF98, 0x8021EF98) //this is a jump label
/*8021EF98 0021BD98*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8021EF9C 0021BD9C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8021EFA0 0021BDA0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8021EFA4 0021BDA4*/ PPC::Runtime::ASM::bne(.L_8021EFB4);
/*8021EFA8 0021BDA8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8021EFAC 0021BDAC*/ PPC::Runtime::ASM::beq(.L_8021EFB4);
/*8021EFB0 0021BDB0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8021EFB4, 0x8021EFB4) //this is a jump label
/*8021EFB4 0021BDB4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8021EFB8 0021BDB8*/ PPC::Runtime::ASM::bne(.L_8021EFC4);
/*8021EFBC 0021BDBC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8021EFC0 0021BDC0*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8021EFC4, 0x8021EFC4) //this is a jump label
/*8021EFC4 0021BDC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8021EFC8 0021BDC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8021EFCC 0021BDCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8021EFD0 0021BDD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8021EFD4 0021BDD4*/ PPC::Runtime::ASM::blr();
}