//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_collideWithObject(PPC::Runtime::GCContext* context)
{
/*800F5004 000F1E04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800F5008 000F1E08*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F500C 000F1E0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F5010 000F1E10*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800F5014 000F1E14*/ PPC::Runtime::ASM::bl(_savegpr_26);
/* 800F5018 000F1E18  7C 7B 1B 79 */ mr. context->r27 , context->r3
/*800F501C 000F1E1C*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800F5020 000F1E20*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800F5024 000F1E24*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800F5028 000F1E28*/ PPC::Runtime::ASM::mr(context->r31, context->r7);
/*800F502C 000F1E2C*/ PPC::Runtime::ASM::bne(.L_800F5038);
/*800F5030 000F1E30*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800F5034 000F1E34*/ PPC::Runtime::ASM::b(.L_800F50C0);
RUNTIME_PPC_JUMP_LABEL(.L_800F5038, 0x800F5038) //this is a jump label
/*800F5038 000F1E38*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r27));
/*800F503C 000F1E3C*/ PPC::Runtime::ASM::lis(context->r3, StructWithStructs_80 @ Get_MemoryOffset_HighBit);
/*800F5040 000F1E40*/ PPC::Runtime::ASM::addi(context->r3, context->r3, StructWithStructs_80 @ Get_MemoryOffset_LowBit);
/*800F5044 000F1E44*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800F5048 000F1E48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800F504C 000F1E4C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800F5050 000F1E50*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800F5054 000F1E54*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800F5058 000F1E58*/ PPC::Runtime::ASM::beq(.L_800F506C);
/*800F505C 000F1E5C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800F5060 000F1E60*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800F5064 000F1E64*/ PPC::Runtime::ASM::beq(.L_800F506C);
/*800F5068 000F1E68*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800F506C, 0x800F506C) //this is a jump label
/*800F506C 000F1E6C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800F5070 000F1E70*/ PPC::Runtime::ASM::bne(.L_800F508C);
/*800F5074 000F1E74*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_979 @ Get_MemoryOffset_HighBit);
/*800F5078 000F1E78*/ PPC::Runtime::ASM::lis(context->r5, "String_Debug" rYakuFuncTable->coll_func ""@ha
/* 800F507C 000F1E7C  38 63 58 24 */	addi r3, r3, MemoryOffset_979@l
/* 800F5080 000F1E80  38 80 02 06 */	li r4, 0x206
/* 800F5084 000F1E84  38 A5 59 E0 */	addi r5, r5," tring_Debug_ "grYakuFuncTable->coll_fun" @ Get_MemoryOffset_LowBit);
/*800F5088 000F1E88*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800F508C, 0x800F508C) //this is a jump label
/*800F508C 000F1E8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800F5090 000F1E90*/ PPC::Runtime::ASM::lis(context->r3, StructWithStructs_80 @ Get_MemoryOffset_HighBit);
/*800F5094 000F1E94*/ PPC::Runtime::ASM::addi(context->r5, context->r3, StructWithStructs_80 @ Get_MemoryOffset_LowBit);
/*800F5098 000F1E98*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800F509C 000F1E9C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800F50A0 000F1EA0*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800F50A4 000F1EA4*/ PPC::Runtime::ASM::lwzx(context->r8, context->r5, context->r0);
/*800F50A8 000F1EA8*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*800F50AC 000F1EAC*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*800F50B0 000F1EB0*/ PPC::Runtime::ASM::mr(context->r7, context->r31);
/*800F50B4 000F1EB4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r8));
/*800F50B8 000F1EB8*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800F50BC 000F1EBC*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800F50C0, 0x800F50C0) //this is a jump label
/*800F50C0 000F1EC0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800F50C4 000F1EC4*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800F50C8 000F1EC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F50CC 000F1ECC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F50D0 000F1ED0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800F50D4 000F1ED4*/ PPC::Runtime::ASM::blr();
}