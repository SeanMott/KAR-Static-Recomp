//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_hsdAllocMemPiece.hpp"
#include "fn___assert.hpp"
#include "memset.hpp"



void fn_HSD_TExpTev(PPC::Runtime::GCContext* context)
{
/*80422120 0041EF20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80422124 0041EF24*/ PPC::Runtime::ASM::mflr(context->r0);
/*80422128 0041EF28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8042212C 0041EF2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80422130 0041EF30*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80422134 0041EF34  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80422138 0041EF38*/ PPC::Runtime::ASM::bne(.L_80422150);
/*8042213C 0041EF3C*/ PPC::Runtime::ASM::lis(context->r4, lbl_80504950 @ Get_MemoryOffset_HighBit);
/*80422140 0041EF40*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_480 @ Get_MemoryOffset_SDA21);
/*80422144 0041EF44*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_80504950 @ Get_MemoryOffset_LowBit);
/*80422148 0041EF48*/ PPC::Runtime::ASM::li(context->r4, 0x127);
/*8042214C 0041EF4C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80422150, 0x80422150) //this is a jump label
/*80422150 0041EF50*/ PPC::Runtime::ASM::li(context->r3, 0x6c);
/*80422154 0041EF54*/ PPC::Runtime::ASM::bl(fn_hsdAllocMemPiece);
/* 80422158 0041EF58  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8042215C 0041EF5C*/ PPC::Runtime::ASM::bne(.L_80422170);
/*80422160 0041EF60*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_480 @ Get_MemoryOffset_SDA21);
/*80422164 0041EF64*/ PPC::Runtime::ASM::li(context->r4, 0x3f);
/*80422168 0041EF68*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_479 @ Get_MemoryOffset_SDA21);
/*8042216C 0041EF6C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80422170, 0x80422170) //this is a jump label
/*80422170 0041EF70*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80422174 0041EF74*/ PPC::Runtime::ASM::li(context->r4, 0xff);
/*80422178 0041EF78*/ PPC::Runtime::ASM::li(context->r5, 0x6c);
/*8042217C 0041EF7C*/ PPC::Runtime::ASM::bl(memset);
/*80422180 0041EF80*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80422184 0041EF84*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80422188 0041EF88*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8042218C 0041EF8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80422190 0041EF90*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80422194 0041EF94*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80422198 0041EF98*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8042219C 0041EF9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*804221A0 0041EFA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*804221A4 0041EFA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r31));
/*804221A8 0041EFA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*804221AC 0041EFAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r31));
/*804221B0 0041EFB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*804221B4 0041EFB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r31));
/*804221B8 0041EFB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*804221BC 0041EFBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r31));
/*804221C0 0041EFC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*804221C4 0041EFC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r31));
/*804221C8 0041EFC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804221CC 0041EFCC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*804221D0 0041EFD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804221D4 0041EFD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804221D8 0041EFD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*804221DC 0041EFDC*/ PPC::Runtime::ASM::blr();
}