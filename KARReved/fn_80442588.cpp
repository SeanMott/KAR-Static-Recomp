//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"



void fn_80442588(PPC::Runtime::GCContext* context)
{
/*80442588 0043F388*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8044258C 0043F38C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80442590 0043F390*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80442594 0043F394*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80442598 0043F398*/ PPC::Runtime::ASM::clrlwi(context->r31, context->r3, 26);
/*8044259C 0043F39C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 804425A0 0043F3A0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*804425A4 0043F3A4*/ PPC::Runtime::ASM::bgt(.L_804425BC);
/*804425A8 0043F3A8*/ PPC::Runtime::ASM::lis(context->r3, lbl_805089E8 @ Get_MemoryOffset_HighBit);
/*804425AC 0043F3AC*/ PPC::Runtime::ASM::li(context->r4, 0x39e);
/*804425B0 0043F3B0*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805089E8 @ Get_MemoryOffset_LowBit);
/*804425B4 0043F3B4*/ PPC::Runtime::ASM::li(context->r5, String_ "pid_GreaterThen_" Get_MemoryOffset_SDA21);
/*804425B8 0043F3B8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804425BC, 0x804425BC) //this is a jump label
/*804425BC 0043F3BC*/ PPC::Runtime::ASM::lis(context->r3, lbl_8058E298 @ Get_MemoryOffset_HighBit);
/*804425C0 0043F3C0*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*804425C4 0043F3C4*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_8058E298 @ Get_MemoryOffset_LowBit);
/*804425C8 0043F3C8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*804425CC 0043F3CC*/ PPC::Runtime::ASM::lwzx(context->r31, context->r4, context->r0);
/*804425D0 0043F3D0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*804425D4 0043F3D4*/ PPC::Runtime::ASM::beq(.L_804425E8);
/*804425D8 0043F3D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*804425DC 0043F3DC*/ PPC::Runtime::ASM::cmpw(context->r0, context->r30);
/*804425E0 0043F3E0*/ PPC::Runtime::ASM::bne(.L_804425E8);
/*804425E4 0043F3E4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_804425E8, 0x804425E8) //this is a jump label
/*804425E8 0043F3E8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*804425EC 0043F3EC*/ PPC::Runtime::ASM::bne(.L_80442608);
/*804425F0 0043F3F0*/ PPC::Runtime::ASM::lis(context->r3, lbl_805089E8 @ Get_MemoryOffset_HighBit);
/*804425F4 0043F3F4*/ PPC::Runtime::ASM::lis(context->r5, lbl_80508B14 @ Get_MemoryOffset_HighBit);
/*804425F8 0043F3F8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805089E8 @ Get_MemoryOffset_LowBit);
/*804425FC 0043F3FC*/ PPC::Runtime::ASM::li(context->r4, 0x3a0);
/*80442600 0043F400*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_80508B14 @ Get_MemoryOffset_LowBit);
/*80442604 0043F404*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80442608, 0x80442608) //this is a jump label
/*80442608 0043F408*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8044260C 0043F40C*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x2000);
/*80442610 0043F410*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80442614 0043F414*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80442618 0043F418*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8044261C 0043F41C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80442620 0043F420*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80442624 0043F424*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80442628 0043F428*/ PPC::Runtime::ASM::blr();
}