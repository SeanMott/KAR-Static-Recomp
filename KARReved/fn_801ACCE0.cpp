//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A00F4.hpp"
#include "fn_startCharge.hpp"
#include "fn_ground_chargeAnimation.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_groundSpin2?.hpp"
#include "fn_doQuickSpin.hpp"



void fn_801ACCE0(PPC::Runtime::GCContext* context)
{
/*801ACCE0 001A9AE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ACCE4 001A9AE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ACCE8 001A9AE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ACCEC 001A9AEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ACCF0 001A9AF0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801ACCF4 001A9AF4*/ PPC::Runtime::ASM::bl(fn_801A00F4);
/*801ACCF8 001A9AF8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACCFC 001A9AFC*/ PPC::Runtime::ASM::bl(fn_startCharge);
/*801ACD00 001A9B00*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ACD04 001A9B04*/ PPC::Runtime::ASM::bne(.L_801ACD3C);
/*801ACD08 001A9B08*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACD0C 001A9B0C*/ PPC::Runtime::ASM::bl(fn_ground_chargeAnimation);
/*801ACD10 001A9B10*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ACD14 001A9B14*/ PPC::Runtime::ASM::bne(.L_801ACD3C);
/*801ACD18 001A9B18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACD1C 001A9B1C*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801ACD20 001A9B20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACD24 001A9B24*/ PPC::Runtime::ASM::bl(fn_groundSpin2?);
/*801ACD28 001A9B28*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801ACD2C 001A9B2C*/ PPC::Runtime::ASM::bne(.L_801ACD3C);
/*801ACD30 001A9B30*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ACD34 001A9B34*/ PPC::Runtime::ASM::bl(fn_doQuickSpin);
/*801ACD38 001A9B38*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801ACD3C, 0x801ACD3C) //this is a jump label
/*801ACD3C 001A9B3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ACD40 001A9B40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ACD44 001A9B44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ACD48 001A9B48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ACD4C 001A9B4C*/ PPC::Runtime::ASM::blr();
}