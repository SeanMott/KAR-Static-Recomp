//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_isAccelerationPossible(PPC::Runtime::GCContext* context)
{
/*800640B8 00060EB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800640BC 00060EBC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f1);
/*800640C0 00060EC0*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800640C4 00060EC4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800640C8 00060EC8*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f3);
/*800640CC 00060ECC*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800640D0 00060ED0*/ PPC::Runtime::ASM::fmuls(context->f2, context->f2, context->f2);
/*800640D4 00060ED4*/ PPC::Runtime::ASM::fmuls(context->f4, context->f4, context->f4);
/*800640D8 00060ED8*/ PPC::Runtime::ASM::fadds(context->f2, context->f3, context->f2);
/*800640DC 00060EDC*/ PPC::Runtime::ASM::fadds(context->f5, context->f4, context->f2);
/*800640E0 00060EE0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f5, context->f0);
/*800640E4 00060EE4*/ PPC::Runtime::ASM::ble(.L_80064170);
/*800640E8 00060EE8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEA50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800640EC 00060EEC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f5, context->f0);
/*800640F0 00060EF0*/ PPC::Runtime::ASM::ble(.L_80064140);
/*800640F4 00060EF4*/ PPC::Runtime::ASM::frsqrte(context->f2, context->f5);
/*800640F8 00060EF8*/ PPC::Runtime::ASM::lfd(context->f4, STRUCT_DOUBLE_COUNT_1805DEA60 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800640FC 00060EFC*/ PPC::Runtime::ASM::lfd(context->f3, STRUCT_DOUBLE_COUNT_1805DEA68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80064100 00060F00*/ PPC::Runtime::ASM::fmul(context->f0, context->f2, context->f2);
/*80064104 00060F04*/ PPC::Runtime::ASM::fmul(context->f2, context->f4, context->f2);
/*80064108 00060F08*/ PPC::Runtime::ASM::fnmsub(context->f0, context->f5, context->f0, context->f3);
/*8006410C 00060F0C*/ PPC::Runtime::ASM::fmul(context->f2, context->f2, context->f0);
/*80064110 00060F10*/ PPC::Runtime::ASM::fmul(context->f0, context->f2, context->f2);
/*80064114 00060F14*/ PPC::Runtime::ASM::fmul(context->f2, context->f4, context->f2);
/*80064118 00060F18*/ PPC::Runtime::ASM::fnmsub(context->f0, context->f5, context->f0, context->f3);
/*8006411C 00060F1C*/ PPC::Runtime::ASM::fmul(context->f2, context->f2, context->f0);
/*80064120 00060F20*/ PPC::Runtime::ASM::fmul(context->f0, context->f2, context->f2);
/*80064124 00060F24*/ PPC::Runtime::ASM::fmul(context->f2, context->f4, context->f2);
/*80064128 00060F28*/ PPC::Runtime::ASM::fnmsub(context->f0, context->f5, context->f0, context->f3);
/*8006412C 00060F2C*/ PPC::Runtime::ASM::fmul(context->f0, context->f2, context->f0);
/*80064130 00060F30*/ PPC::Runtime::ASM::fmul(context->f0, context->f5, context->f0);
/*80064134 00060F34*/ PPC::Runtime::ASM::frsp(context->f0, context->f0);
/*80064138 00060F38*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8006413C 00060F3C*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_80064140, 0x80064140) //this is a jump label
/*80064140 00060F40*/ PPC::Runtime::ASM::fdivs(context->f1, context->f1, context->f5);
/*80064144 00060F44*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80064148 00060F48*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8006414C 00060F4C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80064150 00060F50*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80064154 00060F54*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80064158 00060F58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8006415C 00060F5C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80064160 00060F60*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80064164 00060F64*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80064168 00060F68*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8006416C 00060F6C*/ PPC::Runtime::ASM::b(.L_80064174);
RUNTIME_PPC_JUMP_LABEL(.L_80064170, 0x80064170) //this is a jump label
/*80064170 00060F70*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80064174, 0x80064174) //this is a jump label
/*80064174 00060F74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80064178 00060F78*/ PPC::Runtime::ASM::blr();
}