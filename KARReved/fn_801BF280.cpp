//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801BF080.hpp"
#include "fn_801C0764.hpp"
#include "fn_801BF9E0.hpp"
#include "fn_801BF65C.hpp"



void fn_801BF280(PPC::Runtime::GCContext* context)
{
/*801BF280 001BC080*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BF284 001BC084*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BF288 001BC088*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF28C 001BC08C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF290 001BC090*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BF294 001BC094*/ PPC::Runtime::ASM::bl(fn_801BF080);
/*801BF298 001BC098*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF29C 001BC09C*/ PPC::Runtime::ASM::bl(fn_801C0764);
/*801BF2A0 001BC0A0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BF2A4 001BC0A4*/ PPC::Runtime::ASM::bne(.L_801BF2C4);
/*801BF2A8 001BC0A8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF2AC 001BC0AC*/ PPC::Runtime::ASM::bl(fn_801BF9E0);
/*801BF2B0 001BC0B0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BF2B4 001BC0B4*/ PPC::Runtime::ASM::bne(.L_801BF2C4);
/*801BF2B8 001BC0B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BF2BC 001BC0BC*/ PPC::Runtime::ASM::bl(fn_801BF65C);
/*801BF2C0 001BC0C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BF2C4, 0x801BF2C4) //this is a jump label
/*801BF2C4 001BC0C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BF2C8 001BC0C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BF2CC 001BC0CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BF2D0 001BC0D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BF2D4 001BC0D4*/ PPC::Runtime::ASM::blr();
}