//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802AA1F0(PPC::Runtime::GCContext* context)
{
/*802AA1F0 002A6FF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AA1F4 002A6FF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AA1F8 002A6FF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AA1FC 002A6FFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AA200 002A7000*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802AA204 002A7004*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802AA208 002A7008  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802AA20C 002A700C*/ PPC::Runtime::ASM::beq(.L_802AA2C0);
/*802AA210 002A7010*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C162C @ Get_MemoryOffset_HighBit);
/*802AA214 002A7014*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802AA218 002A7018*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C162C @ Get_MemoryOffset_LowBit);
/*802AA21C 002A701C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA220 002A7020*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802AA224 002A7024*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802AA228 002A7028*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802AA22C 002A702C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802AA230 002A7030*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802AA234 002A7034*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA238 002A7038*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802AA23C 002A703C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA240 002A7040*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA244 002A7044*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802AA248 002A7048*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA24C 002A704C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA250 002A7050*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802AA254 002A7054*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA258 002A7058*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA25C 002A705C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802AA260 002A7060*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA264 002A7064*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA268 002A7068*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802AA26C 002A706C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA270 002A7070*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA274 002A7074*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802AA278 002A7078*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA27C 002A707C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA280 002A7080*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802AA284 002A7084*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA288 002A7088*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA28C 002A708C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802AA290 002A7090*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA294 002A7094*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA298 002A7098*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802AA29C 002A709C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA2A0 002A70A0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA2A4 002A70A4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AA2A8 002A70A8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AA2AC 002A70AC*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802AA2B0 002A70B0*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802AA2B4 002A70B4*/ PPC::Runtime::ASM::ble(.L_802AA2C0);
/*802AA2B8 002A70B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AA2BC 002A70BC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802AA2C0, 0x802AA2C0) //this is a jump label
/*802AA2C0 002A70C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AA2C4 002A70C4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AA2C8 002A70C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AA2CC 002A70CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802AA2D0 002A70D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AA2D4 002A70D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AA2D8 002A70D8*/ PPC::Runtime::ASM::blr();
}