//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800CD5E4.hpp"
#include "fn_800CD960.hpp"



void fn_800B548C(PPC::Runtime::GCContext* context)
{
/*800B548C 000B228C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800B5490 000B2290*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B5494 000B2294*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B5498 000B2298*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800B549C 000B229C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800B54A0 000B22A0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B54A4 000B22A4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800B54A8 000B22A8*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800B54AC 000B22AC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800B54B0, 0x800B54B0) //this is a jump label
/*800B54B0 000B22B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
/*800B54B4 000B22B4*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800B54B8 000B22B8*/ PPC::Runtime::ASM::beq(.L_800B54CC);
/*800B54BC 000B22BC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800B54C0 000B22C0*/ PPC::Runtime::ASM::bl(fn_800CD5E4);
/*800B54C4 000B22C4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800B54C8 000B22C8*/ PPC::Runtime::ASM::bl(fn_800CD960);
RUNTIME_PPC_JUMP_LABEL(.L_800B54CC, 0x800B54CC) //this is a jump label
/*800B54CC 000B22CC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*800B54D0 000B22D0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*800B54D4 000B22D4*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*800B54D8 000B22D8*/ PPC::Runtime::ASM::blt(.L_800B54B0);
/*800B54DC 000B22DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800B54E0 000B22E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800B54E4 000B22E4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800B54E8 000B22E8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B54EC 000B22EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B54F0 000B22F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800B54F4 000B22F4*/ PPC::Runtime::ASM::blr();
}