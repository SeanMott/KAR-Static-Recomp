//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8013DBC4.hpp"



void fn_801339B0(PPC::Runtime::GCContext* context)
{
/*801339B0 001307B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801339B4 001307B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801339B8 001307B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801339BC 001307BC*/ PPC::Runtime::ASM::bl(fn_8013DBC4);
/*801339C0 001307C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801339C4 001307C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801339C8 001307C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801339CC 001307CC*/ PPC::Runtime::ASM::blr();
}