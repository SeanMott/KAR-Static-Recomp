//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80061DF0.hpp"
#include "fn_8006176C.hpp"
#include "fn_800D5444.hpp"



void fn_eventInit(PPC::Runtime::GCContext* context)
{
/*800EE778 000EB578*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800EE77C 000EB57C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EE780 000EB580*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_44_CT_EventFunctions @ Get_MemoryOffset_HighBit);
/*800EE784 000EB584*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800EE788 000EB588*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800EE78C 000EB58C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800EE790 000EB590*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800EE794 000EB594*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE798 000EB598*/ PPC::Runtime::ASM::addi(context->r29, context->r4, StructWithFuncPtrs_44_CT_EventFunctions @ Get_MemoryOffset_LowBit);
/*800EE79C 000EB59C*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DD6F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EE7A0 000EB5A0*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800EE7A4 000EB5A4*/ PPC::Runtime::ASM::beq(.L_800EE8A8);
/*800EE7A8 000EB5A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r5));
/*800EE7AC 000EB5AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800EE7B0 000EB5B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800EE7B4 000EB5B4*/ PPC::Runtime::ASM::bne(.L_800EE8A8);
/*800EE7B8 000EB5B8*/ PPC::Runtime::ASM::mulli(context->r0, context->r30, 0x14);
/*800EE7BC 000EB5BC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*800EE7C0 000EB5C0*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800EE7C4 000EB5C4*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*800EE7C8 000EB5C8*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800EE7CC 000EB5CC*/ PPC::Runtime::ASM::beq(.L_800EE840);
/*800EE7D0 000EB5D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800EE7D4 000EB5D4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800EE7D8 000EB5D8*/ PPC::Runtime::ASM::bctrl();
/*800EE7DC 000EB5DC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800EE7E0 000EB5E0*/ PPC::Runtime::ASM::bne(.L_800EE840);
/*800EE7E4 000EB5E4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r31));
/*800EE7E8 000EB5E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800EE7EC 000EB5EC*/ PPC::Runtime::ASM::mtctr(context->r4);
/*800EE7F0 000EB5F0*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800EE7F4 000EB5F4*/ PPC::Runtime::ASM::ble(.L_800EE80C);
RUNTIME_PPC_JUMP_LABEL(.L_800EE7F8, 0x800EE7F8) //this is a jump label
/*800EE7F8 000EB5F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/*800EE7FC 000EB5FC*/ PPC::Runtime::ASM::cmpw(context->r0, context->r30);
/*800EE800 000EB600*/ PPC::Runtime::ASM::beq(.L_800EE8A8);
/*800EE804 000EB604*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*800EE808 000EB608*/ PPC::Runtime::ASM::bdnz(.L_800EE7F8);
RUNTIME_PPC_JUMP_LABEL(.L_800EE80C, 0x800EE80C) //this is a jump label
/*800EE80C 000EB60C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x10);
/*800EE810 000EB610*/ PPC::Runtime::ASM::blt(.L_800EE824);
/*800EE814 000EB614*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x140);
/*800EE818 000EB618*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x194);
/*800EE81C 000EB61C*/ PPC::Runtime::ASM::li(context->r4, 0x7f);
/*800EE820 000EB620*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800EE824, 0x800EE824) //this is a jump label
/*800EE824 000EB624*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r31));
/*800EE828 000EB628*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x1);
/*800EE82C 000EB62C*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 2);
/*800EE830 000EB630*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r31));
/*800EE834 000EB634*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*800EE838 000EB638*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r3));
/*800EE83C 000EB63C*/ PPC::Runtime::ASM::b(.L_800EE8A8);
RUNTIME_PPC_JUMP_LABEL(.L_800EE840, 0x800EE840) //this is a jump label
/*800EE840 000EB640*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EE844 000EB644*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800EE848 000EB648*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800EE84C 000EB64C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800EE850 000EB650*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800EE854 000EB654*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800EE858 000EB658*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800EE85C 000EB65C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800EE860 000EB660*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800EE864 000EB664*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800EE868 000EB668*/ PPC::Runtime::ASM::mulli(context->r3, context->r7, 0xc);
/*800EE86C 000EB66C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800EE870 000EB670*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r4));
/*800EE874 000EB674*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x9);
/*800EE878 000EB678*/ PPC::Runtime::ASM::lbzx(context->r0, context->r4, context->r0);
/*800EE87C 000EB67C*/ PPC::Runtime::ASM::mulli(context->r3, context->r7, 0x14);
/*800EE880 000EB680*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800EE884 000EB684*/ PPC::Runtime::ASM::add(context->r29, context->r5, context->r3);
/*800EE888 000EB688*/ PPC::Runtime::ASM::beq(.L_800EE8A8);
/*800EE88C 000EB68C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r6));
/*800EE890 000EB690*/ PPC::Runtime::ASM::bl(fn_80061DF0);
/*800EE894 000EB694*/ PPC::Runtime::ASM::lis(context->r3, 0x13);
/*800EE898 000EB698*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x2);
/*800EE89C 000EB69C*/ PPC::Runtime::ASM::bl(fn_8006176C);
/*800EE8A0 000EB6A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800EE8A4 000EB6A4*/ PPC::Runtime::ASM::bl(fn_800D5444);
RUNTIME_PPC_JUMP_LABEL(.L_800EE8A8, 0x800EE8A8) //this is a jump label
/*800EE8A8 000EB6A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800EE8AC 000EB6AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800EE8B0 000EB6B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800EE8B4 000EB6B4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EE8B8 000EB6B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EE8BC 000EB6BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800EE8C0 000EB6C0*/ PPC::Runtime::ASM::blr();
}