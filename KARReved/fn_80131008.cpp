//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011245C.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"
#include "fn_80059520.hpp"



void fn_80131008(PPC::Runtime::GCContext* context)
{
/*80131008 0012DE08*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8013100C 0012DE0C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80131010 0012DE10*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_1132 @ Get_MemoryOffset_HighBit);
/*80131014 0012DE14*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80131018 0012DE18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8013101C 0012DE1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80131020 0012DE20*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_1132 @ Get_MemoryOffset_LowBit);
/*80131024 0012DE24*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80131028 0012DE28*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8013102C 0012DE2C*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0xc4c);
/*80131030 0012DE30*/ PPC::Runtime::ASM::bl(fn_8011245C);
/*80131034 0012DE34*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80131038 0012DE38*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*8013103C 0012DE3C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80131040 0012DE40*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80131044 0012DE44*/ PPC::Runtime::ASM::beq(.L_80131074);
/*80131048 0012DE48*/ PPC::Runtime::ASM::bge(.L_80131090);
/*8013104C 0012DE4C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80131050 0012DE50*/ PPC::Runtime::ASM::bge(.L_80131058);
/*80131054 0012DE54*/ PPC::Runtime::ASM::b(.L_80131090);
RUNTIME_PPC_JUMP_LABEL(.L_80131058, 0x80131058) //this is a jump label
/*80131058 0012DE58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8013105C 0012DE5C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80131060 0012DE60*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x0);
/*80131064 0012DE64*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80131068 0012DE68*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8013106C 0012DE6C*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80131070 0012DE70*/ PPC::Runtime::ASM::b(.L_801310A8);
RUNTIME_PPC_JUMP_LABEL(.L_80131074, 0x80131074) //this is a jump label
/*80131074 0012DE74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80131078 0012DE78*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8013107C 0012DE7C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x1c);
/*80131080 0012DE80*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80131084 0012DE84*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80131088 0012DE88*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8013108C 0012DE8C*/ PPC::Runtime::ASM::b(.L_801310A8);
RUNTIME_PPC_JUMP_LABEL(.L_80131090, 0x80131090) //this is a jump label
/*80131090 0012DE90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80131094 0012DE94*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80131098 0012DE98*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x38);
/*8013109C 0012DE9C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801310A0 0012DEA0*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801310A4 0012DEA4*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_801310A8, 0x801310A8) //this is a jump label
/*801310A8 0012DEA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801310AC 0012DEAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801310B0 0012DEB0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801310B4 0012DEB4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801310B8 0012DEB8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801310BC 0012DEBC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801310C0 0012DEC0*/ PPC::Runtime::ASM::blr();
}