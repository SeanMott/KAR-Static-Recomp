//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"
#include "fn_dbPutString.hpp"



void fn_800AA790(PPC::Runtime::GCContext* context)
{
/*800AA790 000A7590*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AA794 000A7594*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AA798 000A7598*/ PPC::Runtime::ASM::lis(context->r4, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800AA79C 000A759C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_658 @ Get_MemoryOffset_HighBit);
/*800AA7A0 000A75A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AA7A4 000A75A4*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800AA7A8 000A75A8*/ PPC::Runtime::ASM::addi(context->r7, context->r5, MemoryOffset_658 @ Get_MemoryOffset_LowBit);
/*800AA7AC 000A75AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f80, context->r6));
/*800AA7B0 000A75B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*800AA7B4 000A75B4*/ PPC::Runtime::ASM::beq(.L_800AA800);
/*800AA7B8 000A75B8*/ PPC::Runtime::ASM::bge(.L_800AA80C);
/*800AA7BC 000A75BC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800AA7C0 000A75C0*/ PPC::Runtime::ASM::bge(.L_800AA7C8);
/*800AA7C4 000A75C4*/ PPC::Runtime::ASM::b(.L_800AA80C);
RUNTIME_PPC_JUMP_LABEL(.L_800AA7C8, 0x800AA7C8) //this is a jump label
/*800AA7C8 000A75C8*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800AA7CC 000A75CC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x724, context->r4));
/* 800AA7D0 000A75D0  54 00 F7 FF */ extrwi. context->r0 , context->r0 , 1 , 29
/*800AA7D4 000A75D4*/ PPC::Runtime::ASM::beq(.L_800AA7F0);
/*800AA7D8 000A75D8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f84, context->r6));
/*800AA7DC 000A75DC*/ PPC::Runtime::ASM::addi(context->r4, context->r7, 0x0);
/*800AA7E0 000A75E0*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f88, context->r6));
/*800AA7E4 000A75E4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA7E8 000A75E8*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA7EC 000A75EC*/ PPC::Runtime::ASM::b(.L_800AA80C);
RUNTIME_PPC_JUMP_LABEL(.L_800AA7F0, 0x800AA7F0) //this is a jump label
/*800AA7F0 000A75F0*/ PPC::Runtime::ASM::addi(context->r4, context->r7, 0x14);
/*800AA7F4 000A75F4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA7F8 000A75F8*/ PPC::Runtime::ASM::bl(fn_dbPutString);
/*800AA7FC 000A75FC*/ PPC::Runtime::ASM::b(.L_800AA80C);
RUNTIME_PPC_JUMP_LABEL(.L_800AA800, 0x800AA800) //this is a jump label
/*800AA800 000A7600*/ PPC::Runtime::ASM::addi(context->r4, context->r7, 0x28);
/*800AA804 000A7604*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AA808 000A7608*/ PPC::Runtime::ASM::bl(fn_dbPutString);
RUNTIME_PPC_JUMP_LABEL(.L_800AA80C, 0x800AA80C) //this is a jump label
/*800AA80C 000A760C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AA810 000A7610*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AA814 000A7614*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AA818 000A7618*/ PPC::Runtime::ASM::blr();
}