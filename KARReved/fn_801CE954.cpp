//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801CE954(PPC::Runtime::GCContext* context)
{
/*801CE954 001CB754*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801CE958 001CB758*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CE95C 001CB75C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CE960 001CB760*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CE964 001CB764*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CE968 001CB768*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801CE96C 001CB76C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r3));
/*801CE970 001CB770*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*801CE974 001CB774*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CE978 001CB778*/ PPC::Runtime::ASM::beq(.L_801CE990);
/*801CE97C 001CB77C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CE980 001CB780*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CE984 001CB784*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CE988 001CB788*/ PPC::Runtime::ASM::li(context->r4, 0x1e3);
/*801CE98C 001CB78C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CE990, 0x801CE990) //this is a jump label
/*801CE990 001CB790*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801CE994 001CB794*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*801CE998 001CB798*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801CE99C 001CB79C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*801CE9A0 001CB7A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*801CE9A4 001CB7A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801CE9A8 001CB7A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CE9AC 001CB7AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CE9B0 001CB7B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CE9B4 001CB7B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CE9B8 001CB7B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801CE9BC 001CB7BC*/ PPC::Runtime::ASM::blr();
}