//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_grGetGlobalDeadPosNum.hpp"
#include "fn_800EEAA4.hpp"
#include "fn_loadGlobalDeadLocations?.hpp"
#include "fn_800DA3D4.hpp"
#include "fn_800DA3D4.hpp"



void fn_800D4FB8(PPC::Runtime::GCContext* context)
{
/*800D4FB8 000D1DB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D4FBC 000D1DBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D4FC0 000D1DC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D4FC4 000D1DC4*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D4FC8 000D1DC8*/ PPC::Runtime::ASM::bl(_savegpr_26);
/*800D4FCC 000D1DCC*/ PPC::Runtime::ASM::lwz(context->r28, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4FD0 000D1DD0*/ PPC::Runtime::ASM::mr(context->r26, context->r3);
/*800D4FD4 000D1DD4*/ PPC::Runtime::ASM::mr(context->r27, context->r4);
/*800D4FD8 000D1DD8*/ PPC::Runtime::ASM::mr(context->r29, context->r5);
/*800D4FDC 000D1DDC*/ PPC::Runtime::ASM::mr(context->r30, context->r6);
/*800D4FE0 000D1DE0*/ PPC::Runtime::ASM::mr(context->r31, context->r7);
/*800D4FE4 000D1DE4*/ PPC::Runtime::ASM::bl(fn_grGetGlobalDeadPosNum);
/*800D4FE8 000D1DE8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800D4FEC 000D1DEC*/ PPC::Runtime::ASM::beq(.L_800D5010);
/*800D4FF0 000D1DF0*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800D4FF4 000D1DF4*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*800D4FF8 000D1DF8*/ PPC::Runtime::ASM::bl(fn_800EEAA4);
/*800D4FFC 000D1DFC*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D5000 000D1E00*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800D5004 000D1E04*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*800D5008 000D1E08*/ PPC::Runtime::ASM::bl(fn_loadGlobalDeadLocations?);
/*800D500C 000D1E0C*/ PPC::Runtime::ASM::b(.L_800D50E0);
RUNTIME_PPC_JUMP_LABEL(.L_800D5010, 0x800D5010) //this is a jump label
/*800D5010 000D1E10*/ PPC::Runtime::ASM::srwi(context->r0, context->r27, 31);
/*800D5014 000D1E14*/ PPC::Runtime::ASM::lwz(context->r28, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D5018 000D1E18*/ PPC::Runtime::ASM::xori(context->r0, context->r0, 0x1);
/*800D501C 000D1E1C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D5020 000D1E20*/ PPC::Runtime::ASM::beq(.L_800D505C);
/*800D5024 000D1E24*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800D5028 000D1E28*/ PPC::Runtime::ASM::bl(fn_800DA3D4);
/*800D502C 000D1E2C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D5030 000D1E30*/ PPC::Runtime::ASM::beq(.L_800D5044);
/*800D5034 000D1E34*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800D5038 000D1E38*/ PPC::Runtime::ASM::bl(fn_800DA3D4);
/*800D503C 000D1E3C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800D5040 000D1E40*/ PPC::Runtime::ASM::b(.L_800D5048);
RUNTIME_PPC_JUMP_LABEL(.L_800D5044, 0x800D5044) //this is a jump label
/*800D5044 000D1E44*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D5048, 0x800D5048) //this is a jump label
/*800D5048 000D1E48*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r27);
/*800D504C 000D1E4C*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D5050 000D1E50*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D5054 000D1E54*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D5058 000D1E58*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D505C, 0x800D505C) //this is a jump label
/*800D505C 000D1E5C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D5060 000D1E60*/ PPC::Runtime::ASM::bne(.L_800D508C);
/*800D5064 000D1E64*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_903 @ Get_MemoryOffset_HighBit);
/*800D5068 000D1E68*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800D506C 000D1E6C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_903 @ Get_MemoryOffset_LowBit);
/*800D5070 000D1E70*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D5074 000D1E74*/ PPC::Runtime::ASM::bl(OSReport);
/*800D5078 000D1E78*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_904 @ Get_MemoryOffset_HighBit);
/*800D507C 000D1E7C*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D5080 000D1E80*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_904 @ Get_MemoryOffset_LowBit);
/*800D5084 000D1E84*/ PPC::Runtime::ASM::li(context->r4, 0x481);
/*800D5088 000D1E88*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D508C, 0x800D508C) //this is a jump label
/*800D508C 000D1E8C*/ PPC::Runtime::ASM::mulli(context->r0, context->r27, 0x24);
/*800D5090 000D1E90*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r28));
/*800D5094 000D1E94*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*800D5098 000D1E98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800D509C 000D1E9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*800D50A0 000D1EA0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800D50A4 000D1EA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800D50A8 000D1EA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*800D50AC 000D1EAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800D50B0 000D1EB0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*800D50B4 000D1EB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*800D50B8 000D1EB8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800D50BC 000D1EBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800D50C0 000D1EC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*800D50C4 000D1EC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800D50C8 000D1EC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4));
/*800D50CC 000D1ECC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r4));
/*800D50D0 000D1ED0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D50D4 000D1ED4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800D50D8 000D1ED8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r4));
/*800D50DC 000D1EDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800D50E0, 0x800D50E0) //this is a jump label
/*800D50E0 000D1EE0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800D50E4 000D1EE4*/ PPC::Runtime::ASM::bl(_restgpr_26);
/*800D50E8 000D1EE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D50EC 000D1EEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D50F0 000D1EF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D50F4 000D1EF4*/ PPC::Runtime::ASM::blr();
}