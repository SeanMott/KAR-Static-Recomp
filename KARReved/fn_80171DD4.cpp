//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80171DD4(PPC::Runtime::GCContext* context)
{
/*80171DD4 0016EBD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80171DD8 0016EBD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80171DDC 0016EBDC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80171DE0 0016EBE0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80171DE4 0016EBE4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*80171DE8 0016EBE8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80171DEC 0016EBEC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80171DF0 0016EBF0*/ PPC::Runtime::ASM::li(context->r29, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80171DF4, 0x80171DF4) //this is a jump label
/*80171DF4 0016EBF4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80171DF8 0016EBF8*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80171DFC 0016EBFC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80171E00 0016EC00*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80171E04 0016EC04*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc58, context->r30));
/*80171E08 0016EC08*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80171E0C 0016EC0C*/ PPC::Runtime::ASM::beq(.L_80171E18);
/*80171E10 0016EC10*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80171E14 0016EC14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc58, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80171E18, 0x80171E18) //this is a jump label
/*80171E18 0016EC18*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80171E1C 0016EC1C*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80171E20 0016EC20*/ PPC::Runtime::ASM::blt(.L_80171DF4);
/*80171E24 0016EC24*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80171E28 0016EC28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80171E2C 0016EC2C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80171E30 0016EC30*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80171E34 0016EC34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80171E38 0016EC38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80171E3C 0016EC3C*/ PPC::Runtime::ASM::blr();
}