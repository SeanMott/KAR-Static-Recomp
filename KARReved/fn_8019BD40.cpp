//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80068D74.hpp"



void fn_8019BD40(PPC::Runtime::GCContext* context)
{
/*8019BD40 00198B40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8019BD44 00198B44*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019BD48 00198B48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8019BD4C 00198B4C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8019BD50 00198B50*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8019BD54 00198B54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019BD58 00198B58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8019BD5C 00198B5C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019BD60 00198B60*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8019BD64 00198B64*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x298, context->r3));
/*8019BD68 00198B68*/ PPC::Runtime::ASM::addi(context->r31, context->r29, 0x38);
/*8019BD6C 00198B6C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x29c, context->r3));
/*8019BD70 00198B70*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*8019BD74 00198B74*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r3));
/*8019BD78 00198B78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r3));
/*8019BD7C 00198B7C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8019BD80 00198B80*/ PPC::Runtime::ASM::beq(.L_8019BE3C);
/*8019BD84 00198B84*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E11A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8019BD88 00198B88*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8019BD8C 00198B8C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f0, context->f1);
/*8019BD90 00198B90*/ PPC::Runtime::ASM::beq(.L_8019BDA0);
/*8019BD94 00198B94*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a0, context->r29));
/*8019BD98 00198B98*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*8019BD9C 00198B9C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8019BDA0, 0x8019BDA0) //this is a jump label
/*8019BDA0 00198BA0*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805E11A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_8019BDA4, 0x8019BDA4) //this is a jump label
/*8019BDA4 00198BA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8019BDA8 00198BA8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8019BDAC 00198BAC*/ PPC::Runtime::ASM::beq(.L_8019BE3C);
/*8019BDB0 00198BB0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8019BDB4 00198BB4*/ PPC::Runtime::ASM::fcmpu(cr0, context->f31, context->f1);
/*8019BDB8 00198BB8*/ PPC::Runtime::ASM::bne(.L_8019BDDC);
/*8019BDBC 00198BBC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8019BDC0 00198BC0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a0, context->r29));
/*8019BDC4 00198BC4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8019BDC8 00198BC8*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*8019BDCC 00198BCC*/ PPC::Runtime::ASM::beq(.L_8019BE3C);
/*8019BDD0 00198BD0*/ PPC::Runtime::ASM::fneg(context->f0, context->f1);
/*8019BDD4 00198BD4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8019BDD8 00198BD8*/ PPC::Runtime::ASM::b(.L_8019BDE8);
RUNTIME_PPC_JUMP_LABEL(.L_8019BDDC, 0x8019BDDC) //this is a jump label
/*8019BDDC 00198BDC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E11AC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8019BDE0 00198BE0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*8019BDE4 00198BE4*/ PPC::Runtime::ASM::bgt(.L_8019BE3C);
RUNTIME_PPC_JUMP_LABEL(.L_8019BDE8, 0x8019BDE8) //this is a jump label
/*8019BDE8 00198BE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8019BDEC 00198BEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8019BDF0 00198BF0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8019BDF4 00198BF4*/ PPC::Runtime::ASM::extrwi(context->r30, context->r0, 6, 24);
/*8019BDF8 00198BF8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8019BDFC 00198BFC*/ PPC::Runtime::ASM::bl(fn_80068D74);
/*8019BE00 00198C00*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8019BE04 00198C04*/ PPC::Runtime::ASM::bne(.L_8019BE30);
/*8019BE08 00198C08*/ PPC::Runtime::ASM::subi(context->r0, context->r30, 0xb);
/*8019BE0C 00198C0C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804AE1C8 @ Get_MemoryOffset_HighBit);
/*8019BE10 00198C10*/ PPC::Runtime::ASM::mulli(context->r4, context->r0, 0xc);
/*8019BE14 00198C14*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8019BE18 00198C18*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804AE1C8 @ Get_MemoryOffset_LowBit);
/*8019BE1C 00198C1C*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r4);
/*8019BE20 00198C20*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8019BE24 00198C24*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8019BE28 00198C28*/ PPC::Runtime::ASM::add(context->r0, context->r5, context->r0);
/*8019BE2C 00198C2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8019BE30, 0x8019BE30) //this is a jump label
/*8019BE30 00198C30*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8019BE34 00198C34*/ PPC::Runtime::ASM::fcmpu(cr0, context->f31, context->f0);
/*8019BE38 00198C38*/ PPC::Runtime::ASM::bne(.L_8019BDA4);
RUNTIME_PPC_JUMP_LABEL(.L_8019BE3C, 0x8019BE3C) //this is a jump label
/*8019BE3C 00198C3C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8019BE40 00198C40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8019BE44 00198C44*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8019BE48 00198C48*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019BE4C 00198C4C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8019BE50 00198C50*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8019BE54 00198C54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8019BE58 00198C58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8019BE5C 00198C5C*/ PPC::Runtime::ASM::blr();
}