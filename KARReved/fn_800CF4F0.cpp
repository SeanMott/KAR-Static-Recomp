//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800CF4F0(PPC::Runtime::GCContext* context)
{
/*800CF4F0 000CC2F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800CF4F4 000CC2F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CF4F8 000CC2F8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800CF4FC 000CC2FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CF500 000CC300*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800CF504 000CC304*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800CF508 000CC308*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800CF50C 000CC30C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CF510 000CC310*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800CF514 000CC314*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800CF518 000CC318*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CF51C 000CC31C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CF520 000CC320*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800CF524 000CC324*/ PPC::Runtime::ASM::bne(.L_800CF538);
/*800CF528 000CC328*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800CF52C 000CC32C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x9c);
/*800CF530 000CC330*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800CF534 000CC334*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF538, 0x800CF538) //this is a jump label
/*800CF538 000CC338*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x0);
/*800CF53C 000CC33C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CF540 000CC340*/ PPC::Runtime::ASM::blt(.L_800CF554);
/*800CF544 000CC344*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800CF548 000CC348*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800CF54C 000CC34C*/ PPC::Runtime::ASM::bge(.L_800CF554);
/*800CF550 000CC350*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800CF554, 0x800CF554) //this is a jump label
/*800CF554 000CC354*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800CF558 000CC358*/ PPC::Runtime::ASM::bne(.L_800CF56C);
/*800CF55C 000CC35C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800CF560 000CC360*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0xa8);
/*800CF564 000CC364*/ PPC::Runtime::ASM::li(context->r4, 0x1e);
/*800CF568 000CC368*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF56C, 0x800CF56C) //this is a jump label
/*800CF56C 000CC36C*/ PPC::Runtime::ASM::mulli(context->r0, context->r28, 0x1c);
/*800CF570 000CC370*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r31));
/*800CF574 000CC374*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800CF578 000CC378*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800CF57C 000CC37C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800CF580 000CC380*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CF584 000CC384*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800CF588 000CC388*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CF58C 000CC38C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CF590 000CC390*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800CF594 000CC394*/ PPC::Runtime::ASM::blr();
}