//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8011A078(PPC::Runtime::GCContext* context)
{
/*8011A078 00116E78*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011A07C 00116E7C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011A080 00116E80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011A084 00116E84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011A088 00116E88*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8011A08C 00116E8C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8011A090 00116E90*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8011A094 00116E94*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8011A098 00116E98*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*8011A09C 00116E9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r31));
/*8011A0A0 00116EA0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8011A0A4 00116EA4*/ PPC::Runtime::ASM::beq(.L_8011A0B4);
/*8011A0A8 00116EA8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8011A0AC 00116EAC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8011A0B0 00116EB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8011A0B4, 0x8011A0B4) //this is a jump label
/*8011A0B4 00116EB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8011A0B8 00116EB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8011A0BC 00116EBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011A0C0 00116EC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8011A0C4 00116EC4*/ PPC::Runtime::ASM::blr();
}