//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80078720.hpp"
#include "fn_8007863C.hpp"



void fn_800AF7E4(PPC::Runtime::GCContext* context)
{
/*800AF7E4 000AC5E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800AF7E8 000AC5E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AF7EC 000AC5EC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AF7F0 000AC5F0*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_750 @ Get_MemoryOffset_HighBit);
/*800AF7F4 000AC5F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800AF7F8 000AC5F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800AF7FC 000AC5FC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AF800 000AC600*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_750 @ Get_MemoryOffset_LowBit);
/*800AF804 000AC604*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF808 000AC608*/ PPC::Runtime::ASM::bne(.L_800AF878);
/*800AF80C 000AC60C*/ PPC::Runtime::ASM::bl(fn_80078720);
/*800AF810 000AC610*/ PPC::Runtime::ASM::li(context->r29, 0x708);
RUNTIME_PPC_JUMP_LABEL(.L_800AF814, 0x800AF814) //this is a jump label
/*800AF814 000AC614*/ PPC::Runtime::ASM::bl(fn_8007863C);
/*800AF818 000AC618*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AF81C 000AC61C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0xb);
/*800AF820 000AC620*/ PPC::Runtime::ASM::bne(.L_800AF82C);
/*800AF824 000AC624*/ PPC::Runtime::ASM::bl(fn_8045BB60);
/*800AF828 000AC628*/ PPC::Runtime::ASM::b(.L_800AF854);
RUNTIME_PPC_JUMP_LABEL(.L_800AF82C, 0x800AF82C) //this is a jump label
/*800AF82C 000AC62C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5FC8 @ Get_MemoryOffset_SDA21);
/*800AF830 000AC630*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AF834 000AC634*/ PPC::Runtime::ASM::bl(OSReport);
/*800AF838 000AC638*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*800AF83C 000AC63C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2e8);
/*800AF840 000AC640*/ PPC::Runtime::ASM::lwzx(context->r4, context->r3, context->r0);
/*800AF844 000AC644*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x354);
/*800AF848 000AC648*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AF84C 000AC64C*/ PPC::Runtime::ASM::bl(OSReport);
/*800AF850 000AC650*/ PPC::Runtime::ASM::b(.L_800AF878);
RUNTIME_PPC_JUMP_LABEL(.L_800AF854, 0x800AF854) //this is a jump label
/*800AF854 000AC654*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800AF858 000AC658*/ PPC::Runtime::ASM::subi(context->r29, context->r29, 0x1);
/*800AF85C 000AC65C*/ PPC::Runtime::ASM::bge(.L_800AF870);
/*800AF860 000AC660*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x370);
/*800AF864 000AC664*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AF868 000AC668*/ PPC::Runtime::ASM::bl(OSReport);
/*800AF86C 000AC66C*/ PPC::Runtime::ASM::b(.L_800AF878);
RUNTIME_PPC_JUMP_LABEL(.L_800AF870, 0x800AF870) //this is a jump label
/*800AF870 000AC670*/ PPC::Runtime::ASM::bl(fn_VIWaitForRetrace);
/*800AF874 000AC674*/ PPC::Runtime::ASM::b(.L_800AF814);
RUNTIME_PPC_JUMP_LABEL(.L_800AF878, 0x800AF878) //this is a jump label
/*800AF878 000AC678*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800AF87C 000AC67C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AF880 000AC680*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800AF884 000AC684*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AF888 000AC688*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF88C 000AC68C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AF890 000AC690*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800AF894 000AC694*/ PPC::Runtime::ASM::blr();
}