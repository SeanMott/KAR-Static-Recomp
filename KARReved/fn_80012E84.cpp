//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80012E84(PPC::Runtime::GCContext* context)
{
/*80012E84 0000FC84*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80012E88 0000FC88*/ PPC::Runtime::ASM::mflr(context->r0);
/*80012E8C 0000FC8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80012E90 0000FC90*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80012E94 0000FC94*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80012E98 0000FC98*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80012E9C 0000FC9C*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_146 @ Get_MemoryOffset_HighBit);
/*80012EA0 0000FCA0*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD570 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80012EA4 0000FCA4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_146 @ Get_MemoryOffset_LowBit);
/*80012EA8 0000FCA8*/ PPC::Runtime::ASM::cmplw(context->r0, context->r30);
/*80012EAC 0000FCAC*/ PPC::Runtime::ASM::beq(.L_80012ECC);
/*80012EB0 0000FCB0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x118);
/*80012EB4 0000FCB4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80012EB8 0000FCB8*/ PPC::Runtime::ASM::bl(OSReport);
/*80012EBC 0000FCBC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x134);
/*80012EC0 0000FCC0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x144);
/*80012EC4 0000FCC4*/ PPC::Runtime::ASM::li(context->r4, 0x766);
/*80012EC8 0000FCC8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80012ECC, 0x80012ECC) //this is a jump label
/*80012ECC 0000FCCC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80537400 @ Get_MemoryOffset_HighBit);
/*80012ED0 0000FCD0*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80012ED4 0000FCD4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80537400 @ Get_MemoryOffset_LowBit);
/*80012ED8 0000FCD8*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*80012EDC 0000FCDC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80012EE0 0000FCE0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD570 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80012EE4 0000FCE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80012EE8 0000FCE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80012EEC 0000FCEC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80012EF0 0000FCF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80012EF4 0000FCF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80012EF8 0000FCF8*/ PPC::Runtime::ASM::blr();
}