//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EE73C.hpp"
#include "fn_802541A4.hpp"
#include "fn_800ED784.hpp"



void fn_event_rubberyItems_start(PPC::Runtime::GCContext* context)
{
/*80111C20 0010EA20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80111C24 0010EA24*/ PPC::Runtime::ASM::mflr(context->r0);
/*80111C28 0010EA28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80111C2C 0010EA2C*/ PPC::Runtime::ASM::bl(fn_800EE73C);
/*80111C30 0010EA30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80111C34 0010EA34*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80111C38 0010EA38*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80111C3C 0010EA3C*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80111C40 0010EA40*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80111C44 0010EA44*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80111C48 0010EA48*/ PPC::Runtime::ASM::bl(fn_802541A4);
/*80111C4C 0010EA4C*/ PPC::Runtime::ASM::li(context->r3, 0xd);
/*80111C50 0010EA50*/ PPC::Runtime::ASM::bl(fn_800ED784);
/*80111C54 0010EA54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80111C58 0010EA58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80111C5C 0010EA5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80111C60 0010EA60*/ PPC::Runtime::ASM::blr();
}