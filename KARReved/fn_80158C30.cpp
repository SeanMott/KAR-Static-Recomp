//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80155C14.hpp"



void fn_80158C30(PPC::Runtime::GCContext* context)
{
/*80158C30 00155A30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80158C34 00155A34*/ PPC::Runtime::ASM::mflr(context->r0);
/*80158C38 00155A38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80158C3C 00155A3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80158C40 00155A40*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80158C44 00155A44*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80158C48 00155A48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*80158C4C 00155A4C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*80158C50 00155A50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*80158C54 00155A54*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80158C58 00155A58*/ PPC::Runtime::ASM::bl(fn_80155C14);
/*80158C5C 00155A5C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80158C60 00155A60*/ PPC::Runtime::ASM::bne(.L_80158C74);
/*80158C64 00155A64*/ PPC::Runtime::ASM::li(context->r3, lbl_805D68E0 @ Get_MemoryOffset_SDA21);
/*80158C68 00155A68*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*80158C6C 00155A6C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D68E8 @ Get_MemoryOffset_SDA21);
/*80158C70 00155A70*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80158C74, 0x80158C74) //this is a jump label
/*80158C74 00155A74*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80158C78 00155A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80158C7C 00155A7C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*80158C80 00155A80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80158C84 00155A84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80158C88 00155A88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80158C8C 00155A8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80158C90 00155A90*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*80158C94 00155A94*/ PPC::Runtime::ASM::bne(.L_80158CE0);
/*80158C98 00155A98*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80158C9C 00155A9C*/ PPC::Runtime::ASM::beq(.L_80158CE0);
/*80158CA0 00155AA0*/ PPC::Runtime::ASM::bne(.L_80158CB4);
/*80158CA4 00155AA4*/ PPC::Runtime::ASM::li(context->r3, lbl_805D68E0 @ Get_MemoryOffset_SDA21);
/*80158CA8 00155AA8*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80158CAC 00155AAC*/ PPC::Runtime::ASM::li(context->r5, lbl_805D68E8 @ Get_MemoryOffset_SDA21);
/*80158CB0 00155AB0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80158CB4, 0x80158CB4) //this is a jump label
/*80158CB4 00155AB4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80158CB8 00155AB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80158CBC 00155ABC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80158CC0 00155AC0*/ PPC::Runtime::ASM::bne(.L_80158CD0);
/*80158CC4 00155AC4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80158CC8 00155AC8*/ PPC::Runtime::ASM::beq(.L_80158CD0);
/*80158CCC 00155ACC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80158CD0, 0x80158CD0) //this is a jump label
/*80158CD0 00155AD0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80158CD4 00155AD4*/ PPC::Runtime::ASM::bne(.L_80158CE0);
/*80158CD8 00155AD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80158CDC 00155ADC*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80158CE0, 0x80158CE0) //this is a jump label
/*80158CE0 00155AE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80158CE4 00155AE4*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*80158CE8 00155AE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80158CEC 00155AEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80158CF0 00155AF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80158CF4 00155AF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80158CF8 00155AF8*/ PPC::Runtime::ASM::blr();
}