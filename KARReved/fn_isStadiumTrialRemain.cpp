//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_getRuleNum.hpp"



void fn_isStadiumTrialRemain(PPC::Runtime::GCContext* context)
{
/*800406DC 0003D4DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800406E0 0003D4E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800406E4 0003D4E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800406E8 0003D4E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800406EC 0003D4EC*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800406F0 0003D4F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800406F4 0003D4F4*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5af, context->r3));
/*800406F8 0003D4F8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800406FC 0003D4FC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5af, context->r31));
/*80040700 0003D500*/ PPC::Runtime::ASM::bl(fn_getRuleNum);
/*80040704 0003D504*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80040708 0003D508*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xa);
/*8004070C 0003D50C*/ PPC::Runtime::ASM::beq(.L_80040774);
/*80040710 0003D510*/ PPC::Runtime::ASM::bge(.L_80040720);
/*80040714 0003D514*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x9);
/*80040718 0003D518*/ PPC::Runtime::ASM::bge(.L_8004072C);
/*8004071C 0003D51C*/ PPC::Runtime::ASM::b(.L_80040774);
RUNTIME_PPC_JUMP_LABEL(.L_80040720, 0x80040720) //this is a jump label
/*80040720 0003D520*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xc);
/*80040724 0003D524*/ PPC::Runtime::ASM::bge(.L_80040774);
/*80040728 0003D528*/ PPC::Runtime::ASM::b(.L_80040750);
RUNTIME_PPC_JUMP_LABEL(.L_8004072C, 0x8004072C) //this is a jump label
/*8004072C 0003D52C*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5af, context->r31));
/*80040730 0003D530*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80040734 0003D534*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*80040738 0003D538*/ PPC::Runtime::ASM::extsb(context->r5, context->r4);
/*8004073C 0003D53C*/ PPC::Runtime::ASM::srawi(context->r4, context->r5, 31);
/*80040740 0003D540*/ PPC::Runtime::ASM::subfc(context->r0, context->r0, context->r5);
/*80040744 0003D544*/ PPC::Runtime::ASM::adde(context->r0, context->r4, context->r3);
/*80040748 0003D548*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*8004074C 0003D54C*/ PPC::Runtime::ASM::b(.L_80040778);
RUNTIME_PPC_JUMP_LABEL(.L_80040750, 0x80040750) //this is a jump label
/*80040750 0003D550*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5af, context->r31));
/*80040754 0003D554*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80040758 0003D558*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*8004075C 0003D55C*/ PPC::Runtime::ASM::extsb(context->r5, context->r4);
/*80040760 0003D560*/ PPC::Runtime::ASM::srawi(context->r4, context->r5, 31);
/*80040764 0003D564*/ PPC::Runtime::ASM::subfc(context->r0, context->r0, context->r5);
/*80040768 0003D568*/ PPC::Runtime::ASM::adde(context->r0, context->r4, context->r3);
/*8004076C 0003D56C*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*80040770 0003D570*/ PPC::Runtime::ASM::b(.L_80040778);
RUNTIME_PPC_JUMP_LABEL(.L_80040774, 0x80040774) //this is a jump label
/*80040774 0003D574*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80040778, 0x80040778) //this is a jump label
/*80040778 0003D578*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004077C 0003D57C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80040780 0003D580*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80040784 0003D584*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80040788 0003D588*/ PPC::Runtime::ASM::blr();
}