//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80047844.hpp"
#include "fn_80078CC0.hpp"
#include "fn_80078E40.hpp"
#include "fn_debug_memCard_reqSave.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"
#include "fn_8007901C.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"
#include "fn_memcard_storeValuesIntoMemory.hpp"
#include "fn_80078CE0.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"
#include "fn_FuncWithAJumpTable_11.hpp"



void fn_FuncWithAJumpTable_15(PPC::Runtime::GCContext* context)
{
/*800481DC 00044FDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800481E0 00044FE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800481E4 00044FE4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_158 @ Get_MemoryOffset_HighBit);
/*800481E8 00044FE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800481EC 00044FEC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800481F0 00044FF0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_158 @ Get_MemoryOffset_LowBit);
/*800481F4 00044FF4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800481F8 00044FF8*/ PPC::Runtime::ASM::bl(fn_80047844);
/*800481FC 00044FFC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r3));
/*80048200 00045000*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*80048204 00045004*/ PPC::Runtime::ASM::bne(.L_80048344);
/*80048208 00045008*/ PPC::Runtime::ASM::bl(fn_80078CC0);
/*8004820C 0004500C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80048210 00045010*/ PPC::Runtime::ASM::beq(.L_8004822C);
/*80048214 00045014*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80048218 00045018*/ PPC::Runtime::ASM::bl(fn_80078E40);
/*8004821C 0004501C*/ PPC::Runtime::ASM::bl(fn_debug_memCard_reqSave);
/*80048220 00045020*/ PPC::Runtime::ASM::li(context->r3, 0x1c);
/*80048224 00045024*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
/*80048228 00045028*/ PPC::Runtime::ASM::b(.L_80048358);
RUNTIME_PPC_JUMP_LABEL(.L_8004822C, 0x8004822C) //this is a jump label
/*8004822C 0004502C*/ PPC::Runtime::ASM::bl(fn_8007901C);
/*80048230 00045030*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80048234 00045034*/ PPC::Runtime::ASM::beq(.L_80048244);
/*80048238 00045038*/ PPC::Runtime::ASM::li(context->r3, 0x1c);
/*8004823C 0004503C*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
/*80048240 00045040*/ PPC::Runtime::ASM::b(.L_80048358);
RUNTIME_PPC_JUMP_LABEL(.L_80048244, 0x80048244) //this is a jump label
/*80048244 00045044*/ PPC::Runtime::ASM::bl(fn_memcard_storeValuesIntoMemory);
/*80048248 00045048*/ PPC::Runtime::ASM::bl(fn_80078CE0);
/*8004824C 0004504C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80048250 00045050*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x10);
/*80048254 00045054*/ PPC::Runtime::ASM::bgt(.L_80048304);
/*80048258 00045058*/ PPC::Runtime::ASM::lis(context->r3, FuncWithAJumpTable_15_JumpTable_8049723C @ Get_MemoryOffset_HighBit);
/*8004825C 0004505C*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*80048260 00045060*/ PPC::Runtime::ASM::addi(context->r3, context->r3, FuncWithAJumpTable_15_JumpTable_8049723C @ Get_MemoryOffset_LowBit);
/*80048264 00045064*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*80048268 00045068*/ PPC::Runtime::ASM::mtctr(context->r0);
/*8004826C 0004506C*/ PPC::Runtime::ASM::bctr();
/*80048270 00045070*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80048274 00045074*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80048278 00045078*/ PPC::Runtime::ASM::bl(OSReport);
/*8004827C 0004507C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x38);
/*80048280 00045080*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80048284 00045084*/ PPC::Runtime::ASM::bl(OSReport);
/*80048288 00045088*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8004828C 0004508C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x70);
/*80048290 00045090*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80048294 00045094*/ PPC::Runtime::ASM::bl(OSReport);
/*80048298 00045098*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8004829C 0004509C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800482A0 000450A0*/ PPC::Runtime::ASM::bl(OSReport);
/*800482A4 000450A4*/ PPC::Runtime::ASM::li(context->r3, 0x10);
/*800482A8 000450A8*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482AC 000450AC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800482B0 000450B0*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482B4 000450B4*/ PPC::Runtime::ASM::li(context->r3, 0x17);
/*800482B8 000450B8*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482BC 000450BC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800482C0 000450C0*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482C4 000450C4*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*800482C8 000450C8*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482CC 000450CC*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*800482D0 000450D0*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482D4 000450D4*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*800482D8 000450D8*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482DC 000450DC*/ PPC::Runtime::ASM::li(context->r3, 0xa);
/*800482E0 000450E0*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482E4 000450E4*/ PPC::Runtime::ASM::li(context->r3, 0xf);
/*800482E8 000450E8*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482EC 000450EC*/ PPC::Runtime::ASM::li(context->r3, 0x10);
/*800482F0 000450F0*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482F4 000450F4*/ PPC::Runtime::ASM::li(context->r3, 0x11);
/*800482F8 000450F8*/ PPC::Runtime::ASM::b(.L_8004833C);
/*800482FC 000450FC*/ PPC::Runtime::ASM::li(context->r3, 0x15);
/*80048300 00045100*/ PPC::Runtime::ASM::b(.L_8004833C);
RUNTIME_PPC_JUMP_LABEL(.L_80048304, 0x80048304) //this is a jump label
/*80048304 00045104*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80048308 00045108*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8004830C 0004510C*/ PPC::Runtime::ASM::bl(OSReport);
/*80048310 00045110*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x38);
/*80048314 00045114*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80048318 00045118*/ PPC::Runtime::ASM::bl(OSReport);
/*8004831C 0004511C*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80048320 00045120*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xa0);
/*80048324 00045124*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80048328 00045128*/ PPC::Runtime::ASM::bl(OSReport);
/*8004832C 0004512C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80048330 00045130*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80048334 00045134*/ PPC::Runtime::ASM::bl(OSReport);
/*80048338 00045138*/ PPC::Runtime::ASM::li(context->r3, 0x10);
RUNTIME_PPC_JUMP_LABEL(.L_8004833C, 0x8004833C) //this is a jump label
/*8004833C 0004513C*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
/*80048340 00045140*/ PPC::Runtime::ASM::b(.L_80048358);
RUNTIME_PPC_JUMP_LABEL(.L_80048344, 0x80048344) //this is a jump label
/*80048344 00045144*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80048348 00045148*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8004834C 0004514C*/ PPC::Runtime::ASM::bne(.L_80048358);
/*80048350 00045150*/ PPC::Runtime::ASM::li(context->r3, 0x1b);
/*80048354 00045154*/ PPC::Runtime::ASM::bl(fn_FuncWithAJumpTable_11);
RUNTIME_PPC_JUMP_LABEL(.L_80048358, 0x80048358) //this is a jump label
/*80048358 00045158*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004835C 0004515C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80048360 00045160*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80048364 00045164*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80048368 00045168*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8004836C 0004516C*/ PPC::Runtime::ASM::blr();
}