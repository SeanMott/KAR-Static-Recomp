//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E86CC.hpp"
#include "fn_800F7870.hpp"
#include "fn_80106548.hpp"



void fn_801063F4(PPC::Runtime::GCContext* context)
{
/*801063F4 001031F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801063F8 001031F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801063FC 001031FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80106400 00103200*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80106404 00103204*/ PPC::Runtime::ASM::bl(_savegpr_25);
/*80106408 00103208*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8010640C 0010320C*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_108 @ Get_MemoryOffset_HighBit);
/*80106410 00103210*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80106414 00103214*/ PPC::Runtime::ASM::addi(context->r28, context->r3, StructWithFuncPtrs_108 @ Get_MemoryOffset_LowBit);
/*80106418 00103218*/ PPC::Runtime::ASM::lwz(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r4));
/*8010641C 0010321C*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*80106420 00103220*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80106424 00103224*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*80106428 00103228*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010642C 0010322C*/ PPC::Runtime::ASM::b(.L_8010644C);
RUNTIME_PPC_JUMP_LABEL(.L_80106430, 0x80106430) //this is a jump label
/*80106430 00103230*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80106434 00103234*/ PPC::Runtime::ASM::mr(context->r3, context->r25);
/*80106438 00103238*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*8010643C 0010323C*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r27);
/*80106440 00103240*/ PPC::Runtime::ASM::bl(fn_800E86CC);
/*80106444 00103244*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*80106448 00103248*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8010644C, 0x8010644C) //this is a jump label
/*8010644C 0010324C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80106450 00103250*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*80106454 00103254*/ PPC::Runtime::ASM::blt(.L_80106430);
/*80106458 00103258*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8010645C 0010325C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80106460 00103260*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80106464 00103264*/ PPC::Runtime::ASM::ble(.L_80106474);
/*80106468 00103268*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*8010646C 0010326C*/ PPC::Runtime::ASM::bgt(.L_80106474);
/*80106470 00103270*/ PPC::Runtime::ASM::li(context->r0, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80106474, 0x80106474) //this is a jump label
/*80106474 00103274*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80106478 00103278*/ PPC::Runtime::ASM::bne(.L_8010648C);
/*8010647C 0010327C*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x88);
/*80106480 00103280*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0xc0);
/*80106484 00103284*/ PPC::Runtime::ASM::li(context->r4, 0x138);
/*80106488 00103288*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8010648C, 0x8010648C) //this is a jump label
/*8010648C 0010328C*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*80106490 00103290*/ PPC::Runtime::ASM::mr(context->r27, context->r31);
/*80106494 00103294*/ PPC::Runtime::ASM::mr(context->r26, context->r25);
RUNTIME_PPC_JUMP_LABEL(.L_80106498, 0x80106498) //this is a jump label
/*80106498 00103298*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8010649C 0010329C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r27));
/*801064A0 001032A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*801064A4 001032A4*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*801064A8 001032A8*/ PPC::Runtime::ASM::bge(.L_801064F4);
/*801064AC 001032AC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801064B0 001032B0*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801064B4 001032B4*/ PPC::Runtime::ASM::lwzx(context->r0, context->r4, context->r26);
/*801064B8 001032B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*801064BC 001032BC*/ PPC::Runtime::ASM::b(.L_801064D4);
RUNTIME_PPC_JUMP_LABEL(.L_801064C0, 0x801064C0) //this is a jump label
/*801064C0 001032C0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*801064C4 001032C4*/ PPC::Runtime::ASM::bne(.L_801064CC);
/*801064C8 001032C8*/ PPC::Runtime::ASM::b(.L_801064F0);
RUNTIME_PPC_JUMP_LABEL(.L_801064CC, 0x801064CC) //this is a jump label
/*801064CC 001032CC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801064D0 001032D0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801064D4, 0x801064D4) //this is a jump label
/*801064D4 001032D4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801064D8 001032D8*/ PPC::Runtime::ASM::bne(.L_801064C0);
/*801064DC 001032DC*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x10c);
/*801064E0 001032E0*/ PPC::Runtime::ASM::li(context->r4, 0x96c);
/*801064E4 001032E4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D62F0 @ Get_MemoryOffset_SDA21);
/*801064E8 001032E8*/ PPC::Runtime::ASM::bl(fn___assert);
/*801064EC 001032EC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801064F0, 0x801064F0) //this is a jump label
/*801064F0 001032F0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r27));
RUNTIME_PPC_JUMP_LABEL(.L_801064F4, 0x801064F4) //this is a jump label
/*801064F4 001032F4*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
/*801064F8 001032F8*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x4);
/*801064FC 001032FC*/ PPC::Runtime::ASM::cmpwi(context->r25, 0x4);
/*80106500 00103300*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*80106504 00103304*/ PPC::Runtime::ASM::blt(.L_80106498);
/*80106508 00103308*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8010650C 0010330C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80106510 00103310*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80106514 00103314*/ PPC::Runtime::ASM::beq(.L_80106528);
/*80106518 00103318*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010651C 0010331C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*80106520 00103320*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80106524 00103324*/ PPC::Runtime::ASM::bl(fn_800F7870);
RUNTIME_PPC_JUMP_LABEL(.L_80106528, 0x80106528) //this is a jump label
/*80106528 00103328*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8010652C 0010332C*/ PPC::Runtime::ASM::bl(fn_80106548);
/*80106530 00103330*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80106534 00103334*/ PPC::Runtime::ASM::bl(_restgpr_25);
/*80106538 00103338*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8010653C 0010333C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80106540 00103340*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80106544 00103344*/ PPC::Runtime::ASM::blr();
}