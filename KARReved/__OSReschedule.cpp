//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "SelectThread.hpp"



void __OSReschedule(PPC::Runtime::GCContext* context)
{
/*803DA0A0 003D6EA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DA0A4 003D6EA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DA0A8 003D6EA8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8, context->r1));
/*803DA0AC 003D6EAC*/ PPC::Runtime::ASM::lwz(context->r0, RunQueueHint_805DDF2C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DA0B0 003D6EB0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803DA0B4 003D6EB4*/ PPC::Runtime::ASM::beq(.L_803DA0C0);
/*803DA0B8 003D6EB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803DA0BC 003D6EBC*/ PPC::Runtime::ASM::bl(SelectThread);
RUNTIME_PPC_JUMP_LABEL(.L_803DA0C0, 0x803DA0C0) //this is a jump label
/*803DA0C0 003D6EC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803DA0C4 003D6EC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x8);
/*803DA0C8 003D6EC8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DA0CC 003D6ECC*/ PPC::Runtime::ASM::blr();
}