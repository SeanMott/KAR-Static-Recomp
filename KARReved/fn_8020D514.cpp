//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005EA20.hpp"
#include "fn_8005D64C.hpp"
#include "fn_8005E08C.hpp"



void fn_8020D514(PPC::Runtime::GCContext* context)
{
/*8020D514 0020A314*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8020D518 0020A318*/ PPC::Runtime::ASM::mflr(context->r0);
/*8020D51C 0020A31C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8020D520 0020A320*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8020D524 0020A324*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8020D528 0020A328*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020D52C 0020A32C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8020D530 0020A330*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r3));
/*8020D534 0020A334*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*8020D538 0020A338*/ PPC::Runtime::ASM::beq(.L_8020D5B0);
/*8020D53C 0020A33C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*8020D540 0020A340*/ PPC::Runtime::ASM::mr(context->r31, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_8020D544, 0x8020D544) //this is a jump label
/*8020D544 0020A344*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r31));
/*8020D548 0020A348*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8020D54C 0020A34C*/ PPC::Runtime::ASM::beq(.L_8020D560);
/*8020D550 0020A350*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8020D554 0020A354*/ PPC::Runtime::ASM::bl(fn_8005EA20);
/*8020D558 0020A358*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r31));
/*8020D55C 0020A35C*/ PPC::Runtime::ASM::bl(fn_8005D64C);
RUNTIME_PPC_JUMP_LABEL(.L_8020D560, 0x8020D560) //this is a jump label
/*8020D560 0020A360*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8020D564 0020A364*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*8020D568 0020A368*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x2);
/*8020D56C 0020A36C*/ PPC::Runtime::ASM::blt(.L_8020D544);
/*8020D570 0020A370*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r29));
/*8020D574 0020A374*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8020D578 0020A378*/ PPC::Runtime::ASM::beq(.L_8020D580);
/*8020D57C 0020A37C*/ PPC::Runtime::ASM::bl(fn_8005E08C);
RUNTIME_PPC_JUMP_LABEL(.L_8020D580, 0x8020D580) //this is a jump label
/*8020D580 0020A380*/ PPC::Runtime::ASM::lis(context->r3, StructValues_103_0x00000000_0xFFFFFFFF @ Get_MemoryOffset_HighBit);
/*8020D584 0020A384*/ PPC::Runtime::ASM::addi(context->r4, context->r3, StructValues_103_0x00000000_0xFFFFFFFF @ Get_MemoryOffset_LowBit);
/*8020D588 0020A388*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*8020D58C 0020A38C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*8020D590 0020A390*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa58, context->r29));
/*8020D594 0020A394*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa5c, context->r29));
/*8020D598 0020A398*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8020D59C 0020A39C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*8020D5A0 0020A3A0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa60, context->r29));
/*8020D5A4 0020A3A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa64, context->r29));
/*8020D5A8 0020A3A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*8020D5AC 0020A3AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa68, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_8020D5B0, 0x8020D5B0) //this is a jump label
/*8020D5B0 0020A3B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8020D5B4 0020A3B4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8020D5B8 0020A3B8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8020D5BC 0020A3BC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8020D5C0 0020A3C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8020D5C4 0020A3C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8020D5C8 0020A3C8*/ PPC::Runtime::ASM::blr();
}