//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"
#include "fn___AICallbackStackSwitch.hpp"
#include "OSClearContext.hpp"
#include "OSSetCurrentContext.hpp"



void fn___AIDHandler(PPC::Runtime::GCContext* context)
{
/*803DFC50 003DCA50*/ PPC::Runtime::ASM::mflr(context->r0);
/*803DFC54 003DCA54*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803DFC58 003DCA58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803DFC5C 003DCA5C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x5000);
/*803DFC60 003DCA60*/ PPC::Runtime::ASM::li(context->r0, -0xa1);
/*803DFC64 003DCA64*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x2e0, context->r1));
/*803DFC68 003DCA68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r1));
/*803DFC6C 003DCA6C*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x0);
/*803DFC70 003DCA70*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r3));
/*803DFC74 003DCA74*/ PPC::Runtime::ASM::and(context->r0, context->r5, context->r0);
/*803DFC78 003DCA78*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x8);
/*803DFC7C 003DCA7C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa, context->r3));
/*803DFC80 003DCA80*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803DFC84 003DCA84*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803DFC88 003DCA88*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803DFC8C 003DCA8C*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803DFC90 003DCA90*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDFC4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFC94 003DCA94*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*803DFC98 003DCA98*/ PPC::Runtime::ASM::beq(.L_803DFCD8);
/*803DFC9C 003DCA9C*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDFD4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFCA0 003DCAA0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803DFCA4 003DCAA4*/ PPC::Runtime::ASM::bne(.L_803DFCD8);
/*803DFCA8 003DCAA8*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDFC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFCAC 003DCAAC*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803DFCB0 003DCAB0*/ PPC::Runtime::ASM::stw(context->r4, STRUCT_BYTE4_COUNT_1805DDFD4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803DFCB4 003DCAB4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803DFCB8 003DCAB8*/ PPC::Runtime::ASM::beq(.L_803DFCC4);
/*803DFCBC 003DCABC*/ PPC::Runtime::ASM::bl(fn___AICallbackStackSwitch);
/*803DFCC0 003DCAC0*/ PPC::Runtime::ASM::b(.L_803DFCD0);
RUNTIME_PPC_JUMP_LABEL(.L_803DFCC4, 0x803DFCC4) //this is a jump label
/*803DFCC4 003DCAC4*/ PPC::Runtime::ASM::addi(context->r12, context->r3, 0x0);
/*803DFCC8 003DCAC8*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 803DFCCC 003DCACC  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803DFCD0, 0x803DFCD0) //this is a jump label
/*803DFCD0 003DCAD0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803DFCD4 003DCAD4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDFD4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_803DFCD8, 0x803DFCD8) //this is a jump label
/*803DFCD8 003DCAD8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x10);
/*803DFCDC 003DCADC*/ PPC::Runtime::ASM::bl(OSClearContext);
/*803DFCE0 003DCAE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803DFCE4 003DCAE4*/ PPC::Runtime::ASM::bl(OSSetCurrentContext);
/*803DFCE8 003DCAE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2e4, context->r1));
/*803DFCEC 003DCAEC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2dc, context->r1));
/*803DFCF0 003DCAF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x2e0);
/*803DFCF4 003DCAF4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803DFCF8 003DCAF8*/ PPC::Runtime::ASM::blr();
}