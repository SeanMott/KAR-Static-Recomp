//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801E6274(PPC::Runtime::GCContext* context)
{
/*801E6274 001E3074*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801E6278 001E3078*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E627C 001E307C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801E6280 001E3080*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801E6284 001E3084*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801E6288 001E3088*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E628C 001E308C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801E6290 001E3090*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801E6294 001E3094*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801E6298, 0x801E6298) //this is a jump label
/*801E6298 001E3098*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801E629C 001E309C*/ PPC::Runtime::ASM::mr(context->r30, context->r29);
RUNTIME_PPC_JUMP_LABEL(.L_801E62A0, 0x801E62A0) //this is a jump label
/*801E62A0 001E30A0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8f8, context->r30));
/*801E62A4 001E30A4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801E62A8 001E30A8*/ PPC::Runtime::ASM::beq(.L_801E62B0);
/*801E62AC 001E30AC*/ PPC::Runtime::ASM::bl(fn_80428F64);
RUNTIME_PPC_JUMP_LABEL(.L_801E62B0, 0x801E62B0) //this is a jump label
/*801E62B0 001E30B0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*801E62B4 001E30B4*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*801E62B8 001E30B8*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801E62BC 001E30BC*/ PPC::Runtime::ASM::blt(.L_801E62A0);
/*801E62C0 001E30C0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*801E62C4 001E30C4*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x10);
/*801E62C8 001E30C8*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x5);
/*801E62CC 001E30CC*/ PPC::Runtime::ASM::blt(.L_801E6298);
/*801E62D0 001E30D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801E62D4 001E30D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801E62D8 001E30D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801E62DC 001E30DC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E62E0 001E30E0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801E62E4 001E30E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E62E8 001E30E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801E62EC 001E30EC*/ PPC::Runtime::ASM::blr();
}