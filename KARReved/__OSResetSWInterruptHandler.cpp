//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__OSGetSystemTime.hpp"
#include "__OSGetSystemTime.hpp"
#include "__OSMaskInterrupts.hpp"



void __OSResetSWInterruptHandler(PPC::Runtime::GCContext* context)
{
/*803D89FC 003D57FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D8A00 003D5800*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D8A04 003D5804*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803D8A08 003D5808*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D8A0C 003D580C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D8A10 003D5810*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D8A14 003D5814*/ PPC::Runtime::ASM::bl(__OSGetSystemTime);
/*803D8A18 003D5818*/ PPC::Runtime::ASM::lis(context->r5, 0x8000);
/*803D8A1C 003D581C*/ PPC::Runtime::ASM::stw(context->r4, STRUCT_BYTE4_COUNT_1805DDF24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8A20 003D5820*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r5));
/*803D8A24 003D5824*/ PPC::Runtime::ASM::lis(context->r4, 0x431c);
/*803D8A28 003D5828*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x217d);
/*803D8A2C 003D582C*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DDF20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8A30 003D5830*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 2);
/*803D8A34 003D5834*/ PPC::Runtime::ASM::mulhwu(context->r0, context->r4, context->r0);
/*803D8A38 003D5838*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 15);
/*803D8A3C 003D583C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x64);
/*803D8A40 003D5840*/ PPC::Runtime::ASM::srwi(context->r29, context->r0, 3);
/*803D8A44 003D5844*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*803D8A48 003D5848*/ PPC::Runtime::ASM::lis(context->r31, 0xcc00);
RUNTIME_PPC_JUMP_LABEL(.L_803D8A4C, 0x803D8A4C) //this is a jump label
/*803D8A4C 003D584C*/ PPC::Runtime::ASM::bl(__OSGetSystemTime);
/*803D8A50 003D5850*/ PPC::Runtime::ASM::lwz(context->r6, STRUCT_BYTE4_COUNT_1805DDF24 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8A54 003D5854*/ PPC::Runtime::ASM::xoris(context->r5, context->r30, 0x8000);
/*803D8A58 003D5858*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDF20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8A5C 003D585C*/ PPC::Runtime::ASM::subfc(context->r4, context->r6, context->r4);
/*803D8A60 003D5860*/ PPC::Runtime::ASM::subfe(context->r0, context->r0, context->r3);
/*803D8A64 003D5864*/ PPC::Runtime::ASM::xoris(context->r3, context->r0, 0x8000);
/*803D8A68 003D5868*/ PPC::Runtime::ASM::subfc(context->r0, context->r29, context->r4);
/*803D8A6C 003D586C*/ PPC::Runtime::ASM::subfe(context->r5, context->r5, context->r3);
/*803D8A70 003D5870*/ PPC::Runtime::ASM::subfe(context->r5, context->r3, context->r3);
/*803D8A74 003D5874*/ PPC::Runtime::ASM::neg.(context->r5, context->r5);
/*803D8A78 003D5878*/ PPC::Runtime::ASM::beq(.L_803D8A88);
/*803D8A7C 003D587C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3000, context->r31));
/*803D8A80 003D5880*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 15, 15);
/*803D8A84 003D5884*/ PPC::Runtime::ASM::beq(.L_803D8A4C);
RUNTIME_PPC_JUMP_LABEL(.L_803D8A88, 0x803D8A88) //this is a jump label
/*803D8A88 003D5888*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803D8A8C 003D588C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3000, context->r3));
/*803D8A90 003D5890*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 15, 15);
/*803D8A94 003D5894*/ PPC::Runtime::ASM::bne(.L_803D8AC8);
/*803D8A98 003D5898*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D8A9C 003D589C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF0C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8AA0 003D58A0*/ PPC::Runtime::ASM::li(context->r3, 0x200);
/*803D8AA4 003D58A4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF10 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8AA8 003D58A8*/ PPC::Runtime::ASM::bl(__OSMaskInterrupts);
/*803D8AAC 003D58AC*/ PPC::Runtime::ASM::lwz(context->r12, STRUCT_BYTE4_COUNT_1805DDF08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D8AB0 003D58B0*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*803D8AB4 003D58B4*/ PPC::Runtime::ASM::beq(.L_803D8AC8);
/*803D8AB8 003D58B8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803D8ABC 003D58BC*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803D8AC0 003D58C0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDF08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/* 803D8AC4 003D58C4  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803D8AC8, 0x803D8AC8) //this is a jump label
/*803D8AC8 003D58C8*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*803D8ACC 003D58CC*/ PPC::Runtime::ASM::lis(context->r3, 0xcc00);
/*803D8AD0 003D58D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3000, context->r3));
/*803D8AD4 003D58D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803D8AD8 003D58D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D8ADC 003D58DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D8AE0 003D58E0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D8AE4 003D58E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803D8AE8 003D58E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D8AEC 003D58EC*/ PPC::Runtime::ASM::blr();
}