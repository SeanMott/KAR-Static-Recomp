//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetDispCopySrc(PPC::Runtime::GCContext* context)
{
/*803CC5C4 003C93C4*/ PPC::Runtime::ASM::lwz(context->r9, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC5C8 003C93C8*/ PPC::Runtime::ASM::li(context->r10, 0x0);
/*803CC5CC 003C93CC*/ PPC::Runtime::ASM::clrlwi(context->r7, context->r5, 16);
/*803CC5D0 003C93D0*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC5D4 003C93D4*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r6, 16);
/*803CC5D8 003C93D8*/ PPC::Runtime::ASM::subi(context->r0, context->r5, 0x1);
/*803CC5DC 003C93DC*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC5E0 003C93E0*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 16);
/*803CC5E4 003C93E4*/ PPC::Runtime::ASM::clrlslwi(context->r4, context->r4, 16, 10);
/*803CC5E8 003C93E8*/ PPC::Runtime::ASM::clrrwi(context->r5, context->r8, 10);
/*803CC5EC 003C93EC*/ PPC::Runtime::ASM::or(context->r3, context->r5, context->r3);
/*803CC5F0 003C93F0*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC5F4 003C93F4*/ PPC::Runtime::ASM::subi(context->r3, context->r7, 0x1);
/*803CC5F8 003C93F8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 10);
/*803CC5FC 003C93FC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC600 003C9400*/ PPC::Runtime::ASM::rlwinm(context->r5, context->r5, 0, 22, 11);
/*803CC604 003C9404*/ PPC::Runtime::ASM::or(context->r4, context->r5, context->r4);
/*803CC608 003C9408*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC60C 003C940C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC610 003C9410*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r4, 8);
/*803CC614 003C9414*/ PPC::Runtime::ASM::oris(context->r4, context->r4, 0x4900);
/*803CC618 003C9418*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r9));
/*803CC61C 003C941C*/ PPC::Runtime::ASM::stw(context->r10, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC620 003C9420*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC624 003C9424*/ PPC::Runtime::ASM::clrrwi(context->r4, context->r4, 10);
/*803CC628 003C9428*/ PPC::Runtime::ASM::or(context->r3, context->r4, context->r3);
/*803CC62C 003C942C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC630 003C9430*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC634 003C9434*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 22, 11);
/*803CC638 003C9438*/ PPC::Runtime::ASM::or(context->r0, context->r3, context->r0);
/*803CC63C 003C943C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC640 003C9440*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC644 003C9444*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r0, 8);
/*803CC648 003C9448*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x4a00);
/*803CC64C 003C944C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r9));
/*803CC650 003C9450*/ PPC::Runtime::ASM::blr();
}