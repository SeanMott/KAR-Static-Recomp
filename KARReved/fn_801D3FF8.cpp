//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801D3EC0.hpp"
#include "fn_801D3EC0.hpp"



void fn_801D3FF8(PPC::Runtime::GCContext* context)
{
/*801D3FF8 001D0DF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D3FFC 001D0DFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D4000 001D0E00*/ PPC::Runtime::ASM::lis(context->r4, fn_801D3EC0 @ Get_MemoryOffset_HighBit);
/*801D4004 001D0E04*/ PPC::Runtime::ASM::li(context->r5, 0xb);
/*801D4008 001D0E08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D400C 001D0E0C*/ PPC::Runtime::ASM::li(context->r0, 0x12c);
/*801D4010 001D0E10*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_801D3EC0 @ Get_MemoryOffset_LowBit);
/*801D4014 001D0E14*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r3));
/*801D4018 001D0E18*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r6));
/*801D401C 001D0E1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r6));
/*801D4020 001D0E20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r3));
/*801D4024 001D0E24*/ PPC::Runtime::ASM::bl(fn_804288A4);
/*801D4028 001D0E28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D402C 001D0E2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D4030 001D0E30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D4034 001D0E34*/ PPC::Runtime::ASM::blr();
}