//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D864.hpp"



void fn_8005DED0(PPC::Runtime::GCContext* context)
{
/*8005DED0 0005ACD0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005DED4 0005ACD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005DED8 0005ACD8*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8005DEDC 0005ACDC*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*8005DEE0 0005ACE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DEE4 0005ACE4*/ PPC::Runtime::ASM::bl(fn_8005D864);
/*8005DEE8 0005ACE8*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005DEEC 0005ACEC*/ PPC::Runtime::ASM::beq(.L_8005DF54);
/*8005DEF0 0005ACF0*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xb8);
/*8005DEF4 0005ACF4*/ PPC::Runtime::ASM::lis(context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005DEF8 0005ACF8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*8005DEFC 0005ACFC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005DF00 0005AD00*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r6);
/*8005DF04 0005AD04*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8005DF08 0005AD08*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x33c);
/*8005DF0C 0005AD0C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF10 0005AD10*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 0, 31, 31);
/*8005DF14 0005AD14*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF18 0005AD18*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF1C 0005AD1C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 3, 28, 28);
/*8005DF20 0005AD20*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF24 0005AD24*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF28 0005AD28*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 2, 29, 29);
/*8005DF2C 0005AD2C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF30 0005AD30*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF34 0005AD34*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 1, 30, 30);
/*8005DF38 0005AD38*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF3C 0005AD3C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF40 0005AD40*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 4, 27, 27);
/*8005DF44 0005AD44*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r6));
/*8005DF48 0005AD48*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
/*8005DF4C 0005AD4C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r5, 7, 24, 24);
/*8005DF50 0005AD50*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_8005DF54, 0x8005DF54) //this is a jump label
/*8005DF54 0005AD54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DF58 0005AD58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005DF5C 0005AD5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005DF60 0005AD60*/ PPC::Runtime::ASM::blr();
}