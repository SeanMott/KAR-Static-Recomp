//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_GXInitLightPos.hpp"
#include "fn_GXInitLightDir.hpp"
#include "fn_GXInitLightAttn.hpp"
#include "fn_GXInitLightColor.hpp"
#include "fn_HSD_Index2LightID.hpp"
#include "fn_GXLoadLightObjImm.hpp"
#include "fn_HSD_StateInvalidate.hpp"



void fn_HSD_GXInit(PPC::Runtime::GCContext* context)
{
/*8040FEE0 0040CCE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x60, context->r1));
/*8040FEE4 0040CCE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040FEE8 0040CCE8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E5B6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FEEC 0040CCEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*8040FEF0 0040CCF0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040FEF4 0040CCF4*/ PPC::Runtime::ASM::fmr(context->f3, context->f2);
/*8040FEF8 0040CCF8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5B68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FEFC 0040CCFC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*8040FF00 0040CD00*/ PPC::Runtime::ASM::bl(fn_GXInitLightPos);
/*8040FF04 0040CD04*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E5B6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FF08 0040CD08*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040FF0C 0040CD0C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5B68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FF10 0040CD10*/ PPC::Runtime::ASM::fmr(context->f3, context->f2);
/*8040FF14 0040CD14*/ PPC::Runtime::ASM::bl(fn_GXInitLightDir);
/*8040FF18 0040CD18*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E5B6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FF1C 0040CD1C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040FF20 0040CD20*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E5B68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FF24 0040CD24*/ PPC::Runtime::ASM::fmr(context->f3, context->f2);
/*8040FF28 0040CD28*/ PPC::Runtime::ASM::fmr(context->f4, context->f1);
/*8040FF2C 0040CD2C*/ PPC::Runtime::ASM::fmr(context->f5, context->f2);
/*8040FF30 0040CD30*/ PPC::Runtime::ASM::fmr(context->f6, context->f2);
/*8040FF34 0040CD34*/ PPC::Runtime::ASM::bl(fn_GXInitLightAttn);
/*8040FF38 0040CD38*/ PPC::Runtime::ASM::lwz(context->r0, AllZeros_30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8040FF3C 0040CD3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040FF40 0040CD40*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8040FF44 0040CD44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8040FF48 0040CD48*/ PPC::Runtime::ASM::bl(fn_GXInitLightColor);
/*8040FF4C 0040CD4C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8040FF50, 0x8040FF50) //this is a jump label
/*8040FF50 0040CD50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8040FF54 0040CD54*/ PPC::Runtime::ASM::bl(fn_HSD_Index2LightID);
/*8040FF58 0040CD58*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8040FF5C 0040CD5C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*8040FF60 0040CD60*/ PPC::Runtime::ASM::bl(fn_GXLoadLightObjImm);
/*8040FF64 0040CD64*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*8040FF68 0040CD68*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x8);
/*8040FF6C 0040CD6C*/ PPC::Runtime::ASM::blt(.L_8040FF50);
/*8040FF70 0040CD70*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8040FF74 0040CD74*/ PPC::Runtime::ASM::bl(fn_HSD_StateInvalidate);
/*8040FF78 0040CD78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*8040FF7C 0040CD7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r1));
/*8040FF80 0040CD80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040FF84 0040CD84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x60);
/*8040FF88 0040CD88*/ PPC::Runtime::ASM::blr();
}