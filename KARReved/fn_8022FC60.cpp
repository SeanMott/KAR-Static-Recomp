//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022FC60(PPC::Runtime::GCContext* context)
{
/*8022FC60 0022CA60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*8022FC64 0022CA64*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022FC68 0022CA68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8022FC6C 0022CA6C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8022FC70 0022CA70*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8022FC74 0022CA74*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8022FC78 0022CA78*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8022FC7C 0022CA7C*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*8022FC80 0022CA80*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*8022FC84 0022CA84*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*8022FC88 0022CA88*/ PPC::Runtime::ASM::beq(.L_8022FCAC);
/*8022FC8C 0022CA8C*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022FC90 0022CA90*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x61c, context->r3));
/*8022FC94 0022CA94*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f31);
/*8022FC98 0022CA98*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x61c, context->r3));
/*8022FC9C 0022CA9C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x620, context->r3));
/*8022FCA0 0022CAA0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f30);
/*8022FCA4 0022CAA4*/ PPC::Runtime::ASM::bge(.L_8022FCAC);
/*8022FCA8 0022CAA8*/ PPC::Runtime::ASM::stfs(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x620, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_8022FCAC, 0x8022FCAC) //this is a jump label
/*8022FCAC 0022CAAC*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*8022FCB0 0022CAB0*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8022FCB4 0022CAB4*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*8022FCB8 0022CAB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*8022FCBC 0022CABC*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8022FCC0 0022CAC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022FCC4 0022CAC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8022FCC8 0022CAC8*/ PPC::Runtime::ASM::blr();
}