//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "__EXIProbe.hpp"
#include "EXIGetID.hpp"
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSDisableInterrupts.hpp"
#include "__EXIProbe.hpp"
#include "OSRestoreInterrupts.hpp"
#include "EXIClearInterrupts.hpp"
#include "__OSUnmaskInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_EXIAttach(PPC::Runtime::GCContext* context)
{
/*803EA9F8 003E77F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803EA9FC 003E77FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803EAA00 003E7800*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*803EAA04 003E7804*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803EAA08 003E7808*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*803EAA0C 003E780C*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*803EAA10 003E7810*/ PPC::Runtime::ASM::slwi(context->r4, context->r3, 6);
/*803EAA14 003E7814*/ PPC::Runtime::ASM::lis(context->r3, Ecb_8056E928 @ Get_MemoryOffset_HighBit);
/*803EAA18 003E7818*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Ecb_8056E928 @ Get_MemoryOffset_LowBit);
/*803EAA1C 003E781C*/ PPC::Runtime::ASM::add(context->r30, context->r0, context->r4);
/*803EAA20 003E7820*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803EAA24 003E7824*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EAA28 003E7828*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EAA2C 003E782C*/ PPC::Runtime::ASM::beq(.L_803EAA4C);
/*803EAA30 003E7830*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*803EAA34 003E7834*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EAA38 003E7838*/ PPC::Runtime::ASM::bne(.L_803EAA4C);
/*803EAA3C 003E783C*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803EAA40 003E7840*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803EAA44 003E7844*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x1c);
/*803EAA48 003E7848*/ PPC::Runtime::ASM::bl(EXIGetID);
RUNTIME_PPC_JUMP_LABEL(.L_803EAA4C, 0x803EAA4C) //this is a jump label
/*803EAA4C 003E784C*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EAA50 003E7850*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803EAA54 003E7854*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r30));
/*803EAA58 003E7858*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803EAA5C 003E785C*/ PPC::Runtime::ASM::bne(.L_803EAA70);
/*803EAA60 003E7860*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EAA64 003E7864*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAA68 003E7868*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803EAA6C 003E786C*/ PPC::Runtime::ASM::b(.L_803EAAF0);
RUNTIME_PPC_JUMP_LABEL(.L_803EAA70, 0x803EAA70) //this is a jump label
/*803EAA70 003E7870*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803EAA74 003E7874*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803EAA78 003E7878*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAA7C 003E787C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*803EAA80 003E7880*/ PPC::Runtime::ASM::bne(.L_803EAA94);
/*803EAA84 003E7884*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*803EAA88 003E7888*/ PPC::Runtime::ASM::bl(__EXIProbe);
/*803EAA8C 003E788C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803EAA90 003E7890*/ PPC::Runtime::ASM::bne(.L_803EAAA4);
RUNTIME_PPC_JUMP_LABEL(.L_803EAA94, 0x803EAA94) //this is a jump label
/*803EAA94 003E7894*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803EAA98 003E7898*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAA9C 003E789C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803EAAA0 003E78A0*/ PPC::Runtime::ASM::b(.L_803EAAE4);
RUNTIME_PPC_JUMP_LABEL(.L_803EAAA4, 0x803EAAA4) //this is a jump label
/*803EAAA4 003E78A4*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803EAAA8 003E78A8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*803EAAAC 003E78AC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803EAAB0 003E78B0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803EAAB4 003E78B4*/ PPC::Runtime::ASM::bl(EXIClearInterrupts);
/*803EAAB8 003E78B8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*803EAABC 003E78BC*/ PPC::Runtime::ASM::lis(context->r3, 0x10);
/*803EAAC0 003E78C0*/ PPC::Runtime::ASM::mulli(context->r0, context->r27, 0x3);
/*803EAAC4 003E78C4*/ PPC::Runtime::ASM::srw(context->r3, context->r3, context->r0);
/*803EAAC8 003E78C8*/ PPC::Runtime::ASM::bl(__OSUnmaskInterrupts);
/*803EAACC 003E78CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAAD0 003E78D0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x8);
/*803EAAD4 003E78D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*803EAAD8 003E78D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803EAADC 003E78DC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAAE0 003E78E0*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803EAAE4, 0x803EAAE4) //this is a jump label
/*803EAAE4 003E78E4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803EAAE8 003E78E8*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803EAAEC 003E78EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_803EAAF0, 0x803EAAF0) //this is a jump label
/*803EAAF0 003E78F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803EAAF4 003E78F4*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803EAAF8 003E78F8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*803EAAFC 003E78FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803EAB00 003E7900*/ PPC::Runtime::ASM::blr();
}