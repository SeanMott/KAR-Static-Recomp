//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025C038(PPC::Runtime::GCContext* context)
{
/*8025C038 00258E38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025C03C 00258E3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025C040 00258E40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C044 00258E44*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C048 00258E48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C04C 00258E4C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025C050 00258E50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025C054 00258E54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C058 00258E58*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025C05C 00258E5C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C060 00258E60*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C064 00258E64*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025C068 00258E68*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C06C 00258E6C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C070 00258E70*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025C074 00258E74*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C078 00258E78*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025C07C 00258E7C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C080 00258E80*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C084 00258E84*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025C088 00258E88*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C08C 00258E8C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025C090 00258E90*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025C094 00258E94*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C098 00258E98*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025C09C 00258E9C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C0A0 00258EA0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C0A4 00258EA4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025C0A8 00258EA8*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025C0AC 00258EAC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025C0B0 00258EB0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025C0B4 00258EB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C0B8 00258EB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C0BC 00258EBC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C0C0 00258EC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025C0C4 00258EC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025C0C8 00258EC8*/ PPC::Runtime::ASM::blr();
}