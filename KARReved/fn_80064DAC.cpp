//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80064DAC(PPC::Runtime::GCContext* context)
{
/*80064DAC 00061BAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80064DB0 00061BB0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEA50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80064DB4 00061BB4*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80064DB8 00061BB8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f3, context->f0);
/*80064DBC 00061BBC*/ PPC::Runtime::ASM::bge(.L_80064DC8);
/*80064DC0 00061BC0*/ PPC::Runtime::ASM::fneg(context->f1, context->f3);
/*80064DC4 00061BC4*/ PPC::Runtime::ASM::b(.L_80064DCC);
RUNTIME_PPC_JUMP_LABEL(.L_80064DC8, 0x80064DC8) //this is a jump label
/*80064DC8 00061BC8*/ PPC::Runtime::ASM::fmr(context->f1, context->f3);
RUNTIME_PPC_JUMP_LABEL(.L_80064DCC, 0x80064DCC) //this is a jump label
/*80064DCC 00061BCC*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80064DD0 00061BD0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEA50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80064DD4 00061BD4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f4, context->f0);
/*80064DD8 00061BD8*/ PPC::Runtime::ASM::bge(.L_80064DE4);
/*80064DDC 00061BDC*/ PPC::Runtime::ASM::fneg(context->f2, context->f4);
/*80064DE0 00061BE0*/ PPC::Runtime::ASM::b(.L_80064DE8);
RUNTIME_PPC_JUMP_LABEL(.L_80064DE4, 0x80064DE4) //this is a jump label
/*80064DE4 00061BE4*/ PPC::Runtime::ASM::fmr(context->f2, context->f4);
RUNTIME_PPC_JUMP_LABEL(.L_80064DE8, 0x80064DE8) //this is a jump label
/*80064DE8 00061BE8*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80064DEC 00061BEC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEA50 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80064DF0 00061BF0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f5, context->f0);
/*80064DF4 00061BF4*/ PPC::Runtime::ASM::bge(.L_80064E00);
/*80064DF8 00061BF8*/ PPC::Runtime::ASM::fneg(context->f0, context->f5);
/*80064DFC 00061BFC*/ PPC::Runtime::ASM::b(.L_80064E04);
RUNTIME_PPC_JUMP_LABEL(.L_80064E00, 0x80064E00) //this is a jump label
/*80064E00 00061C00*/ PPC::Runtime::ASM::fmr(context->f0, context->f5);
RUNTIME_PPC_JUMP_LABEL(.L_80064E04, 0x80064E04) //this is a jump label
/*80064E04 00061C04*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f2);
/*80064E08 00061C08*/ PPC::Runtime::ASM::ble(.L_80064E3C);
/*80064E0C 00061C0C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80064E10 00061C10*/ PPC::Runtime::ASM::ble(.L_80064E28);
/*80064E14 00061C14*/ PPC::Runtime::ASM::fneg(context->f0, context->f3);
/*80064E18 00061C18*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80064E1C 00061C1C*/ PPC::Runtime::ASM::stfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80064E20 00061C20*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80064E24 00061C24*/ PPC::Runtime::ASM::b(.L_80064E68);
RUNTIME_PPC_JUMP_LABEL(.L_80064E28, 0x80064E28) //this is a jump label
/*80064E28 00061C28*/ PPC::Runtime::ASM::fneg(context->f0, context->f5);
/*80064E2C 00061C2C*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80064E30 00061C30*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80064E34 00061C34*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80064E38 00061C38*/ PPC::Runtime::ASM::b(.L_80064E68);
RUNTIME_PPC_JUMP_LABEL(.L_80064E3C, 0x80064E3C) //this is a jump label
/*80064E3C 00061C3C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f0);
/*80064E40 00061C40*/ PPC::Runtime::ASM::ble(.L_80064E58);
/*80064E44 00061C44*/ PPC::Runtime::ASM::fneg(context->f0, context->f4);
/*80064E48 00061C48*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80064E4C 00061C4C*/ PPC::Runtime::ASM::stfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80064E50 00061C50*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80064E54 00061C54*/ PPC::Runtime::ASM::b(.L_80064E68);
RUNTIME_PPC_JUMP_LABEL(.L_80064E58, 0x80064E58) //this is a jump label
/*80064E58 00061C58*/ PPC::Runtime::ASM::fneg(context->f0, context->f5);
/*80064E5C 00061C5C*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80064E60 00061C60*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80064E64 00061C64*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_80064E68, 0x80064E68) //this is a jump label
/*80064E68 00061C68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80064E6C 00061C6C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80064E70 00061C70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*80064E74 00061C74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80064E78 00061C78*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*80064E7C 00061C7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80064E80 00061C80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80064E84 00061C84*/ PPC::Runtime::ASM::blr();
}