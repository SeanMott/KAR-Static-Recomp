//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___GXSetSUTexRegs.hpp"
#include "fn___GXUpdateBPMask.hpp"
#include "fn___GXSetGenMode.hpp"
#include "fn_803CA848.hpp"
#include "fn___GXSetVAT.hpp"
#include "fn___GXCalculateVLim.hpp"
#include "fn___GXSendFlushPrim.hpp"



void fn_GXBegin(PPC::Runtime::GCContext* context)
{
/*803CC2B4 003C90B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803CC2B8 003C90B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803CC2BC 003C90BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803CC2C0 003C90C0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803CC2C4 003C90C4*/ PPC::Runtime::ASM::addi(context->r31, context->r5, 0x0);
/*803CC2C8 003C90C8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803CC2CC 003C90CC*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*803CC2D0 003C90D0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803CC2D4 003C90D4*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803CC2D8 003C90D8*/ PPC::Runtime::ASM::lwz(context->r6, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC2DC 003C90DC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r6));
/*803CC2E0 003C90E0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803CC2E4 003C90E4*/ PPC::Runtime::ASM::beq(.L_803CC364);
/* 803CC2E8 003C90E8  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803CC2EC 003C90EC*/ PPC::Runtime::ASM::beq(.L_803CC2F4);
/*803CC2F0 003C90F0*/ PPC::Runtime::ASM::bl(fn___GXSetSUTexRegs);
RUNTIME_PPC_JUMP_LABEL(.L_803CC2F4, 0x803CC2F4) //this is a jump label
/*803CC2F4 003C90F4*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC2F8 003C90F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
/*803CC2FC 003C90FC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 30, 30);
/*803CC300 003C9100*/ PPC::Runtime::ASM::beq(.L_803CC308);
/*803CC304 003C9104*/ PPC::Runtime::ASM::bl(fn___GXUpdateBPMask);
RUNTIME_PPC_JUMP_LABEL(.L_803CC308, 0x803CC308) //this is a jump label
/*803CC308 003C9108*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC30C 003C910C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
/*803CC310 003C9110*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 29, 29);
/*803CC314 003C9114*/ PPC::Runtime::ASM::beq(.L_803CC31C);
/*803CC318 003C9118*/ PPC::Runtime::ASM::bl(fn___GXSetGenMode);
RUNTIME_PPC_JUMP_LABEL(.L_803CC31C, 0x803CC31C) //this is a jump label
/*803CC31C 003C911C*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC320 003C9120*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
/*803CC324 003C9124*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*803CC328 003C9128*/ PPC::Runtime::ASM::beq(.L_803CC330);
/*803CC32C 003C912C*/ PPC::Runtime::ASM::bl(fn_803CA848);
RUNTIME_PPC_JUMP_LABEL(.L_803CC330, 0x803CC330) //this is a jump label
/*803CC330 003C9130*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC334 003C9134*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
/*803CC338 003C9138*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 27);
/*803CC33C 003C913C*/ PPC::Runtime::ASM::beq(.L_803CC344);
/*803CC340 003C9140*/ PPC::Runtime::ASM::bl(fn___GXSetVAT);
RUNTIME_PPC_JUMP_LABEL(.L_803CC344, 0x803CC344) //this is a jump label
/*803CC344 003C9144*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC348 003C9148*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
/*803CC34C 003C914C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 27, 28);
/*803CC350 003C9150*/ PPC::Runtime::ASM::beq(.L_803CC358);
/*803CC354 003C9154*/ PPC::Runtime::ASM::bl(fn___GXCalculateVLim);
RUNTIME_PPC_JUMP_LABEL(.L_803CC358, 0x803CC358) //this is a jump label
/*803CC358 003C9158*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC35C 003C915C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CC360 003C9160*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f4, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803CC364, 0x803CC364) //this is a jump label
/*803CC364 003C9164*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC368 003C9168*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803CC36C 003C916C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803CC370 003C9170*/ PPC::Runtime::ASM::bne(.L_803CC378);
/*803CC374 003C9174*/ PPC::Runtime::ASM::bl(fn___GXSendFlushPrim);
RUNTIME_PPC_JUMP_LABEL(.L_803CC378, 0x803CC378) //this is a jump label
/*803CC378 003C9178*/ PPC::Runtime::ASM::or(context->r0, context->r30, context->r29);
/*803CC37C 003C917C*/ PPC::Runtime::ASM::lis(context->r3, 0xcc01);
/*803CC380 003C9180*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CC384 003C9184*/ PPC::Runtime::ASM::sth(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r3));
/*803CC388 003C9188*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803CC38C 003C918C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803CC390 003C9190*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803CC394 003C9194*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803CC398 003C9198*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803CC39C 003C919C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803CC3A0 003C91A0*/ PPC::Runtime::ASM::blr();
}