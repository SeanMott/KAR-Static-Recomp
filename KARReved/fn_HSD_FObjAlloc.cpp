//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_ObjAlloc.hpp"
#include "fn___assert.hpp"
#include "memset.hpp"



void fn_HSD_FObjAlloc(PPC::Runtime::GCContext* context)
{
/*80405294 00402094*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80405298 00402098*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040529C 0040209C*/ PPC::Runtime::ASM::lis(context->r3, lbl_805899D8 @ Get_MemoryOffset_HighBit);
/*804052A0 004020A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804052A4 004020A4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805899D8 @ Get_MemoryOffset_LowBit);
/*804052A8 004020A8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804052AC 004020AC*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 804052B0 004020B0  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*804052B4 004020B4*/ PPC::Runtime::ASM::bne(.L_804052C8);
/*804052B8 004020B8*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_537 @ Get_MemoryOffset_SDA21);
/*804052BC 004020BC*/ PPC::Runtime::ASM::li(context->r4, 0x302);
/*804052C0 004020C0*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_536 @ Get_MemoryOffset_SDA21);
/*804052C4 004020C4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804052C8, 0x804052C8) //this is a jump label
/*804052C8 004020C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*804052CC 004020CC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*804052D0 004020D0*/ PPC::Runtime::ASM::li(context->r5, 0x30);
/*804052D4 004020D4*/ PPC::Runtime::ASM::bl(memset);
/*804052D8 004020D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804052DC 004020DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*804052E0 004020E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*804052E4 004020E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804052E8 004020E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*804052EC 004020EC*/ PPC::Runtime::ASM::blr();
}