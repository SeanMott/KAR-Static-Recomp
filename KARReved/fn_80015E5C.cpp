//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80015E5C(PPC::Runtime::GCContext* context)
{
/*80015E5C 00012C5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80015E60 00012C60*/ PPC::Runtime::ASM::mflr(context->r0);
/*80015E64 00012C64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015E68 00012C68*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80015E6C 00012C6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015E70 00012C70*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3a, context->r3));
/*80015E74 00012C74*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80015E78 00012C78*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80015E7C 00012C7C*/ PPC::Runtime::ASM::blr();
}