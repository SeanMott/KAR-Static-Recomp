//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803878E4.hpp"



void fn_80386DAC(PPC::Runtime::GCContext* context)
{
/*80386DAC 00383BAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80386DB0 00383BB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80386DB4 00383BB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80386DB8 00383BB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80386DBC 00383BBC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80386DC0 00383BC0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 80386DC4 00383BC4  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80386DC8 00383BC8*/ PPC::Runtime::ASM::beq(.L_80386E14);
/*80386DCC 00383BCC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F4BC8 @ Get_MemoryOffset_HighBit);
/*80386DD0 00383BD0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F4BC8 @ Get_MemoryOffset_LowBit);
/*80386DD4 00383BD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80386DD8 00383BD8*/ PPC::Runtime::ASM::beq(.L_80386E04);
/*80386DDC 00383BDC*/ PPC::Runtime::ASM::lis(context->r3, lbl_804F4BD4 @ Get_MemoryOffset_HighBit);
/*80386DE0 00383BE0*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*80386DE4 00383BE4*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804F4BD4 @ Get_MemoryOffset_LowBit);
/*80386DE8 00383BE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80386DEC 00383BEC*/ PPC::Runtime::ASM::beq(.L_80386E04);
/*80386DF0 00383BF0*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*80386DF4 00383BF4*/ PPC::Runtime::ASM::beq(.L_80386E04);
/*80386DF8 00383BF8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8);
/*80386DFC 00383BFC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80386E00 00383C00*/ PPC::Runtime::ASM::bl(fn_803878E4);
RUNTIME_PPC_JUMP_LABEL(.L_80386E04, 0x80386E04) //this is a jump label
/*80386E04 00383C04*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*80386E08 00383C08*/ PPC::Runtime::ASM::ble(.L_80386E14);
/*80386E0C 00383C0C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80386E10 00383C10*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80386E14, 0x80386E14) //this is a jump label
/*80386E14 00383C14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80386E18 00383C18*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80386E1C 00383C1C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80386E20 00383C20*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80386E24 00383C24*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80386E28 00383C28*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80386E2C 00383C2C*/ PPC::Runtime::ASM::blr();
}