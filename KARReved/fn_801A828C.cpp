//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191798.hpp"
#include "fn_firecrackerGet.hpp"



void fn_801A828C(PPC::Runtime::GCContext* context)
{
/*801A828C 001A508C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A8290 001A5090*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A8294 001A5094*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A8298 001A5098*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A829C 001A509C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801A82A0 001A50A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A82A4 001A50A4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A82A8 001A50A8*/ PPC::Runtime::ASM::bl(fn_80191798);
/*801A82AC 001A50AC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A82B0 001A50B0*/ PPC::Runtime::ASM::beq(.L_801A82D8);
/*801A82B4 001A50B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x458, context->r30));
/*801A82B8 001A50B8*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*801A82BC 001A50BC*/ PPC::Runtime::ASM::bne(.L_801A82E8);
/*801A82C0 001A50C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x460, context->r30));
/*801A82C4 001A50C4*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*801A82C8 001A50C8*/ PPC::Runtime::ASM::bne(.L_801A82E8);
/*801A82CC 001A50CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x460, context->r30));
/*801A82D0 001A50D0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801A82D4 001A50D4*/ PPC::Runtime::ASM::b(.L_801A82EC);
RUNTIME_PPC_JUMP_LABEL(.L_801A82D8, 0x801A82D8) //this is a jump label
/*801A82D8 001A50D8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A82DC 001A50DC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801A82E0 001A50E0*/ PPC::Runtime::ASM::bl(fn_firecrackerGet);
/*801A82E4 001A50E4*/ PPC::Runtime::ASM::b(.L_801A82EC);
RUNTIME_PPC_JUMP_LABEL(.L_801A82E8, 0x801A82E8) //this is a jump label
/*801A82E8 001A50E8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801A82EC, 0x801A82EC) //this is a jump label
/*801A82EC 001A50EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A82F0 001A50F0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A82F4 001A50F4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A82F8 001A50F8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A82FC 001A50FC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A8300 001A5100*/ PPC::Runtime::ASM::blr();
}