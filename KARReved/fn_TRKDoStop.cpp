//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_TRKTargetStop.hpp"
#include "memset.hpp"
#include "fn_803C2388.hpp"



void fn_TRKDoStop(PPC::Runtime::GCContext* context)
{
/*803BE8CC 003BB6CC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*803BE8D0 003BB6D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*803BE8D4 003BB6D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*803BE8D8 003BB6D8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*803BE8DC 003BB6DC*/ PPC::Runtime::ASM::bl(fn_TRKTargetStop);
/*803BE8E0 003BB6E0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x704);
/*803BE8E4 003BB6E4*/ PPC::Runtime::ASM::beq(.L_803BE910);
/*803BE8E8 003BB6E8*/ PPC::Runtime::ASM::bge(.L_803BE8F8);
/*803BE8EC 003BB6EC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803BE8F0 003BB6F0*/ PPC::Runtime::ASM::beq(.L_803BE908);
/*803BE8F4 003BB6F4*/ PPC::Runtime::ASM::b(.L_803BE928);
RUNTIME_PPC_JUMP_LABEL(.L_803BE8F8, 0x803BE8F8) //this is a jump label
/*803BE8F8 003BB6F8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x706);
/*803BE8FC 003BB6FC*/ PPC::Runtime::ASM::beq(.L_803BE920);
/*803BE900 003BB700*/ PPC::Runtime::ASM::bge(.L_803BE928);
/*803BE904 003BB704*/ PPC::Runtime::ASM::b(.L_803BE918);
RUNTIME_PPC_JUMP_LABEL(.L_803BE908, 0x803BE908) //this is a jump label
/*803BE908 003BB708*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*803BE90C 003BB70C*/ PPC::Runtime::ASM::b(.L_803BE92C);
RUNTIME_PPC_JUMP_LABEL(.L_803BE910, 0x803BE910) //this is a jump label
/*803BE910 003BB710*/ PPC::Runtime::ASM::li(context->r31, 0x21);
/*803BE914 003BB714*/ PPC::Runtime::ASM::b(.L_803BE92C);
RUNTIME_PPC_JUMP_LABEL(.L_803BE918, 0x803BE918) //this is a jump label
/*803BE918 003BB718*/ PPC::Runtime::ASM::li(context->r31, 0x22);
/*803BE91C 003BB71C*/ PPC::Runtime::ASM::b(.L_803BE92C);
RUNTIME_PPC_JUMP_LABEL(.L_803BE920, 0x803BE920) //this is a jump label
/*803BE920 003BB720*/ PPC::Runtime::ASM::li(context->r31, 0x20);
/*803BE924 003BB724*/ PPC::Runtime::ASM::b(.L_803BE92C);
RUNTIME_PPC_JUMP_LABEL(.L_803BE928, 0x803BE928) //this is a jump label
/*803BE928 003BB728*/ PPC::Runtime::ASM::li(context->r31, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803BE92C, 0x803BE92C) //this is a jump label
/*803BE92C 003BB72C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803BE930 003BB730*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803BE934 003BB734*/ PPC::Runtime::ASM::li(context->r5, 0x40);
/*803BE938 003BB738*/ PPC::Runtime::ASM::bl(memset);
/*803BE93C 003BB73C*/ PPC::Runtime::ASM::li(context->r3, 0x80);
/*803BE940 003BB740*/ PPC::Runtime::ASM::li(context->r0, 0x40);
/*803BE944 003BB744*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803BE948 003BB748*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*803BE94C 003BB74C*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*803BE950 003BB750*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*803BE954 003BB754*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803BE958 003BB758*/ PPC::Runtime::ASM::bl(fn_803C2388);
/*803BE95C 003BB75C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*803BE960 003BB760*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803BE964 003BB764*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*803BE968 003BB768*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803BE96C 003BB76C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*803BE970 003BB770*/ PPC::Runtime::ASM::blr();
}