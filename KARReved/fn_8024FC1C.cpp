//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_AsyncImage_FreeLoadBuffer_TakeNoParams.hpp"
#include "fn_80252248.hpp"
#include "fn_8025603C.hpp"
#include "fn_8025699C.hpp"
#include "fn_80254404.hpp"



void fn_8024FC1C(PPC::Runtime::GCContext* context)
{
/*8024FC1C 0024CA1C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8024FC20 0024CA20*/ PPC::Runtime::ASM::mflr(context->r0);
/*8024FC24 0024CA24*/ PPC::Runtime::ASM::lis(context->r4, lbl_8055DD00 @ Get_MemoryOffset_HighBit);
/*8024FC28 0024CA28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8024FC2C 0024CA2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8024FC30 0024CA30*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_8055DD00 @ Get_MemoryOffset_LowBit);
/*8024FC34 0024CA34*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8024FC38 0024CA38*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8024FC3C 0024CA3C*/ PPC::Runtime::ASM::bl(fn_AsyncImage_FreeLoadBuffer_TakeNoParams);
/*8024FC40 0024CA40*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024FC44 0024CA44*/ PPC::Runtime::ASM::bl(fn_80252248);
/*8024FC48 0024CA48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8024FC4C 0024CA4C*/ PPC::Runtime::ASM::bl(fn_8025603C);
/*8024FC50 0024CA50*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024FC54 0024CA54*/ PPC::Runtime::ASM::bl(fn_8025699C);
/*8024FC58 0024CA58*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r30));
/*8024FC5C 0024CA5C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B6088 @ Get_MemoryOffset_HighBit);
/*8024FC60 0024CA60*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B6088 @ Get_MemoryOffset_LowBit);
/*8024FC64 0024CA64*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8024FC68 0024CA68*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*8024FC6C 0024CA6C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8024FC70 0024CA70*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*8024FC74 0024CA74*/ PPC::Runtime::ASM::beq(.L_8024FC84);
/*8024FC78 0024CA78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8024FC7C 0024CA7C*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8024FC80 0024CA80*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8024FC84, 0x8024FC84) //this is a jump label
/*8024FC84 0024CA84*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8024FC88 0024CA88*/ PPC::Runtime::ASM::bl(fn_80254404);
/*8024FC8C 0024CA8C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r30));
/*8024FC90 0024CA90*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x58);
/*8024FC94 0024CA94*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8024FC98 0024CA98*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r30));
/*8024FC9C 0024CA9C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x84);
/*8024FCA0 0024CAA0*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8024FCA4 0024CAA4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r30));
/*8024FCA8 0024CAA8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xb0);
/*8024FCAC 0024CAAC*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8024FCB0 0024CAB0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r30));
/*8024FCB4 0024CAB4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xdc);
/*8024FCB8 0024CAB8*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8024FCBC 0024CABC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8024FCC0 0024CAC0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x2c);
/*8024FCC4 0024CAC4*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*8024FCC8 0024CAC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8024FCCC 0024CACC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8024FCD0 0024CAD0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8024FCD4 0024CAD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8024FCD8 0024CAD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8024FCDC 0024CADC*/ PPC::Runtime::ASM::blr();
}