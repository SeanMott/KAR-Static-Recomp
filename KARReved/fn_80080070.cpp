//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007E500.hpp"



void fn_80080070(PPC::Runtime::GCContext* context)
{
/*80080070 0007CE70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80080074 0007CE74*/ PPC::Runtime::ASM::mflr(context->r0);
/*80080078 0007CE78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8008007C 0007CE7C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80080080 0007CE80*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80080084 0007CE84*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80080088 0007CE88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8008008C 0007CE8C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xa6c);
/*80080090 0007CE90*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*80080094 0007CE94*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEE14 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80080098 0007CE98*/ PPC::Runtime::ASM::fcmpu(cr0, context->f1, context->f0);
/*8008009C 0007CE9C*/ PPC::Runtime::ASM::beq(.L_800800D0);
/*800800A0 0007CEA0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DEE18 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800800A4 0007CEA4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa6c, context->r31));
/*800800A8 0007CEA8*/ PPC::Runtime::ASM::fdivs(context->f1, context->f0, context->f1);
/*800800AC 0007CEAC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f1);
/*800800B0 0007CEB0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800800B4 0007CEB4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa70, context->r31));
/*800800B8 0007CEB8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*800800BC 0007CEBC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800800C0 0007CEC0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa74, context->r31));
/*800800C4 0007CEC4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*800800C8 0007CEC8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800800CC 0007CECC*/ PPC::Runtime::ASM::b(.L_800800DC);
RUNTIME_PPC_JUMP_LABEL(.L_800800D0, 0x800800D0) //this is a jump label
/*800800D0 0007CED0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800800D4 0007CED4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800800D8 0007CED8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_800800DC, 0x800800DC) //this is a jump label
/*800800DC 0007CEDC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800800E0 0007CEE0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x300);
/*800800E4 0007CEE4*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800800E8 0007CEE8*/ PPC::Runtime::ASM::bl(fn_8007E500);
/*800800EC 0007CEEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800800F0 0007CEF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800800F4 0007CEF4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800800F8 0007CEF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800800FC 0007CEFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80080100 0007CF00*/ PPC::Runtime::ASM::blr();
}