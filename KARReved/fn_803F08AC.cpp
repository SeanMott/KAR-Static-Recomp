//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_803EFFF0.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_803F08AC(PPC::Runtime::GCContext* context)
{
/*803F08AC 003ED6AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F08B0 003ED6B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803F08B4 003ED6B4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803F08B8 003ED6B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F08BC 003ED6BC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803F08C0 003ED6C0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803F08C4 003ED6C4*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803F08C8 003ED6C8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803F08CC 003ED6CC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x13c, context->r31));
/*803F08D0 003ED6D0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803F08D4 003ED6D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803F08D8 003ED6D8*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r31));
/*803F08DC 003ED6DC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x148, context->r31));
/*803F08E0 003ED6E0*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r31));
/*803F08E4 003ED6E4*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14c, context->r31));
/*803F08E8 003ED6E8*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x150, context->r31));
/*803F08EC 003ED6EC*/ PPC::Runtime::ASM::bl(fn_803EFFF0);
/*803F08F0 003ED6F0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*803F08F4 003ED6F4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803F08F8 003ED6F8*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803F08FC 003ED6FC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803F0900 003ED700*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803F0904 003ED704*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803F0908 003ED708*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803F090C 003ED70C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803F0910 003ED710*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F0914 003ED714*/ PPC::Runtime::ASM::blr();
}