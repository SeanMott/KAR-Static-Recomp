//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_sAObjAnimeAll(PPC::Runtime::GCContext* context)
{
/*80054904 00051704*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80054908 00051708*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005490C 0005170C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80054910 00051710*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80054914 00051714*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80054918 00051718*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8005491C 0005171C*/ PPC::Runtime::ASM::andi.(context->r0, context->r0, 0x4020);
/*80054920 00051720*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/* 80054924 00051724  54 00 D9 7F */ srwi. context->r0 , context->r0 , 5
/*80054928 00051728*/ PPC::Runtime::ASM::bne(.L_80054944);
/*8005492C 0005172C*/ PPC::Runtime::ASM::lis(context->r3, String_ "lbairride." Get_MemoryOffset_HighBit);
/*80054930 00051730*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_182 @ Get_MemoryOffset_HighBit);
/*80054934 00051734*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "lbairride." Get_MemoryOffset_LowBit);
/*80054938 00051738*/ PPC::Runtime::ASM::li(context->r4, 0x1b8);
/*8005493C 0005173C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_182 @ Get_MemoryOffset_LowBit);
/*80054940 00051740*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80054944, 0x80054944) //this is a jump label
/*80054944 00051744*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*80054948 00051748*/ PPC::Runtime::ASM::b(.L_80054980);
RUNTIME_PPC_JUMP_LABEL(.L_8005494C, 0x8005494C) //this is a jump label
/*8005494C 0005174C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80054950 00051750*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80054954 00051754*/ PPC::Runtime::ASM::beq(.L_8005497C);
/*80054958 00051758*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8005495C 0005175C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80054960 00051760*/ PPC::Runtime::ASM::beq(.L_8005497C);
/*80054964 00051764*/ PPC::Runtime::ASM::beq(.L_8005497C);
/*80054968 00051768*/ PPC::Runtime::ASM::bl(fn_HSD_AObjGetFlags);
/*8005496C 0005176C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r3, 0, 1, 1);
/*80054970 00051770*/ PPC::Runtime::ASM::bne(.L_8005497C);
/*80054974 00051774*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80054978 00051778*/ PPC::Runtime::ASM::b(.L_8005498C);
RUNTIME_PPC_JUMP_LABEL(.L_8005497C, 0x8005497C) //this is a jump label
/*8005497C 0005177C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80054980, 0x80054980) //this is a jump label
/*80054980 00051780*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80054984 00051784*/ PPC::Runtime::ASM::bne(.L_8005494C);
/*80054988 00051788*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8005498C, 0x8005498C) //this is a jump label
/*8005498C 0005178C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80054990 00051790*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80054994 00051794*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80054998 00051798*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005499C 0005179C*/ PPC::Runtime::ASM::blr();
}