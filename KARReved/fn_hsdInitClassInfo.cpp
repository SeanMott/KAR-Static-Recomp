//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "memcpy.hpp"



void fn_hsdInitClassInfo(PPC::Runtime::GCContext* context)
{
/*80420540 0041D340*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80420544 0041D344*/ PPC::Runtime::ASM::mflr(context->r0);
/*80420548 0041D348*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8042054C 0041D34C*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80420550 0041D350*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80420554 0041D354  7C 9F 23 79 */ mr. context->r31 , context->r4
/*80420558 0041D358*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8042055C 0041D35C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80420560 0041D360*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80420564 0041D364*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80420568 0041D368*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*8042056C 0041D36C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80420570 0041D370*/ PPC::Runtime::ASM::sth(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80420574 0041D374*/ PPC::Runtime::ASM::sth(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r3));
/*80420578 0041D378*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8042057C 0041D37C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*80420580 0041D380*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*80420584 0041D384*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*80420588 0041D388*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*8042058C 0041D38C*/ PPC::Runtime::ASM::beq(.L_80420610);
/*80420590 0041D390*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/* 80420594 0041D394  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*80420598 0041D398*/ PPC::Runtime::ASM::bne(.L_804205A8);
/*8042059C 0041D39C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*804205A0 0041D3A0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*804205A4 0041D3A4*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_804205A8, 0x804205A8) //this is a jump label
/*804205A8 0041D3A8*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*804205AC 0041D3AC*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*804205B0 0041D3B0*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*804205B4 0041D3B4*/ PPC::Runtime::ASM::bge(.L_804205CC);
/*804205B8 0041D3B8*/ PPC::Runtime::ASM::lis(context->r4, String_ "class_infoPtr_head.obj_size_GreaterThenOrEqual_parent_infoPtr_head_obj_siz" Get_MemoryOffset_HighBit);
/*804205BC 0041D3BC*/ PPC::Runtime::ASM::li(context->r3, String_ "class." Get_MemoryOffset_SDA21);
/*804205C0 0041D3C0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, String_ "class_infoPtr_head.obj_size_GreaterThenOrEqual_parent_infoPtr_head_obj_siz" Get_MemoryOffset_LowBit);
/*804205C4 0041D3C4*/ PPC::Runtime::ASM::li(context->r4, 0x5f);
/*804205C8 0041D3C8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804205CC, 0x804205CC) //this is a jump label
/*804205CC 0041D3CC*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r30));
/*804205D0 0041D3D0*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r31));
/*804205D4 0041D3D4*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*804205D8 0041D3D8*/ PPC::Runtime::ASM::bge(.L_804205F0);
/*804205DC 0041D3DC*/ PPC::Runtime::ASM::lis(context->r4, lbl_8050481C @ Get_MemoryOffset_HighBit);
/*804205E0 0041D3E0*/ PPC::Runtime::ASM::li(context->r3, String_ "class." Get_MemoryOffset_SDA21);
/*804205E4 0041D3E4*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_8050481C @ Get_MemoryOffset_LowBit);
/*804205E8 0041D3E8*/ PPC::Runtime::ASM::li(context->r4, 0x60);
/*804205EC 0041D3EC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_804205F0, 0x804205F0) //this is a jump label
/*804205F0 0041D3F0*/ PPC::Runtime::ASM::lha(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x12, context->r31));
/*804205F4 0041D3F4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x28);
/*804205F8 0041D3F8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x28);
/*804205FC 0041D3FC*/ PPC::Runtime::ASM::subi(context->r5, context->r5, 0x28);
/*80420600 0041D400*/ PPC::Runtime::ASM::bl(memcpy);
/*80420604 0041D404*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*80420608 0041D408*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*8042060C 0041D40C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80420610, 0x80420610) //this is a jump label
/*80420610 0041D410*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80420614 0041D414*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80420618 0041D418*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8042061C 0041D41C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80420620 0041D420*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80420624 0041D424*/ PPC::Runtime::ASM::blr();
}