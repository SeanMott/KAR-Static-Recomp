//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191980.hpp"
#include "fn_801C05F8.hpp"



void fn_801C05A8(PPC::Runtime::GCContext* context)
{
/*801C05A8 001BD3A8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801C05AC 001BD3AC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C05B0 001BD3B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801C05B4 001BD3B4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801C05B8 001BD3B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801C05BC 001BD3BC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C05C0 001BD3C0*/ PPC::Runtime::ASM::bl(fn_80191980);
/*801C05C4 001BD3C4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C05C8 001BD3C8*/ PPC::Runtime::ASM::beq(.L_801C05E0);
/*801C05CC 001BD3CC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801C05D0 001BD3D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C05D4 001BD3D4*/ PPC::Runtime::ASM::bl(fn_801C05F8);
/*801C05D8 001BD3D8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801C05DC 001BD3DC*/ PPC::Runtime::ASM::b(.L_801C05E4);
RUNTIME_PPC_JUMP_LABEL(.L_801C05E0, 0x801C05E0) //this is a jump label
/*801C05E0 001BD3E0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801C05E4, 0x801C05E4) //this is a jump label
/*801C05E4 001BD3E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801C05E8 001BD3E8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801C05EC 001BD3EC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C05F0 001BD3F0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801C05F4 001BD3F4*/ PPC::Runtime::ASM::blr();
}