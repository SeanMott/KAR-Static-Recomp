//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D8C80.hpp"
#include "fn_80236C40.hpp"



void fn_800FC740(PPC::Runtime::GCContext* context)
{
/*800FC740 000F9540*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*800FC744 000F9544*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FC748 000F9548*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800FC74C 000F954C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800FC750 000F9550*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800FC754 000F9554*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*800FC758 000F9558*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800FC75C 000F955C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800FC760 000F9560*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800FC764 000F9564*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FC768 000F9568*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*800FC76C 000F956C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800FC770 000F9570*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FC774 000F9574*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FC778 000F9578*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800FC77C 000F957C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FC780 000F9580*/ PPC::Runtime::ASM::lwzx(context->r28, context->r4, context->r0);
/*800FC784 000F9584*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800FC788 000F9588*/ PPC::Runtime::ASM::bne(.L_800FC79C);
/*800FC78C 000F958C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6250 @ Get_MemoryOffset_SDA21);
/*800FC790 000F9590*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*800FC794 000F9594*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6258 @ Get_MemoryOffset_SDA21);
/*800FC798 000F9598*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FC79C, 0x800FC79C) //this is a jump label
/*800FC79C 000F959C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r28));
/*800FC7A0 000F95A0*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800FC7A4 000F95A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r28));
/*800FC7A8 000F95A8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FC7AC 000F95AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FC7B0 000F95B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r28));
/*800FC7B4 000F95B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800FC7B8 000F95B8*/ PPC::Runtime::ASM::bne(.L_800FC7CC);
/*800FC7BC 000F95BC*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6250 @ Get_MemoryOffset_SDA21);
/*800FC7C0 000F95C0*/ PPC::Runtime::ASM::li(context->r4, 0x2dd);
/*800FC7C4 000F95C4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6258 @ Get_MemoryOffset_SDA21);
/*800FC7C8 000F95C8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FC7CC, 0x800FC7CC) //this is a jump label
/*800FC7CC 000F95CC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r28));
/*800FC7D0 000F95D0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x2c);
/*800FC7D4 000F95D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r28));
/*800FC7D8 000F95D8*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800FC7DC 000F95DC*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800FC7E0 000F95E0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800FC7E4 000F95E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*800FC7E8 000F95E8*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r28));
/*800FC7EC 000F95EC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r28));
/*800FC7F0 000F95F0*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FC7F4 000F95F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*800FC7F8 000F95F8*/ PPC::Runtime::ASM::bl(fn_800D8C80);
/*800FC7FC 000F95FC*/ PPC::Runtime::ASM::lis(context->r4, 0x6);
/*800FC800 000F9600*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r31));
/*800FC804 000F9604*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800FC808 000F9608*/ PPC::Runtime::ASM::mr(context->r10, context->r30);
/*800FC80C 000F960C*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x5a5c);
/*800FC810 000F9610*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x20);
/*800FC814 000F9614*/ PPC::Runtime::ASM::addi(context->r8, context->r1, 0x8);
/*800FC818 000F9618*/ PPC::Runtime::ASM::addi(context->r9, context->r1, 0x14);
/*800FC81C 000F961C*/ PPC::Runtime::ASM::li(context->r6, 0x6e);
/*800FC820 000F9620*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800FC824 000F9624*/ PPC::Runtime::ASM::bl(fn_80236C40);
/*800FC828 000F9628*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*800FC82C 000F962C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*800FC830 000F9630*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*800FC834 000F9634*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*800FC838 000F9638*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*800FC83C 000F963C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FC840 000F9640*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*800FC844 000F9644*/ PPC::Runtime::ASM::blr();
}