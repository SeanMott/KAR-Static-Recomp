//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DDA60.hpp"
#include "fn_8006BA28.hpp"
#include "fn_8006BA28.hpp"
#include "fn_8024AC68.hpp"
#include "fn_8006F93C.hpp"
#include "fn_800DDAEC.hpp"
#include "fn_800DDC38.hpp"



void fn_800DFBC4(PPC::Runtime::GCContext* context)
{
/*800DFBC4 000DC9C4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*800DFBC8 000DC9C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DFBCC 000DC9CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800DFBD0 000DC9D0*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*800DFBD4 000DC9D4*/ PPC::Runtime::ASM::bl(_savegpr_20);
/*800DFBD8 000DC9D8*/ PPC::Runtime::ASM::mr(context->r21, context->r3);
/*800DFBDC 000DC9DC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800DFBE0 000DC9E0*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r21));
/*800DFBE4 000DC9E4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_941 @ Get_MemoryOffset_HighBit);
/*800DFBE8 000DC9E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r3));
/*800DFBEC 000DC9EC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, MemoryOffset_941 @ Get_MemoryOffset_LowBit);
/*800DFBF0 000DC9F0*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*800DFBF4 000DC9F4*/ PPC::Runtime::ASM::li(context->r23, 0x0);
/*800DFBF8 000DC9F8*/ PPC::Runtime::ASM::li(context->r22, 0x0);
/*800DFBFC 000DC9FC*/ PPC::Runtime::ASM::beq(.L_800DFE28);
/*800DFC00 000DCA00*/ PPC::Runtime::ASM::lwz(context->r25, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800DFC04 000DCA04*/ PPC::Runtime::ASM::li(context->r27, 0x0);
/*800DFC08 000DCA08*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800DFC0C 000DCA0C*/ PPC::Runtime::ASM::b(.L_800DFC80);
RUNTIME_PPC_JUMP_LABEL(.L_800DFC10, 0x800DFC10) //this is a jump label
/*800DFC10 000DCA10*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r21));
/*800DFC14 000DCA14*/ PPC::Runtime::ASM::cmplwi(context->r24, 0x0);
/*800DFC18 000DCA18*/ PPC::Runtime::ASM::bne(.L_800DFC2C);
/*800DFC1C 000DCA1C*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*800DFC20 000DCA20*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x218);
/*800DFC24 000DCA24*/ PPC::Runtime::ASM::li(context->r4, 0x225);
/*800DFC28 000DCA28*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DFC2C, 0x800DFC2C) //this is a jump label
/*800DFC2C 000DCA2C*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*800DFC30 000DCA30*/ PPC::Runtime::ASM::lwz(context->r20, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r24));
/*800DFC34 000DCA34*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800DFC38 000DCA38*/ PPC::Runtime::ASM::blt(.L_800DFC4C);
/*800DFC3C 000DCA3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r20));
/*800DFC40 000DCA40*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800DFC44 000DCA44*/ PPC::Runtime::ASM::bge(.L_800DFC4C);
/*800DFC48 000DCA48*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DFC4C, 0x800DFC4C) //this is a jump label
/*800DFC4C 000DCA4C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800DFC50 000DCA50*/ PPC::Runtime::ASM::bne(.L_800DFC64);
/*800DFC54 000DCA54*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4c);
/*800DFC58 000DCA58*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x58);
/*800DFC5C 000DCA5C*/ PPC::Runtime::ASM::li(context->r4, 0xb8);
/*800DFC60 000DCA60*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DFC64, 0x800DFC64) //this is a jump label
/*800DFC64 000DCA64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r20));
/*800DFC68 000DCA68*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x1);
/*800DFC6C 000DCA6C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r26);
/*800DFC70 000DCA70*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x4);
/*800DFC74 000DCA74*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*800DFC78 000DCA78*/ PPC::Runtime::ASM::add(context->r23, context->r0, context->r23);
/*800DFC7C 000DCA7C*/ PPC::Runtime::ASM::subi(context->r23, context->r23, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DFC80, 0x800DFC80) //this is a jump label
/*800DFC80 000DCA80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800DFC84 000DCA84*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800DFC88 000DCA88*/ PPC::Runtime::ASM::blt(.L_800DFC10);
/*800DFC8C 000DCA8C*/ PPC::Runtime::ASM::slwi(context->r3, context->r23, 2);
/*800DFC90 000DCA90*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*800DFC94 000DCA94*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r21));
/*800DFC98 000DCA98*/ PPC::Runtime::ASM::mr(context->r3, context->r21);
/*800DFC9C 000DCA9C*/ PPC::Runtime::ASM::mr(context->r4, context->r23);
/*800DFCA0 000DCAA0*/ PPC::Runtime::ASM::bl(fn_800DDA60);
/*800DFCA4 000DCAA4*/ PPC::Runtime::ASM::li(context->r26, 0x0);
/*800DFCA8 000DCAA8*/ PPC::Runtime::ASM::mr(context->r28, context->r26);
/*800DFCAC 000DCAAC*/ PPC::Runtime::ASM::mr(context->r27, context->r26);
/*800DFCB0 000DCAB0*/ PPC::Runtime::ASM::b(.L_800DFE10);
RUNTIME_PPC_JUMP_LABEL(.L_800DFCB4, 0x800DFCB4) //this is a jump label
/*800DFCB4 000DCAB4*/ PPC::Runtime::ASM::mr(context->r29, context->r28);
/*800DFCB8 000DCAB8*/ PPC::Runtime::ASM::li(context->r24, 0x0);
/*800DFCBC 000DCABC*/ PPC::Runtime::ASM::b(.L_800DFD9C);
RUNTIME_PPC_JUMP_LABEL(.L_800DFCC0, 0x800DFCC0) //this is a jump label
/*800DFCC0 000DCAC0*/ PPC::Runtime::ASM::lwz(context->r20, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r21));
/*800DFCC4 000DCAC4*/ PPC::Runtime::ASM::cmplwi(context->r20, 0x0);
/*800DFCC8 000DCAC8*/ PPC::Runtime::ASM::bne(.L_800DFCDC);
/*800DFCCC 000DCACC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*800DFCD0 000DCAD0*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x218);
/*800DFCD4 000DCAD4*/ PPC::Runtime::ASM::li(context->r4, 0x233);
/*800DFCD8 000DCAD8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DFCDC, 0x800DFCDC) //this is a jump label
/*800DFCDC 000DCADC*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x0);
/*800DFCE0 000DCAE0*/ PPC::Runtime::ASM::lwz(context->r20, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r20));
/*800DFCE4 000DCAE4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800DFCE8 000DCAE8*/ PPC::Runtime::ASM::blt(.L_800DFCFC);
/*800DFCEC 000DCAEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r20));
/*800DFCF0 000DCAF0*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800DFCF4 000DCAF4*/ PPC::Runtime::ASM::bge(.L_800DFCFC);
/*800DFCF8 000DCAF8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DFCFC, 0x800DFCFC) //this is a jump label
/*800DFCFC 000DCAFC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800DFD00 000DCB00*/ PPC::Runtime::ASM::bne(.L_800DFD14);
/*800DFD04 000DCB04*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4c);
/*800DFD08 000DCB08*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x58);
/*800DFD0C 000DCB0C*/ PPC::Runtime::ASM::li(context->r4, 0xb8);
/*800DFD10 000DCB10*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DFD14, 0x800DFD14) //this is a jump label
/*800DFD14 000DCB14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r20));
/*800DFD18 000DCB18*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*800DFD1C 000DCB1C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*800DFD20 000DCB20*/ PPC::Runtime::ASM::lwzx(context->r20, context->r27, context->r0);
/*800DFD24 000DCB24*/ PPC::Runtime::ASM::mr(context->r3, context->r20);
/*800DFD28 000DCB28*/ PPC::Runtime::ASM::bl(fn_8006BA28);
/*800DFD2C 000DCB2C*/ PPC::Runtime::ASM::mr(context->r3, context->r20);
/*800DFD30 000DCB30*/ PPC::Runtime::ASM::addi(context->r4, context->r24, 0x1);
/*800DFD34 000DCB34*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*800DFD38 000DCB38*/ PPC::Runtime::ASM::bl(fn_8006BA28);
/*800DFD3C 000DCB3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*800DFD40 000DCB40*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800DFD44 000DCB44*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x20);
/*800DFD48 000DCB48*/ PPC::Runtime::ASM::bl(fn_8024AC68);
/*800DFD4C 000DCB4C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800DFD50 000DCB50*/ PPC::Runtime::ASM::clrlwi(context->r5, context->r22, 16);
/*800DFD54 000DCB54*/ PPC::Runtime::ASM::addi(context->r7, context->r1, 0x20);
/*800DFD58 000DCB58*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*800DFD5C 000DCB5C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*800DFD60 000DCB60*/ PPC::Runtime::ASM::bl(fn_8006F93C);
/*800DFD64 000DCB64*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r21));
/*800DFD68 000DCB68*/ PPC::Runtime::ASM::addi(context->r0, context->r29, 0x2);
/*800DFD6C 000DCB6C*/ PPC::Runtime::ASM::mr(context->r3, context->r21);
/*800DFD70 000DCB70*/ PPC::Runtime::ASM::mr(context->r4, context->r22);
/*800DFD74 000DCB74*/ PPC::Runtime::ASM::sthx(context->r26, context->r5, context->r29);
/*800DFD78 000DCB78*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*800DFD7C 000DCB7C*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*800DFD80 000DCB80*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r21));
/*800DFD84 000DCB84*/ PPC::Runtime::ASM::sthx(context->r24, context->r7, context->r0);
/*800DFD88 000DCB88*/ PPC::Runtime::ASM::bl(fn_800DDAEC);
/*800DFD8C 000DCB8C*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x4);
/*800DFD90 000DCB90*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x4);
/*800DFD94 000DCB94*/ PPC::Runtime::ASM::addi(context->r22, context->r22, 0x1);
/*800DFD98 000DCB98*/ PPC::Runtime::ASM::addi(context->r24, context->r24, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DFD9C, 0x800DFD9C) //this is a jump label
/*800DFD9C 000DCB9C*/ PPC::Runtime::ASM::lwz(context->r20, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x110, context->r21));
/*800DFDA0 000DCBA0*/ PPC::Runtime::ASM::cmplwi(context->r20, 0x0);
/*800DFDA4 000DCBA4*/ PPC::Runtime::ASM::bne(.L_800DFDB8);
/*800DFDA8 000DCBA8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x18);
/*800DFDAC 000DCBAC*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x218);
/*800DFDB0 000DCBB0*/ PPC::Runtime::ASM::li(context->r4, 0x225);
/*800DFDB4 000DCBB4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DFDB8, 0x800DFDB8) //this is a jump label
/*800DFDB8 000DCBB8*/ PPC::Runtime::ASM::cmpwi(context->r26, 0x0);
/*800DFDBC 000DCBBC*/ PPC::Runtime::ASM::lwz(context->r20, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r20));
/*800DFDC0 000DCBC0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800DFDC4 000DCBC4*/ PPC::Runtime::ASM::blt(.L_800DFDD8);
/*800DFDC8 000DCBC8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r20));
/*800DFDCC 000DCBCC*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800DFDD0 000DCBD0*/ PPC::Runtime::ASM::bge(.L_800DFDD8);
/*800DFDD4 000DCBD4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DFDD8, 0x800DFDD8) //this is a jump label
/*800DFDD8 000DCBD8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800DFDDC 000DCBDC*/ PPC::Runtime::ASM::bne(.L_800DFDF0);
/*800DFDE0 000DCBE0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4c);
/*800DFDE4 000DCBE4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x58);
/*800DFDE8 000DCBE8*/ PPC::Runtime::ASM::li(context->r4, 0xb8);
/*800DFDEC 000DCBEC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DFDF0, 0x800DFDF0) //this is a jump label
/*800DFDF0 000DCBF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r20));
/*800DFDF4 000DCBF4*/ PPC::Runtime::ASM::lwzx(context->r3, context->r27, context->r0);
/*800DFDF8 000DCBF8*/ PPC::Runtime::ASM::lha(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*800DFDFC 000DCBFC*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800DFE00 000DCC00*/ PPC::Runtime::ASM::cmpw(context->r24, context->r0);
/*800DFE04 000DCC04*/ PPC::Runtime::ASM::blt(.L_800DFCC0);
/*800DFE08 000DCC08*/ PPC::Runtime::ASM::addi(context->r27, context->r27, 0x4);
/*800DFE0C 000DCC0C*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DFE10, 0x800DFE10) //this is a jump label
/*800DFE10 000DCC10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r25));
/*800DFE14 000DCC14*/ PPC::Runtime::ASM::cmpw(context->r26, context->r0);
/*800DFE18 000DCC18*/ PPC::Runtime::ASM::blt(.L_800DFCB4);
/*800DFE1C 000DCC1C*/ PPC::Runtime::ASM::mr(context->r3, context->r21);
/*800DFE20 000DCC20*/ PPC::Runtime::ASM::mr(context->r4, context->r23);
/*800DFE24 000DCC24*/ PPC::Runtime::ASM::bl(fn_800DDC38);
RUNTIME_PPC_JUMP_LABEL(.L_800DFE28, 0x800DFE28) //this is a jump label
/*800DFE28 000DCC28*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x70);
/*800DFE2C 000DCC2C*/ PPC::Runtime::ASM::bl(_restgpr_20);
/*800DFE30 000DCC30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*800DFE34 000DCC34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DFE38 000DCC38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*800DFE3C 000DCC3C*/ PPC::Runtime::ASM::blr();
}