//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801F0C6C(PPC::Runtime::GCContext* context)
{
/*801F0C6C 001EDA6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801F0C70 001EDA70*/ PPC::Runtime::ASM::mflr(context->r0);
/*801F0C74 001EDA74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F0C78 001EDA78*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F0C7C 001EDA7C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801F0C80 001EDA80*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0C84 001EDA84*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801F0C88 001EDA88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x314, context->r3));
/*801F0C8C 001EDA8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r3));
/*801F0C90 001EDA90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r3));
/*801F0C94 001EDA94*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801F0C98 001EDA98*/ PPC::Runtime::ASM::bne(.L_801F0CAC);
/*801F0C9C 001EDA9C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7078 @ Get_MemoryOffset_SDA21);
/*801F0CA0 001EDAA0*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*801F0CA4 001EDAA4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7080 @ Get_MemoryOffset_SDA21);
/*801F0CA8 001EDAA8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F0CAC, 0x801F0CAC) //this is a jump label
/*801F0CAC 001EDAAC*/ PPC::Runtime::ASM::addic.(context->r0, context->r29, 0x1ac0);
/*801F0CB0 001EDAB0*/ PPC::Runtime::ASM::bne(.L_801F0CC8);
/*801F0CB4 001EDAB4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_12 @ Get_MemoryOffset_HighBit);
/*801F0CB8 001EDAB8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7078 @ Get_MemoryOffset_SDA21);
/*801F0CBC 001EDABC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_12 @ Get_MemoryOffset_LowBit);
/*801F0CC0 001EDAC0*/ PPC::Runtime::ASM::li(context->r4, 0x3e5);
/*801F0CC4 001EDAC4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F0CC8, 0x801F0CC8) //this is a jump label
/*801F0CC8 001EDAC8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*801F0CCC 001EDACC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*801F0CD0 001EDAD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*801F0CD4 001EDAD4*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac0, context->r29));
/*801F0CD8 001EDAD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac4, context->r29));
/*801F0CDC 001EDADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*801F0CE0 001EDAE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ac8, context->r29));
/*801F0CE4 001EDAE4*/ PPC::Runtime::ASM::bne(.L_801F0CF8);
/*801F0CE8 001EDAE8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7078 @ Get_MemoryOffset_SDA21);
/*801F0CEC 001EDAEC*/ PPC::Runtime::ASM::li(context->r4, 0x3e4);
/*801F0CF0 001EDAF0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7080 @ Get_MemoryOffset_SDA21);
/*801F0CF4 001EDAF4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F0CF8, 0x801F0CF8) //this is a jump label
/*801F0CF8 001EDAF8*/ PPC::Runtime::ASM::addic.(context->r0, context->r29, 0x1acc);
/*801F0CFC 001EDAFC*/ PPC::Runtime::ASM::bne(.L_801F0D14);
/*801F0D00 001EDB00*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_12 @ Get_MemoryOffset_HighBit);
/*801F0D04 001EDB04*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7078 @ Get_MemoryOffset_SDA21);
/*801F0D08 001EDB08*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_12 @ Get_MemoryOffset_LowBit);
/*801F0D0C 001EDB0C*/ PPC::Runtime::ASM::li(context->r4, 0x3e5);
/*801F0D10 001EDB10*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801F0D14, 0x801F0D14) //this is a jump label
/*801F0D14 001EDB14*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*801F0D18 001EDB18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r30));
/*801F0D1C 001EDB1C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1FA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801F0D20 001EDB20*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1acc, context->r29));
/*801F0D24 001EDB24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ad0, context->r29));
/*801F0D28 001EDB28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r30));
/*801F0D2C 001EDB2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ad4, context->r29));
/*801F0D30 001EDB30*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ae0, context->r29));
/*801F0D34 001EDB34*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1adc, context->r29));
/*801F0D38 001EDB38*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ad8, context->r29));
/*801F0D3C 001EDB3C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1aec, context->r29));
/*801F0D40 001EDB40*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ae8, context->r29));
/*801F0D44 001EDB44*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ae4, context->r29));
/*801F0D48 001EDB48*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b14, context->r29));
/*801F0D4C 001EDB4C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b10, context->r29));
/*801F0D50 001EDB50*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b0c, context->r29));
/*801F0D54 001EDB54*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b08, context->r29));
/*801F0D58 001EDB58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1af8, context->r29));
/*801F0D5C 001EDB5C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1af4, context->r29));
/*801F0D60 001EDB60*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1af0, context->r29));
/*801F0D64 001EDB64*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b04, context->r29));
/*801F0D68 001EDB68*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b00, context->r29));
/*801F0D6C 001EDB6C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1afc, context->r29));
/*801F0D70 001EDB70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801F0D74 001EDB74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801F0D78 001EDB78*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801F0D7C 001EDB7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801F0D80 001EDB80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801F0D84 001EDB84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801F0D88 001EDB88*/ PPC::Runtime::ASM::blr();
}