//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn___assert.hpp"
#include "fn_HSD_TExpAlphaInSub.hpp"
#include "fn_HSD_TExpAlphaInSub.hpp"
#include "fn_HSD_TExpAlphaInSub.hpp"
#include "fn_HSD_TExpAlphaInSub.hpp"



void fn_HSD_TExpAlphaIn(PPC::Runtime::GCContext* context)
{
/*80422F88 0041FD88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*80422F8C 0041FD8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80422F90 0041FD90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80422F94 0041FD94*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*80422F98 0041FD98*/ PPC::Runtime::ASM::bl(_savegpr_23);
/* 80422F9C 0041FD9C  7C 77 1B 79 */ mr. context->r23 , context->r3
/*80422FA0 0041FDA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80422FA4 0041FDA4*/ PPC::Runtime::ASM::mr(context->r24, context->r4);
/*80422FA8 0041FDA8*/ PPC::Runtime::ASM::mr(context->r25, context->r5);
/*80422FAC 0041FDAC*/ PPC::Runtime::ASM::mr(context->r26, context->r6);
/*80422FB0 0041FDB0*/ PPC::Runtime::ASM::mr(context->r27, context->r7);
/*80422FB4 0041FDB4*/ PPC::Runtime::ASM::mr(context->r28, context->r8);
/*80422FB8 0041FDB8*/ PPC::Runtime::ASM::mr(context->r29, context->r9);
/*80422FBC 0041FDBC*/ PPC::Runtime::ASM::mr(context->r30, context->r10);
/*80422FC0 0041FDC0*/ PPC::Runtime::ASM::bne(.L_80422FD4);
/*80422FC4 0041FDC4*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_480 @ Get_MemoryOffset_SDA21);
/*80422FC8 0041FDC8*/ PPC::Runtime::ASM::li(context->r4, 0x337);
/*80422FCC 0041FDCC*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_479 @ Get_MemoryOffset_SDA21);
/*80422FD0 0041FDD0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80422FD4, 0x80422FD4) //this is a jump label
/*80422FD4 0041FDD4*/ PPC::Runtime::ASM::cmplwi(context->r23, 0x0);
/*80422FD8 0041FDD8*/ PPC::Runtime::ASM::bne(.L_80422FE4);
/*80422FDC 0041FDDC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80422FE0 0041FDE0*/ PPC::Runtime::ASM::b(.L_8042300C);
RUNTIME_PPC_JUMP_LABEL(.L_80422FE4, 0x80422FE4) //this is a jump label
/*80422FE4 0041FDE4*/ PPC::Runtime::ASM::addis(context->r0, context->r23, 0x1);
/*80422FE8 0041FDE8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*80422FEC 0041FDEC*/ PPC::Runtime::ASM::bne(.L_80422FF8);
/*80422FF0 0041FDF0*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80422FF4 0041FDF4*/ PPC::Runtime::ASM::b(.L_8042300C);
RUNTIME_PPC_JUMP_LABEL(.L_80422FF8, 0x80422FF8) //this is a jump label
/*80422FF8 0041FDF8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xfffe);
/*80422FFC 0041FDFC*/ PPC::Runtime::ASM::bne(.L_80423008);
/*80423000 0041FE00*/ PPC::Runtime::ASM::li(context->r0, 0x3);
/*80423004 0041FE04*/ PPC::Runtime::ASM::b(.L_8042300C);
RUNTIME_PPC_JUMP_LABEL(.L_80423008, 0x80423008) //this is a jump label
/*80423008 0041FE08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r23));
RUNTIME_PPC_JUMP_LABEL(.L_8042300C, 0x8042300C) //this is a jump label
/*8042300C 0041FE0C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80423010 0041FE10*/ PPC::Runtime::ASM::beq(.L_80423028);
/*80423014 0041FE14*/ PPC::Runtime::ASM::lis(context->r4, lbl_80504978 @ Get_MemoryOffset_HighBit);
/*80423018 0041FE18*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_480 @ Get_MemoryOffset_SDA21);
/*8042301C 0041FE1C*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_80504978 @ Get_MemoryOffset_LowBit);
/*80423020 0041FE20*/ PPC::Runtime::ASM::li(context->r4, 0x338);
/*80423024 0041FE24*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80423028, 0x80423028) //this is a jump label
/*80423028 0041FE28*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*8042302C 0041FE2C*/ PPC::Runtime::ASM::mr(context->r4, context->r24);
/*80423030 0041FE30*/ PPC::Runtime::ASM::mr(context->r5, context->r25);
/*80423034 0041FE34*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80423038 0041FE38*/ PPC::Runtime::ASM::bl(fn_HSD_TExpAlphaInSub);
/*8042303C 0041FE3C*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80423040 0041FE40*/ PPC::Runtime::ASM::mr(context->r4, context->r26);
/*80423044 0041FE44*/ PPC::Runtime::ASM::mr(context->r5, context->r27);
/*80423048 0041FE48*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*8042304C 0041FE4C*/ PPC::Runtime::ASM::bl(fn_HSD_TExpAlphaInSub);
/*80423050 0041FE50*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80423054 0041FE54*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*80423058 0041FE58*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*8042305C 0041FE5C*/ PPC::Runtime::ASM::li(context->r6, 0x2);
/*80423060 0041FE60*/ PPC::Runtime::ASM::bl(fn_HSD_TExpAlphaInSub);
/*80423064 0041FE64*/ PPC::Runtime::ASM::mr(context->r3, context->r23);
/*80423068 0041FE68*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*8042306C 0041FE6C*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80423070 0041FE70*/ PPC::Runtime::ASM::li(context->r6, 0x3);
/*80423074 0041FE74*/ PPC::Runtime::ASM::bl(fn_HSD_TExpAlphaInSub);
/*80423078 0041FE78*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*8042307C 0041FE7C*/ PPC::Runtime::ASM::bl(_restgpr_23);
/*80423080 0041FE80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80423084 0041FE84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80423088 0041FE88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*8042308C 0041FE8C*/ PPC::Runtime::ASM::blr();
}