//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802E26DC.hpp"



void fn_80300BC8(PPC::Runtime::GCContext* context)
{
/*80300BC8 002FD9C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80300BCC 002FD9CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80300BD0 002FD9D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80300BD4 002FD9D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80300BD8 002FD9D8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80300BDC 002FD9DC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80300BE0 002FD9E0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80300BE4 002FD9E4*/ PPC::Runtime::ASM::bl(fn_802E26DC);
/*80300BE8 002FD9E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80300BEC 002FD9EC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x470, context->r3));
/*80300BF0 002FD9F0*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80300BF4 002FD9F4*/ PPC::Runtime::ASM::beq(.L_80300C38);
/*80300BF8 002FD9F8*/ PPC::Runtime::ASM::bne(.L_80300C0C);
/*80300BFC 002FD9FC*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*80300C00 002FDA00*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80300C04 002FDA04*/ PPC::Runtime::ASM::li(context->r5, RandomStructBlob_63_WithNullValue @ Get_MemoryOffset_SDA21);
/*80300C08 002FDA08*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80300C0C, 0x80300C0C) //this is a jump label
/*80300C0C 002FDA0C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80300C10 002FDA10*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80300C14 002FDA14*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80300C18 002FDA18*/ PPC::Runtime::ASM::bne(.L_80300C28);
/*80300C1C 002FDA1C*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80300C20 002FDA20*/ PPC::Runtime::ASM::beq(.L_80300C28);
/*80300C24 002FDA24*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80300C28, 0x80300C28) //this is a jump label
/* 80300C28 002FDA28  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*80300C2C 002FDA2C*/ PPC::Runtime::ASM::beq(.L_80300C38);
/*80300C30 002FDA30*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80300C34 002FDA34*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetupMatrixSub);
RUNTIME_PPC_JUMP_LABEL(.L_80300C38, 0x80300C38) //this is a jump label
/*80300C38 002FDA38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80300C3C 002FDA3C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80300C40 002FDA40*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x470, context->r3));
/*80300C44 002FDA44*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x514, context->r3));
/*80300C48 002FDA48*/ PPC::Runtime::ASM::addi(context->r29, context->r5, 0x44);
/*80300C4C 002FDA4C*/ PPC::Runtime::ASM::bl(fn_8038D0A8);
/* 80300C50 002FDA50  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80300C54 002FDA54*/ PPC::Runtime::ASM::bne(.L_80300C68);
/*80300C58 002FDA58*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*80300C5C 002FDA5C*/ PPC::Runtime::ASM::li(context->r4, 0x495);
/*80300C60 002FDA60*/ PPC::Runtime::ASM::li(context->r5, RandomStructBlob_63_WithNullValue @ Get_MemoryOffset_SDA21);
/*80300C64 002FDA64*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80300C68, 0x80300C68) //this is a jump label
/*80300C68 002FDA68*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80300C6C 002FDA6C*/ PPC::Runtime::ASM::bne(.L_80300C80);
/*80300C70 002FDA70*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*80300C74 002FDA74*/ PPC::Runtime::ASM::li(context->r4, 0x496);
/*80300C78 002FDA78*/ PPC::Runtime::ASM::li(context->r5, String_ "mt" 4 @ Get_MemoryOffset_SDA21);
/*80300C7C 002FDA7C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80300C80, 0x80300C80) //this is a jump label
/*80300C80 002FDA80*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80300C84 002FDA84*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x44);
/*80300C88 002FDA88*/ PPC::Runtime::ASM::bl(fn_PSMTXCopy);
/*80300C8C 002FDA8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80300C90 002FDA90*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*80300C94 002FDA94*/ PPC::Runtime::ASM::oris(context->r0, context->r0, 0x380);
/*80300C98 002FDA98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80300C9C 002FDA9C*/ PPC::Runtime::ASM::beq(.L_80300CE0);
/*80300CA0 002FDAA0*/ PPC::Runtime::ASM::bne(.L_80300CB4);
/*80300CA4 002FDAA4*/ PPC::Runtime::ASM::li(context->r3, RandomStructBlob_64 @ Get_MemoryOffset_SDA21);
/*80300CA8 002FDAA8*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*80300CAC 002FDAAC*/ PPC::Runtime::ASM::li(context->r5, RandomStructBlob_63_WithNullValue @ Get_MemoryOffset_SDA21);
/*80300CB0 002FDAB0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_80300CB4, 0x80300CB4) //this is a jump label
/*80300CB4 002FDAB4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*80300CB8 002FDAB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80300CBC 002FDABC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*80300CC0 002FDAC0*/ PPC::Runtime::ASM::bne(.L_80300CD0);
/*80300CC4 002FDAC4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*80300CC8 002FDAC8*/ PPC::Runtime::ASM::beq(.L_80300CD0);
/*80300CCC 002FDACC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80300CD0, 0x80300CD0) //this is a jump label
/* 80300CD0 002FDAD0  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*80300CD4 002FDAD4*/ PPC::Runtime::ASM::bne(.L_80300CE0);
/*80300CD8 002FDAD8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80300CDC 002FDADC*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_80300CE0, 0x80300CE0) //this is a jump label
/*80300CE0 002FDAE0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80300CE4 002FDAE4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x514, context->r3));
/*80300CE8 002FDAE8*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80300CEC 002FDAEC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r12));
/*80300CF0 002FDAF0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80300CF4 002FDAF4*/ PPC::Runtime::ASM::bctrl();
/*80300CF8 002FDAF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80300CFC 002FDAFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80300D00 002FDB00*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80300D04 002FDB04*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80300D08 002FDB08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80300D0C 002FDB0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80300D10 002FDB10*/ PPC::Runtime::ASM::blr();
}