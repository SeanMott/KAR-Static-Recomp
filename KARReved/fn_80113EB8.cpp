//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800098C0.hpp"
#include "fn_8012B580.hpp"



void fn_80113EB8(PPC::Runtime::GCContext* context)
{
/*80113EB8 00110CB8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80113EBC 00110CBC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80113EC0 00110CC0*/ PPC::Runtime::ASM::lis(context->r4, lbl_805578B8 @ Get_MemoryOffset_HighBit);
/*80113EC4 00110CC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80113EC8 00110CC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80113ECC 00110CCC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_805578B8 @ Get_MemoryOffset_LowBit);
/*80113ED0 00110CD0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80113ED4 00110CD4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80113ED8 00110CD8*/ PPC::Runtime::ASM::bl(fn_800098C0);
/*80113EDC 00110CDC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80113EE0 00110CE0*/ PPC::Runtime::ASM::beq(.L_80113EF8);
/*80113EE4 00110CE4*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r30);
/*80113EE8 00110CE8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80113EEC 00110CEC*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r3));
/*80113EF0 00110CF0*/ PPC::Runtime::ASM::extsb(context->r3, context->r3);
/*80113EF4 00110CF4*/ PPC::Runtime::ASM::bl(fn_8012B580);
RUNTIME_PPC_JUMP_LABEL(.L_80113EF8, 0x80113EF8) //this is a jump label
/*80113EF8 00110CF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80113EFC 00110CFC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80113F00 00110D00*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80113F04 00110D04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80113F08 00110D08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80113F0C 00110D0C*/ PPC::Runtime::ASM::blr();
}