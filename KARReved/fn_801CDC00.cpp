//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245DB0.hpp"
#include "fn_80245F70.hpp"
#include "fn_802460D4.hpp"
#include "fn_8024625C.hpp"
#include "fn_800D1860.hpp"
#include "fn_80064B68.hpp"



void fn_801CDC00(PPC::Runtime::GCContext* context)
{
/*801CDC00 001CAA00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*801CDC04 001CAA04*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CDC08 001CAA08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801CDC0C 001CAA0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*801CDC10 001CAA10*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*801CDC14 001CAA14*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*801CDC18 001CAA18*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*801CDC1C 001CAA1C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801CDC20 001CAA20*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801CDC24 001CAA24*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CDC28 001CAA28*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801CDC2C 001CAA2C*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x3f4);
/*801CDC30 001CAA30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r3));
/*801CDC34 001CAA34*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x418);
/*801CDC38 001CAA38*/ PPC::Runtime::ASM::addi(context->r6, context->r28, 0x424);
/*801CDC3C 001CAA3C*/ PPC::Runtime::ASM::bl(fn_80245DB0);
/*801CDC40 001CAA40*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6fc, context->r28));
/*801CDC44 001CAA44*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x2c);
/*801CDC48 001CAA48*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x424, context->r28));
/*801CDC4C 001CAA4C*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x418);
/*801CDC50 001CAA50*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x428, context->r28));
/*801CDC54 001CAA54*/ PPC::Runtime::ASM::addi(context->r6, context->r28, 0x424);
/*801CDC58 001CAA58*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f4);
/*801CDC5C 001CAA5C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r28));
/*801CDC60 001CAA60*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42c, context->r28));
/*801CDC64 001CAA64*/ PPC::Runtime::ASM::fmuls(context->f5, context->f1, context->f4);
/*801CDC68 001CAA68*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CDC6C 001CAA6C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801CDC70 001CAA70*/ PPC::Runtime::ASM::fadds(context->f0, context->f2, context->f0);
/*801CDC74 001CAA74*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1A4C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CDC78 001CAA78*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f4);
/*801CDC7C 001CAA7C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801CDC80 001CAA80*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r28));
/*801CDC84 001CAA84*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f5);
/*801CDC88 001CAA88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CDC8C 001CAA8C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r28));
/*801CDC90 001CAA90*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*801CDC94 001CAA94*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CDC98 001CAA98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r28));
/*801CDC9C 001CAA9C*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*801CDCA0 001CAAA0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r28));
/*801CDCA4 001CAAA4*/ PPC::Runtime::ASM::bl(fn_802460D4);
/*801CDCA8 001CAAA8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r28));
/*801CDCAC 001CAAAC*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*801CDCB0 001CAAB0*/ PPC::Runtime::ASM::bl(fn_8024625C);
/*801CDCB4 001CAAB4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r28));
/*801CDCB8 001CAAB8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*801CDCBC 001CAABC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r4));
/*801CDCC0 001CAAC0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801CDCC4 001CAAC4*/ PPC::Runtime::ASM::beq(.L_801CDD8C);
/*801CDCC8 001CAAC8*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*801CDCCC 001CAACC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*801CDCD0 001CAAD0*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r0);
/*801CDCD4 001CAAD4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r3));
/*801CDCD8 001CAAD8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r29));
/* 801CDCDC 001CAADC  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801CDCE0 001CAAE0*/ PPC::Runtime::ASM::bne(.L_801CDCF8);
/*801CDCE4 001CAAE4*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A30 @ Get_MemoryOffset_HighBit);
/*801CDCE8 001CAAE8*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CDCEC 001CAAEC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A30 @ Get_MemoryOffset_LowBit);
/*801CDCF0 001CAAF0*/ PPC::Runtime::ASM::li(context->r4, 0xa9);
/*801CDCF4 001CAAF4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CDCF8, 0x801CDCF8) //this is a jump label
/*801CDCF8 001CAAF8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*801CDCFC 001CAAFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*801CDD00 001CAB00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*801CDD04 001CAB04*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CDD08 001CAB08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CDD0C 001CAB0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*801CDD10 001CAB10*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CDD14 001CAB14*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r29));
/* 801CDD18 001CAB18  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*801CDD1C 001CAB1C*/ PPC::Runtime::ASM::bne(.L_801CDD34);
/*801CDD20 001CAB20*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A30 @ Get_MemoryOffset_HighBit);
/*801CDD24 001CAB24*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CDD28 001CAB28*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A30 @ Get_MemoryOffset_LowBit);
/*801CDD2C 001CAB2C*/ PPC::Runtime::ASM::li(context->r4, 0x94);
/*801CDD30 001CAB30*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CDD34, 0x801CDD34) //this is a jump label
/*801CDD34 001CAB34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*801CDD38 001CAB38*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*801CDD3C 001CAB3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801CDD40 001CAB40*/ PPC::Runtime::ASM::bl(fn_800D1860);
/*801CDD44 001CAB44*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*801CDD48 001CAB48*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*801CDD4C 001CAB4C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x2c);
/*801CDD50 001CAB50*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*801CDD54 001CAB54*/ PPC::Runtime::ASM::bl(fn_80064B68);
/*801CDD58 001CAB58*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CDD5C 001CAB5C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801CDD60 001CAB60*/ PPC::Runtime::ASM::bge(.L_801CDD8C);
/*801CDD64 001CAB64*/ PPC::Runtime::ASM::fneg(context->f0, context->f1);
/*801CDD68 001CAB68*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CDD6C 001CAB6C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*801CDD70 001CAB70*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801CDD74 001CAB74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CDD78 001CAB78*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801CDD7C 001CAB7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*801CDD80 001CAB80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801CDD84 001CAB84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*801CDD88 001CAB88*/ PPC::Runtime::ASM::b(.L_801CDD90);
RUNTIME_PPC_JUMP_LABEL(.L_801CDD8C, 0x801CDD8C) //this is a jump label
/*801CDD8C 001CAB8C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801CDD90, 0x801CDD90) //this is a jump label
/*801CDD90 001CAB90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*801CDD94 001CAB94*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*801CDD98 001CAB98*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*801CDD9C 001CAB9C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801CDDA0 001CABA0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CDDA4 001CABA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CDDA8 001CABA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*801CDDAC 001CABAC*/ PPC::Runtime::ASM::blr();
}