//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EE73C.hpp"
#include "fn_800EE708.hpp"
#include "fn_800EE6EC.hpp"
#include "fn_8010A8D4.hpp"
#include "fn_800EE6EC.hpp"
#include "fn_loadEventLocations?.hpp"
#include "fn_80114010.hpp"



void fn_event_secretChamber_start(PPC::Runtime::GCContext* context)
{
/*801117F0 0010E5F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*801117F4 0010E5F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801117F8 0010E5F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801117FC 0010E5FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*80111800 0010E600*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80111804 0010E604*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80111808 0010E608*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*8011180C 0010E60C*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*80111810 0010E610*/ PPC::Runtime::ASM::lwz(context->r29, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80111814 0010E614*/ PPC::Runtime::ASM::bl(fn_800EE73C);
/*80111818 0010E618*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8011181C 0010E61C*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80111820 0010E620*/ PPC::Runtime::ASM::bl(fn_800EE708);
/*80111824 0010E624*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80111828 0010E628*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*8011182C 0010E62C*/ PPC::Runtime::ASM::bl(fn_800EE6EC);
/*80111830 0010E630*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*80111834 0010E634*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80111838 0010E638*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8011183C 0010E63C*/ PPC::Runtime::ASM::mr(context->r6, context->r31);
/*80111840 0010E640*/ PPC::Runtime::ASM::bl(fn_8010A8D4);
/*80111844 0010E644*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*80111848 0010E648*/ PPC::Runtime::ASM::bl(fn_800EE6EC);
/*8011184C 0010E64C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x20);
/*80111850 0010E650*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*80111854 0010E654*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*80111858 0010E658*/ PPC::Runtime::ASM::bl(fn_loadEventLocations?);
/*8011185C 0010E65C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*80111860 0010E660*/ PPC::Runtime::ASM::bl(fn_80114010);
/*80111864 0010E664*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80111868 0010E668*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*8011186C 0010E66C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*80111870 0010E670*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80111874 0010E674*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80111878 0010E678*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011187C 0010E67C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80111880 0010E680*/ PPC::Runtime::ASM::blr();
}