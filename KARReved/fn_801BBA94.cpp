//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Interrupt_AS_Dash.hpp"
#include "fn_Interrupt_CheckForRun.hpp"
#include "fn_Walk/RunModifier.hpp"



void fn_801BBA94(PPC::Runtime::GCContext* context)
{
/*801BBA94 001B8894*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BBA98 001B8898*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BBA9C 001B889C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BBAA0 001B88A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BBAA4 001B88A4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BBAA8 001B88A8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r3));
/*801BBAAC 001B88AC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*801BBAB0 001B88B0*/ PPC::Runtime::ASM::bl(fn_Interrupt_AS_Dash);
/*801BBAB4 001B88B4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BBAB8 001B88B8*/ PPC::Runtime::ASM::bne(.L_801BBAD4);
/*801BBABC 001B88BC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBAC0 001B88C0*/ PPC::Runtime::ASM::bl(fn_Interrupt_CheckForRun);
/*801BBAC4 001B88C4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BBAC8 001B88C8*/ PPC::Runtime::ASM::bne(.L_801BBAD4);
/*801BBACC 001B88CC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BBAD0 001B88D0*/ PPC::Runtime::ASM::bl(fn_Walk/RunModifier);
RUNTIME_PPC_JUMP_LABEL(.L_801BBAD4, 0x801BBAD4) //this is a jump label
/*801BBAD4 001B88D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BBAD8 001B88D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BBADC 001B88DC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BBAE0 001B88E0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BBAE4 001B88E4*/ PPC::Runtime::ASM::blr();
}