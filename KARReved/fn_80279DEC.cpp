//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80277C84.hpp"
#include "fn_80277C84.hpp"
#include "fn_80277C84.hpp"



void fn_80279DEC(PPC::Runtime::GCContext* context)
{
/*80279DEC 00276BEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80279DF0 00276BF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80279DF4 00276BF4*/ PPC::Runtime::ASM::mulli(context->r5, context->r3, 0x90);
/*80279DF8 00276BF8*/ PPC::Runtime::ASM::lis(context->r4, lbl_8055EC58 @ Get_MemoryOffset_HighBit);
/*80279DFC 00276BFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80279E00 00276C00*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_8055EC58 @ Get_MemoryOffset_LowBit);
/*80279E04 00276C04*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r5);
/*80279E08 00276C08*/ PPC::Runtime::ASM::lbzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/* 80279E0C 00276C0C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*80279E10 00276C10*/ PPC::Runtime::ASM::beq(.L_80279E28);
/*80279E14 00276C14*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80279E18 00276C18*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80279E1C 00276C1C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80279E20 00276C20*/ PPC::Runtime::ASM::bl(fn_80277C84);
/*80279E24 00276C24*/ PPC::Runtime::ASM::b(.L_80279E80);
RUNTIME_PPC_JUMP_LABEL(.L_80279E28, 0x80279E28) //this is a jump label
/*80279E28 00276C28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r4));
/*80279E2C 00276C2C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xf0);
/*80279E30 00276C30*/ PPC::Runtime::ASM::ble(.L_80279E48);
/*80279E34 00276C34*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80279E38 00276C38*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80279E3C 00276C3C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80279E40 00276C40*/ PPC::Runtime::ASM::bl(fn_80277C84);
/*80279E44 00276C44*/ PPC::Runtime::ASM::b(.L_80279E80);
RUNTIME_PPC_JUMP_LABEL(.L_80279E48, 0x80279E48) //this is a jump label
/*80279E48 00276C48*/ PPC::Runtime::ASM::xoris(context->r4, context->r0, 0x8000);
/*80279E4C 00276C4C*/ PPC::Runtime::ASM::lis(context->r0, 0x4330);
/*80279E50 00276C50*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80279E54 00276C54*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E3210 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80279E58 00276C58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80279E5C 00276C5C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E3208 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80279E60 00276C60*/ PPC::Runtime::ASM::lfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80279E64 00276C64*/ PPC::Runtime::ASM::fsubs(context->f1, context->f1, context->f2);
/*80279E68 00276C68*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*80279E6C 00276C6C*/ PPC::Runtime::ASM::ble(.L_80279E80);
/*80279E70 00276C70*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*80279E74 00276C74*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80279E78 00276C78*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80279E7C 00276C7C*/ PPC::Runtime::ASM::bl(fn_80277C84);
RUNTIME_PPC_JUMP_LABEL(.L_80279E80, 0x80279E80) //this is a jump label
/*80279E80 00276C80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80279E84 00276C84*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80279E88 00276C88*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80279E8C 00276C8C*/ PPC::Runtime::ASM::blr();
}