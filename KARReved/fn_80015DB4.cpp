//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80015DB4(PPC::Runtime::GCContext* context)
{
/*80015DB4 00012BB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80015DB8 00012BB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80015DBC 00012BBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015DC0 00012BC0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80015DC4 00012BC4*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4e, context->r3));
/*80015DC8 00012BC8*/ PPC::Runtime::ASM::extsb(context->r3, context->r0);
/*80015DCC 00012BCC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80015DD0 00012BD0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80015DD4 00012BD4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80015DD8 00012BD8*/ PPC::Runtime::ASM::blr();
}