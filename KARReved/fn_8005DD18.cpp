//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005D864.hpp"



void fn_8005DD18(PPC::Runtime::GCContext* context)
{
/*8005DD18 0005AB18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005DD1C 0005AB1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005DD20 0005AB20*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*8005DD24 0005AB24*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*8005DD28 0005AB28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DD2C 0005AB2C*/ PPC::Runtime::ASM::bl(fn_8005D864);
/*8005DD30 0005AB30*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*8005DD34 0005AB34*/ PPC::Runtime::ASM::beq(.L_8005DD98);
/*8005DD38 0005AB38*/ PPC::Runtime::ASM::mulli(context->r6, context->r3, 0xb8);
/*8005DD3C 0005AB3C*/ PPC::Runtime::ASM::lis(context->r5, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_HighBit);
/*8005DD40 0005AB40*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8005DD44 0005AB44*/ PPC::Runtime::ASM::addi(context->r0, context->r5, STRUCT_BYTE4_COUNT_180538088 @ Get_MemoryOffset_LowBit);
/*8005DD48 0005AB48*/ PPC::Runtime::ASM::add(context->r5, context->r0, context->r6);
/*8005DD4C 0005AB4C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x33c);
/*8005DD50 0005AB50*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD54 0005AB54*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 31, 31);
/*8005DD58 0005AB58*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD5C 0005AB5C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD60 0005AB60*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 3, 28, 28);
/*8005DD64 0005AB64*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD68 0005AB68*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD6C 0005AB6C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 2, 29, 29);
/*8005DD70 0005AB70*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD74 0005AB74*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD78 0005AB78*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 1, 30, 30);
/*8005DD7C 0005AB7C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD80 0005AB80*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD84 0005AB84*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 4, 27, 27);
/*8005DD88 0005AB88*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r5));
/*8005DD8C 0005AB8C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r5));
/*8005DD90 0005AB90*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*8005DD94 0005AB94*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x55, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_8005DD98, 0x8005DD98) //this is a jump label
/*8005DD98 0005AB98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005DD9C 0005AB9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005DDA0 0005ABA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005DDA4 0005ABA4*/ PPC::Runtime::ASM::blr();
}