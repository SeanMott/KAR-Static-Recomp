//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022CBF4.hpp"
#include "fn_RumbleController.hpp"



void fn_80190B40(PPC::Runtime::GCContext* context)
{
/*80190B40 0018D940*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80190B44 0018D944*/ PPC::Runtime::ASM::mflr(context->r0);
/*80190B48 0018D948*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80190B4C 0018D94C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80190B50 0018D950*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80190B54 0018D954*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80190B58 0018D958*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80190B5C 0018D95C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80190B60 0018D960*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80190B64 0018D964*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80190B68 0018D968*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r5));
/*80190B6C 0018D96C*/ PPC::Runtime::ASM::b(.L_80190B9C);
RUNTIME_PPC_JUMP_LABEL(.L_80190B70, 0x80190B70) //this is a jump label
/*80190B70 0018D970*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r29));
/*80190B74 0018D974*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80190B78 0018D978*/ PPC::Runtime::ASM::bl(fn_8022CBF4);
/*80190B7C 0018D97C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80190B80 0018D980*/ PPC::Runtime::ASM::beq(.L_80190B98);
/*80190B84 0018D984*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9, context->r31));
/*80190B88 0018D988*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80190B8C 0018D98C*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*80190B90 0018D990*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*80190B94 0018D994*/ PPC::Runtime::ASM::bl(fn_RumbleController);
RUNTIME_PPC_JUMP_LABEL(.L_80190B98, 0x80190B98) //this is a jump label
/*80190B98 0018D998*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_80190B9C, 0x80190B9C) //this is a jump label
/*80190B9C 0018D99C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80190BA0 0018D9A0*/ PPC::Runtime::ASM::bne(.L_80190B70);
/*80190BA4 0018D9A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80190BA8 0018D9A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80190BAC 0018D9AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80190BB0 0018D9B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80190BB4 0018D9B4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80190BB8 0018D9B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80190BBC 0018D9BC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80190BC0 0018D9C0*/ PPC::Runtime::ASM::blr();
}