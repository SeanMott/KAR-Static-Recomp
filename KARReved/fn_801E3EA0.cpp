//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CF5D0.hpp"
#include "fn_801CEB80.hpp"
#include "fn_800CEC44.hpp"
#include "fn_801D3940.hpp"
#include "fn_801DD29C.hpp"
#include "fn_801DD13C.hpp"
#include "fn_801CAA40.hpp"
#include "fn_80279DEC.hpp"



void fn_801E3EA0(PPC::Runtime::GCContext* context)
{
/*801E3EA0 001E0CA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E3EA4 001E0CA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E3EA8 001E0CA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E3EAC 001E0CAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E3EB0 001E0CB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E3EB4 001E0CB4*/ PPC::Runtime::ASM::bl(fn_801CF5D0);
/*801E3EB8 001E0CB8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E3EBC 001E0CBC*/ PPC::Runtime::ASM::bl(fn_801CEB80);
/*801E3EC0 001E0CC0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*801E3EC4 001E0CC4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801E3EC8 001E0CC8*/ PPC::Runtime::ASM::beq(.L_801E3F38);
/*801E3ECC 001E0CCC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E3ED0 001E0CD0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8c, context->r31));
/*801E3ED4 001E0CD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r3));
/*801E3ED8 001E0CD8*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*801E3EDC 001E0CDC*/ PPC::Runtime::ASM::blt(.L_801E3F38);
/*801E3EE0 001E0CE0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801E3EE4 001E0CE4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E3EE8 001E0CE8*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*801E3EEC 001E0CEC*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801E3EF0 001E0CF0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x734, context->r31));
/*801E3EF4 001E0CF4*/ PPC::Runtime::ASM::bl(fn_800CEC44);
/*801E3EF8 001E0CF8*/ PPC::Runtime::ASM::mr(context->r0, context->r3);
/*801E3EFC 001E0CFC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E3F00 001E0D00*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*801E3F04 001E0D04*/ PPC::Runtime::ASM::bl(fn_801D3940);
/*801E3F08 001E0D08*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x734, context->r31));
/*801E3F0C 001E0D0C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E3F10 001E0D10*/ PPC::Runtime::ASM::bl(fn_801DD29C);
/*801E3F14 001E0D14*/ PPC::Runtime::ASM::lis(context->r5, 0x2);
/*801E3F18 001E0D18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x850, context->r31));
/*801E3F1C 001E0D1C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1DB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E3F20 001E0D20*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E3F24 001E0D24*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x22);
/*801E3F28 001E0D28*/ PPC::Runtime::ASM::bl(fn_801DD13C);
/*801E3F2C 001E0D2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801E3F30 001E0D30*/ PPC::Runtime::ASM::bl(fn_801CAA40);
/*801E3F34 001E0D34*/ PPC::Runtime::ASM::bl(fn_80279DEC);
RUNTIME_PPC_JUMP_LABEL(.L_801E3F38, 0x801E3F38) //this is a jump label
/*801E3F38 001E0D38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E3F3C 001E0D3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E3F40 001E0D40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E3F44 001E0D44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E3F48 001E0D48*/ PPC::Runtime::ASM::blr();
}