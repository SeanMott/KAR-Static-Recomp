//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_loadEvent(PPC::Runtime::GCContext* context)
{
/*800DB2B8 000D80B8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800DB2BC 000D80BC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DB2C0 000D80C0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800DB2C4 000D80C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DB2C8 000D80C8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 800DB2CC 000D80CC  7C 9F 23 79 */ mr. context->r31 , context->r4
/*800DB2D0 000D80D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DB2D4 000D80D4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800DB2D8 000D80D8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800DB2DC 000D80DC*/ PPC::Runtime::ASM::ble(.L_800DB378);
/*800DB2E0 000D80E0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x8);
/*800DB2E4 000D80E4*/ PPC::Runtime::ASM::subi(context->r4, context->r31, 0x8);
/*800DB2E8 000D80E8*/ PPC::Runtime::ASM::ble(.L_800DB350);
/*800DB2EC 000D80EC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x7);
/*800DB2F0 000D80F0*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800DB2F4 000D80F4*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 3);
/*800DB2F8 000D80F8*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800DB2FC 000D80FC*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800DB300 000D8100*/ PPC::Runtime::ASM::ble(.L_800DB350);
RUNTIME_PPC_JUMP_LABEL(.L_800DB304, 0x800DB304) //this is a jump label
/*800DB304 000D8104*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800DB308 000D8108*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x8);
/*800DB30C 000D810C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*800DB310 000D8110*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*800DB314 000D8114*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800DB318 000D8118*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800DB31C 000D811C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r5));
/*800DB320 000D8120*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*800DB324 000D8124*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r5));
/*800DB328 000D8128*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800DB32C 000D812C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r5));
/*800DB330 000D8130*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*800DB334 000D8134*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r5));
/*800DB338 000D8138*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800DB33C 000D813C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r5));
/*800DB340 000D8140*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r4);
/*800DB344 000D8144*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x20);
/*800DB348 000D8148*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800DB34C 000D814C*/ PPC::Runtime::ASM::bdnz(.L_800DB304);
RUNTIME_PPC_JUMP_LABEL(.L_800DB350, 0x800DB350) //this is a jump label
/*800DB350 000D8150*/ PPC::Runtime::ASM::slwi(context->r4, context->r6, 2);
/*800DB354 000D8154*/ PPC::Runtime::ASM::subf(context->r0, context->r6, context->r31);
/*800DB358 000D8158*/ PPC::Runtime::ASM::add(context->r4, context->r30, context->r4);
/*800DB35C 000D815C*/ PPC::Runtime::ASM::mtctr(context->r0);
/*800DB360 000D8160*/ PPC::Runtime::ASM::cmpw(context->r6, context->r31);
/*800DB364 000D8164*/ PPC::Runtime::ASM::bge(.L_800DB378);
RUNTIME_PPC_JUMP_LABEL(.L_800DB368, 0x800DB368) //this is a jump label
/*800DB368 000D8168*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800DB36C 000D816C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*800DB370 000D8170*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800DB374 000D8174*/ PPC::Runtime::ASM::bdnz(.L_800DB368);
RUNTIME_PPC_JUMP_LABEL(.L_800DB378, 0x800DB378) //this is a jump label
/*800DB378 000D8178*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*800DB37C 000D817C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800DB380 000D8180*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800DB384 000D8184*/ PPC::Runtime::ASM::mr(context->r6, context->r5);
/*800DB388 000D8188*/ PPC::Runtime::ASM::mtctr(context->r31);
/*800DB38C 000D818C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*800DB390 000D8190*/ PPC::Runtime::ASM::ble(.L_800DB3C0);
RUNTIME_PPC_JUMP_LABEL(.L_800DB394, 0x800DB394) //this is a jump label
/*800DB394 000D8194*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800DB398 000D8198*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800DB39C 000D819C*/ PPC::Runtime::ASM::beq(.L_800DB3B4);
/*800DB3A0 000D81A0*/ PPC::Runtime::ASM::add(context->r5, context->r5, context->r0);
/*800DB3A4 000D81A4*/ PPC::Runtime::ASM::cmpw(context->r3, context->r5);
/*800DB3A8 000D81A8*/ PPC::Runtime::ASM::bge(.L_800DB3B4);
/*800DB3AC 000D81AC*/ PPC::Runtime::ASM::mr(context->r3, context->r6);
/*800DB3B0 000D81B0*/ PPC::Runtime::ASM::b(.L_800DB3C4);
RUNTIME_PPC_JUMP_LABEL(.L_800DB3B4, 0x800DB3B4) //this is a jump label
/*800DB3B4 000D81B4*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*800DB3B8 000D81B8*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x1);
/*800DB3BC 000D81BC*/ PPC::Runtime::ASM::bdnz(.L_800DB394);
RUNTIME_PPC_JUMP_LABEL(.L_800DB3C0, 0x800DB3C0) //this is a jump label
/*800DB3C0 000D81C0*/ PPC::Runtime::ASM::li(context->r3, -0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800DB3C4, 0x800DB3C4) //this is a jump label
/*800DB3C4 000D81C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DB3C8 000D81C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800DB3CC 000D81CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800DB3D0 000D81D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DB3D4 000D81D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800DB3D8 000D81D8*/ PPC::Runtime::ASM::blr();
}