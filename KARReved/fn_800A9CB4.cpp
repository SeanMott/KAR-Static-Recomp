//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007D42C.hpp"
#include "fn_8007D440.hpp"
#include "fn_8007D458.hpp"
#include "fn_8007D524.hpp"
#include "fn_800A9F1C.hpp"
#include "fn_800D5414.hpp"
#include "fn_800D5414.hpp"
#include "fn_800D5414.hpp"
#include "fn_800D5444.hpp"
#include "fn_800AA3F0.hpp"
#include "fn_eventInit.hpp"
#include "fn_800AA974.hpp"
#include "fn_800A9ED8.hpp"



void fn_800A9CB4(PPC::Runtime::GCContext* context)
{
/*800A9CB4 000A6AB4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A9CB8 000A6AB8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A9CBC 000A6ABC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A9CC0 000A6AC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A9CC4 000A6AC4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A9CC8 000A6AC8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9CCC 000A6ACC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A9CD0 000A6AD0*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800A9CD4 000A6AD4*/ PPC::Runtime::ASM::bl(fn_8007D42C);
/*800A9CD8 000A6AD8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800A9CDC 000A6ADC*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800A9CE0 000A6AE0*/ PPC::Runtime::ASM::bl(fn_8007D440);
/*800A9CE4 000A6AE4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800A9CE8 000A6AE8*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800A9CEC 000A6AEC*/ PPC::Runtime::ASM::bl(fn_8007D458);
/*800A9CF0 000A6AF0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800A9CF4 000A6AF4*/ PPC::Runtime::ASM::bl(fn_8007D524);
/*800A9CF8 000A6AF8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800A9CFC 000A6AFC*/ PPC::Runtime::ASM::beq(.L_800A9EA0);
/*800A9D00 000A6B00*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9D04 000A6B04*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9D08 000A6B08*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8d, context->r3));
/* 800A9D0C 000A6B0C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800A9D10 000A6B10*/ PPC::Runtime::ASM::bne(.L_800A9D18);
/*800A9D14 000A6B14*/ PPC::Runtime::ASM::bl(fn_800A9F1C);
RUNTIME_PPC_JUMP_LABEL(.L_800A9D18, 0x800A9D18) //this is a jump label
/*800A9D18 000A6B18*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r29, 0, 25, 25);
/*800A9D1C 000A6B1C*/ PPC::Runtime::ASM::beq(.L_800A9EB8);
/*800A9D20 000A6B20*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9D24 000A6B24*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 30, 30);
/*800A9D28 000A6B28*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9D2C 000A6B2C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f44, context->r3));
/*800A9D30 000A6B30*/ PPC::Runtime::ASM::beq(.L_800A9D48);
/*800A9D34 000A6B34*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
/*800A9D38 000A6B38*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x3);
/*800A9D3C 000A6B3C*/ PPC::Runtime::ASM::ble(.L_800A9D5C);
/*800A9D40 000A6B40*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A9D44 000A6B44*/ PPC::Runtime::ASM::b(.L_800A9D5C);
RUNTIME_PPC_JUMP_LABEL(.L_800A9D48, 0x800A9D48) //this is a jump label
/* 800A9D48 000A6B48  57 C0 07 FF */ clrlwi. context->r0 , context->r30 , 31
/*800A9D4C 000A6B4C*/ PPC::Runtime::ASM::beq(.L_800A9D5C);
/* 800A9D50 000A6B50  34 84 FF FF */ subic. context->r4 , context->r4 , 0x1
/*800A9D54 000A6B54*/ PPC::Runtime::ASM::bge(.L_800A9D5C);
/*800A9D58 000A6B58*/ PPC::Runtime::ASM::li(context->r4, 0x3);
RUNTIME_PPC_JUMP_LABEL(.L_800A9D5C, 0x800A9D5C) //this is a jump label
/*800A9D5C 000A6B5C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x2);
/*800A9D60 000A6B60*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f44, context->r3));
/*800A9D64 000A6B64*/ PPC::Runtime::ASM::beq(.L_800A9E20);
/*800A9D68 000A6B68*/ PPC::Runtime::ASM::bge(.L_800A9D7C);
/*800A9D6C 000A6B6C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800A9D70 000A6B70*/ PPC::Runtime::ASM::beq(.L_800A9D88);
/*800A9D74 000A6B74*/ PPC::Runtime::ASM::bge(.L_800A9E14);
/*800A9D78 000A6B78*/ PPC::Runtime::ASM::b(.L_800A9EB8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9D7C, 0x800A9D7C) //this is a jump label
/*800A9D7C 000A6B7C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x4);
/*800A9D80 000A6B80*/ PPC::Runtime::ASM::bge(.L_800A9EB8);
/*800A9D84 000A6B84*/ PPC::Runtime::ASM::b(.L_800A9E94);
RUNTIME_PPC_JUMP_LABEL(.L_800A9D88, 0x800A9D88) //this is a jump label
/*800A9D88 000A6B88*/ PPC::Runtime::ASM::bl(fn_800D5414);
/*800A9D8C 000A6B8C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800A9D90 000A6B90*/ PPC::Runtime::ASM::beq(.L_800A9EB8);
/*800A9D94 000A6B94*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 29, 29);
/*800A9D98 000A6B98*/ PPC::Runtime::ASM::beq(.L_800A9DCC);
/*800A9D9C 000A6B9C*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9DA0 000A6BA0*/ PPC::Runtime::ASM::addi(context->r30, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9DA4 000A6BA4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
/*800A9DA8 000A6BA8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800A9DAC 000A6BAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
/*800A9DB0 000A6BB0*/ PPC::Runtime::ASM::bl(fn_800D5414);
/*800A9DB4 000A6BB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
/*800A9DB8 000A6BB8*/ PPC::Runtime::ASM::cmpw(context->r0, context->r3);
/*800A9DBC 000A6BBC*/ PPC::Runtime::ASM::blt(.L_800A9DF8);
/*800A9DC0 000A6BC0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A9DC4 000A6BC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
/*800A9DC8 000A6BC8*/ PPC::Runtime::ASM::b(.L_800A9DF8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9DCC, 0x800A9DCC) //this is a jump label
/*800A9DCC 000A6BCC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 28, 28);
/*800A9DD0 000A6BD0*/ PPC::Runtime::ASM::beq(.L_800A9DF8);
/*800A9DD4 000A6BD4*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9DD8 000A6BD8*/ PPC::Runtime::ASM::addi(context->r30, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9DDC 000A6BDC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
/* 800A9DE0 000A6BE0  34 03 FF FF */ subic. context->r0 , context->r3 , 0x1
/*800A9DE4 000A6BE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
/*800A9DE8 000A6BE8*/ PPC::Runtime::ASM::bge(.L_800A9DF8);
/*800A9DEC 000A6BEC*/ PPC::Runtime::ASM::bl(fn_800D5414);
/*800A9DF0 000A6BF0*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*800A9DF4 000A6BF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800A9DF8, 0x800A9DF8) //this is a jump label
/*800A9DF8 000A6BF8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r31, 0, 23, 23);
/*800A9DFC 000A6BFC*/ PPC::Runtime::ASM::beq(.L_800A9EB8);
/*800A9E00 000A6C00*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9E04 000A6C04*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9E08 000A6C08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f48, context->r3));
/*800A9E0C 000A6C0C*/ PPC::Runtime::ASM::bl(fn_800D5444);
/*800A9E10 000A6C10*/ PPC::Runtime::ASM::b(.L_800A9EB8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9E14, 0x800A9E14) //this is a jump label
/*800A9E14 000A6C14*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800A9E18 000A6C18*/ PPC::Runtime::ASM::bl(fn_800AA3F0);
/*800A9E1C 000A6C1C*/ PPC::Runtime::ASM::b(.L_800A9EB8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9E20, 0x800A9E20) //this is a jump label
/*800A9E20 000A6C20*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 29, 29);
/*800A9E24 000A6C24*/ PPC::Runtime::ASM::beq(.L_800A9E50);
/*800A9E28 000A6C28*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9E2C 000A6C2C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9E30 000A6C30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
/*800A9E34 000A6C34*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800A9E38 000A6C38*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x10);
/*800A9E3C 000A6C3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
/*800A9E40 000A6C40*/ PPC::Runtime::ASM::blt(.L_800A9E78);
/*800A9E44 000A6C44*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800A9E48 000A6C48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
/*800A9E4C 000A6C4C*/ PPC::Runtime::ASM::b(.L_800A9E78);
RUNTIME_PPC_JUMP_LABEL(.L_800A9E50, 0x800A9E50) //this is a jump label
/*800A9E50 000A6C50*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r30, 0, 28, 28);
/*800A9E54 000A6C54*/ PPC::Runtime::ASM::beq(.L_800A9E78);
/*800A9E58 000A6C58*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9E5C 000A6C5C*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9E60 000A6C60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
/* 800A9E64 000A6C64  34 03 FF FF */ subic. context->r0 , context->r3 , 0x1
/*800A9E68 000A6C68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
/*800A9E6C 000A6C6C*/ PPC::Runtime::ASM::bge(.L_800A9E78);
/*800A9E70 000A6C70*/ PPC::Runtime::ASM::li(context->r0, 0xf);
/*800A9E74 000A6C74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r4));
RUNTIME_PPC_JUMP_LABEL(.L_800A9E78, 0x800A9E78) //this is a jump label
/*800A9E78 000A6C78*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r31, 0, 23, 23);
/*800A9E7C 000A6C7C*/ PPC::Runtime::ASM::beq(.L_800A9EB8);
/*800A9E80 000A6C80*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9E84 000A6C84*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9E88 000A6C88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f4c, context->r3));
/*800A9E8C 000A6C8C*/ PPC::Runtime::ASM::bl(fn_eventInit);
/*800A9E90 000A6C90*/ PPC::Runtime::ASM::b(.L_800A9EB8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9E94, 0x800A9E94) //this is a jump label
/*800A9E94 000A6C94*/ PPC::Runtime::ASM::mr(context->r3, context->r28);
/*800A9E98 000A6C98*/ PPC::Runtime::ASM::bl(fn_800AA974);
/*800A9E9C 000A6C9C*/ PPC::Runtime::ASM::b(.L_800A9EB8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9EA0, 0x800A9EA0) //this is a jump label
/*800A9EA0 000A6CA0*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A9EA4 000A6CA4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A9EA8 000A6CA8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8d, context->r3));
/* 800A9EAC 000A6CAC  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*800A9EB0 000A6CB0*/ PPC::Runtime::ASM::beq(.L_800A9EB8);
/*800A9EB4 000A6CB4*/ PPC::Runtime::ASM::bl(fn_800A9ED8);
RUNTIME_PPC_JUMP_LABEL(.L_800A9EB8, 0x800A9EB8) //this is a jump label
/*800A9EB8 000A6CB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A9EBC 000A6CBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A9EC0 000A6CC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A9EC4 000A6CC4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9EC8 000A6CC8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800A9ECC 000A6CCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A9ED0 000A6CD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A9ED4 000A6CD4*/ PPC::Runtime::ASM::blr();
}