//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn_OSSleepThread.hpp"
#include "fn_OSWakeupThread.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_803D7A54(PPC::Runtime::GCContext* context)
{
/*803D7A54 003D4854*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D7A58 003D4858*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D7A5C 003D485C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*803D7A60 003D4860*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D7A64 003D4864*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803D7A68 003D4868*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D7A6C 003D486C*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*803D7A70 003D4870*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D7A74 003D4874*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D7A78 003D4878*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*803D7A7C 003D487C*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D7A80 003D4880*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803D7A84 003D4884*/ PPC::Runtime::ASM::clrlwi(context->r30, context->r30, 31);
/*803D7A88 003D4888*/ PPC::Runtime::ASM::b(.L_803D7AAC);
RUNTIME_PPC_JUMP_LABEL(.L_803D7A8C, 0x803D7A8C) //this is a jump label
/*803D7A8C 003D488C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*803D7A90 003D4890*/ PPC::Runtime::ASM::bne(.L_803D7AA4);
/*803D7A94 003D4894*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D7A98 003D4898*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D7A9C 003D489C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803D7AA0 003D48A0*/ PPC::Runtime::ASM::b(.L_803D7B10);
RUNTIME_PPC_JUMP_LABEL(.L_803D7AA4, 0x803D7AA4) //this is a jump label
/*803D7AA4 003D48A4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x8);
/*803D7AA8 003D48A8*/ PPC::Runtime::ASM::bl(fn_OSSleepThread);
RUNTIME_PPC_JUMP_LABEL(.L_803D7AAC, 0x803D7AAC) //this is a jump label
/*803D7AAC 003D48AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*803D7AB0 003D48B0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D7AB4 003D48B4*/ PPC::Runtime::ASM::beq(.L_803D7A8C);
/*803D7AB8 003D48B8*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*803D7ABC 003D48BC*/ PPC::Runtime::ASM::beq(.L_803D7AD4);
/*803D7AC0 003D48C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803D7AC4 003D48C4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803D7AC8 003D48C8*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*803D7ACC 003D48CC*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*803D7AD0 003D48D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
RUNTIME_PPC_JUMP_LABEL(.L_803D7AD4, 0x803D7AD4) //this is a jump label
/*803D7AD4 003D48D4*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803D7AD8 003D48D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803D7ADC 003D48DC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*803D7AE0 003D48E0*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/*803D7AE4 003D48E4*/ PPC::Runtime::ASM::divw(context->r0, context->r5, context->r4);
/*803D7AE8 003D48E8*/ PPC::Runtime::ASM::mullw(context->r0, context->r0, context->r4);
/*803D7AEC 003D48EC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r5);
/*803D7AF0 003D48F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r31));
/*803D7AF4 003D48F4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*803D7AF8 003D48F8*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*803D7AFC 003D48FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*803D7B00 003D4900*/ PPC::Runtime::ASM::bl(fn_OSWakeupThread);
/*803D7B04 003D4904*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D7B08 003D4908*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D7B0C 003D490C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_803D7B10, 0x803D7B10) //this is a jump label
/*803D7B10 003D4910*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803D7B14 003D4914*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D7B18 003D4918*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D7B1C 003D491C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803D7B20 003D4920*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803D7B24 003D4924*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*803D7B28 003D4928*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D7B2C 003D492C*/ PPC::Runtime::ASM::blr();
}