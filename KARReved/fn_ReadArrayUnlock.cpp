//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "EXISelect.hpp"
#include "memset.hpp"
#include "fn_EXIImmEx.hpp"
#include "fn_EXIImmEx.hpp"
#include "fn_EXIImmEx.hpp"
#include "EXIDeselect.hpp"



void fn_ReadArrayUnlock(PPC::Runtime::GCContext* context)
{
/*803E3278 003E0078*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E327C 003E007C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E3280 003E0080*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*803E3284 003E0084*/ PPC::Runtime::ASM::stmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803E3288 003E0088*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803E328C 003E008C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E3290 003E0090*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E3294 003E0094*/ PPC::Runtime::ASM::mulli(context->r8, context->r29, 0x110);
/*803E3298 003E0098*/ PPC::Runtime::ASM::addi(context->r26, context->r4, 0x0);
/*803E329C 003E009C*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*803E32A0 003E00A0*/ PPC::Runtime::ASM::addi(context->r31, context->r6, 0x0);
/*803E32A4 003E00A4*/ PPC::Runtime::ASM::addi(context->r27, context->r7, 0x0);
/*803E32A8 003E00A8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E32AC 003E00AC*/ PPC::Runtime::ASM::add(context->r28, context->r0, context->r8);
/*803E32B0 003E00B0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E32B4 003E00B4*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803E32B8 003E00B8*/ PPC::Runtime::ASM::bl(EXISelect);
/*803E32BC 003E00BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E32C0 003E00C0*/ PPC::Runtime::ASM::bne(.L_803E32CC);
/*803E32C4 003E00C4*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E32C8 003E00C8*/ PPC::Runtime::ASM::b(.L_803E33A8);
RUNTIME_PPC_JUMP_LABEL(.L_803E32CC, 0x803E32CC) //this is a jump label
/*803E32CC 003E00CC*/ PPC::Runtime::ASM::clrrwi(context->r26, context->r26, 12);
/*803E32D0 003E00D0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*803E32D4 003E00D4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803E32D8 003E00D8*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*803E32DC 003E00DC*/ PPC::Runtime::ASM::bl(memset);
/*803E32E0 003E00E0*/ PPC::Runtime::ASM::li(context->r0, 0x52);
/*803E32E4 003E00E4*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*803E32E8 003E00E8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E32EC 003E00EC*/ PPC::Runtime::ASM::bne(.L_803E3314);
/*803E32F0 003E00F0*/ PPC::Runtime::ASM::extrwi(context->r0, context->r26, 2, 1);
/*803E32F4 003E00F4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d, context->r1));
/*803E32F8 003E00F8*/ PPC::Runtime::ASM::extrwi(context->r0, context->r26, 8, 3);
/*803E32FC 003E00FC*/ PPC::Runtime::ASM::extrwi(context->r3, context->r26, 2, 11);
/*803E3300 003E0100*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e, context->r1));
/*803E3304 003E0104*/ PPC::Runtime::ASM::extrwi(context->r0, context->r26, 7, 13);
/*803E3308 003E0108*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f, context->r1));
/*803E330C 003E010C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803E3310 003E0110*/ PPC::Runtime::ASM::b(.L_803E3324);
RUNTIME_PPC_JUMP_LABEL(.L_803E3314, 0x803E3314) //this is a jump label
/*803E3314 003E0114*/ PPC::Runtime::ASM::srwi(context->r0, context->r26, 24);
/*803E3318 003E0118*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d, context->r1));
/*803E331C 003E011C*/ PPC::Runtime::ASM::extrwi(context->r0, context->r26, 8, 8);
/*803E3320 003E0120*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e, context->r1));
RUNTIME_PPC_JUMP_LABEL(.L_803E3324, 0x803E3324) //this is a jump label
/*803E3324 003E0124*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E3328 003E0128*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x1c);
/*803E332C 003E012C*/ PPC::Runtime::ASM::li(context->r5, 0x5);
/*803E3330 003E0130*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803E3334 003E0134*/ PPC::Runtime::ASM::bl(fn_EXIImmEx);
/*803E3338 003E0138*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r28));
/*803E333C 003E013C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E3340 003E0140*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r28));
/*803E3344 003E0144*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E3348 003E0148*/ PPC::Runtime::ASM::srwi(context->r28, context->r0, 5);
/*803E334C 003E014C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x200);
/*803E3350 003E0150*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*803E3354 003E0154*/ PPC::Runtime::ASM::bl(fn_EXIImmEx);
/*803E3358 003E0158*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E335C 003E015C*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E3360 003E0160*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E3364 003E0164*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/*803E3368 003E0168*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x0);
/*803E336C 003E016C*/ PPC::Runtime::ASM::or(context->r28, context->r28, context->r0);
/*803E3370 003E0170*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*803E3374 003E0174*/ PPC::Runtime::ASM::bl(fn_EXIImmEx);
/*803E3378 003E0178*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E337C 003E017C*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E3380 003E0180*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*803E3384 003E0184*/ PPC::Runtime::ASM::or(context->r28, context->r28, context->r0);
/*803E3388 003E0188*/ PPC::Runtime::ASM::bl(EXIDeselect);
/*803E338C 003E018C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803E3390 003E0190*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803E3394 003E0194*/ PPC::Runtime::ASM::or.(context->r28, context->r28, context->r0);
/*803E3398 003E0198*/ PPC::Runtime::ASM::beq(.L_803E33A4);
/*803E339C 003E019C*/ PPC::Runtime::ASM::li(context->r3, -0x3);
/*803E33A0 003E01A0*/ PPC::Runtime::ASM::b(.L_803E33A8);
RUNTIME_PPC_JUMP_LABEL(.L_803E33A4, 0x803E33A4) //this is a jump label
/*803E33A4 003E01A4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803E33A8, 0x803E33A8) //this is a jump label
/*803E33A8 003E01A8*/ PPC::Runtime::ASM::lmw(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803E33AC 003E01AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*803E33B0 003E01B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*803E33B4 003E01B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E33B8 003E01B8*/ PPC::Runtime::ASM::blr();
}