//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D49F8(PPC::Runtime::GCContext* context)
{
/*800D49F8 000D17F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D49FC 000D17FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D4A00 000D1800*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D4A04 000D1804*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D4A08 000D1808*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D4A0C 000D180C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D4A10 000D1810*/ PPC::Runtime::ASM::addi(context->r30, context->r4, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D4A14 000D1814*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D4A18 000D1818*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800D4A1C 000D181C*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D4A20 000D1820*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D4A24 000D1824*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D4A28 000D1828*/ PPC::Runtime::ASM::bne(.L_800D4A3C);
/*800D4A2C 000D182C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D4A30 000D1830*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x66c);
/*800D4A34 000D1834*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D4A38 000D1838*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4A3C, 0x800D4A3C) //this is a jump label
/*800D4A3C 000D183C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D4A40 000D1840*/ PPC::Runtime::ASM::xor(context->r0, context->r29, context->r0);
/*800D4A44 000D1844*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D4A48 000D1848*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r29);
/*800D4A4C 000D184C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D4A50 000D1850  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D4A54 000D1854*/ PPC::Runtime::ASM::beq(.L_800D4A84);
/*800D4A58 000D1858*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D4A5C 000D185C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D4A60 000D1860*/ PPC::Runtime::ASM::beq(.L_800D4A6C);
/*800D4A64 000D1864*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D4A68 000D1868*/ PPC::Runtime::ASM::b(.L_800D4A70);
RUNTIME_PPC_JUMP_LABEL(.L_800D4A6C, 0x800D4A6C) //this is a jump label
/*800D4A6C 000D186C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D4A70, 0x800D4A70) //this is a jump label
/*800D4A70 000D1870*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r29);
/*800D4A74 000D1874*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D4A78 000D1878*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D4A7C 000D187C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D4A80 000D1880*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D4A84, 0x800D4A84) //this is a jump label
/*800D4A84 000D1884*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D4A88 000D1888*/ PPC::Runtime::ASM::bne(.L_800D4AAC);
/*800D4A8C 000D188C*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*800D4A90 000D1890*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x67c);
/*800D4A94 000D1894*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D4A98 000D1898*/ PPC::Runtime::ASM::bl(OSReport);
/*800D4A9C 000D189C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800D4AA0 000D18A0*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x68c);
/*800D4AA4 000D18A4*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D4AA8 000D18A8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D4AAC, 0x800D4AAC) //this is a jump label
/*800D4AAC 000D18AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r31));
/*800D4AB0 000D18B0*/ PPC::Runtime::ASM::slwi(context->r0, context->r29, 2);
/*800D4AB4 000D18B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D4AB8 000D18B8*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800D4ABC 000D18BC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r3));
/*800D4AC0 000D18C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D4AC4 000D18C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D4AC8 000D18C8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D4ACC 000D18CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D4AD0 000D18D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D4AD4 000D18D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D4AD8 000D18D8*/ PPC::Runtime::ASM::blr();
}