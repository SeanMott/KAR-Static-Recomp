//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800DBE48.hpp"



void fn_8010E0E4(PPC::Runtime::GCContext* context)
{
/*8010E0E4 0010AEE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8010E0E8 0010AEE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*8010E0EC 0010AEEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010E0F0 0010AEF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010E0F4 0010AEF4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010E0F8 0010AEF8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010E0FC 0010AEFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8010E100 0010AF00*/ PPC::Runtime::ASM::lis(context->r3, StructWithFuncPtrs_141 @ Get_MemoryOffset_HighBit);
/*8010E104 0010AF04*/ PPC::Runtime::ASM::addi(context->r31, context->r3, StructWithFuncPtrs_141 @ Get_MemoryOffset_LowBit);
/*8010E108 0010AF08*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8010E10C 0010AF0C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8010E110 0010AF10*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*8010E114 0010AF14*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8010E118 0010AF18*/ PPC::Runtime::ASM::beq(.L_8010E12C);
/*8010E11C 0010AF1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8010E120 0010AF20*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8010E124 0010AF24*/ PPC::Runtime::ASM::beq(.L_8010E12C);
/*8010E128 0010AF28*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8010E12C, 0x8010E12C) //this is a jump label
/*8010E12C 0010AF2C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8010E130 0010AF30*/ PPC::Runtime::ASM::bne(.L_8010E144);
/*8010E134 0010AF34*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc);
/*8010E138 0010AF38*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x18);
/*8010E13C 0010AF3C*/ PPC::Runtime::ASM::li(context->r4, 0x2a);
/*8010E140 0010AF40*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8010E144, 0x8010E144) //this is a jump label
/*8010E144 0010AF44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*8010E148 0010AF48*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8010E14C 0010AF4C*/ PPC::Runtime::ASM::bl(fn_800DBE48);
/*8010E150 0010AF50*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8010E154 0010AF54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8010E158 0010AF58*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xa);
/*8010E15C 0010AF5C*/ PPC::Runtime::ASM::ble(.L_8010E170);
/*8010E160 0010AF60*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xc);
/*8010E164 0010AF64*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x40);
/*8010E168 0010AF68*/ PPC::Runtime::ASM::li(context->r4, 0x30);
/*8010E16C 0010AF6C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8010E170, 0x8010E170) //this is a jump label
/*8010E170 0010AF70*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*8010E174 0010AF74*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8010E178 0010AF78*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8010E17C 0010AF7C*/ PPC::Runtime::ASM::b(.L_8010E19C);
RUNTIME_PPC_JUMP_LABEL(.L_8010E180, 0x8010E180) //this is a jump label
/*8010E180 0010AF80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8010E184 0010AF84*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x8);
/*8010E188 0010AF88*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x10);
/*8010E18C 0010AF8C*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x1);
/*8010E190 0010AF90*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*8010E194 0010AF94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x728, context->r5));
/*8010E198 0010AF98*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x4);
RUNTIME_PPC_JUMP_LABEL(.L_8010E19C, 0x8010E19C) //this is a jump label
/*8010E19C 0010AF9C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8010E1A0 0010AFA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8010E1A4 0010AFA4*/ PPC::Runtime::ASM::cmpw(context->r6, context->r0);
/*8010E1A8 0010AFA8*/ PPC::Runtime::ASM::blt(.L_8010E180);
/*8010E1AC 0010AFAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8010E1B0 0010AFB0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8010E1B4 0010AFB4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8010E1B8 0010AFB8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8010E1BC 0010AFBC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8010E1C0 0010AFC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8010E1C4 0010AFC4*/ PPC::Runtime::ASM::blr();
}