//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_grGetStageScale.hpp"
#include "fn_800E5B20.hpp"
#include "fn_800E64BC.hpp"
#include "fn_800E674C.hpp"
#include "fn_800E64BC.hpp"
#include "fn_800E674C.hpp"



void fn_800E62C0(PPC::Runtime::GCContext* context)
{
/*800E62C0 000E30C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800E62C4 000E30C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E62C8 000E30C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E62CC 000E30CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E62D0 000E30D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E62D4 000E30D4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800E62D8 000E30D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*800E62DC 000E30DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800E62E0 000E30E0*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800E62E4 000E30E4*/ PPC::Runtime::ASM::beq(.L_800E631C);
/*800E62E8 000E30E8*/ PPC::Runtime::ASM::bl(fn_grGetStageScale);
/*800E62EC 000E30EC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800E62F0 000E30F0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xe4);
/*800E62F4 000E30F4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x104);
/*800E62F8 000E30F8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*800E62FC 000E30FC*/ PPC::Runtime::ASM::bl(fn_800E5B20);
/*800E6300 000E3100*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800E6304 000E3104*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xf8);
/*800E6308 000E3108*/ PPC::Runtime::ASM::bl(fn_800E64BC);
/*800E630C 000E310C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800E6310 000E3110*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x100);
/*800E6314 000E3114*/ PPC::Runtime::ASM::bl(fn_800E674C);
/*800E6318 000E3118*/ PPC::Runtime::ASM::b(.L_800E6344);
RUNTIME_PPC_JUMP_LABEL(.L_800E631C, 0x800E631C) //this is a jump label
/*800E631C 000E311C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800E6320 000E3120*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xf8);
/*800E6324 000E3124*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r30));
/*800E6328 000E3128*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800E632C 000E312C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r30));
/*800E6330 000E3130*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xec, context->r30));
/*800E6334 000E3134*/ PPC::Runtime::ASM::bl(fn_800E64BC);
/*800E6338 000E3138*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x100);
/*800E633C 000E313C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800E6340 000E3140*/ PPC::Runtime::ASM::bl(fn_800E674C);
RUNTIME_PPC_JUMP_LABEL(.L_800E6344, 0x800E6344) //this is a jump label
/*800E6344 000E3144*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E6348 000E3148*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800E634C 000E314C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800E6350 000E3150*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E6354 000E3154*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800E6358 000E3158*/ PPC::Runtime::ASM::blr();
}