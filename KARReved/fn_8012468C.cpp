//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012468C(PPC::Runtime::GCContext* context)
{
/*8012468C 0012148C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80124690 00121490*/ PPC::Runtime::ASM::mflr(context->r0);
/*80124694 00121494*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80124698 00121498*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8012469C 0012149C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801246A0 001214A0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801246A4 001214A4*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*801246A8 001214A8*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*801246AC 001214AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x610, context->r31));
/*801246B0 001214B0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801246B4 001214B4*/ PPC::Runtime::ASM::beq(.L_801246C4);
/*801246B8 001214B8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*801246BC 001214BC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801246C0 001214C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x610, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801246C4, 0x801246C4) //this is a jump label
/*801246C4 001214C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801246C8 001214C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801246CC 001214CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801246D0 001214D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801246D4 001214D4*/ PPC::Runtime::ASM::blr();
}