//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80200208.hpp"
#include "fn_801FD780.hpp"



void fn_801FC7F8(PPC::Runtime::GCContext* context)
{
/*801FC7F8 001F95F8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FC7FC 001F95FC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FC800 001F9600*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FC804 001F9604*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FC808 001F9608*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801FC80C 001F960C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FC810 001F9610*/ PPC::Runtime::ASM::bl(fn_80200208);
/*801FC814 001F9614*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac4, context->r31));
/*801FC818 001F9618*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801FC81C 001F961C*/ PPC::Runtime::ASM::beq(.L_801FC82C);
/*801FC820 001F9620*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FC824 001F9624*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801FC828 001F9628*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801FC82C, 0x801FC82C) //this is a jump label
/*801FC82C 001F962C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FC830 001F9630*/ PPC::Runtime::ASM::bl(fn_801FD780);
/*801FC834 001F9634*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FC838 001F9638*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FC83C 001F963C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FC840 001F9640*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FC844 001F9644*/ PPC::Runtime::ASM::blr();
}