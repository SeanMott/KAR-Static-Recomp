//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_ActionStateChange.hpp"
#include "fn_ability_ChangeSpeedometerDesign.hpp"
#include "fn_801A7BDC.hpp"
#include "fn_801B4BE8.hpp"
#include "fn_801B4BA4.hpp"
#include "fn_801B4BE8.hpp"
#include "fn_801B4BA4.hpp"
#include "fn_ability_Tornado_giveHat.hpp"



void fn_ability_Tornado(PPC::Runtime::GCContext* context)
{
/*801B4A3C 001B183C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B4A40 001B1840*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B4A44 001B1844*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1620 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B4A48 001B1848*/ PPC::Runtime::ASM::li(context->r4, 0x40);
/*801B4A4C 001B184C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4A50 001B1850*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801B4A54 001B1854*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*801B4A58 001B1858*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1624 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801B4A5C 001B185C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4A60 001B1860*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B4A64 001B1864*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801B4A68 001B1868*/ PPC::Runtime::ASM::bl(fn_Rider_ActionStateChange);
/*801B4A6C 001B186C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4A70 001B1870*/ PPC::Runtime::ASM::li(context->r4, 0x9);
/*801B4A74 001B1874*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*801B4A78 001B1878*/ PPC::Runtime::ASM::bl(fn_ability_ChangeSpeedometerDesign);
/*801B4A7C 001B187C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801B4A80 001B1880*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4A84 001B1884*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c4, context->r4));
/*801B4A88 001B1888*/ PPC::Runtime::ASM::bl(fn_801A7BDC);
/*801B4A8C 001B188C*/ PPC::Runtime::ASM::lis(context->r3, fn_801B4BE8 @ Get_MemoryOffset_HighBit);
/*801B4A90 001B1890*/ PPC::Runtime::ASM::lis(context->r4, fn_801B4BA4 @ Get_MemoryOffset_HighBit);
/*801B4A94 001B1894*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801B4BE8 @ Get_MemoryOffset_LowBit);
/*801B4A98 001B1898*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B4A9C 001B189C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r31));
/*801B4AA0 001B18A0*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801B4BA4 @ Get_MemoryOffset_LowBit);
/*801B4AA4 001B18A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r31));
/*801B4AA8 001B18A8*/ PPC::Runtime::ASM::bl(fn_ability_Tornado_giveHat);
/*801B4AAC 001B18AC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B4AB0 001B18B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B4AB4 001B18B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B4AB8 001B18B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B4ABC 001B18BC*/ PPC::Runtime::ASM::blr();
}