//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80247FAC.hpp"
#include "fn_800D1F3C.hpp"
#include "fn_setFallDeath.hpp"
#include "fn_calcDistanceFromOOB.hpp"
#include "fn_setFallDeath.hpp"



void fn_checkFallDeath(PPC::Runtime::GCContext* context)
{
/*801E6464 001E3264*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E6468 001E3268*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E646C 001E326C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E6470 001E3270*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E6474 001E3274*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801E6478 001E3278*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801E647C 001E327C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3a, context->r3));
/* 801E6480 001E3280  54 00 FF FF */ extrwi. context->r0 , context->r0 , 1 , 30
/*801E6484 001E3284*/ PPC::Runtime::ASM::bne(.L_801E6504);
/*801E6488 001E3288*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc35, context->r30));
/* 801E648C 001E328C  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801E6490 001E3290*/ PPC::Runtime::ASM::bne(.L_801E6504);
/*801E6494 001E3294*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r30));
/*801E6498 001E3298*/ PPC::Runtime::ASM::bl(fn_80247FAC);
/*801E649C 001E329C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E64A0 001E32A0*/ PPC::Runtime::ASM::bl(fn_800D1F3C);
/*801E64A4 001E32A4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801E64A8 001E32A8*/ PPC::Runtime::ASM::bne(.L_801E64C4);
/*801E64AC 001E32AC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801E64B0 001E32B0*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801E64B4 001E32B4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8a8);
/*801E64B8 001E32B8*/ PPC::Runtime::ASM::bl(fn_setFallDeath);
/*801E64BC 001E32BC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E64C0 001E32C0*/ PPC::Runtime::ASM::b(.L_801E6508);
RUNTIME_PPC_JUMP_LABEL(.L_801E64C4, 0x801E64C4) //this is a jump label
/*801E64C4 001E32C4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3e8);
/*801E64C8 001E32C8*/ PPC::Runtime::ASM::bl(fn_calcDistanceFromOOB);
/*801E64CC 001E32CC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1E20 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E64D0 001E32D0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801E64D4 001E32D4*/ PPC::Runtime::ASM::bge(.L_801E6504);
/*801E64D8 001E32D8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc37, context->r30));
/* 801E64DC 001E32DC  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*801E64E0 001E32E0*/ PPC::Runtime::ASM::beq(.L_801E64EC);
/*801E64E4 001E32E4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8c0);
/*801E64E8 001E32E8*/ PPC::Runtime::ASM::b(.L_801E64F0);
RUNTIME_PPC_JUMP_LABEL(.L_801E64EC, 0x801E64EC) //this is a jump label
/*801E64EC 001E32EC*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x8a8);
RUNTIME_PPC_JUMP_LABEL(.L_801E64F0, 0x801E64F0) //this is a jump label
/*801E64F0 001E32F0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801E64F4 001E32F4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801E64F8 001E32F8*/ PPC::Runtime::ASM::bl(fn_setFallDeath);
/*801E64FC 001E32FC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E6500 001E3300*/ PPC::Runtime::ASM::b(.L_801E6508);
RUNTIME_PPC_JUMP_LABEL(.L_801E6504, 0x801E6504) //this is a jump label
/*801E6504 001E3304*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801E6508, 0x801E6508) //this is a jump label
/*801E6508 001E3308*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E650C 001E330C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E6510 001E3310*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801E6514 001E3314*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E6518 001E3318*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E651C 001E331C*/ PPC::Runtime::ASM::blr();
}