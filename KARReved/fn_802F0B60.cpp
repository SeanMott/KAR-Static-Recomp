//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_803794E0.hpp"
#include "fn_80379424.hpp"
#include "fn_80379424.hpp"
#include "fn_803785B0.hpp"
#include "fn_803785B0.hpp"



void fn_802F0B60(PPC::Runtime::GCContext* context)
{
/*802F0B60 002ED960*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*802F0B64 002ED964*/ PPC::Runtime::ASM::mflr(context->r0);
/*802F0B68 002ED968*/ PPC::Runtime::ASM::lis(context->r6, lbl_804BD62C @ Get_MemoryOffset_HighBit);
/*802F0B6C 002ED96C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802F0B70 002ED970*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*802F0B74 002ED974*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802F0B78 002ED978*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802F0B7C 002ED97C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802F0B80 002ED980*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*802F0B84 002ED984*/ PPC::Runtime::ASM::addi(context->r3, context->r6, lbl_804BD62C @ Get_MemoryOffset_LowBit);
/*802F0B88 002ED988*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0B8C 002ED98C*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802F0B90 002ED990*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1c);
/*802F0B94 002ED994*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*802F0B98 002ED998*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802F0B9C 002ED99C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0BA0 002ED9A0*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0BA4 002ED9A4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0BA8 002ED9A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x58);
/*802F0BAC 002ED9AC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0BB0 002ED9B0*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0BB4 002ED9B4*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0BB8 002ED9B8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0BBC 002ED9BC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x94);
/*802F0BC0 002ED9C0*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0BC4 002ED9C4*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0BC8 002ED9C8*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0BCC 002ED9CC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0BD0 002ED9D0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xd0);
/*802F0BD4 002ED9D4*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0BD8 002ED9D8*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0BDC 002ED9DC*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0BE0 002ED9E0*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0BE4 002ED9E4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10c);
/*802F0BE8 002ED9E8*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0BEC 002ED9EC*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0BF0 002ED9F0*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0BF4 002ED9F4*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0BF8 002ED9F8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x148);
/*802F0BFC 002ED9FC*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0C00 002EDA00*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0C04 002EDA04*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0C08 002EDA08*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0C0C 002EDA0C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x184);
/*802F0C10 002EDA10*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0C14 002EDA14*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0C18 002EDA18*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0C1C 002EDA1C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0C20 002EDA20*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1c0);
/*802F0C24 002EDA24*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0C28 002EDA28*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0C2C 002EDA2C*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0C30 002EDA30*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0C34 002EDA34*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1fc);
/*802F0C38 002EDA38*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0C3C 002EDA3C*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*802F0C40 002EDA40*/ PPC::Runtime::ASM::bl(fn_803794E0);
/*802F0C44 002EDA44*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0C48 002EDA48*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x238);
/*802F0C4C 002EDA4C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0C50 002EDA50*/ PPC::Runtime::ASM::bl(fn_80379424);
/*802F0C54 002EDA54*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*802F0C58 002EDA58*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x274);
/*802F0C5C 002EDA5C*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*802F0C60 002EDA60*/ PPC::Runtime::ASM::bl(fn_80379424);
/*802F0C64 002EDA64*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*802F0C68 002EDA68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*802F0C6C 002EDA6C*/ PPC::Runtime::ASM::bl(fn_803785B0);
/*802F0C70 002EDA70*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*802F0C74 002EDA74*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E3AA0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802F0C78 002EDA78*/ PPC::Runtime::ASM::fctiwz(context->f1, context->f1);
/*802F0C7C 002EDA7C*/ PPC::Runtime::ASM::stfd(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802F0C80 002EDA80*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802F0C84 002EDA84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r30));
/*802F0C88 002EDA88*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r30));
/*802F0C8C 002EDA8C*/ PPC::Runtime::ASM::bl(fn_803785B0);
/*802F0C90 002EDA90*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*802F0C94 002EDA94*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802F0C98 002EDA98*/ PPC::Runtime::ASM::fctiwz(context->f0, context->f0);
/*802F0C9C 002EDA9C*/ PPC::Runtime::ASM::stfd(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*802F0CA0 002EDAA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802F0CA4 002EDAA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r30));
/*802F0CA8 002EDAA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802F0CAC 002EDAAC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*802F0CB0 002EDAB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802F0CB4 002EDAB4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802F0CB8 002EDAB8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802F0CBC 002EDABC*/ PPC::Runtime::ASM::blr();
}