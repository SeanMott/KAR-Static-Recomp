//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___CARDSyncCallback.hpp"
#include "fn___CARDSyncCallback.hpp"
#include "fn_CARDDeleteAsync.hpp"
#include "fn___CARDSync.hpp"



void fn_803E8000(PPC::Runtime::GCContext* context)
{
/*803E8000 003E4E00*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E8004 003E4E04*/ PPC::Runtime::ASM::lis(context->r5, fn___CARDSyncCallback @ Get_MemoryOffset_HighBit);
/*803E8008 003E4E08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E800C 003E4E0C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn___CARDSyncCallback @ Get_MemoryOffset_LowBit);
/*803E8010 003E4E10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803E8014 003E4E14*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E8018 003E4E18*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803E801C 003E4E1C*/ PPC::Runtime::ASM::bl(fn_CARDDeleteAsync);
/*803E8020 003E4E20*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E8024 003E4E24*/ PPC::Runtime::ASM::bge(.L_803E802C);
/*803E8028 003E4E28*/ PPC::Runtime::ASM::b(.L_803E8034);
RUNTIME_PPC_JUMP_LABEL(.L_803E802C, 0x803E802C) //this is a jump label
/*803E802C 003E4E2C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803E8030 003E4E30*/ PPC::Runtime::ASM::bl(fn___CARDSync);
RUNTIME_PPC_JUMP_LABEL(.L_803E8034, 0x803E8034) //this is a jump label
/*803E8034 003E4E34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E8038 003E4E38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E803C 003E4E3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803E8040 003E4E40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E8044 003E4E44*/ PPC::Runtime::ASM::blr();
}