//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD79C.hpp"
#include "fn_800AD79C.hpp"
#include "fn_800ABA74.hpp"



void fn_800ADF20(PPC::Runtime::GCContext* context)
{
/*800ADF20 000AAD20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800ADF24 000AAD24*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ADF28 000AAD28*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800ADF2C 000AAD2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADF30 000AAD30*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADF34 000AAD34*/ PPC::Runtime::ASM::bne(.L_800ADF6C);
/*800ADF38 000AAD38*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADF3C 000AAD3C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800ADF40 000AAD40*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800ADF44 000AAD44*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_30_AnotherStructWithStuffToDoWithStadiums @ Get_MemoryOffset_HighBit);
/*800ADF48 000AAD48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ADF4C 000AAD4C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithFuncPtrs_30_AnotherStructWithStuffToDoWithStadiums @ Get_MemoryOffset_LowBit);
/*800ADF50 000AAD50*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800ADF54 000AAD54*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800ADF58 000AAD58*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800ADF5C 000AAD5C*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800ADF60 000AAD60*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD79C @ Get_MemoryOffset_HighBit);
/*800ADF64 000AAD64*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD79C @ Get_MemoryOffset_LowBit);
/*800ADF68 000AAD68*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800ADF6C, 0x800ADF6C) //this is a jump label
/*800ADF6C 000AAD6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ADF70 000AAD70*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800ADF74 000AAD74*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800ADF78 000AAD78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ADF7C 000AAD7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800ADF80 000AAD80*/ PPC::Runtime::ASM::blr();
}