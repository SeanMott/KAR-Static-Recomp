//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EEE70.hpp"



void fn_800D5370(PPC::Runtime::GCContext* context)
{
/*800D5370 000D2170*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D5374 000D2174*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D5378 000D2178*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800D537C 000D217C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D5380 000D2180*/ PPC::Runtime::ASM::lwz(context->r5, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D5384 000D2184*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800D5388 000D2188*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r3));
/*800D538C 000D218C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D5390 000D2190*/ PPC::Runtime::ASM::beq(.L_800D53AC);
/*800D5394 000D2194*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D5398 000D2198*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D539C 000D219C*/ PPC::Runtime::ASM::bne(.L_800D53AC);
/*800D53A0 000D21A0*/ PPC::Runtime::ASM::mr(context->r3, context->r5);
/*800D53A4 000D21A4*/ PPC::Runtime::ASM::bl(fn_800EEE70);
/*800D53A8 000D21A8*/ PPC::Runtime::ASM::b(.L_800D53BC);
RUNTIME_PPC_JUMP_LABEL(.L_800D53AC, 0x800D53AC) //this is a jump label
/*800D53AC 000D21AC*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D53B0 000D21B0*/ PPC::Runtime::ASM::li(context->r4, 0xdd0);
/*800D53B4 000D21B4*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6098 @ Get_MemoryOffset_SDA21);
/*800D53B8 000D21B8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D53BC, 0x800D53BC) //this is a jump label
/*800D53BC 000D21BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D53C0 000D21C0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D53C4 000D21C4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D53C8 000D21C8*/ PPC::Runtime::ASM::blr();
}