//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void InquiryCallback(PPC::Runtime::GCContext* context)
{
/*803D25C0 003CF3C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*803D25C4 003CF3C4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*803D25C8 003CF3C8*/ PPC::Runtime::ASM::beq(.L_803D25D0);
/*803D25CC 003CF3CC*/ PPC::Runtime::ASM::b(.L_803D25EC);
RUNTIME_PPC_JUMP_LABEL(.L_803D25D0, 0x803D25D0) //this is a jump label
/*803D25D0 003CF3D0*/ PPC::Runtime::ASM::lis(context->r3, DriveInfo_8056D560 @ Get_MemoryOffset_HighBit);
/*803D25D4 003CF3D4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, DriveInfo_8056D560 @ Get_MemoryOffset_LowBit);
/*803D25D8 003CF3D8*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803D25DC 003CF3DC*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803D25E0 003CF3E0*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x8000);
/*803D25E4 003CF3E4*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30e6, context->r3));
/*803D25E8 003CF3E8*/ PPC::Runtime::ASM::b(.L_803D25F8);
RUNTIME_PPC_JUMP_LABEL(.L_803D25EC, 0x803D25EC) //this is a jump label
/*803D25EC 003CF3EC*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D25F0 003CF3F0*/ PPC::Runtime::ASM::lis(context->r3, 0x8000);
/*803D25F4 003CF3F4*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30e6, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_803D25F8, 0x803D25F8) //this is a jump label
/*803D25F8 003CF3F8*/ PPC::Runtime::ASM::blr();
}