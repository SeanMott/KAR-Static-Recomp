//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800551A8.hpp"
#include "fn_800528F0.hpp"



void fn_8019949C(PPC::Runtime::GCContext* context)
{
/*8019949C 0019629C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801994A0 001962A0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801994A4 001962A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801994A8 001962A8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801994AC 001962AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801994B0 001962B0*/ PPC::Runtime::ASM::slwi(context->r31, context->r4, 4);
/*801994B4 001962B4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801994B8 001962B8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801994BC 001962BC*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801994C0 001962C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801994C4 001962C4*/ PPC::Runtime::ASM::b(.L_801994FC);
/*801994C8 001962C8*/ PPC::Runtime::ASM::b(.L_801994D4);
RUNTIME_PPC_JUMP_LABEL(.L_801994CC, 0x801994CC) //this is a jump label
/*801994CC 001962CC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x10);
/*801994D0 001962D0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x10);
RUNTIME_PPC_JUMP_LABEL(.L_801994D4, 0x801994D4) //this is a jump label
/*801994D4 001962D4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/* 801994D8 001962D8  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801994DC 001962DC*/ PPC::Runtime::ASM::beq(.L_801994CC);
/*801994E0 001962E0*/ PPC::Runtime::ASM::addi(context->r0, context->r31, 0x4);
/*801994E4 001962E4*/ PPC::Runtime::ASM::lwzx(context->r3, context->r5, context->r0);
/*801994E8 001962E8*/ PPC::Runtime::ASM::bl(fn_800551A8);
/*801994EC 001962EC*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x10);
/*801994F0 001962F0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801994F4 001962F4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801994F8 001962F8*/ PPC::Runtime::ASM::bl(fn_800528F0);
RUNTIME_PPC_JUMP_LABEL(.L_801994FC, 0x801994FC) //this is a jump label
/*801994FC 001962FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80199500 00196300*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*80199504 00196304*/ PPC::Runtime::ASM::beq(.L_80199514);
/*80199508 00196308*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r30));
/*8019950C 0019630C*/ PPC::Runtime::ASM::add(context->r3, context->r5, context->r31);
/*80199510 00196310*/ PPC::Runtime::ASM::b(.L_801994D4);
RUNTIME_PPC_JUMP_LABEL(.L_80199514, 0x80199514) //this is a jump label
/*80199514 00196314*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80199518 00196318*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8019951C 0019631C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80199520 00196320*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80199524 00196324*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80199528 00196328*/ PPC::Runtime::ASM::blr();
}