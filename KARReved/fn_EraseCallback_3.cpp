//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_WriteCallback_3.hpp"
#include "fn_WriteCallback_3.hpp"
#include "fn___CARDWrite.hpp"
#include "fn___CARDPutControlBlock.hpp"



void fn_EraseCallback_3(PPC::Runtime::GCContext* context)
{
/*803E7C40 003E4A40*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E7C44 003E4A44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E7C48 003E4A48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*803E7C4C 003E4A4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E7C50 003E4A50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E7C54 003E4A54*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 803E7C58 003E4A58  7C 9D 23 79 */ mr. context->r29 , context->r4
/*803E7C5C 003E4A5C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E7C60 003E4A60*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*803E7C64 003E4A64*/ PPC::Runtime::ASM::mulli(context->r5, context->r28, 0x110);
/*803E7C68 003E4A68*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_HighBit);
/*803E7C6C 003E4A6C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, STRUCT_BYTE4_COUNT_18056E4E8 @ Get_MemoryOffset_LowBit);
/*803E7C70 003E4A70*/ PPC::Runtime::ASM::add(context->r31, context->r0, context->r5);
/*803E7C74 003E4A74*/ PPC::Runtime::ASM::blt(.L_803E7CA4);
/*803E7C78 003E4A78*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*803E7C7C 003E4A7C*/ PPC::Runtime::ASM::lis(context->r3, fn_WriteCallback_3 @ Get_MemoryOffset_HighBit);
/*803E7C80 003E4A80*/ PPC::Runtime::ASM::addi(context->r7, context->r3, fn_WriteCallback_3 @ Get_MemoryOffset_LowBit);
/*803E7C84 003E4A84*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*803E7C88 003E4A88*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*803E7C8C 003E4A8C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4, context->r31));
/*803E7C90 003E4A90*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*803E7C94 003E4A94*/ PPC::Runtime::ASM::mullw(context->r4, context->r5, context->r0);
/*803E7C98 003E4A98*/ PPC::Runtime::ASM::bl(fn___CARDWrite);
/* 803E7C9C 003E4A9C  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*803E7CA0 003E4AA0*/ PPC::Runtime::ASM::bge(.L_803E7CD0);
RUNTIME_PPC_JUMP_LABEL(.L_803E7CA4, 0x803E7CA4) //this is a jump label
/*803E7CA4 003E4AA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r31));
/*803E7CA8 003E4AA8*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803E7CAC 003E4AAC*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803E7CB0 003E4AB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd0, context->r31));
/*803E7CB4 003E4AB4*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*803E7CB8 003E4AB8*/ PPC::Runtime::ASM::bl(fn___CARDPutControlBlock);
/*803E7CBC 003E4ABC*/ PPC::Runtime::ASM::addi(context->r12, context->r30, 0x0);
/*803E7CC0 003E4AC0*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803E7CC4 003E4AC4*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*803E7CC8 003E4AC8*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x0);
/* 803E7CCC 003E4ACC  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803E7CD0, 0x803E7CD0) //this is a jump label
/*803E7CD0 003E4AD0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803E7CD4 003E4AD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E7CD8 003E4AD8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803E7CDC 003E4ADC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E7CE0 003E4AE0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E7CE4 003E4AE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*803E7CE8 003E4AE8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E7CEC 003E4AEC*/ PPC::Runtime::ASM::blr();
}