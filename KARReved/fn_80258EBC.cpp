//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80258EBC(PPC::Runtime::GCContext* context)
{
/*80258EBC 00255CBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80258EC0 00255CC0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80258EC4 00255CC4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80258EC8 00255CC8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80258ECC 00255CCC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80258ED0 00255CD0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80258ED4 00255CD4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80258ED8 00255CD8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258EDC 00255CDC*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80258EE0 00255CE0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258EE4 00255CE4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258EE8 00255CE8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80258EEC 00255CEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258EF0 00255CF0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258EF4 00255CF4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*80258EF8 00255CF8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258EFC 00255CFC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80258F00 00255D00*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258F04 00255D04*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258F08 00255D08*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80258F0C 00255D0C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258F10 00255D10*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80258F14 00255D14*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80258F18 00255D18*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E1C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80258F1C 00255D1C*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*80258F20 00255D20*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258F24 00255D24*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E18 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80258F28 00255D28*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80258F2C 00255D2C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80258F30 00255D30*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80258F34 00255D34*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*80258F38 00255D38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80258F3C 00255D3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80258F40 00255D40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80258F44 00255D44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80258F48 00255D48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80258F4C 00255D4C*/ PPC::Runtime::ASM::blr();
}