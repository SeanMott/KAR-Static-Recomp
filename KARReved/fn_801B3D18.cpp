//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005E7D8.hpp"
#include "fn_abilityTimer_Plasma_removeEffect.hpp"
#include "fn_802230A0.hpp"
#include "fn_ability_Spike_end.hpp"
#include "fn_revertKirbyModel?.hpp"



void fn_801B3D18(PPC::Runtime::GCContext* context)
{
/*801B3D18 001B0B18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B3D1C 001B0B1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B3D20 001B0B20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3D24 001B0B24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3D28 001B0B28*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801B3D2C 001B0B2C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r3));
/*801B3D30 001B0B30*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*801B3D34 001B0B34*/ PPC::Runtime::ASM::beq(.L_801B3D3C);
/*801B3D38 001B0B38*/ PPC::Runtime::ASM::bl(fn_8005E7D8);
RUNTIME_PPC_JUMP_LABEL(.L_801B3D3C, 0x801B3D3C) //this is a jump label
/*801B3D3C 001B0B3C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*801B3D40 001B0B40*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801B3D44 001B0B44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f4, context->r31));
/*801B3D48 001B0B48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
/*801B3D4C 001B0B4C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B3D50 001B0B50*/ PPC::Runtime::ASM::xor(context->r0, context->r3, context->r5);
/*801B3D54 001B0B54*/ PPC::Runtime::ASM::xor(context->r5, context->r4, context->r5);
/*801B3D58 001B0B58*/ PPC::Runtime::ASM::or.(context->r0, context->r5, context->r0);
/*801B3D5C 001B0B5C*/ PPC::Runtime::ASM::beq(.L_801B3D70);
/*801B3D60 001B0B60*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Plasma_removeEffect);
/*801B3D64 001B0B64*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B3D68 001B0B68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9fc, context->r31));
/*801B3D6C 001B0B6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3D70, 0x801B3D70) //this is a jump label
/*801B3D70 001B0B70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
/*801B3D74 001B0B74*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801B3D78 001B0B78*/ PPC::Runtime::ASM::beq(.L_801B3D88);
/*801B3D7C 001B0B7C*/ PPC::Runtime::ASM::bl(fn_802230A0);
/*801B3D80 001B0B80*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801B3D84 001B0B84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801B3D88, 0x801B3D88) //this is a jump label
/*801B3D88 001B0B88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3D8C 001B0B8C*/ PPC::Runtime::ASM::bl(fn_ability_Spike_end);
/*801B3D90 001B0B90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801B3D94 001B0B94*/ PPC::Runtime::ASM::bl(fn_revertKirbyModel?);
/*801B3D98 001B0B98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B3D9C 001B0B9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801B3DA0 001B0BA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801B3DA4 001B0BA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801B3DA8 001B0BA8*/ PPC::Runtime::ASM::blr();
}