//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025AA28(PPC::Runtime::GCContext* context)
{
/*8025AA28 00257828*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025AA2C 0025782C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025AA30 00257830*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025AA34 00257834*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025AA38 00257838*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025AA3C 0025783C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025AA40 00257840*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025AA44 00257844*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AA48 00257848*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025AA4C 0025784C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AA50 00257850*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025AA54 00257854*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025AA58 00257858*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AA5C 0025785C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025AA60 00257860*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025AA64 00257864*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025AA68 00257868*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025AA6C 0025786C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025AA70 00257870*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025AA74 00257874*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025AA78 00257878*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025AA7C 0025787C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025AA80 00257880*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025AA84 00257884*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025AA88 00257888*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025AA8C 0025788C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025AA90 00257890*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025AA94 00257894*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025AA98 00257898*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025AA9C 0025789C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025AAA0 002578A0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025AAA4 002578A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025AAA8 002578A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025AAAC 002578AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025AAB0 002578B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025AAB4 002578B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025AAB8 002578B8*/ PPC::Runtime::ASM::blr();
}