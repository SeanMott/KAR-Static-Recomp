//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8045D6CC.hpp"



void fn_8045D850(PPC::Runtime::GCContext* context)
{
/*8045D850 0045A650*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8045D854 0045A654*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045D858 0045A658*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045D85C 0045A65C*/ PPC::Runtime::ASM::bl(fn_8045D6CC);
/*8045D860 0045A660*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045D864 0045A664*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8045D868 0045A668*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045D86C 0045A66C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045D870 0045A670*/ PPC::Runtime::ASM::blr();
}