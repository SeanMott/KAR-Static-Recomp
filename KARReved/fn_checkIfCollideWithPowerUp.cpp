//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80252DF0.hpp"
#include "fn_8018B718.hpp"
#include "fn_801DAFAC.hpp"
#include "fn_801DC548.hpp"
#include "fn_collideWithPowerUpGeneral.hpp"



void fn_checkIfCollideWithPowerUp(PPC::Runtime::GCContext* context)
{
/*801DBA74 001D8874*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801DBA78 001D8878*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DBA7C 001D887C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DBA80 001D8880*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DBA84 001D8884*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DBA88 001D8888*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DBA8C 001D888C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801DBA90 001D8890*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc31, context->r3));
/* 801DBA94 001D8894  54 00 F7 FF */ extrwi. context->r0 , context->r0 , 1 , 29
/*801DBA98 001D8898*/ PPC::Runtime::ASM::bne(.L_801DBB14);
/*801DBA9C 001D889C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*801DBAA0 001D88A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801DBAA4 001D88A4*/ PPC::Runtime::ASM::beq(.L_801DBB14);
/*801DBAA8 001D88A8*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DE334 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DBAAC 001D88AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
/*801DBAB0 001D88B0*/ PPC::Runtime::ASM::b(.L_801DBB0C);
RUNTIME_PPC_JUMP_LABEL(.L_801DBAB4, 0x801DBAB4) //this is a jump label
/*801DBAB4 001D88B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801DBAB8 001D88B8*/ PPC::Runtime::ASM::bl(fn_80252DF0);
/*801DBABC 001D88BC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DBAC0 001D88C0*/ PPC::Runtime::ASM::beq(.L_801DBB08);
/*801DBAC4 001D88C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*801DBAC8 001D88C8*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xa20);
/*801DBACC 001D88CC*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x250);
/*801DBAD0 001D88D0*/ PPC::Runtime::ASM::bl(fn_8018B718);
/*801DBAD4 001D88D4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DBAD8 001D88D8*/ PPC::Runtime::ASM::beq(.L_801DBB08);
/*801DBADC 001D88DC*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DBAE0 001D88E0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801DBAE4 001D88E4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x210, context->r4));
/*801DBAE8 001D88E8*/ PPC::Runtime::ASM::bl(fn_801DAFAC);
/*801DBAEC 001D88EC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801DBAF0 001D88F0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*801DBAF4 001D88F4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*801DBAF8 001D88F8*/ PPC::Runtime::ASM::bl(fn_801DC548);
/*801DBAFC 001D88FC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801DBB00 001D8900*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801DBB04 001D8904*/ PPC::Runtime::ASM::bl(fn_collideWithPowerUpGeneral);
RUNTIME_PPC_JUMP_LABEL(.L_801DBB08, 0x801DBB08) //this is a jump label
/*801DBB08 001D8908*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801DBB0C, 0x801DBB0C) //this is a jump label
/*801DBB0C 001D890C*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801DBB10 001D8910*/ PPC::Runtime::ASM::bne(.L_801DBAB4);
RUNTIME_PPC_JUMP_LABEL(.L_801DBB14, 0x801DBB14) //this is a jump label
/*801DBB14 001D8914*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801DBB18 001D8918*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801DBB1C 001D891C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801DBB20 001D8920*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DBB24 001D8924*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DBB28 001D8928*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801DBB2C 001D892C*/ PPC::Runtime::ASM::blr();
}