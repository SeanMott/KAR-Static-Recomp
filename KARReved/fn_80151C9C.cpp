//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013120C.hpp"
#include "fn_80059520.hpp"



void fn_80151C9C(PPC::Runtime::GCContext* context)
{
/*80151C9C 0014EA9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80151CA0 0014EAA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80151CA4 0014EAA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80151CA8 0014EAA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80151CAC 0014EAAC*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80151CB0 0014EAB0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80151CB4 0014EAB4*/ PPC::Runtime::ASM::bl(fn_8013120C);
/*80151CB8 0014EAB8*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1222 @ Get_MemoryOffset_HighBit);
/*80151CBC 0014EABC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80151CC0 0014EAC0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1222 @ Get_MemoryOffset_LowBit);
/*80151CC4 0014EAC4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80151CC8 0014EAC8*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x570);
/*80151CCC 0014EACC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*80151CD0 0014EAD0*/ PPC::Runtime::ASM::bl(fn_80059520);
/*80151CD4 0014EAD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80151CD8 0014EAD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80151CDC 0014EADC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80151CE0 0014EAE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80151CE4 0014EAE4*/ PPC::Runtime::ASM::blr();
}