//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "PPCMfmsr.hpp"
#include "PPCMtmsr.hpp"
#include "PPCMffpscr.hpp"
#include "PPCMtfpscr.hpp"
#include "PPCMtmsr.hpp"
#include "OSRestoreInterrupts.hpp"



void OSSetErrorHandler(PPC::Runtime::GCContext* context)
{
/*803D4E94 003D1C94*/ PPC::Runtime::ASM::mflr(context->r0);
/*803D4E98 003D1C98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803D4E9C 003D1C9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*803D4EA0 003D1CA0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803D4EA4 003D1CA4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803D4EA8 003D1CA8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D4EAC 003D1CAC*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*803D4EB0 003D1CB0*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D4EB4 003D1CB4*/ PPC::Runtime::ASM::addi(context->r28, context->r4, 0x0);
/*803D4EB8 003D1CB8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803D4EBC 003D1CBC*/ PPC::Runtime::ASM::lis(context->r4, __OSErrorTable @ Get_MemoryOffset_HighBit);
/*803D4EC0 003D1CC0*/ PPC::Runtime::ASM::clrlslwi(context->r5, context->r29, 16, 2);
/*803D4EC4 003D1CC4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, __OSErrorTable @ Get_MemoryOffset_LowBit);
/*803D4EC8 003D1CC8*/ PPC::Runtime::ASM::clrlwi(context->r6, context->r29, 16);
/*803D4ECC 003D1CCC*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r5);
/*803D4ED0 003D1CD0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803D4ED4 003D1CD4*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x10);
/*803D4ED8 003D1CD8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*803D4EDC 003D1CDC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803D4EE0 003D1CE0*/ PPC::Runtime::ASM::bne(.L_803D5080);
/*803D4EE4 003D1CE4*/ PPC::Runtime::ASM::bl(PPCMfmsr);
/*803D4EE8 003D1CE8*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803D4EEC 003D1CEC*/ PPC::Runtime::ASM::ori(context->r3, context->r31, 0x2000);
/*803D4EF0 003D1CF0*/ PPC::Runtime::ASM::bl(PPCMtmsr);
/*803D4EF4 003D1CF4*/ PPC::Runtime::ASM::bl(PPCMffpscr);
/*803D4EF8 003D1CF8*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*803D4EFC 003D1CFC*/ PPC::Runtime::ASM::beq(.L_803D5014);
/*803D4F00 003D1D00*/ PPC::Runtime::ASM::lis(context->r5, 0x8000);
/*803D4F04 003D1D04*/ PPC::Runtime::ASM::lis(context->r4, 0x6006);
/*803D4F08 003D1D08*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r5));
/*803D4F0C 003D1D0C*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x701);
/*803D4F10 003D1D10*/ PPC::Runtime::ASM::b(.L_803D4FF8);
RUNTIME_PPC_JUMP_LABEL(.L_803D4F14, 0x803D4F14) //this is a jump label
/*803D4F14 003D1D14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r6));
/*803D4F18 003D1D18*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x900);
/*803D4F1C 003D1D1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r6));
/*803D4F20 003D1D20*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a2, context->r6));
/* 803D4F24 003D1D24  54 A0 07 FF */ clrlwi. context->r0 , context->r5 , 31
/*803D4F28 003D1D28*/ PPC::Runtime::ASM::bne(.L_803D4FD4);
/*803D4F2C 003D1D2C*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0x1);
/*803D4F30 003D1D30*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*803D4F34 003D1D34*/ PPC::Runtime::ASM::sth(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a2, context->r6));
/*803D4F38 003D1D38*/ PPC::Runtime::ASM::mtctr(context->r0);
/*803D4F3C 003D1D3C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_803D4F40, 0x803D4F40) //this is a jump label
/*803D4F40 003D1D40*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*803D4F44 003D1D44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r5));
/*803D4F48 003D1D48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r5));
/*803D4F4C 003D1D4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r5));
/*803D4F50 003D1D50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r5));
/*803D4F54 003D1D54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r5));
/*803D4F58 003D1D58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x98, context->r5));
/*803D4F5C 003D1D5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d4, context->r5));
/*803D4F60 003D1D60*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r5));
/*803D4F64 003D1D64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r5));
/*803D4F68 003D1D68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa0, context->r5));
/*803D4F6C 003D1D6C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1dc, context->r5));
/*803D4F70 003D1D70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d8, context->r5));
/*803D4F74 003D1D74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xac, context->r5));
/*803D4F78 003D1D78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa8, context->r5));
/*803D4F7C 003D1D7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e4, context->r5));
/*803D4F80 003D1D80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e0, context->r5));
/*803D4F84 003D1D84*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb4, context->r5));
/*803D4F88 003D1D88*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r5));
/*803D4F8C 003D1D8C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1ec, context->r5));
/*803D4F90 003D1D90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1e8, context->r5));
/*803D4F94 003D1D94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r5));
/*803D4F98 003D1D98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r5));
/*803D4F9C 003D1D9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f4, context->r5));
/*803D4FA0 003D1DA0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f0, context->r5));
/*803D4FA4 003D1DA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc4, context->r5));
/*803D4FA8 003D1DA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r5));
/*803D4FAC 003D1DAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1fc, context->r5));
/*803D4FB0 003D1DB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1f8, context->r5));
/*803D4FB4 003D1DB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcc, context->r5));
/*803D4FB8 003D1DB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc8, context->r5));
/*803D4FBC 003D1DBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x204, context->r5));
/*803D4FC0 003D1DC0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x200, context->r5));
/*803D4FC4 003D1DC4*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x40);
/*803D4FC8 003D1DC8*/ PPC::Runtime::ASM::bdnz(.L_803D4F40);
/*803D4FCC 003D1DCC*/ PPC::Runtime::ASM::li(context->r0, 0x4);
/*803D4FD0 003D1DD0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_803D4FD4, 0x803D4FD4) //this is a jump label
/*803D4FD4 003D1DD4*/ PPC::Runtime::ASM::lwz(context->r0, StructValues_29 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D4FD8 003D1DD8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D4FDC 003D1DDC*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 24, 28);
/*803D4FE0 003D1DE0*/ PPC::Runtime::ASM::or(context->r0, context->r5, context->r0);
/*803D4FE4 003D1DE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D4FE8 003D1DE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D4FEC 003D1DEC*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*803D4FF0 003D1DF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D4FF4 003D1DF4*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2fc, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_803D4FF8, 0x803D4FF8) //this is a jump label
/*803D4FF8 003D1DF8*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*803D4FFC 003D1DFC*/ PPC::Runtime::ASM::bne(.L_803D4F14);
/*803D5000 003D1E00*/ PPC::Runtime::ASM::lwz(context->r0, StructValues_29 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D5004 003D1E04*/ PPC::Runtime::ASM::ori(context->r31, context->r31, 0x900);
/*803D5008 003D1E08*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 24, 28);
/*803D500C 003D1E0C*/ PPC::Runtime::ASM::or(context->r3, context->r3, context->r0);
/*803D5010 003D1E10*/ PPC::Runtime::ASM::b(.L_803D5068);
RUNTIME_PPC_JUMP_LABEL(.L_803D5014, 0x803D5014) //this is a jump label
/*803D5014 003D1E14*/ PPC::Runtime::ASM::lis(context->r5, 0x8000);
/*803D5018 003D1E18*/ PPC::Runtime::ASM::lis(context->r4, 0x6006);
/*803D501C 003D1E1C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xdc, context->r5));
/*803D5020 003D1E20*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x701);
/*803D5024 003D1E24*/ PPC::Runtime::ASM::li(context->r5, -0x901);
/*803D5028 003D1E28*/ PPC::Runtime::ASM::b(.L_803D5054);
RUNTIME_PPC_JUMP_LABEL(.L_803D502C, 0x803D502C) //this is a jump label
/*803D502C 003D1E2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r6));
/*803D5030 003D1E30*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r5);
/*803D5034 003D1E34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19c, context->r6));
/*803D5038 003D1E38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D503C 003D1E3C*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 29, 23);
/*803D5040 003D1E40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D5044 003D1E44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D5048 003D1E48*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*803D504C 003D1E4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x194, context->r6));
/*803D5050 003D1E50*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2fc, context->r6));
RUNTIME_PPC_JUMP_LABEL(.L_803D5054, 0x803D5054) //this is a jump label
/*803D5054 003D1E54*/ PPC::Runtime::ASM::cmplwi(context->r6, 0x0);
/*803D5058 003D1E58*/ PPC::Runtime::ASM::bne(.L_803D502C);
/*803D505C 003D1E5C*/ PPC::Runtime::ASM::li(context->r0, -0x901);
/*803D5060 003D1E60*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 29, 23);
/*803D5064 003D1E64*/ PPC::Runtime::ASM::and(context->r31, context->r31, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803D5068, 0x803D5068) //this is a jump label
/*803D5068 003D1E68*/ PPC::Runtime::ASM::lis(context->r4, 0x6006);
/*803D506C 003D1E6C*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x701);
/*803D5070 003D1E70*/ PPC::Runtime::ASM::and(context->r3, context->r3, context->r0);
/*803D5074 003D1E74*/ PPC::Runtime::ASM::bl(PPCMtfpscr);
/*803D5078 003D1E78*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803D507C 003D1E7C*/ PPC::Runtime::ASM::bl(PPCMtmsr);
RUNTIME_PPC_JUMP_LABEL(.L_803D5080, 0x803D5080) //this is a jump label
/*803D5080 003D1E80*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*803D5084 003D1E84*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803D5088 003D1E88*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803D508C 003D1E8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*803D5090 003D1E90*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*803D5094 003D1E94*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*803D5098 003D1E98*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803D509C 003D1E9C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*803D50A0 003D1EA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*803D50A4 003D1EA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803D50A8 003D1EA8*/ PPC::Runtime::ASM::blr();
}