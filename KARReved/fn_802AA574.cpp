//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802AA574(PPC::Runtime::GCContext* context)
{
/*802AA574 002A7374*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AA578 002A7378*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AA57C 002A737C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AA580 002A7380*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AA584 002A7384*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802AA588 002A7388*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802AA58C 002A738C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802AA590 002A7390*/ PPC::Runtime::ASM::beq(.L_802AA5F0);
/*802AA594 002A7394*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C148C @ Get_MemoryOffset_HighBit);
/*802AA598 002A7398*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802AA59C 002A739C*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C148C @ Get_MemoryOffset_LowBit);
/*802AA5A0 002A73A0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA5A4 002A73A4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802AA5A8 002A73A8*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802AA5AC 002A73AC*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802AA5B0 002A73B0*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802AA5B4 002A73B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802AA5B8 002A73B8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA5BC 002A73BC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802AA5C0 002A73C0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA5C4 002A73C4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA5C8 002A73C8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802AA5CC 002A73CC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802AA5D0 002A73D0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802AA5D4 002A73D4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AA5D8 002A73D8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AA5DC 002A73DC*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802AA5E0 002A73E0*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802AA5E4 002A73E4*/ PPC::Runtime::ASM::ble(.L_802AA5F0);
/*802AA5E8 002A73E8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AA5EC 002A73EC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802AA5F0, 0x802AA5F0) //this is a jump label
/*802AA5F0 002A73F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AA5F4 002A73F4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802AA5F8 002A73F8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802AA5FC 002A73FC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802AA600 002A7400*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AA604 002A7404*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AA608 002A7408*/ PPC::Runtime::ASM::blr();
}