//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114F04.hpp"



void fn_80118298(PPC::Runtime::GCContext* context)
{
/*80118298 00115098*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8011829C 0011509C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801182A0 001150A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801182A4 001150A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801182A8 001150A8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801182AC 001150AC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801182B0 001150B0*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*801182B4 001150B4*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*801182B8 001150B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xa4, context->r3));
/*801182BC 001150BC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801182C0 001150C0*/ PPC::Runtime::ASM::beq(.L_801182C8);
/*801182C4 001150C4*/ PPC::Runtime::ASM::bl(fn_80114F04);
RUNTIME_PPC_JUMP_LABEL(.L_801182C8, 0x801182C8) //this is a jump label
/*801182C8 001150C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801182CC 001150CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801182D0 001150D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801182D4 001150D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801182D8 001150D8*/ PPC::Runtime::ASM::blr();
}