//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000AF38.hpp"



void fn_80040660(PPC::Runtime::GCContext* context)
{
/*80040660 0003D460*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80040664 0003D464*/ PPC::Runtime::ASM::mflr(context->r0);
/*80040668 0003D468*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8004066C 0003D46C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80040670 0003D470*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80040674 0003D474*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80040678 0003D478*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x5ac);
/*8004067C 0003D47C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5af, context->r3));
/*80040680 0003D480*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5b4, context->r3));
/*80040684 0003D484*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5b8, context->r3));
/*80040688 0003D488*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5bc, context->r3));
/*8004068C 0003D48C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c0, context->r3));
/*80040690 0003D490*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c4, context->r3));
/*80040694 0003D494*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c8, context->r3));
/*80040698 0003D498*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5cc, context->r3));
/*8004069C 0003D49C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5d0, context->r3));
/*800406A0 0003D4A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5d4, context->r3));
/*800406A4 0003D4A4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5d8, context->r3));
/*800406A8 0003D4A8*/ PPC::Runtime::ASM::bl(fn_8000AF38);
/*800406AC 0003D4AC*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*800406B0 0003D4B0*/ PPC::Runtime::ASM::bne(.L_800406C0);
/*800406B4 0003D4B4*/ PPC::Runtime::ASM::li(context->r0, -0x2);
/*800406B8 0003D4B8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800406BC 0003D4BC*/ PPC::Runtime::ASM::b(.L_800406C8);
RUNTIME_PPC_JUMP_LABEL(.L_800406C0, 0x800406C0) //this is a jump label
/*800406C0 0003D4C0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800406C4 0003D4C4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800406C8, 0x800406C8) //this is a jump label
/*800406C8 0003D4C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800406CC 0003D4CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800406D0 0003D4D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800406D4 0003D4D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800406D8 0003D4D8*/ PPC::Runtime::ASM::blr();
}