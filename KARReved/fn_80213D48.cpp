//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80200D10.hpp"
#include "fn_80214020.hpp"



void fn_80213D48(PPC::Runtime::GCContext* context)
{
/*80213D48 00210B48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80213D4C 00210B4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80213D50 00210B50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80213D54 00210B54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80213D58 00210B58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80213D5C 00210B5C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80213D60 00210B60*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80213D64 00210B64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r3));
/*80213D68 00210B68*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80213D6C 00210B6C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*80213D70 00210B70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r3));
/*80213D74 00210B74*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r3));
/*80213D78 00210B78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80213D7C 00210B7C*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*80213D80 00210B80*/ PPC::Runtime::ASM::ble(.L_80213DB4);
/*80213D84 00210B84*/ PPC::Runtime::ASM::bl(fn_80200D10);
/*80213D88 00210B88*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80213D8C 00210B8C*/ PPC::Runtime::ASM::beq(.L_80213DB4);
/*80213D90 00210B90*/ PPC::Runtime::ASM::li(context->r3, 0x64);
/*80213D94 00210B94*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*80213D98 00210B98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80213D9C 00210B9C*/ PPC::Runtime::ASM::cmpw(context->r3, context->r0);
/*80213DA0 00210BA0*/ PPC::Runtime::ASM::bge(.L_80213DB4);
/*80213DA4 00210BA4*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80213DA8 00210BA8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80213DAC 00210BAC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb48, context->r30));
/*80213DB0 00210BB0*/ PPC::Runtime::ASM::bl(fn_80214020);
RUNTIME_PPC_JUMP_LABEL(.L_80213DB4, 0x80213DB4) //this is a jump label
/*80213DB4 00210BB4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80213DB8 00210BB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80213DBC 00210BBC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80213DC0 00210BC0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80213DC4 00210BC4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80213DC8 00210BC8*/ PPC::Runtime::ASM::blr();
}