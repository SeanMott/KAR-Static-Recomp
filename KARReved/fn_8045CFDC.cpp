//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn_DVDGetCommandBlockStatus.hpp"
#include "OSRestoreInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_8045CFDC(PPC::Runtime::GCContext* context)
{
/*8045CFDC 00459DDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8045CFE0 00459DE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045CFE4 00459DE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045CFE8 00459DE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045CFEC 00459DEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8045CFF0 00459DF0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045CFF4 00459DF4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*8045CFF8 00459DF8*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8045CFFC 00459DFC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8045D000 00459E00*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8045D004 00459E04*/ PPC::Runtime::ASM::bl(fn_DVDGetCommandBlockStatus);
/*8045D008 00459E08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r29));
/*8045D00C 00459E0C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8045D010 00459E10*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*8045D014 00459E14*/ PPC::Runtime::ASM::bne(.L_8045D024);
/*8045D018 00459E18*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8045D01C 00459E1C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8045D020 00459E20*/ PPC::Runtime::ASM::b(.L_8045D050);
RUNTIME_PPC_JUMP_LABEL(.L_8045D024, 0x8045D024) //this is a jump label
/*8045D024 00459E24*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r29));
/*8045D028 00459E28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8045D02C 00459E2C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8045D030 00459E30*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r29));
/*8045D034 00459E34*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*8045D038 00459E38*/ PPC::Runtime::ASM::beq(.L_8045D050);
/*8045D03C 00459E3C*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*8045D040 00459E40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r29));
/*8045D044 00459E44*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r29));
/*8045D048 00459E48*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8045D04C 00459E4C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8045D050, 0x8045D050) //this is a jump label
/*8045D050 00459E50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r29));
/*8045D054 00459E54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8045D058 00459E58*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*8045D05C 00459E5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8045D060 00459E60*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*8045D064 00459E64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8045D068 00459E68*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045D06C 00459E6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045D070 00459E70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8045D074 00459E74*/ PPC::Runtime::ASM::blr();
}