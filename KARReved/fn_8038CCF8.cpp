//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80396F54.hpp"



void fn_8038CCF8(PPC::Runtime::GCContext* context)
{
/*8038CCF8 00389AF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8038CCFC 00389AFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8038CD00 00389B00*/ PPC::Runtime::ASM::lis(context->r6, lbl_804F4E38 @ Get_MemoryOffset_HighBit);
/*8038CD04 00389B04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038CD08 00389B08*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r5, 0, 30, 30);
/*8038CD0C 00389B0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038CD10 00389B10*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8038CD14 00389B14*/ PPC::Runtime::ASM::addi(context->r3, context->r6, lbl_804F4E38 @ Get_MemoryOffset_LowBit);
/*8038CD18 00389B18*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8038CD1C 00389B1C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8038CD20 00389B20*/ PPC::Runtime::ASM::beq(.L_8038CD38);
/*8038CD24 00389B24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8038CD28 00389B28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8038CD2C 00389B2C*/ PPC::Runtime::ASM::bl(fn_80396F54);
/*8038CD30 00389B30*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*8038CD34 00389B34*/ PPC::Runtime::ASM::b(.L_8038CD48);
RUNTIME_PPC_JUMP_LABEL(.L_8038CD38, 0x8038CD38) //this is a jump label
/*8038CD38 00389B38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*8038CD3C 00389B3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8038CD40 00389B40*/ PPC::Runtime::ASM::bl(fn_JObj_LoadJoint);
/*8038CD44 00389B44*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8038CD48, 0x8038CD48) //this is a jump label
/*8038CD48 00389B48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8038CD4C 00389B4C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8038CD50 00389B50*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8038CD54 00389B54*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8038CD58 00389B58*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8038CD5C 00389B5C*/ PPC::Runtime::ASM::blr();
}