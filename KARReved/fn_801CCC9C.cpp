//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80064C18.hpp"
#include "fn_80062ECC.hpp"



void fn_801CCC9C(PPC::Runtime::GCContext* context)
{
/*801CCC9C 001C9A9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x70, context->r1));
/*801CCCA0 001C9AA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CCCA4 001C9AA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*801CCCA8 001C9AA8*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*801CCCAC 001C9AAC*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*801CCCB0 001C9AB0*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*801CCCB4 001C9AB4*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*801CCCB8 001C9AB8*/ PPC::Runtime::ASM::stfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CCCBC 001C9ABC*/ PPC::Runtime::ASM::psq_st(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801CCCC0 001C9AC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801CCCC4 001C9AC4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801CCCC8 001C9AC8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CCCCC 001C9ACC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CCCD0 001C9AD0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801CCCD4 001C9AD4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801CCCD8 001C9AD8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r3));
/*801CCCDC 001C9ADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r29));
/*801CCCE0 001C9AE0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CCCE4 001C9AE4*/ PPC::Runtime::ASM::beq(.L_801CCCFC);
/*801CCCE8 001C9AE8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CCCEC 001C9AEC*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CCCF0 001C9AF0*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CCCF4 001C9AF4*/ PPC::Runtime::ASM::li(context->r4, 0x21a);
/*801CCCF8 001C9AF8*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CCCFC, 0x801CCCFC) //this is a jump label
/*801CCCFC 001C9AFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r29));
/*801CCD00 001C9B00*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CCD04 001C9B04*/ PPC::Runtime::ASM::beq(.L_801CCD20);
/*801CCD08 001C9B08*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0A88 @ Get_MemoryOffset_HighBit);
/*801CCD0C 001C9B0C*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CCD10 001C9B10*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0A88 @ Get_MemoryOffset_LowBit);
/*801CCD14 001C9B14*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*801CCD18 001C9B18*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CCD1C 001C9B1C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CCD20, 0x801CCD20) //this is a jump label
/*801CCD20 001C9B20*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6f8, context->r30));
/*801CCD24 001C9B24*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r29));
/*801CCD28 001C9B28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r28));
/*801CCD2C 001C9B2C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*801CCD30 001C9B30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*801CCD34 001C9B34*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CCD38 001C9B38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*801CCD3C 001C9B3C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CCD40 001C9B40*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CCD44 001C9B44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CCD48 001C9B48*/ PPC::Runtime::ASM::beq(.L_801CCD60);
/*801CCD4C 001C9B4C*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CCD50 001C9B50*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 3 @ Get_MemoryOffset_SDA21);
/*801CCD54 001C9B54*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CCD58 001C9B58*/ PPC::Runtime::ASM::li(context->r4, 0x225);
/*801CCD5C 001C9B5C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CCD60, 0x801CCD60) //this is a jump label
/*801CCD60 001C9B60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r28));
/*801CCD64 001C9B64*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801CCD68 001C9B68*/ PPC::Runtime::ASM::beq(.L_801CCD84);
/*801CCD6C 001C9B6C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804B0A88 @ Get_MemoryOffset_HighBit);
/*801CCD70 001C9B70*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B0A54 @ Get_MemoryOffset_HighBit);
/*801CCD74 001C9B74*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804B0A88 @ Get_MemoryOffset_LowBit);
/*801CCD78 001C9B78*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*801CCD7C 001C9B7C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B0A54 @ Get_MemoryOffset_LowBit);
/*801CCD80 001C9B80*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801CCD84, 0x801CCD84) //this is a jump label
/*801CCD84 001C9B84*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r28));
/*801CCD88 001C9B88*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801CCD8C 001C9B8C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1A48 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCD90 001C9B90*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*801CCD94 001C9B94*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r7));
/*801CCD98 001C9B98*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801CCD9C 001C9B9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r7));
/*801CCDA0 001C9BA0*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E1A44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCDA4 001C9BA4*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801CCDA8 001C9BA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CCDAC 001C9BAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r7));
/*801CCDB0 001C9BB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801CCDB4 001C9BB4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r30));
/*801CCDB8 001C9BB8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4a8, context->r30));
/*801CCDBC 001C9BBC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f2, context->f1);
/*801CCDC0 001C9BC0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f0);
/*801CCDC4 001C9BC4*/ PPC::Runtime::ASM::fmuls(context->f31, context->f3, context->f1);
/*801CCDC8 001C9BC8*/ PPC::Runtime::ASM::fmuls(context->f29, context->f3, context->f0);
/*801CCDCC 001C9BCC*/ PPC::Runtime::ASM::bl(fn_80064C18);
/*801CCDD0 001C9BD0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*801CCDD4 001C9BD4*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801CCDD8 001C9BD8*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*801CCDDC 001C9BDC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801CCDE0 001C9BE0*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x20);
/*801CCDE4 001C9BE4*/ PPC::Runtime::ASM::bl(fn_80062ECC);
/*801CCDE8 001C9BE8*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805E1A38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCDEC 001C9BEC*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1A40 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCDF0 001C9BF0*/ PPC::Runtime::ASM::fsub(context->f7, context->f2, context->f1);
/*801CCDF4 001C9BF4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f0);
/*801CCDF8 001C9BF8*/ PPC::Runtime::ASM::frsp(context->f7, context->f7);
/*801CCDFC 001C9BFC*/ PPC::Runtime::ASM::bge(.L_801CCE18);
/*801CCE00 001C9C00*/ PPC::Runtime::ASM::fcmpo(cr0, context->f7, context->f29);
/*801CCE04 001C9C04*/ PPC::Runtime::ASM::bge(.L_801CCE7C);
/*801CCE08 001C9C08*/ PPC::Runtime::ASM::fcmpo(cr0, context->f7, context->f31);
/*801CCE0C 001C9C0C*/ PPC::Runtime::ASM::bge(.L_801CCE7C);
/*801CCE10 001C9C10*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CCE14 001C9C14*/ PPC::Runtime::ASM::b(.L_801CCE80);
RUNTIME_PPC_JUMP_LABEL(.L_801CCE18, 0x801CCE18) //this is a jump label
/*801CCE18 001C9C18*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A44 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CCE1C 001C9C1C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f29, context->f31);
/*801CCE20 001C9C20*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CCE24 001C9C24*/ PPC::Runtime::ASM::fdivs(context->f8, context->f1, context->f30);
/*801CCE28 001C9C28*/ PPC::Runtime::ASM::lfs(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CCE2C 001C9C2C*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CCE30 001C9C30*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CCE34 001C9C34*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801CCE38 001C9C38*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CCE3C 001C9C3C*/ PPC::Runtime::ASM::fmuls(context->f5, context->f5, context->f8);
/*801CCE40 001C9C40*/ PPC::Runtime::ASM::fmuls(context->f6, context->f6, context->f8);
/*801CCE44 001C9C44*/ PPC::Runtime::ASM::fmuls(context->f4, context->f4, context->f8);
/*801CCE48 001C9C48*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f5);
/*801CCE4C 001C9C4C*/ PPC::Runtime::ASM::stfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CCE50 001C9C50*/ PPC::Runtime::ASM::stfs(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CCE54 001C9C54*/ PPC::Runtime::ASM::fmadds(context->f1, context->f2, context->f6, context->f1);
/*801CCE58 001C9C58*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CCE5C 001C9C5C*/ PPC::Runtime::ASM::fmadds(context->f1, context->f3, context->f4, context->f1);
/*801CCE60 001C9C60*/ PPC::Runtime::ASM::fabs(context->f1, context->f1);
/*801CCE64 001C9C64*/ PPC::Runtime::ASM::frsp(context->f1, context->f1);
/*801CCE68 001C9C68*/ PPC::Runtime::ASM::fmadds(context->f0, context->f1, context->f0, context->f31);
/*801CCE6C 001C9C6C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f7, context->f0);
/*801CCE70 001C9C70*/ PPC::Runtime::ASM::bge(.L_801CCE7C);
/*801CCE74 001C9C74*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801CCE78 001C9C78*/ PPC::Runtime::ASM::b(.L_801CCE80);
RUNTIME_PPC_JUMP_LABEL(.L_801CCE7C, 0x801CCE7C) //this is a jump label
/*801CCE7C 001C9C7C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801CCE80, 0x801CCE80) //this is a jump label
/*801CCE80 001C9C80*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1)0, context->qr0);
/*801CCE84 001C9C84*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x60, context->r1));
/*801CCE88 001C9C88*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58, context->r1)0, context->qr0);
/*801CCE8C 001C9C8C*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*801CCE90 001C9C90*/ PPC::Runtime::ASM::psq_l(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1)0, context->qr0);
/*801CCE94 001C9C94*/ PPC::Runtime::ASM::lfd(context->f29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801CCE98 001C9C98*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801CCE9C 001C9C9C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801CCEA0 001C9CA0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801CCEA4 001C9CA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r1));
/*801CCEA8 001C9CA8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801CCEAC 001C9CAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CCEB0 001C9CB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x70);
/*801CCEB4 001C9CB4*/ PPC::Runtime::ASM::blr();
}