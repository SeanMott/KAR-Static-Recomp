//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80305EC8.hpp"
#include "fn_80305CF0.hpp"



void fn_80305ABC(PPC::Runtime::GCContext* context)
{
/*80305ABC 003028BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80305AC0 003028C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80305AC4 003028C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80305AC8 003028C8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80305ACC 003028CC*/ PPC::Runtime::ASM::cmplw(context->r4, context->r5);
/*80305AD0 003028D0*/ PPC::Runtime::ASM::ble(.L_80305B0C);
/*80305AD4 003028D4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E3BC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80305AD8 003028D8*/ PPC::Runtime::ASM::mulli(context->r0, context->r5, 0x18);
/*80305ADC 003028DC*/ PPC::Runtime::ASM::subf(context->r5, context->r5, context->r4);
/*80305AE0 003028E0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80305AE4 003028E4*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x8);
/*80305AE8 003028E8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80305AEC 003028EC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80305AF0 003028F0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80305AF4 003028F4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80305AF8 003028F8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80305AFC 003028FC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80305B00 00302900*/ PPC::Runtime::ASM::add(context->r4, context->r4, context->r0);
/*80305B04 00302904*/ PPC::Runtime::ASM::bl(fn_80305EC8);
/*80305B08 00302908*/ PPC::Runtime::ASM::b(.L_80305B28);
RUNTIME_PPC_JUMP_LABEL(.L_80305B0C, 0x80305B0C) //this is a jump label
/*80305B0C 0030290C*/ PPC::Runtime::ASM::bge(.L_80305B28);
/*80305B10 00302910*/ PPC::Runtime::ASM::mulli(context->r4, context->r4, 0x18);
/*80305B14 00302914*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80305B18 00302918*/ PPC::Runtime::ASM::mulli(context->r0, context->r5, 0x18);
/*80305B1C 0030291C*/ PPC::Runtime::ASM::add(context->r4, context->r6, context->r4);
/*80305B20 00302920*/ PPC::Runtime::ASM::add(context->r5, context->r6, context->r0);
/*80305B24 00302924*/ PPC::Runtime::ASM::bl(fn_80305CF0);
RUNTIME_PPC_JUMP_LABEL(.L_80305B28, 0x80305B28) //this is a jump label
/*80305B28 00302928*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80305B2C 0030292C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80305B30 00302930*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80305B34 00302934*/ PPC::Runtime::ASM::blr();
}