//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FD0E0.hpp"
#include "fn_80062CA4.hpp"
#include "fn_80062ECC.hpp"



void fn_800F3DF8(PPC::Runtime::GCContext* context)
{
/*800F3DF8 000F0BF8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800F3DFC 000F0BFC*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F3E00 000F0C00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F3E04 000F0C04*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800F3E08 000F0C08*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*800F3E0C 000F0C0C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800F3E10 000F0C10*/ PPC::Runtime::ASM::li(context->r30, 0x1);
/*800F3E14 000F0C14*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F3E18 000F0C18*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*800F3E1C 000F0C1C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800F3E20 000F0C20*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_800F3E24, 0x800F3E24) //this is a jump label
/*800F3E24 000F0C24*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD70C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F3E28 000F0C28*/ PPC::Runtime::ASM::add(context->r4, context->r0, context->r31);
/*800F3E2C 000F0C2C*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x46, context->r4));
/*800F3E30 000F0C30*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*800F3E34 000F0C34*/ PPC::Runtime::ASM::bne(.L_800F3EAC);
/*800F3E38 000F0C38*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800F3E3C 000F0C3C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800F3E40 000F0C40*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r4));
/*800F3E44 000F0C44*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*800F3E48 000F0C48*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800F3E4C 000F0C4C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800F3E50 000F0C50*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r4));
/*800F3E54 000F0C54*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*800F3E58 000F0C58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F3E5C 000F0C5C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800F3E60 000F0C60*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r4));
/*800F3E64 000F0C64*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*800F3E68 000F0C68*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800F3E6C 000F0C6C*/ PPC::Runtime::ASM::bl(fn_801FD0E0);
/*800F3E70 000F0C70*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800F3E74 000F0C74*/ PPC::Runtime::ASM::bne(.L_800F3EAC);
/*800F3E78 000F0C78*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*800F3E7C 000F0C7C*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*800F3E80 000F0C80*/ PPC::Runtime::ASM::bl(fn_80062CA4);
/*800F3E84 000F0C84*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DD70C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F3E88 000F0C88*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x1c);
/*800F3E8C 000F0C8C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800F3E90 000F0C90*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r3);
/*800F3E94 000F0C94*/ PPC::Runtime::ASM::bl(fn_80062ECC);
/*800F3E98 000F0C98*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF7DC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800F3E9C 000F0C9C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800F3EA0 000F0CA0*/ PPC::Runtime::ASM::bge(.L_800F3EAC);
/*800F3EA4 000F0CA4*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800F3EA8 000F0CA8*/ PPC::Runtime::ASM::b(.L_800F3EBC);
RUNTIME_PPC_JUMP_LABEL(.L_800F3EAC, 0x800F3EAC) //this is a jump label
/*800F3EAC 000F0CAC*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*800F3EB0 000F0CB0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x48);
/*800F3EB4 000F0CB4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*800F3EB8 000F0CB8*/ PPC::Runtime::ASM::blt(.L_800F3E24);
RUNTIME_PPC_JUMP_LABEL(.L_800F3EBC, 0x800F3EBC) //this is a jump label
/*800F3EBC 000F0CBC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800F3EC0 000F0CC0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800F3EC4 000F0CC4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800F3EC8 000F0CC8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800F3ECC 000F0CCC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800F3ED0 000F0CD0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800F3ED4 000F0CD4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F3ED8 000F0CD8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800F3EDC 000F0CDC*/ PPC::Runtime::ASM::blr();
}