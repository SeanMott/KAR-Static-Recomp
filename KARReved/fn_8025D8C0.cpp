//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025D8C0(PPC::Runtime::GCContext* context)
{
/*8025D8C0 0025A6C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025D8C4 0025A6C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025D8C8 0025A6C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D8CC 0025A6CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D8D0 0025A6D0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025D8D4 0025A6D4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025D8D8 0025A6D8*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025D8DC 0025A6DC*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EF0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D8E0 0025A6E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025D8E4 0025A6E4*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EF4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025D8E8 0025A6E8*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025D8EC 0025A6EC*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025D8F0 0025A6F0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025D8F4 0025A6F4*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025D8F8 0025A6F8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D8FC 0025A6FC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025D900 0025A700*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025D904 0025A704*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025D908 0025A708*/ PPC::Runtime::ASM::blr();
}