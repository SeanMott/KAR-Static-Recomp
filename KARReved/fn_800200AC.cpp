//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80133520.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"



void fn_800200AC(PPC::Runtime::GCContext* context)
{
/*800200AC 0001CEAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800200B0 0001CEB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800200B4 0001CEB4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800200B8 0001CEB8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800200BC 0001CEBC*/ PPC::Runtime::ASM::bl(fn_80133520);
/*800200C0 0001CEC0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800200C4 0001CEC4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800200C8 0001CEC8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800200CC 0001CECC*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r3));
/*800200D0 0001CED0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, 0xbc);
/*800200D4 0001CED4*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x3c);
/*800200D8 0001CED8*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x394, context->r31));
/*800200DC 0001CEDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3, context->r3));
/*800200E0 0001CEE0*/ PPC::Runtime::ASM::extrwi(context->r0, context->r0, 2, 24);
/*800200E4 0001CEE4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x1);
/*800200E8 0001CEE8*/ PPC::Runtime::ASM::bne(.L_80020100);
/*800200EC 0001CEEC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
/*800200F0 0001CEF0*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*800200F4 0001CEF4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 24, 25);
/*800200F8 0001CEF8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
/*800200FC 0001CEFC*/ PPC::Runtime::ASM::b(.L_80020110);
RUNTIME_PPC_JUMP_LABEL(.L_80020100, 0x80020100) //this is a jump label
/*80020100 0001CF00*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
/*80020104 0001CF04*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80020108 0001CF08*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 24, 25);
/*8002010C 0001CF0C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80020110, 0x80020110) //this is a jump label
/*80020110 0001CF10*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r4));
/*80020114 0001CF14*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*80020118 0001CF18*/ PPC::Runtime::ASM::add(context->r3, context->r4, context->r0);
/*8002011C 0001CF1C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*80020120 0001CF20*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x396, context->r31));
/*80020124 0001CF24*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7, context->r4));
/* 80020128 0001CF28  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*8002012C 0001CF2C*/ PPC::Runtime::ASM::bne(.L_80020144);
/*80020130 0001CF30*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
/*80020134 0001CF34*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80020138 0001CF38*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*8002013C 0001CF3C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
/*80020140 0001CF40*/ PPC::Runtime::ASM::b(.L_80020154);
RUNTIME_PPC_JUMP_LABEL(.L_80020144, 0x80020144) //this is a jump label
/*80020144 0001CF44*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
/*80020148 0001CF48*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8002014C 0001CF4C*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*80020150 0001CF50*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x397, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80020154, 0x80020154) //this is a jump label
/*80020154 0001CF54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80020158 0001CF58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8002015C 0001CF5C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80020160 0001CF60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80020164 0001CF64*/ PPC::Runtime::ASM::blr();
}