//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800AACF8.hpp"



void fn_800ACE18(PPC::Runtime::GCContext* context)
{
/*800ACE18 000A9C18*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800ACE1C 000A9C1C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800ACE20 000A9C20*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800ACE24 000A9C24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800ACE28 000A9C28*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800ACE2C 000A9C2C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ACE30 000A9C30*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800ACE34 000A9C34*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*800ACE38 000A9C38*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*800ACE3C 000A9C3C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800ACE40 000A9C40*/ PPC::Runtime::ASM::beq(.L_800ACE58);
/*800ACE44 000A9C44*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r29));
/*800ACE48 000A9C48*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800ACE4C 000A9C4C*/ PPC::Runtime::ASM::rlwinm(context->r3, context->r3, 0, 31, 29);
/*800ACE50 000A9C50*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r29));
/*800ACE54 000A9C54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_800ACE58, 0x800ACE58) //this is a jump label
/*800ACE58 000A9C58*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557060 @ Get_MemoryOffset_HighBit);
/*800ACE5C 000A9C5C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80557060 @ Get_MemoryOffset_LowBit);
/*800ACE60 000A9C60*/ PPC::Runtime::ASM::b(.L_800ACF04);
RUNTIME_PPC_JUMP_LABEL(.L_800ACE64, 0x800ACE64) //this is a jump label
/*800ACE64 000A9C64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r28));
/*800ACE68 000A9C68*/ PPC::Runtime::ASM::stw(context->r28, STRUCT_BYTE4_COUNT_1805DD6A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ACE6C 000A9C6C*/ PPC::Runtime::ASM::b(.L_800ACE74);
RUNTIME_PPC_JUMP_LABEL(.L_800ACE70, 0x800ACE70) //this is a jump label
/*800ACE70 000A9C70*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x20);
RUNTIME_PPC_JUMP_LABEL(.L_800ACE74, 0x800ACE74) //this is a jump label
/*800ACE74 000A9C74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800ACE78 000A9C78*/ PPC::Runtime::ASM::cmpwi(context->r0, 0xa);
/*800ACE7C 000A9C7C*/ PPC::Runtime::ASM::bne(.L_800ACE70);
/*800ACE80 000A9C80*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800ACE84 000A9C84*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800ACE88 000A9C88*/ PPC::Runtime::ASM::beq(.L_800ACEC8);
/*800ACE8C 000A9C8C*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*800ACE90 000A9C90*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800ACE94 000A9C94*/ PPC::Runtime::ASM::bctrl();
/*800ACE98 000A9C98*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800ACE9C 000A9C9C*/ PPC::Runtime::ASM::bne(.L_800ACEE8);
/*800ACEA0 000A9CA0*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ACEA4 000A9CA4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800ACEA8 000A9CA8*/ PPC::Runtime::ASM::beq(.L_800ACEE8);
/*800ACEAC 000A9CAC*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800ACEB0 000A9CB0*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800ACEB4 000A9CB4*/ PPC::Runtime::ASM::beq(.L_800ACEE8);
/*800ACEB8 000A9CB8*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*800ACEBC 000A9CBC*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800ACEC0 000A9CC0*/ PPC::Runtime::ASM::bctrl();
/*800ACEC4 000A9CC4*/ PPC::Runtime::ASM::b(.L_800ACEE8);
RUNTIME_PPC_JUMP_LABEL(.L_800ACEC8, 0x800ACEC8) //this is a jump label
/*800ACEC8 000A9CC8*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800ACECC 000A9CCC*/ PPC::Runtime::ASM::beq(.L_800ACEE8);
/*800ACED0 000A9CD0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r28));
/*800ACED4 000A9CD4*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*800ACED8 000A9CD8*/ PPC::Runtime::ASM::beq(.L_800ACEE8);
/*800ACEDC 000A9CDC*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*800ACEE0 000A9CE0*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800ACEE4 000A9CE4*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_800ACEE8, 0x800ACEE8) //this is a jump label
/*800ACEE8 000A9CE8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*800ACEEC 000A9CEC*/ PPC::Runtime::ASM::bl(fn_800AACF8);
/*800ACEF0 000A9CF0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r28));
/*800ACEF4 000A9CF4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800ACEF8 000A9CF8*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800ACEFC 000A9CFC*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
/*800ACF00 000A9D00*/ PPC::Runtime::ASM::mr(context->r28, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_800ACF04, 0x800ACF04) //this is a jump label
/*800ACF04 000A9D04*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*800ACF08 000A9D08*/ PPC::Runtime::ASM::bne(.L_800ACE64);
/*800ACF0C 000A9D0C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800ACF10 000A9D10*/ PPC::Runtime::ASM::stw(context->r29, STRUCT_BYTE4_COUNT_1805DD6A0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800ACF14 000A9D14*/ PPC::Runtime::ASM::bne(.L_800ACF20);
/*800ACF18 000A9D18*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800ACF1C 000A9D1C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD6A4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_800ACF20, 0x800ACF20) //this is a jump label
/*800ACF20 000A9D20*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800ACF24 000A9D24*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800ACF28 000A9D28*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800ACF2C 000A9D2C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800ACF30 000A9D30*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800ACF34 000A9D34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800ACF38 000A9D38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800ACF3C 000A9D3C*/ PPC::Runtime::ASM::blr();
}