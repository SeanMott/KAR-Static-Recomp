//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_AS_Land.hpp"
#include "fn_AS_Land.hpp"
#include "fn_801A2AA4.hpp"



void fn_801B9FE0(PPC::Runtime::GCContext* context)
{
/*801B9FE0 001B6DE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801B9FE4 001B6DE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801B9FE8 001B6DE8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801B9FEC 001B6DEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2cc, context->r3));
/*801B9FF0 001B6DF0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801B9FF4 001B6DF4*/ PPC::Runtime::ASM::bne(.L_801BA004);
/*801B9FF8 001B6DF8*/ PPC::Runtime::ASM::lis(context->r4, fn_AS_Land @ Get_MemoryOffset_HighBit);
/*801B9FFC 001B6DFC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_AS_Land @ Get_MemoryOffset_LowBit);
/*801BA000 001B6E00*/ PPC::Runtime::ASM::bl(fn_801A2AA4);
RUNTIME_PPC_JUMP_LABEL(.L_801BA004, 0x801BA004) //this is a jump label
/*801BA004 001B6E04*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BA008 001B6E08*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BA00C 001B6E0C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BA010 001B6E10*/ PPC::Runtime::ASM::blr();
}