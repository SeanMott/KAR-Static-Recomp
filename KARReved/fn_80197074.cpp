//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801971D8.hpp"



void fn_80197074(PPC::Runtime::GCContext* context)
{
/*80197074 00193E74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80197078 00193E78*/ PPC::Runtime::ASM::mflr(context->r0);
/*8019707C 00193E7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80197080 00193E80*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 1);
/*80197084 00193E84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80197088 00193E88*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8019708C 00193E8C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80197090 00193E90*/ PPC::Runtime::ASM::add(context->r3, context->r30, context->r0);
/*80197094 00193E94*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x415, context->r3));
/*80197098 00193E98*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8019709C 00193E9C*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*801970A0 00193EA0*/ PPC::Runtime::ASM::beq(.L_801970D8);
/*801970A4 00193EA4*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x415, context->r3));
/*801970A8 00193EA8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801970AC 00193EAC*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801970B0 00193EB0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
/*801970B4 00193EB4*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 1, 30, 30);
/*801970B8 00193EB8*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_801970BC, 0x801970BC) //this is a jump label
/*801970BC 00193EBC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801970C0 00193EC0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x40c);
/*801970C4 00193EC4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x2b4);
/*801970C8 00193EC8*/ PPC::Runtime::ASM::bl(fn_801971D8);
/*801970CC 00193ECC*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*801970D0 00193ED0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x3);
/*801970D4 00193ED4*/ PPC::Runtime::ASM::blt(.L_801970BC);
RUNTIME_PPC_JUMP_LABEL(.L_801970D8, 0x801970D8) //this is a jump label
/*801970D8 00193ED8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801970DC 00193EDC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801970E0 00193EE0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801970E4 00193EE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801970E8 00193EE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801970EC 00193EEC*/ PPC::Runtime::ASM::blr();
}