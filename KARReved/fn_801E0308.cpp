//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000A278.hpp"



void fn_801E0308(PPC::Runtime::GCContext* context)
{
/*801E0308 001DD108*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E030C 001DD10C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E0310 001DD110*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0314 001DD114*/ PPC::Runtime::ASM::bl(fn_8000A278);
/*801E0318 001DD118*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801E031C 001DD11C*/ PPC::Runtime::ASM::beq(.L_801E0358);
/*801E0320 001DD120*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*801E0324 001DD124*/ PPC::Runtime::ASM::bl(fn__HSD_MemAlloc);
/*801E0328 001DD128*/ PPC::Runtime::ASM::stw(context->r3, STRUCT_BYTE4_COUNT_1805DD870 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E032C 001DD12C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801E0330 001DD130*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*801E0334 001DD134*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD870 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0338 001DD138*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*801E033C 001DD13C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD870 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0340 001DD140*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r3));
/*801E0344 001DD144*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD870 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0348 001DD148*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*801E034C 001DD14C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD870 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E0350 001DD150*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801E0354 001DD154*/ PPC::Runtime::ASM::b(.L_801E0360);
RUNTIME_PPC_JUMP_LABEL(.L_801E0358, 0x801E0358) //this is a jump label
/*801E0358 001DD158*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801E035C 001DD15C*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD870 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_801E0360, 0x801E0360) //this is a jump label
/*801E0360 001DD160*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E0364 001DD164*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E0368 001DD168*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E036C 001DD16C*/ PPC::Runtime::ASM::blr();
}