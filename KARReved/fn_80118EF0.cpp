//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80114EEC.hpp"



void fn_80118EF0(PPC::Runtime::GCContext* context)
{
/*80118EF0 00115CF0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80118EF4 00115CF4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80118EF8 00115CF8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80118EFC 00115CFC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80118F00 00115D00*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r3));
/*80118F04 00115D04*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80118F08 00115D08*/ PPC::Runtime::ASM::beq(.L_80118F10);
/*80118F0C 00115D0C*/ PPC::Runtime::ASM::bl(fn_80114EEC);
RUNTIME_PPC_JUMP_LABEL(.L_80118F10, 0x80118F10) //this is a jump label
/*80118F10 00115D10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80118F14 00115D14*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80118F18 00115D18*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80118F1C 00115D1C*/ PPC::Runtime::ASM::blr();
}