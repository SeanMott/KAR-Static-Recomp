//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80245DB0.hpp"
#include "fn_80245F70.hpp"
#include "fn_80246224.hpp"
#include "fn_8024625C.hpp"



void fn_801CDDB0(PPC::Runtime::GCContext* context)
{
/*801CDDB0 001CABB0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801CDDB4 001CABB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801CDDB8 001CABB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CDDBC 001CABBC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CDDC0 001CABC0*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801CDDC4 001CABC4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CDDC8 001CABC8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801CDDCC 001CABCC*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x3f4);
/*801CDDD0 001CABD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r3));
/*801CDDD4 001CABD4*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x418);
/*801CDDD8 001CABD8*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x424);
/*801CDDDC 001CABDC*/ PPC::Runtime::ASM::bl(fn_80245DB0);
/*801CDDE0 001CABE0*/ PPC::Runtime::ASM::lfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6fc, context->r30));
/*801CDDE4 001CABE4*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801CDDE8 001CABE8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x424, context->r30));
/*801CDDEC 001CABEC*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x418);
/*801CDDF0 001CABF0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x428, context->r30));
/*801CDDF4 001CABF4*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x424);
/*801CDDF8 001CABF8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f4);
/*801CDDFC 001CABFC*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r30));
/*801CDE00 001CAC00*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42c, context->r30));
/*801CDE04 001CAC04*/ PPC::Runtime::ASM::fmuls(context->f5, context->f1, context->f4);
/*801CDE08 001CAC08*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1A30 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CDE0C 001CAC0C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*801CDE10 001CAC10*/ PPC::Runtime::ASM::fadds(context->f0, context->f2, context->f0);
/*801CDE14 001CAC14*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1A4C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801CDE18 001CAC18*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f4);
/*801CDE1C 001CAC1C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801CDE20 001CAC20*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r30));
/*801CDE24 001CAC24*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f5);
/*801CDE28 001CAC28*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801CDE2C 001CAC2C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r30));
/*801CDE30 001CAC30*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*801CDE34 001CAC34*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801CDE38 001CAC38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r30));
/*801CDE3C 001CAC3C*/ PPC::Runtime::ASM::bl(fn_80245F70);
/*801CDE40 001CAC40*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r30));
/*801CDE44 001CAC44*/ PPC::Runtime::ASM::bl(fn_80246224);
/*801CDE48 001CAC48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r30));
/*801CDE4C 001CAC4C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801CDE50 001CAC50*/ PPC::Runtime::ASM::bl(fn_8024625C);
/*801CDE54 001CAC54*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r30));
/*801CDE58 001CAC58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801CDE5C 001CAC5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r3));
/*801CDE60 001CAC60*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801CDE64 001CAC64*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x144, context->r3));
/*801CDE68 001CAC68*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*801CDE6C 001CAC6C*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*801CDE70 001CAC70*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*801CDE74 001CAC74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801CDE78 001CAC78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801CDE7C 001CAC7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801CDE80 001CAC80*/ PPC::Runtime::ASM::blr();
}