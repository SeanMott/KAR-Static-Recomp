//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_80291C5C(PPC::Runtime::GCContext* context)
{
/*80291C5C 0028EA5C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80291C60 0028EA60*/ PPC::Runtime::ASM::mflr(context->r0);
/*80291C64 0028EA64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291C68 0028EA68*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 80291C6C 0028EA6C  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80291C70 0028EA70*/ PPC::Runtime::ASM::beq(.L_80291C94);
/*80291C74 0028EA74*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BD0A4 @ Get_MemoryOffset_HighBit);
/*80291C78 0028EA78*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*80291C7C 0028EA7C*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BD0A4 @ Get_MemoryOffset_LowBit);
/*80291C80 0028EA80*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80291C84 0028EA84*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80291C88 0028EA88*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBE0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80291C8C 0028EA8C*/ PPC::Runtime::ASM::ble(.L_80291C94);
/*80291C90 0028EA90*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_80291C94, 0x80291C94) //this is a jump label
/*80291C94 0028EA94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80291C98 0028EA98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80291C9C 0028EA9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80291CA0 0028EAA0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80291CA4 0028EAA4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80291CA8 0028EAA8*/ PPC::Runtime::ASM::blr();
}