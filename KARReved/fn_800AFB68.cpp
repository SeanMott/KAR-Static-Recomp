//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80078C7C.hpp"
#include "fn_8007863C.hpp"



void fn_800AFB68(PPC::Runtime::GCContext* context)
{
/*800AFB68 000AC968*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800AFB6C 000AC96C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AFB70 000AC970*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AFB74 000AC974*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_750 @ Get_MemoryOffset_HighBit);
/*800AFB78 000AC978*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800AFB7C 000AC97C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800AFB80 000AC980*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AFB84 000AC984*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_750 @ Get_MemoryOffset_LowBit);
/*800AFB88 000AC988*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AFB8C 000AC98C*/ PPC::Runtime::ASM::bne(.L_800AFBFC);
/*800AFB90 000AC990*/ PPC::Runtime::ASM::bl(fn_80078C7C);
/*800AFB94 000AC994*/ PPC::Runtime::ASM::li(context->r29, 0x708);
RUNTIME_PPC_JUMP_LABEL(.L_800AFB98, 0x800AFB98) //this is a jump label
/*800AFB98 000AC998*/ PPC::Runtime::ASM::bl(fn_8007863C);
/*800AFB9C 000AC99C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AFBA0 000AC9A0*/ PPC::Runtime::ASM::cmpwi(context->r31, 0xb);
/*800AFBA4 000AC9A4*/ PPC::Runtime::ASM::bne(.L_800AFBB0);
/*800AFBA8 000AC9A8*/ PPC::Runtime::ASM::bl(fn_8045BB60);
/*800AFBAC 000AC9AC*/ PPC::Runtime::ASM::b(.L_800AFBD8);
RUNTIME_PPC_JUMP_LABEL(.L_800AFBB0, 0x800AFBB0) //this is a jump label
/*800AFBB0 000AC9B0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D5FC8 @ Get_MemoryOffset_SDA21);
/*800AFBB4 000AC9B4*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AFBB8 000AC9B8*/ PPC::Runtime::ASM::bl(OSReport);
/*800AFBBC 000AC9BC*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*800AFBC0 000AC9C0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2e8);
/*800AFBC4 000AC9C4*/ PPC::Runtime::ASM::lwzx(context->r4, context->r3, context->r0);
/*800AFBC8 000AC9C8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x354);
/*800AFBCC 000AC9CC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AFBD0 000AC9D0*/ PPC::Runtime::ASM::bl(OSReport);
/*800AFBD4 000AC9D4*/ PPC::Runtime::ASM::b(.L_800AFBFC);
RUNTIME_PPC_JUMP_LABEL(.L_800AFBD8, 0x800AFBD8) //this is a jump label
/*800AFBD8 000AC9D8*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800AFBDC 000AC9DC*/ PPC::Runtime::ASM::subi(context->r29, context->r29, 0x1);
/*800AFBE0 000AC9E0*/ PPC::Runtime::ASM::bge(.L_800AFBF4);
/*800AFBE4 000AC9E4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x370);
/*800AFBE8 000AC9E8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800AFBEC 000AC9EC*/ PPC::Runtime::ASM::bl(OSReport);
/*800AFBF0 000AC9F0*/ PPC::Runtime::ASM::b(.L_800AFBFC);
RUNTIME_PPC_JUMP_LABEL(.L_800AFBF4, 0x800AFBF4) //this is a jump label
/*800AFBF4 000AC9F4*/ PPC::Runtime::ASM::bl(fn_VIWaitForRetrace);
/*800AFBF8 000AC9F8*/ PPC::Runtime::ASM::b(.L_800AFB98);
RUNTIME_PPC_JUMP_LABEL(.L_800AFBFC, 0x800AFBFC) //this is a jump label
/*800AFBFC 000AC9FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800AFC00 000ACA00*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AFC04 000ACA04*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800AFC08 000ACA08*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800AFC0C 000ACA0C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AFC10 000ACA10*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AFC14 000ACA14*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800AFC18 000ACA18*/ PPC::Runtime::ASM::blr();
}