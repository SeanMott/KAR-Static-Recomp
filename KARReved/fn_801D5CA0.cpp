//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006A3F0.hpp"



void fn_801D5CA0(PPC::Runtime::GCContext* context)
{
/*801D5CA0 001D2AA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801D5CA4 001D2AA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801D5CA8 001D2AA8*/ PPC::Runtime::ASM::mr(context->r6, context->r5);
/*801D5CAC 001D2AAC*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xc8);
/*801D5CB0 001D2AB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5CB4 001D2AB4*/ PPC::Runtime::ASM::mr(context->r0, context->r4);
/*801D5CB8 001D2AB8*/ PPC::Runtime::ASM::mr(context->r5, context->r0);
/*801D5CBC 001D2ABC*/ PPC::Runtime::ASM::lwz(context->r7, SKIP_ADDRESS_OFFSET_1 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801D5CC0 001D2AC0*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r7));
/*801D5CC4 001D2AC4*/ PPC::Runtime::ASM::bl(fn_8006A3F0);
/*801D5CC8 001D2AC8*/ PPC::Runtime::ASM::neg(context->r0, context->r3);
/*801D5CCC 001D2ACC*/ PPC::Runtime::ASM::or(context->r0, context->r0, context->r3);
/*801D5CD0 001D2AD0*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 31);
/*801D5CD4 001D2AD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801D5CD8 001D2AD8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801D5CDC 001D2ADC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801D5CE0 001D2AE0*/ PPC::Runtime::ASM::blr();
}