//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_abilityTimerDecreaser.hpp"
#include "fn_abilityTimer_Sword_revertModel.hpp"
#include "fn_AS_LoseCopyAbility.hpp"



void fn_abilityTimer_Sword_checkIf0(PPC::Runtime::GCContext* context)
{
/*801AFB30 001AC930*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AFB34 001AC934*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AFB38 001AC938*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFB3C 001AC93C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AFB40 001AC940*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801AFB44 001AC944*/ PPC::Runtime::ASM::bl(fn_abilityTimerDecreaser);
/*801AFB48 001AC948*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x91c, context->r31));
/*801AFB4C 001AC94C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801AFB50 001AC950*/ PPC::Runtime::ASM::bne(.L_801AFB68);
/*801AFB54 001AC954*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AFB58 001AC958*/ PPC::Runtime::ASM::bl(fn_abilityTimer_Sword_revertModel);
/*801AFB5C 001AC95C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801AFB60 001AC960*/ PPC::Runtime::ASM::bl(fn_AS_LoseCopyAbility);
/*801AFB64 001AC964*/ PPC::Runtime::ASM::b(.L_801AFB7C);
RUNTIME_PPC_JUMP_LABEL(.L_801AFB68, 0x801AFB68) //this is a jump label
/*801AFB68 001AC968*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
/*801AFB6C 001AC96C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801AFB70 001AC970*/ PPC::Runtime::ASM::beq(.L_801AFB7C);
/*801AFB74 001AC974*/ PPC::Runtime::ASM::subi(context->r0, context->r3, 0x1);
/*801AFB78 001AC978*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9f0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801AFB7C, 0x801AFB7C) //this is a jump label
/*801AFB7C 001AC97C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFB80 001AC980*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801AFB84 001AC984*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AFB88 001AC988*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AFB8C 001AC98C*/ PPC::Runtime::ASM::blr();
}