//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_ObjAlloc.hpp"
#include "fn___assert.hpp"
#include "memset.hpp"



void fn_HSD_SListAlloc(PPC::Runtime::GCContext* context)
{
/*8041BC6C 00418A6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8041BC70 00418A70*/ PPC::Runtime::ASM::mflr(context->r0);
/*8041BC74 00418A74*/ PPC::Runtime::ASM::lis(context->r3, lbl_8058BE28 @ Get_MemoryOffset_HighBit);
/*8041BC78 00418A78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BC7C 00418A7C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_8058BE28 @ Get_MemoryOffset_LowBit);
/*8041BC80 00418A80*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041BC84 00418A84*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 8041BC88 00418A88  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8041BC8C 00418A8C*/ PPC::Runtime::ASM::bne(.L_8041BCA0);
/*8041BC90 00418A90*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_491 @ Get_MemoryOffset_SDA21);
/*8041BC94 00418A94*/ PPC::Runtime::ASM::li(context->r4, 0x4c);
/*8041BC98 00418A98*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_490 @ Get_MemoryOffset_SDA21);
/*8041BC9C 00418A9C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8041BCA0, 0x8041BCA0) //this is a jump label
/*8041BCA0 00418AA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041BCA4 00418AA4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8041BCA8 00418AA8*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*8041BCAC 00418AAC*/ PPC::Runtime::ASM::bl(memset);
/*8041BCB0 00418AB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8041BCB4 00418AB4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8041BCB8 00418AB8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8041BCBC 00418ABC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8041BCC0 00418AC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8041BCC4 00418AC4*/ PPC::Runtime::ASM::blr();
}