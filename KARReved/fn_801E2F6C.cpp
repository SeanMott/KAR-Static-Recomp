//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C5DD4.hpp"



void fn_801E2F6C(PPC::Runtime::GCContext* context)
{
/*801E2F6C 001DFD6C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801E2F70 001DFD70*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E2F74 001DFD74*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1D68 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E2F78 001DFD78*/ PPC::Runtime::ASM::li(context->r4, 0xc);
/*801E2F7C 001DFD7C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E2F80 001DFD80*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801E2F84 001DFD84*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E1D6C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801E2F88 001DFD88*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801E2F8C 001DFD8C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E2F90 001DFD90*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801E2F94 001DFD94*/ PPC::Runtime::ASM::bl(fn_801C5DD4);
/*801E2F98 001DFD98*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3a, context->r31));
/*801E2F9C 001DFD9C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801E2FA0 001DFDA0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*801E2FA4 001DFDA4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc3a, context->r31));
/*801E2FA8 001DFDA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801E2FAC 001DFDAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801E2FB0 001DFDB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E2FB4 001DFDB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801E2FB8 001DFDB8*/ PPC::Runtime::ASM::blr();
}