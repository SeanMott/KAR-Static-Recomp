//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800BC370.hpp"
#include "fn_800BAC5C.hpp"
#include "fn_removeHUD.hpp"
#include "fn_800B989C.hpp"



void fn_8008EC38(PPC::Runtime::GCContext* context)
{
/*8008EC38 0008BA38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8008EC3C 0008BA3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8008EC40 0008BA40*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*8008EC44 0008BA44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008EC48 0008BA48*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8008EC4C 0008BA4C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*8008EC50 0008BA50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008EC54 0008BA54*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC58, 0x8008EC58) //this is a jump label
/*8008EC58 0008BA58*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8008EC5C 0008BA5C*/ PPC::Runtime::ASM::blt(.L_8008EC68);
/*8008EC60 0008BA60*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*8008EC64 0008BA64*/ PPC::Runtime::ASM::blt(.L_8008EC70);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC68, 0x8008EC68) //this is a jump label
/*8008EC68 0008BA68*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8008EC6C 0008BA6C*/ PPC::Runtime::ASM::b(.L_8008EC74);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC70, 0x8008EC70) //this is a jump label
/*8008EC70 0008BA70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8008EC74, 0x8008EC74) //this is a jump label
/*8008EC74 0008BA74*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8008EC78 0008BA78*/ PPC::Runtime::ASM::beq(.L_8008EC84);
/*8008EC7C 0008BA7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8008EC80 0008BA80*/ PPC::Runtime::ASM::b(.L_8008EC88);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC84, 0x8008EC84) //this is a jump label
/*8008EC84 0008BA84*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC88, 0x8008EC88) //this is a jump label
/*8008EC88 0008BA88*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8008EC8C 0008BA8C*/ PPC::Runtime::ASM::beq(.L_8008EC98);
/*8008EC90 0008BA90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8008EC94 0008BA94*/ PPC::Runtime::ASM::b(.L_8008EC9C);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC98, 0x8008EC98) //this is a jump label
/*8008EC98 0008BA98*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8008EC9C, 0x8008EC9C) //this is a jump label
/*8008EC9C 0008BA9C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*8008ECA0 0008BAA0*/ PPC::Runtime::ASM::beq(.L_8008ECBC);
/*8008ECA4 0008BAA4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8008ECA8 0008BAA8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*8008ECAC 0008BAAC*/ PPC::Runtime::ASM::bl(fn_800BC370);
/*8008ECB0 0008BAB0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8008ECB4 0008BAB4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8008ECB8 0008BAB8*/ PPC::Runtime::ASM::bl(fn_800BAC5C);
RUNTIME_PPC_JUMP_LABEL(.L_8008ECBC, 0x8008ECBC) //this is a jump label
/*8008ECBC 0008BABC*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8008ECC0 0008BAC0*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x4);
/*8008ECC4 0008BAC4*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x20);
/*8008ECC8 0008BAC8*/ PPC::Runtime::ASM::blt(.L_8008EC58);
/*8008ECCC 0008BACC*/ PPC::Runtime::ASM::bl(fn_removeHUD);
/*8008ECD0 0008BAD0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8008ECD4 0008BAD4*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8008ECD8 0008BAD8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8008ECDC 0008BADC*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*8008ECE0 0008BAE0*/ PPC::Runtime::ASM::bl(fn_800B989C);
/*8008ECE4 0008BAE4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8008ECE8 0008BAE8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8008ECEC 0008BAEC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8008ECF0 0008BAF0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8008ECF4 0008BAF4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8008ECF8 0008BAF8*/ PPC::Runtime::ASM::blr();
}