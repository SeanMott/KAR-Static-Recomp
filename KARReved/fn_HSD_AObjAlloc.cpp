//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_HSD_ObjAlloc.hpp"
#include "fn___assert.hpp"
#include "memset.hpp"



void fn_HSD_AObjAlloc(PPC::Runtime::GCContext* context)
{
/*803FB654 003F8454*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803FB658 003F8458*/ PPC::Runtime::ASM::mflr(context->r0);
/*803FB65C 003F845C*/ PPC::Runtime::ASM::lis(context->r3, aobj_alloc_data_SoundBufferEntry @ Get_MemoryOffset_HighBit);
/*803FB660 003F8460*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FB664 003F8464*/ PPC::Runtime::ASM::addi(context->r3, context->r3, aobj_alloc_data_SoundBufferEntry @ Get_MemoryOffset_LowBit);
/*803FB668 003F8468*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FB66C 003F846C*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 803FB670 003F8470  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803FB674 003F8474*/ PPC::Runtime::ASM::bne(.L_803FB688);
/*803FB678 003F8478*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_595 @ Get_MemoryOffset_SDA21);
/*803FB67C 003F847C*/ PPC::Runtime::ASM::li(context->r4, 0x1e9);
/*803FB680 003F8480*/ PPC::Runtime::ASM::li(context->r5, String_ "ne" 4 @ Get_MemoryOffset_SDA21);
/*803FB684 003F8484*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_803FB688, 0x803FB688) //this is a jump label
/*803FB688 003F8488*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803FB68C 003F848C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*803FB690 003F8490*/ PPC::Runtime::ASM::li(context->r5, 0x1c);
/*803FB694 003F8494*/ PPC::Runtime::ASM::bl(memset);
/*803FB698 003F8498*/ PPC::Runtime::ASM::lis(context->r0, 0x4000);
/*803FB69C 003F849C*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E5A1C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803FB6A0 003F84A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*803FB6A4 003F84A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*803FB6A8 003F84A8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*803FB6AC 003F84AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FB6B0 003F84B0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FB6B4 003F84B4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803FB6B8 003F84B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803FB6BC 003F84BC*/ PPC::Runtime::ASM::blr();
}