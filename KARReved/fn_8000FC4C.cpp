//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_800AD1A4.hpp"



void fn_8000FC4C(PPC::Runtime::GCContext* context)
{
/*8000FC4C 0000CA4C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000FC50 0000CA50*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000FC54 0000CA54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000FC58 0000CA58*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000FC5C 0000CA5C*/ PPC::Runtime::ASM::bl(fn_800AD1A4);
/*8000FC60 0000CA60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000FC64 0000CA64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000FC68 0000CA68*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000FC6C 0000CA6C*/ PPC::Runtime::ASM::blr();
}