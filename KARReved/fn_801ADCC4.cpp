//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801ADE4C.hpp"
#include "fn_801ADD38.hpp"
#include "fn_801ADD18.hpp"
#include "fn_801ADD38.hpp"
#include "fn_801ADD18.hpp"



void fn_801ADCC4(PPC::Runtime::GCContext* context)
{
/*801ADCC4 001AAAC4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801ADCC8 001AAAC8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801ADCCC 001AAACC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ADCD0 001AAAD0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ADCD4 001AAAD4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801ADCD8 001AAAD8*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801ADCDC 001AAADC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x918, context->r3));
/*801ADCE0 001AAAE0*/ PPC::Runtime::ASM::bl(fn_801ADE4C);
/*801ADCE4 001AAAE4*/ PPC::Runtime::ASM::lis(context->r3, fn_801ADD38 @ Get_MemoryOffset_HighBit);
/*801ADCE8 001AAAE8*/ PPC::Runtime::ASM::lis(context->r4, fn_801ADD18 @ Get_MemoryOffset_HighBit);
/*801ADCEC 001AAAEC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_801ADD38 @ Get_MemoryOffset_LowBit);
/*801ADCF0 001AAAF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801ADCF4 001AAAF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f8, context->r30));
/*801ADCF8 001AAAF8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801ADD18 @ Get_MemoryOffset_LowBit);
/*801ADCFC 001AAAFC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e4, context->r30));
/*801ADD00 001AAB00*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801ADD04 001AAB04*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801ADD08 001AAB08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801ADD0C 001AAB0C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801ADD10 001AAB10*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801ADD14 001AAB14*/ PPC::Runtime::ASM::blr();
}