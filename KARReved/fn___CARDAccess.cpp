//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_memcmp.hpp"
#include "fn_memcmp.hpp"



void fn___CARDAccess(PPC::Runtime::GCContext* context)
{
/*803E6ED4 003E3CD4*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E6ED8 003E3CD8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E6EDC 003E3CDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803E6EE0 003E3CE0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E6EE4 003E3CE4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*803E6EE8 003E3CE8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E6EEC 003E3CEC*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x0);
/*803E6EF0 003E3CF0*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*803E6EF4 003E3CF4*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xff);
/*803E6EF8 003E3CF8*/ PPC::Runtime::ASM::bne(.L_803E6F04);
/*803E6EFC 003E3CFC*/ PPC::Runtime::ASM::li(context->r3, -0x4);
/*803E6F00 003E3D00*/ PPC::Runtime::ASM::b(.L_803E6F54);
RUNTIME_PPC_JUMP_LABEL(.L_803E6F04, 0x803E6F04) //this is a jump label
/*803E6F04 003E3D04*/ PPC::Runtime::ASM::lis(context->r3, lbl_8056E708 @ Get_MemoryOffset_HighBit);
/*803E6F08 003E3D08*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r30));
/*803E6F0C 003E3D0C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_8056E708 @ Get_MemoryOffset_LowBit);
/*803E6F10 003E3D10*/ PPC::Runtime::ASM::cmplw(context->r4, context->r0);
/*803E6F14 003E3D14*/ PPC::Runtime::ASM::beq(.L_803E6F48);
/*803E6F18 003E3D18*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803E6F1C 003E3D1C*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*803E6F20 003E3D20*/ PPC::Runtime::ASM::bl(fn_memcmp);
/*803E6F24 003E3D24*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E6F28 003E3D28*/ PPC::Runtime::ASM::bne(.L_803E6F50);
/*803E6F2C 003E3D2C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10c, context->r30));
/*803E6F30 003E3D30*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x4);
/*803E6F34 003E3D34*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*803E6F38 003E3D38*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x4);
/*803E6F3C 003E3D3C*/ PPC::Runtime::ASM::bl(fn_memcmp);
/*803E6F40 003E3D40*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*803E6F44 003E3D44*/ PPC::Runtime::ASM::bne(.L_803E6F50);
RUNTIME_PPC_JUMP_LABEL(.L_803E6F48, 0x803E6F48) //this is a jump label
/*803E6F48 003E3D48*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803E6F4C 003E3D4C*/ PPC::Runtime::ASM::b(.L_803E6F54);
RUNTIME_PPC_JUMP_LABEL(.L_803E6F50, 0x803E6F50) //this is a jump label
/*803E6F50 003E3D50*/ PPC::Runtime::ASM::li(context->r3, -0xa);
RUNTIME_PPC_JUMP_LABEL(.L_803E6F54, 0x803E6F54) //this is a jump label
/*803E6F54 003E3D54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E6F58 003E3D58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E6F5C 003E3D5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803E6F60 003E3D60*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803E6F64 003E3D64*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E6F68 003E3D68*/ PPC::Runtime::ASM::blr();
}