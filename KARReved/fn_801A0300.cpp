//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80190948.hpp"
#include "fn_setStickXYandChargeBool.hpp"



void fn_801A0300(PPC::Runtime::GCContext* context)
{
/*801A0300 0019D100*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*801A0304 0019D104*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A0308 0019D108*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A030C 0019D10C*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0xc);
/*801A0310 0019D110*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801A0314 0019D114*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A0318 0019D118*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801A031C 0019D11C*/ PPC::Runtime::ASM::bl(fn_80190948);
/*801A0320 0019D120*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f4, context->r31));
/*801A0324 0019D124*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801A0328 0019D128*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A032C 0019D12C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A0330 0019D130*/ PPC::Runtime::ASM::bl(fn_setStickXYandChargeBool);
/*801A0334 0019D134*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801A0338 0019D138*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801A033C 0019D13C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A0340 0019D140*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*801A0344 0019D144*/ PPC::Runtime::ASM::blr();
}