//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8006BAC8.hpp"



void fn_800CF0FC(PPC::Runtime::GCContext* context)
{
/*800CF0FC 000CBEFC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800CF100 000CBF00*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CF104 000CBF04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CF108 000CBF08*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800CF10C 000CBF0C*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800CF110 000CBF10*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CF114 000CBF14*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800CF118 000CBF18*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800CF11C 000CBF1C*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800CF120 000CBF20*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r31));
/*800CF124 000CBF24*/ PPC::Runtime::ASM::addi(context->r30, context->r5, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800CF128 000CBF28*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800CF12C 000CBF2C*/ PPC::Runtime::ASM::bne(.L_800CF140);
/*800CF130 000CBF30*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800CF134 000CBF34*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x9c);
/*800CF138 000CBF38*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800CF13C 000CBF3C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF140, 0x800CF140) //this is a jump label
/*800CF140 000CBF40*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x0);
/*800CF144 000CBF44*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CF148 000CBF48*/ PPC::Runtime::ASM::blt(.L_800CF15C);
/*800CF14C 000CBF4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800CF150 000CBF50*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800CF154 000CBF54*/ PPC::Runtime::ASM::bge(.L_800CF15C);
/*800CF158 000CBF58*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800CF15C, 0x800CF15C) //this is a jump label
/*800CF15C 000CBF5C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800CF160 000CBF60*/ PPC::Runtime::ASM::bne(.L_800CF174);
/*800CF164 000CBF64*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x68);
/*800CF168 000CBF68*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0xa8);
/*800CF16C 000CBF6C*/ PPC::Runtime::ASM::li(context->r4, 0x1e);
/*800CF170 000CBF70*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF174, 0x800CF174) //this is a jump label
/*800CF174 000CBF74*/ PPC::Runtime::ASM::mulli(context->r0, context->r28, 0x1c);
/*800CF178 000CBF78*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x120, context->r31));
/*800CF17C 000CBF7C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800CF180 000CBF80*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*800CF184 000CBF84*/ PPC::Runtime::ASM::bne(.L_800CF198);
/*800CF188 000CBF88*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x9c);
/*800CF18C 000CBF8C*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800CF190 000CBF90*/ PPC::Runtime::ASM::li(context->r4, 0x1cd);
/*800CF194 000CBF94*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF198, 0x800CF198) //this is a jump label
/*800CF198 000CBF98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800CF19C 000CBF9C*/ PPC::Runtime::ASM::mr(context->r4, context->r27);
/*800CF1A0 000CBFA0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800CF1A4 000CBFA4*/ PPC::Runtime::ASM::bl(fn_8006BAC8);
/*800CF1A8 000CBFA8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800CF1AC 000CBFAC*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800CF1B0 000CBFB0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CF1B4 000CBFB4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CF1B8 000CBFB8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800CF1BC 000CBFBC*/ PPC::Runtime::ASM::blr();
}