//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFFB8.hpp"



void fn_802D9B98(PPC::Runtime::GCContext* context)
{
/*802D9B98 002D6998*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802D9B9C 002D699C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802D9BA0 002D69A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D9BA4 002D69A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D9BA8 002D69A8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802D9BAC 002D69AC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802D9BB0 002D69B0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802D9BB4 002D69B4*/ PPC::Runtime::ASM::beq(.L_802D9C10);
/*802D9BB8 002D69B8*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D20F0 @ Get_MemoryOffset_HighBit);
/*802D9BBC 002D69BC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D20F0 @ Get_MemoryOffset_LowBit);
/*802D9BC0 002D69C0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802D9BC4 002D69C4*/ PPC::Runtime::ASM::beq(.L_802D9C00);
/*802D9BC8 002D69C8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D6F5C @ Get_MemoryOffset_HighBit);
/*802D9BCC 002D69CC*/ PPC::Runtime::ASM::lis(context->r3, String_ "AC_RUN_LOO" 1 @ Get_MemoryOffset_HighBit);
/*802D9BD0 002D69D0*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804D6F5C @ Get_MemoryOffset_LowBit);
/*802D9BD4 002D69D4*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802D9BD8 002D69D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802D9BDC 002D69DC*/ PPC::Runtime::ASM::addi(context->r4, context->r3, String_ "AC_RUN_LOO" 1 @ Get_MemoryOffset_LowBit);
/*802D9BE0 002D69E0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*802D9BE4 002D69E4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*802D9BE8 002D69E8*/ PPC::Runtime::ASM::bl(fn_802EFFB8);
/*802D9BEC 002D69EC*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*802D9BF0 002D69F0*/ PPC::Runtime::ASM::beq(.L_802D9C00);
/*802D9BF4 002D69F4*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*802D9BF8 002D69F8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*802D9BFC 002D69FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_802D9C00, 0x802D9C00) //this is a jump label
/*802D9C00 002D6A00*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802D9C04 002D6A04*/ PPC::Runtime::ASM::ble(.L_802D9C10);
/*802D9C08 002D6A08*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802D9C0C 002D6A0C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802D9C10, 0x802D9C10) //this is a jump label
/*802D9C10 002D6A10*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D9C14 002D6A14*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802D9C18 002D6A18*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D9C1C 002D6A1C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802D9C20 002D6A20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802D9C24 002D6A24*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802D9C28 002D6A28*/ PPC::Runtime::ASM::blr();
}