//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"
#include "fn_HSD_JOBJ_SetMtxDirtySub.hpp"



void fn_HSD_JObjClearFlags(PPC::Runtime::GCContext* context)
{
/*8040C450 00409250*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8040C454 00409254*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040C458 00409258*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8040C45C 0040925C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8040C460 00409260*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*8040C464 00409264*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8040C468 00409268*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 8040C46C 0040926C  7C 7D 1B 79 */ mr. context->r29 , context->r3
/*8040C470 00409270*/ PPC::Runtime::ASM::beq(.L_8040C4E0);
/*8040C474 00409274*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8040C478 00409278*/ PPC::Runtime::ASM::and(context->r30, context->r4, context->r31);
/*8040C47C 0040927C*/ PPC::Runtime::ASM::xor(context->r0, context->r0, context->r30);
/*8040C480 00409280*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 28, 28);
/*8040C484 00409284*/ PPC::Runtime::ASM::beq(.L_8040C4D0);
/*8040C488 00409288*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8040C48C 0040928C*/ PPC::Runtime::ASM::beq(.L_8040C4D0);
/*8040C490 00409290*/ PPC::Runtime::ASM::bne(.L_8040C4A4);
/*8040C494 00409294*/ PPC::Runtime::ASM::li(context->r3, MemoryOffset_531 @ Get_MemoryOffset_SDA21);
/*8040C498 00409298*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8040C49C 0040929C*/ PPC::Runtime::ASM::li(context->r5, MemoryOffset_530 @ Get_MemoryOffset_SDA21);
/*8040C4A0 004092A0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040C4A4, 0x8040C4A4) //this is a jump label
/*8040C4A4 004092A4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8040C4A8 004092A8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8040C4AC 004092AC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8040C4B0 004092B0*/ PPC::Runtime::ASM::bne(.L_8040C4C0);
/*8040C4B4 004092B4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8040C4B8 004092B8*/ PPC::Runtime::ASM::beq(.L_8040C4C0);
/*8040C4BC 004092BC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8040C4C0, 0x8040C4C0) //this is a jump label
/*8040C4C0 004092C0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8040C4C4 004092C4*/ PPC::Runtime::ASM::bne(.L_8040C4D0);
/*8040C4C8 004092C8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8040C4CC 004092CC*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8040C4D0, 0x8040C4D0) //this is a jump label
/*8040C4D0 004092D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
/*8040C4D4 004092D4*/ PPC::Runtime::ASM::andc(context->r0, context->r0, context->r31);
/*8040C4D8 004092D8*/ PPC::Runtime::ASM::or(context->r0, context->r30, context->r0);
/*8040C4DC 004092DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_8040C4E0, 0x8040C4E0) //this is a jump label
/*8040C4E0 004092E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8040C4E4 004092E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8040C4E8 004092E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8040C4EC 004092EC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040C4F0 004092F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040C4F4 004092F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8040C4F8 004092F8*/ PPC::Runtime::ASM::blr();
}