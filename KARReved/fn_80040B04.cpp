//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_plGetPlayerKind.hpp"
#include "fn_8022D230.hpp"
#include "fn_801C8410.hpp"



void fn_80040B04(PPC::Runtime::GCContext* context)
{
/*80040B04 0003D904*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80040B08 0003D908*/ PPC::Runtime::ASM::mflr(context->r0);
/*80040B0C 0003D90C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80040B10 0003D910*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80040B14 0003D914*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80040B18 0003D918*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80040B1C 0003D91C*/ PPC::Runtime::ASM::lfs(context->f31, STRUCT_FLOAT_COUNT_1805DE888 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80040B20 0003D920*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80040B24, 0x80040B24) //this is a jump label
/*80040B24 0003D924*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4);
/*80040B28 0003D928*/ PPC::Runtime::ASM::beq(.L_80040B54);
/*80040B2C 0003D92C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80040B30 0003D930*/ PPC::Runtime::ASM::bl(fn_plGetPlayerKind);
/*80040B34 0003D934*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*80040B38 0003D938*/ PPC::Runtime::ASM::beq(.L_80040B54);
/*80040B3C 0003D93C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80040B40 0003D940*/ PPC::Runtime::ASM::bl(fn_8022D230);
/*80040B44 0003D944*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80040B48 0003D948*/ PPC::Runtime::ASM::beq(.L_80040B54);
/*80040B4C 0003D94C*/ PPC::Runtime::ASM::bl(fn_801C8410);
/*80040B50 0003D950*/ PPC::Runtime::ASM::fadds(context->f31, context->f31, context->f1);
RUNTIME_PPC_JUMP_LABEL(.L_80040B54, 0x80040B54) //this is a jump label
/*80040B54 0003D954*/ PPC::Runtime::ASM::addi(context->r31, context->r31, 0x1);
/*80040B58 0003D958*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*80040B5C 0003D95C*/ PPC::Runtime::ASM::blt(.L_80040B24);
/*80040B60 0003D960*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80040B64 0003D964*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80040B68 0003D968*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80040B6C 0003D96C*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80040B70 0003D970*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80040B74 0003D974*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80040B78 0003D978*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80040B7C 0003D97C*/ PPC::Runtime::ASM::blr();
}