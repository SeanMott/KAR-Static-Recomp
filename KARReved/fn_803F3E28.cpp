//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_DBGEXIImm.hpp"
#include "fn_DBGEXIImm.hpp"



void fn_803F3E28(PPC::Runtime::GCContext* context)
{
/*803F3E28 003F0C28*/ PPC::Runtime::ASM::mflr(context->r0);
/*803F3E2C 003F0C2C*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*803F3E30 003F0C30*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803F3E34 003F0C34*/ PPC::Runtime::ASM::lis(context->r0, 0x4000);
/*803F3E38 003F0C38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x38, context->r1));
/*803F3E3C 003F0C3C*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803F3E40 003F0C40*/ PPC::Runtime::ASM::lis(context->r30, 0xcc00);
/*803F3E44 003F0C44*/ PPC::Runtime::ASM::addi(context->r27, context->r3, 0x0);
/*803F3E48 003F0C48*/ PPC::Runtime::ASM::addi(context->r29, context->r30, 0x6800);
/*803F3E4C 003F0C4C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x18);
/*803F3E50 003F0C50*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6828, context->r30));
/*803F3E54 003F0C54*/ PPC::Runtime::ASM::andi.(context->r5, context->r5, 0x405);
/*803F3E58 003F0C58*/ PPC::Runtime::ASM::ori(context->r5, context->r5, 0xc0);
/*803F3E5C 003F0C5C*/ PPC::Runtime::ASM::stwu(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r29));
/*803F3E60 003F0C60*/ PPC::Runtime::ASM::li(context->r5, 0x1);
/*803F3E64 003F0C64*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*803F3E68 003F0C68*/ PPC::Runtime::ASM::bl(fn_DBGEXIImm);
/*803F3E6C 003F0C6C*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803F3E70 003F0C70*/ PPC::Runtime::ASM::srwi(context->r31, context->r0, 5);
RUNTIME_PPC_JUMP_LABEL(.L_803F3E74, 0x803F3E74) //this is a jump label
/*803F3E74 003F0C74*/ PPC::Runtime::ASM::addi(context->r28, context->r30, 0x6800);
/*803F3E78 003F0C78*/ PPC::Runtime::ASM::lwzu(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r28));
/* 803F3E7C 003F0C7C  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803F3E80 003F0C80*/ PPC::Runtime::ASM::bne(.L_803F3E74);
/*803F3E84 003F0C84*/ PPC::Runtime::ASM::addi(context->r3, context->r27, 0x0);
/*803F3E88 003F0C88*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*803F3E8C 003F0C8C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*803F3E90 003F0C90*/ PPC::Runtime::ASM::bl(fn_DBGEXIImm);
/*803F3E94 003F0C94*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803F3E98 003F0C98*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*803F3E9C 003F0C9C*/ PPC::Runtime::ASM::or(context->r3, context->r31, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_803F3EA0, 0x803F3EA0) //this is a jump label
/*803F3EA0 003F0CA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/* 803F3EA4 003F0CA4  54 00 07 FF */ clrlwi. context->r0 , context->r0 , 31
/*803F3EA8 003F0CA8*/ PPC::Runtime::ASM::bne(.L_803F3EA0);
/*803F3EAC 003F0CAC*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803F3EB0 003F0CB0*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r3);
/*803F3EB4 003F0CB4*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*803F3EB8 003F0CB8*/ PPC::Runtime::ASM::andi.(context->r0, context->r4, 0x405);
/*803F3EBC 003F0CBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*803F3EC0 003F0CC0*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*803F3EC4 003F0CC4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*803F3EC8 003F0CC8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x38);
/*803F3ECC 003F0CCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803F3ED0 003F0CD0*/ PPC::Runtime::ASM::blr();
}