//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8025D330.hpp"
#include "fn_8025D330.hpp"
#include "fn_80255438.hpp"



void fn_8025D480(PPC::Runtime::GCContext* context)
{
/*8025D480 0025A280*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025D484 0025A284*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025D488 0025A288*/ PPC::Runtime::ASM::lis(context->r4, fn_8025D330 @ Get_MemoryOffset_HighBit);
/*8025D48C 0025A28C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D490 0025A290*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_8025D330 @ Get_MemoryOffset_LowBit);
/*8025D494 0025A294*/ PPC::Runtime::ASM::bl(fn_80255438);
/*8025D498 0025A298*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025D49C 0025A29C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025D4A0 0025A2A0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025D4A4 0025A2A4*/ PPC::Runtime::ASM::blr();
}