//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025A4AC(PPC::Runtime::GCContext* context)
{
/*8025A4AC 002572AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025A4B0 002572B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025A4B4 002572B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A4B8 002572B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A4BC 002572BC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025A4C0 002572C0*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025A4C4 002572C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025A4C8 002572C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A4CC 002572CC*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025A4D0 002572D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A4D4 002572D4*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A4D8 002572D8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025A4DC 002572DC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A4E0 002572E0*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A4E4 002572E4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025A4E8 002572E8*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A4EC 002572EC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025A4F0 002572F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025A4F4 002572F4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A4F8 002572F8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025A4FC 002572FC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025A500 00257300*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025A504 00257304*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025A508 00257308*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A50C 0025730C*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025A510 00257310*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025A514 00257314*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025A518 00257318*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025A51C 0025731C*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025A520 00257320*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025A524 00257324*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025A528 00257328*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025A52C 0025732C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025A530 00257330*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025A534 00257334*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025A538 00257338*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025A53C 0025733C*/ PPC::Runtime::ASM::blr();
}