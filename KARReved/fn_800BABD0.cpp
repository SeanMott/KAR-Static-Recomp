//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80066E64.hpp"



void fn_800BABD0(PPC::Runtime::GCContext* context)
{
/*800BABD0 000B79D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800BABD4 000B79D4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800BABD8 000B79D8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800BABDC 000B79DC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BABE0 000B79E0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800BABE4 000B79E4*/ PPC::Runtime::ASM::blt(.L_800BABF0);
/*800BABE8 000B79E8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x20);
/*800BABEC 000B79EC*/ PPC::Runtime::ASM::blt(.L_800BABF8);
RUNTIME_PPC_JUMP_LABEL(.L_800BABF0, 0x800BABF0) //this is a jump label
/*800BABF0 000B79F0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800BABF4 000B79F4*/ PPC::Runtime::ASM::b(.L_800BAC0C);
RUNTIME_PPC_JUMP_LABEL(.L_800BABF8, 0x800BABF8) //this is a jump label
/*800BABF8 000B79F8*/ PPC::Runtime::ASM::lis(context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800BABFC 000B79FC*/ PPC::Runtime::ASM::slwi(context->r0, context->r3, 2);
/*800BAC00 000B7A00*/ PPC::Runtime::ASM::addi(context->r3, context->r4, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800BAC04 000B7A04*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800BAC08 000B7A08*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800BAC0C, 0x800BAC0C) //this is a jump label
/*800BAC0C 000B7A0C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BAC10 000B7A10*/ PPC::Runtime::ASM::beq(.L_800BAC1C);
/*800BAC14 000B7A14*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800BAC18 000B7A18*/ PPC::Runtime::ASM::b(.L_800BAC20);
RUNTIME_PPC_JUMP_LABEL(.L_800BAC1C, 0x800BAC1C) //this is a jump label
/*800BAC1C 000B7A1C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800BAC20, 0x800BAC20) //this is a jump label
/*800BAC20 000B7A20*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*800BAC24 000B7A24*/ PPC::Runtime::ASM::beq(.L_800BAC48);
/*800BAC28 000B7A28*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800BAC2C 000B7A2C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800BAC30 000B7A30*/ PPC::Runtime::ASM::beq(.L_800BAC48);
/*800BAC34 000B7A34*/ PPC::Runtime::ASM::bl(fn_80066E64);
/*800BAC38 000B7A38*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*800BAC3C 000B7A3C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800BAC40 000B7A40*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x71, context->r31));
/*800BAC44 000B7A44*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x72, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800BAC48, 0x800BAC48) //this is a jump label
/*800BAC48 000B7A48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800BAC4C 000B7A4C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800BAC50 000B7A50*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800BAC54 000B7A54*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800BAC58 000B7A58*/ PPC::Runtime::ASM::blr();
}