//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025E728(PPC::Runtime::GCContext* context)
{
/*8025E728 0025B528*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025E72C 0025B52C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025E730 0025B530*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E734 0025B534*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E738 0025B538*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E73C 0025B53C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025E740 0025B540*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025E744 0025B544*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E748 0025B548*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025E74C 0025B54C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E750 0025B550*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E754 0025B554*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025E758 0025B558*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E75C 0025B55C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E760 0025B560*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025E764 0025B564*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E768 0025B568*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025E76C 0025B56C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025E770 0025B570*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E774 0025B574*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025E778 0025B578*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025E77C 0025B57C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025E780 0025B580*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025E784 0025B584*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2F1C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E788 0025B588*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025E78C 0025B58C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025E790 0025B590*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2F18 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025E794 0025B594*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025E798 0025B598*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025E79C 0025B59C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025E7A0 0025B5A0*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025E7A4 0025B5A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025E7A8 0025B5A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025E7AC 0025B5AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025E7B0 0025B5B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025E7B4 0025B5B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025E7B8 0025B5B8*/ PPC::Runtime::ASM::blr();
}