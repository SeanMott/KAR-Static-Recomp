//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A8CD8(PPC::Runtime::GCContext* context)
{
/*802A8CD8 002A5AD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A8CDC 002A5ADC*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A8CE0 002A5AE0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A8CE4 002A5AE4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A8CE8 002A5AE8*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A8CEC 002A5AEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A8CF0 002A5AF0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A8CF4 002A5AF4*/ PPC::Runtime::ASM::beq(.L_802A8DF0);
/*802A8CF8 002A5AF8*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C1FE4 @ Get_MemoryOffset_HighBit);
/*802A8CFC 002A5AFC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10e8);
/*802A8D00 002A5B00*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C1FE4 @ Get_MemoryOffset_LowBit);
/*802A8D04 002A5B04*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D08 002A5B08*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A8D0C 002A5B0C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A8D10 002A5B10*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A8D14 002A5B14*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A8D18 002A5B18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A8D1C 002A5B1C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D20 002A5B20*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xfe4);
/*802A8D24 002A5B24*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D28 002A5B28*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D2C 002A5B2C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xee0);
/*802A8D30 002A5B30*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D34 002A5B34*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D38 002A5B38*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A8D3C 002A5B3C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D40 002A5B40*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D44 002A5B44*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A8D48 002A5B48*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D4C 002A5B4C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D50 002A5B50*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A8D54 002A5B54*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D58 002A5B58*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D5C 002A5B5C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A8D60 002A5B60*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D64 002A5B64*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D68 002A5B68*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A8D6C 002A5B6C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D70 002A5B70*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D74 002A5B74*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A8D78 002A5B78*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D7C 002A5B7C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D80 002A5B80*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A8D84 002A5B84*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D88 002A5B88*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D8C 002A5B8C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A8D90 002A5B90*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8D94 002A5B94*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8D98 002A5B98*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A8D9C 002A5B9C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8DA0 002A5BA0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8DA4 002A5BA4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A8DA8 002A5BA8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8DAC 002A5BAC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8DB0 002A5BB0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A8DB4 002A5BB4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8DB8 002A5BB8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8DBC 002A5BBC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A8DC0 002A5BC0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8DC4 002A5BC4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8DC8 002A5BC8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A8DCC 002A5BCC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A8DD0 002A5BD0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A8DD4 002A5BD4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A8DD8 002A5BD8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A8DDC 002A5BDC*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A8DE0 002A5BE0*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A8DE4 002A5BE4*/ PPC::Runtime::ASM::ble(.L_802A8DF0);
/*802A8DE8 002A5BE8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A8DEC 002A5BEC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A8DF0, 0x802A8DF0) //this is a jump label
/*802A8DF0 002A5BF0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A8DF4 002A5BF4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A8DF8 002A5BF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A8DFC 002A5BFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A8E00 002A5C00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A8E04 002A5C04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A8E08 002A5C08*/ PPC::Runtime::ASM::blr();
}