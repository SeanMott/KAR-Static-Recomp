//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801AF764.hpp"
#include "fn_801AF764.hpp"
#include "fn_801A8454.hpp"



void fn_801AF9A4(PPC::Runtime::GCContext* context)
{
/*801AF9A4 001AC7A4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801AF9A8 001AC7A8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801AF9AC 001AC7AC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AF9B0 001AC7B0*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x818, context->r3));
/* 801AF9B4 001AC7B4  54 80 D7 FF */ extrwi. context->r0 , context->r4 , 1 , 25
/*801AF9B8 001AC7B8*/ PPC::Runtime::ASM::beq(.L_801AF9D0);
/*801AF9BC 001AC7BC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801AF9C0 001AC7C0*/ PPC::Runtime::ASM::rlwimi(context->r4, context->r0, 6, 25, 25);
/*801AF9C4 001AC7C4*/ PPC::Runtime::ASM::stb(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x818, context->r3));
/*801AF9C8 001AC7C8*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801AF9CC 001AC7CC*/ PPC::Runtime::ASM::b(.L_801AF9D4);
RUNTIME_PPC_JUMP_LABEL(.L_801AF9D0, 0x801AF9D0) //this is a jump label
/*801AF9D0 001AC7D0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801AF9D4, 0x801AF9D4) //this is a jump label
/*801AF9D4 001AC7D4*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801AF9D8 001AC7D8*/ PPC::Runtime::ASM::beq(.L_801AFA04);
/*801AF9DC 001AC7DC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x390, context->r3));
/*801AF9E0 001AC7E0*/ PPC::Runtime::ASM::lis(context->r4, fn_801AF764 @ Get_MemoryOffset_HighBit);
/*801AF9E4 001AC7E4*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_801AF764 @ Get_MemoryOffset_LowBit);
/*801AF9E8 001AC7E8*/ PPC::Runtime::ASM::lhz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r6));
/*801AF9EC 001AC7EC*/ PPC::Runtime::ASM::extrwi(context->r4, context->r5, 8, 22);
/*801AF9F0 001AC7F0*/ PPC::Runtime::ASM::ori(context->r4, context->r4, 0x8);
/*801AF9F4 001AC7F4*/ PPC::Runtime::ASM::rlwimi(context->r5, context->r4, 2, 22, 29);
/*801AF9F8 001AC7F8*/ PPC::Runtime::ASM::sth(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x9c, context->r6));
/*801AF9FC 001AC7FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x934, context->r3));
/*801AFA00 001AC800*/ PPC::Runtime::ASM::bl(fn_801A8454);
RUNTIME_PPC_JUMP_LABEL(.L_801AFA04, 0x801AFA04) //this is a jump label
/*801AFA04 001AC804*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801AFA08 001AC808*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801AFA0C 001AC80C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801AFA10 001AC810*/ PPC::Runtime::ASM::blr();
}