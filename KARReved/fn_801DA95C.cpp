//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_801DA95C(PPC::Runtime::GCContext* context)
{
/*801DA95C 001D775C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801DA960 001D7760*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DA964 001D7764*/ PPC::Runtime::ASM::mr(context->r4, context->r3);
/*801DA968 001D7768*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DA96C 001D776C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7a8, context->r3));
/*801DA970 001D7770*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801DA974 001D7774*/ PPC::Runtime::ASM::beq(.L_801DA9B4);
/*801DA978 001D7778*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r4));
/*801DA97C 001D777C*/ PPC::Runtime::ASM::addi(context->r3, context->r4, 0x7ac);
/*801DA980 001D7780*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7ac, context->r4));
/*801DA984 001D7784*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801DA988 001D7788*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r4));
/*801DA98C 001D778C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r4));
/*801DA990 001D7790*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7b0, context->r4));
/*801DA994 001D7794*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801DA998 001D7798*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r4));
/*801DA99C 001D779C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r4));
/*801DA9A0 001D77A0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7b4, context->r4));
/*801DA9A4 001D77A4*/ PPC::Runtime::ASM::fadds(context->f0, context->f1, context->f0);
/*801DA9A8 001D77A8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r4));
/*801DA9AC 001D77AC*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801DA9B0 001D77B0*/ PPC::Runtime::ASM::b(.L_801DA9B8);
RUNTIME_PPC_JUMP_LABEL(.L_801DA9B4, 0x801DA9B4) //this is a jump label
/*801DA9B4 001D77B4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1BAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_801DA9B8, 0x801DA9B8) //this is a jump label
/*801DA9B8 001D77B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801DA9BC 001D77BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DA9C0 001D77C0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801DA9C4 001D77C4*/ PPC::Runtime::ASM::blr();
}