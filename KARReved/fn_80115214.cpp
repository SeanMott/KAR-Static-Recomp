//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_getPlayerCount.hpp"
#include "fn_getPlayerCount.hpp"



void fn_80115214(PPC::Runtime::GCContext* context)
{
/*80115214 00112014*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80115218 00112018*/ PPC::Runtime::ASM::mflr(context->r0);
/*8011521C 0011201C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80115220 00112020*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*80115224 00112024*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80115228 00112028*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*8011522C 0011202C*/ PPC::Runtime::ASM::bgt(.L_80115238);
/*80115230 00112030*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFB58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80115234 00112034*/ PPC::Runtime::ASM::b(.L_80115254);
RUNTIME_PPC_JUMP_LABEL(.L_80115238, 0x80115238) //this is a jump label
/*80115238 00112038*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*8011523C 0011203C*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*80115240 00112040*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80115244 00112044*/ PPC::Runtime::ASM::bne(.L_80115250);
/*80115248 00112048*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFB5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8011524C 0011204C*/ PPC::Runtime::ASM::b(.L_80115254);
RUNTIME_PPC_JUMP_LABEL(.L_80115250, 0x80115250) //this is a jump label
/*80115250 00112050*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DFB60 @ Get_MemoryOffset_SDA21 ( context->r0 ));
RUNTIME_PPC_JUMP_LABEL(.L_80115254, 0x80115254) //this is a jump label
/*80115254 00112054*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80115258 00112058*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8011525C 0011205C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80115260 00112060*/ PPC::Runtime::ASM::blr();
}