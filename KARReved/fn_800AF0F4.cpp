//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800AF0F4(PPC::Runtime::GCContext* context)
{
/*800AF0F4 000ABEF4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AF0F8 000ABEF8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AF0FC 000ABEFC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*800AF100 000ABF00*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800AF104 000ABF04*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF108 000ABF08*/ PPC::Runtime::ASM::bne(.L_800AF124);
/*800AF10C 000ABF0C*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AF110 000ABF10*/ PPC::Runtime::ASM::li(context->r0, 0x7f);
/*800AF114 000ABF14*/ PPC::Runtime::ASM::addi(context->r3, context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AF118 000ABF18*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*800AF11C 000ABF1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800AF120 000ABF20*/ PPC::Runtime::ASM::b(.L_800AF138);
RUNTIME_PPC_JUMP_LABEL(.L_800AF124, 0x800AF124) //this is a jump label
/*800AF124 000ABF24*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x2);
/*800AF128 000ABF28*/ PPC::Runtime::ASM::beq(.L_800AF134);
/*800AF12C 000ABF2C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x3);
/*800AF130 000ABF30*/ PPC::Runtime::ASM::bne(.L_800AF138);
RUNTIME_PPC_JUMP_LABEL(.L_800AF134, 0x800AF134) //this is a jump label
/*800AF134 000ABF34*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800AF138, 0x800AF138) //this is a jump label
/*800AF138 000ABF38*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800AF13C 000ABF3C*/ PPC::Runtime::ASM::beq(.L_800AF160);
/*800AF140 000ABF40*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_HighBit);
/*800AF144 000ABF44*/ PPC::Runtime::ASM::addi(context->r4, context->r3, STRUCT_BYTE4_COUNT_180557108 @ Get_MemoryOffset_LowBit);
/*800AF148 000ABF48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r4));
/*800AF14C 000ABF4C*/ PPC::Runtime::ASM::cmpwi(context->r3, -0x1);
/*800AF150 000ABF50*/ PPC::Runtime::ASM::beq(.L_800AF160);
/*800AF154 000ABF54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r4));
/*800AF158 000ABF58*/ PPC::Runtime::ASM::clrlwi(context->r4, context->r0, 24);
/*800AF15C 000ABF5C*/ PPC::Runtime::ASM::bl(fn_80442A54);
RUNTIME_PPC_JUMP_LABEL(.L_800AF160, 0x800AF160) //this is a jump label
/*800AF160 000ABF60*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AF164 000ABF64*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AF168 000ABF68*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AF16C 000ABF6C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AF170 000ABF70*/ PPC::Runtime::ASM::blr();
}