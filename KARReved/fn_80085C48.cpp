//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8007D4E8.hpp"
#include "fn_80085D0C.hpp"
#include "fn_80085D1C.hpp"
#include "fn_80084FA0.hpp"
#include "fn_80085674.hpp"
#include "fn_8008A1F8.hpp"
#include "fn_80084D0C.hpp"
#include "fn_80085D0C.hpp"
#include "fn_80086120.hpp"



void fn_80085C48(PPC::Runtime::GCContext* context)
{
/*80085C48 00082A48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80085C4C 00082A4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80085C50 00082A50*/ PPC::Runtime::ASM::lis(context->r4, lbl_80552FB0 @ Get_MemoryOffset_HighBit);
/*80085C54 00082A54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80085C58 00082A58*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80085C5C 00082A5C*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80552FB0 @ Get_MemoryOffset_LowBit);
/*80085C60 00082A60*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80085C64 00082A64*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80085C68 00082A68*/ PPC::Runtime::ASM::bl(fn_8007D4E8);
/*80085C6C 00082A6C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80085C70 00082A70*/ PPC::Runtime::ASM::beq(.L_80085CE4);
/*80085C74 00082A74*/ PPC::Runtime::ASM::bl(fn_80085D0C);
/*80085C78 00082A78*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80085C7C 00082A7C*/ PPC::Runtime::ASM::bne(.L_80085C88);
/*80085C80 00082A80*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80085C84 00082A84*/ PPC::Runtime::ASM::bl(fn_80085D1C);
RUNTIME_PPC_JUMP_LABEL(.L_80085C88, 0x80085C88) //this is a jump label
/*80085C88 00082A88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80085C8C 00082A8C*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80085C90 00082A90*/ PPC::Runtime::ASM::bne(.L_80085CF4);
/*80085C94 00082A94*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r31));
/* 80085C98 00082A98  54 00 C0 02 */ extlwi context->r0 , context->r0 , 2 , 24
/*80085C9C 00082A9C*/ PPC::Runtime::ASM::srawi(context->r0, context->r0, 31);
/*80085CA0 00082AA0*/ PPC::Runtime::ASM::extsb.(context->r0, context->r0);
/*80085CA4 00082AA4*/ PPC::Runtime::ASM::beq(.L_80085CB4);
/*80085CA8 00082AA8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80085CAC 00082AAC*/ PPC::Runtime::ASM::bl(fn_80084FA0);
/*80085CB0 00082AB0*/ PPC::Runtime::ASM::b(.L_80085CBC);
RUNTIME_PPC_JUMP_LABEL(.L_80085CB4, 0x80085CB4) //this is a jump label
/*80085CB4 00082AB4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80085CB8 00082AB8*/ PPC::Runtime::ASM::bl(fn_80085674);
RUNTIME_PPC_JUMP_LABEL(.L_80085CBC, 0x80085CBC) //this is a jump label
/*80085CBC 00082ABC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*80085CC0 00082AC0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1f4);
/*80085CC4 00082AC4*/ PPC::Runtime::ASM::bge(.L_80085CCC);
/*80085CC8 00082AC8*/ PPC::Runtime::ASM::bl(fn_8008A1F8);
RUNTIME_PPC_JUMP_LABEL(.L_80085CCC, 0x80085CCC) //this is a jump label
/*80085CCC 00082ACC*/ PPC::Runtime::ASM::bl(fn_80084D0C);
/*80085CD0 00082AD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*80085CD4 00082AD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*80085CD8 00082AD8*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r31));
/*80085CDC 00082ADC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*80085CE0 00082AE0*/ PPC::Runtime::ASM::b(.L_80085CF4);
RUNTIME_PPC_JUMP_LABEL(.L_80085CE4, 0x80085CE4) //this is a jump label
/*80085CE4 00082AE4*/ PPC::Runtime::ASM::bl(fn_80085D0C);
/*80085CE8 00082AE8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80085CEC 00082AEC*/ PPC::Runtime::ASM::beq(.L_80085CF4);
/*80085CF0 00082AF0*/ PPC::Runtime::ASM::bl(fn_80086120);
RUNTIME_PPC_JUMP_LABEL(.L_80085CF4, 0x80085CF4) //this is a jump label
/*80085CF4 00082AF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80085CF8 00082AF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80085CFC 00082AFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80085D00 00082B00*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80085D04 00082B04*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80085D08 00082B08*/ PPC::Runtime::ASM::blr();
}