//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_killWhispy.hpp"
#include "fn_killWhispy.hpp"



void fn_800FBC04(PPC::Runtime::GCContext* context)
{
/*800FBC04 000F8A04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800FBC08 000F8A08*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FBC0C 000F8A0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FBC10 000F8A10*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FBC14 000F8A14*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FBC18 000F8A18*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FBC1C 000F8A1C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FBC20 000F8A20*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FBC24 000F8A24*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FBC28 000F8A28*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r5));
/*800FBC2C 000F8A2C*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800FBC30 000F8A30*/ PPC::Runtime::ASM::ble(.L_800FBD2C);
/*800FBC34 000F8A34*/ PPC::Runtime::ASM::subi(context->r0, context->r4, 0x1);
/*800FBC38 000F8A38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r5));
/*800FBC3C 000F8A3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r5));
/*800FBC40 000F8A40*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800FBC44 000F8A44*/ PPC::Runtime::ASM::bgt(.L_800FBD2C);
/*800FBC48 000F8A48*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FBC4C 000F8A4C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBC50 000F8A50*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*800FBC54 000F8A54*/ PPC::Runtime::ASM::lfd(context->f2, STRUCT_DOUBLE_COUNT_1805DF8F0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBC58 000F8A58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*800FBC5C 000F8A5C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x104, context->r3));
/*800FBC60 000F8A60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800FBC64 000F8A64*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800FBC68 000F8A68*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*800FBC6C 000F8A6C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800FBC70 000F8A70*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8E0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBC74 000F8A74*/ PPC::Runtime::ASM::fabs(context->f3, context->f0);
/*800FBC78 000F8A78*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800FBC7C 000F8A7C*/ PPC::Runtime::ASM::lwzx(context->r29, context->r4, context->r0);
/*800FBC80 000F8A80*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*800FBC84 000F8A84*/ PPC::Runtime::ASM::fmul(context->f31, context->f2, context->f3);
/*800FBC88 000F8A88*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800FBC8C 000F8A8C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*800FBC90 000F8A90*/ PPC::Runtime::ASM::frsp(context->f31, context->f31);
/*800FBC94 000F8A94*/ PPC::Runtime::ASM::bne(.L_800FBCA8);
/*800FBC98 000F8A98*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6238 @ Get_MemoryOffset_SDA21);
/*800FBC9C 000F8A9C*/ PPC::Runtime::ASM::li(context->r4, 0x2ec);
/*800FBCA0 000F8AA0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6240 @ Get_MemoryOffset_SDA21);
/*800FBCA4 000F8AA4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800FBCA8, 0x800FBCA8) //this is a jump label
/*800FBCA8 000F8AA8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r30));
/*800FBCAC 000F8AAC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r29));
/*800FBCB0 000F8AB0*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805DF8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBCB4 000F8AB4*/ PPC::Runtime::ASM::fsubs(context->f1, context->f2, context->f1);
/*800FBCB8 000F8AB8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800FBCBC 000F8ABC*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*800FBCC0 000F8AC0*/ PPC::Runtime::ASM::bne(.L_800FBCC8);
/*800FBCC4 000F8AC4*/ PPC::Runtime::ASM::b(.L_800FBCCC);
RUNTIME_PPC_JUMP_LABEL(.L_800FBCC8, 0x800FBCC8) //this is a jump label
/*800FBCC8 000F8AC8*/ PPC::Runtime::ASM::fneg(context->f31, context->f31);
RUNTIME_PPC_JUMP_LABEL(.L_800FBCCC, 0x800FBCCC) //this is a jump label
/*800FBCCC 000F8ACC*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r30));
/*800FBCD0 000F8AD0*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*800FBCD4 000F8AD4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x140, context->r30));
/*800FBCD8 000F8AD8*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800FBCDC 000F8ADC*/ PPC::Runtime::ASM::cmpwi(context->r5, -0x1);
/*800FBCE0 000F8AE0*/ PPC::Runtime::ASM::beq(.L_800FBD08);
/*800FBCE4 000F8AE4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBCE8 000F8AE8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800FBCEC 000F8AEC*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FBCF0 000F8AF0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*800FBCF4 000F8AF4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FBCF8 000F8AF8*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF8E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBCFC 000F8AFC*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800FBD00 000F8B00*/ PPC::Runtime::ASM::bl(fn_killWhispy);
/*800FBD04 000F8B04*/ PPC::Runtime::ASM::b(.L_800FBD2C);
RUNTIME_PPC_JUMP_LABEL(.L_800FBD08, 0x800FBD08) //this is a jump label
/*800FBD08 000F8B08*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF8E4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBD0C 000F8B0C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800FBD10 000F8B10*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800FBD14 000F8B14*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*800FBD18 000F8B18*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*800FBD1C 000F8B1C*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FBD20 000F8B20*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF8E8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800FBD24 000F8B24*/ PPC::Runtime::ASM::li(context->r7, 0x4);
/*800FBD28 000F8B28*/ PPC::Runtime::ASM::bl(fn_killWhispy);
RUNTIME_PPC_JUMP_LABEL(.L_800FBD2C, 0x800FBD2C) //this is a jump label
/*800FBD2C 000F8B2C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*800FBD30 000F8B30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FBD34 000F8B34*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*800FBD38 000F8B38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800FBD3C 000F8B3C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800FBD40 000F8B40*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800FBD44 000F8B44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FBD48 000F8B48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800FBD4C 000F8B4C*/ PPC::Runtime::ASM::blr();
}