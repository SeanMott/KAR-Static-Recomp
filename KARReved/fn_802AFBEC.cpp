//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8033AB00.hpp"
#include "fn_8033AB6C.hpp"



void fn_802AFBEC(PPC::Runtime::GCContext* context)
{
/*802AFBEC 002AC9EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802AFBF0 002AC9F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802AFBF4 002AC9F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AFBF8 002AC9F8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*802AFBFC 002AC9FC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*802AFC00 002ACA00*/ PPC::Runtime::ASM::beq(.L_802AFC34);
/*802AFC04 002ACA04*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*802AFC08 002ACA08*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802AFC0C 002ACA0C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D800C @ Get_MemoryOffset_SDA21);
/*802AFC10 002ACA10*/ PPC::Runtime::ASM::li(context->r6, lbl_805D7F20 @ Get_MemoryOffset_SDA21);
/*802AFC14 002ACA14*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*802AFC18 002ACA18*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*802AFC1C 002ACA1C*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802AFC20 002ACA20*/ PPC::Runtime::ASM::bl(fn_8039A7BC);
/* 802AFC24 002ACA24  54 60 06 3F */ clrlwi. context->r0 , context->r3 , 24
/*802AFC28 002ACA28*/ PPC::Runtime::ASM::beq(.L_802AFC34);
/*802AFC2C 002ACA2C*/ PPC::Runtime::ASM::bl(fn_8033AB00);
/*802AFC30 002ACA30*/ PPC::Runtime::ASM::bl(fn_8033AB6C);
RUNTIME_PPC_JUMP_LABEL(.L_802AFC34, 0x802AFC34) //this is a jump label
/*802AFC34 002ACA34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802AFC38 002ACA38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802AFC3C 002ACA3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802AFC40 002ACA40*/ PPC::Runtime::ASM::blr();
}