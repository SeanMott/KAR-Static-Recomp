//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80078CF0.hpp"



void fn_80075CD8(PPC::Runtime::GCContext* context)
{
/*80075CD8 00072AD8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80075CDC 00072ADC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80075CE0 00072AE0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x4);
/*80075CE4 00072AE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80075CE8 00072AE8*/ PPC::Runtime::ASM::bne(.L_80075CF4);
/*80075CEC 00072AEC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80075CF0 00072AF0*/ PPC::Runtime::ASM::b(.L_80075D34);
RUNTIME_PPC_JUMP_LABEL(.L_80075CF4, 0x80075CF4) //this is a jump label
/*80075CF4 00072AF4*/ PPC::Runtime::ASM::bl(fn_80078CF0);
/*80075CF8 00072AF8*/ PPC::Runtime::ASM::bl(fn_80414058);
/*80075CFC 00072AFC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80075D00 00072B00*/ PPC::Runtime::ASM::bl(fn_VISetPreRetraceCallback);
/*80075D04 00072B04*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80075D08 00072B08*/ PPC::Runtime::ASM::bl(fn_VISetPostRetraceCallback);
/*80075D0C 00072B0C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80075D10 00072B10*/ PPC::Runtime::ASM::bl(fn_VISetBlack);
/*80075D14 00072B14*/ PPC::Runtime::ASM::bl(fn_VIFlush);
/*80075D18 00072B18*/ PPC::Runtime::ASM::bl(fn_VIWaitForRetrace);
/*80075D1C 00072B1C*/ PPC::Runtime::ASM::bl(fn_VIWaitForRetrace);
/*80075D20 00072B20*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80075D24 00072B24*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80075D28 00072B28*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80075D2C 00072B2C*/ PPC::Runtime::ASM::bl(OSResetSystem);
/*80075D30 00072B30*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80075D34, 0x80075D34) //this is a jump label
/*80075D34 00072B34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80075D38 00072B38*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80075D3C 00072B3C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80075D40 00072B40*/ PPC::Runtime::ASM::blr();
}