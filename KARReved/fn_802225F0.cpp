//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_802225F0(PPC::Runtime::GCContext* context)
{
/*802225F0 0021F3F0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802225F4 0021F3F4*/ PPC::Runtime::ASM::mflr(context->r0);
/*802225F8 0021F3F8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802225FC 0021F3FC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80222600 0021F400*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80222604 0021F404*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x174, context->r3));
/*80222608 0021F408*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*8022260C 0021F40C*/ PPC::Runtime::ASM::beq(.L_80222618);
/*80222610 0021F410*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80222614 0021F414*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_80222618, 0x80222618) //this is a jump label
/*80222618 0021F418*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4, context->r31));
/*8022261C 0021F41C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80222620 0021F420*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 6, 25, 25);
/*80222624 0021F424*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b4, context->r31));
/*80222628 0021F428*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022262C 0021F42C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80222630 0021F430*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80222634 0021F434*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80222638 0021F438*/ PPC::Runtime::ASM::blr();
}