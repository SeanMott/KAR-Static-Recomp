//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80250340.hpp"
#include "fn_8024F488.hpp"



void fn_8025B498(PPC::Runtime::GCContext* context)
{
/*8025B498 00258298*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025B49C 0025829C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025B4A0 002582A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B4A4 002582A4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B4A8 002582A8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8025B4AC 002582AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025B4B0 002582B0*/ PPC::Runtime::ASM::bl(fn_80250340);
/*8025B4B4 002582B4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E88 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B4B8 002582B8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025B4BC 002582BC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E8C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025B4C0 002582C0*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8025B4C4 002582C4*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025B4C8 002582C8*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025B4CC 002582CC*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025B4D0 002582D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025B4D4 002582D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025B4D8 002582D8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025B4DC 002582DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025B4E0 002582E0*/ PPC::Runtime::ASM::blr();
}