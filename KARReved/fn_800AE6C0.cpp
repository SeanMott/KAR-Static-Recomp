//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800ABA6C.hpp"
#include "fn_playSoundFX_menuSound.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800AD5BC.hpp"
#include "fn_800ABA74.hpp"



void fn_800AE6C0(PPC::Runtime::GCContext* context)
{
/*800AE6C0 000AB4C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800AE6C4 000AB4C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800AE6C8 000AB4C8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x1);
/*800AE6CC 000AB4CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE6D0 000AB4D0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE6D4 000AB4D4*/ PPC::Runtime::ASM::bne(.L_800AE70C);
/*800AE6D8 000AB4D8*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE6DC 000AB4DC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800AE6E0 000AB4E0*/ PPC::Runtime::ASM::bl(fn_playSoundFX_menuSound);
/*800AE6E4 000AB4E4*/ PPC::Runtime::ASM::lis(context->r4, StructWithStructs_62 @ Get_MemoryOffset_HighBit);
/*800AE6E8 000AB4E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800AE6EC 000AB4EC*/ PPC::Runtime::ASM::addi(context->r4, context->r4, StructWithStructs_62 @ Get_MemoryOffset_LowBit);
/*800AE6F0 000AB4F0*/ PPC::Runtime::ASM::li(context->r5, -0x3c);
/*800AE6F4 000AB4F4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800AE6F8 000AB4F8*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*800AE6FC 000AB4FC*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*800AE700 000AB500*/ PPC::Runtime::ASM::lis(context->r4, fn_800AD5BC @ Get_MemoryOffset_HighBit);
/*800AE704 000AB504*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800AD5BC @ Get_MemoryOffset_LowBit);
/*800AE708 000AB508*/ PPC::Runtime::ASM::bl(fn_800ABA74);
RUNTIME_PPC_JUMP_LABEL(.L_800AE70C, 0x800AE70C) //this is a jump label
/*800AE70C 000AB50C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800AE710 000AB510*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800AE714 000AB514*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800AE718 000AB518*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800AE71C 000AB51C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800AE720 000AB520*/ PPC::Runtime::ASM::blr();
}