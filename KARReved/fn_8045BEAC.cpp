//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_OSCreateThread.hpp"
#include "OSReport.hpp"
#include "fn_OSResumeThread.hpp"
#include "OSCreateAlarm.hpp"
#include "fn_8045BE68.hpp"
#include "fn_8045BE68.hpp"
#include "fn_OSSetPeriodicAlarm.hpp"



void fn_8045BEAC(PPC::Runtime::GCContext* context)
{
/*8045BEAC 00458CAC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8045BEB0 00458CB0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8045BEB4 00458CB4*/ PPC::Runtime::ASM::lis(context->r4, lbl_805B4698 @ Get_MemoryOffset_HighBit);
/*8045BEB8 00458CB8*/ PPC::Runtime::ASM::mr(context->r5, context->r3);
/*8045BEBC 00458CBC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045BEC0 00458CC0*/ PPC::Runtime::ASM::addi(context->r3, context->r4, lbl_805B4698 @ Get_MemoryOffset_LowBit);
/*8045BEC4 00458CC4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8045BEC8 00458CC8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8045BECC 00458CCC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8045BED0 00458CD0*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x31c, context->r3));
/*8045BED4 00458CD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x318, context->r3));
/*8045BED8 00458CD8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r3));
/*8045BEDC 00458CDC*/ PPC::Runtime::ASM::lwz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r3));
/*8045BEE0 00458CE0*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r7);
/*8045BEE4 00458CE4*/ PPC::Runtime::ASM::lhz(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r3));
/*8045BEE8 00458CE8*/ PPC::Runtime::ASM::bl(fn_OSCreateThread);
/*8045BEEC 00458CEC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8045BEF0 00458CF0*/ PPC::Runtime::ASM::bne(.L_8045BEFC);
/*8045BEF4 00458CF4*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/*8045BEF8 00458CF8*/ PPC::Runtime::ASM::b(.L_8045BF6C);
RUNTIME_PPC_JUMP_LABEL(.L_8045BEFC, 0x8045BEFC) //this is a jump label
/*8045BEFC 00458CFC*/ PPC::Runtime::ASM::lis(context->r3, String_ "thread_start_pr" Get_MemoryOffset_HighBit);
/*8045BF00 00458D00*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x320, context->r30));
/*8045BF04 00458D04*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "thread_start_pr" Get_MemoryOffset_LowBit);
/*8045BF08 00458D08*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8045BF0C 00458D0C*/ PPC::Runtime::ASM::bl(OSReport);
/*8045BF10 00458D10*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8045BF14 00458D14*/ PPC::Runtime::ASM::bl(fn_OSResumeThread);
/*8045BF18 00458D18*/ PPC::Runtime::ASM::lis(context->r4, lbl_805B4698 @ Get_MemoryOffset_HighBit);
/*8045BF1C 00458D1C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8045BF20 00458D20*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_805B4698 @ Get_MemoryOffset_LowBit);
/*8045BF24 00458D24*/ PPC::Runtime::ASM::addi(context->r31, context->r4, 0x330);
/*8045BF28 00458D28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8045BF2C 00458D2C*/ PPC::Runtime::ASM::bl(OSCreateAlarm);
/*8045BF30 00458D30*/ PPC::Runtime::ASM::lis(context->r3, 0xa);
/*8045BF34 00458D34*/ PPC::Runtime::ASM::lis(context->r4, lbl_805B4698 @ Get_MemoryOffset_HighBit);
/*8045BF38 00458D38*/ PPC::Runtime::ASM::addi(context->r6, context->r3, 0x4cb8);
/*8045BF3C 00458D3C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8045BF40 00458D40*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_805B4698 @ Get_MemoryOffset_LowBit);
/*8045BF44 00458D44*/ PPC::Runtime::ASM::lis(context->r3, fn_8045BE68 @ Get_MemoryOffset_HighBit);
/*8045BF48 00458D48*/ PPC::Runtime::ASM::addi(context->r9, context->r3, fn_8045BE68 @ Get_MemoryOffset_LowBit);
/*8045BF4C 00458D4C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35c, context->r4));
/*8045BF50 00458D50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8045BF54 00458D54*/ PPC::Runtime::ASM::mr(context->r8, context->r6);
/*8045BF58 00458D58*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r4));
/*8045BF5C 00458D5C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8045BF60 00458D60*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*8045BF64 00458D64*/ PPC::Runtime::ASM::bl(fn_OSSetPeriodicAlarm);
/*8045BF68 00458D68*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
RUNTIME_PPC_JUMP_LABEL(.L_8045BF6C, 0x8045BF6C) //this is a jump label
/*8045BF6C 00458D6C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8045BF70 00458D70*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8045BF74 00458D74*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8045BF78 00458D78*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8045BF7C 00458D7C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8045BF80 00458D80*/ PPC::Runtime::ASM::blr();
}