//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000A200(PPC::Runtime::GCContext* context)
{
/*8000A200 00007000*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000A204 00007004*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000A208 00007008*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A20C 0000700C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000A210 00007010*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa5, context->r3));
/*8000A214 00007014*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r0, 31);
/*8000A218 00007018*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000A21C 0000701C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000A220 00007020*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000A224 00007024*/ PPC::Runtime::ASM::blr();
}