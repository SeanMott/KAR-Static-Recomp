//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801FED40.hpp"
#include "fn_801FC398.hpp"



void fn_80211F14(PPC::Runtime::GCContext* context)
{
/*80211F14 0020ED14*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80211F18 0020ED18*/ PPC::Runtime::ASM::mflr(context->r0);
/*80211F1C 0020ED1C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80211F20 0020ED20*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80211F24 0020ED24*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80211F28 0020ED28*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80211F2C 0020ED2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x908, context->r3));
/*80211F30 0020ED30*/ PPC::Runtime::ASM::bl(fn_801FED40);
/*80211F34 0020ED34*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2550 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80211F38 0020ED38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80211F3C 0020ED3C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2554 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80211F40 0020ED40*/ PPC::Runtime::ASM::li(context->r4, 0xe);
/*80211F44 0020ED44*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*80211F48 0020ED48*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80211F4C 0020ED4C*/ PPC::Runtime::ASM::bl(fn_801FC398);
/*80211F50 0020ED50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80211F54 0020ED54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80211F58 0020ED58*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80211F5C 0020ED5C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80211F60 0020ED60*/ PPC::Runtime::ASM::blr();
}