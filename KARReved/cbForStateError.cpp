//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_stateTimeout.hpp"
#include "fn___DVDPrintFatalMessage.hpp"
#include "stateReady.hpp"



void cbForStateError(PPC::Runtime::GCContext* context)
{
/*803C5968 003C2768*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C596C 003C276C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x10);
/*803C5970 003C2770*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C5974 003C2774*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803C5978 003C2778*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C597C 003C277C*/ PPC::Runtime::ASM::bne(.L_803C5994);
/*803C5980 003C2780*/ PPC::Runtime::ASM::lwz(context->r3, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C5984 003C2784*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*803C5988 003C2788*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*803C598C 003C278C*/ PPC::Runtime::ASM::bl(fn_stateTimeout);
/*803C5990 003C2790*/ PPC::Runtime::ASM::b(.L_803C5A00);
RUNTIME_PPC_JUMP_LABEL(.L_803C5994, 0x803C5994) //this is a jump label
/*803C5994 003C2794*/ PPC::Runtime::ASM::bl(fn___DVDPrintFatalMessage);
/*803C5998 003C2798*/ PPC::Runtime::ASM::lis(context->r3, DummyCommandBlock_8056CC60 @ Get_MemoryOffset_HighBit);
/*803C599C 003C279C*/ PPC::Runtime::ASM::lwz(context->r31, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C59A0 003C27A0*/ PPC::Runtime::ASM::addi(context->r0, context->r3, DummyCommandBlock_8056CC60 @ Get_MemoryOffset_LowBit);
/*803C59A4 003C27A4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803C59A8 003C27A8*/ PPC::Runtime::ASM::stw(context->r0, executing_805DDDA8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C59AC 003C27AC*/ PPC::Runtime::ASM::stw(context->r3, FatalErrorFlag_805DDDC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C59B0 003C27B0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*803C59B4 003C27B4*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*803C59B8 003C27B8*/ PPC::Runtime::ASM::beq(.L_803C59CC);
/*803C59BC 003C27BC*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803C59C0 003C27C0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803C59C4 003C27C4*/ PPC::Runtime::ASM::li(context->r3, -0x1);
/* 803C59C8 003C27C8  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803C59CC, 0x803C59CC) //this is a jump label
/*803C59CC 003C27CC*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDDC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C59D0 003C27D0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803C59D4 003C27D4*/ PPC::Runtime::ASM::beq(.L_803C59FC);
/*803C59D8 003C27D8*/ PPC::Runtime::ASM::lwz(context->r12, STRUCT_BYTE4_COUNT_1805DDDCC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C59DC 003C27DC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C59E0 003C27E0*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDDC8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C59E4 003C27E4*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*803C59E8 003C27E8*/ PPC::Runtime::ASM::beq(.L_803C59FC);
/*803C59EC 003C27EC*/ PPC::Runtime::ASM::mtlr(context->r12);
/*803C59F0 003C27F0*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x0);
/*803C59F4 003C27F4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/* 803C59F8 003C27F8  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_803C59FC, 0x803C59FC) //this is a jump label
/*803C59FC 003C27FC*/ PPC::Runtime::ASM::bl(stateReady);
RUNTIME_PPC_JUMP_LABEL(.L_803C5A00, 0x803C5A00) //this is a jump label
/*803C5A00 003C2800*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C5A04 003C2804*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C5A08 003C2808*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803C5A0C 003C280C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C5A10 003C2810*/ PPC::Runtime::ASM::blr();
}