//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138B10.hpp"
#include "fn_800550F4.hpp"



void fn_80150AC0(PPC::Runtime::GCContext* context)
{
/*80150AC0 0014D8C0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80150AC4 0014D8C4*/ PPC::Runtime::ASM::mflr(context->r0);
/*80150AC8 0014D8C8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80150ACC 0014D8CC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80150AD0 0014D8D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80150AD4 0014D8D4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80150AD8 0014D8D8*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80150ADC 0014D8DC*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80150AE0 0014D8E0*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*80150AE4 0014D8E4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80150AE8 0014D8E8*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80150AEC 0014D8EC*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x4dc);
/*80150AF0 0014D8F0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80150AF4 0014D8F4*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*80150AF8 0014D8F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*80150AFC 0014D8FC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80150B00 0014D900*/ PPC::Runtime::ASM::beq(.L_80150B80);
/*80150B04 0014D904*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80150B08 0014D908*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*80150B0C 0014D90C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80150B10 0014D910*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*80150B14 0014D914*/ PPC::Runtime::ASM::stb(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x16, context->r29));
/*80150B18 0014D918*/ PPC::Runtime::ASM::lbz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x17, context->r29));
/*80150B1C 0014D91C*/ PPC::Runtime::ASM::blt(.L_80150B3C);
/*80150B20 0014D920*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80150B24 0014D924*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*80150B28 0014D928*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
/*80150B2C 0014D92C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*80150B30 0014D930*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*80150B34 0014D934*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetFlagsAll?);
/*80150B38 0014D938*/ PPC::Runtime::ASM::b(.L_80150B54);
RUNTIME_PPC_JUMP_LABEL(.L_80150B3C, 0x80150B3C) //this is a jump label
/*80150B3C 0014D93C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*80150B40 0014D940*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*80150B44 0014D944*/ PPC::Runtime::ASM::bl(fn_HSD_JObjSetFlagsAll?);
/*80150B48 0014D948*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*80150B4C 0014D94C*/ PPC::Runtime::ASM::li(context->r4, 0x10);
/*80150B50 0014D950*/ PPC::Runtime::ASM::bl(fn_removeBigStarModel);
RUNTIME_PPC_JUMP_LABEL(.L_80150B54, 0x80150B54) //this is a jump label
/*80150B54 0014D954*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80150B58 0014D958*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80150B5C 0014D95C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E06CC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80150B60 0014D960*/ PPC::Runtime::ASM::extsb(context->r4, context->r28);
/*80150B64 0014D964*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*80150B68 0014D968*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E06C4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80150B6C 0014D96C*/ PPC::Runtime::ASM::bl(fn_80138B10);
/*80150B70 0014D970*/ PPC::Runtime::ASM::lis(context->r4, 0x1);
/*80150B74 0014D974*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80150B78 0014D978*/ PPC::Runtime::ASM::subi(context->r4, context->r4, 0x1);
/*80150B7C 0014D97C*/ PPC::Runtime::ASM::bl(fn_800550F4);
RUNTIME_PPC_JUMP_LABEL(.L_80150B80, 0x80150B80) //this is a jump label
/*80150B80 0014D980*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80150B84 0014D984*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80150B88 0014D988*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80150B8C 0014D98C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80150B90 0014D990*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80150B94 0014D994*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80150B98 0014D998*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80150B9C 0014D99C*/ PPC::Runtime::ASM::blr();
}