//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn___GXSetMatrixIndex(PPC::Runtime::GCContext* context)
{
/*803D0B20 003CD920*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x5);
/*803D0B24 003CD924*/ PPC::Runtime::ASM::bge(.L_803D0B60);
/*803D0B28 003CD928*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*803D0B2C 003CD92C*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D0B30 003CD930*/ PPC::Runtime::ASM::lis(context->r5, 0xcc01);
/*803D0B34 003CD934*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B38 003CD938*/ PPC::Runtime::ASM::li(context->r0, 0x30);
/*803D0B3C 003CD93C*/ PPC::Runtime::ASM::li(context->r3, 0x10);
/*803D0B40 003CD940*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B44 003CD944*/ PPC::Runtime::ASM::li(context->r0, 0x1018);
/*803D0B48 003CD948*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r4));
/*803D0B4C 003CD94C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B50 003CD950*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B54 003CD954*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B58 003CD958*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B5C 003CD95C*/ PPC::Runtime::ASM::b(.L_803D0B94);
RUNTIME_PPC_JUMP_LABEL(.L_803D0B60, 0x803D0B60) //this is a jump label
/*803D0B60 003CD960*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*803D0B64 003CD964*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D0B68 003CD968*/ PPC::Runtime::ASM::lis(context->r5, 0xcc01);
/*803D0B6C 003CD96C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B70 003CD970*/ PPC::Runtime::ASM::li(context->r0, 0x40);
/*803D0B74 003CD974*/ PPC::Runtime::ASM::li(context->r3, 0x10);
/*803D0B78 003CD978*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B7C 003CD97C*/ PPC::Runtime::ASM::li(context->r0, 0x1019);
/*803D0B80 003CD980*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x84, context->r4));
/*803D0B84 003CD984*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B88 003CD988*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B8C 003CD98C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803D0B90 003CD990*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
RUNTIME_PPC_JUMP_LABEL(.L_803D0B94, 0x803D0B94) //this is a jump label
/*803D0B94 003CD994*/ PPC::Runtime::ASM::lwz(context->r3, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803D0B98 003CD998*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803D0B9C 003CD99C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803D0BA0 003CD9A0*/ PPC::Runtime::ASM::blr();
}