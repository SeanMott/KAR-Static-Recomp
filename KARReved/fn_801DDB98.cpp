//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E0C50.hpp"



void fn_801DDB98(PPC::Runtime::GCContext* context)
{
/*801DDB98 001DA998*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801DDB9C 001DA99C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801DDBA0 001DA9A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801DDBA4 001DA9A4*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801DDBA8 001DA9A8*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801DDBAC 001DA9AC*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DDBB0 001DA9B0*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*801DDBB4 001DA9B4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DDBB8 001DA9B8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801DDBBC 001DA9BC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801DDBC0 001DA9C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x820, context->r3));
/*801DDBC4 001DA9C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*801DDBC8 001DA9C8*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801DDBCC 001DA9CC*/ PPC::Runtime::ASM::bne(.L_801DDBE0);
/*801DDBD0 001DA9D0*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7030 @ Get_MemoryOffset_SDA21);
/*801DDBD4 001DA9D4*/ PPC::Runtime::ASM::li(context->r4, 0x2ec);
/*801DDBD8 001DA9D8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7038 @ Get_MemoryOffset_SDA21);
/*801DDBDC 001DA9DC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DDBE0, 0x801DDBE0) //this is a jump label
/*801DDBE0 001DA9E0*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*801DDBE4 001DA9E4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801DDBE8 001DA9E8*/ PPC::Runtime::ASM::bl(fn_801E0C50);
/*801DDBEC 001DA9EC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD848 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DDBF0 001DA9F0*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805E1C58 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DDBF4 001DA9F4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x118, context->r3));
/*801DDBF8 001DA9F8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1C5C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801DDBFC 001DA9FC*/ PPC::Runtime::ASM::fmuls(context->f2, context->f3, context->f2);
/*801DDC00 001DAA00*/ PPC::Runtime::ASM::fmsubs(context->f30, context->f2, context->f1, context->f31);
/*801DDC04 001DAA04*/ PPC::Runtime::ASM::fcmpu(cr0, context->f30, context->f0);
/*801DDC08 001DAA08*/ PPC::Runtime::ASM::beq(.L_801DDCC8);
/*801DDC0C 001DAA0C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r3));
/*801DDC10 001DAA10*/ PPC::Runtime::ASM::fmuls(context->f0, context->f3, context->f0);
/*801DDC14 001DAA14*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f0);
/*801DDC18 001DAA18*/ PPC::Runtime::ASM::ble(.L_801DDC24);
/*801DDC1C 001DAA1C*/ PPC::Runtime::ASM::fmr(context->f30, context->f0);
/*801DDC20 001DAA20*/ PPC::Runtime::ASM::b(.L_801DDC34);
RUNTIME_PPC_JUMP_LABEL(.L_801DDC24, 0x801DDC24) //this is a jump label
/*801DDC24 001DAA24*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801DDC28 001DAA28*/ PPC::Runtime::ASM::fcmpo(cr0, context->f30, context->f0);
/*801DDC2C 001DAA2C*/ PPC::Runtime::ASM::bge(.L_801DDC34);
/*801DDC30 001DAA30*/ PPC::Runtime::ASM::fmr(context->f30, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_801DDC34, 0x801DDC34) //this is a jump label
/*801DDC34 001DAA34*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801DDC38 001DAA38*/ PPC::Runtime::ASM::bne(.L_801DDC4C);
/*801DDC3C 001DAA3C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7030 @ Get_MemoryOffset_SDA21);
/*801DDC40 001DAA40*/ PPC::Runtime::ASM::li(context->r4, 0x2a4);
/*801DDC44 001DAA44*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7038 @ Get_MemoryOffset_SDA21);
/*801DDC48 001DAA48*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DDC4C, 0x801DDC4C) //this is a jump label
/*801DDC4C 001DAA4C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801DDC50 001DAA50*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 14, 14);
/*801DDC54 001DAA54*/ PPC::Runtime::ASM::beq(.L_801DDC6C);
/*801DDC58 001DAA58*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B0DE8 @ Get_MemoryOffset_HighBit);
/*801DDC5C 001DAA5C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7030 @ Get_MemoryOffset_SDA21);
/*801DDC60 001DAA60*/ PPC::Runtime::ASM::addi(context->r5, context->r4, lbl_804B0DE8 @ Get_MemoryOffset_LowBit);
/*801DDC64 001DAA64*/ PPC::Runtime::ASM::li(context->r4, 0x2a5);
/*801DDC68 001DAA68*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DDC6C, 0x801DDC6C) //this is a jump label
/*801DDC6C 001DAA6C*/ PPC::Runtime::ASM::fadds(context->f0, context->f31, context->f30);
/*801DDC70 001DAA70*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r31));
/*801DDC74 001DAA74*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801DDC78 001DAA78*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*801DDC7C 001DAA7C*/ PPC::Runtime::ASM::bne(.L_801DDCC8);
/*801DDC80 001DAA80*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*801DDC84 001DAA84*/ PPC::Runtime::ASM::beq(.L_801DDCC8);
/*801DDC88 001DAA88*/ PPC::Runtime::ASM::bne(.L_801DDC9C);
/*801DDC8C 001DAA8C*/ PPC::Runtime::ASM::li(context->r3, lbl_805D7030 @ Get_MemoryOffset_SDA21);
/*801DDC90 001DAA90*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*801DDC94 001DAA94*/ PPC::Runtime::ASM::li(context->r5, lbl_805D7038 @ Get_MemoryOffset_SDA21);
/*801DDC98 001DAA98*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801DDC9C, 0x801DDC9C) //this is a jump label
/*801DDC9C 001DAA9C*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*801DDCA0 001DAAA0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801DDCA4 001DAAA4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*801DDCA8 001DAAA8*/ PPC::Runtime::ASM::bne(.L_801DDCB8);
/*801DDCAC 001DAAAC*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*801DDCB0 001DAAB0*/ PPC::Runtime::ASM::beq(.L_801DDCB8);
/*801DDCB4 001DAAB4*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_801DDCB8, 0x801DDCB8) //this is a jump label
/*801DDCB8 001DAAB8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801DDCBC 001DAABC*/ PPC::Runtime::ASM::bne(.L_801DDCC8);
/*801DDCC0 001DAAC0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801DDCC4 001DAAC4*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_801DDCC8, 0x801DDCC8) //this is a jump label
/*801DDCC8 001DAAC8*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*801DDCCC 001DAACC*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801DDCD0 001DAAD0*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*801DDCD4 001DAAD4*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801DDCD8 001DAAD8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801DDCDC 001DAADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801DDCE0 001DAAE0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801DDCE4 001DAAE4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801DDCE8 001DAAE8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801DDCEC 001DAAEC*/ PPC::Runtime::ASM::blr();
}