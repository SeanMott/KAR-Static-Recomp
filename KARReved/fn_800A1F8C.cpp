//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A16A8.hpp"
#include "fn_800A16A8.hpp"



void fn_800A1F8C(PPC::Runtime::GCContext* context)
{
/*800A1F8C 0009ED8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800A1F90 0009ED90*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A1F94 0009ED94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A1F98 0009ED98*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800A1F9C 0009ED9C*/ PPC::Runtime::ASM::bl(_savegpr_24);
/*800A1FA0 0009EDA0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800A1FA4 0009EDA4*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_640 @ Get_MemoryOffset_HighBit);
/*800A1FA8 0009EDA8*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800A1FAC 0009EDAC*/ PPC::Runtime::ASM::lwz(context->r26, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r29));
/*800A1FB0 0009EDB0*/ PPC::Runtime::ASM::addi(context->r30, context->r3, MemoryOffset_640 @ Get_MemoryOffset_LowBit);
/*800A1FB4 0009EDB4*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x0);
/*800A1FB8 0009EDB8*/ PPC::Runtime::ASM::beq(.L_800A2108);
/*800A1FBC 0009EDBC*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A1FC0 0009EDC0*/ PPC::Runtime::ASM::addi(context->r31, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A1FC4 0009EDC4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r31));
/* 800A1FC8 0009EDC8  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*800A1FCC 0009EDCC*/ PPC::Runtime::ASM::beq(.L_800A2008);
/*800A1FD0 0009EDD0*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800A1FD4 0009EDD4*/ PPC::Runtime::ASM::b(.L_800A1FF8);
RUNTIME_PPC_JUMP_LABEL(.L_800A1FD8, 0x800A1FD8) //this is a jump label
/*800A1FD8 0009EDD8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF080 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A1FDC 0009EDDC*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800A1FE0 0009EDE0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF084 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A1FE4 0009EDE4*/ PPC::Runtime::ASM::mr(context->r5, context->r25);
/*800A1FE8 0009EDE8*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*800A1FEC 0009EDEC*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800A1FF0 0009EDF0*/ PPC::Runtime::ASM::bl(fn_800A16A8);
/*800A1FF4 0009EDF4*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A1FF8, 0x800A1FF8) //this is a jump label
/*800A1FF8 0009EDF8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r26));
/*800A1FFC 0009EDFC*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*800A2000 0009EE00*/ PPC::Runtime::ASM::blt(.L_800A1FD8);
/*800A2004 0009EE04*/ PPC::Runtime::ASM::b(.L_800A2108);
RUNTIME_PPC_JUMP_LABEL(.L_800A2008, 0x800A2008) //this is a jump label
/*800A2008 0009EE08*/ PPC::Runtime::ASM::cmplwi(context->r26, 0x0);
/*800A200C 0009EE0C*/ PPC::Runtime::ASM::lwz(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800A2010 0009EE10*/ PPC::Runtime::ASM::bne(.L_800A2024);
/*800A2014 0009EE14*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x184);
/*800A2018 0009EE18*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x228);
/*800A201C 0009EE1C*/ PPC::Runtime::ASM::li(context->r4, 0xef);
/*800A2020 0009EE20*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A2024, 0x800A2024) //this is a jump label
/*800A2024 0009EE24*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x0);
/*800A2028 0009EE28*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800A202C 0009EE2C*/ PPC::Runtime::ASM::blt(.L_800A2040);
/*800A2030 0009EE30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x128, context->r29));
/*800A2034 0009EE34*/ PPC::Runtime::ASM::cmpw(context->r27, context->r0);
/*800A2038 0009EE38*/ PPC::Runtime::ASM::bge(.L_800A2040);
/*800A203C 0009EE3C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A2040, 0x800A2040) //this is a jump label
/*800A2040 0009EE40*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800A2044 0009EE44*/ PPC::Runtime::ASM::bne(.L_800A2058);
/*800A2048 0009EE48*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x184);
/*800A204C 0009EE4C*/ PPC::Runtime::ASM::addi(context->r5, context->r30, 0x234);
/*800A2050 0009EE50*/ PPC::Runtime::ASM::li(context->r4, 0xf0);
/*800A2054 0009EE54*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800A2058, 0x800A2058) //this is a jump label
/*800A2058 0009EE58*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r31));
/*800A205C 0009EE5C*/ PPC::Runtime::ASM::mulli(context->r3, context->r27, 0x2c);
/*800A2060 0009EE60*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x124, context->r29));
/* 800A2064 0009EE64  54 A0 D7 FF */ extrwi. context->r0 , context->r5 , 1 , 25
/*800A2068 0009EE68*/ PPC::Runtime::ASM::add(context->r27, context->r4, context->r3);
/*800A206C 0009EE6C*/ PPC::Runtime::ASM::beq(.L_800A2084);
/*800A2070 0009EE70*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*800A2074 0009EE74*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x264);
/*800A2078 0009EE78*/ PPC::Runtime::ASM::extrwi(context->r5, context->r5, 1, 24);
/*800A207C 0009EE7C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A2080 0009EE80*/ PPC::Runtime::ASM::bl(OSReport);
RUNTIME_PPC_JUMP_LABEL(.L_800A2084, 0x800A2084) //this is a jump label
/*800A2084 0009EE84*/ PPC::Runtime::ASM::mr(context->r26, context->r27);
/*800A2088 0009EE88*/ PPC::Runtime::ASM::li(context->r25, 0x0);
/*800A208C 0009EE8C*/ PPC::Runtime::ASM::b(.L_800A20FC);
RUNTIME_PPC_JUMP_LABEL(.L_800A2090, 0x800A2090) //this is a jump label
/*800A2090 0009EE90*/ PPC::Runtime::ASM::lwz(context->r24, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r26));
/*800A2094 0009EE94*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r31));
/*800A2098 0009EE98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r24));
/*800A209C 0009EE9C*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r24));
/*800A20A0 0009EEA0*/ PPC::Runtime::ASM::extrwi(context->r4, context->r0, 1, 24);
/*800A20A4 0009EEA4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800A20A8 0009EEA8*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800A20AC 0009EEAC*/ PPC::Runtime::ASM::mfcr(context->r0);
/*800A20B0 0009EEB0*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
/*800A20B4 0009EEB4*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*800A20B8 0009EEB8*/ PPC::Runtime::ASM::bne(.L_800A20F4);
/*800A20BC 0009EEBC*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r24));
/*800A20C0 0009EEC0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800A20C4 0009EEC4*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF080 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A20C8 0009EEC8*/ PPC::Runtime::ASM::mr(context->r6, context->r28);
/*800A20CC 0009EECC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805DF084 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A20D0 0009EED0*/ PPC::Runtime::ASM::li(context->r4, 0x2);
/*800A20D4 0009EED4*/ PPC::Runtime::ASM::bl(fn_800A16A8);
/*800A20D8 0009EED8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r31));
/* 800A20DC 0009EEDC  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*800A20E0 0009EEE0*/ PPC::Runtime::ASM::beq(.L_800A20F4);
/*800A20E4 0009EEE4*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r24));
/*800A20E8 0009EEE8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x284);
/*800A20EC 0009EEEC*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800A20F0 0009EEF0*/ PPC::Runtime::ASM::bl(OSReport);
RUNTIME_PPC_JUMP_LABEL(.L_800A20F4, 0x800A20F4) //this is a jump label
/*800A20F4 0009EEF4*/ PPC::Runtime::ASM::addi(context->r26, context->r26, 0x4);
/*800A20F8 0009EEF8*/ PPC::Runtime::ASM::addi(context->r25, context->r25, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A20FC, 0x800A20FC) //this is a jump label
/*800A20FC 0009EEFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r27));
/*800A2100 0009EF00*/ PPC::Runtime::ASM::cmpw(context->r25, context->r0);
/*800A2104 0009EF04*/ PPC::Runtime::ASM::blt(.L_800A2090);
RUNTIME_PPC_JUMP_LABEL(.L_800A2108, 0x800A2108) //this is a jump label
/*800A2108 0009EF08*/ PPC::Runtime::ASM::lis(context->r3, lbl_80553E50 @ Get_MemoryOffset_HighBit);
/*800A210C 0009EF0C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A2110 0009EF10*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80553E50 @ Get_MemoryOffset_LowBit);
/*800A2114 0009EF14*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r3));
/*800A2118 0009EF18*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 6, 25, 25);
/*800A211C 0009EF1C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2f8c, context->r3));
/*800A2120 0009EF20*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x30);
/*800A2124 0009EF24*/ PPC::Runtime::ASM::bl(_restgpr_24);
/*800A2128 0009EF28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800A212C 0009EF2C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A2130 0009EF30*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800A2134 0009EF34*/ PPC::Runtime::ASM::blr();
}