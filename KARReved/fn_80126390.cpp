//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_80112050.hpp"
#include "fn_getPlayerCount.hpp"
#include "fn_80059520.hpp"



void fn_80126390(PPC::Runtime::GCContext* context)
{
/*80126390 00123190*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80126394 00123194*/ PPC::Runtime::ASM::mflr(context->r0);
/*80126398 00123198*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012639C 0012319C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801263A0 001231A0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801263A4 001231A4*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801263A8 001231A8*/ PPC::Runtime::ASM::bl(fn_80112044);
/*801263AC 001231AC*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xb4c);
/*801263B0 001231B0*/ PPC::Runtime::ASM::bl(fn_80112050);
/*801263B4 001231B4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801263B8 001231B8*/ PPC::Runtime::ASM::bl(fn_getPlayerCount);
/*801263BC 001231BC*/ PPC::Runtime::ASM::extsb(context->r0, context->r3);
/*801263C0 001231C0*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*801263C4 001231C4*/ PPC::Runtime::ASM::beq(.L_801263D4);
/*801263C8 001231C8*/ PPC::Runtime::ASM::bge(.L_801263D4);
/*801263CC 001231CC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*801263D0 001231D0*/ PPC::Runtime::ASM::bge(.L_801263F0);
RUNTIME_PPC_JUMP_LABEL(.L_801263D4, 0x801263D4) //this is a jump label
/*801263D4 001231D4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1092 @ Get_MemoryOffset_HighBit);
/*801263D8 001231D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*801263DC 001231DC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1092 @ Get_MemoryOffset_LowBit);
/*801263E0 001231E0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801263E4 001231E4*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801263E8 001231E8*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*801263EC 001231EC*/ PPC::Runtime::ASM::bl(fn_80059520);
RUNTIME_PPC_JUMP_LABEL(.L_801263F0, 0x801263F0) //this is a jump label
/*801263F0 001231F0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801263F4 001231F4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801263F8 001231F8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801263FC 001231FC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80126400 00123200*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80126404 00123204*/ PPC::Runtime::ASM::blr();
}