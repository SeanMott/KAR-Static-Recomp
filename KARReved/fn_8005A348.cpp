//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005BA38.hpp"
#include "fn_8005BEE4.hpp"
#include "fn_8005BA38.hpp"
#include "fn_8005BEE4.hpp"
#include "fn_8005BA38.hpp"
#include "fn_8005BEE4.hpp"
#include "fn_8005BA38.hpp"
#include "fn_8005BEE4.hpp"
#include "fn_8005BA38.hpp"
#include "fn_8005BEE4.hpp"



void fn_8005A348(PPC::Runtime::GCContext* context)
{
/*8005A348 00057148*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8005A34C 0005714C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8005A350 00057150*/ PPC::Runtime::ASM::li(context->r3, 0x3);
/*8005A354 00057154*/ PPC::Runtime::ASM::li(context->r4, 0x12);
/*8005A358 00057158*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005A35C 0005715C*/ PPC::Runtime::ASM::bl(fn_8005BA38);
/*8005A360 00057160*/ PPC::Runtime::ASM::li(context->r3, 0x12);
/*8005A364 00057164*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*8005A368 00057168*/ PPC::Runtime::ASM::bl(fn_8005BEE4);
/*8005A36C 0005716C*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*8005A370 00057170*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8005A374 00057174*/ PPC::Runtime::ASM::bl(fn_8005BA38);
/*8005A378 00057178*/ PPC::Runtime::ASM::li(context->r3, 0x4);
/*8005A37C 0005717C*/ PPC::Runtime::ASM::li(context->r4, 0x4);
/*8005A380 00057180*/ PPC::Runtime::ASM::bl(fn_8005BEE4);
/*8005A384 00057184*/ PPC::Runtime::ASM::li(context->r3, 0x6);
/*8005A388 00057188*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8005A38C 0005718C*/ PPC::Runtime::ASM::bl(fn_8005BA38);
/*8005A390 00057190*/ PPC::Runtime::ASM::li(context->r3, 0x5);
/*8005A394 00057194*/ PPC::Runtime::ASM::li(context->r4, 0x6);
/*8005A398 00057198*/ PPC::Runtime::ASM::bl(fn_8005BEE4);
/*8005A39C 0005719C*/ PPC::Runtime::ASM::li(context->r3, 0x7);
/*8005A3A0 000571A0*/ PPC::Runtime::ASM::li(context->r4, 0x13);
/*8005A3A4 000571A4*/ PPC::Runtime::ASM::bl(fn_8005BA38);
/*8005A3A8 000571A8*/ PPC::Runtime::ASM::li(context->r3, 0x13);
/*8005A3AC 000571AC*/ PPC::Runtime::ASM::li(context->r4, 0x7);
/*8005A3B0 000571B0*/ PPC::Runtime::ASM::bl(fn_8005BEE4);
/*8005A3B4 000571B4*/ PPC::Runtime::ASM::li(context->r3, 0x8);
/*8005A3B8 000571B8*/ PPC::Runtime::ASM::li(context->r4, 0x14);
/*8005A3BC 000571BC*/ PPC::Runtime::ASM::bl(fn_8005BA38);
/*8005A3C0 000571C0*/ PPC::Runtime::ASM::li(context->r3, 0x14);
/*8005A3C4 000571C4*/ PPC::Runtime::ASM::li(context->r4, 0x8);
/*8005A3C8 000571C8*/ PPC::Runtime::ASM::bl(fn_8005BEE4);
/*8005A3CC 000571CC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8005A3D0 000571D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8005A3D4 000571D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8005A3D8 000571D8*/ PPC::Runtime::ASM::blr();
}