//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn___equals_dec(PPC::Runtime::GCContext* context)
{
/*803B1B68 003AE968*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r3));
/*803B1B6C 003AE96C*/ PPC::Runtime::ASM::cmplwi(context->r5, 0x0);
/*803B1B70 003AE970*/ PPC::Runtime::ASM::bne(.L_803B1B84);
/*803B1B74 003AE974*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r4));
/*803B1B78 003AE978*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*803B1B7C 003AE97C*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*803B1B80 003AE980*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803B1B84, 0x803B1B84) //this is a jump label
/*803B1B84 003AE984*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5, context->r4));
/*803B1B88 003AE988*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803B1B8C 003AE98C*/ PPC::Runtime::ASM::bne(.L_803B1B9C);
/*803B1B90 003AE990*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r5);
/*803B1B94 003AE994*/ PPC::Runtime::ASM::srwi(context->r3, context->r0, 5);
/*803B1B98 003AE998*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803B1B9C, 0x803B1B9C) //this is a jump label
/*803B1B9C 003AE99C*/ PPC::Runtime::ASM::lha(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803B1BA0 003AE9A0*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803B1BA4 003AE9A4*/ PPC::Runtime::ASM::cmpw(context->r5, context->r0);
/*803B1BA8 003AE9A8*/ PPC::Runtime::ASM::bne(.L_803B1C6C);
/*803B1BAC 003AE9AC*/ PPC::Runtime::ASM::lbz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803B1BB0 003AE9B0*/ PPC::Runtime::ASM::lbz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803B1BB4 003AE9B4*/ PPC::Runtime::ASM::mr(context->r9, context->r7);
/*803B1BB8 003AE9B8*/ PPC::Runtime::ASM::cmpw(context->r7, context->r6);
/*803B1BBC 003AE9BC*/ PPC::Runtime::ASM::ble(.L_803B1BC4);
/*803B1BC0 003AE9C0*/ PPC::Runtime::ASM::mr(context->r9, context->r6);
RUNTIME_PPC_JUMP_LABEL(.L_803B1BC4, 0x803B1BC4) //this is a jump label
/*803B1BC4 003AE9C4*/ PPC::Runtime::ASM::li(context->r8, 0x0);
/*803B1BC8 003AE9C8*/ PPC::Runtime::ASM::mtctr(context->r9);
/*803B1BCC 003AE9CC*/ PPC::Runtime::ASM::cmpwi(context->r9, 0x0);
/*803B1BD0 003AE9D0*/ PPC::Runtime::ASM::ble(.L_803B1BF8);
RUNTIME_PPC_JUMP_LABEL(.L_803B1BD4, 0x803B1BD4) //this is a jump label
/*803B1BD4 003AE9D4*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x5);
/*803B1BD8 003AE9D8*/ PPC::Runtime::ASM::lbzx(context->r5, context->r3, context->r0);
/*803B1BDC 003AE9DC*/ PPC::Runtime::ASM::lbzx(context->r0, context->r4, context->r0);
/*803B1BE0 003AE9E0*/ PPC::Runtime::ASM::cmplw(context->r5, context->r0);
/*803B1BE4 003AE9E4*/ PPC::Runtime::ASM::beq(.L_803B1BF0);
/*803B1BE8 003AE9E8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803B1BEC 003AE9EC*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803B1BF0, 0x803B1BF0) //this is a jump label
/*803B1BF0 003AE9F0*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*803B1BF4 003AE9F4*/ PPC::Runtime::ASM::bdnz(.L_803B1BD4);
RUNTIME_PPC_JUMP_LABEL(.L_803B1BF8, 0x803B1BF8) //this is a jump label
/*803B1BF8 003AE9F8*/ PPC::Runtime::ASM::cmpw(context->r9, context->r7);
/*803B1BFC 003AE9FC*/ PPC::Runtime::ASM::bne(.L_803B1C34);
/*803B1C00 003AEA00*/ PPC::Runtime::ASM::subf(context->r0, context->r8, context->r6);
/*803B1C04 003AEA04*/ PPC::Runtime::ASM::mtctr(context->r0);
/*803B1C08 003AEA08*/ PPC::Runtime::ASM::cmpw(context->r8, context->r6);
/*803B1C0C 003AEA0C*/ PPC::Runtime::ASM::bge(.L_803B1C64);
RUNTIME_PPC_JUMP_LABEL(.L_803B1C10, 0x803B1C10) //this is a jump label
/*803B1C10 003AEA10*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x5);
/*803B1C14 003AEA14*/ PPC::Runtime::ASM::lbzx(context->r0, context->r4, context->r0);
/*803B1C18 003AEA18*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803B1C1C 003AEA1C*/ PPC::Runtime::ASM::beq(.L_803B1C28);
/*803B1C20 003AEA20*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803B1C24 003AEA24*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803B1C28, 0x803B1C28) //this is a jump label
/*803B1C28 003AEA28*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*803B1C2C 003AEA2C*/ PPC::Runtime::ASM::bdnz(.L_803B1C10);
/*803B1C30 003AEA30*/ PPC::Runtime::ASM::b(.L_803B1C64);
RUNTIME_PPC_JUMP_LABEL(.L_803B1C34, 0x803B1C34) //this is a jump label
/*803B1C34 003AEA34*/ PPC::Runtime::ASM::subf(context->r0, context->r8, context->r7);
/*803B1C38 003AEA38*/ PPC::Runtime::ASM::mtctr(context->r0);
/*803B1C3C 003AEA3C*/ PPC::Runtime::ASM::cmpw(context->r8, context->r7);
/*803B1C40 003AEA40*/ PPC::Runtime::ASM::bge(.L_803B1C64);
RUNTIME_PPC_JUMP_LABEL(.L_803B1C44, 0x803B1C44) //this is a jump label
/*803B1C44 003AEA44*/ PPC::Runtime::ASM::addi(context->r0, context->r8, 0x5);
/*803B1C48 003AEA48*/ PPC::Runtime::ASM::lbzx(context->r0, context->r3, context->r0);
/*803B1C4C 003AEA4C*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*803B1C50 003AEA50*/ PPC::Runtime::ASM::beq(.L_803B1C5C);
/*803B1C54 003AEA54*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803B1C58 003AEA58*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803B1C5C, 0x803B1C5C) //this is a jump label
/*803B1C5C 003AEA5C*/ PPC::Runtime::ASM::addi(context->r8, context->r8, 0x1);
/*803B1C60 003AEA60*/ PPC::Runtime::ASM::bdnz(.L_803B1C44);
RUNTIME_PPC_JUMP_LABEL(.L_803B1C64, 0x803B1C64) //this is a jump label
/*803B1C64 003AEA64*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*803B1C68 003AEA68*/ PPC::Runtime::ASM::blr();
RUNTIME_PPC_JUMP_LABEL(.L_803B1C6C, 0x803B1C6C) //this is a jump label
/*803B1C6C 003AEA6C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*803B1C70 003AEA70*/ PPC::Runtime::ASM::blr();
}