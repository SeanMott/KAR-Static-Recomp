//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "memmove.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_DHCPGetStatus(PPC::Runtime::GCContext* context)
{
/*80479E2C 00476C2C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80479E30 00476C30*/ PPC::Runtime::ASM::lis(context->r4, lbl_805BDDF8 @ Get_MemoryOffset_HighBit);
/*80479E34 00476C34*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*80479E38 00476C38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80479E3C 00476C3C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80479E40 00476C40*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_805BDDF8 @ Get_MemoryOffset_LowBit);
/*80479E44 00476C44*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80479E48 00476C48*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80479E4C 00476C4C*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80479E50 00476C50*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*80479E54 00476C54*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80479E58 00476C58*/ PPC::Runtime::ASM::cmplwi(context->r28, 0x0);
/*80479E5C 00476C5C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r31));
/*80479E60 00476C60*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80479E64 00476C64*/ PPC::Runtime::ASM::beq(.L_80479E78);
/*80479E68 00476C68*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x0);
/*80479E6C 00476C6C*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x3d8);
/*80479E70 00476C70*/ PPC::Runtime::ASM::li(context->r5, 0x12c);
/*80479E74 00476C74*/ PPC::Runtime::ASM::bl(memmove);
RUNTIME_PPC_JUMP_LABEL(.L_80479E78, 0x80479E78) //this is a jump label
/*80479E78 00476C78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80479E7C 00476C7C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80479E80 00476C80*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80479E84 00476C84*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80479E88 00476C88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80479E8C 00476C8C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80479E90 00476C90*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80479E94 00476C94*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80479E98 00476C98*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80479E9C 00476C9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80479EA0 00476CA0*/ PPC::Runtime::ASM::blr();
}