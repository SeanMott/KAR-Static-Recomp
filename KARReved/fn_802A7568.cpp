//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A7568(PPC::Runtime::GCContext* context)
{
/*802A7568 002A4368*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A756C 002A436C*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A7570 002A4370*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A7574 002A4374*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A7578 002A4378*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A757C 002A437C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A7580 002A4380  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A7584 002A4384*/ PPC::Runtime::ASM::beq(.L_802A76D4);
/*802A7588 002A4388*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C29A0 @ Get_MemoryOffset_HighBit);
/*802A758C 002A438C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1804);
/*802A7590 002A4390*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C29A0 @ Get_MemoryOffset_LowBit);
/*802A7594 002A4394*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7598 002A4398*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A759C 002A439C*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A75A0 002A43A0*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A75A4 002A43A4*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A75A8 002A43A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A75AC 002A43AC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75B0 002A43B0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1700);
/*802A75B4 002A43B4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A75B8 002A43B8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75BC 002A43BC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x15fc);
/*802A75C0 002A43C0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A75C4 002A43C4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75C8 002A43C8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x14f8);
/*802A75CC 002A43CC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A75D0 002A43D0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75D4 002A43D4*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x13f4);
/*802A75D8 002A43D8*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A75DC 002A43DC*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75E0 002A43E0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x12f0);
/*802A75E4 002A43E4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A75E8 002A43E8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75EC 002A43EC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x11ec);
/*802A75F0 002A43F0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A75F4 002A43F4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A75F8 002A43F8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x10e8);
/*802A75FC 002A43FC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7600 002A4400*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7604 002A4404*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xfe4);
/*802A7608 002A4408*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A760C 002A440C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7610 002A4410*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xee0);
/*802A7614 002A4414*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7618 002A4418*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A761C 002A441C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A7620 002A4420*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7624 002A4424*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7628 002A4428*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A762C 002A442C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7630 002A4430*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7634 002A4434*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A7638 002A4438*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A763C 002A443C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7640 002A4440*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A7644 002A4444*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7648 002A4448*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A764C 002A444C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A7650 002A4450*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7654 002A4454*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7658 002A4458*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A765C 002A445C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7660 002A4460*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7664 002A4464*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A7668 002A4468*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A766C 002A446C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7670 002A4470*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A7674 002A4474*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7678 002A4478*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A767C 002A447C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A7680 002A4480*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7684 002A4484*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7688 002A4488*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A768C 002A448C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A7690 002A4490*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A7694 002A4494*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A7698 002A4498*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A769C 002A449C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A76A0 002A44A0*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A76A4 002A44A4*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A76A8 002A44A8*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A76AC 002A44AC*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A76B0 002A44B0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A76B4 002A44B4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A76B8 002A44B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A76BC 002A44BC*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A76C0 002A44C0*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A76C4 002A44C4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A76C8 002A44C8*/ PPC::Runtime::ASM::ble(.L_802A76D4);
/*802A76CC 002A44CC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A76D0 002A44D0*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A76D4, 0x802A76D4) //this is a jump label
/*802A76D4 002A44D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A76D8 002A44D8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A76DC 002A44DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A76E0 002A44E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A76E4 002A44E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A76E8 002A44E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A76EC 002A44EC*/ PPC::Runtime::ASM::blr();
}