//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_80178F48(PPC::Runtime::GCContext* context)
{
/*80178F48 00175D48*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80178F4C 00175D4C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80178F50 00175D50*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80178F54 00175D54*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80178F58 00175D58*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80178F5C 00175D5C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80178F60 00175D60*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80178F64 00175D64*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80178F68 00175D68*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80178F6C, 0x80178F6C) //this is a jump label
/*80178F6C 00175D6C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80178F70 00175D70*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*80178F74 00175D74*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 2);
/*80178F78 00175D78*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*80178F7C 00175D7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd64, context->r31));
/*80178F80 00175D80*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80178F84 00175D84*/ PPC::Runtime::ASM::beq(.L_80178F90);
/*80178F88 00175D88*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80178F8C 00175D8C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd64, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80178F90, 0x80178F90) //this is a jump label
/*80178F90 00175D90*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80178F94 00175D94*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*80178F98 00175D98*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd78, context->r31));
/*80178F9C 00175D9C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80178FA0 00175DA0*/ PPC::Runtime::ASM::beq(.L_80178FAC);
/*80178FA4 00175DA4*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*80178FA8 00175DA8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xd78, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80178FAC, 0x80178FAC) //this is a jump label
/*80178FAC 00175DAC*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*80178FB0 00175DB0*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x5);
/*80178FB4 00175DB4*/ PPC::Runtime::ASM::blt(.L_80178F6C);
/*80178FB8 00175DB8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80178FBC 00175DBC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80178FC0 00175DC0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80178FC4 00175DC4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80178FC8 00175DC8*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80178FCC 00175DCC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80178FD0 00175DD0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80178FD4 00175DD4*/ PPC::Runtime::ASM::blr();
}