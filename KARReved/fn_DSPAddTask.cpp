//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "fn___DSP_insert_task.hpp"
#include "OSRestoreInterrupts.hpp"
#include "fn___DSP_boot_task.hpp"



void fn_DSPAddTask(PPC::Runtime::GCContext* context)
{
/*803C3650 003C0450*/ PPC::Runtime::ASM::mflr(context->r0);
/*803C3654 003C0454*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803C3658 003C0458*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803C365C 003C045C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C3660 003C0460*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803C3664 003C0464*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*803C3668 003C0468*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803C366C 003C046C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*803C3670 003C0470*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*803C3674 003C0474*/ PPC::Runtime::ASM::bl(fn___DSP_insert_task);
/*803C3678 003C0478*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803C367C 003C047C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*803C3680 003C0480*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*803C3684 003C0484*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803C3688 003C0488*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*803C368C 003C048C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803C3690 003C0490*/ PPC::Runtime::ASM::lwz(context->r0, STRUCT_BYTE4_COUNT_1805DDD38 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803C3694 003C0494*/ PPC::Runtime::ASM::cmplw(context->r30, context->r0);
/*803C3698 003C0498*/ PPC::Runtime::ASM::bne(.L_803C36A4);
/*803C369C 003C049C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C36A0 003C04A0*/ PPC::Runtime::ASM::bl(fn___DSP_boot_task);
RUNTIME_PPC_JUMP_LABEL(.L_803C36A4, 0x803C36A4) //this is a jump label
/*803C36A4 003C04A4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*803C36A8 003C04A8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803C36AC 003C04AC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803C36B0 003C04B0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*803C36B4 003C04B4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803C36B8 003C04B8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803C36BC 003C04BC*/ PPC::Runtime::ASM::blr();
}