//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802EFFB8.hpp"



void fn_802D9C34(PPC::Runtime::GCContext* context)
{
/*802D9C34 002D6A34*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802D9C38 002D6A38*/ PPC::Runtime::ASM::mflr(context->r0);
/*802D9C3C 002D6A3C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D9C40 002D6A40*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D9C44 002D6A44*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802D9C48 002D6A48*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802D9C4C 002D6A4C  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802D9C50 002D6A50*/ PPC::Runtime::ASM::beq(.L_802D9CAC);
/*802D9C54 002D6A54*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D21F4 @ Get_MemoryOffset_HighBit);
/*802D9C58 002D6A58*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D21F4 @ Get_MemoryOffset_LowBit);
/*802D9C5C 002D6A5C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802D9C60 002D6A60*/ PPC::Runtime::ASM::beq(.L_802D9C9C);
/*802D9C64 002D6A64*/ PPC::Runtime::ASM::lis(context->r4, lbl_804D6F5C @ Get_MemoryOffset_HighBit);
/*802D9C68 002D6A68*/ PPC::Runtime::ASM::lis(context->r3, String_ "AC_RUN_LOO" 1 @ Get_MemoryOffset_HighBit);
/*802D9C6C 002D6A6C*/ PPC::Runtime::ASM::addi(context->r0, context->r4, lbl_804D6F5C @ Get_MemoryOffset_LowBit);
/*802D9C70 002D6A70*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802D9C74 002D6A74*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802D9C78 002D6A78*/ PPC::Runtime::ASM::addi(context->r4, context->r3, String_ "AC_RUN_LOO" 1 @ Get_MemoryOffset_LowBit);
/*802D9C7C 002D6A7C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*802D9C80 002D6A80*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4ac, context->r3));
/*802D9C84 002D6A84*/ PPC::Runtime::ASM::bl(fn_802EFFB8);
/*802D9C88 002D6A88*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*802D9C8C 002D6A8C*/ PPC::Runtime::ASM::beq(.L_802D9C9C);
/*802D9C90 002D6A90*/ PPC::Runtime::ASM::lis(context->r3, lbl_804D1A98 @ Get_MemoryOffset_HighBit);
/*802D9C94 002D6A94*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804D1A98 @ Get_MemoryOffset_LowBit);
/*802D9C98 002D6A98*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_802D9C9C, 0x802D9C9C) //this is a jump label
/*802D9C9C 002D6A9C*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802D9CA0 002D6AA0*/ PPC::Runtime::ASM::ble(.L_802D9CAC);
/*802D9CA4 002D6AA4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802D9CA8 002D6AA8*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802D9CAC, 0x802D9CAC) //this is a jump label
/*802D9CAC 002D6AAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802D9CB0 002D6AB0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802D9CB4 002D6AB4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802D9CB8 002D6AB8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802D9CBC 002D6ABC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802D9CC0 002D6AC0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802D9CC4 002D6AC4*/ PPC::Runtime::ASM::blr();
}