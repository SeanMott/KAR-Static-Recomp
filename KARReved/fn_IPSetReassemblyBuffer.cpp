//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"
#include "OSDisableInterrupts.hpp"
#include "OSCreateAlarm.hpp"
#include "OSGetTime.hpp"
#include "fn_TimeoutHandler2.hpp"
#include "fn_TimeoutHandler2.hpp"
#include "fn_OSSetPeriodicAlarm.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_IPSetReassemblyBuffer(PPC::Runtime::GCContext* context)
{
/*804709E4 0046D7E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*804709E8 0046D7E8*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x240);
/*804709EC 0046D7EC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*804709F0 0046D7F0*/ PPC::Runtime::ASM::lis(context->r6, STRUCT_BYTE4_COUNT_1805B9058 @ Get_MemoryOffset_HighBit);
/*804709F4 0046D7F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*804709F8 0046D7F8*/ PPC::Runtime::ASM::stmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*804709FC 0046D7FC*/ PPC::Runtime::ASM::addi(context->r29, context->r3, 0x0);
/*80470A00 0046D800*/ PPC::Runtime::ASM::addi(context->r31, context->r6, STRUCT_BYTE4_COUNT_1805B9058 @ Get_MemoryOffset_LowBit);
/*80470A04 0046D804*/ PPC::Runtime::ASM::ble(.L_80470A0C);
/*80470A08 0046D808*/ PPC::Runtime::ASM::b(.L_80470A10);
RUNTIME_PPC_JUMP_LABEL(.L_80470A0C, 0x80470A0C) //this is a jump label
/*80470A0C 0046D80C*/ PPC::Runtime::ASM::li(context->r5, 0x240);
RUNTIME_PPC_JUMP_LABEL(.L_80470A10, 0x80470A10) //this is a jump label
/*80470A10 0046D810*/ PPC::Runtime::ASM::lis(context->r3, 0x1);
/*80470A14 0046D814*/ PPC::Runtime::ASM::subi(context->r30, context->r3, 0x1);
/*80470A18 0046D818*/ PPC::Runtime::ASM::cmpw(context->r5, context->r30);
/*80470A1C 0046D81C*/ PPC::Runtime::ASM::bge(.L_80470A24);
/*80470A20 0046D820*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
RUNTIME_PPC_JUMP_LABEL(.L_80470A24, 0x80470A24) //this is a jump label
/*80470A24 0046D824*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*80470A28 0046D828*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x6b);
/*80470A2C 0046D82C*/ PPC::Runtime::ASM::clrrwi(context->r28, context->r0, 5);
/*80470A30 0046D830*/ PPC::Runtime::ASM::beq(.L_80470A3C);
/*80470A34 0046D834*/ PPC::Runtime::ASM::cmpw(context->r4, context->r28);
/*80470A38 0046D838*/ PPC::Runtime::ASM::bge(.L_80470A44);
RUNTIME_PPC_JUMP_LABEL(.L_80470A3C, 0x80470A3C) //this is a jump label
/*80470A3C 0046D83C*/ PPC::Runtime::ASM::li(context->r3, -0xc);
/*80470A40 0046D840*/ PPC::Runtime::ASM::b(.L_80470AD4);
RUNTIME_PPC_JUMP_LABEL(.L_80470A44, 0x80470A44) //this is a jump label
/*80470A44 0046D844*/ PPC::Runtime::ASM::divw(context->r0, context->r4, context->r28);
/*80470A48 0046D848*/ PPC::Runtime::ASM::mullw(context->r0, context->r0, context->r28);
/*80470A4C 0046D84C*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r4);
/*80470A50 0046D850*/ PPC::Runtime::ASM::subf(context->r27, context->r0, context->r4);
/*80470A54 0046D854*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*80470A58 0046D858*/ PPC::Runtime::ASM::addi(context->r5, context->r27, 0x0);
/*80470A5C 0046D85C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80470A60 0046D860*/ PPC::Runtime::ASM::bl(memset);
/*80470A64 0046D864*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*80470A68 0046D868*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80470A6C 0046D86C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80470A70 0046D870*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*80470A74 0046D874*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*80470A78 0046D878*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*80470A7C 0046D87C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/* 80470A80 0046D880  54 60 07 FF */ clrlwi. context->r0 , context->r3 , 31
/*80470A84 0046D884*/ PPC::Runtime::ASM::bne(.L_80470AC8);
/*80470A88 0046D888*/ PPC::Runtime::ASM::ori(context->r0, context->r3, 0x1);
/*80470A8C 0046D88C*/ PPC::Runtime::ASM::addi(context->r30, context->r31, 0x18);
/*80470A90 0046D890*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80470A94 0046D894*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80470A98 0046D898*/ PPC::Runtime::ASM::bl(OSCreateAlarm);
/*80470A9C 0046D89C*/ PPC::Runtime::ASM::bl(OSGetTime);
/*80470AA0 0046D8A0*/ PPC::Runtime::ASM::lis(context->r5, 0x8000);
/*80470AA4 0046D8A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r5));
/*80470AA8 0046D8A8*/ PPC::Runtime::ASM::addi(context->r5, context->r3, 0x0);
/*80470AAC 0046D8AC*/ PPC::Runtime::ASM::lis(context->r3, fn_TimeoutHandler2 @ Get_MemoryOffset_HighBit);
/*80470AB0 0046D8B0*/ PPC::Runtime::ASM::addi(context->r9, context->r3, fn_TimeoutHandler2 @ Get_MemoryOffset_LowBit);
/*80470AB4 0046D8B4*/ PPC::Runtime::ASM::srwi(context->r8, context->r0, 2);
/*80470AB8 0046D8B8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x0);
/*80470ABC 0046D8BC*/ PPC::Runtime::ASM::addi(context->r6, context->r4, 0x0);
/*80470AC0 0046D8C0*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80470AC4 0046D8C4*/ PPC::Runtime::ASM::bl(fn_OSSetPeriodicAlarm);
RUNTIME_PPC_JUMP_LABEL(.L_80470AC8, 0x80470AC8) //this is a jump label
/*80470AC8 0046D8C8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80470ACC 0046D8CC*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*80470AD0 0046D8D0*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80470AD4, 0x80470AD4) //this is a jump label
/*80470AD4 0046D8D4*/ PPC::Runtime::ASM::lmw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80470AD8 0046D8D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80470ADC 0046D8DC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80470AE0 0046D8E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80470AE4 0046D8E4*/ PPC::Runtime::ASM::blr();
}