//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801A0044.hpp"
#include "fn_801BED04.hpp"
#include "fn_ground_Spin.hpp"
#include "fn_801C05A8.hpp"



void fn_801BFE68(PPC::Runtime::GCContext* context)
{
/*801BFE68 001BCC68*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BFE6C 001BCC6C*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BFE70 001BCC70*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BFE74 001BCC74*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BFE78 001BCC78*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BFE7C 001BCC7C*/ PPC::Runtime::ASM::bl(fn_801A0044);
/*801BFE80 001BCC80*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFE84 001BCC84*/ PPC::Runtime::ASM::bl(fn_801BED04);
/*801BFE88 001BCC88*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BFE8C 001BCC8C*/ PPC::Runtime::ASM::bne(.L_801BFEA4);
/*801BFE90 001BCC90*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFE94 001BCC94*/ PPC::Runtime::ASM::bl(fn_ground_Spin);
/*801BFE98 001BCC98*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BFE9C 001BCC9C*/ PPC::Runtime::ASM::bl(fn_801C05A8);
/*801BFEA0 001BCCA0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BFEA4, 0x801BFEA4) //this is a jump label
/*801BFEA4 001BCCA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BFEA8 001BCCA8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BFEAC 001BCCAC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BFEB0 001BCCB0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BFEB4 001BCCB4*/ PPC::Runtime::ASM::blr();
}