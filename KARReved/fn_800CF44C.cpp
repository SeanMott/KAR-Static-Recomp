//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800CF44C(PPC::Runtime::GCContext* context)
{
/*800CF44C 000CC24C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800CF450 000CC250*/ PPC::Runtime::ASM::mflr(context->r0);
/*800CF454 000CC254*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800CF458 000CC258*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CF45C 000CC25C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800CF460 000CC260*/ PPC::Runtime::ASM::addi(context->r31, context->r5, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800CF464 000CC264*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800CF468 000CC268*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CF46C 000CC26C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800CF470 000CC270*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800CF474 000CC274*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x11c, context->r4));
/*800CF478 000CC278*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*800CF47C 000CC27C*/ PPC::Runtime::ASM::bne(.L_800CF490);
/*800CF480 000CC280*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800CF484 000CC284*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x9c);
/*800CF488 000CC288*/ PPC::Runtime::ASM::li(context->r4, 0x1d);
/*800CF48C 000CC28C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF490, 0x800CF490) //this is a jump label
/*800CF490 000CC290*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x0);
/*800CF494 000CC294*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800CF498 000CC298*/ PPC::Runtime::ASM::blt(.L_800CF4AC);
/*800CF49C 000CC29C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800CF4A0 000CC2A0*/ PPC::Runtime::ASM::cmpw(context->r29, context->r0);
/*800CF4A4 000CC2A4*/ PPC::Runtime::ASM::bge(.L_800CF4AC);
/*800CF4A8 000CC2A8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800CF4AC, 0x800CF4AC) //this is a jump label
/*800CF4AC 000CC2AC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800CF4B0 000CC2B0*/ PPC::Runtime::ASM::bne(.L_800CF4C4);
/*800CF4B4 000CC2B4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x68);
/*800CF4B8 000CC2B8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xa8);
/*800CF4BC 000CC2BC*/ PPC::Runtime::ASM::li(context->r4, 0x1e);
/*800CF4C0 000CC2C0*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800CF4C4, 0x800CF4C4) //this is a jump label
/*800CF4C4 000CC2C4*/ PPC::Runtime::ASM::mulli(context->r0, context->r29, 0x18);
/*800CF4C8 000CC2C8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*800CF4CC 000CC2CC*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800CF4D0 000CC2D0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800CF4D4 000CC2D4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800CF4D8 000CC2D8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800CF4DC 000CC2DC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800CF4E0 000CC2E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800CF4E4 000CC2E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800CF4E8 000CC2E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800CF4EC 000CC2EC*/ PPC::Runtime::ASM::blr();
}