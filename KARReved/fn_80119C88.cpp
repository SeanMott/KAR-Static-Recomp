//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80119C88(PPC::Runtime::GCContext* context)
{
/*80119C88 00116A88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80119C8C 00116A8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80119C90 00116A90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80119C94 00116A94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80119C98 00116A98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80119C9C 00116A9C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80119CA0 00116AA0*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80119CA4 00116AA4*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*80119CA8 00116AA8*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80119CAC, 0x80119CAC) //this is a jump label
/*80119CAC 00116AAC*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80119CB0 00116AB0*/ PPC::Runtime::ASM::extsb(context->r0, context->r29);
/*80119CB4 00116AB4*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80119CB8 00116AB8*/ PPC::Runtime::ASM::add(context->r30, context->r3, context->r0);
/*80119CBC 00116ABC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r30));
/*80119CC0 00116AC0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80119CC4 00116AC4*/ PPC::Runtime::ASM::beq(.L_80119CD0);
/*80119CC8 00116AC8*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80119CCC 00116ACC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80119CD0, 0x80119CD0) //this is a jump label
/*80119CD0 00116AD0*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*80119CD4 00116AD4*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*80119CD8 00116AD8*/ PPC::Runtime::ASM::blt(.L_80119CAC);
/*80119CDC 00116ADC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80119CE0 00116AE0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80119CE4 00116AE4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80119CE8 00116AE8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80119CEC 00116AEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80119CF0 00116AF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80119CF4 00116AF4*/ PPC::Runtime::ASM::blr();
}