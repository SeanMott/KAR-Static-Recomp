//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8000A348.hpp"
#include "fn_emLoadEnemyData.hpp"
#include "fn_emLoadEnemyData.hpp"



void fn_GetEnemyIDAndLoadData(PPC::Runtime::GCContext* context)
{
/*801FD060 001F9E60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FD064 001F9E64*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FD068 001F9E68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FD06C 001F9E6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FD070 001F9E70*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FD074 001F9E74*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4f);
/*801FD078 001F9E78*/ PPC::Runtime::ASM::bge(.L_801FD0A0);
/*801FD07C 001F9E7C*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x4c);
/*801FD080 001F9E80*/ PPC::Runtime::ASM::bge(.L_801FD088);
/*801FD084 001F9E84*/ PPC::Runtime::ASM::b(.L_801FD0A0);
RUNTIME_PPC_JUMP_LABEL(.L_801FD088, 0x801FD088) //this is a jump label
/*801FD088 001F9E88*/ PPC::Runtime::ASM::bl(fn_8000A348);
/*801FD08C 001F9E8C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801FD090 001F9E90*/ PPC::Runtime::ASM::beq(.L_801FD0A8);
/*801FD094 001F9E94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FD098 001F9E98*/ PPC::Runtime::ASM::bl(fn_emLoadEnemyData);
/*801FD09C 001F9E9C*/ PPC::Runtime::ASM::b(.L_801FD0A8);
RUNTIME_PPC_JUMP_LABEL(.L_801FD0A0, 0x801FD0A0) //this is a jump label
/*801FD0A0 001F9EA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801FD0A4 001F9EA4*/ PPC::Runtime::ASM::bl(fn_emLoadEnemyData);
RUNTIME_PPC_JUMP_LABEL(.L_801FD0A8, 0x801FD0A8) //this is a jump label
/*801FD0A8 001F9EA8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FD0AC 001F9EAC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FD0B0 001F9EB0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FD0B4 001F9EB4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FD0B8 001F9EB8*/ PPC::Runtime::ASM::blr();
}