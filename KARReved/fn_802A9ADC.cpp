//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_802854CC.hpp"
#include "fn_80285130.hpp"



void fn_802A9ADC(PPC::Runtime::GCContext* context)
{
/*802A9ADC 002A68DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A9AE0 002A68E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A9AE4 002A68E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A9AE8 002A68E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A9AEC 002A68EC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A9AF0 002A68F0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A9AF4 002A68F4  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A9AF8 002A68F8*/ PPC::Runtime::ASM::beq(.L_802A9BD0);
/*802A9AFC 002A68FC*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C196C @ Get_MemoryOffset_HighBit);
/*802A9B00 002A6900*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xddc);
/*802A9B04 002A6904*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C196C @ Get_MemoryOffset_LowBit);
/*802A9B08 002A6908*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B0C 002A690C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A9B10 002A6910*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A9B14 002A6914*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A9B18 002A6918*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A9B1C 002A691C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A9B20 002A6920*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B24 002A6924*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xcd8);
/*802A9B28 002A6928*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B2C 002A692C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B30 002A6930*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xbd4);
/*802A9B34 002A6934*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B38 002A6938*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B3C 002A693C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0xad0);
/*802A9B40 002A6940*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B44 002A6944*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B48 002A6948*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x9cc);
/*802A9B4C 002A694C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B50 002A6950*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B54 002A6954*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x8c8);
/*802A9B58 002A6958*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B5C 002A695C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B60 002A6960*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x7c4);
/*802A9B64 002A6964*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B68 002A6968*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B6C 002A696C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x6c0);
/*802A9B70 002A6970*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B74 002A6974*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B78 002A6978*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x5bc);
/*802A9B7C 002A697C*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B80 002A6980*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B84 002A6984*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x4b8);
/*802A9B88 002A6988*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B8C 002A698C*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B90 002A6990*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x3b4);
/*802A9B94 002A6994*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9B98 002A6998*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9B9C 002A699C*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x2b0);
/*802A9BA0 002A69A0*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9BA4 002A69A4*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9BA8 002A69A8*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x1ac);
/*802A9BAC 002A69AC*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A9BB0 002A69B0*/ PPC::Runtime::ASM::bl(fn_802854CC);
/*802A9BB4 002A69B4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A9BB8 002A69B8*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A9BBC 002A69BC*/ PPC::Runtime::ASM::bl(fn_80285130);
/*802A9BC0 002A69C0*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A9BC4 002A69C4*/ PPC::Runtime::ASM::ble(.L_802A9BD0);
/*802A9BC8 002A69C8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A9BCC 002A69CC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A9BD0, 0x802A9BD0) //this is a jump label
/*802A9BD0 002A69D0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A9BD4 002A69D4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A9BD8 002A69D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A9BDC 002A69DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A9BE0 002A69E0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A9BE4 002A69E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A9BE8 002A69E8*/ PPC::Runtime::ASM::blr();
}