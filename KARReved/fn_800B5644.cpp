//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "memset.hpp"



void fn_800B5644(PPC::Runtime::GCContext* context)
{
/*800B5644 000B2444*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B5648 000B2448*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B564C 000B244C*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B5650 000B2450*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B5654 000B2454*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B5658 000B2458*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x84);
/*800B565C 000B245C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B5660 000B2460*/ PPC::Runtime::ASM::bl(fn_HSD_ObjAlloc);
/* 800B5664 000B2464  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*800B5668 000B2468*/ PPC::Runtime::ASM::beq(.L_800B5678);
/*800B566C 000B246C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800B5670 000B2470*/ PPC::Runtime::ASM::li(context->r5, 0x488);
/*800B5674 000B2474*/ PPC::Runtime::ASM::bl(memset);
RUNTIME_PPC_JUMP_LABEL(.L_800B5678, 0x800B5678) //this is a jump label
/*800B5678 000B2478*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B567C 000B247C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800B5680 000B2480*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B5684 000B2484*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B5688 000B2488*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B568C 000B248C*/ PPC::Runtime::ASM::blr();
}