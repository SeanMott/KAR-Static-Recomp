//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800DC7E4(PPC::Runtime::GCContext* context)
{
/*800DC7E4 000D95E4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800DC7E8 000D95E8*/ PPC::Runtime::ASM::mflr(context->r0);
/*800DC7EC 000D95EC*/ PPC::Runtime::ASM::lis(context->r6, STRUCT_FLOAT_3 @ Get_MemoryOffset_HighBit);
/*800DC7F0 000D95F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DC7F4 000D95F4*/ PPC::Runtime::ASM::slwi(context->r0, context->r7, 6);
/*800DC7F8 000D95F8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DC7FC 000D95FC*/ PPC::Runtime::ASM::mr(context->r31, context->r5);
/*800DC800 000D9600*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DC804 000D9604*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800DC808 000D9608*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DC80C 000D960C*/ PPC::Runtime::ASM::addi(context->r29, context->r6, STRUCT_FLOAT_3 @ Get_MemoryOffset_LowBit);
/*800DC810 000D9610*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800DC814 000D9614*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r5));
/*800DC818 000D9618*/ PPC::Runtime::ASM::add(context->r5, context->r5, context->r0);
/*800DC81C 000D961C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r5));
/* 800DC820 000D9620  54 00 07 BF */ clrlwi. context->r0 , context->r0 , 30
/*800DC824 000D9624*/ PPC::Runtime::ASM::beq(.L_800DC8C0);
/*800DC828 000D9628*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800DC82C 000D962C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r31));
/*800DC830 000D9630*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x1c);
/*800DC834 000D9634*/ PPC::Runtime::ASM::add(context->r28, context->r3, context->r0);
/*800DC838 000D9638*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DC83C 000D963C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800DC840 000D9640*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800DC844 000D9644*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*800DC848 000D9648*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*800DC84C 000D964C*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800DC850 000D9650*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r30));
/*800DC854 000D9654*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*800DC858 000D9658*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r3));
/*800DC85C 000D965C*/ PPC::Runtime::ASM::rlwinm(context->r0, context->r0, 0, 26, 26);
/*800DC860 000D9660*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x20);
/*800DC864 000D9664*/ PPC::Runtime::ASM::bne(.L_800DC8C0);
/*800DC868 000D9668*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*800DC86C 000D966C*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r4));
/*800DC870 000D9670*/ PPC::Runtime::ASM::cmpw(context->r0, context->r5);
/*800DC874 000D9674*/ PPC::Runtime::ASM::ble(.L_800DC898);
/*800DC878 000D9678*/ PPC::Runtime::ASM::mr(context->r4, context->r0);
/*800DC87C 000D967C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xc);
/*800DC880 000D9680*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800DC884 000D9684*/ PPC::Runtime::ASM::bl(OSReport);
/*800DC888 000D9688*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x20);
/*800DC88C 000D968C*/ PPC::Runtime::ASM::addi(context->r5, context->r29, 0x2c);
/*800DC890 000D9690*/ PPC::Runtime::ASM::li(context->r4, 0x34);
/*800DC894 000D9694*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800DC898, 0x800DC898) //this is a jump label
/*800DC898 000D9698*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*800DC89C 000D969C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*800DC8A0 000D96A0*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*800DC8A4 000D96A4*/ PPC::Runtime::ASM::stwx(context->r28, context->r3, context->r0);
/*800DC8A8 000D96A8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*800DC8AC 000D96AC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800DC8B0 000D96B0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r31));
/*800DC8B4 000D96B4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
/*800DC8B8 000D96B8*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800DC8BC 000D96BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_800DC8C0, 0x800DC8C0) //this is a jump label
/*800DC8C0 000D96C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800DC8C4 000D96C4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800DC8C8 000D96C8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800DC8CC 000D96CC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800DC8D0 000D96D0*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800DC8D4 000D96D4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800DC8D8 000D96D8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800DC8DC 000D96DC*/ PPC::Runtime::ASM::blr();
}