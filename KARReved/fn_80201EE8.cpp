//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018C1C8.hpp"
#include "fn_8018C1C8.hpp"
#include "fn_80201C78.hpp"
#include "fn_80201C78.hpp"
#include "fn_8018C598.hpp"



void fn_80201EE8(PPC::Runtime::GCContext* context)
{
/*80201EE8 001FECE8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80201EEC 001FECEC*/ PPC::Runtime::ASM::mflr(context->r0);
/*80201EF0 001FECF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80201EF4 001FECF4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80201EF8 001FECF8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80201EFC 001FECFC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80201F00 001FED00*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201F04 001FED04*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80201F08 001FED08*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r3));
/*80201F0C 001FED0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*80201F10 001FED10*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4d);
/*80201F14 001FED14*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80201F18 001FED18*/ PPC::Runtime::ASM::bne(.L_80201F3C);
/*80201F1C 001FED1C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80201F20 001FED20*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*80201F24 001FED24*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80201F28 001FED28*/ PPC::Runtime::ASM::li(context->r5, 0x8);
/*80201F2C 001FED2C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80201F30 001FED30*/ PPC::Runtime::ASM::bl(fn_8018C1C8);
/*80201F34 001FED34*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r31));
/*80201F38 001FED38*/ PPC::Runtime::ASM::b(.L_80201F58);
RUNTIME_PPC_JUMP_LABEL(.L_80201F3C, 0x80201F3C) //this is a jump label
/*80201F3C 001FED3C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80201F40 001FED40*/ PPC::Runtime::ASM::li(context->r4, 0x3);
/*80201F44 001FED44*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*80201F48 001FED48*/ PPC::Runtime::ASM::li(context->r5, 0x2);
/*80201F4C 001FED4C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80201F50 001FED50*/ PPC::Runtime::ASM::bl(fn_8018C1C8);
/*80201F54 001FED54*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80201F58, 0x80201F58) //this is a jump label
/*80201F58 001FED58*/ PPC::Runtime::ASM::lis(context->r4, fn_80201C78 @ Get_MemoryOffset_HighBit);
/*80201F5C 001FED5C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r31));
/*80201F60 001FED60*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_80201C78 @ Get_MemoryOffset_LowBit);
/*80201F64 001FED64*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*80201F68 001FED68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r3));
/*80201F6C 001FED6C*/ PPC::Runtime::ASM::mr(context->r28, context->r30);
/*80201F70 001FED70*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*80201F74 001FED74*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r3));
/*80201F78 001FED78*/ PPC::Runtime::ASM::b(.L_80201FAC);
RUNTIME_PPC_JUMP_LABEL(.L_80201F7C, 0x80201F7C) //this is a jump label
/*80201F7C 001FED7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*80201F80 001FED80*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80201F84 001FED84*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b4, context->r31));
/*80201F88 001FED88*/ PPC::Runtime::ASM::add(context->r6, context->r0, context->r28);
/*80201F8C 001FED8C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x410, context->r31));
/*80201F90 001FED90*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r6));
/*80201F94 001FED94*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x4);
/*80201F98 001FED98*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*80201F9C 001FED9C*/ PPC::Runtime::ASM::lwzx(context->r5, context->r5, context->r0);
/*80201FA0 001FEDA0*/ PPC::Runtime::ASM::bl(fn_8018C598);
/*80201FA4 001FEDA4*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x18);
/*80201FA8 001FEDA8*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80201FAC, 0x80201FAC) //this is a jump label
/*80201FAC 001FEDAC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*80201FB0 001FEDB0*/ PPC::Runtime::ASM::cmpw(context->r30, context->r0);
/*80201FB4 001FEDB4*/ PPC::Runtime::ASM::blt(.L_80201F7C);
/*80201FB8 001FEDB8*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb08, context->r31));
/*80201FBC 001FEDBC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80201FC0 001FEDC0*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r3, 5, 26, 26);
/*80201FC4 001FEDC4*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb08, context->r31));
/*80201FC8 001FEDC8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80201FCC 001FEDCC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80201FD0 001FEDD0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201FD4 001FEDD4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80201FD8 001FEDD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80201FDC 001FEDDC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80201FE0 001FEDE0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80201FE4 001FEDE4*/ PPC::Runtime::ASM::blr();
}