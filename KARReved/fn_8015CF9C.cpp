//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_8015CF9C(PPC::Runtime::GCContext* context)
{
/*8015CF9C 00159D9C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8015CFA0 00159DA0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015CFA4 00159DA4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015CFA8 00159DA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015CFAC 00159DAC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015CFB0 00159DB0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*8015CFB4 00159DB4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015CFB8 00159DB8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015CFBC 00159DBC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8015CFC0, 0x8015CFC0) //this is a jump label
/*8015CFC0 00159DC0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015CFC4 00159DC4*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*8015CFC8 00159DC8*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 3);
/*8015CFCC 00159DCC*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*8015CFD0 00159DD0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e8, context->r31));
/*8015CFD4 00159DD4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015CFD8 00159DD8*/ PPC::Runtime::ASM::beq(.L_8015CFE4);
/*8015CFDC 00159DDC*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015CFE0 00159DE0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7e8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015CFE4, 0x8015CFE4) //this is a jump label
/*8015CFE4 00159DE4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015CFE8 00159DE8*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*8015CFEC 00159DEC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7ec, context->r31));
/*8015CFF0 00159DF0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8015CFF4 00159DF4*/ PPC::Runtime::ASM::beq(.L_8015D000);
/*8015CFF8 00159DF8*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*8015CFFC 00159DFC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7ec, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_8015D000, 0x8015D000) //this is a jump label
/*8015D000 00159E00*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8015D004 00159E04*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*8015D008 00159E08*/ PPC::Runtime::ASM::blt(.L_8015CFC0);
/*8015D00C 00159E0C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8015D010 00159E10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015D014 00159E14*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8015D018 00159E18*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015D01C 00159E1C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8015D020 00159E20*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015D024 00159E24*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8015D028 00159E28*/ PPC::Runtime::ASM::blr();
}