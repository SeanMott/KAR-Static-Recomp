//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801CDC00.hpp"
#include "fn_800D1CA8.hpp"
#include "fn_800D1838.hpp"



void fn_801EDE30(PPC::Runtime::GCContext* context)
{
/*801EDE30 001EAC30*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x90, context->r1));
/*801EDE34 001EAC34*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EDE38 001EAC38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*801EDE3C 001EAC3C*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r1));
/*801EDE40 001EAC40*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r1)0, context->qr0);
/*801EDE44 001EAC44*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*801EDE48 001EAC48*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1)0, context->qr0);
/*801EDE4C 001EAC4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*801EDE50 001EAC50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*801EDE54 001EAC54*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*801EDE58 001EAC58*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc36, context->r3));
/*801EDE5C 001EAC5C*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*801EDE60 001EAC60*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*801EDE64 001EAC64*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/* 801EDE68 001EAC68  54 00 DF FF */ extrwi. context->r0 , context->r0 , 1 , 26
/*801EDE6C 001EAC6C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801EDE70 001EAC70*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*801EDE74 001EAC74*/ PPC::Runtime::ASM::bne(.L_801EE128);
/*801EDE78 001EAC78*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x3c);
/*801EDE7C 001EAC7C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x8);
/*801EDE80 001EAC80*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x48);
/*801EDE84 001EAC84*/ PPC::Runtime::ASM::bl(fn_801CDC00);
/*801EDE88 001EAC88*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x0);
/*801EDE8C 001EAC8C*/ PPC::Runtime::ASM::bne(.L_801EDF24);
/*801EDE90 001EAC90*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EDE94 001EAC94*/ PPC::Runtime::ASM::beq(.L_801EDF24);
/*801EDE98 001EAC98*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801EDE9C 001EAC9C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f30);
/*801EDEA0 001EACA0*/ PPC::Runtime::ASM::ble(.L_801EDEAC);
/*801EDEA4 001EACA4*/ PPC::Runtime::ASM::fmr(context->f3, context->f30);
/*801EDEA8 001EACA8*/ PPC::Runtime::ASM::b(.L_801EDEB4);
RUNTIME_PPC_JUMP_LABEL(.L_801EDEAC, 0x801EDEAC) //this is a jump label
/*801EDEAC 001EACAC*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f30);
/*801EDEB0 001EACB0*/ PPC::Runtime::ASM::fmuls(context->f3, context->f1, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_801EDEB4, 0x801EDEB4) //this is a jump label
/*801EDEB4 001EACB4*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*801EDEB8 001EACB8*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*801EDEBC 001EACBC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*801EDEC0 001EACC0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r1));
/*801EDEC4 001EACC4*/ PPC::Runtime::ASM::fmuls(context->f2, context->f2, context->f3);
/*801EDEC8 001EACC8*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f3);
/*801EDECC 001EACCC*/ PPC::Runtime::ASM::fmuls(context->f3, context->f0, context->f3);
/*801EDED0 001EACD0*/ PPC::Runtime::ASM::beq(.L_801EDEF8);
/*801EDED4 001EACD4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r29));
/*801EDED8 001EACD8*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f2);
/*801EDEDC 001EACDC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r29));
/*801EDEE0 001EACE0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r29));
/*801EDEE4 001EACE4*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801EDEE8 001EACE8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r29));
/*801EDEEC 001EACEC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r29));
/*801EDEF0 001EACF0*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*801EDEF4 001EACF4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_801EDEF8, 0x801EDEF8) //this is a jump label
/*801EDEF8 001EACF8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r29));
/*801EDEFC 001EACFC*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801EDF00 001EAD00*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f2);
/*801EDF04 001EAD04*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r29));
/*801EDF08 001EAD08*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r29));
/*801EDF0C 001EAD0C*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801EDF10 001EAD10*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r29));
/*801EDF14 001EAD14*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r29));
/*801EDF18 001EAD18*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*801EDF1C 001EAD1C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r29));
/*801EDF20 001EAD20*/ PPC::Runtime::ASM::b(.L_801EE12C);
RUNTIME_PPC_JUMP_LABEL(.L_801EDF24, 0x801EDF24) //this is a jump label
/*801EDF24 001EAD24*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1EC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EDF28 001EAD28*/ PPC::Runtime::ASM::fcmpu(cr0, context->f31, context->f0);
/*801EDF2C 001EAD2C*/ PPC::Runtime::ASM::beq(.L_801EE128);
/*801EDF30 001EAD30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x700, context->r29));
/*801EDF34 001EAD34*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*801EDF38 001EAD38*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801EDF3C 001EAD3C*/ PPC::Runtime::ASM::beq(.L_801EDF54);
/*801EDF40 001EAD40*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_10 @ Get_MemoryOffset_HighBit);
/*801EDF44 001EAD44*/ PPC::Runtime::ASM::li(context->r3, String_ "mplib." 4 @ Get_MemoryOffset_SDA21);
/*801EDF48 001EAD48*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_10 @ Get_MemoryOffset_LowBit);
/*801EDF4C 001EAD4C*/ PPC::Runtime::ASM::li(context->r4, 0x1f9);
/*801EDF50 001EAD50*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801EDF54, 0x801EDF54) //this is a jump label
/*801EDF54 001EAD54*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x33c, context->r31));
/*801EDF58 001EAD58*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801EDF5C 001EAD5C*/ PPC::Runtime::ASM::beq(.L_801EDF78);
/*801EDF60 001EAD60*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_11 @ Get_MemoryOffset_HighBit);
/*801EDF64 001EAD64*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_10 @ Get_MemoryOffset_HighBit);
/*801EDF68 001EAD68*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_11 @ Get_MemoryOffset_LowBit);
/*801EDF6C 001EAD6C*/ PPC::Runtime::ASM::li(context->r4, 0xf9);
/*801EDF70 001EAD70*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_10 @ Get_MemoryOffset_LowBit);
/*801EDF74 001EAD74*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_801EDF78, 0x801EDF78) //this is a jump label
/*801EDF78 001EAD78*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x340, context->r31));
/*801EDF7C 001EAD7C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x3c);
/*801EDF80 001EAD80*/ PPC::Runtime::ASM::lfs(context->f7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x424, context->r29));
/*801EDF84 001EAD84*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x30);
/*801EDF88 001EAD88*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r5));
/*801EDF8C 001EAD8C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x24);
/*801EDF90 001EAD90*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801EDF94 001EAD94*/ PPC::Runtime::ASM::addi(context->r6, context->r1, 0x18);
/*801EDF98 001EAD98*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801EDF9C 001EAD9C*/ PPC::Runtime::ASM::fmadds(context->f3, context->f7, context->f1, context->f0);
/*801EDFA0 001EADA0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801EDFA4 001EADA4*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801EDFA8 001EADA8*/ PPC::Runtime::ASM::lfs(context->f6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x428, context->r29));
/*801EDFAC 001EADAC*/ PPC::Runtime::ASM::fmadds(context->f2, context->f6, context->f1, context->f2);
/*801EDFB0 001EADB0*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801EDFB4 001EADB4*/ PPC::Runtime::ASM::lfs(context->f5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42c, context->r29));
/*801EDFB8 001EADB8*/ PPC::Runtime::ASM::fmadds(context->f4, context->f5, context->f1, context->f0);
/*801EDFBC 001EADBC*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801EDFC0 001EADC0*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r29));
/*801EDFC4 001EADC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x15c, context->r7));
/*801EDFC8 001EADC8*/ PPC::Runtime::ASM::fneg(context->f0, context->f0);
/*801EDFCC 001EADCC*/ PPC::Runtime::ASM::fmadds(context->f3, context->f7, context->f0, context->f3);
/*801EDFD0 001EADD0*/ PPC::Runtime::ASM::fmadds(context->f2, context->f6, context->f0, context->f2);
/*801EDFD4 001EADD4*/ PPC::Runtime::ASM::fmadds(context->f0, context->f5, context->f0, context->f4);
/*801EDFD8 001EADD8*/ PPC::Runtime::ASM::stfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*801EDFDC 001EADDC*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801EDFE0 001EADE0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1));
/*801EDFE4 001EADE4*/ PPC::Runtime::ASM::bl(fn_800D1CA8);
/*801EDFE8 001EADE8*/ PPC::Runtime::ASM::bl(fn_800D1838);
/*801EDFEC 001EADEC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801EDFF0 001EADF0*/ PPC::Runtime::ASM::beq(.L_801EDFFC);
/*801EDFF4 001EADF4*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801EDFF8 001EADF8*/ PPC::Runtime::ASM::b(.L_801EE12C);
RUNTIME_PPC_JUMP_LABEL(.L_801EDFFC, 0x801EDFFC) //this is a jump label
/*801EDFFC 001EADFC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r1));
/*801EE000 001EAE00*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0xc);
/*801EE004 001EAE04*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801EE008 001EAE08*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r1));
/*801EE00C 001EAE0C*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*801EE010 001EAE10*/ PPC::Runtime::ASM::fsubs(context->f4, context->f1, context->f0);
/*801EE014 001EAE14*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*801EE018 001EAE18*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801EE01C 001EAE1C*/ PPC::Runtime::ASM::fsubs(context->f2, context->f3, context->f2);
/*801EE020 001EAE20*/ PPC::Runtime::ASM::stfs(context->f4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EE024 001EAE24*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*801EE028 001EAE28*/ PPC::Runtime::ASM::stfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801EE02C 001EAE2C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EE030 001EAE30*/ PPC::Runtime::ASM::bl(fn_803D2158);
/*801EE034 001EAE34*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x384, context->r29));
/*801EE038 001EAE38*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1EC0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EE03C 001EAE3C*/ PPC::Runtime::ASM::fcmpu(cr0, context->f2, context->f0);
/*801EE040 001EAE40*/ PPC::Runtime::ASM::bne(.L_801EE064);
/*801EE044 001EAE44*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f31);
/*801EE048 001EAE48*/ PPC::Runtime::ASM::bge(.L_801EE058);
/*801EE04C 001EAE4C*/ PPC::Runtime::ASM::fneg(context->f4, context->f1);
/*801EE050 001EAE50*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*801EE054 001EAE54*/ PPC::Runtime::ASM::b(.L_801EE098);
RUNTIME_PPC_JUMP_LABEL(.L_801EE058, 0x801EE058) //this is a jump label
/*801EE058 001EAE58*/ PPC::Runtime::ASM::fneg(context->f4, context->f31);
/*801EE05C 001EAE5C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801EE060 001EAE60*/ PPC::Runtime::ASM::b(.L_801EE098);
RUNTIME_PPC_JUMP_LABEL(.L_801EE064, 0x801EE064) //this is a jump label
/*801EE064 001EAE64*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801EE068 001EAE68*/ PPC::Runtime::ASM::ble(.L_801EE090);
/*801EE06C 001EAE6C*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f31);
/*801EE070 001EAE70*/ PPC::Runtime::ASM::ble(.L_801EE07C);
/*801EE074 001EAE74*/ PPC::Runtime::ASM::fneg(context->f4, context->f31);
/*801EE078 001EAE78*/ PPC::Runtime::ASM::b(.L_801EE088);
RUNTIME_PPC_JUMP_LABEL(.L_801EE07C, 0x801EE07C) //this is a jump label
/*801EE07C 001EAE7C*/ PPC::Runtime::ASM::fdivs(context->f0, context->f1, context->f31);
/*801EE080 001EAE80*/ PPC::Runtime::ASM::fmuls(context->f0, context->f1, context->f0);
/*801EE084 001EAE84*/ PPC::Runtime::ASM::fneg(context->f4, context->f0);
RUNTIME_PPC_JUMP_LABEL(.L_801EE088, 0x801EE088) //this is a jump label
/*801EE088 001EAE88*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*801EE08C 001EAE8C*/ PPC::Runtime::ASM::b(.L_801EE098);
RUNTIME_PPC_JUMP_LABEL(.L_801EE090, 0x801EE090) //this is a jump label
/*801EE090 001EAE90*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*801EE094 001EAE94*/ PPC::Runtime::ASM::b(.L_801EE12C);
RUNTIME_PPC_JUMP_LABEL(.L_801EE098, 0x801EE098) //this is a jump label
/*801EE098 001EAE98*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x424, context->r29));
/*801EE09C 001EAE9C*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*801EE0A0 001EAEA0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x428, context->r29));
/*801EE0A4 001EAEA4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42c, context->r29));
/*801EE0A8 001EAEA8*/ PPC::Runtime::ASM::fmuls(context->f3, context->f2, context->f4);
/*801EE0AC 001EAEAC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f4);
/*801EE0B0 001EAEB0*/ PPC::Runtime::ASM::fmuls(context->f2, context->f0, context->f4);
/*801EE0B4 001EAEB4*/ PPC::Runtime::ASM::beq(.L_801EE0DC);
/*801EE0B8 001EAEB8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r29));
/*801EE0BC 001EAEBC*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*801EE0C0 001EAEC0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r29));
/*801EE0C4 001EAEC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r29));
/*801EE0C8 001EAEC8*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801EE0CC 001EAECC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x328, context->r29));
/*801EE0D0 001EAED0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r29));
/*801EE0D4 001EAED4*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f2);
/*801EE0D8 001EAED8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x32c, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_801EE0DC, 0x801EE0DC) //this is a jump label
/*801EE0DC 001EAEDC*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801EE0E0 001EAEE0*/ PPC::Runtime::ASM::beq(.L_801EE104);
/*801EE0E4 001EAEE4*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E1EC4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801EE0E8 001EAEE8*/ PPC::Runtime::ASM::lfs(context->f3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x424, context->r29));
/*801EE0EC 001EAEEC*/ PPC::Runtime::ASM::fsubs(context->f2, context->f4, context->f0);
/*801EE0F0 001EAEF0*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x428, context->r29));
/*801EE0F4 001EAEF4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x42c, context->r29));
/*801EE0F8 001EAEF8*/ PPC::Runtime::ASM::fmuls(context->f3, context->f3, context->f2);
/*801EE0FC 001EAEFC*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f2);
/*801EE100 001EAF00*/ PPC::Runtime::ASM::fmuls(context->f2, context->f0, context->f2);
RUNTIME_PPC_JUMP_LABEL(.L_801EE104, 0x801EE104) //this is a jump label
/*801EE104 001EAF04*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r29));
/*801EE108 001EAF08*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f3);
/*801EE10C 001EAF0C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3e8, context->r29));
/*801EE110 001EAF10*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r29));
/*801EE114 001EAF14*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f1);
/*801EE118 001EAF18*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3ec, context->r29));
/*801EE11C 001EAF1C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r29));
/*801EE120 001EAF20*/ PPC::Runtime::ASM::fadds(context->f0, context->f0, context->f2);
/*801EE124 001EAF24*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3f0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_801EE128, 0x801EE128) //this is a jump label
/*801EE128 001EAF28*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801EE12C, 0x801EE12C) //this is a jump label
/*801EE12C 001EAF2C*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x88, context->r1)0, context->qr0);
/*801EE130 001EAF30*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x80, context->r1));
/*801EE134 001EAF34*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x78, context->r1)0, context->qr0);
/*801EE138 001EAF38*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x70, context->r1));
/*801EE13C 001EAF3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6c, context->r1));
/*801EE140 001EAF40*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x68, context->r1));
/*801EE144 001EAF44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x94, context->r1));
/*801EE148 001EAF48*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x64, context->r1));
/*801EE14C 001EAF4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EE150 001EAF50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x90);
/*801EE154 001EAF54*/ PPC::Runtime::ASM::blr();
}