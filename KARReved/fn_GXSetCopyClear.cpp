//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_GXSetCopyClear(PPC::Runtime::GCContext* context)
{
/*803CC9CC 003C97CC*/ PPC::Runtime::ASM::clrlwi(context->r0, context->r4, 8);
/*803CC9D0 003C97D0*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3, context->r3));
/*803CC9D4 003C97D4*/ PPC::Runtime::ASM::lbz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*803CC9D8 003C97D8*/ PPC::Runtime::ASM::li(context->r6, 0x61);
/*803CC9DC 003C97DC*/ PPC::Runtime::ASM::slwi(context->r7, context->r4, 8);
/*803CC9E0 003C97E0*/ PPC::Runtime::ASM::lwz(context->r4, gx @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*803CC9E4 003C97E4*/ PPC::Runtime::ASM::rlwimi(context->r7, context->r5, 0, 24, 31);
/*803CC9E8 003C97E8*/ PPC::Runtime::ASM::lis(context->r5, 0xcc01);
/*803CC9EC 003C97EC*/ PPC::Runtime::ASM::clrlwi(context->r7, context->r7, 8);
/*803CC9F0 003C97F0*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC9F4 003C97F4*/ PPC::Runtime::ASM::oris(context->r7, context->r7, 0x4f00);
/*803CC9F8 003C97F8*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CC9FC 003C97FC*/ PPC::Runtime::ASM::oris(context->r7, context->r0, 0x5100);
/*803CCA00 003C9800*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*803CCA04 003C9804*/ PPC::Runtime::ASM::lbz(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r3));
/*803CCA08 003C9808*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r3));
/*803CCA0C 003C980C*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 8);
/*803CCA10 003C9810*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCA14 003C9814*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r8, 0, 24, 31);
/*803CCA18 003C9818*/ PPC::Runtime::ASM::clrlwi(context->r3, context->r3, 8);
/*803CCA1C 003C981C*/ PPC::Runtime::ASM::oris(context->r3, context->r3, 0x5000);
/*803CCA20 003C9820*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCA24 003C9824*/ PPC::Runtime::ASM::stb(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCA28 003C9828*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x8000, context->r5));
/*803CCA2C 003C982C*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r4));
/*803CCA30 003C9830*/ PPC::Runtime::ASM::blr();
}