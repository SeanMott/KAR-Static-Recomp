//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_8005FD38.hpp"
#include "fn_8005FD9C.hpp"
#include "fn_8005FA48.hpp"
#include "fn_8005FAE4.hpp"
#include "fn_8005FB64.hpp"
#include "fn_800AEBC0.hpp"
#include "fn_debug_quit.hpp"
#include "fn_debug_quit.hpp"
#include "fn_dbLoadCommon.hpp"
#include "fn_800ACF40.hpp"
#include "fn_800AD0C8.hpp"
#include "fn_debug_openSubMenu.hpp"
#include "fn_800ABA6C.hpp"
#include "fn_800ABA74.hpp"



void fn_8000FBB0(PPC::Runtime::GCContext* context)
{
/*8000FBB0 0000C9B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000FBB4 0000C9B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000FBB8 0000C9B8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000FBBC 0000C9BC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000FBC0 0000C9C0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000FBC4 0000C9C4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000FBC8 0000C9C8*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8000FBCC 0000C9CC*/ PPC::Runtime::ASM::bl(fn_8005FD38);
/*8000FBD0 0000C9D0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*8000FBD4 0000C9D4*/ PPC::Runtime::ASM::bl(fn_8005FD9C);
/*8000FBD8 0000C9D8*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*8000FBDC 0000C9DC*/ PPC::Runtime::ASM::bl(fn_8005FA48);
/*8000FBE0 0000C9E0*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*8000FBE4 0000C9E4*/ PPC::Runtime::ASM::bl(fn_8005FAE4);
/*8000FBE8 0000C9E8*/ PPC::Runtime::ASM::li(context->r3, 0xff);
/*8000FBEC 0000C9EC*/ PPC::Runtime::ASM::bl(fn_8005FB64);
/*8000FBF0 0000C9F0*/ PPC::Runtime::ASM::bl(fn_800AEBC0);
/*8000FBF4 0000C9F4*/ PPC::Runtime::ASM::lis(context->r4, StructWithFuncPtrs_26_DebugMenuFunctionality_General @ Get_MemoryOffset_HighBit);
/*8000FBF8 0000C9F8*/ PPC::Runtime::ASM::lis(context->r3, fn_debug_quit @ Get_MemoryOffset_HighBit);
/*8000FBFC 0000C9FC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, StructWithFuncPtrs_26_DebugMenuFunctionality_General @ Get_MemoryOffset_LowBit);
/*8000FC00 0000CA00*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x344, context->r31));
/*8000FC04 0000CA04*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_debug_quit @ Get_MemoryOffset_LowBit);
/*8000FC08 0000CA08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x348, context->r31));
/*8000FC0C 0000CA0C*/ PPC::Runtime::ASM::bl(fn_dbLoadCommon);
/*8000FC10 0000CA10*/ PPC::Runtime::ASM::bl(fn_800ACF40);
/*8000FC14 0000CA14*/ PPC::Runtime::ASM::bl(fn_800AD0C8);
/*8000FC18 0000CA18*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x344, context->r31));
/*8000FC1C 0000CA1C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8000FC20 0000CA20*/ PPC::Runtime::ASM::li(context->r5, 0xa);
/*8000FC24 0000CA24*/ PPC::Runtime::ASM::li(context->r6, 0xa);
/*8000FC28 0000CA28*/ PPC::Runtime::ASM::bl(fn_debug_openSubMenu);
/*8000FC2C 0000CA2C*/ PPC::Runtime::ASM::bl(fn_800ABA6C);
/*8000FC30 0000CA30*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x348, context->r31));
/*8000FC34 0000CA34*/ PPC::Runtime::ASM::bl(fn_800ABA74);
/*8000FC38 0000CA38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000FC3C 0000CA3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000FC40 0000CA40*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000FC44 0000CA44*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000FC48 0000CA48*/ PPC::Runtime::ASM::blr();
}