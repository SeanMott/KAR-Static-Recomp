//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_800132EC(PPC::Runtime::GCContext* context)
{
/*800132EC 000100EC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800132F0 000100F0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800132F4 000100F4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800132F8 000100F8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*800132FC 000100FC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80013300 00010100*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xaa4, context->r3));
/*80013304 00010104*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80013308 00010108*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8001330C 0001010C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80013310 00010110*/ PPC::Runtime::ASM::blr();
}