//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80103634.hpp"



void fn_800D2CE0(PPC::Runtime::GCContext* context)
{
/*800D2CE0 000CFAE0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D2CE4 000CFAE4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D2CE8 000CFAE8*/ PPC::Runtime::ASM::slwi(context->r3, context->r3, 6);
/*800D2CEC 000CFAEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2CF0 000CFAF0*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D2CF4 000CFAF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r4));
/*800D2CF8 000CFAF8*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r3);
/*800D2CFC 000CFAFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r3));
/*800D2D00 000CFB00*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8c, context->r3));
/*800D2D04 000CFB04*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x4);
/*800D2D08 000CFB08*/ PPC::Runtime::ASM::bne(.L_800D2D14);
/*800D2D0C 000CFB0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x90, context->r3));
/*800D2D10 000CFB10*/ PPC::Runtime::ASM::bl(fn_80103634);
RUNTIME_PPC_JUMP_LABEL(.L_800D2D14, 0x800D2D14) //this is a jump label
/*800D2D14 000CFB14*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2D18 000CFB18*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D2D1C 000CFB1C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D2D20 000CFB20*/ PPC::Runtime::ASM::blr();
}