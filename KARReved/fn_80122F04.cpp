//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_80122F04(PPC::Runtime::GCContext* context)
{
/*80122F04 0011FD04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80122F08 0011FD08*/ PPC::Runtime::ASM::mflr(context->r0);
/*80122F0C 0011FD0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80122F10 0011FD10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80122F14 0011FD14*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80122F18 0011FD18*/ PPC::Runtime::ASM::bl(fn_80112044);
/*80122F1C 0011FD1C*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*80122F20 0011FD20*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r0);
/*80122F24 0011FD24*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x57c, context->r31));
/*80122F28 0011FD28*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80122F2C 0011FD2C*/ PPC::Runtime::ASM::beq(.L_80122F3C);
/*80122F30 0011FD30*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*80122F34 0011FD34*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80122F38 0011FD38*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x57c, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80122F3C, 0x80122F3C) //this is a jump label
/*80122F3C 0011FD3C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80122F40 0011FD40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80122F44 0011FD44*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80122F48 0011FD48*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80122F4C 0011FD4C*/ PPC::Runtime::ASM::blr();
}