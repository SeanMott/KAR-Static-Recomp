//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_IPCancel.hpp"
#include "fn_8046F250.hpp"
#include "fn_8046F250.hpp"
#include "fn_8046F250.hpp"
#include "fn_8046F250.hpp"
#include "fn_cbForCancelSync3.hpp"



void fn_Cancel2(PPC::Runtime::GCContext* context)
{
/*804701B4 0046CFB4*/ PPC::Runtime::ASM::mflr(context->r0);
/*804701B8 0046CFB8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*804701BC 0046CFBC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*804701C0 0046CFC0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804701C4 0046CFC4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, 0x0);
/*804701C8 0046CFC8*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x34);
/*804701CC 0046CFCC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*804701D0 0046CFD0*/ PPC::Runtime::ASM::addi(context->r30, context->r4, 0x0);
/*804701D4 0046CFD4*/ PPC::Runtime::ASM::bl(fn_IPCancel);
/*804701D8 0046CFD8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*804701DC 0046CFDC*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*804701E0 0046CFE0*/ PPC::Runtime::ASM::mr(context->r12, context->r0);
/*804701E4 0046CFE4*/ PPC::Runtime::ASM::beq(.L_80470230);
/*804701E8 0046CFE8*/ PPC::Runtime::ASM::lis(context->r3, fn_8046F250 @ Get_MemoryOffset_HighBit);
/*804701EC 0046CFEC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_8046F250 @ Get_MemoryOffset_LowBit);
/*804701F0 0046CFF0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*804701F4 0046CFF4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*804701F8 0046CFF8*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*804701FC 0046CFFC*/ PPC::Runtime::ASM::beq(.L_80470220);
/*80470200 0046D000*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80470204 0046D004*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*80470208 0046D008*/ PPC::Runtime::ASM::bne(.L_80470210);
/*8047020C 0046D00C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_80470210, 0x80470210) //this is a jump label
/*80470210 0046D010*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
/*80470214 0046D014*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80470218 0046D018*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8047021C 0046D01C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80470220, 0x80470220) //this is a jump label
/*80470220 0046D020*/ PPC::Runtime::ASM::mtlr(context->r12);
/*80470224 0046D024*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*80470228 0046D028*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/* 8047022C 0046D02C  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_80470230, 0x80470230) //this is a jump label
/*80470230 0046D030*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80470234 0046D034*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*80470238 0046D038*/ PPC::Runtime::ASM::beq(.L_80470284);
/*8047023C 0046D03C*/ PPC::Runtime::ASM::lis(context->r3, fn_8046F250 @ Get_MemoryOffset_HighBit);
/*80470240 0046D040*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_8046F250 @ Get_MemoryOffset_LowBit);
/*80470244 0046D044*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80470248 0046D048*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8047024C 0046D04C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80470250 0046D050*/ PPC::Runtime::ASM::beq(.L_80470274);
/*80470254 0046D054*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80470258 0046D058*/ PPC::Runtime::ASM::cmpwi(context->r0, -0x1);
/*8047025C 0046D05C*/ PPC::Runtime::ASM::bne(.L_80470264);
/*80470260 0046D060*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_80470264, 0x80470264) //this is a jump label
/*80470264 0046D064*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*80470268 0046D068*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8047026C 0046D06C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80470270 0046D070*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80470274, 0x80470274) //this is a jump label
/*80470274 0046D074*/ PPC::Runtime::ASM::mtlr(context->r12);
/*80470278 0046D078*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*8047027C 0046D07C*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x0);
/* 80470280 0046D080  4E 80 00 21 */ blrl
RUNTIME_PPC_JUMP_LABEL(.L_80470284, 0x80470284) //this is a jump label
/*80470284 0046D084*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80470288 0046D088*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*8047028C 0046D08C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80470290 0046D090*/ PPC::Runtime::ASM::lha(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80470294 0046D094*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*80470298 0046D098*/ PPC::Runtime::ASM::ble(.L_804702A0);
/*8047029C 0046D09C*/ PPC::Runtime::ASM::bl(fn_cbForCancelSync3);
RUNTIME_PPC_JUMP_LABEL(.L_804702A0, 0x804702A0) //this is a jump label
/*804702A0 0046D0A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*804702A4 0046D0A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*804702A8 0046D0A8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*804702AC 0046D0AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*804702B0 0046D0B0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*804702B4 0046D0B4*/ PPC::Runtime::ASM::blr();
}