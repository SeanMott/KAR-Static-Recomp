//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_SIDisablePolling(PPC::Runtime::GCContext* context)
{
/*803E94C8 003E62C8*/ PPC::Runtime::ASM::mflr(context->r0);
/*803E94CC 003E62CC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*803E94D0 003E62D0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x18, context->r1));
/*803E94D4 003E62D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/* 803E94D8 003E62D8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*803E94DC 003E62DC*/ PPC::Runtime::ASM::bne(.L_803E94F0);
/*803E94E0 003E62E0*/ PPC::Runtime::ASM::lis(context->r3, Si_804FCC24 @ Get_MemoryOffset_HighBit);
/*803E94E4 003E62E4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Si_804FCC24 @ Get_MemoryOffset_LowBit);
/*803E94E8 003E62E8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*803E94EC 003E62EC*/ PPC::Runtime::ASM::b(.L_803E9520);
RUNTIME_PPC_JUMP_LABEL(.L_803E94F0, 0x803E94F0) //this is a jump label
/*803E94F0 003E62F0*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*803E94F4 003E62F4*/ PPC::Runtime::ASM::lis(context->r4, Si_804FCC24 @ Get_MemoryOffset_HighBit);
/*803E94F8 003E62F8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, Si_804FCC24 @ Get_MemoryOffset_LowBit);
/*803E94FC 003E62FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r4));
/*803E9500 003E6300*/ PPC::Runtime::ASM::rlwinm(context->r31, context->r31, 8, 24, 27);
/*803E9504 003E6304*/ PPC::Runtime::ASM::addi(context->r5, context->r4, 0x4);
/*803E9508 003E6308*/ PPC::Runtime::ASM::lis(context->r4, 0xcc00);
/*803E950C 003E630C*/ PPC::Runtime::ASM::andc(context->r31, context->r0, context->r31);
/*803E9510 003E6310*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6430, context->r4));
/*803E9514 003E6314*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*803E9518 003E6318*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*803E951C 003E631C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
RUNTIME_PPC_JUMP_LABEL(.L_803E9520, 0x803E9520) //this is a jump label
/*803E9520 003E6320*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*803E9524 003E6324*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803E9528 003E6328*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x18);
/*803E952C 003E632C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803E9530 003E6330*/ PPC::Runtime::ASM::blr();
}