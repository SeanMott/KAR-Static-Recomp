//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_FuncDoesShit_5.hpp"



void fn_8015258C(PPC::Runtime::GCContext* context)
{
/*8015258C 0014F38C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80152590 0014F390*/ PPC::Runtime::ASM::mflr(context->r0);
/*80152594 0014F394*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80152598 0014F398*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8015259C 0014F39C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*801525A0 0014F3A0*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*801525A4 0014F3A4*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801525A8 0014F3A8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*801525AC 0014F3AC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801525B0, 0x801525B0) //this is a jump label
/*801525B0 0014F3B0*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801525B4 0014F3B4*/ PPC::Runtime::ASM::extsb(context->r0, context->r28);
/*801525B8 0014F3B8*/ PPC::Runtime::ASM::slwi(context->r29, context->r0, 3);
/*801525BC 0014F3BC*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*801525C0 0014F3C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4fc, context->r31));
/*801525C4 0014F3C4*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801525C8 0014F3C8*/ PPC::Runtime::ASM::beq(.L_801525D4);
/*801525CC 0014F3CC*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801525D0 0014F3D0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4fc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801525D4, 0x801525D4) //this is a jump label
/*801525D4 0014F3D4*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*801525D8 0014F3D8*/ PPC::Runtime::ASM::add(context->r31, context->r3, context->r29);
/*801525DC 0014F3DC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x500, context->r31));
/*801525E0 0014F3E0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801525E4 0014F3E4*/ PPC::Runtime::ASM::beq(.L_801525F0);
/*801525E8 0014F3E8*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*801525EC 0014F3EC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x500, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801525F0, 0x801525F0) //this is a jump label
/*801525F0 0014F3F0*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*801525F4 0014F3F4*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x4);
/*801525F8 0014F3F8*/ PPC::Runtime::ASM::blt(.L_801525B0);
/*801525FC 0014F3FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80152600 0014F400*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80152604 0014F404*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80152608 0014F408*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015260C 0014F40C*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80152610 0014F410*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80152614 0014F414*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80152618 0014F418*/ PPC::Runtime::ASM::blr();
}