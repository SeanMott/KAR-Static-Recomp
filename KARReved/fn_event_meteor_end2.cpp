//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254188.hpp"
#include "fn_800ED800.hpp"



void fn_event_meteor_end2(PPC::Runtime::GCContext* context)
{
/*80110F38 0010DD38*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80110F3C 0010DD3C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80110F40 0010DD40*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80110F44 0010DD44*/ PPC::Runtime::ASM::lwz(context->r4, STRUCT_BYTE4_COUNT_1805DD730 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80110F48 0010DD48*/ PPC::Runtime::ASM::cmplwi(context->r4, 0x0);
/*80110F4C 0010DD4C*/ PPC::Runtime::ASM::beq(.L_80110F5C);
/*80110F50 0010DD50*/ PPC::Runtime::ASM::lis(context->r3, lbl_80557838 @ Get_MemoryOffset_HighBit);
/*80110F54 0010DD54*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_80557838 @ Get_MemoryOffset_LowBit);
/*80110F58 0010DD58*/ PPC::Runtime::ASM::bl(fn_HSD_ObjFree);
RUNTIME_PPC_JUMP_LABEL(.L_80110F5C, 0x80110F5C) //this is a jump label
/*80110F5C 0010DD5C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80110F60 0010DD60*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD730 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80110F64 0010DD64*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD734 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80110F68 0010DD68*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DD738 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80110F6C 0010DD6C*/ PPC::Runtime::ASM::bl(fn_80254188);
/*80110F70 0010DD70*/ PPC::Runtime::ASM::li(context->r3, 0x2);
/*80110F74 0010DD74*/ PPC::Runtime::ASM::bl(fn_800ED800);
/*80110F78 0010DD78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80110F7C 0010DD7C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80110F80 0010DD80*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80110F84 0010DD84*/ PPC::Runtime::ASM::blr();
}