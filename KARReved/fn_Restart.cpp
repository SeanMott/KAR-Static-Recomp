//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_UDPOpen.hpp"
#include "memmove.hpp"
#include "fn_UDPBind.hpp"
#include "fn_OSCancelAlarm.hpp"
#include "fn_RxmitHandler.hpp"
#include "fn_RxmitHandler.hpp"
#include "OSSetAlarm.hpp"
#include "fn_DHCPRequest.hpp"



void fn_Restart(PPC::Runtime::GCContext* context)
{
/*804799D0 004767D0*/ PPC::Runtime::ASM::mflr(context->r0);
/*804799D4 004767D4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*804799D8 004767D8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*804799DC 004767DC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*804799E0 004767E0*/ PPC::Runtime::ASM::addi(context->r31, context->r5, 0x0);
/*804799E4 004767E4*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*804799E8 004767E8*/ PPC::Runtime::ASM::addi(context->r30, context->r6, 0x0);
/*804799EC 004767EC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*804799F0 004767F0*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*804799F4 004767F4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r3));
/*804799F8 004767F8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*804799FC 004767FC*/ PPC::Runtime::ASM::beq(.L_80479A08);
/*80479A00 00476800*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80479A04 00476804*/ PPC::Runtime::ASM::b(.L_80479AD4);
RUNTIME_PPC_JUMP_LABEL(.L_80479A08, 0x80479A08) //this is a jump label
/*80479A08 00476808*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80479A0C 0047680C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r29));
/*80479A10 00476810*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x630, context->r29));
/*80479A14 00476814*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r29));
/*80479A18 00476818*/ PPC::Runtime::ASM::mtlr(context->r12);
/* 80479A1C 0047681C  4E 80 00 21 */ blrl
/*80479A20 00476820*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r29));
/*80479A24 00476824*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*80479A28 00476828*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80479A2C 0047682C*/ PPC::Runtime::ASM::addi(context->r0, context->r5, 0x1);
/*80479A30 00476830*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf4, context->r29));
/*80479A34 00476834*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80479A38 00476838*/ PPC::Runtime::ASM::bl(fn_UDPOpen);
/*80479A3C 0047683C*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*80479A40 00476840*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80479A44 00476844*/ PPC::Runtime::ASM::li(context->r0, 0x2);
/*80479A48 00476848*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x1c);
/*80479A4C 0047684C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x19, context->r1));
/*80479A50 00476850*/ PPC::Runtime::ASM::li(context->r4, STRUCT_BYTE4_COUNT_1805E6298 @ Get_MemoryOffset_SDA21);
/*80479A54 00476854*/ PPC::Runtime::ASM::li(context->r5, 0x4);
/*80479A58 00476858*/ PPC::Runtime::ASM::bl(memmove);
/*80479A5C 0047685C*/ PPC::Runtime::ASM::li(context->r0, 0x44);
/*80479A60 00476860*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1a, context->r1));
/*80479A64 00476864*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x0);
/*80479A68 00476868*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x18);
/*80479A6C 0047686C*/ PPC::Runtime::ASM::bl(fn_UDPBind);
/*80479A70 00476870*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80479A74 00476874*/ PPC::Runtime::ASM::bge(.L_80479A80);
/*80479A78 00476878*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80479A7C 0047687C*/ PPC::Runtime::ASM::b(.L_80479AD4);
RUNTIME_PPC_JUMP_LABEL(.L_80479A80, 0x80479A80) //this is a jump label
/*80479A80 00476880*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r29));
/*80479A84 00476884*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x2);
/*80479A88 00476888*/ PPC::Runtime::ASM::beq(.L_80479AC8);
/*80479A8C 0047688C*/ PPC::Runtime::ASM::bge(.L_80479AD0);
/*80479A90 00476890*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x1);
/*80479A94 00476894*/ PPC::Runtime::ASM::bge(.L_80479A9C);
/*80479A98 00476898*/ PPC::Runtime::ASM::b(.L_80479AD0);
RUNTIME_PPC_JUMP_LABEL(.L_80479A9C, 0x80479A9C) //this is a jump label
/*80479A9C 0047689C*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*80479AA0 004768A0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x324, context->r29));
/*80479AA4 004768A4*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x328);
/*80479AA8 004768A8*/ PPC::Runtime::ASM::bl(fn_OSCancelAlarm);
/*80479AAC 004768AC*/ PPC::Runtime::ASM::lis(context->r3, fn_RxmitHandler @ Get_MemoryOffset_HighBit);
/*80479AB0 004768B0*/ PPC::Runtime::ASM::addi(context->r7, context->r3, fn_RxmitHandler @ Get_MemoryOffset_LowBit);
/*80479AB4 004768B4*/ PPC::Runtime::ASM::addi(context->r6, context->r30, 0x0);
/*80479AB8 004768B8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x0);
/*80479ABC 004768BC*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0x328);
/*80479AC0 004768C0*/ PPC::Runtime::ASM::bl(OSSetAlarm);
/*80479AC4 004768C4*/ PPC::Runtime::ASM::b(.L_80479AD0);
RUNTIME_PPC_JUMP_LABEL(.L_80479AC8, 0x80479AC8) //this is a jump label
/*80479AC8 004768C8*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80479ACC 004768CC*/ PPC::Runtime::ASM::bl(fn_DHCPRequest);
RUNTIME_PPC_JUMP_LABEL(.L_80479AD0, 0x80479AD0) //this is a jump label
/*80479AD0 004768D0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80479AD4, 0x80479AD4) //this is a jump label
/*80479AD4 004768D4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*80479AD8 004768D8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*80479ADC 004768DC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*80479AE0 004768E0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80479AE4 004768E4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*80479AE8 004768E8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80479AEC 004768EC*/ PPC::Runtime::ASM::blr();
}