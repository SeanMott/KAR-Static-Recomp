//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D8B40(PPC::Runtime::GCContext* context)
{
/*800D8B40 000D5940*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D8B44 000D5944*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D8B48 000D5948*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D8B4C 000D594C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D8B50 000D5950*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800D8B54 000D5954*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D8B58 000D5958*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D8B5C 000D595C*/ PPC::Runtime::ASM::beq(.L_800D8B64);
/*800D8B60 000D5960*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800D8B64, 0x800D8B64) //this is a jump label
/*800D8B64 000D5964*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800D8B68 000D5968*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D8B6C 000D596C*/ PPC::Runtime::ASM::beq(.L_800D8B74);
/*800D8B70 000D5970*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800D8B74, 0x800D8B74) //this is a jump label
/*800D8B74 000D5974*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800D8B78 000D5978*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D8B7C 000D597C*/ PPC::Runtime::ASM::beq(.L_800D8B84);
/*800D8B80 000D5980*/ PPC::Runtime::ASM::bl(fn_HSD_Free);
RUNTIME_PPC_JUMP_LABEL(.L_800D8B84, 0x800D8B84) //this is a jump label
/*800D8B84 000D5984*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D8B88 000D5988*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D8B8C 000D598C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D8B90 000D5990*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D8B94 000D5994*/ PPC::Runtime::ASM::blr();
}