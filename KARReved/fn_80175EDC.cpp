//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"



void fn_80175EDC(PPC::Runtime::GCContext* context)
{
/*80175EDC 00172CDC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80175EE0 00172CE0*/ PPC::Runtime::ASM::mflr(context->r0);
/*80175EE4 00172CE4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80175EE8 00172CE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80175EEC 00172CEC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80175EF0 00172CF0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80175EF4 00172CF4*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80175EF8 00172CF8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*80175EFC 00172CFC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xcd8, context->r3));
/*80175F00 00172D00*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80175F04 00172D04*/ PPC::Runtime::ASM::beq(.L_80175F30);
/*80175F08 00172D08*/ PPC::Runtime::ASM::extsb(context->r0, context->r30);
/*80175F0C 00172D0C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*80175F10 00172D10*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x78);
/*80175F14 00172D14*/ PPC::Runtime::ASM::add(context->r4, context->r3, context->r0);
/*80175F18 00172D18*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r4));
/*80175F1C 00172D1C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r4));
/*80175F20 00172D20*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*80175F24 00172D24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*80175F28 00172D28*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r4));
/*80175F2C 00172D2C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80175F30, 0x80175F30) //this is a jump label
/*80175F30 00172D30*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80175F34 00172D34*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80175F38 00172D38*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80175F3C 00172D3C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80175F40 00172D40*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80175F44 00172D44*/ PPC::Runtime::ASM::blr();
}