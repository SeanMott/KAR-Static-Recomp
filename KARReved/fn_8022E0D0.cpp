//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022E0D0(PPC::Runtime::GCContext* context)
{
/*8022E0D0 0022AED0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8022E0D4 0022AED4*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022E0D8 0022AED8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022E0DC 0022AEDC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022E0E0 0022AEE0*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8022E0E4 0022AEE4*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x5);
/*8022E0E8 0022AEE8*/ PPC::Runtime::ASM::blt(.L_8022E104);
/*8022E0EC 0022AEEC*/ PPC::Runtime::ASM::lis(context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_HighBit);
/*8022E0F0 0022AEF0*/ PPC::Runtime::ASM::lis(context->r5, lbl_804B4CF0 @ Get_MemoryOffset_HighBit);
/*8022E0F4 0022AEF4*/ PPC::Runtime::ASM::addi(context->r3, context->r3, String_ "plclearcheckerlib." Get_MemoryOffset_LowBit);
/*8022E0F8 0022AEF8*/ PPC::Runtime::ASM::li(context->r4, 0xbe);
/*8022E0FC 0022AEFC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_804B4CF0 @ Get_MemoryOffset_LowBit);
/*8022E100 0022AF00*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022E104, 0x8022E104) //this is a jump label
/*8022E104 0022AF04*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8022E108 0022AF08*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022E10C 0022AF0C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x854, context->r3));
/*8022E110 0022AF10*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8022E114 0022AF14*/ PPC::Runtime::ASM::extrwi(context->r3, context->r0, 1, 26);
/*8022E118 0022AF18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8022E11C 0022AF1C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022E120 0022AF20*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8022E124 0022AF24*/ PPC::Runtime::ASM::blr();
}