//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8018CF64.hpp"
#include "fn_801D6FD0.hpp"
#include "fn_801D706C.hpp"
#include "fn_801D7118.hpp"
#include "fn_801D71EC.hpp"
#include "fn_801D7248.hpp"
#include "fn_801D72A4.hpp"
#include "fn_801DAAC4.hpp"
#include "fn_801DAD58.hpp"
#include "fn_checkIfCollideWithPowerUp.hpp"
#include "fn_8018D878.hpp"
#include "fn_801D7308.hpp"



void fn_801C67A0(PPC::Runtime::GCContext* context)
{
/*801C67A0 001C35A0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C67A4 001C35A4*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C67A8 001C35A8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C67AC 001C35AC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C67B0 001C35B0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C67B4 001C35B4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc31, context->r31));
/* 801C67B8 001C35B8  54 00 CF FF */ extrwi. context->r0 , context->r0 , 1 , 24
/*801C67BC 001C35BC*/ PPC::Runtime::ASM::bne(.L_801C6820);
/*801C67C0 001C35C0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801C67C4 001C35C4*/ PPC::Runtime::ASM::bl(fn_8018CF64);
/*801C67C8 001C35C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67CC 001C35CC*/ PPC::Runtime::ASM::bl(fn_801D6FD0);
/*801C67D0 001C35D0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67D4 001C35D4*/ PPC::Runtime::ASM::bl(fn_801D706C);
/*801C67D8 001C35D8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67DC 001C35DC*/ PPC::Runtime::ASM::bl(fn_801D7118);
/*801C67E0 001C35E0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67E4 001C35E4*/ PPC::Runtime::ASM::bl(fn_801D71EC);
/*801C67E8 001C35E8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67EC 001C35EC*/ PPC::Runtime::ASM::bl(fn_801D7248);
/*801C67F0 001C35F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67F4 001C35F4*/ PPC::Runtime::ASM::bl(fn_801D72A4);
/*801C67F8 001C35F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C67FC 001C35FC*/ PPC::Runtime::ASM::bl(fn_801DAAC4);
/*801C6800 001C3600*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C6804 001C3604*/ PPC::Runtime::ASM::bl(fn_801DAD58);
/*801C6808 001C3608*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C680C 001C360C*/ PPC::Runtime::ASM::bl(fn_checkIfCollideWithPowerUp);
/*801C6810 001C3610*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x660, context->r31));
/*801C6814 001C3614*/ PPC::Runtime::ASM::bl(fn_8018D878);
/*801C6818 001C3618*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C681C 001C361C*/ PPC::Runtime::ASM::bl(fn_801D7308);
RUNTIME_PPC_JUMP_LABEL(.L_801C6820, 0x801C6820) //this is a jump label
/*801C6820 001C3620*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C6824 001C3624*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C6828 001C3628*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C682C 001C362C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C6830 001C3630*/ PPC::Runtime::ASM::blr();
}