//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138BA4.hpp"
#include "fn_80138BA4.hpp"



void fn_8014AE10(PPC::Runtime::GCContext* context)
{
/*8014AE10 00147C10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8014AE14 00147C14*/ PPC::Runtime::ASM::mflr(context->r0);
/*8014AE18 00147C18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014AE1C 00147C1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014AE20 00147C20*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8014AE24 00147C24*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8014AE28 00147C28*/ PPC::Runtime::ASM::extsb(context->r0, context->r31);
/*8014AE2C 00147C2C*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 2);
/*8014AE30 00147C30*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*8014AE34 00147C34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x398, context->r3));
/*8014AE38 00147C38*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8014AE3C 00147C3C*/ PPC::Runtime::ASM::beq(.L_8014AE68);
/*8014AE40 00147C40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8014AE44 00147C44*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8014AE48 00147C48*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0590 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014AE4C 00147C4C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*8014AE50 00147C50*/ PPC::Runtime::ASM::bl(fn_80138BA4);
/*8014AE54 00147C54*/ PPC::Runtime::ASM::lbz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8014AE58 00147C58*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*8014AE5C 00147C5C*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0594 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8014AE60 00147C60*/ PPC::Runtime::ASM::extsb(context->r4, context->r4);
/*8014AE64 00147C64*/ PPC::Runtime::ASM::bl(fn_80138BA4);
RUNTIME_PPC_JUMP_LABEL(.L_8014AE68, 0x8014AE68) //this is a jump label
/*8014AE68 00147C68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8014AE6C 00147C6C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8014AE70 00147C70*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8014AE74 00147C74*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8014AE78 00147C78*/ PPC::Runtime::ASM::blr();
}