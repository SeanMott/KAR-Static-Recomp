//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "OSDisableInterrupts.hpp"
#include "OSRestoreInterrupts.hpp"



void fn_8046F538(PPC::Runtime::GCContext* context)
{
/*8046F538 0046C338*/ PPC::Runtime::ASM::mflr(context->r0);
/*8046F53C 0046C33C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r1));
/*8046F540 0046C340*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x28, context->r1));
/*8046F544 0046C344*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046F548 0046C348*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046F54C 0046C34C*/ PPC::Runtime::ASM::addi(context->r30, context->r5, 0x0);
/*8046F550 0046C350*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046F554 0046C354*/ PPC::Runtime::ASM::addi(context->r29, context->r4, 0x0);
/*8046F558 0046C358*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046F55C 0046C35C*/ PPC::Runtime::ASM::addi(context->r28, context->r3, 0x0);
/*8046F560 0046C360*/ PPC::Runtime::ASM::bl(OSDisableInterrupts);
/*8046F564 0046C364*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r28));
/*8046F568 0046C368*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x11);
/*8046F56C 0046C36C*/ PPC::Runtime::ASM::beq(.L_8046F578);
/*8046F570 0046C370*/ PPC::Runtime::ASM::li(context->r31, -0xc);
/*8046F574 0046C374*/ PPC::Runtime::ASM::b(.L_8046F59C);
RUNTIME_PPC_JUMP_LABEL(.L_8046F578, 0x8046F578) //this is a jump label
/*8046F578 0046C378*/ PPC::Runtime::ASM::cmplwi(context->r30, 0x0);
/*8046F57C 0046C37C*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*8046F580 0046C380*/ PPC::Runtime::ASM::beq(.L_8046F58C);
/*8046F584 0046C384*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe8, context->r28));
/*8046F588 0046C388*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8046F58C, 0x8046F58C) //this is a jump label
/*8046F58C 0046C38C*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*8046F590 0046C390*/ PPC::Runtime::ASM::beq(.L_8046F59C);
/*8046F594 0046C394*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe4, context->r28));
/*8046F598 0046C398*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
RUNTIME_PPC_JUMP_LABEL(.L_8046F59C, 0x8046F59C) //this is a jump label
/*8046F59C 0046C39C*/ PPC::Runtime::ASM::bl(OSRestoreInterrupts);
/*8046F5A0 0046C3A0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8046F5A4 0046C3A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*8046F5A8 0046C3A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8046F5AC 0046C3AC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*8046F5B0 0046C3B0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8046F5B4 0046C3B4*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8046F5B8 0046C3B8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x28);
/*8046F5BC 0046C3BC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8046F5C0 0046C3C0*/ PPC::Runtime::ASM::blr();
}