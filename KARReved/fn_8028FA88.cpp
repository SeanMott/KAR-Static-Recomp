//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028FA88(PPC::Runtime::GCContext* context)
{
/*8028FA88 0028C888*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8028FA8C 0028C88C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028FA90 0028C890*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028FA94 0028C894*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 8028FA98 0028C898  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*8028FA9C 0028C89C*/ PPC::Runtime::ASM::beq(.L_8028FAC0);
/*8028FAA0 0028C8A0*/ PPC::Runtime::ASM::lis(context->r5, lbl_804BE3A4 @ Get_MemoryOffset_HighBit);
/*8028FAA4 0028C8A4*/ PPC::Runtime::ASM::extsh.(context->r0, context->r4);
/*8028FAA8 0028C8A8*/ PPC::Runtime::ASM::addi(context->r4, context->r5, lbl_804BE3A4 @ Get_MemoryOffset_LowBit);
/*8028FAAC 0028C8AC*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*8028FAB0 0028C8B0*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*8028FAB4 0028C8B4*/ PPC::Runtime::ASM::stw(context->r0, STRUCT_BYTE4_COUNT_1805DDBAC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8028FAB8 0028C8B8*/ PPC::Runtime::ASM::ble(.L_8028FAC0);
/*8028FABC 0028C8BC*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028FAC0, 0x8028FAC0) //this is a jump label
/*8028FAC0 0028C8C0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028FAC4 0028C8C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8028FAC8 0028C8C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028FACC 0028C8CC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028FAD0 0028C8D0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028FAD4 0028C8D4*/ PPC::Runtime::ASM::blr();
}