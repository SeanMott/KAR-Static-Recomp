//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800E5798.hpp"



void fn_800E63B0(PPC::Runtime::GCContext* context)
{
/*800E63B0 000E31B0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800E63B4 000E31B4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E63B8 000E31B8*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0xe4);
/*800E63BC 000E31BC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E63C0 000E31C0*/ PPC::Runtime::ASM::bl(fn_800E5798);
/*800E63C4 000E31C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E63C8 000E31C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E63CC 000E31CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800E63D0 000E31D0*/ PPC::Runtime::ASM::blr();
}