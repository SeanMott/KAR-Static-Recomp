//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_8028BDEC(PPC::Runtime::GCContext* context)
{
/*8028BDEC 00288BEC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8028BDF0 00288BF0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8028BDF4 00288BF4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028BDF8 00288BF8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028BDFC 00288BFC*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*8028BE00 00288C00*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 8028BE04 00288C04  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*8028BE08 00288C08*/ PPC::Runtime::ASM::beq(.L_8028BE50);
/*8028BE0C 00288C0C*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BE490 @ Get_MemoryOffset_HighBit);
/*8028BE10 00288C10*/ PPC::Runtime::ASM::addic.(context->r0, context->r30, 0x8);
/*8028BE14 00288C14*/ PPC::Runtime::ASM::addi(context->r0, context->r3, lbl_804BE490 @ Get_MemoryOffset_LowBit);
/*8028BE18 00288C18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*8028BE1C 00288C1C*/ PPC::Runtime::ASM::beq(.L_8028BE40);
/*8028BE20 00288C20*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8028BE24 00288C24*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8028BE28 00288C28*/ PPC::Runtime::ASM::beq(.L_8028BE40);
/*8028BE2C 00288C2C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8028BE30 00288C30*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*8028BE34 00288C34*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r12));
/*8028BE38 00288C38*/ PPC::Runtime::ASM::mtctr(context->r12);
/*8028BE3C 00288C3C*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_8028BE40, 0x8028BE40) //this is a jump label
/*8028BE40 00288C40*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*8028BE44 00288C44*/ PPC::Runtime::ASM::ble(.L_8028BE50);
/*8028BE48 00288C48*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028BE4C 00288C4C*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_8028BE50, 0x8028BE50) //this is a jump label
/*8028BE50 00288C50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8028BE54 00288C54*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8028BE58 00288C58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8028BE5C 00288C5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8028BE60 00288C60*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8028BE64 00288C64*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8028BE68 00288C68*/ PPC::Runtime::ASM::blr();
}