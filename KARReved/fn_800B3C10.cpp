//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800B3C10(PPC::Runtime::GCContext* context)
{
/*800B3C10 000B0A10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800B3C14 000B0A14*/ PPC::Runtime::ASM::mflr(context->r0);
/*800B3C18 000B0A18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B3C1C 000B0A1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/* 800B3C20 000B0A20  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*800B3C24 000B0A24*/ PPC::Runtime::ASM::blt(.L_800B3C30);
/*800B3C28 000B0A28*/ PPC::Runtime::ASM::cmpwi(context->r31, 0x20);
/*800B3C2C 000B0A2C*/ PPC::Runtime::ASM::blt(.L_800B3C38);
RUNTIME_PPC_JUMP_LABEL(.L_800B3C30, 0x800B3C30) //this is a jump label
/*800B3C30 000B0A30*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800B3C34 000B0A34*/ PPC::Runtime::ASM::b(.L_800B3C4C);
RUNTIME_PPC_JUMP_LABEL(.L_800B3C38, 0x800B3C38) //this is a jump label
/*800B3C38 000B0A38*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B3C3C 000B0A3C*/ PPC::Runtime::ASM::slwi(context->r0, context->r31, 2);
/*800B3C40 000B0A40*/ PPC::Runtime::ASM::addi(context->r3, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B3C44 000B0A44*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800B3C48 000B0A48*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B3C4C, 0x800B3C4C) //this is a jump label
/*800B3C4C 000B0A4C*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800B3C50 000B0A50*/ PPC::Runtime::ASM::beq(.L_800B3C78);
/*800B3C54 000B0A54*/ PPC::Runtime::ASM::bl(fn_80428F64);
/*800B3C58 000B0A58*/ PPC::Runtime::ASM::lis(context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_HighBit);
/*800B3C5C 000B0A5C*/ PPC::Runtime::ASM::slwi(context->r5, context->r31, 2);
/*800B3C60 000B0A60*/ PPC::Runtime::ASM::addi(context->r0, context->r3, Struct_PlayerDataStruct_MayebASkipAddress @ Get_MemoryOffset_LowBit);
/*800B3C64 000B0A64*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800B3C68 000B0A68*/ PPC::Runtime::ASM::add(context->r3, context->r0, context->r5);
/*800B3C6C 000B0A6C*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
/*800B3C70 000B0A70*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r3));
/*800B3C74 000B0A74*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b0, context->r3));
RUNTIME_PPC_JUMP_LABEL(.L_800B3C78, 0x800B3C78) //this is a jump label
/*800B3C78 000B0A78*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800B3C7C 000B0A7C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800B3C80 000B0A80*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800B3C84 000B0A84*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800B3C88 000B0A88*/ PPC::Runtime::ASM::blr();
}