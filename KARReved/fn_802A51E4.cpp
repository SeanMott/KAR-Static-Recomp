//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802A5264.hpp"
#include "fn_802851B0.hpp"



void fn_802A51E4(PPC::Runtime::GCContext* context)
{
/*802A51E4 002A1FE4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*802A51E8 002A1FE8*/ PPC::Runtime::ASM::mflr(context->r0);
/*802A51EC 002A1FEC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A51F0 002A1FF0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A51F4 002A1FF4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*802A51F8 002A1FF8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/* 802A51FC 002A1FFC  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*802A5200 002A2000*/ PPC::Runtime::ASM::beq(.L_802A5248);
/*802A5204 002A2004*/ PPC::Runtime::ASM::lis(context->r4, lbl_804C36A0 @ Get_MemoryOffset_HighBit);
/*802A5208 002A2008*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x118);
/*802A520C 002A200C*/ PPC::Runtime::ASM::addi(context->r6, context->r4, lbl_804C36A0 @ Get_MemoryOffset_LowBit);
/*802A5210 002A2010*/ PPC::Runtime::ASM::li(context->r4, -0x1);
/*802A5214 002A2014*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*802A5218 002A2018*/ PPC::Runtime::ASM::addi(context->r5, context->r6, 0x10);
/*802A521C 002A201C*/ PPC::Runtime::ASM::addi(context->r0, context->r6, 0x58);
/*802A5220 002A2020*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*802A5224 002A2024*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r30));
/*802A5228 002A2028*/ PPC::Runtime::ASM::bl(fn_802A5264);
/*802A522C 002A202C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A5230 002A2030*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*802A5234 002A2034*/ PPC::Runtime::ASM::bl(fn_802851B0);
/*802A5238 002A2038*/ PPC::Runtime::ASM::extsh.(context->r0, context->r31);
/*802A523C 002A203C*/ PPC::Runtime::ASM::ble(.L_802A5248);
/*802A5240 002A2040*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A5244 002A2044*/ PPC::Runtime::ASM::bl(fn_8038CB78);
RUNTIME_PPC_JUMP_LABEL(.L_802A5248, 0x802A5248) //this is a jump label
/*802A5248 002A2048*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802A524C 002A204C*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*802A5250 002A2050*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802A5254 002A2054*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802A5258 002A2058*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802A525C 002A205C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802A5260 002A2060*/ PPC::Runtime::ASM::blr();
}