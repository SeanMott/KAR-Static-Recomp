//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"
#include "fn_gmGetGlobalP.hpp"
#include "fn_8000B2DC.hpp"



void fn_8000DE88(PPC::Runtime::GCContext* context)
{
/*8000DE88 0000AC88*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x50, context->r1));
/*8000DE8C 0000AC8C*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000DE90 0000AC90*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8000DE94 0000AC94*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8000DE98 0000AC98*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8000DE9C 0000AC9C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8000DEA0 0000ACA0*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000DEA4 0000ACA4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000DEA8 0000ACA8*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000DEAC 0000ACAC*/ PPC::Runtime::ASM::addi(context->r29, context->r1, 0x8);
/*8000DEB0 0000ACB0*/ PPC::Runtime::ASM::li(context->r0, 0x7);
/*8000DEB4 0000ACB4*/ PPC::Runtime::ASM::mr(context->r5, context->r29);
/*8000DEB8 0000ACB8*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8000DEBC 0000ACBC*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*8000DEC0 0000ACC0*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000DEC4 0000ACC4*/ PPC::Runtime::ASM::mtctr(context->r0);
/*8000DEC8 0000ACC8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8000DECC, 0x8000DECC) //this is a jump label
/*8000DECC 0000ACCC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x21, context->r31));
/*8000DED0 0000ACD0*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DED4 0000ACD4*/ PPC::Runtime::ASM::cmpw(context->r6, context->r0);
/*8000DED8 0000ACD8*/ PPC::Runtime::ASM::beq(.L_8000DF24);
/*8000DEDC 0000ACDC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r31));
/*8000DEE0 0000ACE0*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DEE4 0000ACE4*/ PPC::Runtime::ASM::cmpw(context->r6, context->r0);
/*8000DEE8 0000ACE8*/ PPC::Runtime::ASM::beq(.L_8000DF24);
/*8000DEEC 0000ACEC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23, context->r31));
/*8000DEF0 0000ACF0*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DEF4 0000ACF4*/ PPC::Runtime::ASM::cmpw(context->r6, context->r0);
/*8000DEF8 0000ACF8*/ PPC::Runtime::ASM::beq(.L_8000DF24);
/*8000DEFC 0000ACFC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*8000DF00 0000AD00*/ PPC::Runtime::ASM::extsb(context->r0, context->r0);
/*8000DF04 0000AD04*/ PPC::Runtime::ASM::cmpw(context->r6, context->r0);
/*8000DF08 0000AD08*/ PPC::Runtime::ASM::beq(.L_8000DF24);
/*8000DF0C 0000AD0C*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*8000DF10 0000AD10*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
/*8000DF14 0000AD14*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000DF18 0000AD18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r5));
/*8000DF1C 0000AD1C*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x8);
/*8000DF20 0000AD20*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
RUNTIME_PPC_JUMP_LABEL(.L_8000DF24, 0x8000DF24) //this is a jump label
/*8000DF24 0000AD24*/ PPC::Runtime::ASM::addi(context->r6, context->r6, 0x1);
/*8000DF28 0000AD28*/ PPC::Runtime::ASM::bdnz(.L_8000DECC);
/*8000DF2C 0000AD2C*/ PPC::Runtime::ASM::bl(fn_HSD_Randi);
/*8000DF30 0000AD30*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8000DF34 0000AD34*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8000DF38 0000AD38*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*8000DF3C 0000AD3C*/ PPC::Runtime::ASM::mtctr(context->r30);
/*8000DF40 0000AD40*/ PPC::Runtime::ASM::cmpwi(context->r30, 0x0);
/*8000DF44 0000AD44*/ PPC::Runtime::ASM::ble(.L_8000DF74);
RUNTIME_PPC_JUMP_LABEL(.L_8000DF48, 0x8000DF48) //this is a jump label
/*8000DF48 0000AD48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*8000DF4C 0000AD4C*/ PPC::Runtime::ASM::add(context->r6, context->r6, context->r0);
/*8000DF50 0000AD50*/ PPC::Runtime::ASM::cmpw(context->r3, context->r6);
/*8000DF54 0000AD54*/ PPC::Runtime::ASM::bge(.L_8000DF68);
/*8000DF58 0000AD58*/ PPC::Runtime::ASM::slwi(context->r0, context->r4, 3);
/*8000DF5C 0000AD5C*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x8);
/*8000DF60 0000AD60*/ PPC::Runtime::ASM::lwzx(context->r5, context->r3, context->r0);
/*8000DF64 0000AD64*/ PPC::Runtime::ASM::b(.L_8000DF74);
RUNTIME_PPC_JUMP_LABEL(.L_8000DF68, 0x8000DF68) //this is a jump label
/*8000DF68 0000AD68*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x8);
/*8000DF6C 0000AD6C*/ PPC::Runtime::ASM::addi(context->r4, context->r4, 0x1);
/*8000DF70 0000AD70*/ PPC::Runtime::ASM::bdnz(.L_8000DF48);
RUNTIME_PPC_JUMP_LABEL(.L_8000DF74, 0x8000DF74) //this is a jump label
/*8000DF74 0000AD74*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23, context->r31));
/*8000DF78 0000AD78*/ PPC::Runtime::ASM::extsb(context->r3, context->r5);
/*8000DF7C 0000AD7C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r31));
/*8000DF80 0000AD80*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r31));
/*8000DF84 0000AD84*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x23, context->r31));
/*8000DF88 0000AD88*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x21, context->r31));
/*8000DF8C 0000AD8C*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x22, context->r31));
/*8000DF90 0000AD90*/ PPC::Runtime::ASM::stb(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x21, context->r31));
/*8000DF94 0000AD94*/ PPC::Runtime::ASM::bl(fn_8000B2DC);
/*8000DF98 0000AD98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r1));
/*8000DF9C 0000AD9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r1));
/*8000DFA0 0000ADA0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r1));
/*8000DFA4 0000ADA4*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*8000DFA8 0000ADA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000DFAC 0000ADAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x50);
/*8000DFB0 0000ADB0*/ PPC::Runtime::ASM::blr();
}