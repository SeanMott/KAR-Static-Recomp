//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80112044.hpp"
#include "fn_8011582C.hpp"



void fn_8012D344(PPC::Runtime::GCContext* context)
{
/*8012D344 0012A144*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8012D348 0012A148*/ PPC::Runtime::ASM::mflr(context->r0);
/*8012D34C 0012A14C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012D350 0012A150*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012D354 0012A154*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012D358 0012A158*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012D35C 0012A15C*/ PPC::Runtime::ASM::bl(fn_80112044);
/*8012D360 0012A160*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0xc8c);
/*8012D364 0012A164*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8012D368 0012A168*/ PPC::Runtime::ASM::li(context->r31, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8012D36C, 0x8012D36C) //this is a jump label
/*8012D36C 0012A16C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*8012D370 0012A170*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8012D374 0012A174*/ PPC::Runtime::ASM::beq(.L_8012D380);
/*8012D378 0012A178*/ PPC::Runtime::ASM::bl(fn_8011582C);
/*8012D37C 0012A17C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_8012D380, 0x8012D380) //this is a jump label
/*8012D380 0012A180*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x1);
/*8012D384 0012A184*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8012D388 0012A188*/ PPC::Runtime::ASM::cmpwi(context->r29, 0x4);
/*8012D38C 0012A18C*/ PPC::Runtime::ASM::blt(.L_8012D36C);
/*8012D390 0012A190*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8012D394 0012A194*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8012D398 0012A198*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8012D39C 0012A19C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8012D3A0 0012A1A0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8012D3A4 0012A1A4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8012D3A8 0012A1A8*/ PPC::Runtime::ASM::blr();
}