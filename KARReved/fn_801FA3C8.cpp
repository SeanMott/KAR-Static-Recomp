//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_chargeLogic?.hpp"



void fn_801FA3C8(PPC::Runtime::GCContext* context)
{
/*801FA3C8 001F71C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801FA3CC 001F71CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801FA3D0 001F71D0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E21A4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA3D4 001F71D4*/ PPC::Runtime::ASM::li(context->r4, 0x13);
/*801FA3D8 001F71D8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA3DC 001F71DC*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*801FA3E0 001F71E0*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E21A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA3E4 001F71E4*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*801FA3E8 001F71E8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA3EC 001F71EC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801FA3F0 001F71F0*/ PPC::Runtime::ASM::bl(fn_chargeLogic?);
/*801FA3F4 001F71F4*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801FA3F8 001F71F8*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*801FA3FC 001F71FC*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 0, 31, 31);
/*801FA400 001F7200*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E21A8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801FA404 001F7204*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r31));
/*801FA408 001F7208*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801FA40C 001F720C*/ PPC::Runtime::ASM::extrwi(context->r0, context->r3, 2, 26);
/*801FA410 001F7210*/ PPC::Runtime::ASM::ori(context->r0, context->r0, 0x1);
/*801FA414 001F7214*/ PPC::Runtime::ASM::rlwimi(context->r3, context->r0, 4, 26, 27);
/*801FA418 001F7218*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc39, context->r31));
/*801FA41C 001F721C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc34, context->r31));
/*801FA420 001F7220*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*801FA424 001F7224*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc34, context->r31));
/*801FA428 001F7228*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1b48, context->r31));
/*801FA42C 001F722C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801FA430 001F7230*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801FA434 001F7234*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801FA438 001F7238*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801FA43C 001F723C*/ PPC::Runtime::ASM::blr();
}