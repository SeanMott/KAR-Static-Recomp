//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80191680.hpp"
#include "fn_801C02B8.hpp"



void fn_801BDE00(PPC::Runtime::GCContext* context)
{
/*801BDE00 001BAC00*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801BDE04 001BAC04*/ PPC::Runtime::ASM::mflr(context->r0);
/*801BDE08 001BAC08*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BDE0C 001BAC0C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BDE10 001BAC10*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801BDE14 001BAC14*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x910, context->r3));
/*801BDE18 001BAC18*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*801BDE1C 001BAC1C*/ PPC::Runtime::ASM::beq(.L_801BDE28);
/*801BDE20 001BAC20*/ PPC::Runtime::ASM::mtctr(context->r12);
/*801BDE24 001BAC24*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_801BDE28, 0x801BDE28) //this is a jump label
/*801BDE28 001BAC28*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BDE2C 001BAC2C*/ PPC::Runtime::ASM::bl(fn_80191680);
/*801BDE30 001BAC30*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801BDE34 001BAC34*/ PPC::Runtime::ASM::beq(.L_801BDE44);
/*801BDE38 001BAC38*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801BDE3C 001BAC3C*/ PPC::Runtime::ASM::bl(fn_801C02B8);
/*801BDE40 001BAC40*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801BDE44, 0x801BDE44) //this is a jump label
/*801BDE44 001BAC44*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801BDE48 001BAC48*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801BDE4C 001BAC4C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801BDE50 001BAC50*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801BDE54 001BAC54*/ PPC::Runtime::ASM::blr();
}