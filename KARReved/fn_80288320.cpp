//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_802889EC.hpp"



void fn_80288320(PPC::Runtime::GCContext* context)
{
/*80288320 00285120*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80288324 00285124*/ PPC::Runtime::ASM::mflr(context->r0);
/*80288328 00285128*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8028832C 0028512C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80288330 00285130*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80288334 00285134*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC50C @ Get_MemoryOffset_HighBit);
/*80288338 00285138*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*8028833C 0028513C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BC50C @ Get_MemoryOffset_LowBit);
/*80288340 00285140*/ PPC::Runtime::ASM::cntlzw(context->r0, context->r0);
/*80288344 00285144*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 5);
/*80288348 00285148*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*8028834C 0028514C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r31));
/*80288350 00285150*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80288354 00285154*/ PPC::Runtime::ASM::beq(.L_80288360);
/*80288358 00285158*/ PPC::Runtime::ASM::lis(context->r3, lbl_804BC500 @ Get_MemoryOffset_HighBit);
/*8028835C 0028515C*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_804BC500 @ Get_MemoryOffset_LowBit);
RUNTIME_PPC_JUMP_LABEL(.L_80288360, 0x80288360) //this is a jump label
/*80288360 00285160*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*80288364 00285164*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80288368 00285168*/ PPC::Runtime::ASM::beq(.L_80288398);
/*8028836C 0028516C*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DDBB4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80288370 00285170*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80288374 00285174*/ PPC::Runtime::ASM::li(context->r5, lbl_805D74B0 @ Get_MemoryOffset_SDA21);
/*80288378 00285178*/ PPC::Runtime::ASM::li(context->r6, lbl_805D74A8 @ Get_MemoryOffset_SDA21);
/*8028837C 0028517C*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*80288380 00285180*/ PPC::Runtime::ASM::bl(fn_803AD760);
/*80288384 00285184*/ PPC::Runtime::ASM::addi(context->r3, context->r3, 0x4);
/*80288388 00285188*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8028838C 0028518C*/ PPC::Runtime::ASM::bl(fn_802889EC);
/*80288390 00285190*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x4);
/*80288394 00285194*/ PPC::Runtime::ASM::b(.L_8028839C);
RUNTIME_PPC_JUMP_LABEL(.L_80288398, 0x80288398) //this is a jump label
/*80288398 00285198*/ PPC::Runtime::ASM::li(context->r0, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8028839C, 0x8028839C) //this is a jump label
/*8028839C 0028519C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r31));
/*802883A0 002851A0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*802883A4 002851A4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*802883A8 002851A8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802883AC 002851AC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*802883B0 002851B0*/ PPC::Runtime::ASM::blr();
}