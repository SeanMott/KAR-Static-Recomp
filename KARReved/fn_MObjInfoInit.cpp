//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_hsdInitClassInfo.hpp"
#include "fn_MObjRelease.hpp"
#include "fn_MObjAmnesia.hpp"
#include "fn_HSD_MObjSetup.hpp"
#include "fn_HSD_MObjUnset.hpp"
#include "fn_MObjLoad.hpp"
#include "fn_MObjMakeTExp.hpp"
#include "fn_MObjSetupTev.hpp"
#include "fn_MObjUpdateFunc?.hpp"
#include "fn_MObjRelease.hpp"
#include "fn_MObjAmnesia.hpp"
#include "fn_HSD_MObjSetup.hpp"
#include "fn_HSD_MObjUnset.hpp"
#include "fn_MObjLoad.hpp"
#include "fn_MObjMakeTExp.hpp"
#include "fn_MObjSetupTev.hpp"
#include "fn_MObjUpdateFunc?.hpp"



void fn_MObjInfoInit(PPC::Runtime::GCContext* context)
{
/*803FB08C 003F7E8C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*803FB090 003F7E90*/ PPC::Runtime::ASM::mflr(context->r0);
/*803FB094 003F7E94*/ PPC::Runtime::ASM::lis(context->r4, lbl_80502AC0 @ Get_MemoryOffset_HighBit);
/*803FB098 003F7E98*/ PPC::Runtime::ASM::lis(context->r3, lbl_805047A8 @ Get_MemoryOffset_HighBit);
/*803FB09C 003F7E9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FB0A0 003F7EA0*/ PPC::Runtime::ASM::li(context->r7, 0x54);
/*803FB0A4 003F7EA4*/ PPC::Runtime::ASM::li(context->r8, 0x20);
/*803FB0A8 003F7EA8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FB0AC 003F7EAC*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_80502AC0 @ Get_MemoryOffset_LowBit);
/*803FB0B0 003F7EB0*/ PPC::Runtime::ASM::addi(context->r4, context->r3, lbl_805047A8 @ Get_MemoryOffset_LowBit);
/*803FB0B4 003F7EB4*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x0);
/*803FB0B8 003F7EB8*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x148);
/*803FB0BC 003F7EBC*/ PPC::Runtime::ASM::addi(context->r6, context->r31, 0x160);
/*803FB0C0 003F7EC0*/ PPC::Runtime::ASM::bl(fn_hsdInitClassInfo);
/*803FB0C4 003F7EC4*/ PPC::Runtime::ASM::lis(context->r10, fn_MObjRelease @ Get_MemoryOffset_HighBit);
/*803FB0C8 003F7EC8*/ PPC::Runtime::ASM::lis(context->r9, fn_MObjAmnesia @ Get_MemoryOffset_HighBit);
/*803FB0CC 003F7ECC*/ PPC::Runtime::ASM::lis(context->r8, fn_HSD_MObjSetup @ Get_MemoryOffset_HighBit);
/*803FB0D0 003F7ED0*/ PPC::Runtime::ASM::lis(context->r7, fn_HSD_MObjUnset @ Get_MemoryOffset_HighBit);
/*803FB0D4 003F7ED4*/ PPC::Runtime::ASM::lis(context->r6, fn_MObjLoad @ Get_MemoryOffset_HighBit);
/*803FB0D8 003F7ED8*/ PPC::Runtime::ASM::lis(context->r5, fn_MObjMakeTExp @ Get_MemoryOffset_HighBit);
/*803FB0DC 003F7EDC*/ PPC::Runtime::ASM::lis(context->r4, fn_MObjSetupTev @ Get_MemoryOffset_HighBit);
/*803FB0E0 003F7EE0*/ PPC::Runtime::ASM::lis(context->r3, fn_MObjUpdateFunc? @ Get_MemoryOffset_HighBit);
/*803FB0E4 003F7EE4*/ PPC::Runtime::ASM::addi(context->r11, context->r10, fn_MObjRelease @ Get_MemoryOffset_LowBit);
/*803FB0E8 003F7EE8*/ PPC::Runtime::ASM::addi(context->r10, context->r31, 0x0);
/*803FB0EC 003F7EEC*/ PPC::Runtime::ASM::addi(context->r9, context->r9, fn_MObjAmnesia @ Get_MemoryOffset_LowBit);
/*803FB0F0 003F7EF0*/ PPC::Runtime::ASM::addi(context->r8, context->r8, fn_HSD_MObjSetup @ Get_MemoryOffset_LowBit);
/*803FB0F4 003F7EF4*/ PPC::Runtime::ASM::addi(context->r7, context->r7, fn_HSD_MObjUnset @ Get_MemoryOffset_LowBit);
/*803FB0F8 003F7EF8*/ PPC::Runtime::ASM::addi(context->r6, context->r6, fn_MObjLoad @ Get_MemoryOffset_LowBit);
/*803FB0FC 003F7EFC*/ PPC::Runtime::ASM::addi(context->r5, context->r5, fn_MObjMakeTExp @ Get_MemoryOffset_LowBit);
/*803FB100 003F7F00*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_MObjSetupTev @ Get_MemoryOffset_LowBit);
/*803FB104 003F7F04*/ PPC::Runtime::ASM::addi(context->r0, context->r3, fn_MObjUpdateFunc? @ Get_MemoryOffset_LowBit);
/*803FB108 003F7F08*/ PPC::Runtime::ASM::stw(context->r11, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r10));
/*803FB10C 003F7F0C*/ PPC::Runtime::ASM::stw(context->r9, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r10));
/*803FB110 003F7F10*/ PPC::Runtime::ASM::stw(context->r8, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r10));
/*803FB114 003F7F14*/ PPC::Runtime::ASM::stw(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x50, context->r10));
/*803FB118 003F7F18*/ PPC::Runtime::ASM::stw(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r10));
/*803FB11C 003F7F1C*/ PPC::Runtime::ASM::stw(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r10));
/*803FB120 003F7F20*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r10));
/*803FB124 003F7F24*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c, context->r10));
/*803FB128 003F7F28*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*803FB12C 003F7F2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*803FB130 003F7F30*/ PPC::Runtime::ASM::mtlr(context->r0);
/*803FB134 003F7F34*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*803FB138 003F7F38*/ PPC::Runtime::ASM::blr();
}