//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E4EB4.hpp"
#include "fn_801C90DC.hpp"
#include "fn_801C90DC.hpp"



void fn_801EB57C(PPC::Runtime::GCContext* context)
{
/*801EB57C 001E837C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801EB580 001E8380*/ PPC::Runtime::ASM::mflr(context->r0);
/*801EB584 001E8384*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EB588 001E8388*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EB58C 001E838C*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801EB590 001E8390*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc33, context->r3));
/* 801EB594 001E8394  54 00 FF FF */ extrwi. context->r0 , context->r0 , 1 , 30
/*801EB598 001E8398*/ PPC::Runtime::ASM::beq(.L_801EB5A4);
/*801EB59C 001E839C*/ PPC::Runtime::ASM::bl(fn_801E4EB4);
/*801EB5A0 001E83A0*/ PPC::Runtime::ASM::b(.L_801EB5FC);
RUNTIME_PPC_JUMP_LABEL(.L_801EB5A4, 0x801EB5A4) //this is a jump label
/*801EB5A4 001E83A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x754, context->r31));
/*801EB5A8 001E83A8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*801EB5AC 001E83AC*/ PPC::Runtime::ASM::bne(.L_801EB5D8);
/*801EB5B0 001E83B0*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801EB5B4 001E83B4*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4f0, context->r31));
/*801EB5B8 001E83B8*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb0, context->r3));
/*801EB5BC 001E83BC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f1);
/*801EB5C0 001E83C0*/ PPC::Runtime::ASM::ble(.L_801EB5C8);
/*801EB5C4 001E83C4*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
RUNTIME_PPC_JUMP_LABEL(.L_801EB5C8, 0x801EB5C8) //this is a jump label
/*801EB5C8 001E83C8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EB5CC 001E83CC*/ PPC::Runtime::ASM::bl(fn_801C90DC);
/*801EB5D0 001E83D0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6e8, context->r31));
/*801EB5D4 001E83D4*/ PPC::Runtime::ASM::b(.L_801EB5FC);
RUNTIME_PPC_JUMP_LABEL(.L_801EB5D8, 0x801EB5D8) //this is a jump label
/*801EB5D8 001E83D8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x650, context->r31));
/*801EB5DC 001E83DC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5ac, context->r31));
/*801EB5E0 001E83E0*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x164, context->r3));
/*801EB5E4 001E83E4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f1);
/*801EB5E8 001E83E8*/ PPC::Runtime::ASM::ble(.L_801EB5F0);
/*801EB5EC 001E83EC*/ PPC::Runtime::ASM::fmr(context->f2, context->f1);
RUNTIME_PPC_JUMP_LABEL(.L_801EB5F0, 0x801EB5F0) //this is a jump label
/*801EB5F0 001E83F0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801EB5F4 001E83F4*/ PPC::Runtime::ASM::bl(fn_801C90DC);
/*801EB5F8 001E83F8*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6e8, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_801EB5FC, 0x801EB5FC) //this is a jump label
/*801EB5FC 001E83FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801EB600 001E8400*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801EB604 001E8404*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801EB608 001E8408*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801EB60C 001E840C*/ PPC::Runtime::ASM::blr();
}