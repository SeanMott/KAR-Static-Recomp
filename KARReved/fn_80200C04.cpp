//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8005523C.hpp"
#include "fn_800550F4.hpp"
#include "fn_800550BC.hpp"



void fn_80200C04(PPC::Runtime::GCContext* context)
{
/*80200C04 001FDA04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x40, context->r1));
/*80200C08 001FDA08*/ PPC::Runtime::ASM::mflr(context->r0);
/*80200C0C 001FDA0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80200C10 001FDA10*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80200C14 001FDA14*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*80200C18 001FDA18*/ PPC::Runtime::ASM::stfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80200C1C 001FDA1C*/ PPC::Runtime::ASM::psq_st(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80200C20 001FDA20*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80200C24 001FDA24*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80200C28 001FDA28*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80200C2C 001FDA2C*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*80200C30 001FDA30*/ PPC::Runtime::ASM::fmr(context->f31, context->f2);
/*80200C34 001FDA34*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*80200C38 001FDA38*/ PPC::Runtime::ASM::fmr(context->f30, context->f1);
/*80200C3C 001FDA3C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x48, context->r29));
/*80200C40 001FDA40*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*80200C44 001FDA44*/ PPC::Runtime::ASM::stfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2b0, context->r29));
/*80200C48 001FDA48*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80200C4C 001FDA4C*/ PPC::Runtime::ASM::bl(fn_HSD_JObjRemoveAnimAll);
/*80200C50 001FDA50*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*80200C54 001FDA54*/ PPC::Runtime::ASM::bne(.L_80200C60);
/*80200C58 001FDA58*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80200C5C 001FDA5C*/ PPC::Runtime::ASM::b(.L_80200C64);
RUNTIME_PPC_JUMP_LABEL(.L_80200C60, 0x80200C60) //this is a jump label
/*80200C60 001FDA60*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80200C64, 0x80200C64) //this is a jump label
/*80200C64 001FDA64*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r29));
/*80200C68 001FDA68*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r4));
/*80200C6C 001FDA6C*/ PPC::Runtime::ASM::bl(fn_8005523C);
/*80200C70 001FDA70*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80200C74 001FDA74*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80200C78 001FDA78*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80200C7C 001FDA7C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80200C80 001FDA80*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAddAnimAll);
/*80200C84 001FDA84*/ PPC::Runtime::ASM::fmr(context->f1, context->f30);
/*80200C88 001FDA88*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80200C8C 001FDA8C*/ PPC::Runtime::ASM::li(context->r4, 0x15);
/*80200C90 001FDA90*/ PPC::Runtime::ASM::bl(fn_HSD_JObjReqAnimAllByFlags);
/*80200C94 001FDA94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80200C98 001FDA98*/ PPC::Runtime::ASM::lis(context->r3, 0x1);
/*80200C9C 001FDA9C*/ PPC::Runtime::ASM::subi(context->r4, context->r3, 0x481);
/*80200CA0 001FDAA0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80200CA4 001FDAA4*/ PPC::Runtime::ASM::beq(.L_80200CAC);
/*80200CA8 001FDAA8*/ PPC::Runtime::ASM::subi(context->r4, context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_80200CAC, 0x80200CAC) //this is a jump label
/*80200CAC 001FDAAC*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*80200CB0 001FDAB0*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/* 80200CB4 001FDAB4  54 00 D7 FF */ extrwi. context->r0 , context->r0 , 1 , 25
/*80200CB8 001FDAB8*/ PPC::Runtime::ASM::beq(.L_80200CC4);
/*80200CBC 001FDABC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80200CC0 001FDAC0*/ PPC::Runtime::ASM::bl(fn_800550F4);
RUNTIME_PPC_JUMP_LABEL(.L_80200CC4, 0x80200CC4) //this is a jump label
/*80200CC4 001FDAC4*/ PPC::Runtime::ASM::fmr(context->f1, context->f31);
/*80200CC8 001FDAC8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80200CCC 001FDACC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80200CD0 001FDAD0*/ PPC::Runtime::ASM::bl(fn_800550BC);
/*80200CD4 001FDAD4*/ PPC::Runtime::ASM::fsubs(context->f1, context->f30, context->f31);
/*80200CD8 001FDAD8*/ PPC::Runtime::ASM::lfs(context->f0, STRUCT_FLOAT_COUNT_1805E2288 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80200CDC 001FDADC*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2a8, context->r29));
/*80200CE0 001FDAE0*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2ac, context->r29));
/*80200CE4 001FDAE4*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r1)0, context->qr0);
/*80200CE8 001FDAE8*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r1));
/*80200CEC 001FDAEC*/ PPC::Runtime::ASM::psq_l(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1)0, context->qr0);
/*80200CF0 001FDAF0*/ PPC::Runtime::ASM::lfd(context->f30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*80200CF4 001FDAF4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80200CF8 001FDAF8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80200CFC 001FDAFC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x44, context->r1));
/*80200D00 001FDB00*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80200D04 001FDB04*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80200D08 001FDB08*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x40);
/*80200D0C 001FDB0C*/ PPC::Runtime::ASM::blr();
}