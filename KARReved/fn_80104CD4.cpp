//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800D8EDC.hpp"



void fn_80104CD4(PPC::Runtime::GCContext* context)
{
/*80104CD4 00101AD4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80104CD8 00101AD8*/ PPC::Runtime::ASM::mflr(context->r0);
/*80104CDC 00101ADC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80104CE0 00101AE0*/ PPC::Runtime::ASM::stfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80104CE4 00101AE4*/ PPC::Runtime::ASM::psq_st(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80104CE8 00101AE8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80104CEC 00101AEC*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80104CF0 00101AF0*/ PPC::Runtime::ASM::lwz(context->r8, STRUCT_BYTE4_COUNT_1805DD6C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104CF4 00101AF4*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*80104CF8 00101AF8*/ PPC::Runtime::ASM::lfs(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x344, context->r4));
/*80104CFC 00101AFC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80104D00 00101B00*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF9C8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104D04 00101B04*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*80104D08 00101B08*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x58c, context->r8));
/*80104D0C 00101B0C*/ PPC::Runtime::ASM::mr(context->r5, context->r6);
/*80104D10 00101B10*/ PPC::Runtime::ASM::mr(context->r6, context->r7);
/*80104D14 00101B14*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0x14);
/*80104D18 00101B18*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f0);
/*80104D1C 00101B1C*/ PPC::Runtime::ASM::bl(fn_800D8EDC);
/*80104D20 00101B20*/ PPC::Runtime::ASM::fmuls(context->f1, context->f1, context->f1);
/*80104D24 00101B24*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r30));
/*80104D28 00101B28*/ PPC::Runtime::ASM::lfs(context->f3, STRUCT_FLOAT_COUNT_1805DF9CC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104D2C 00101B2C*/ PPC::Runtime::ASM::fmuls(context->f1, context->f31, context->f1);
/*80104D30 00101B30*/ PPC::Runtime::ASM::fsubs(context->f2, context->f1, context->f0);
/*80104D34 00101B34*/ PPC::Runtime::ASM::fcmpo(cr0, context->f2, context->f3);
/*80104D38 00101B38*/ PPC::Runtime::ASM::cror(eq, gt, eq);
/*80104D3C 00101B3C*/ PPC::Runtime::ASM::bne(.L_80104D8C);
/*80104D40 00101B40*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*80104D44 00101B44*/ PPC::Runtime::ASM::fmr(context->f0, context->f3);
/*80104D48 00101B48*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f3);
/*80104D4C 00101B4C*/ PPC::Runtime::ASM::ble(.L_80104D70);
/*80104D50 00101B50*/ PPC::Runtime::ASM::fdivs(context->f0, context->f2, context->f1);
/*80104D54 00101B54*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805DF9D0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*80104D58 00101B58*/ PPC::Runtime::ASM::lfs(context->f2, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*80104D5C 00101B5C*/ PPC::Runtime::ASM::fsubs(context->f0, context->f1, context->f0);
/*80104D60 00101B60*/ PPC::Runtime::ASM::fmuls(context->f0, context->f2, context->f0);
/*80104D64 00101B64*/ PPC::Runtime::ASM::fcmpo(cr0, context->f0, context->f3);
/*80104D68 00101B68*/ PPC::Runtime::ASM::bge(.L_80104D70);
/*80104D6C 00101B6C*/ PPC::Runtime::ASM::fmr(context->f0, context->f3);
RUNTIME_PPC_JUMP_LABEL(.L_80104D70, 0x80104D70) //this is a jump label
/*80104D70 00101B70*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x334, context->r31));
/*80104D74 00101B74*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80104D78 00101B78*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80104D7C 00101B7C*/ PPC::Runtime::ASM::lbz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x338, context->r31));
/*80104D80 00101B80*/ PPC::Runtime::ASM::rlwimi(context->r0, context->r4, 7, 24, 24);
/*80104D84 00101B84*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x338, context->r31));
/*80104D88 00101B88*/ PPC::Runtime::ASM::b(.L_80104D90);
RUNTIME_PPC_JUMP_LABEL(.L_80104D8C, 0x80104D8C) //this is a jump label
/*80104D8C 00101B8C*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_80104D90, 0x80104D90) //this is a jump label
/*80104D90 00101B90*/ PPC::Runtime::ASM::psq_l(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1)0, context->qr0);
/*80104D94 00101B94*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80104D98 00101B98*/ PPC::Runtime::ASM::lfd(context->f31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*80104D9C 00101B9C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80104DA0 00101BA0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80104DA4 00101BA4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80104DA8 00101BA8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80104DAC 00101BAC*/ PPC::Runtime::ASM::blr();
}