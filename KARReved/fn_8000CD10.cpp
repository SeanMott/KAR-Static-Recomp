//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_8000CD10(PPC::Runtime::GCContext* context)
{
/*8000CD10 00009B10*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8000CD14 00009B14*/ PPC::Runtime::ASM::mflr(context->r0);
/*8000CD18 00009B18*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000CD1C 00009B1C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000CD20 00009B20*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8000CD24 00009B24*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*8000CD28 00009B28*/ PPC::Runtime::ASM::stb(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r3));
/*8000CD2C 00009B2C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8000CD30 00009B30*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8000CD34 00009B34*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8000CD38 00009B38*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8000CD3C 00009B3C*/ PPC::Runtime::ASM::blr();
}