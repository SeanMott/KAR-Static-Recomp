//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801C7548.hpp"
#include "fn_800D4BF4.hpp"



void fn_800FE968(PPC::Runtime::GCContext* context)
{
/*800FE968 000FB768*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*800FE96C 000FB76C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800FE970 000FB770*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FE974 000FB774*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800FE978 000FB778*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800FE97C 000FB77C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FE980 000FB780*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*800FE984 000FB784*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x14);
/*800FE988 000FB788*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800FE98C 000FB78C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800FE990 000FB790*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800FE994 000FB794*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r5));
/*800FE998 000FB798*/ PPC::Runtime::ASM::bl(fn_801C7548);
/*800FE99C 000FB79C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r30));
/*800FE9A0 000FB7A0*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800FE9A4 000FB7A4*/ PPC::Runtime::ASM::bl(fn_800D4BF4);
/*800FE9A8 000FB7A8*/ PPC::Runtime::ASM::addi(context->r3, context->r1, 0x14);
/*800FE9AC 000FB7AC*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*800FE9B0 000FB7B0*/ PPC::Runtime::ASM::bl(fn_803D22F4);
/*800FE9B4 000FB7B4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FE9B8 000FB7B8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800FE9BC 000FB7BC*/ PPC::Runtime::ASM::beq(.L_800FE9D8);
/*800FE9C0 000FB7C0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*800FE9C4 000FB7C4*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*800FE9C8 000FB7C8*/ PPC::Runtime::ASM::bge(.L_800FE9E0);
/*800FE9CC 000FB7CC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FE9D0 000FB7D0*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
/*800FE9D4 000FB7D4*/ PPC::Runtime::ASM::b(.L_800FE9E0);
RUNTIME_PPC_JUMP_LABEL(.L_800FE9D8, 0x800FE9D8) //this is a jump label
/*800FE9D8 000FB7D8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x130, context->r31));
/*800FE9DC 000FB7DC*/ PPC::Runtime::ASM::stfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x134, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800FE9E0, 0x800FE9E0) //this is a jump label
/*800FE9E0 000FB7E0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*800FE9E4 000FB7E4*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*800FE9E8 000FB7E8*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*800FE9EC 000FB7EC*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800FE9F0 000FB7F0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800FE9F4 000FB7F4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*800FE9F8 000FB7F8*/ PPC::Runtime::ASM::blr();
}