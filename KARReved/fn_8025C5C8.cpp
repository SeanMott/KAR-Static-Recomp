//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025C5C8(PPC::Runtime::GCContext* context)
{
/*8025C5C8 002593C8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025C5CC 002593CC*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025C5D0 002593D0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C5D4 002593D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C5D8 002593D8*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C5DC 002593DC*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025C5E0 002593E0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025C5E4 002593E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C5E8 002593E8*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025C5EC 002593EC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C5F0 002593F0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C5F4 002593F4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025C5F8 002593F8*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C5FC 002593FC*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C600 00259400*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025C604 00259404*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C608 00259408*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025C60C 0025940C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025C610 00259410*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C614 00259414*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025C618 00259418*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025C61C 0025941C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025C620 00259420*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025C624 00259424*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EBC @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C628 00259428*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025C62C 0025942C*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025C630 00259430*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EB8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025C634 00259434*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025C638 00259438*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025C63C 0025943C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025C640 00259440*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025C644 00259444*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025C648 00259448*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025C64C 0025944C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025C650 00259450*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025C654 00259454*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025C658 00259458*/ PPC::Runtime::ASM::blr();
}