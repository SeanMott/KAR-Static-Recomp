//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F7A64.hpp"
#include "fn_800FF44C.hpp"



void fn_800D297C(PPC::Runtime::GCContext* context)
{
/*800D297C 000CF77C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800D2980 000CF780*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D2984 000CF784*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D2988 000CF788*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D298C 000CF78C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800D2990 000CF790*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D2994 000CF794*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800D2998 000CF798*/ PPC::Runtime::ASM::bl(fn_800F7A64);
/*800D299C 000CF79C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x30);
/*800D29A0 000CF7A0*/ PPC::Runtime::ASM::beq(.L_800D29B8);
/*800D29A4 000CF7A4*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_917 @ Get_MemoryOffset_HighBit);
/*800D29A8 000CF7A8*/ PPC::Runtime::ASM::li(context->r3, String_ "grlib." Get_MemoryOffset_SDA21);
/*800D29AC 000CF7AC*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_917 @ Get_MemoryOffset_LowBit);
/*800D29B0 000CF7B0*/ PPC::Runtime::ASM::li(context->r4, 0x990);
/*800D29B4 000CF7B4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D29B8, 0x800D29B8) //this is a jump label
/*800D29B8 000CF7B8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800D29BC 000CF7BC*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*800D29C0 000CF7C0*/ PPC::Runtime::ASM::bl(fn_800FF44C);
/*800D29C4 000CF7C4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D29C8 000CF7C8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800D29CC 000CF7CC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*800D29D0 000CF7D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D29D4 000CF7D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800D29D8 000CF7D8*/ PPC::Runtime::ASM::blr();
}