//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800BAD8C.hpp"
#include "fn_80193484.hpp"



void fn_80193388(PPC::Runtime::GCContext* context)
{
/*80193388 00190188*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8019338C 0019018C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80193390 00190190*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80193394 00190194*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80193398 00190198*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8019339C 0019019C*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*801933A0 001901A0*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801933A4 001901A4*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*801933A8 001901A8*/ PPC::Runtime::ASM::addi(context->r4, context->r29, 0x318);
/*801933AC 001901AC*/ PPC::Runtime::ASM::lfs(context->f1, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x350, context->r3));
/*801933B0 001901B0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801933B4 001901B4*/ PPC::Runtime::ASM::bl(fn_800BAD8C);
/*801933B8 001901B8*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x358, context->r29));
/*801933BC 001901BC*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801933C0 001901C0*/ PPC::Runtime::ASM::ble(.L_801933CC);
/*801933C4 001901C4*/ PPC::Runtime::ASM::li(context->r31, 0x0);
/*801933C8 001901C8*/ PPC::Runtime::ASM::b(.L_801933E4);
RUNTIME_PPC_JUMP_LABEL(.L_801933CC, 0x801933CC) //this is a jump label
/*801933CC 001901CC*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x35c, context->r29));
/*801933D0 001901D0*/ PPC::Runtime::ASM::fcmpo(cr0, context->f1, context->f0);
/*801933D4 001901D4*/ PPC::Runtime::ASM::ble(.L_801933E0);
/*801933D8 001901D8*/ PPC::Runtime::ASM::li(context->r31, 0x1);
/*801933DC 001901DC*/ PPC::Runtime::ASM::b(.L_801933E4);
RUNTIME_PPC_JUMP_LABEL(.L_801933E0, 0x801933E0) //this is a jump label
/*801933E0 001901E0*/ PPC::Runtime::ASM::li(context->r31, 0x2);
RUNTIME_PPC_JUMP_LABEL(.L_801933E4, 0x801933E4) //this is a jump label
/*801933E4 001901E4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801933E8 001901E8*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*801933EC 001901EC*/ PPC::Runtime::ASM::bl(fn_80193484);
/*801933F0 001901F0*/ PPC::Runtime::ASM::cmpw(context->r31, context->r3);
/*801933F4 001901F4*/ PPC::Runtime::ASM::bge(.L_801933FC);
/*801933F8 001901F8*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
RUNTIME_PPC_JUMP_LABEL(.L_801933FC, 0x801933FC) //this is a jump label
/*801933FC 001901FC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80193400 00190200*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80193404 00190204*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80193408 00190208*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8019340C 0019020C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80193410 00190210*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80193414 00190214*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80193418 00190218*/ PPC::Runtime::ASM::blr();
}