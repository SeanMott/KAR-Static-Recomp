//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80047844.hpp"
#include "fn_80078CC0.hpp"



void fn_80048B10(PPC::Runtime::GCContext* context)
{
/*80048B10 00045910*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80048B14 00045914*/ PPC::Runtime::ASM::mflr(context->r0);
/*80048B18 00045918*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80048B1C 0004591C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80048B20 00045920*/ PPC::Runtime::ASM::bl(fn_80047844);
/*80048B24 00045924*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80048B28 00045928*/ PPC::Runtime::ASM::bl(fn_80078CC0);
/*80048B2C 0004592C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80048B30 00045930*/ PPC::Runtime::ASM::beq(.L_80048B4C);
/*80048B34 00045934*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*80048B38 00045938*/ PPC::Runtime::ASM::li(context->r0, 0x8);
/*80048B3C 0004593C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/*80048B40 00045940*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r31));
/*80048B44 00045944*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
/*80048B48 00045948*/ PPC::Runtime::ASM::b(.L_80048B64);
RUNTIME_PPC_JUMP_LABEL(.L_80048B4C, 0x80048B4C) //this is a jump label
/*80048B4C 0004594C*/ PPC::Runtime::ASM::li(context->r0, 0x0);
/*80048B50 00045950*/ PPC::Runtime::ASM::li(context->r3, 0x9);
/*80048B54 00045954*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1, context->r31));
/*80048B58 00045958*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*80048B5C 0004595C*/ PPC::Runtime::ASM::stb(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2, context->r31));
/*80048B60 00045960*/ PPC::Runtime::ASM::stb(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x6, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_80048B64, 0x80048B64) //this is a jump label
/*80048B64 00045964*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80048B68 00045968*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80048B6C 0004596C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80048B70 00045970*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80048B74 00045974*/ PPC::Runtime::ASM::blr();
}