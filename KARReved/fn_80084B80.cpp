//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800849B8.hpp"
#include "fn_800849B8.hpp"



void fn_80084B80(PPC::Runtime::GCContext* context)
{
/*80084B80 00081980*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80084B84 00081984*/ PPC::Runtime::ASM::mflr(context->r0);
/*80084B88 00081988*/ PPC::Runtime::ASM::lis(context->r3, STRUCT_BYTE4_COUNT_180552F78 @ Get_MemoryOffset_HighBit);
/*80084B8C 0008198C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80084B90 00081990*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80084B94 00081994*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80084B98 00081998*/ PPC::Runtime::ASM::addi(context->r30, context->r3, STRUCT_BYTE4_COUNT_180552F78 @ Get_MemoryOffset_LowBit);
/*80084B9C 0008199C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
/*80084BA0 000819A0*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*80084BA4 000819A4*/ PPC::Runtime::ASM::bne(.L_80084BD8);
/*80084BA8 000819A8*/ PPC::Runtime::ASM::li(context->r3, 0x24);
/*80084BAC 000819AC*/ PPC::Runtime::ASM::li(context->r4, 0x3f);
/*80084BB0 000819B0*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*80084BB4 000819B4*/ PPC::Runtime::ASM::bl(fn_GObj_Create);
/* 80084BB8 000819B8  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80084BBC 000819BC*/ PPC::Runtime::ASM::beq(.L_80084BD4);
/*80084BC0 000819C0*/ PPC::Runtime::ASM::lis(context->r4, fn_800849B8 @ Get_MemoryOffset_HighBit);
/*80084BC4 000819C4*/ PPC::Runtime::ASM::li(context->r5, 0x24);
/*80084BC8 000819C8*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800849B8 @ Get_MemoryOffset_LowBit);
/*80084BCC 000819CC*/ PPC::Runtime::ASM::li(context->r6, 0x1);
/*80084BD0 000819D0*/ PPC::Runtime::ASM::bl(fn_GObj_AddGXLink);
RUNTIME_PPC_JUMP_LABEL(.L_80084BD4, 0x80084BD4) //this is a jump label
/*80084BD4 000819D4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x30, context->r30));
RUNTIME_PPC_JUMP_LABEL(.L_80084BD8, 0x80084BD8) //this is a jump label
/*80084BD8 000819D8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80084BDC 000819DC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80084BE0 000819E0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80084BE4 000819E4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80084BE8 000819E8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80084BEC 000819EC*/ PPC::Runtime::ASM::blr();
}