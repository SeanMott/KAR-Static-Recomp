//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn___assert.hpp"



void fn_8040B4DC(PPC::Runtime::GCContext* context)
{
/*8040B4DC 004082DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8040B4E0 004082E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8040B4E4 004082E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040B4E8 004082E8*/ PPC::Runtime::ASM::lhz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8040B4EC 004082EC*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x1);
/*8040B4F0 004082F0*/ PPC::Runtime::ASM::sth(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8040B4F4 004082F4*/ PPC::Runtime::ASM::lhz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*8040B4F8 004082F8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0xffff);
/*8040B4FC 004082FC*/ PPC::Runtime::ASM::bne(.L_8040B518);
/*8040B500 00408300*/ PPC::Runtime::ASM::lis(context->r3, lbl_805039A8 @ Get_MemoryOffset_HighBit);
/*8040B504 00408304*/ PPC::Runtime::ASM::lis(context->r5, lbl_805039B4 @ Get_MemoryOffset_HighBit);
/*8040B508 00408308*/ PPC::Runtime::ASM::addi(context->r3, context->r3, lbl_805039A8 @ Get_MemoryOffset_LowBit);
/*8040B50C 0040830C*/ PPC::Runtime::ASM::li(context->r4, 0x5d);
/*8040B510 00408310*/ PPC::Runtime::ASM::addi(context->r5, context->r5, lbl_805039B4 @ Get_MemoryOffset_LowBit);
/*8040B514 00408314*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8040B518, 0x8040B518) //this is a jump label
/*8040B518 00408318*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8040B51C 0040831C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8040B520 00408320*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8040B524 00408324*/ PPC::Runtime::ASM::blr();
}