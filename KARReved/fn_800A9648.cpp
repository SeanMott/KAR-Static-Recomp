//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800A1680.hpp"
#include "fn_800CF058.hpp"



void fn_800A9648(PPC::Runtime::GCContext* context)
{
/*800A9648 000A6448*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800A964C 000A644C*/ PPC::Runtime::ASM::mflr(context->r0);
/*800A9650 000A6450*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A9654 000A6454*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A9658 000A6458*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A965C 000A645C*/ PPC::Runtime::ASM::li(context->r30, 0x0);
/*800A9660 000A6460*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A9664 000A6464*/ PPC::Runtime::ASM::mr(context->r29, context->r3);
/*800A9668 000A6468*/ PPC::Runtime::ASM::lwz(context->r31, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800A966C 000A646C*/ PPC::Runtime::ASM::b(.L_800A9688);
RUNTIME_PPC_JUMP_LABEL(.L_800A9670, 0x800A9670) //this is a jump label
/*800A9670 000A6470*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800A9674 000A6474*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*800A9678 000A6478*/ PPC::Runtime::ASM::mr(context->r6, context->r29);
/*800A967C 000A647C*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*800A9680 000A6480*/ PPC::Runtime::ASM::bl(fn_800A1680);
/*800A9684 000A6484*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800A9688, 0x800A9688) //this is a jump label
/*800A9688 000A6488*/ PPC::Runtime::ASM::bl(fn_800CF058);
/*800A968C 000A648C*/ PPC::Runtime::ASM::cmpw(context->r30, context->r3);
/*800A9690 000A6490*/ PPC::Runtime::ASM::blt(.L_800A9670);
/*800A9694 000A6494*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800A9698 000A6498*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800A969C 000A649C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800A96A0 000A64A0*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800A96A4 000A64A4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800A96A8 000A64A8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800A96AC 000A64AC*/ PPC::Runtime::ASM::blr();
}