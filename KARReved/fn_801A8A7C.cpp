//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801950DC.hpp"
#include "fn_801C7D18.hpp"
#include "fn_801C82E0.hpp"
#include "fn_801C7F34.hpp"
#include "fn_801C7DE4.hpp"
#include "fn_801C7DF4.hpp"
#include "fn_80193ED4.hpp"
#include "fn_80191798.hpp"
#include "fn_801916C8.hpp"
#include "fn_801C7E04.hpp"
#include "fn_801C7E20.hpp"
#include "fn_8027A96C.hpp"
#include "fn_8019AA6C.hpp"



void fn_801A8A7C(PPC::Runtime::GCContext* context)
{
/*801A8A7C 001A587C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801A8A80 001A5880*/ PPC::Runtime::ASM::mflr(context->r0);
/*801A8A84 001A5884*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A8A88 001A5888*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A8A8C 001A588C*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*801A8A90 001A5890*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A8A94 001A5894*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*801A8A98 001A5898*/ PPC::Runtime::ASM::bl(fn_801950DC);
/*801A8A9C 001A589C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8AA0 001A58A0*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8AA4 001A58A4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8AA8 001A58A8*/ PPC::Runtime::ASM::bl(fn_801C7D18);
/*801A8AAC 001A58AC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801A8AB0 001A58B0*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8AB4 001A58B4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8AB8 001A58B8*/ PPC::Runtime::ASM::bl(fn_801C82E0);
/*801A8ABC 001A58BC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801A8AC0 001A58C0*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8AC4 001A58C4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8AC8 001A58C8*/ PPC::Runtime::ASM::bl(fn_801C7F34);
/*801A8ACC 001A58CC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8AD0 001A58D0*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8AD4 001A58D4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8AD8 001A58D8*/ PPC::Runtime::ASM::bl(fn_801C7DE4);
/*801A8ADC 001A58DC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8AE0 001A58E0*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8AE4 001A58E4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8AE8 001A58E8*/ PPC::Runtime::ASM::bl(fn_801C7DF4);
/*801A8AEC 001A58EC*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8AF0 001A58F0*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8AF4 001A58F4*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A8AF8 001A58F8*/ PPC::Runtime::ASM::bl(fn_80193ED4);
/*801A8AFC 001A58FC*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*801A8B00 001A5900*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8B04 001A5904*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A8B08 001A5908*/ PPC::Runtime::ASM::bl(fn_80191798);
/*801A8B0C 001A590C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8B10 001A5910*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8B14 001A5914*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A8B18 001A5918*/ PPC::Runtime::ASM::bl(fn_801916C8);
/*801A8B1C 001A591C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8B20 001A5920*/ PPC::Runtime::ASM::beq(.L_801A8B74);
/*801A8B24 001A5924*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8B28 001A5928*/ PPC::Runtime::ASM::bl(fn_801C7E04);
/*801A8B2C 001A592C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8B30 001A5930*/ PPC::Runtime::ASM::beq(.L_801A8B54);
/*801A8B34 001A5934*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801A8B38 001A5938*/ PPC::Runtime::ASM::bl(fn_801C7E20);
/*801A8B3C 001A593C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8B40 001A5940*/ PPC::Runtime::ASM::bne(.L_801A8B74);
/*801A8B44 001A5944*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r30));
/*801A8B48 001A5948*/ PPC::Runtime::ASM::bl(fn_8027A96C);
/*801A8B4C 001A594C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A8B50 001A5950*/ PPC::Runtime::ASM::b(.L_801A8B78);
RUNTIME_PPC_JUMP_LABEL(.L_801A8B54, 0x801A8B54) //this is a jump label
/*801A8B54 001A5954*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E1340 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*801A8B58 001A5958*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*801A8B5C 001A595C*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*801A8B60 001A5960*/ PPC::Runtime::ASM::bl(fn_8019AA6C);
/*801A8B64 001A5964*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801A8B68 001A5968*/ PPC::Runtime::ASM::beq(.L_801A8B74);
/*801A8B6C 001A596C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
/*801A8B70 001A5970*/ PPC::Runtime::ASM::b(.L_801A8B78);
RUNTIME_PPC_JUMP_LABEL(.L_801A8B74, 0x801A8B74) //this is a jump label
/*801A8B74 001A5974*/ PPC::Runtime::ASM::li(context->r3, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_801A8B78, 0x801A8B78) //this is a jump label
/*801A8B78 001A5978*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801A8B7C 001A597C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801A8B80 001A5980*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*801A8B84 001A5984*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801A8B88 001A5988*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801A8B8C 001A598C*/ PPC::Runtime::ASM::blr();
}