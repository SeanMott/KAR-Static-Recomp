//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EE60C.hpp"
#include "fn_800EE60C.hpp"



void fn_800EDCC0(PPC::Runtime::GCContext* context)
{
/*800EDCC0 000EAAC0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800EDCC4 000EAAC4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800EDCC8 000EAAC8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EDCCC 000EAACC*/ PPC::Runtime::ASM::lwz(context->r3, STRUCT_BYTE4_COUNT_1805DD6F8 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800EDCD0 000EAAD0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800EDCD4 000EAAD4*/ PPC::Runtime::ASM::beq(.L_800EDCE8);
/*800EDCD8 000EAAD8*/ PPC::Runtime::ASM::lis(context->r4, fn_800EE60C @ Get_MemoryOffset_HighBit);
/*800EDCDC 000EAADC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*800EDCE0 000EAAE0*/ PPC::Runtime::ASM::addi(context->r4, context->r4, fn_800EE60C @ Get_MemoryOffset_LowBit);
/*800EDCE4 000EAAE4*/ PPC::Runtime::ASM::bl(fn_804288A4);
RUNTIME_PPC_JUMP_LABEL(.L_800EDCE8, 0x800EDCE8) //this is a jump label
/*800EDCE8 000EAAE8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800EDCEC 000EAAEC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800EDCF0 000EAAF0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800EDCF4 000EAAF4*/ PPC::Runtime::ASM::blr();
}