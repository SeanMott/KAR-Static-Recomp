//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025CE20(PPC::Runtime::GCContext* context)
{
/*8025CE20 00259C20*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025CE24 00259C24*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025CE28 00259C28*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025CE2C 00259C2C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025CE30 00259C30*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025CE34 00259C34*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025CE38 00259C38*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025CE3C 00259C3C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025CE40 00259C40*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025CE44 00259C44*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025CE48 00259C48*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025CE4C 00259C4C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025CE50 00259C50*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025CE54 00259C54*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025CE58 00259C58*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025CE5C 00259C5C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025CE60 00259C60*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025CE64 00259C64*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025CE68 00259C68*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025CE6C 00259C6C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025CE70 00259C70*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025CE74 00259C74*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025CE78 00259C78*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025CE7C 00259C7C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2ED4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025CE80 00259C80*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025CE84 00259C84*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025CE88 00259C88*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2ED0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025CE8C 00259C8C*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025CE90 00259C90*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025CE94 00259C94*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025CE98 00259C98*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025CE9C 00259C9C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025CEA0 00259CA0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025CEA4 00259CA4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025CEA8 00259CA8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025CEAC 00259CAC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025CEB0 00259CB0*/ PPC::Runtime::ASM::blr();
}