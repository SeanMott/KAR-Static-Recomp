//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_getTrialFlag.hpp"
#include "fn_801E0A44.hpp"
#include "fn_80191FFC.hpp"
#include "fn_80192980.hpp"



void fn_801E09AC(PPC::Runtime::GCContext* context)
{
/*801E09AC 001DD7AC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x30, context->r1));
/*801E09B0 001DD7B0*/ PPC::Runtime::ASM::mflr(context->r0);
/*801E09B4 001DD7B4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801E09B8 001DD7B8*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801E09BC 001DD7BC*/ PPC::Runtime::ASM::mr(context->r31, context->r6);
/*801E09C0 001DD7C0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801E09C4 001DD7C4*/ PPC::Runtime::ASM::mr(context->r30, context->r5);
/*801E09C8 001DD7C8*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801E09CC 001DD7CC*/ PPC::Runtime::ASM::mr(context->r29, context->r4);
/*801E09D0 001DD7D0*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801E09D4 001DD7D4*/ PPC::Runtime::ASM::mr(context->r28, context->r3);
/*801E09D8 001DD7D8*/ PPC::Runtime::ASM::bl(fn_getTrialFlag);
/*801E09DC 001DD7DC*/ PPC::Runtime::ASM::extsb.(context->r0, context->r3);
/*801E09E0 001DD7E0*/ PPC::Runtime::ASM::beq(.L_801E0A24);
/*801E09E4 001DD7E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*801E09E8 001DD7E8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*801E09EC 001DD7EC*/ PPC::Runtime::ASM::beq(.L_801E0A24);
/*801E09F0 001DD7F0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*801E09F4 001DD7F4*/ PPC::Runtime::ASM::addi(context->r4, context->r28, 0x418);
/*801E09F8 001DD7F8*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801E09FC 001DD7FC*/ PPC::Runtime::ASM::bl(fn_801E0A44);
/*801E0A00 001DD800*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*801E0A04 001DD804*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801E0A08 001DD808*/ PPC::Runtime::ASM::bl(fn_80191FFC);
/*801E0A0C 001DD80C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r28));
/*801E0A10 001DD810*/ PPC::Runtime::ASM::mr(context->r6, context->r30);
/*801E0A14 001DD814*/ PPC::Runtime::ASM::mr(context->r7, context->r31);
/*801E0A18 001DD818*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*801E0A1C 001DD81C*/ PPC::Runtime::ASM::addi(context->r5, context->r1, 0x14);
/*801E0A20 001DD820*/ PPC::Runtime::ASM::bl(fn_80192980);
RUNTIME_PPC_JUMP_LABEL(.L_801E0A24, 0x801E0A24) //this is a jump label
/*801E0A24 001DD824*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x34, context->r1));
/*801E0A28 001DD828*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r1));
/*801E0A2C 001DD82C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r1));
/*801E0A30 001DD830*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*801E0A34 001DD834*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r1));
/*801E0A38 001DD838*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801E0A3C 001DD83C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x30);
/*801E0A40 001DD840*/ PPC::Runtime::ASM::blr();
}