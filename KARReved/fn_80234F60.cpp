//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80234A04.hpp"
#include "fn_80235008.hpp"
#include "fn_80235008.hpp"
#include "fn_802344DC.hpp"
#include "fn_802341C0.hpp"



void fn_80234F60(PPC::Runtime::GCContext* context)
{
/*80234F60 00231D60*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*80234F64 00231D64*/ PPC::Runtime::ASM::mflr(context->r0);
/*80234F68 00231D68*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80234F6C 00231D6C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80234F70 00231D70*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80234F74 00231D74*/ PPC::Runtime::ASM::mr(context->r30, context->r4);
/*80234F78 00231D78*/ PPC::Runtime::ASM::li(context->r4, 0x0);
/*80234F7C 00231D7C*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80234F80 00231D80*/ PPC::Runtime::ASM::mr(context->r29, context->r6);
/*80234F84 00231D84*/ PPC::Runtime::ASM::bl(fn_80234A04);
/* 80234F88 00231D88  7C 7F 1B 79 */ mr. context->r31 , context->r3
/*80234F8C 00231D8C*/ PPC::Runtime::ASM::beq(.L_80234FEC);
/*80234F90 00231D90*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B4E08 @ Get_MemoryOffset_HighBit);
/*80234F94 00231D94*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80234F98 00231D98*/ PPC::Runtime::ASM::addi(context->r4, context->r4, lbl_804B4E08 @ Get_MemoryOffset_LowBit);
/*80234F9C 00231D9C*/ PPC::Runtime::ASM::bl(fn_8042BA60);
/*80234FA0 00231DA0*/ PPC::Runtime::ASM::lis(context->r4, fn_80235008 @ Get_MemoryOffset_HighBit);
/*80234FA4 00231DA4*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*80234FA8 00231DA8*/ PPC::Runtime::ASM::addi(context->r0, context->r4, fn_80235008 @ Get_MemoryOffset_LowBit);
/*80234FAC 00231DAC*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*80234FB0 00231DB0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x5c, context->r30));
/*80234FB4 00231DB4*/ PPC::Runtime::ASM::li(context->r5, -0x1);
/*80234FB8 00231DB8*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*80234FBC 00231DBC*/ PPC::Runtime::ASM::bl(fn_802344DC);
/* 80234FC0 00231DC0  7C 7E 1B 79 */ mr. context->r30 , context->r3
/*80234FC4 00231DC4*/ PPC::Runtime::ASM::beq(.L_80234FEC);
/*80234FC8 00231DC8*/ PPC::Runtime::ASM::mr(context->r4, context->r31);
/*80234FCC 00231DCC*/ PPC::Runtime::ASM::bl(fn_802341C0);
/*80234FD0 00231DD0*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x54, context->r31));
/*80234FD4 00231DD4*/ PPC::Runtime::ASM::cmplwi(context->r12, 0x0);
/*80234FD8 00231DD8*/ PPC::Runtime::ASM::beq(.L_80234FEC);
/*80234FDC 00231DDC*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80234FE0 00231DE0*/ PPC::Runtime::ASM::mr(context->r4, context->r29);
/*80234FE4 00231DE4*/ PPC::Runtime::ASM::mtctr(context->r12);
/*80234FE8 00231DE8*/ PPC::Runtime::ASM::bctrl();
RUNTIME_PPC_JUMP_LABEL(.L_80234FEC, 0x80234FEC) //this is a jump label
/*80234FEC 00231DEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*80234FF0 00231DF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*80234FF4 00231DF4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*80234FF8 00231DF8*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80234FFC 00231DFC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80235000 00231E00*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*80235004 00231E04*/ PPC::Runtime::ASM::blr();
}