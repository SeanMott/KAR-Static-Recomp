//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_80258940(PPC::Runtime::GCContext* context)
{
/*80258940 00255740*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80258944 00255744*/ PPC::Runtime::ASM::mflr(context->r0);
/*80258948 00255748*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025894C 0025574C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80258950 00255750*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80258954 00255754*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80258958 00255758*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025895C 0025575C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258960 00255760*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*80258964 00255764*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258968 00255768*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025896C 0025576C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*80258970 00255770*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258974 00255774*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*80258978 00255778*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025897C 0025577C*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258980 00255780*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*80258984 00255784*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*80258988 00255788*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025898C 0025578C*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*80258990 00255790*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*80258994 00255794*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*80258998 00255798*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025899C 0025579C*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2E0C @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802589A0 002557A0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*802589A4 002557A4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*802589A8 002557A8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2E08 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*802589AC 002557AC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*802589B0 002557B0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*802589B4 002557B4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*802589B8 002557B8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*802589BC 002557BC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*802589C0 002557C0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*802589C4 002557C4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*802589C8 002557C8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*802589CC 002557CC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*802589D0 002557D0*/ PPC::Runtime::ASM::blr();
}