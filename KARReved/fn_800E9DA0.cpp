//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA180.hpp"
#include "fn_800EA01C.hpp"
#include "fn_800EA040.hpp"
#include "fn_800EA180.hpp"
#include "fn_800EA01C.hpp"
#include "fn_800EA040.hpp"



void fn_800E9DA0(PPC::Runtime::GCContext* context)
{
/*800E9DA0 000E6BA0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E9DA4 000E6BA4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E9DA8 000E6BA8*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E9DAC 000E6BAC*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E9DB0 000E6BB0*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E9DB4 000E6BB4*/ PPC::Runtime::ASM::addi(context->r30, context->r3, 0x460);
/*800E9DB8 000E6BB8*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_961 @ Get_MemoryOffset_HighBit);
/*800E9DBC 000E6BBC*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E9DC0 000E6BC0*/ PPC::Runtime::ASM::mr(context->r29, context->r30);
/*800E9DC4 000E6BC4*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_961 @ Get_MemoryOffset_LowBit);
/*800E9DC8 000E6BC8*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E9DCC 000E6BCC*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800E9DD0 000E6BD0*/ PPC::Runtime::ASM::b(.L_800E9E18);
RUNTIME_PPC_JUMP_LABEL(.L_800E9DD4, 0x800E9DD4) //this is a jump label
/*800E9DD4 000E6BD4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r29));
/*800E9DD8 000E6BD8*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E9DDC 000E6BDC*/ PPC::Runtime::ASM::ble(.L_800E9E10);
/*800E9DE0 000E6BE0*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800E9DE4 000E6BE4*/ PPC::Runtime::ASM::bl(fn_800EA180);
/*800E9DE8 000E6BE8*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E9DEC 000E6BEC*/ PPC::Runtime::ASM::bne(.L_800E9E00);
/*800E9DF0 000E6BF0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E9DF4 000E6BF4*/ PPC::Runtime::ASM::li(context->r4, 0x9f);
/*800E9DF8 000E6BF8*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6168 @ Get_MemoryOffset_SDA21);
/*800E9DFC 000E6BFC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E00, 0x800E9E00) //this is a jump label
/*800E9E00 000E6C00*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800E9E04 000E6C04*/ PPC::Runtime::ASM::bl(fn_800EA01C);
/*800E9E08 000E6C08*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*800E9E0C 000E6C0C*/ PPC::Runtime::ASM::bl(fn_800EA040);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E10, 0x800E9E10) //this is a jump label
/*800E9E10 000E6C10*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x14);
/*800E9E14 000E6C14*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E18, 0x800E9E18) //this is a jump label
/*800E9E18 000E6C18*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf0, context->r30));
/*800E9E1C 000E6C1C*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800E9E20 000E6C20*/ PPC::Runtime::ASM::blt(.L_800E9DD4);
/*800E9E24 000E6C24*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_961 @ Get_MemoryOffset_HighBit);
/*800E9E28 000E6C28*/ PPC::Runtime::ASM::mr(context->r29, context->r30);
/*800E9E2C 000E6C2C*/ PPC::Runtime::ASM::addi(context->r31, context->r3, MemoryOffset_961 @ Get_MemoryOffset_LowBit);
/*800E9E30 000E6C30*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*800E9E34 000E6C34*/ PPC::Runtime::ASM::b(.L_800E9E7C);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E38, 0x800E9E38) //this is a jump label
/*800E9E38 000E6C38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xf8, context->r29));
/*800E9E3C 000E6C3C*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E9E40 000E6C40*/ PPC::Runtime::ASM::ble(.L_800E9E74);
/*800E9E44 000E6C44*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xf4);
/*800E9E48 000E6C48*/ PPC::Runtime::ASM::bl(fn_800EA180);
/*800E9E4C 000E6C4C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E9E50 000E6C50*/ PPC::Runtime::ASM::bne(.L_800E9E64);
/*800E9E54 000E6C54*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800E9E58 000E6C58*/ PPC::Runtime::ASM::li(context->r4, 0x9f);
/*800E9E5C 000E6C5C*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6168 @ Get_MemoryOffset_SDA21);
/*800E9E60 000E6C60*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E64, 0x800E9E64) //this is a jump label
/*800E9E64 000E6C64*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xf4);
/*800E9E68 000E6C68*/ PPC::Runtime::ASM::bl(fn_800EA01C);
/*800E9E6C 000E6C6C*/ PPC::Runtime::ASM::addi(context->r3, context->r29, 0xf4);
/*800E9E70 000E6C70*/ PPC::Runtime::ASM::bl(fn_800EA040);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E74, 0x800E9E74) //this is a jump label
/*800E9E74 000E6C74*/ PPC::Runtime::ASM::addi(context->r29, context->r29, 0x14);
/*800E9E78 000E6C78*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E9E7C, 0x800E9E7C) //this is a jump label
/*800E9E7C 000E6C7C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x298, context->r30));
/*800E9E80 000E6C80*/ PPC::Runtime::ASM::cmpw(context->r28, context->r0);
/*800E9E84 000E6C84*/ PPC::Runtime::ASM::blt(.L_800E9E38);
/*800E9E88 000E6C88*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E9E8C 000E6C8C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800E9E90 000E6C90*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800E9E94 000E6C94*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800E9E98 000E6C98*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800E9E9C 000E6C9C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E9EA0 000E6CA0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E9EA4 000E6CA4*/ PPC::Runtime::ASM::blr();
}