//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_80138BA4.hpp"



void fn_8017A994(PPC::Runtime::GCContext* context)
{
/*8017A994 00177794*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8017A998 00177798*/ PPC::Runtime::ASM::mflr(context->r0);
/*8017A99C 0017779C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8017A9A0 001777A0*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8017A9A4 001777A4*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8017A9A8 001777A8*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8017A9AC 001777AC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xe9c, context->r3));
/*8017A9B0 001777B0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*8017A9B4 001777B4*/ PPC::Runtime::ASM::beq(.L_8017A9C8);
/*8017A9B8 001777B8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8017A9BC 001777BC*/ PPC::Runtime::ASM::extsb(context->r4, context->r31);
/*8017A9C0 001777C0*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E0CF0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8017A9C4 001777C4*/ PPC::Runtime::ASM::bl(fn_80138BA4);
RUNTIME_PPC_JUMP_LABEL(.L_8017A9C8, 0x8017A9C8) //this is a jump label
/*8017A9C8 001777C8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8017A9CC 001777CC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8017A9D0 001777D0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8017A9D4 001777D4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8017A9D8 001777D8*/ PPC::Runtime::ASM::blr();
}