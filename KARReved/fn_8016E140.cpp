//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8016D24C.hpp"



void fn_8016E140(PPC::Runtime::GCContext* context)
{
/*8016E140 0016AF40*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8016E144 0016AF44*/ PPC::Runtime::ASM::mflr(context->r0);
/*8016E148 0016AF48*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016E14C 0016AF4C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016E150 0016AF50*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016E154 0016AF54*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x28, context->r3));
/*8016E158 0016AF58*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8016E15C 0016AF5C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016E160 0016AF60*/ PPC::Runtime::ASM::bl(fn_HSD_JObjAnimAll?);
/*8016E164 0016AF64*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r30));
/*8016E168 0016AF68*/ PPC::Runtime::ASM::addi(context->r4, context->r1, 0x8);
/*8016E16C 0016AF6C*/ PPC::Runtime::ASM::bl(fn_8016D24C);
/*8016E170 0016AF70*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016E174 0016AF74*/ PPC::Runtime::ASM::bne(.L_8016E188);
/*8016E178 0016AF78*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6BE0 @ Get_MemoryOffset_SDA21);
/*8016E17C 0016AF7C*/ PPC::Runtime::ASM::li(context->r4, 0x3a9);
/*8016E180 0016AF80*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6BE8 @ Get_MemoryOffset_SDA21);
/*8016E184 0016AF84*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016E188, 0x8016E188) //this is a jump label
/*8016E188 0016AF88*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8016E18C 0016AF8C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8016E190 0016AF90*/ PPC::Runtime::ASM::stw(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38, context->r31));
/*8016E194 0016AF94*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x3c, context->r31));
/*8016E198 0016AF98*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*8016E19C 0016AF9C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x40, context->r31));
/*8016E1A0 0016AFA0*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016E1A4 0016AFA4*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r0, 0, 6, 6);
/*8016E1A8 0016AFA8*/ PPC::Runtime::ASM::bne(.L_8016E1F4);
/*8016E1AC 0016AFAC*/ PPC::Runtime::ASM::cmplwi(context->r31, 0x0);
/*8016E1B0 0016AFB0*/ PPC::Runtime::ASM::beq(.L_8016E1F4);
/*8016E1B4 0016AFB4*/ PPC::Runtime::ASM::bne(.L_8016E1C8);
/*8016E1B8 0016AFB8*/ PPC::Runtime::ASM::li(context->r3, lbl_805D6BE0 @ Get_MemoryOffset_SDA21);
/*8016E1BC 0016AFBC*/ PPC::Runtime::ASM::li(context->r4, 0x25d);
/*8016E1C0 0016AFC0*/ PPC::Runtime::ASM::li(context->r5, lbl_805D6BE8 @ Get_MemoryOffset_SDA21);
/*8016E1C4 0016AFC4*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8016E1C8, 0x8016E1C8) //this is a jump label
/*8016E1C8 0016AFC8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*8016E1CC 0016AFCC*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*8016E1D0 0016AFD0*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 8, 8);
/*8016E1D4 0016AFD4*/ PPC::Runtime::ASM::bne(.L_8016E1E4);
/*8016E1D8 0016AFD8*/ PPC::Runtime::ASM::rlwinm.(context->r0, context->r4, 0, 25, 25);
/*8016E1DC 0016AFDC*/ PPC::Runtime::ASM::beq(.L_8016E1E4);
/*8016E1E0 0016AFE0*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_8016E1E4, 0x8016E1E4) //this is a jump label
/*8016E1E4 0016AFE4*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*8016E1E8 0016AFE8*/ PPC::Runtime::ASM::bne(.L_8016E1F4);
/*8016E1EC 0016AFEC*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8016E1F0 0016AFF0*/ PPC::Runtime::ASM::bl(fn_HSD_JOBJ_SetMtxDirtySub);
RUNTIME_PPC_JUMP_LABEL(.L_8016E1F4, 0x8016E1F4) //this is a jump label
/*8016E1F4 0016AFF4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8016E1F8 0016AFF8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*8016E1FC 0016AFFC*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*8016E200 0016B000*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8016E204 0016B004*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8016E208 0016B008*/ PPC::Runtime::ASM::blr();
}