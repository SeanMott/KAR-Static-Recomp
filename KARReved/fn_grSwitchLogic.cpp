//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800EA1F4.hpp"



void fn_grSwitchLogic(PPC::Runtime::GCContext* context)
{
/*800E86DC 000E54DC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800E86E0 000E54E0*/ PPC::Runtime::ASM::mflr(context->r0);
/*800E86E4 000E54E4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E86E8 000E54E8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800E86EC 000E54EC*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*800E86F0 000E54F0*/ PPC::Runtime::ASM::lwz(context->r30, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800E86F4 000E54F4*/ PPC::Runtime::ASM::mr(context->r28, context->r4);
/*800E86F8 000E54F8*/ PPC::Runtime::ASM::mulli(context->r0, context->r28, 0x140);
/*800E86FC 000E54FC*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*800E8700 000E5500*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x74, context->r30));
/*800E8704 000E5504*/ PPC::Runtime::ASM::addi(context->r31, context->r30, 0x210);
/*800E8708 000E5508*/ PPC::Runtime::ASM::add(context->r3, context->r3, context->r0);
/*800E870C 000E550C*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x138, context->r3));
/*800E8710 000E5510*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*800E8714 000E5514*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800E8718 000E5518*/ PPC::Runtime::ASM::cmpwi(context->r4, 0x0);
/*800E871C 000E551C*/ PPC::Runtime::ASM::blt(.L_800E8730);
/*800E8720 000E5520*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x240, context->r31));
/*800E8724 000E5524*/ PPC::Runtime::ASM::cmpw(context->r4, context->r0);
/*800E8728 000E5528*/ PPC::Runtime::ASM::bge(.L_800E8730);
/*800E872C 000E552C*/ PPC::Runtime::ASM::li(context->r3, 0x1);
RUNTIME_PPC_JUMP_LABEL(.L_800E8730, 0x800E8730) //this is a jump label
/*800E8730 000E5530*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*800E8734 000E5534*/ PPC::Runtime::ASM::bne(.L_800E8750);
/*800E8738 000E5538*/ PPC::Runtime::ASM::lis(context->r3, MemoryOffset_958 @ Get_MemoryOffset_HighBit);
/*800E873C 000E553C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_959 @ Get_MemoryOffset_HighBit);
/*800E8740 000E5540*/ PPC::Runtime::ASM::addi(context->r3, context->r3, MemoryOffset_958 @ Get_MemoryOffset_LowBit);
/*800E8744 000E5544*/ PPC::Runtime::ASM::li(context->r4, 0x6f);
/*800E8748 000E5548*/ PPC::Runtime::ASM::addi(context->r5, context->r5, MemoryOffset_959 @ Get_MemoryOffset_LowBit);
/*800E874C 000E554C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800E8750, 0x800E8750) //this is a jump label
/*800E8750 000E5550*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800E8754 000E5554*/ PPC::Runtime::ASM::lis(context->r3, 0x2aab);
/*800E8758 000E5558*/ PPC::Runtime::ASM::subi(context->r3, context->r3, 0x5555);
/*800E875C 000E555C*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x48);
/*800E8760 000E5560*/ PPC::Runtime::ASM::add(context->r31, context->r31, context->r0);
/*800E8764 000E5564*/ PPC::Runtime::ASM::lwz(context->r7, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r31));
/*800E8768 000E5568*/ PPC::Runtime::ASM::lwz(context->r6, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800E876C 000E556C*/ PPC::Runtime::ASM::mr(context->r5, context->r7);
/*800E8770 000E5570*/ PPC::Runtime::ASM::b(.L_800E87A0);
RUNTIME_PPC_JUMP_LABEL(.L_800E8774, 0x800E8774) //this is a jump label
/*800E8774 000E5574*/ PPC::Runtime::ASM::slwi(context->r4, context->r5, 3);
/*800E8778 000E5578*/ PPC::Runtime::ASM::addi(context->r0, context->r4, 0x18);
/*800E877C 000E557C*/ PPC::Runtime::ASM::lwzx(context->r0, context->r31, context->r0);
/*800E8780 000E5580*/ PPC::Runtime::ASM::cmplw(context->r0, context->r27);
/*800E8784 000E5584*/ PPC::Runtime::ASM::beq(.L_800E87A8);
/*800E8788 000E5588*/ PPC::Runtime::ASM::addi(context->r5, context->r5, 0x1);
/* 800E878C 000E558C  7C 83 28 96 */ mulhw context->r4 , context->r3 , context->r5
/*800E8790 000E5590*/ PPC::Runtime::ASM::srwi(context->r0, context->r4, 31);
/*800E8794 000E5594*/ PPC::Runtime::ASM::add(context->r0, context->r4, context->r0);
/*800E8798 000E5598*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x6);
/*800E879C 000E559C*/ PPC::Runtime::ASM::subf(context->r5, context->r0, context->r5);
RUNTIME_PPC_JUMP_LABEL(.L_800E87A0, 0x800E87A0) //this is a jump label
/*800E87A0 000E55A0*/ PPC::Runtime::ASM::cmpw(context->r5, context->r6);
/*800E87A4 000E55A4*/ PPC::Runtime::ASM::bne(.L_800E8774);
RUNTIME_PPC_JUMP_LABEL(.L_800E87A8, 0x800E87A8) //this is a jump label
/*800E87A8 000E55A8*/ PPC::Runtime::ASM::cmpw(context->r5, context->r6);
/*800E87AC 000E55AC*/ PPC::Runtime::ASM::bne(.L_800E8870);
/*800E87B0 000E55B0*/ PPC::Runtime::ASM::lis(context->r3, 0x2aab);
/*800E87B4 000E55B4*/ PPC::Runtime::ASM::addi(context->r4, context->r6, 0x1);
/*800E87B8 000E55B8*/ PPC::Runtime::ASM::subi(context->r5, context->r3, 0x5555);
/* 800E87BC 000E55BC  7C 65 20 96 */ mulhw context->r3 , context->r5 , context->r4
/*800E87C0 000E55C0*/ PPC::Runtime::ASM::srwi(context->r0, context->r3, 31);
/*800E87C4 000E55C4*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*800E87C8 000E55C8*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x6);
/*800E87CC 000E55CC*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r4);
/*800E87D0 000E55D0*/ PPC::Runtime::ASM::cmpw(context->r0, context->r7);
/*800E87D4 000E55D4*/ PPC::Runtime::ASM::beq(.L_800E8820);
/*800E87D8 000E55D8*/ PPC::Runtime::ASM::slwi(context->r0, context->r6, 3);
/*800E87DC 000E55DC*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*800E87E0 000E55E0*/ PPC::Runtime::ASM::stw(context->r27, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r3));
/*800E87E4 000E55E4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800E87E8 000E55E8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r29));
/*800E87EC 000E55EC*/ PPC::Runtime::ASM::slwi(context->r0, context->r0, 3);
/*800E87F0 000E55F0*/ PPC::Runtime::ASM::add(context->r3, context->r31, context->r0);
/*800E87F4 000E55F4*/ PPC::Runtime::ASM::stw(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800E87F8 000E55F8*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800E87FC 000E55FC*/ PPC::Runtime::ASM::addi(context->r0, context->r3, 0x1);
/*800E8800 000E5600*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/*800E8804 000E5604*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
/* 800E8808 000E5608  7C 65 20 96 */ mulhw context->r3 , context->r5 , context->r4
/*800E880C 000E560C*/ PPC::Runtime::ASM::srwi(context->r0, context->r3, 31);
/*800E8810 000E5610*/ PPC::Runtime::ASM::add(context->r0, context->r3, context->r0);
/*800E8814 000E5614*/ PPC::Runtime::ASM::mulli(context->r0, context->r0, 0x6);
/*800E8818 000E5618*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r4);
/*800E881C 000E561C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800E8820, 0x800E8820) //this is a jump label
/*800E8820 000E5620*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
/*800E8824 000E5624*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800E8828 000E5628*/ PPC::Runtime::ASM::bne(.L_800E8870);
/*800E882C 000E562C*/ PPC::Runtime::ASM::lwz(context->r12, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800E8830 000E5630*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*800E8834 000E5634*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r29));
/*800E8838 000E5638*/ PPC::Runtime::ASM::mtctr(context->r12);
/*800E883C 000E563C*/ PPC::Runtime::ASM::bctrl();
/*800E8840 000E5640*/ PPC::Runtime::ASM::cmplwi(context->r29, 0x0);
/*800E8844 000E5644*/ PPC::Runtime::ASM::beq(.L_800E8868);
/*800E8848 000E5648*/ PPC::Runtime::ASM::lwz(context->r5, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r29));
/*800E884C 000E564C*/ PPC::Runtime::ASM::cmpwi(context->r5, 0x0);
/*800E8850 000E5650*/ PPC::Runtime::ASM::blt(.L_800E8868);
/*800E8854 000E5654*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*800E8858 000E5658*/ PPC::Runtime::ASM::mr(context->r4, context->r28);
/*800E885C 000E565C*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*800E8860 000E5660*/ PPC::Runtime::ASM::li(context->r7, 0x0);
/*800E8864 000E5664*/ PPC::Runtime::ASM::bl(fn_800EA1F4);
RUNTIME_PPC_JUMP_LABEL(.L_800E8868, 0x800E8868) //this is a jump label
/*800E8868 000E5668*/ PPC::Runtime::ASM::li(context->r0, 0x1);
/*800E886C 000E566C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r31));
RUNTIME_PPC_JUMP_LABEL(.L_800E8870, 0x800E8870) //this is a jump label
/*800E8870 000E5670*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*800E8874 000E5674*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*800E8878 000E5678*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800E887C 000E567C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800E8880 000E5680*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800E8884 000E5684*/ PPC::Runtime::ASM::blr();
}