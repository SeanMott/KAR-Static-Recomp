//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_801E32F8.hpp"



void fn_801C80C8(PPC::Runtime::GCContext* context)
{
/*801C80C8 001C4EC8*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C80CC 001C4ECC*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C80D0 001C4ED0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C80D4 001C4ED4*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*801C80D8 001C4ED8*/ PPC::Runtime::ASM::bl(fn_801E32F8);
/*801C80DC 001C4EDC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C80E0 001C4EE0*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C80E4 001C4EE4*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C80E8 001C4EE8*/ PPC::Runtime::ASM::blr();
}