//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80254CD8.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8025017C.hpp"
#include "fn_8024F488.hpp"



void fn_8025BD70(PPC::Runtime::GCContext* context)
{
/*8025BD70 00258B70*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8025BD74 00258B74*/ PPC::Runtime::ASM::mflr(context->r0);
/*8025BD78 00258B78*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BD7C 00258B7C*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025BD80 00258B80*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025BD84 00258B84*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*8025BD88 00258B88*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*8025BD8C 00258B8C*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BD90 00258B90*/ PPC::Runtime::ASM::bl(fn_80254CD8);
/*8025BD94 00258B94*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BD98 00258B98*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025BD9C 00258B9C*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c8, context->r31));
/*8025BDA0 00258BA0*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BDA4 00258BA4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025BDA8 00258BA8*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xb8, context->r31));
/*8025BDAC 00258BAC*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025BDB0 00258BB0*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1cc, context->r31));
/*8025BDB4 00258BB4*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*8025BDB8 00258BB8*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025BDBC 00258BBC*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xbc, context->r31));
/*8025BDC0 00258BC0*/ PPC::Runtime::ASM::bl(fn_8025017C);
/*8025BDC4 00258BC4*/ PPC::Runtime::ASM::lfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1d0, context->r31));
/*8025BDC8 00258BC8*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*8025BDCC 00258BCC*/ PPC::Runtime::ASM::lfs(context->f2, STRUCT_FLOAT_COUNT_1805E2EA4 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025BDD0 00258BD0*/ PPC::Runtime::ASM::li(context->r4, 0x5);
/*8025BDD4 00258BD4*/ PPC::Runtime::ASM::fmuls(context->f0, context->f0, context->f1);
/*8025BDD8 00258BD8*/ PPC::Runtime::ASM::lfs(context->f1, STRUCT_FLOAT_COUNT_1805E2EA0 @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*8025BDDC 00258BDC*/ PPC::Runtime::ASM::li(context->r5, 0x0);
/*8025BDE0 00258BE0*/ PPC::Runtime::ASM::fmr(context->f3, context->f1);
/*8025BDE4 00258BE4*/ PPC::Runtime::ASM::stfs(context->f0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc0, context->r31));
/*8025BDE8 00258BE8*/ PPC::Runtime::ASM::bl(fn_8024F488);
/*8025BDEC 00258BEC*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8025BDF0 00258BF0*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8025BDF4 00258BF4*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*8025BDF8 00258BF8*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8025BDFC 00258BFC*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8025BE00 00258C00*/ PPC::Runtime::ASM::blr();
}