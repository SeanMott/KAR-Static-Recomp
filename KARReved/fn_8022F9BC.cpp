//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_8022D248.hpp"



void fn_8022F9BC(PPC::Runtime::GCContext* context)
{
/*8022F9BC 0022C7BC*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*8022F9C0 0022C7C0*/ PPC::Runtime::ASM::mflr(context->r0);
/*8022F9C4 0022C7C4*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022F9C8 0022C7C8*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8022F9CC 0022C7CC*/ PPC::Runtime::ASM::bl(_savegpr_27);
/*8022F9D0 0022C7D0*/ PPC::Runtime::ASM::lis(context->r4, lbl_804B4C20 @ Get_MemoryOffset_HighBit);
/*8022F9D4 0022C7D4*/ PPC::Runtime::ASM::mr(context->r27, context->r3);
/*8022F9D8 0022C7D8*/ PPC::Runtime::ASM::addi(context->r31, context->r4, lbl_804B4C20 @ Get_MemoryOffset_LowBit);
/*8022F9DC 0022C7DC*/ PPC::Runtime::ASM::li(context->r29, 0x0);
/*8022F9E0 0022C7E0*/ PPC::Runtime::ASM::li(context->r28, 0x0);
/*8022F9E4 0022C7E4*/ PPC::Runtime::ASM::li(context->r30, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_8022F9E8, 0x8022F9E8) //this is a jump label
/*8022F9E8 0022C7E8*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x45);
/*8022F9EC 0022C7EC*/ PPC::Runtime::ASM::blt(.L_8022FA00);
/*8022F9F0 0022C7F0*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xbc);
/*8022F9F4 0022C7F4*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0x104);
/*8022F9F8 0022C7F8*/ PPC::Runtime::ASM::li(context->r4, 0x46a);
/*8022F9FC 0022C7FC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022FA00, 0x8022FA00) //this is a jump label
/*8022FA00 0022C800*/ PPC::Runtime::ASM::cmpwi(context->r27, 0x5);
/*8022FA04 0022C804*/ PPC::Runtime::ASM::blt(.L_8022FA18);
/*8022FA08 0022C808*/ PPC::Runtime::ASM::addi(context->r3, context->r31, 0xbc);
/*8022FA0C 0022C80C*/ PPC::Runtime::ASM::addi(context->r5, context->r31, 0xd0);
/*8022FA10 0022C810*/ PPC::Runtime::ASM::li(context->r4, 0x46b);
/*8022FA14 0022C814*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_8022FA18, 0x8022FA18) //this is a jump label
/*8022FA18 0022C818*/ PPC::Runtime::ASM::mr(context->r3, context->r27);
/*8022FA1C 0022C81C*/ PPC::Runtime::ASM::bl(fn_8022D248);
/*8022FA20 0022C820*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x4c8);
/*8022FA24 0022C824*/ PPC::Runtime::ASM::addi(context->r28, context->r28, 0x1);
/*8022FA28 0022C828*/ PPC::Runtime::ASM::lwzx(context->r0, context->r3, context->r0);
/*8022FA2C 0022C82C*/ PPC::Runtime::ASM::cmpwi(context->r28, 0x3);
/*8022FA30 0022C830*/ PPC::Runtime::ASM::addi(context->r30, context->r30, 0x4);
/*8022FA34 0022C834*/ PPC::Runtime::ASM::add(context->r29, context->r29, context->r0);
/*8022FA38 0022C838*/ PPC::Runtime::ASM::blt(.L_8022F9E8);
/*8022FA3C 0022C83C*/ PPC::Runtime::ASM::mr(context->r3, context->r29);
/*8022FA40 0022C840*/ PPC::Runtime::ASM::addi(context->r11, context->r1, 0x20);
/*8022FA44 0022C844*/ PPC::Runtime::ASM::bl(_restgpr_27);
/*8022FA48 0022C848*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*8022FA4C 0022C84C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8022FA50 0022C850*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*8022FA54 0022C854*/ PPC::Runtime::ASM::blr();
}