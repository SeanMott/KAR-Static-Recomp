//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following



void fn_800D3C74(PPC::Runtime::GCContext* context)
{
/*800D3C74 000D0A74*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x20, context->r1));
/*800D3C78 000D0A78*/ PPC::Runtime::ASM::mflr(context->r0);
/*800D3C7C 000D0A7C*/ PPC::Runtime::ASM::lis(context->r5, MemoryOffset_898 @ Get_MemoryOffset_HighBit);
/*800D3C80 000D0A80*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3C84 000D0A84*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3C88 000D0A88*/ PPC::Runtime::ASM::mr(context->r31, context->r4);
/*800D3C8C 000D0A8C*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3C90 000D0A90*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*800D3C94 000D0A94*/ PPC::Runtime::ASM::stw(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3C98 000D0A98*/ PPC::Runtime::ASM::stw(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D3C9C 000D0A9C*/ PPC::Runtime::ASM::addi(context->r28, context->r5, MemoryOffset_898 @ Get_MemoryOffset_LowBit);
/*800D3CA0 000D0AA0*/ PPC::Runtime::ASM::lwz(context->r29, STRUCT_BYTE4_COUNT_1grGlobalP @ Get_MemoryOffset_SDA21 ( context->r0 ));
/*800D3CA4 000D0AA4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r29));
/*800D3CA8 000D0AA8*/ PPC::Runtime::ASM::cmplwi(context->r0, 0x0);
/*800D3CAC 000D0AAC*/ PPC::Runtime::ASM::bne(.L_800D3CC0);
/*800D3CB0 000D0AB0*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x68);
/*800D3CB4 000D0AB4*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x66c);
/*800D3CB8 000D0AB8*/ PPC::Runtime::ASM::li(context->r4, 0x113);
/*800D3CBC 000D0ABC*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3CC0, 0x800D3CC0) //this is a jump label
/*800D3CC0 000D0AC0*/ PPC::Runtime::ASM::li(context->r0, -0x1);
/*800D3CC4 000D0AC4*/ PPC::Runtime::ASM::xor(context->r0, context->r30, context->r0);
/*800D3CC8 000D0AC8*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3CCC 000D0ACC*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r30);
/*800D3CD0 000D0AD0*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/* 800D3CD4 000D0AD4  54 00 0F FF */ srwi. context->r0 , context->r0 , 31
/*800D3CD8 000D0AD8*/ PPC::Runtime::ASM::beq(.L_800D3D08);
/*800D3CDC 000D0ADC*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r29));
/*800D3CE0 000D0AE0*/ PPC::Runtime::ASM::cmplwi(context->r3, 0x0);
/*800D3CE4 000D0AE4*/ PPC::Runtime::ASM::beq(.L_800D3CF0);
/*800D3CE8 000D0AE8*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r3));
/*800D3CEC 000D0AEC*/ PPC::Runtime::ASM::b(.L_800D3CF4);
RUNTIME_PPC_JUMP_LABEL(.L_800D3CF0, 0x800D3CF0) //this is a jump label
/*800D3CF0 000D0AF0*/ PPC::Runtime::ASM::li(context->r4, 0x0);
RUNTIME_PPC_JUMP_LABEL(.L_800D3CF4, 0x800D3CF4) //this is a jump label
/*800D3CF4 000D0AF4*/ PPC::Runtime::ASM::xor(context->r0, context->r4, context->r30);
/*800D3CF8 000D0AF8*/ PPC::Runtime::ASM::srawi(context->r3, context->r0, 1);
/*800D3CFC 000D0AFC*/ PPC::Runtime::ASM::and(context->r0, context->r0, context->r4);
/*800D3D00 000D0B00*/ PPC::Runtime::ASM::subf(context->r0, context->r0, context->r3);
/*800D3D04 000D0B04*/ PPC::Runtime::ASM::srwi(context->r0, context->r0, 31);
RUNTIME_PPC_JUMP_LABEL(.L_800D3D08, 0x800D3D08) //this is a jump label
/*800D3D08 000D0B08*/ PPC::Runtime::ASM::cmpwi(context->r0, 0x0);
/*800D3D0C 000D0B0C*/ PPC::Runtime::ASM::bne(.L_800D3D30);
/*800D3D10 000D0B10*/ PPC::Runtime::ASM::mr(context->r4, context->r30);
/*800D3D14 000D0B14*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x67c);
/*800D3D18 000D0B18*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*800D3D1C 000D0B1C*/ PPC::Runtime::ASM::bl(OSReport);
/*800D3D20 000D0B20*/ PPC::Runtime::ASM::addi(context->r3, context->r28, 0x68);
/*800D3D24 000D0B24*/ PPC::Runtime::ASM::addi(context->r5, context->r28, 0x68c);
/*800D3D28 000D0B28*/ PPC::Runtime::ASM::li(context->r4, 0x114);
/*800D3D2C 000D0B2C*/ PPC::Runtime::ASM::bl(fn___assert);
RUNTIME_PPC_JUMP_LABEL(.L_800D3D30, 0x800D3D30) //this is a jump label
/*800D3D30 000D0B30*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x454, context->r29));
/*800D3D34 000D0B34*/ PPC::Runtime::ASM::slwi(context->r0, context->r30, 2);
/*800D3D38 000D0B38*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*800D3D3C 000D0B3C*/ PPC::Runtime::ASM::lwzx(context->r3, context->r3, context->r0);
/*800D3D40 000D0B40*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r3));
/*800D3D44 000D0B44*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r31));
/*800D3D48 000D0B48*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x20, context->r3));
/*800D3D4C 000D0B4C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4, context->r31));
/*800D3D50 000D0B50*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r3));
/*800D3D54 000D0B54*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r31));
/*800D3D58 000D0B58*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x1c, context->r1));
/*800D3D5C 000D0B5C*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x18, context->r1));
/*800D3D60 000D0B60*/ PPC::Runtime::ASM::lwz(context->r29, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800D3D64 000D0B64*/ PPC::Runtime::ASM::lwz(context->r28, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x10, context->r1));
/*800D3D68 000D0B68*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x24, context->r1));
/*800D3D6C 000D0B6C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800D3D70 000D0B70*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x20);
/*800D3D74 000D0B74*/ PPC::Runtime::ASM::blr();
}