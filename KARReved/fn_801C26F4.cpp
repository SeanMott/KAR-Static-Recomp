//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_Rider_CheckAnimationEnd.hpp"
#include "fn_801C19C8.hpp"



void fn_801C26F4(PPC::Runtime::GCContext* context)
{
/*801C26F4 001BF4F4*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*801C26F8 001BF4F8*/ PPC::Runtime::ASM::mflr(context->r0);
/*801C26FC 001BF4FC*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C2700 001BF500*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C2704 001BF504*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*801C2708 001BF508*/ PPC::Runtime::ASM::bl(fn_Rider_CheckAnimationEnd);
/*801C270C 001BF50C*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*801C2710 001BF510*/ PPC::Runtime::ASM::beq(.L_801C2728);
/*801C2714 001BF514*/ PPC::Runtime::ASM::lwz(context->r4, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x38c, context->r31));
/*801C2718 001BF518*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*801C271C 001BF51C*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r4));
/*801C2720 001BF520*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x4c0, context->r31));
/*801C2724 001BF524*/ PPC::Runtime::ASM::bl(fn_801C19C8);
RUNTIME_PPC_JUMP_LABEL(.L_801C2728, 0x801C2728) //this is a jump label
/*801C2728 001BF528*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*801C272C 001BF52C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*801C2730 001BF530*/ PPC::Runtime::ASM::mtlr(context->r0);
/*801C2734 001BF534*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*801C2738 001BF538*/ PPC::Runtime::ASM::blr();
}