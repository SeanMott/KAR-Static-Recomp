//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_gmGetGlobalP.hpp"



void fn_80005D04(PPC::Runtime::GCContext* context)
{
/*80005D04 00002B04*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80005D08 00002B08*/ PPC::Runtime::ASM::mflr(context->r0);
/*80005D0C 00002B0C*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80005D10 00002B10*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80005D14 00002B14*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80005D18 00002B18*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80005D1C 00002B1C*/ PPC::Runtime::ASM::bl(fn_gmGetGlobalP);
/*80005D20 00002B20*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*80005D24 00002B24*/ PPC::Runtime::ASM::mr(context->r5, context->r30);
/*80005D28 00002B28*/ PPC::Runtime::ASM::li(context->r3, 0x0);
/*80005D2C 00002B2C*/ PPC::Runtime::ASM::li(context->r4, 0x1);
/*80005D30 00002B30*/ PPC::Runtime::ASM::bl(fn___shl2i);
/*80005D34 00002B34*/ PPC::Runtime::ASM::lbz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x7f0, context->r31));
/*80005D38 00002B38*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80005D3C 00002B3C*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80005D40 00002B40*/ PPC::Runtime::ASM::and(context->r3, context->r3, context->r4);
/*80005D44 00002B44*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80005D48 00002B48*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80005D4C 00002B4C*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80005D50 00002B50*/ PPC::Runtime::ASM::blr();
}