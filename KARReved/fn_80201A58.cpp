//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_80201AD0.hpp"
#include "fn_80201968.hpp"
#include "fn_80201968.hpp"
#include "fn_802019A0.hpp"
#include "fn_802019A0.hpp"
#include "fn_8006A250.hpp"
#include "fn_80069F74.hpp"



void fn_80201A58(PPC::Runtime::GCContext* context)
{
/*80201A58 001FE858*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*80201A5C 001FE85C*/ PPC::Runtime::ASM::mflr(context->r0);
/*80201A60 001FE860*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201A64 001FE864*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80201A68 001FE868*/ PPC::Runtime::ASM::stw(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80201A6C 001FE86C*/ PPC::Runtime::ASM::mr(context->r30, context->r3);
/*80201A70 001FE870*/ PPC::Runtime::ASM::bl(fn_80201AD0);
/*80201A74 001FE874*/ PPC::Runtime::ASM::addi(context->r0, context->r30, 0x70);
/*80201A78 001FE878*/ PPC::Runtime::ASM::cmplw(context->r0, context->r3);
/*80201A7C 001FE87C*/ PPC::Runtime::ASM::bne(.L_80201A8C);
/*80201A80 001FE880*/ PPC::Runtime::ASM::lis(context->r3, fn_80201968 @ Get_MemoryOffset_HighBit);
/*80201A84 001FE884*/ PPC::Runtime::ASM::addi(context->r31, context->r3, fn_80201968 @ Get_MemoryOffset_LowBit);
/*80201A88 001FE888*/ PPC::Runtime::ASM::b(.L_80201AA0);
RUNTIME_PPC_JUMP_LABEL(.L_80201A8C, 0x80201A8C) //this is a jump label
/*80201A8C 001FE88C*/ PPC::Runtime::ASM::lis(context->r3, fn_802019A0 @ Get_MemoryOffset_HighBit);
/*80201A90 001FE890*/ PPC::Runtime::ASM::addi(context->r31, context->r3, fn_802019A0 @ Get_MemoryOffset_LowBit);
/*80201A94 001FE894*/ PPC::Runtime::ASM::b(.L_80201AA0);
RUNTIME_PPC_JUMP_LABEL(.L_80201A98, 0x80201A98) //this is a jump label
/*80201A98 001FE898*/ PPC::Runtime::ASM::addi(context->r3, context->r30, 0x70);
/*80201A9C 001FE89C*/ PPC::Runtime::ASM::bl(fn_8006A250);
RUNTIME_PPC_JUMP_LABEL(.L_80201AA0, 0x80201AA0) //this is a jump label
/*80201AA0 001FE8A0*/ PPC::Runtime::ASM::mr(context->r3, context->r30);
/*80201AA4 001FE8A4*/ PPC::Runtime::ASM::mr(context->r5, context->r31);
/*80201AA8 001FE8A8*/ PPC::Runtime::ASM::addi(context->r4, context->r30, 0x70);
/*80201AAC 001FE8AC*/ PPC::Runtime::ASM::bl(fn_80069F74);
/*80201AB0 001FE8B0*/ PPC::Runtime::ASM::cmpwi(context->r3, 0x0);
/*80201AB4 001FE8B4*/ PPC::Runtime::ASM::bne(.L_80201A98);
/*80201AB8 001FE8B8*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*80201ABC 001FE8BC*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*80201AC0 001FE8C0*/ PPC::Runtime::ASM::lwz(context->r30, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x8, context->r1));
/*80201AC4 001FE8C4*/ PPC::Runtime::ASM::mtlr(context->r0);
/*80201AC8 001FE8C8*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*80201ACC 001FE8CC*/ PPC::Runtime::ASM::blr();
}