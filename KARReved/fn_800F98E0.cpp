//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_800F4B20.hpp"
#include "fn_800F9188.hpp"
#include "fn_800F9970.hpp"



void fn_800F98E0(PPC::Runtime::GCContext* context)
{
/*800F98E0 000F66E0*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*800F98E4 000F66E4*/ PPC::Runtime::ASM::mflr(context->r0);
/*800F98E8 000F66E8*/ PPC::Runtime::ASM::mr(context->r3, context->r4);
/*800F98EC 000F66EC*/ PPC::Runtime::ASM::mr(context->r4, context->r5);
/*800F98F0 000F66F0*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F98F4 000F66F4*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F98F8 000F66F8*/ PPC::Runtime::ASM::bl(fn_800F4B20);
/*800F98FC 000F66FC*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*800F9900 000F6700*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x2c, context->r3));
/*800F9904 000F6704*/ PPC::Runtime::ASM::bl(fn_800F9188);
/*800F9908 000F6708*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F990C 000F670C*/ PPC::Runtime::ASM::bl(fn_800F9970);
/*800F9910 000F6710*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*800F9914 000F6714*/ PPC::Runtime::ASM::mr(context->r3, context->r31);
/*800F9918 000F6718*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*800F991C 000F671C*/ PPC::Runtime::ASM::mtlr(context->r0);
/*800F9920 000F6720*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*800F9924 000F6724*/ PPC::Runtime::ASM::blr();
}