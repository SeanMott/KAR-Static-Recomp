//this code was generated by PPC || "https://github.com/SeanMott/PPC"


//auto-include
#include <PPCRuntime/GCContext.hpp>
#include <PPCRuntime/MacroJumps.hpp>


//this file depends on the following
#include "fn_FuncDoesShit_5.hpp"
#include "fn_8013121C.hpp"
#include "fn_80059520.hpp"



void fn_8015BB6C(PPC::Runtime::GCContext* context)
{
/*8015BB6C 0015896C*/ PPC::Runtime::ASM::stwu(context->r1, PPC_RUNTIME_GET_MEMORY_OFFSET_NEG_HEX_LITERAL_OF_SINGLE_REGISTER(-0x10, context->r1));
/*8015BB70 00158970*/ PPC::Runtime::ASM::mflr(context->r0);
/*8015BB74 00158974*/ PPC::Runtime::ASM::stw(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015BB78 00158978*/ PPC::Runtime::ASM::stw(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015BB7C 0015897C*/ PPC::Runtime::ASM::bl(fn_FuncDoesShit_5);
/*8015BB80 00158980*/ PPC::Runtime::ASM::mr(context->r31, context->r3);
/*8015BB84 00158984*/ PPC::Runtime::ASM::bl(fn_8013121C);
/*8015BB88 00158988*/ PPC::Runtime::ASM::lis(context->r4, MemoryOffset_1255 @ Get_MemoryOffset_HighBit);
/*8015BB8C 0015898C*/ PPC::Runtime::ASM::lwz(context->r3, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x0, context->r3));
/*8015BB90 00158990*/ PPC::Runtime::ASM::addi(context->r5, context->r4, MemoryOffset_1255 @ Get_MemoryOffset_LowBit);
/*8015BB94 00158994*/ PPC::Runtime::ASM::li(context->r6, 0x0);
/*8015BB98 00158998*/ PPC::Runtime::ASM::addi(context->r4, context->r31, 0x878);
/*8015BB9C 0015899C*/ PPC::Runtime::ASM::crclr(context->cr1eq);
/*8015BBA0 001589A0*/ PPC::Runtime::ASM::bl(fn_80059520);
/*8015BBA4 001589A4*/ PPC::Runtime::ASM::lwz(context->r0, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0x14, context->r1));
/*8015BBA8 001589A8*/ PPC::Runtime::ASM::lwz(context->r31, PPC_RUNTIME_GET_MEMORY_OFFSET_POS_HEX_LITERAL_OF_SINGLE_REGISTER(0xc, context->r1));
/*8015BBAC 001589AC*/ PPC::Runtime::ASM::mtlr(context->r0);
/*8015BBB0 001589B0*/ PPC::Runtime::ASM::addi(context->r1, context->r1, 0x10);
/*8015BBB4 001589B4*/ PPC::Runtime::ASM::blr();
}